bileveljump bilevel optimization extension jump package build status introduction modeling solving julia allows users employ usual syntax minor modifications describe query solutions built top mathoptinterface makes strong features reformulate single level solve available mip nlp solvers currently methods based writing using kkt conditions lower dualization example cbc model bilevelmodel optimizer mode sos variable upper objective min constraints begin optimize value option indicates solution method reformulation emplying complementarity xpress gurobi cplex scip alternatively indicatormode equivalent previous main difference relies indicator instead third classic fortunyamatmccarlmode fortuny amat mccarl requires solver basic functionality binary variables drawback provide bounds primal dual efficient bound hints compute passed set hint primals constraint duals call repspectively fallback values otherwise productmode reformulates products solved ipopt knitro aid expansions quadratictobinary note require finally mixedmode default modes described reformulations ctr alternative duality add enforcing equality strongdualitymode eps tolance converts quadratic terms pack acts real data forwarded directly float lead supporting cached moi utilities cachingoptimizer universalfallback constructor instance object advanced suppose access lambda dualof conic write models harder complex mosek cone constrained special standard bridge follows ipo opt print bridges soctononconvexquad