datafitting purpose data driven model fitting framework julia provides basic tools build inspect efficiently fit complex models empirical typical follows observe physical phenomenon instrument wish possibly theoretical extract characterizing quantities represented parameters following benefits handles dimensionality evaluated user provided cartesian linear domain built individual components companion package datafittingbasics implemented combined evaluate final standard mathematical expression component composition supported results cached repeated evaluations parameter values involve calculations speed process involved pre compute based store private structure fixed specific value limited interval dynamically calculated using involving logarithmic multiple sets fitted simultaneously allows minimizers compare performances currently lsqfit cmpfit facilities interactive displaying simple example examples directory ones installation add assume compared analytical formula sin cos simulate measurement random noise realization actual params evaluation rng mersennetwister randn length create measures objects encapsulate dom argument function sigma gaussian uncertainty associated sample array shape scalar latter samples assumed object containing reference prepare comp funcwrap symbol name chose identify valid initial constructors changed val etc finally ready result note modifies updates internal cache resulting counter procedure outlined cumbersome key define improve shown typically joined toghether previous easily splitting named call allowed obtained exactly gained factor execution time perfromance improvement due internally modified minimzer algorithm particular free check simply type repl method look column reset counters resetcounters suppose instruments constrain adding previously creating multiplied calibration account push calib simpleparam posssibility instance observed retrieve available fitresult returned fuction dump fitter minimizer param hashvector fitparameter keys float unc ndata int dof cost status optimal elapsed uncertainties degrees freedom total chi squared uncertanty retrieved println identified separated double underscore plot arrays abscissa multi dimensional domains ordinate gnuplot choose set left measure tit lines pass pair wrapper defined form dimensions arguments vector elements floats return regardless thenumber constructor func args list represent profile effective performance means test wonder introduces penalty loop dummy significant difference looping times default respect former library pure solution minimization strategy differences installed multidimensional defines handle generate appropriate code ndim comes flavours contains tuple coordinates analogous ntuple dimension optionally index select subset combinations outer created providing integer specifying axis cartesiandomain hence requires equal product lengths locations useless collect passed keyword transformed inverse usually flattened version looks flatten lin actually syntax vectors plane analytic accept called populate fill size proceed usual types dedicated quickly contents run tab remember appended settings tweaked running guess low lower limit inf upper bool false true expr string bind supports bounded considering fix remove limits bounds twice change passing required recompile otherwise minizer try influence overwritten situation involves disabled altoghether calling setcompvalue thet completely ignored restore normal behaviour nan module offsetslope offset slope polynomial degree lorentzian represents tilted slopex slopey global coordinate equals direction coeff coefficients normalized norm center centerx centery implies sigmax sigmay angle location width volume rotation fwhm fwhmx fwhmy half maximum profiles scalarparam line ret produce plots layout yerr residuals background psf gsp reshape style palette dots