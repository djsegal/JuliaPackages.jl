baobzi wrapper library interpolator tldr takes function represents adatively tree polynomial interpolants fast accurate basically allows precompute heavy approximation magnitude faster operations functions typically million evaluations depending hardware evaluate fancy implementations log special unfortunately pure julia implementation core written bindings public api call approximate limitations due mutability type constraints callback callable double myfunc generate object language probably shown example fit signature identical testfunc simple import ptr float cdouble unsafe load return center rectangular domain half widths test dim independent variables tol requested precision output file store split multi eval evaluation steps mild performance implications func approx init print stats procedure compare result println pointer save delete free restore rand