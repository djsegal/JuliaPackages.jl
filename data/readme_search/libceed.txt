libceed efficient extensible discretization summary purpose provides fast algebra element based discretizations designed performance portability run time flexibility clean embedding level libraries applications offers interface bindings fortran python julia rust focus finite elements approach algebraic applicable factored form explained user manual api implementation portion documentation challenges methods global sparse matrix representation linear operator respect flops evaluation memory transfer matvec require format represents goal propose supporting implementations data structures enable variety computational device types cpus gpus etc description algebraically easy incorporate wide significant refactoring infrastructure repository ceed software suite collection benchmarks miniapps apis exascale spectral information source code availability research supported computing project collaborative effort department energy organizations office science national nuclear security administration responsible planning preparation capable ecosystem including hardware advanced system engineering testbed platforms support nation imperative details gettingstarted inclusion marker building library required dependencies interfaces built using optimization flags opt march skylake avx ffp contract languages makefile variable set testing examples attempts automatically detect instruction gcc style compiler options host manually specified via cross compiling cuda add dir appropriate directory invocation hip rocm store arguments defaults future invocations configure usr local znver stores variables webassembly wasm emscripten example build standalone executable emmake surface wasmer additional language alongside users install pip clone pkg include cargo toml test produces tap output prove tool distributed perl recommended backends multiple selected runtime resource backend deterministic cpu native self ref serial reference blocked optimized valgrind memcheck undefined value checks libxsmm xsmm gpu pure kernels shared gen generation magma det occa selects available modes openmp dpcpp cpc process intended meshes batches eight interlaced written provide basic functionality partial vectors improve rely instructions vectorized help verify qfunctions values development debugging version headers mode running package linking mkl desired detecting mklroot forced setting environment strictly top located lib default installation elsewhere create link parent proper location currently corresponding found specify adding name platform pass specific properties bit reproducibility operations atomicadd increased generating reproducible results compilation highlighted list comes usage ranging codes external packages mfem petsc nek volume vis bps bpsraw bpssphere cube degree sphere refine fluids navierstokes solids elasticity mesh exo file forcing mms shown sample assumes machine enabled depending specifiers provided option command line sequence stored inside viewed commands requires matplotlib txt target runs comprehensive subsets scripts folder prefix path creating destdir packaging separate steps usual cflags likes static setuptools config addition header easily compile standard libs myapp installed directories systems contact reach team emailing llnl gov leaving comment issue tracker cite utilize please article joss paper author jed brown ahmad abdelfattah valeria barra natalie beams jean sylvain camier veselin dobrev yohann dudouit leila ghaffari tzanio kolev david medina pazner thilina ratnayaka jeremy thompson stan tomov title journal publisher pages doi archival copy maintained zenodo misc shakeri rezgar stanimire wright iii james month dec inproceedings proc scipy aleria arra rown eremy hompson ohann udouit igh evaluations ease ython booktitle roceedings cience onference editor eghann garwal hris alloway illon iederhut avid hupe majora bibtex entries references doc bib copyright following applies unless otherwise stated lawrence livermore llc contributors rights reserved files license notice