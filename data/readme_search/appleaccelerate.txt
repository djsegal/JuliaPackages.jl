appleaccelerate provides julia interface macos accelerate framework moment package access blas lapack using libblastrampoline array oriented functions provide vectorised form common mathematical performance significantly standard libm appear reduced accuracy requirements required run especially forwarding versions mileage vary supported following rounding ceil floor trunc round logarithmic exp expm log trigonometric sin sinpi cos cospi tan tanpi asin acos atan cis hyperbolic sinh cosh tanh asinh acosh atanh convolution conv xcorr sqrt copysign exponent abs rem note slight differences behaviour base domainerror raised instead nan values returned breaks ties fractional choosing nearest value returns floating type int additional available rec reciprocal rsqrt square root pow power fdiv divide sincos example simply load library peakflops avoid naming conflicts methods exported accessed via namespace benchmarktools randn btime function replacebase macro replaces relevant directly operations fill parenthesised infix ops output arrays specified arguments suffixed zeros float warning dimension checks performed ensure input length specifying mentioned docs comment authors indicates safe