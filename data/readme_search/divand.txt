divand data interpolating variational analysis dimensions performs dimensional gridding arbitrarily located observations interpolated analyzed curvilinear grid sense generalization original diva version available https github com gher ulg developed anymore method bears similarities equivalences optimal interpolation krigging allows create smooth continous field collection affected errors practise allowing account topological features physical constraints etc natural initially developped ocean mind applied localized produce gridded fields presentation please cite paper follows publication barth beckers troupin alvera azc rate vandenbulcke geosci model dev doi gmd click bibtex entry installing linux packages gcc netcdf install debian ubuntu apt libnetcdf bin julia run command line sufficient inside download package issuing using pkg add packagespec name rev master recommended source directly green clone button passes manager dependencies manually updating update following restart jupyter notebook kernel testing test script included verify correct functioning toolbox session directory write access example home change homedir tests pass error info summary total passed suite sample internet function documentation main routine called type view list parameters divandrun index html simple basic fours call looks mask len epsilon land sea usually obtained bathymetry topography element tuple containing scale factors coordinates final anomalies respect background correlation length variance returns note core units constraint metrics multiplied corresponding scales lead furthermore output observation divandgo leads memory cpu time tries decide solver direct iterative automatic domain decomposition options level specifically designed climatological earth longitude latitude depth correlations meters makes preparation parameter optimizations normally program calling zero valid guess variable temperature subtract determining crucial corresponds inverse signal noise ratio normalized divided value depends accurate representative sometimes determined arguments dimension statistical determine cross validation choose random relatively subset set compare compute rms difference repeat steps values try minimize ensure robust tools help calculation scaled calculated exactly diagonal covariance matrix costly approximations provided cpme quick estimate aexerr closer theoretical advanced usage additional arbitrary cost form constrain structure vector symmetric positive defined internally implemented notebooks server graphical interface launch conda deps usr browser port path adapted depending installation modified local machine connect thanks lennert bart vliz trick examples efficiently distributed git downloaded url dox php eicxnmgp zip file decompressed placed fun educational web application reconstruct based user location analysed close