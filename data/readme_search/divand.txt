divand data interpolating variational analysis dimensions performs dimensional gridding arbitrarily located observations interpolated analyzed curvilinear grid sense generalization original diva version available developed anymore method bears similarities equivalences optimal interpolation krigging allows create smooth continous field collection affected errors practise allowing account topological features physical constraints etc natural initially developped ocean mind applied localized produce gridded fields please cite paper follows publication barth beckers troupin alvera azc rate vandenbulcke geosci model dev doi gmd click bibtex entry summary scattered noise allowed added inequality handled naturally barriers holes error maps estimated periodicity selected directions enforced multivariate experimental output instead peform kernel density estimations installing julia run command line sufficient inside terminal download install package issuing using pkg add recommended source directly green clone button passes manager dependencies manually updating update following restart jupyter notebook note delete previous installed check status explicitly name master rev testing test script included verify correct functioning toolbox session directory write access example home change homedir tests pass minutes info total passed suite sample internet function documentation main routine called type view list parameters divandrun simple basic fours call looks mask len epsilon land sea usually obtained bathymetry topography element tuple containing scale factors coordinates final anomalies respect background correlation length variance returns examples notebooks workshop core units constraint metrics multiplied corresponding scales lead furthermore observation divandfun minimal set values remaining optional provides level specifically designed climatological earth longitude latitude depth time correlations meters makes preparation parameter optimizations normally program calling heatmap additive produces divandgo leads memory cpu tries decide solver direct iterative automatic domain decomposition options try approaches look multivareof multivarjac zero valid guess variable temperature subtract determining crucial corresponds inverse signal ratio normalized divided value depends accurate representative sometimes determined arguments dimension statistical determine cross validation choose random relatively subset compare compute rms difference repeat steps minimize ensure robust tools help calculation scaled calculated exactly diagonal covariance matrix costly approximations provided accessible via errormap possibly specifying quick estimate closer theoretical advanced usage additional arbitrary quadratic cost form constrain structure vector symmetric positive defined internally implemented server graphical interface launch browser port path adapted depending installation modified local machine connect thanks lennert bart vliz trick efficiently distributed git downloaded url zip file decompressed placed reporting issues include information issue operating system screen preferably setting env debug stack strace message short description produced official builds supported provide tentative solution feedback solved fun educational web application reconstruct based user location analysed close reconsider easy native stable workflow python integrate