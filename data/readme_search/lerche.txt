introduction lerche german lark partial port grammar processor python julia grammars unchanged quick start notes users reads ebnf produce parser provided text conforming produces parse tree visited transformed using rules methods argument rule object subtype visitor transformer name production called define subtypes dispatch appropriate hold information wish concrete type prefix definition contains transform write identical prefixed array containing arguments inline following refer near top module holder line unnecessary future real world example usage file please read documentation converting programs written changes outlined note version macros simplified classes types class method calls replacing self transformers visitors declared single macro definitions preceded transformation variable desired backslash double quote sequences fixed denote byte value caveats guarantee applies sequence characters interpretation language particular differences raw strings string contents instead inside delimited encodes character corresponds analogous obtain input required representing defines represent remain pre processed unicode escapes recognised uxxxx combination insert avoid keywords true false names aliases change simple json implemented signed null pair escaped import common ignore details syntax items parsed immediately passed additional keyword creating matches alias whenever matched children collected struct treetojson replace tuple dict base float match enclosing quotes dropped replaced finally create calling constructor lalr lexer standard test available examples directory study tests correctly constructed inconsistencies earley cyk dynamic errors messages attached bottom exception hierarchy unexpectedinput unexpectedcharacter message included implementation currently noticeably slower despite advantages compilation plenty improvement effort efficiency tricks priority maintaining fidelity yield channels store dictionary local data structures outside ideally multiple mechanism select reliably found