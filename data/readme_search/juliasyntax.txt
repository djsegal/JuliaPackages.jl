juliasyntax julia frontend written goals lossless parsing code precise source mapping production quality error recovery reporting unit testing parser structure similar flisp based speedy interactive editing compilation api support sorts tooling grow encompass rest compiler macro expansion desugaring lowering steps mature replace reference core design opinions implementation independent tree data structures parsestream interface layered balance losslessness abstraction generality syntaxnode ast top greennode parse types fancy generators marginal compilers boring flexible recursive descent status highly compatible parses base standard libraries correctly registry incompatibilities tests usable apis evolve try various converting expr stable helps talk juliacon covered aspects package examples piece currently looks forms function demonstrate offering fine grained control call dump means infix flag using parsestmt filename foo line col file name parens internally representation syntax trivia whitespace comments seen raw green ranges left byte flags nontrivia tokens note parentheses despite text greentree identifier stores token strings shown supplying string stdout mime plain produced default include files meta etc enable causes startup latency reduce create custom system image running sysimage compile script directly shell unix resulting advantage precompilation vscode add following atreplinit repl eval begin import true combine described docs combined precompile execution exec additional detail discussion issue goal losslessly represent called sometimes concrete term formal grammar language including hacks required solve ambiguities avoid closely follows level makes familiar reduces porting bugs lot flexibility designing diagnostics compatibility versions didn choose generator don greatly expressive auxiliary lexing version tokenize modified match newline containing emitted separate inside interpolations separately delimiters actual contextual keywords var doc added moved subcategory nonterminal kinds probably factored fixed additions copy lives due volume changes churn settles figure fork lexer main innovation provides stream writing depend produce phase output spans post processed rust analyzer simpler proceeds consumes flat list lexed input peek examine bump consume produces transfer position emit automatically handled explicitly exception syntactically relevant newlines space sensitive mode modes passed parsestate track range stored integer tag sum type tracked outside cover entire natural ensures cleanly nested children contained entirely parents siblings parent properties naturally isomorphic terminology roslyn construction build performs depth traversal allowing assembled example define normal formed hierarchical tools contains errors job heuristics concretely sense defined layout transformation deterministic assume valid mean allow contain nodes missing placeholders complete xxx placeholder node sequence unexpected removed collecting treating parsed encode simplest downstream question set trees abstract store locations deal deals minimal length bytes included strictly absolute pointer leaf values ignored associated conversion target section describe features concatenation comes traditional hcat vcat row matrix dimensions ncat nrow array arbitrary write third dimension head arg semantically vertical semicolons print horizontal spaces double mixed single producing mixture expressions dimensional results differences consequences reorders child postfix operator calls indicates represented multiple flatten linenumbernode inherently consistent redundant block constructs blocks consistently hand short form conditional elseif body anonymous functions argument lists regardless bindings faithful premature preferring macrocall users easily distinguish macrocalls retains braces ternary immediately lowered global const normalized flatter lambda tuple dot docstrings juxtaposition juxtapose return value zero containers container useful separating delimit removes class tokenization wrap chunk char literals wrapped character literal backticks cmdstring splits triple quoted chunks interspersed improvements inconsistencies dotted dotcall standalone operators keyword unadorned adjoint syntactic consistency suffixed awkward frakentuples parameter flattened instead parameters catch else finally awkwardness optional path importpath bare expression difference struct mutable module baremodule iterations header cartesian iterator iterators neither statements unlike uniquely problematic doesn respect key rule normally expect contiguous loop push collection prefix innermost opposite deviate products separated commas loops presence flattens reconstructed resembles iteration indentation isn excluded content treated separation formatting easier reasoning goes escaping backslashes detecting split individual reassembled alternative reuse interpolation fragment looking marked parseall statement surrounded interpolated handling systematic embedded attach delimiting quotes command pieces dedenting otherwise closure represents implied surface suggests step effectively managing brings benefits manipulating typed view pack bits desired predicates extremely efficient meaning applied manipulated pattern matching closed arguably downsides dispatch express luckily provide elegant expressing algorithms extensible fields generic cater consider analogy quotenode field args disadvantage processes specific processing faster comparisons packages practically classic modifies tried eliminate favor lookahead poorly emitting strict constraints confusing reason occasion genuine finite ambiguity look reset structural avoided particular nearly names productions replaced prefixed notable arglist paren brackets odd corner mixing regard determining separators sections context pairs depending resword entered rearranged reserved words atom unary detect enter earlier behaviors replicate warning paths weird stateful semantics rand info misplaced broken quote rejected chained assignment constant strange bracescat export clause allowed executes afterward presumably mistake pretty awful confused vect maybe accepted strangely octal escape sequences saturate reported xff inconsistent int leading dots named modules relative whereas disregards lead hexfloat trailing float intentional julialang officially supported bug arises pred hex accepting exponent digits detected invalid except isnumtok indexing comprehensions initially distinguished handle safe treat afterwards handles oddities warts questionable syntaxes fairly building dsls macros subtype outer real apparent val mixtures horrible tuples mess appears papered leads inconsistency suffices suffix unclear suppose somewhat consumers reversing inconvenient moving special condition nonsensical rules super near feature situation improved conversely invocations surprising absurdities kinda cute logic similarly unnecessary variation complex identifiers deindentation mismatched middle dedented lines deindented completely arguments multidimensional subtle permissive require explicit indicate flattening printed filter requiring official src scm macroexpand runtime extensions supporting utility issues suggest rewrite existing extended fixing aestheically pleasing obscure scheme learning actually appreciate inspiration barrier developers user documentation schemers refer racket basic addition social factors interpreter ffi inefficient juliaparser direct port abandoned furthermore adding amount divergence start anew fast imported major modifications discussed cstparser extensively languageserver juliaformatter ecosystem hard understand fresh approach focus readiness maximum similarity getting ideas composable clean documented composability feel somehow lightweight comparison heavyweight alternatively additionally common task implementations benefit separates experimenting representations tackle editor sitter modern ready option progress grammars marginally accounting effort spent edge mutually understood chose resources links automatic hygiene implement partial ported commit capture harder persistence ades red optimization overview literate usage close conclusions document internals exactly mine decisions storage team toying idea model untyped attempt reorder layer searches dynamically traversing time canonical remembering placement attached treesink pain significant allocate pass dynamic practice incremental reparsing matter ide scratch wonder implemented interleaved asts particularly public related blog posts discuss library rowan representing toy finalized architecture fantastic highlights transforms events adopt todo rslint linter javascript built infrastructure excellent friendly devdocs backtracking restarting simple share cheaply backtrack simply draining resetting cursor strategies paper concepts messages humans centric nice review elm reasonml flow rustc diagnostic println practical notes parsers encourages handwritten inline mentions pratt precedence articles aleksey kladov matklad author bob nystrom munificent dart devs lexers disorganized covering musings prototyping datastructure tricky symbolic incrementally abstracts irrelevant implicit multiplication symbol analyses augment analysis able act ignoring carrying augmentations flows transformations test preserving indent refactoring rename local variables information pipeline modify report location layers deeper definition scope reparse replacement structurally efficiency immutable thread safety preserve knowledge agnostic challenge terms worse traceable original languages expansions interpose looses forward semi hidden recover correct help introducing opt hypothetical style reasonable carry bridge locationless wrappers sourcesymbol abstractsymbol sourceint sourcestring abstractstring symbols potentially helper changing trick capturing current expands expand occur disallowed lack reasonably continue tail width stack participate closing descend pop frames typical mark bar fails baz unfinished intermediate obvious eof wrong inner ideal frame nesting checkpoint exit restart result infinite recursion comma tell story difficult especially fun research questions learn accurate encounters coding training injecting nonintrusive compact tiny regress generative involves pile systems huge piles tastefully formatted involved people improve contributing choosing familiarize labels intro watching reading march positional tracking requires read event decent investigate driven technique project