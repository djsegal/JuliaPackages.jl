generatorsx iterate foldl humans package defining single easy read source code example creating hoc iterable julia using generator function generate yield collect element array int define iteration protocols existing type struct count start stop base length itr max eltype return true break irtools based protocol derives transducers simple ast transformation collection hard programmer adequate machine carefully processes furthermore llvm compilers produce optimal loop involving importantly directly control happen result complex transformations mental final solves providing syntax sugar arbitrary flow constructs write mean natural sub performance solved generating generates translates definition optimized easily compiler easier characteristics vital fast blocked nested data structures collections heterogeneously typed elements solution applied created third zip implemented wouldn defines expression caveats proof concept writing beta due awful consuming frameworks floops resumablefunctions create flexible blown coroutine implementation mutation choice especially changing mechanism play nicely parallelism pygen python style similar channel effects mike innes exploration idea author