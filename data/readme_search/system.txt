system framework interfacing installed software julia allows trusted relying binaries downloaded artifacts view essential component proprietary secure computing environments package support platforms common linux distributions provides path goal requires header files libraries bindings automatically generated usage providing operating api resources available packages encapsulate dynamically created cbinding import found pkgs directory imported similar revise using occur utilizing loaded add config startup file resource sys libxyz macro syntax referenced string usually free name collisions julian names libc printf alsa libasound val int snd pcm stream playback capture developing pkg unable dependencies light weight special introduces tools facilitate process pkgconf inject dependency compilation command line arguments inclusions prepare definitions declare following example demonstrates module libpkg begin libdep include libs lpkg manually written equivalent look dep lib ldep ddep details grows tested systems