autopreallocation code allocate explictly preallocating hard reuse allocated memory time look friend process step generate record allocations avoid function called functions value args kwargs computing returned object holds reused compute preallocations stored prealloc expr macro mark section ignored neither recorded avoided useful internally nondetermanistic example julia using benchmarktools foo ones generic method btime mib array float const res allocation allocationrecord undef bytes tip rerun program repr limitations despite hip introduction tool lightly requires understand following relatively rare practice occur hugely mature violate silently wrong answer calls patterns call type size failure errors incorrect results test twos dims throws typeerror passed thrown differs won error return result deal track parameters change pattern declare internal wrapping resizes allocates reinitialize reuses means operation push append resized goes resets initial happens safe everytime bar fill kib recording storing output copy due written don deepcopy plain fine mat zeros notice changed threadsafe multiple threads odds recall requirement multithreading disrupts theory task untested appropriate makes remove preventing garbage collection free ton run algorithm ram handled form fair underlies data structures