sparsitytracing automatic jacobian sparsity detection using minimal scalar tracing autodifferentiation limitations alternatives detected pattern code path followed specified variable parameter values conditional logic generates paths result patterns handled workaround choose generate add omitted relying includes structural zeros generated call multiple times merge sparse jacobians package considered interim solution symbolics implemented currently requires awkward workarounds error relatively slow issue models juliasymbolics benchmark results faster demonstrating usage similar hence easy swap earlier sparsitydetection marked deprecated installation julia example import function rober create advec deriv element sparsearrays sparsevector float int stored entry jad length sparsematrixcsc entries implementation algorithm essentially sparslinc described bischof etal except simpler efficient data structure implements type adval real holds value binary tree derivatives including indices leaf nodes initialised vector populated calculated diffrules called calculating rhs ode walks calculates matrix provides robust detecting test purposes actual derivative colouring fast sparsedifftools time increases approximately linearly operations speed approx ghz laptop core slower primitive types operation memory allocation node references christian peyvand khademi ali buaricha carle alan computation gradients dynamic exploitation differentiation optimization methods software doi