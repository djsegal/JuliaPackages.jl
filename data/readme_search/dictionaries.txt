dictionaries alternative interface julia improved productivity performance package somewhat features added low level interfaces tweaked future stable usage contributions welcome please submit issue motivation goal define dictionary set structures convenient efficient functional data manipulation including operations scalar indexing broadcasting mapping filtering reducing comes built abstractdict abstractset supertypes established generic abstractarray implement common compared arrays difficult performant manner aim devise cohesive abstract associative maps supertype abstractdictionary indices arbitrary type iteration containers closely resemble array easier users simultaneously pushing closer getting started share container hash based implementation serves replacement inbuilt dict using isequal key lookup comparison main difference preserves elements iterates faster values value pairs constructing construct list keys element string int constructor accepts indexable preserving prefer function create pair tuple etc final index constructs collection alice bob charlie char accessing mutable settable modified via setindex created rearranged error indexerror contain stacktrace home ferris dev src top scope repl insertable removed insert delete functions note precise sense exists provides upsert functionality update unset useful removing exist manipulated transformed similar iterate easy perform simple analytics sum statistics mean transforming corresponding map iseven bool false true mapview lazy version dropping remainder filter isodd filterview provided lazily occassionally larger allows access iterating pairdictionary ccc unique form mathematical whenever call receive abstractindices return shares base union intersect setdiff symdiff mutating counterparts iterable inds distinct input considered internally hashmap anyway returning vector fast able add remove crucial property subtype getindex guaranteed twice usual defined newly exported predicate disjoint returns overlap according elementwise check otherwise deprecated favour isdisjoint onwards properties little unnecessary lead variety behavior wish operation simply broadcast results preserve uppercase aat bat cat subset satisfy constraint findall finally complicated ambiguity indexer single integers cartesianindex getindices suggested syntax available unambiguous achieved view dictionaryview boolean logical ambiguous luckily convert valued maybe types arraydictionary collections arrayindices default support mutation insertion tokenization svector statically sized similarities immutabledict sort instead hashing dense sorted tree planned factories creation undefined mutated creates optionally undef behaviour setting huge advantage iteratively bottom readme hand initialized fill wider helpful assign missing allow updated zeros ones falses trues handy rand randn float uint output current inserting deleting corrupt suffers restrictions example changing size subarray corruption segfaults holds copy furst empty zero specified traits section primary developers understand internals custom models isassigned mathematic provide protocol implies length override iteratorsize sizeunknown subtyping relationship idempotent follows required indicate expression following rules match issetequal directly simplified essentially synonymous offset similarly setindices implemented issettable trait supports idempotency immutable inserted deleted deletion isinsertable calling throw attempting ensure unlike programming languages change inconvenient differs matlab requiring explicitly push bug prone pattern implementing existing behave expected programmatically trim tokens avoid lookups recomputations hashes token makes especially containing identical refering help multiple tokenizable istokenizable tokentype iteratetoken gettoken hasindex gettokenvalue hadtoken deletetoken istokenassigned settokenvalue notes matching performing equivalent constant time skip entirely calls dealing collisions quick benchmark verifies result benchmarktools btime allocations mib disabling iterative approach mulitple table relatively snappy comparitive baseline try vectors collect line comparitively slow method unfortunately appears idiomatic compare generators possibly easiest gib represents speedup