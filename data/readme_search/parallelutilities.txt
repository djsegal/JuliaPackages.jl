parallelutilities parallel mapreduce helpful functions hpc meant primarily embarassingly operations require split list tasks subsections processed individual cores installation install package using pkg add julia exported pmap related pmapreduce commutative pmapsum elementwise tuple ranges productsplit ntasks whichproc procrange recast localindex extremadims extrema commonlastdim utility query cluster gethostnames nodenames nprocs node quick start addprocs element array int ones myid hcat nworkers float sum usage splits collection subparts roughly equal length approximately equally loaded understood example function defined begin parameter takes values range sample entire space choose xrange yrange zrange strictly increasing total combinations evaluation processors describe simple evaluate explain achieved set parameters receive chunk listed collect six tuples final splitting various described provides versions optional reduction provided distributed key aspects firstly iterator product argument passed arguments task iterators args specifically secondly batches left iterate thirdly sorted rank processor active worker pmapbatch passes elements unwrapped produces result assigned sizes demonstrate check correctness map vec true internals deals calls hood process directly batch reason reading disk obtain execution followed results matter carry former preserve latter convenience chooses operator reduce operation similar loop main difference binary suffix taking individually implemented future call identity mapped returns squares arbitrary reductions carried tree workers compute prod sorts obtained useful concatenations signature fmap freduce iterable received children sets specify return types following variants tmap treduce vector matrix specifying lead type coercion error conversion help asserting converted integers fails aren rand inexacterror progress bar tracked setting keyword showprogress heavier load running artificially induce sleep time progressdesc note track maps merely tracks completed explicitly passing remotechannel mapping pushing status separate exist historical reasons structures removed favour examples talked details distribution lists core equivalently drop productiterator appropriately chosen behaves similarly supports extra features indexing eliminates actually scenarios constructor mpi starts unitrange object loops reverse lexicographic index increases slowest fastest roll expected remainders evaluating fast btime allocations bytes analyze params random avoid compiler optimizations setup value exists val specific computed search variable dim minimum maximum