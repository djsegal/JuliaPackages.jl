simpledraw lightweight self contained package attempts provide efficient drawing methods simple shapes algorithms integer based single threaded table contents getting started notes api basic optimizations visualization benchmarks references license information list background line thickline triangle filledtriangle rectangle filledrectangle thickrectangle circle filledcircle thickcircle bitmap image character textline import create canvas abstractmatrix falses height width shape draw boolean color true print using unicode block characters visualize following types abstract type abstractshape font constants terminus bold functions valid min max extrema position move else considered internal able broadly requires geometric drawn note primitive easily composed complex example struct mycomplexshape fills entries matrix appropriate positions thereby mind provides function commonly invoked follows hood calls automatically care form heavily internally roughly applied pixel offers lot flexibility brush stroke significantly decreases code duplication time adversely affect performance users directly please look source usage documented default safe draws pixels lie bounds don worry program breaking tries outside enabled drawingoptimizationstyle trait subtypes define generic levels optimization iterate lies check completely simply return inside checking neither previous fall slow method clip verticalline horizontalline direcly clipped perform clipping inbounds assuming style implement custom relevant helps visualizing terminal quick effective tool verify expected extremely handy exact coordinates represent low resolution images slightly maximize window reduce size julia versioninfo version commit cfb utc platform info linux gnu cpu amd ryzen radeon graphics word libm libopenlibm llvm libllvm orcjit znver threads virtual cores timestamp yyyy uint median memory bytes int bitmatrix bool char monospacebitmapasciifont string budb zzpekeeougiihkgy zbxmzbnlsotgroclzjtoonnieifuolcsliutyugdmiewkiwmyjlophgypltwbidf follow steps generate double benchmarking clone project git start repl benchmark directory activate instantiate pkg exit rep run toml manifest files bunch outputs produce markdown file named containing final name ensure running multiple times overwrite abstractline sorted visual representation symmetric respect thickness instance conditions hold abstracttriangle abstractrectangle abstractcircle diameter odd bit glyphs existing top pass explicitly sub colored whereas abstractchar abstractfont monospace ascii fonts available text octant supports subset licensed sil included ofl txt src repository faq