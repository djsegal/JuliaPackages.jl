sumtypes basics destructuring sum types using type concrete avoiding namespace clutter custom printing performance sometimes called tagged unions system equivalent disjoint union operation traditional sense rust programming language enums julia calls enum day fancy word container store data pre declared labelled instantiated users statically typed languages prefer makes checking easier dynamic benefit objects obvious helpful sensitive branching heterogeneous enforcing handling simplest version list constant variants basically fruit begin apple banana orange brange typeof true isn particularly intesting enclose explore fundamental derived left hold value constructors exist essentially instances carry record constructed wrapped dummy structs named behave int uninit float notice fewer parameter simply writing specify unspecified field default rely implicit conversion initialized typically return function foo randomly rand bool useful stable base tuple element vector uint isconcretetype ans note unlike false distinct okay actually access enclosed answer exposes macro efficiently unwrapping contents myfruit throw error allergic bananas automatically detect didn exhaustive set runtime penalty inexhaustive specification expected furthermore destructure example contained bound variable added whereas subtracted falls short pattern matching lacking features advanced recommend match mlstyle click expand generates compactified memory layout computed demand parametric extra parameters related means instance proper corresponding exported string require julialang implemented common complaint contribute avoid available top level variables hidden option undefvarerror defined accessed applying operator returns var normal property syntax overloads yourtype mime text plain create forwards call internal sumtype wish customize overload print directly inside package annoying method deletion warnings compilation unityper able provide dramatic speedup versus manual splitting abstractly benchmark code module abstracttypetest benchmarktools abstract kwdef struct complex isbits real eachindex inbounds isa display trial samples evaluation range min max time median mean histogram log frequency estimate kib allocs sumtypetest bytes unitypertest compactify equal differences advantages relative allows flexibility values powerful flexible hide opt advantage doesn allow parameterized information macroexpansion fixed boxed allocation storing heap allocated addition object benchmarks incurred requre