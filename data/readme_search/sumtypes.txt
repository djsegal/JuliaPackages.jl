sumtypes julian implementation sum types sometimes called tagged unions type system equivalent disjoint union operation traditional sense category theory perspective dual tuple whatever means day fancy word container store data pre declared labelled instantiated users statically typed programming languages prefer makes checking easier dynamic language julia benefit objects obvious fun explore fundamental derived using begin left hold value constructors exist essentially instances carry record constructed wrapped dummy structs named construct int float note unlike false distinct recursive list nil cons evil trick mutually reduntant parameter don serious code github actions fine locally true define level enum fruit apple banana orange pattern matching structure lend naturally exposes macro defining calling manually unrolled dispatch automatic machinery series else statements real iscomplete check covered mybool advanced mattern utilities consider mlstyle