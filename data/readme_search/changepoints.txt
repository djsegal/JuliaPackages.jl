changepoints julia package detection multiple time series development suggestions improve noticed bug please post issue quickly pull requests welcome features based optimising cost function segments data implementations efficient search algorithms pelt binary segmentation wide choice parametric functions implemented change mean variance normal errors changepoint interface allows users input testing wild seeded mosum univariate introduction aims model piecewise stationary distributions convention denote start simplest constant setting methods aim estimate location changes penalty approaches minimise quantity respectively form statistics comparing sample candidate maximum statistic evaluate hypothesis test overview mathematical details beyond installation requires version install simply run following command inside mode started typing repl pkg add documentation functionality documented accessible help runs algorithm using specified penalties provided default value log length crops optimal segmentations example samples distribution changing cps sampler usage simulate segment plotting simulation code simulates lengths drawn poisson lambda fixed standard gaussian size freq optionally twice negative likelihood commonly provides variety models constructs generated assumed follow unknown seg normalmeansegment create sequence returns integer array containing indices total user optional third argument convenience provide macro running construct single line takes arguments segmented output specify names symbol replacing parameters values examples expressions normally distributed exponential gamma shape parameter rate list available currently supports plots convenient results explicity loaded plot method exactly selection view penalised comes whenever added assuming correct misspecification instructive look especially range efficiently exploiting relationship constrained versions optimisation information pen set dictionary outputs corresponding specifying called elbow instead avoid local compared threshold maximising locations estimates procedure bandwidth half true minimum var est specifies estimator normalise average min windows alpha determines signicance level criterion eta epsilon references tuning mentioned procedures including detector pick located perform increasing bandwiths detect awkwardly arranged signals multi scale merging messer bandwidths adding close vector estimated enter gset future intend incorporate pruning cho kirch wbs seedbs generalises drawing random intervals entire interval scaling deviation draw call cusum returned tuples decreasing estimating mad return alternatively via reproducible costly extract objects minimising strengthened schwartz ssic kmax upper bound originally developed jamie fairbrother fairbrot lawrence bardwell kaylea haynes kayleahaynes maintained extended dom owens uob