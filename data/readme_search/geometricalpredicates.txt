geometricalpredicates fast robust geometrical predicates generic types implementation follows algorithms described arepo paper illustris simulation license mit bug reports welcome calculations initially performed float bounding max absolute errors unable determine result fall exact calculation using bigint form floating filtering cached repeated testing incircle intriangle current limitations due numerical methods coordinates internally represented addition reside range according ieee constant exponent hence mantissa mapping integers assumed primitive vertices don overlap currently responsibility user tetrahedron lie line usual except restriction easily implemented features missing please issue develop installation add julia pkg create mypoint typeof getting getx gety getz subtype abstractpoint implement custom subtyping abstract rest package type mycustompointtype mass implementing interface expecting function return immutables default region read limitation convenience constants defined min coord representing minimal maximal feasible values triangles tetrahedrons aka primitives triangle mytriangle unorientedtriangle unoriented sense orientation advance immutable change updated calculated created definition inheriting directly geta getb getc goes instead ones mytetraedron mytetrahedron unorientedtetrahedron applications calculate achieved passing flag creation positivelyoriented positivelyorientedtetrahedron negativelyoriented negativelyorientedtetrahedron note oriented real doubt cost actual updating seta setb etc fire relevant pre update efficient setab setbcd combinations exist name contains names alphabetical inner data changed manually giving correct results functions popular test lies inside sphere outside exactly circle possibility infinite radius impossible tell negative means value information regarding direction front arbitrarily chosen performance positive extends lines polygons tests left directionality plane abc normal depends api advantages creating println simple poly polygon inpolygon assumes convex basic properties volume centroid circumcenter circumradius exported hope self descriptive spatial scale free peano hilbert available look nice explanation sorting multiscale sort peanokey key regular grid cells doesn specified inverse finer accurate dependent stuff balance workload computing nodes particles spatially independent method rand hilbertsort keys median policy adjusting distribution parameters defaults links understand mean algorithm delaunay tesselation sometimes multi mssort course adds decent