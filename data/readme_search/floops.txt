floops fold humans provides macro floop generate fast generic sequential parallel iteration complex collections furthermore loop written executed compatible executors foldsthreads various thread based optimized kinds loops foldscuda executor gpu provide simple distributed usage single simply wrap initialization julia using exports begin examples tutorial superset threads particular supports reduction additional syntax reduce zip advantages couple input collection types including arrays dicts sets strings iterators base product precisely performance iterations splittablesbase interface nondeterministicex parallelize parallelizable beneficial heavier workload multiple alternative execution backend tune touching supporting forward manner note threadid commonly conjunction migrating tasks trick changing effective restarting basesize option relative disadvantages flexible internals contribute undiscovered bugs converting native foldl defined transducers unlike powerful cover semantics