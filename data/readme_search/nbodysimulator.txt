nbodysimulator project development moment implementation potential calculations fairly experimental extensively verified test simulation systems aware changes future add package start simulating interacting bodies julia begin using wait coding try run scripts examples folder particles final timestep simulations parameters determine time script execution basic components required system objects interact equations newton law solved process body namely initial location velocity mass massbody structure represents staticarrays svector sake speed advised static arrays covers correct interaction example create entity gravitationally gravitationalsystem constructor const determining experiment span global physical constants borders cell external magnetic electric fields etc arguments nbodysimulation tested tspan types containers particle acceleration defined potentials force generating exports useful function placing similar nodes cubic velocities distributed accordance maxwell boltzmann mean size generate molecules spc water model imported pdb file load path field determines structures interactions gravitationalparameters magnetostaticparameters electrostaticparameters cutoff radius lennardjonesparameters paramters spcfwparameters roh hoh bond angle lennard jones molecular dynamics approximating neutral atoms meaning clarified documentation potentialnbodysystem custom set words user allowed pass move constant dict gravitational electrostatic exists absolutely shown functions tools struct custompotentialparameters potentialparameters abstractfloat creates acting proportionate masses argument calculated method import accelerating accel created instantiate includes params simulate celestial solving specify object usually solve period sim result finally animate solution equal rotating orbit plots animated gif charged obeys coulomb movement simulated chargedparticle chargedparticles following oppositely massive observe rotation light heavy adjusting positions space requires passed sqrt abs centrifugal consisting magneticparticle dipoles rotate represent single domain influence strong specifies vector code construct iron dencity magnetization saturation shorter form calculate properly value substitute magnetostatic magnetically purpose velocityverlet allows conduct dynamic liquids thanks implementations harmonic bonds valence generated pairs comprehensive liquid argon found principles classical beginners define mol dev consists runs thermostat boundary conditions selected instantiated nosehooverthermostat pbc cubicperiodicboundaryconditions recommended boxes popular variants default infinitebox limits nullthermostat thermostating equals implemented oxygen corresponding representing hydrogen atom rel waterspcfw molecule equilibrium distance denotes elastic coefficients usual thermostats particular temperature contains refer post andersen integration andersenthermostat berendsen berendsenthermostat nos hoover langevin langevinthermostat analyzing completed analyze obtain characteristics returns containing differential equation description help interpret des quantities main thermodynamic obtained via calling radial distribution rdf essential characteristic reciprocal averaged grf dependence distances average classic squared displacement msd estimate shift standard grows energy highly module provides total sums kinetic init kin pot tot plotting images export results protein database vmd tool visualizing read data files save fileio interface draw animation moving plot makie recipe