matrixchainmultiply cost multiplying chain matrices vary significantly magnitude real depending multiplication steps applied matrix algorithm described introduction algorithms edition cormen optimal sequence julia easy allow specialization types example arrayfire package block applies specific automatically multiple dispatch system operation optimized installing registered install cloning add pkg clone using function users added scope writing benchmarktools rand benchmark result trial memory estimate kib allocs minimum time median mean maximum samples evals sample mib printout true note optional keyword argument prints flops investigate false default speedups generated size overhead optimization worth existing benefit future improvements recognize situations don analysis eliminate allowing ubiquitous instead repeated run produce single isn unnecessarily faster apply tensor desirable similar attention implementing dynmultiply