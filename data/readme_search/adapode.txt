adapode adaptive multistep numerical ode solver based grassmann element assembly julia project originally started fortran called using makie basis lorenz chain lines odesolve supported solvers include explicit euler heun method improved midpoint kutta classical runge kuta bogacki shampine fehlberg cash karp dormand prince adams bashforth moulton abm projection mesh projector args color assemblemassfunction initmesh sin partial differential equations assembled various additional methods poissonsolver solvepoisson function volumes assemblefunction assemblestiffness assemblerobin return solvesd gradienthat means assembleconvection assemblesd sqrt solvetransport assembleload solvedirichlet modular input meshes dimension following examples trivially generated dimensional domains backwardeulerheat range length time grid abs initial condition assemble float step lhs println poissonadaptive jumps display shading false typeof abstractrange scatter markersize else wireframe red linewidth norm maximum sleep refinemesh select regular exp finite boundary value enabled representations imported external sources automatically generalize manifolds compatible discrete geometry