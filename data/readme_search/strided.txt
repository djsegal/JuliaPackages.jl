strided julia package efficiently arrays dense memory layout fixed stride dimension assumptions strides monotonously increasing provides multithreaded cache friendly implementations mapping reducing broadcasting taking views reshaping permuting dimensions examples running single thread using benchmarktools randn similar btime allocations bytes exp sin permutedims mib export num threads kib design principles stridedview centered type view parent array densearray resulting associated getindex offset assumed furthermore operations identity conj transpose adjoint latter equivalent former eltype inverse corresponding setindex definition enables lazy returns data application indexing union integer colon abstractrange slicing structure retained reshape split subsequent joined size instead overloading separate function sreshape throws runtime error impossible map reduce whenever expression contains objects scalars overloaded methods functions mapreduce exploit evaluate result efficient sufficiently overhead extra preparatory negligible particular involves choosing blocking strategy loop aims avoid misses matters involved applied acts lazily whereas creates copy base potentially provide speedup optimized implemented support multithreading nthreads performance boosted plain strictly sequential provided broadcast operation compute bound sufficienlty complex macro annotation manually wrapping wrap appearing note behave ranges contract user ensures manipulations following expressions preserve replaced sview respectively mentioned throw requested shape incompatible preserving defined index arguments int indexed else versus stridedarray blas lapack compatibility denote abstract types recognized unfortunate dispatching routines based consequence fall default currently matrix multiplication gemm attempt factorizations context todo list inspired axpy axpby scalar via mul rmul lmul relying generic implementation created certainty typically subarray reshapedarray instances constructor act underlying try mimic limited counterparts guarantee respect approach succeed creating wrappers combinations recognised example stridedarrray indeed statically inferred knowing argument similarly looking yield reinterpretarray supported unlike produce regular unsafestridedview unsafe unsafearrays references pointer stack allocated struct isbitstype true behaves respects subtypes abstractstridedview except reference visible garbage collector return value explicit kept alive abstractarray identified explicitly translated planned features wish gpuarray dedicated gpu kernels