strided array views efficient cache friendly multithreaded manipulations build status coverage quality assurance downloads julia package efficiently arrays dense memory layout fixed stride dimension assumptions strides monotonically increasing provides implementations mapping reducing broadcasting taking reshaping permuting dimensions simply accessible annotating block standard code involving operations macro currently supports main provide gpus hardware accelerators reduces complexity implementation discards unsafestridedview type pointer based required avoid allocations prior associated unsafe deprecated structured stridedview representing view contiguous densearray defined separate stridedviews definition device agnostic combination gpu moment methods implemented restricted data examples running single thread using benchmarktools randn similar btime bytes exp sin permutedims mib export num threads kib design principles centered parent resulting set create instances transform eachother actually operators nontrivial manner map reduce whenever expression contains objects scalars overloaded functions mapreduce exploit structure evaluate result sufficiently overhead extra preparatory negligible particular involves choosing blocking strategy loop aims misses matters involved monotonously transpose adjoint applied latter acts lazily whereas creates copy base potentially speedup annotation manually wrapping wrap appearing note behave indexing ranges contract user ensures following expressions preserve reshape replaced sreshape sview respectively mentioned throw error requested shape incompatible preserving function index arguments int colon indexed else multithreading support optimized nthreads performance boosted plain strictly sequential provided broadcast operation compute bound sufficienlty complex spawn threading infrastructure tasks spawned customizable via integer allows spend additional default enabled convenience enable disable furthermore experimental feature disabled apply matrix multiplication divide conquer threaded mul similarly revert setting matrices linearalgebra blasfloat element float complexf typically blas beneficial implement run distributed scheduler hence par percent margin strategies openblas mkl call disables lapack eigen svd help versus stridedarray compatibility union denote abstract impossible types recognized unfortunate dispatching routines consequence fall gemm attempt factorizations context todo list inspired axpy axpby scalar rmul lmul relying generic created certainty subarray reshapedarray constructor act underlying try mimic corresponding limited counterparts guarantee respect approach succeed creating wrappers combinations recognised example stridedarrray indeed statically inferred knowing argument looking yield runtime reinterpretarray supported unlike produce regular planned features wish gpuarray dedicated kernels