mipverify package evaluating robustness neural networks using mixed integer programming mip companion paper details results vincent tjeng kai xiao russ tedrake https arxiv org abs getting started documentation installation instructions quick start guide additional examples couple minutes including installing julia verify trained optimize training accuracy shown vulnerable adversarial perturbations input potentially leading changes output context image classification perturbed indistinguishable original lead misclassifications target category chosen adversary body proposing defense methods produce classifiers robust evaluated via attacks local optima guarantee actually increases classifier produced fortunately evaluate principled fashion option determine test minimum distance closest example call distortion proportion set bounded perturbation causes misclassification increase mean indicates improvement determining proving corresponds solving optimization piecewise linear expressed milp features translates query network solved solver supported jump efficient solves enabled tight specification relu maximum constraints progressive bounds tightening approach time spent refining provide information improve formulation provides level abstractions common types layers transformations connected convolution average pooling functions support bounding infty norm convolved blurring kernel utility multiple samples dataset pausing resuming evaluation running solvers parameters mnist cifar datasets verification sample verified brief modified version table report error infinity bound eps verifier limit imposed gaps correspond reached lower pgd upper soa name wong linf authors ragunathan rsl values column represent previous art described available import listed params citing library article title author journal preprint