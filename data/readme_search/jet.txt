jet employs julia type inference system detect potential bugs instabilities tightly coupled compiler release supports limited range versions project toml file supported package manager install version compatible running unreleased compatibility unknown clone git repository dev ignored note tight coupling means results vary depending accurately quickly expect analyze code assuming evolving time quickstart commands options explanations documentation instability report opt detected function calls using macro similar warntype relies chain broken due dynamic dispatch downstream foldl init error found reduce base var itr core kwcall merge namedtuple mapfoldl identity impl runtime bottomrf typeof errors call stable liberally char pairs self initialvalue acc matching method empty iter iteratoreltype eltype zero packages looks definitions analyses based signatures accurate actual input types generic methods abstracttrees output elided src collect apply stablenode array iteratorsize isz shape axes abstractarray size haslength length indexing idx tree defined index limitations explores functions directly inferable callees argument inferred callee consequently imply entire codebase free increase confidence inferrible integrates snoopcompile sometimes data perform comprehensive limitation collects previously analysis fresh session integration details acknowledgement started undergrad thesis kyoto university supervised prof takashi sakuragawa heavily inspired ruby typeprof experimental understanding checking tool grad published currently available japanese