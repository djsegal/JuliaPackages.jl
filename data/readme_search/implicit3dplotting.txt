implicit plots visualizing parametrized space curves surfaces complicated simply iterate parametrization domain usually reasonably smooth plot result implicitly defined pose proceed similar manner check equations approach problematic firstly numerics potentially instable functions prohibit method unlikely rational actually lie curve surface yield approximately set cope grid chosen arbitrarily thoretically reach machine presision expense reasonable runtime problematically natural notion comes total finding harder proximity insufficient criterion setting closest unique drawing inspiration julia package implicitplots dilemma using library meshing immediately enables sample form mesh covers recall represented intersect corresponding obtain approximation reason utilize previously mentioned meshes afterwards makie utilized visualize outcome installation pkg add dplotting usage main methods consider example former scene transparency false xlims ylims zlims seen following image notice standard options color steelblue transparent shading activated marchingcubes slightly faster marchingtetrahedra search hypercube default settings changed listed readme file input produces picture context generated relative position kissing able reflect intersection properly update backends particular opengl based backend glmakie webgl wglmakie admissible called via boolean wglmode accepted exported true plotting added semicolon follows kwargs vectors determine algorithms displayed skeleton wireframe map dependent value zcolormap viridis schemes marching tetrahedra cubes marchingmodeiscubes samples accuracy display sampling axes axis resolution scale line external window thick linestroke linewidth rescale scaling