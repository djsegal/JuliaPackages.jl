overseer entity component system package supplies lightweight performant friction free implementation ecs paradigm game development concept programming thinking applied broad applications offers clean flexible gradually build application separated blocks remaining due data structured api performance evolving glimpse basics main idea separation logic components systems perform set care usually iterating entities particular combination tend specific allows ideal accessed packed arrays allowing degree flexibility attaching fly implemented lot slightly behaviors introduction specifics understand effectively purely identifier index componentdata attached subtype stored contiguously retrieve store creation accessing stage empty struct except maybe holding settings info subtypes overloads functions update abstractledger requested latter added cares pair symbol vector allow updating desired stages takes creating runs example understanding action simulate oscillation rotation define using geometrytypes spatial position float velocity vec spring center constant omega axis oscillator function rotator theta nnd dot cos cross sin mover spat cause inwards towards causes rotational updates positions iterates rules form ledger comp iterate simulation construct basic generate creates makes created acted following change doesn ocillator act changes move origin forever ready look evolved notice updated sequentially inside associated accesses deleted completely scheduled deletion delete instantly deletes slow check schedule batch executes assigned removed pop examples please heavily inspired entt modified sparseintsets track hold