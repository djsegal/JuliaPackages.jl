arbitrary generate sequences testing overview package allows properties hold data types example bigint implementation ensure addition multiplication commutative associative additive multiplicative identity etc ideal world compiler prove verify human written proof real test basic api consists function type returns iterator produces values produce simple special difficult via random generator expect property tests using base iterators collect commutativity associativity takes motivation haskell quickcheck class similar main difference control probability produced ensures corner receive proper default int creates uniform distribution unlikely obtain integers defining contains methods various built extend provide respective method define struct ast arbstate stateful flatten popfirst generates particular presumably existing wrapper concatenates captures mutable objects julia uint element array generated start specified explicitly continue run output seed pass calling reproducible