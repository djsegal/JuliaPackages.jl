seep data basics anodes arrays instances builds evaluates computational flow graphs julia graph cfg directed acyclic nodes represent values edges dependencies similar single static assignment form program compilers control evaluated time executed defined abstract using specifies size shape variable connected value computed allocate storage define operations constructed instance function described anode allocated statically addition callable provides access operates creating built input constructors types require arguments build calling name string dims int constructor optional helps code write bit cleaner sometimes faster started create hold element call useful assign macro called named exactly treated index won perform arithmetic result operating represents couple compute simple functions begin log creates assigned variables workspace referenced otherwise visible instantiating created six instantiate passed reference evaluating provide available fields populate inputs populated evaluate finally results inspecting stored println information short introduction basic features mor doc directory root source tree supported automatic differentiation gradient descent memory pools convolution pooling