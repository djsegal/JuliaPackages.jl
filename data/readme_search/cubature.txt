cubature module julia provides multi dimensional adaptive integration routines language including support vector valued integrands facilitation parallel evaluation based package steven johnson versus evaluating integrand converges specified tolerance error estimated comparing integral estimates implements schemes adaptation adaptivity hquadrature hcubature pquadrature pcubature accept parameters interchangeably convergence characteristics recursively subdividing domain regions applying fixed rule sub region estimate technically gauss kronrod genz malik dimensions suited functions localized sharp features peaks kinks etcetera portion adaptively add using coarser set elsewhere default choice little function integrating repeatedly doubling fitting degree polynomials stable achieved clenshaw curtis quadrature rules smooth infinitely differentiable ideally analytic low especially accuracy required technical difference sometimes singularities edges algorithm evaluates interior whereas names refer size subdomains denoted polynomial called usage installing include code import integrals real simplest integrate single xmin xmax call similar built quadgk routine val err reltol abstol maxevals arguments return value tuple absolute usually conservative upper bound float accepts argument returns boundaries integrated finite compute infinite semi domains change variables following optional keyword relative terminate precisely tolerances met defaults means ignored useful specify absoute zero nearly cancellations ill conditioned unachievable specifies rough maximum evaluations terminated current returned exceeded example integrates printing coordinates evaluated begin println returning correct answer instead exit exact impossible satisfy floating arithmetic explained quickly multidimensional box coordinate arrays tuples iterable container specifying length components treat via termination criteria array access multiple unit applications wishes course simply times closely related efficient computing separately complex separate imaginary convenient time supports situation allowing fdim dimension independent dimensionality calling integer norm individual vectors errors perform simultaneously output values note contents overwritten setting individually scalar combined decide stop constants terminates converge checks stops true paired applies consecutive pairs mainly care plane opposed linf denotes applied particular sum root mean square infinity respectively provide norms completeness probably doesn matter pick aren parallelizing numerical algorithms actually batches expose information parellelization able evaluate provided vectorized interface exactly described previous sections except store determined runtime varies calls shape depends input holding resulting references numeric rectangular comput appl math vol berntsen espelid approximate calculation acm trans soft implemented library original dcuhre free source license borrowed hintlib rudolf sch rer gnu scientific software gpl unrelated implementing techniques cuba technique adapted gladwell vectorization codes recent developments fairweather keast eds nato asi series dordrecht bull freeman globally http citeseerx ist psu edu viewdoc summary doi tensor product nested power sizes pre computed table weights author written