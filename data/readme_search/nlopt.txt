nlopt module julia provides language interface free source library nonlinear optimization common algorithms including global local using function values derivative exploiting user supplied gradients unconstrained bound constrained inequality equality constraints introduction overview types addresses accessing specialized api generic mathoptinterface mathprogbase interfaces methods documented installation install package manager pkg add windows platforms binaries automatically installed attempt build compiler implements means interchangeably packages modeling jump providing hand written derivatives note exploit sparsity jacobians solver named optimizer takes parameters algorithm stopval ftol rel abs xtol constrtol maxeval maxtime initial step population seed vector storage parameter required optional meaning acceptable except match descriptions absolute feasibility tolerance applied tutorial following example code solves nonlinearly minimization myfunc grad length sqrt return myconstraint opt mma lower bounds inf min objective constraint minf minx ret optimize numevals evaluations println iterations returned output reached languages create object analogous encapsulates dimensionality various functions specify stopping criteria aspects solved model set attribute variable nlobjective nlconstraint start value sets slightly convergence tolerances default options dictionary outputs identical reference main purpose section document syntax unique features detail underlying please refer documentation program include line imports symbols alternatively import namespace prefix type revolves via acting specified dimensions etcetera finally calls perform normally created constructor whereas constants form cobyla replaced symbol copy equivalent error exception thrown dimension immutable changed constructing query ndims string description name setting properties max depending wishes minimize maximize respectively gradient float array passed addition argument empty respect contain partial information listed computed modified indexing operations overwrite contents overwriting instead explicit loop union abstractvector real upper arrays convenience single scalar constant retrieve unbounded tol arguments defaults zero judging purposes call adds replacing remove valued determined result matrix equals results ignored size corresponds termination multiple explained unspecified disabled innocuous property criterion meanings exactly stop found relative inputs exceeds mev negative limit time forced caller wish force halt reason unknown presses ctrl sort throwing inside halted gracefully regarding exceptions throw forcedstop performing desired calling optf optx input giving guess containing optimized contains indicating modifies returning failure codes throws success routines execution caught subsidiary especially mlsl auglag subroutine typically change search determine makes freely original afterwards affecting sizes nonzero steps returns starting stochastic implies heuristic decided individual pseudorandom generated mersenne twister based makoto matsumoto random system sequence run deterministic srand integer reset don called useful randomize limited memory quasi newton stored vectors version versionnumber built standard author initially steven johnson subsequent contributions authors git history