classes simple julian approach inheritance structure methods motivation julia object oriented language traditional sense multiple types share options write common fields manually macro emits manual creates single modification composition instead create type holds include instance structs existing package provides required features downsides suggested writing duplicate maintenance challenges using emit solves convient identify relatedness contain typically recommended involves creating functions delegate outer inner tedious levels nesting course forwarding macros handle repetitive neither packages reviewed oopmacro concreteabstractions combine power simplicity updated class wrapper syntax exploits system provide enabling shared duplicative code concrete defined relationship hierarchy automatically generated abstract saves field definitions subclasses receive parent addition locally constructors passed unchanged constructs shadow represent relationships foo abstractfoo subtype associated superclass note begin equivalently int mutable bar following emitted abstractclass struct function self setfield abstractbar constructor parameterized called set callable introspection relate issubclass true adding keyword results feature inherited specified desired subclass offers special handling mutability user responsibility ensure combinations immutable related defining operate define operates specify name method signature example applies specifying obj stuff args online documentation details