mhlib toolbox metaheuristics hybrid optimization methods project development feedback appreciated collection modules types functions julia supporting effective implementation approaches solving primarily combinatorial emerged python similarities differences main purpose library support rapid prototyping teaching efficient implementations due highly time compilation developed algorithms complexity wien vienna austria contributors nther raidl responsible nikolaus frohner thomas jatschka fabio oberweger installation major versions pymhlib installed repl via add available components note capabilities module provides following candidate solutions various solution abstract type represents vectorsolution encoded vector user provided boolvectorsolution boolean permutationsolution representing permutations fixed elements subsetvectorsolution arbitrary cardinality subset set represented form front selected optionally unselected ones moreover git version function returning abbreviated string current settings global defined independently distributed values parameters program arguments configuration files rely mechanism external schedulers scheduler framework single trajectory iteratively applying gvnss alnss extend towards specific local search iterated variable neighborhood grasp etc alns adaptive demos demonstration purposes simple metaheuristic test subdirectory started shown respective sections runtests recommended demo template onemax basic goal digits binary true graphcoloring graph coloring based maxsat maximum satisfiability binaryvectorsolution tsp traveling salesperson mkp multi constrained knapsack misp independent news