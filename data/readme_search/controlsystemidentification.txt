controlsystemidentification system identification controlsystems examples form jupyter notebooks provided lti space models exist methods statespace sid pem subspace based whereas solves prediction error using iterative optimization method optim unsure try iddata sys auto verbose false robust version svd outliers missing values totalleastsquares rpca estimate model returns object type sidresult accessed arguments data created measurements control signal rank print stuff algorithm parameter tune set value stabilize unstable largest eigenvalue magnitude filtering simulation simulated lsim simulate convert kalmanfilter lowlevelparticlefilters calling perform smoothing etc utilities simple discrete time systems user choose minimize errors arbitrary metrics limited squared result custom statespacenoise ltisystem fields representing dynamics matrix input kalman gain respectively observation stored access thanks getproperty package supports estimating pseudo linear regression estimation special supported sense equivalent transfer function spectral functions tfest coherence usage example generate forward output sequences random linearalgebra randn diagm rand seed steps poles true inputs outputs initial sim helper sysh opt focus predict estimated plot lab colored noise necessitating variances sysn size load disturbance measurement indicated main compare look singular balanced gramian standard balreal representation obs ctrb gramians diag element array float note corresponding extracted visualize bodeplot exp range stop length title plots call signature kwargs sampletime dim vector vectors signals structure chosen plus disturbances stage solved followed refinement metric determining residuals measured default sse norm sum abs regularizer regularization detailed instance achieved solver defaults bfgs additional keyword sent options return identified converted discard innovation contains info zeros predictions essentially runs stationary filter influence extract internals internally optimize parameters automatic differentiation calculate gradients hessians applicable controlled passing manually constructed arx plr basic support armax forms convex solution available closed sample polynomial coefficients gls stochastic montecarlomeasurements particles transferfunction sisorational perfectly recovered reality affected suffer combat regular squares gtls estimator tls total gwtls wtls weighted gplr heavily biased wrongly notice variables regressor contain equally reasonable job recovering fares okay simultaneously performs appropriately sized covariance matrices details uncertain nyquistplot nyquist confidence bounds arma getarxregressor getarregressor low level docstrings help procedures spectrograms extends dsp accept argument create suitable provide spectrum illustrated sin spectrogram window hanning rect requires lpvspectral techniques parametric illustrate sqrt feel generated close free slightly lower obtained subject entry power density unit psd compared hence plotting code log layout plotphase subplot ylims linecolor blue coherenceplot est alpha process left figure displays bode noisy middle illustrates except resonance peak impulse response impulseest impulseestplot fitting fir impulseplot validation assist test training ynv dnv fit couple flag difficult causes solve global constraints stability guess gradient res iterations validate results simplot predplot matlab fig eachindex ploty getindex linewidth dash legend bottomleft syse display top visualized bottom capture struggle capturing indicates expected third choice resources varying ltv ltvmodels nonlinear grey box continuous differentialequations black diffeqflux flux advanced cross interacts file