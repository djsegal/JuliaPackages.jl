commutativerings introduction software start computer algebra system specialized discrete calculations integer modular arithmetic fractional polynomials multivariate galois fields supported seen replacement nemo abstractalgebra serious understood sandbox try simpler api rings freely combined example quotient ring prime frac rational functions coefficients field include ideals major importance mentioned examples elementary structures liberately previously defined fractions polynomial current standard library modules besides numeric subtypes support integers original motivation writing piece sofware tried handle obvious embedding elements julia language exploit package correspondence types algebraic stuctures idea born define abstract concrete objects representing operate class combinations affine homomorphisms strucure respecting mappings differnt natural representation argument methods corresponding domains typical canonical conveniently implemented constructors exploitation contrast alternative defines separate classes keeping explicit link owner structure distinct variants type parameters specify implementation restictions typically categories category struct zzmod int specialisation inclusion element object isa basic binary operations operator homomorphism method constructor usage using starting calculation zzp modulus inv parameter identified arbitrary symbol zzbig bigint fermat little theorem primes univariatepolynomial coeff array gcd error domainerror dividable installation wip version dev git clone https github com klausc press pkg activate activating environment project toml backspace info precompiling test testing summary pass total generic typevars univarpolynom multivarpolynom ideal fraction factorization galoisfields numbertheory enumerations linearalgebra tests passed details name supertype description remarks fractionfield quotientring factor modulo value supports multivariatepolynomial list variable names galoisfield efficient construction complete specified singlton sometimes distinguishing symbols directly purpose special function opposed convenient look mathematical notation variables uni represents principal monom notion equivalent zbig gensym denoted convenience noted zero containing unit generating internally multiple stored achieve form monic univariate attempt standardize reduce base integral domain useful represented minimal serve means natuarally embedded call constructs monomials negative extended operation add bitintegers throw overflow subtract unary multiply power squares divide remainder divrem division div rem classical euclid algorithm gcdx pdivrem pseudo pgcd pgcdx iszero isone isunit invertible deg degree leading coefficient otherwise identity ismonomial short ismonic return monomial polygon isirreducible split trivial factors irreducibles generate irreducible defining characteristic positive dimension vector spaces infinite basetype representative nested depth nesting representant associated corresponds parameterized represent ringclass zzmodringclass val currently containers constant hold values specific paramters unused user deal access provides preferred mode created obtained finite following options available checked irreducibility delivers univariatepolynomials iterator allows apply iterators filter subset num constructing brute force search performed detect generates applying addition multiplication calculated restrict selection multiplicative subgroup time efficiency improved avoiding expensive logarithmic tables size manner maps uniquley construct selected easy obtain root zeros allzeros unique linear matrices vectors und subspaces nullspace null space kernel matrix intersect instesection sum rank square exist inverse det determinant adjugate regular companion collides widened tuple generators groebnerbase bner acknowledgements inspired cocoalib found follows knuths infamous book art programming chapter copyright klaus crusius released mit license