bandwidthbenchmark measuring memory bandwidth using streaming kernels thebandwidthbenchmark julia package citing original source contains following corresponding data access pattern notation store load write allocate variables vectors scalar init initilize array sum vector reduction copy classic memcopy update triad stream daxpy striad schoenauer sdaxpy note include installation add example benchmarks emmy fau noctua showcased readme conducted cluster nhr fix cpu frequencies system bwbench keyword arguments default length nthreads threads niter times repeat measurement alignment verbose false print result table thread information etc compensation factors highly recommended pin specific cores according architecture hand simplest probably set exclusive pinning threadpinning likiwd tools numactl useful true threading enabled total allocated datasize running core function rate mflop avg time min max string float likwid loaded automatically try likwids marker api perfctr mem project math mode fast detailed hardware performance counters output values check prove allocates happened inspecting bandwith associated read region extracted convenience mbytes reads writes naively expect loads factor instead sch nauer additional due written happen usually pass account extra obtain bwscaling measure increasing upper limit scaling results domains numa returns dataframe row kernel name domain considered measured nnuma maximum consider ncores flopsscaling estimate mflops investigate floating exactly based compact scattered benchmark compare scenarios fill physical chronologically socket sockets simultaneously alternating discussion references rrze hpc erlangen sister streambenchmark