modelingtoolkit intermediate representation computational graphs scientific computing purpose common target modeling dsls allow platform model inspection transformation tagged variable specification complex models transformations plug function registration derivative system interact nicely user defined routines abstract form easy humans generate programs manipulate tutorial introductory using please checkout compiler introduction examples example ode build define variables differential equation differentiate dependent parameters label follows derivatives eqs operation builds type array holds tree analyzed odesystem via tell types version automatically determine generated code macrotools myode oop striplines print line begin isa return inbounds else promote map typeof construct staticarrays staticarray similar eltype convert iip var mtiipvar directly odefunction advantages compilation output compile multiple forms including ones specific static arrays functions parallelize calculations based internal cost progress means built top write domain languages optimized julia compilers nonlinear nlsolve systems solve steady previous zero unknown nonlinearsystem nlsys func inplace generates eval zeros element float similarly jacobian users accou dev src utils call enclosing params instead expression world age simply pass val false generalizedgenerated fly sometimes convenient macros support following syntax arbitrary ranges tensors core principles idea mathematical equations require context symbolic manipulations specifications requires ability handle writing comes light quickly dsl lower final result computed process lot repeated ideas creates objects single contexualized level details computation jacobians disconnected allowing reuse packages section pieces mean fundamental mirror intention solving representing treat instance called arguments natural additional mechanisms handling constant represent aware fields described name note necessarily symbol considered identifier sense equality main denotation storing value defines independent parameter depends dependents treated left uncalled index expr rewrite concisely difference excluding empty parentheses format aliased implicit convenience implicitly add values former specifies latter signifies constants simple wrapper store numerical operations basic composition stored datatype expressions hand constructed lhs rhs equivalently differentials denotes respect expanded expand symbolically differentiates recursively cancels appropriate collection constructors interpretations structure argument describe subtype mappings mapped contexts corresponds subtypes knowing names fall intermediates holding subcalculations send utilize contextual information registered register etc macro registers signature cause stop recursing building args nodes graph tracing calls adding amount pre diffrules real traced mechanism sin internals differentiating automatic succinct versions calculated scale larger dispatch accepted relevant method ntuple cos free usage insistence programming friendly functionality accessible interface syntactic sugar construction expands addition account appropriately