bessels numerical routines computing bessel airy hankel functions real arguments written julia programming language self contained external dependencies goal library provide quality implementations accuracy comprimising computational time try match exceed source provided specialfunctions instances don desired digit faster benchmarks currently supports modified spherical positive integer noninteger negative supported return value limited support complex unexported gamma function quick start add package pkg https github com juliamath git using besselj sum infty frac denoted called argument available generic call cos sin bessely besseli exponentially scaled versions cdot besselix version besselk besselkx sequence besselh abstractrange float element vector provides fast generate btime allocation bytes allocate recommended calculate top level outside hot loop mutating preallocated zeros airyai airyaiprime airybi airybiprime domain error thrown details domainerror result returned stacktrace packages oboyu src scope repl report relative errors abs arbnumerics arbfloat compared computed precision set setworkingprecision setextrabits calculations arbitrary thousand random compute mean maximum absolute largest observed near slightly worse brief performance comparisons special separate algorithms domains leading dependent speed increase values ranges significantly similar run apple rosetta api hankelh sphericalbesselj sphericalbessely sphericalbesseli sphericalbesselk current development plans double derivatives respect contributing contributions welcome feature requests suggestions discussions please issue discussion share papers features encounter implementatations differences