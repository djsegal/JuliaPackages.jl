usingmerge package exports single macro differs using merges exported definitions automatically wish started thread time julia knowing realized introduce example gapjm port gap libraries function invariants computes finite reflection benchmarktools debug performance following warning export module main qualified error undefvarerror defined stacktrace top level scope repl eval boot user input replbackend buildworker worker linux build usr share stdlib src run backend home jmichel packages revise kqqw none annoying qualify call timing code import methods btime actually name except conflict names element array symbol ballocated belapsed benchmark benchmarkable tagged benchmarkgroup addgroup allocs gctime improvements isimprovement isinvariant isregression judge leaves loadparams mean median memory params ratio regressions rmskew trim tune warmup method args apply arguments type defining docstring accessible help happens adds doc result process merging current announce determines conflicting optional reexport definition environment verbose true print conflicts resolved executed commands information wrote found hoped modularity benefits modules perms permutations cycs cyclotomic sums complex roots unity pols univariate laurent polynomials mvps multivariate puiseux posets ffields fields designed independent stand importing else merge instead writing unpleasant glue advocate replacing semantics feel nice tool write modify meaning pirating little bit wider context polite possibly types signature program functions struct message printed merged feedback welcome implementation parse output accessing internal structure returned object officially comments functionality documentation please contact