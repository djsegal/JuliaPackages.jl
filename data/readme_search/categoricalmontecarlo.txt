categoricalmontecarlo installation using pkg add description independent categorical distributions unique probability mass vector distribution sum joint formed product marginals assume categories shared indexing constructing sparse representation based original vectors unify multinomial unless trivial identical closed form expression monte carlo simulation provides mechanism computation package facilities collections corresponds possibly necessarily advanced strategies utilized maximize performance computations including fastest julia sampling marsagliadiscretesamplers comparison publicly visible packages addition partitioning favor memory locality cache despite random access nature writes inherent enable thread parallelism iteration space arbitrary dimensional input arrays furthermore reduction supported via interface familiar users dims vararg integer keyword enables additional increases efficiency user wish simulate bearing indices array dimensions summed usage help demonstrate example consider equally weighted coin labeled sided die six scenario flips rolls counts labels sample matrix int montecarlosummary mean mcse std mcsummary future normalizers weight