bsonqs fork bson performance loading composite data types particular stands quick structs appears faster read benchmarks section info usage original package able drop replacement except alias name using const currently load function support exotic compat instead forms parse union string ctx parsectx mmap false provides circumstances compatible noted args linux atleast set true perfomance file partial finally experimental interface lazily document time allows specify type import fio iobuffer doc defaultmembertype parsing val key iterate entire dict lazy useful word calling scan input stream build index considered note automatic caching parsed results specifying concrete skipped hints library repetitive datasets try julia official docs makes heavy generated specific functions compilation means theory highly irregular call dataset contains uncached generic documents platform supports anyway avoid unecessary copies allocations comparison common pass vgg gib mib create benchmark mainly serialization code write writing bug worse please