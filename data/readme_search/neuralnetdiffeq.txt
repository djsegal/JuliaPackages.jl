neuralnetdiffeq repository development neural network solvers differential equations physics informed networks pinns deep bsde utilizes techniques stochastic practical solve dimensional pdes efficiently likes scientific machine learning sciml examples deepbsde solver solving hamilton jacobi bellman equation example dimensions solution optimal control choose classical linear quadratic gaussian lqg governed sde sqrt process pde form terminating condition log sum using terminalpdeproblem write fill initial value tspan zero vector diagonal ones float matrix prob described api docs define nnpdens algorithm giving flux chains chain following hls hidden layer size opt adam optimizer sub approximating solutions desired dense relu spatial gradients time pdealg underlying euler maruyama chosen iterations solves loss evaluation averaging stop goes ans verbose true maxiters trajectories alg pabstol black scholes barenblatt nonlinear extension models uncertain volatility rates derived model results dimension assets portfolio repeat div sigma hide documentation describe terms constructor describes semilinear parabolic methods reverse satisfying terminal estimate dimensionality determined choice exists algorithms solved available differentialequations keyword required specifying internal arguments passed nnpdehan rnn han applicable result stiff low adaptive stepping input output array total timesteps final special argument specifies absolute tolerance exit reaches defualt odes nnode takes ode method particularly efficient parallel based lagaris isaac aristidis likas dimitrios fotiadis artificial ordinary partial ieee transactions kolmogorov considering defined sdeproblem xspan distribution probability density function obtained represents dimenstions distributions defining kolmogorovpde kolmogorovpdeproblem phi nnkolmogorov sdealg realise regression calculate data default classic related packages reservoircomputing implementation echo attractor properties chaotic system