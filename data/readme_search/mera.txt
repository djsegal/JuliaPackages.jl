version documentation build status contact cite mera package amr uniform grid body particle data sets astrophysical simulations entirely written language julia currently supports hydrodynamic code ramses intend provide essential functions load prepare simulation calculations try avoid level abstraction black boxes features easy install update fast memory lightweight reading saving handling loaded processed database framework juliadb efficient workflow functionalities advanced analysis extend interactive script functionality examples tutorials release notes public includes available stable versions following published stepwise slicing select family etc projection function age calculation cosmological runs files significant faster read store time sequence create profiles quantities projected reader sinks gravity histograms phase plots predefined export binary paraview volume rendering equirectangular projections installation tested installed manager repl type enter pkg mode run add equivalently via api jupyter notebook using optionally precompile downloaded dependencies admin privileges download linux julialang org untar favored folder server define alias bashrc file shell home username codes usr bin updates watch github note updating reproducibility requirement scientific process recommend environments independent projects contain list possibility creating ensures programs platforms shared toml added project information activate directory myproject users packages pyplot help exported types listed accessed getinfo typing prompt changes search segmentationfault getindex getpositions missingexception overview info descriptor output header real path string namelist verbose bool return infotype keyword arguments timestep default relative current absolute txt informations printed screen gloval variable true defined methods viewfields generic object physicalunitstype mabe documents dev src filescontenttype descriptortype filenamestype compilationinfotype gridinfotype partinfotype scalestype datasettype environment please ijulia notebooks variables future column created reduce usage computing dealing steadily increasing amount performance required science related libraries low languages fortran relatively development times reduced python modern combines programming numerical syntax simple math compilation allows coding achieve optimized machine fly enhance prototyping readability complex realized short multiple platform dispatch parallelism metaprogramming directly call matplotlib useful links official website learning wikibooks cheatsheet free book thinkjulia synthax comparison matlab forum juliadiscourse courses youtube juliaastro juliaobserver com pycall visual studio based ide vscode atom juno questions contributing feel chat gitter channel bug reports submit issue ideas feature requests welcome easily extended write email manuelbehrendt supporting citing credit software star repository research teaching activities grateful proper academic follow link bibtex license mit copyright manuel behrendt permission hereby granted charge person obtaining copy associated deal restriction including limitation rights modify merge publish distribute sublicense sell copies permit persons furnished subject conditions notice included substantial portions provided warranty express implied limited warranties merchantability fitness particular purpose noninfringement event authors holders liable claim damages liability action contract tort otherwise arising connection dealings