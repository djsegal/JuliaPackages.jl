zeros module provides singular datatypes named zero instances datatype identical represent values respectively light weight alternative staticnumbers subtypes integer common operations etc defined propagate type return correct ieee inf nan example reduces compile time effect value behaviour sometimes referred strong complier able optimisations otherwise julia unicode symbols aliases entered keyboard bfzero bfone followed tab user beware depending font hard tell difference trying convert nonzero throw inexacterror attempting divide divideerror returning denominator usually sign piece code written optimally testzero function change variable equal foo call instead complied specifically input result speed ups outweigh cost branching command pirate base enable rarely method definitions sum terms product factors