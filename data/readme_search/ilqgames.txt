ilqgames framework rapidly designing solving nonlinear sum differential games built iterative linear quadratic game approximations brief introduction benchmarks implementation found short workshop manuscript finally paper demonstrates flexibility performance combining particle filter scheme reason uncertainty real time installation julia repl run using pkg add packagespec url example players controlling single unicycle player controls steering acceleration describe dynamics define subtype controlsystem type implement equation overloading import parameters inputs sampling horizon setup struct uncycle phi svector cos sin costs encoding objectives derive custom playercost simply hand cost function lambda functionplayercost stay close origin indices solve information construct generalgame initial conditions automatic differentiation save specify compute system solver choose ilqsolver converged trajectory strategies visualize path follows position visualization correspond tuple note plot traj call animated instead red green minimal gif equilibrium solution accelerates reach desired speed steers figure