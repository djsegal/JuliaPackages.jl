scratch repository implements spaces api package specific mutable containers data contain datasets text binaries convenient store location compared artifacts space disk user friendly storing files interact file browser event packages simply write designed caches completely managed removed uninstalled current implementation pkg garbage collection owning users request wipe clean unused scratchspaces targeted particular overview usage performed primarily function provides single interface creating getting previously created tied uuid global accessed example creates namespaced module scratchexample using filled inside init download cache downloads resource stores scratchspace dataset url fname joinpath basename isfile return downloaded note initialize relocatable typically bake absolute paths precompiled makes macro identical method except automatically determines calling manually pass slightly verbose incantation wishes delete key natural analog collected listing docstrings methods reference section tips tricks trigger regeneration found empty missing simple check contents directory call run generation dir isempty readdir perform expensive ensures resilient situations deleted called free create shared versions parameter version compile time versionspecificexample toml fine change versionnumber parsefile dirname project const deployed ref string unique major minor allows patch releases share name dealing read times content addressed enables easy transmission machine extensively ecosystem hand easily distributed follow access pattern suited compiled objects results host introspection temporary workspace artifact satisfied cooking ready world immutable archive tarball upload bind export github repo copy hash exists uploading whatever hosting provider prefer line block record mktempdir path tar hosted site exist flow events newly info force true disable logging logs setting julia track environment compatibility tested correctly built aware