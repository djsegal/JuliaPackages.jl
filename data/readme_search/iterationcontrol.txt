iterationcontrol linux coverage lightweight package controlling iterative algorithms view training optimizing machine learning models builds earlystopping inspired learningstrategies related software dynamiciterators installation using pkg add basic idea suppose object squarerooter iteratively computing approximations square root model julia train iterations iteration replace integer argument sophisticated controls lifting method defined definition lifted functionality original step numberlimit info stop triggered stopping criterion control repeatedly applied sequence triggers times signaling current cycle third logs value function evaluated example terminate admits returning loss difference lift enable based criteria threshold demonstration include callback losses float push element array applications sample computed additionally generates user inspectable similarly appropriate access enables prechelt progress modified generalization table otherwise enabled overloaded reference lutz neural networks tricks trade orr springer interface described sufficient conventional parameter tree boosting online incremental ingesting data ingest datum iterator generating items ingested application default passive exhausted details wrapper dealing wrapping implement ingestion simple particle tracking verbose logging inspecting reports keyword verbosity defaulting larger noisier return tuple report tuples generated final accessed withlossdo println false log provided type detailed doc string short summary advanced options omitted description trigger notation identity warn predicate holds error call timelimit hours numbersincebest occurred ago withnumberdo complete cycles withtraininglossesdo batch invalidvalue nan inf encountered alpha exceeds patience consecutive increases item iterable atomic option following returns true specified constructor wrappers modify behavior skip apply louder increase level negative values lower internal useful debugging warning public api composite hood wrapped note functions ordinarily instead expose appropriately implementing abstract implemented functional style six methods compulsory fallbacks takedown namedtuple respectively update initialization bool human readable named count completed nonsensical thrown attempted declare mycontrol anyway called trait serves analogous purpose simplified version calls int flat event counts finished checks supports throw err subsequent events finalization