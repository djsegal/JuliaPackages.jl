multithreadedcaches multithreadedcache fast ish thread safe cache stores pairs deterministic computation api look key available produce value added accesses fall shared concurrent misses coordinate task perform compuatation block caches low contention usually locked single scales naive baseline dict reentrantlock instead alternatives considered approaches include hash table theory package advantage append aspect benefits conventional multi threaded dictionary practice actually true adjustments account migration current design multithread designed sharding space keeping separate lock sub example array sharded prefix differs tradeoff accepts data duplication exchange hopefully julia int init arbitrary threads performance benchmark results measuring scaling recorded info nthreads time serial parallel