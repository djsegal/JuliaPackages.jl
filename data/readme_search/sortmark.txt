sortmark package efficiently benchmarking testing sorting algorithms wide variety conditions example usage add https github com lilithhafner using wow goin whish documented compute errors progress eta failed test set stored fail reproduce error assertionerror issorted output stacktrace log row dataframes dataframerow dataframe index exception alg base sort quicksortalg input vector uint fast bool julia dev src trial algs algorithm inputs macro expansion inlined packages progressmeter verbose top level scope none fancily colored text message hmm containertype type len source key int symbol reverseordering forwardordering positive columns omitted arrays unsigned bit integers reverse whatever means highly unlikely look rand rev true element wait happening specific corner broken coolbeans runs tests don care edge start false time pass passed errored mergesortalg unstable spanning container types lengths distributions spent benchmarks love ignore moving stat generic name pvalue union missing float comparing runtime soring values indicating wheather statistically significant difference pvalues analysis data oggle beautiful loading bar courtesy fun moment printed alot running range doesn sound tried benchmarktools timed benchmark setup sum value times similar recompute stats okay low mean speed ratio estimate looks certianty confint tuple mergesort faster minimum apparently probably huge amount investigate function array simple mergesortal bools incredibly bizzare comparison findfirst hacking repeat fucused study fresh empty afoot etc