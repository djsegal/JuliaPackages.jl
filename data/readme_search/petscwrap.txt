petscwrap parallel julia wrapper awesome petsc library considered fork gridappetsc projects extensively inspired project code directly copied note primary objective enable slepc slepcwrap functions purpose deliver array maybe day package petscarrays install manager pkg add installed machine alternatively installation select designated dir arch environment variables time modify type build contribute contribution remark welcome function wrapped don capable contributing post issue minimum example conventions applied future versions fancy stuff concerned types exact name prefix lower letter vecsetvalues setvalues rule conflicts base instance vecview view arguments names except typed additional fewer args defined original version compat tested complex supported methods wrappers share equivalent matsetvalues furthermore optional level api referred exposed create matrix manipulating evolve according author try follow official examples building documentation docs demo serves test doesn testing procedure equation solved domain using backward finite difference scheme classic method check achieve document highly improved demonstrate calls overview run execute mpirun favorite positive integer import initialize command line passed parsed provide defining string petscinitialize ksp monitor short gmres cgs refinement refine providing argument separate strings mesh step vector specify mpi communicator mat vec set size objects leaving decide distribute preallocated zeros increase performance setsizes options vectors setfromoptions finish setup hand range rows handled local processor rstart rend getownershiprange indicate row starting disturbing regular users checkout convention start various loc getlocalsize collect ones differentiation rembember simply ignores negatives indices insert values boundary condition proc handling index acting setvalue assemble matrices assemblybegin final assembly assemblyend inspect viewer stdout default call matview linear solver setoperators solve system allocate solution vecduplicate duplicate print access development getting restore ref getarray restorearray free memory faculative trigger destroy object finalize triggered automatically script petscfinalize