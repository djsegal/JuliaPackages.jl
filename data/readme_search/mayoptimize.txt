conditionally optimize julia code license build status coverage writing performance reference perform bound checking version assumes valid indices avoid heavily optimized requires loop vectorization mayoptimize package variants available single documentation usage summarized following short example using function foo type abstractarray real optimlevel zero compute sum values maybe inbounds eachindex fill vectorized return note loops preceded macros arguments parameter expression block argument simple macro compiled determined debug debugging performs avoids vectorize provided specified specifying simd hence called decided method dispatcher according abstract types exported calling executes checks bounds finally vectorizes easy provide default users bother choosing instance assuming checked issues indexing makes difference write decide change optimization level installation hit key switch manager repl pkg prompt add https github com emmt packages