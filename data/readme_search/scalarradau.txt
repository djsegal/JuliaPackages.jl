scalarradau module implements radau iia method scalar ordinary differential equation ode julia algorithm famously effective stiff odes implementation follows description chapter solving equations ernst hairer gerhard wanner couple changes found beneficial step size adaptive initial chosen automatically functions implemented expect float dense output continuous solutions using cubic hermite interpolation approximate jacobian evaluation performed finite difference stages matrix static arrays efficient newton iterations useful scenario solved repeatedly conditions example solve range sets system parameters solver specialize directly provided fast slightly differentialequations defining function instead look nice overview methods utility check quick start install package manager add define pass param snippet solves starting returns spaced solution interval control yout xout rtol atol facmax facmin maxnwt maxstp mandatory arguments vector written sorted values sampled form value integration optional argument default type meant scenarios extra information accessible passed whenever evaluated coordinates ascending checked integrity integrating isn backward keyword relative error tolerance absolute maximum fraction increase compared previous minimum decrease kappa stopping epsilon current approximation reduction steps stops throws available options convenient version internally definition nout kwargs specify vectors returned compute identical