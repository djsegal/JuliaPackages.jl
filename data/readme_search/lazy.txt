lazy pkg add provides julia cornerstones functional programming lazily evaluated lists library functions repository neat macros useful don firstly canonical examples using note prepends forget semicolon running interactively semi colon prevents environment trying display infinite list fibonacci sequence defined terms fibs drop isprime prime primes begin takewhile sqrt map filter range head reference available intro laziness unfamiliar means elements aren actually calculated allows perform sorts magic items future square esquares iseven mathematical tricks practically file example represent lines terabyte process letting happen background todo lineseq txt foreach println matter separates arrays huge amount functionality comes libraries including data manipulation simple chaining ultimately speed worse prototype threading pipe values bit operator flexible code lot cleaner putting function calls applied understand etc unlike arguments value preceding treated argument exact name threaded start blocks abstract type represents prepend handling similar names clojure create seq iterator array element constantly repeatedly rand infinitely repeat cycle nest iterated tail flatten takeuntil riffle interpose takelast droplast takenth dropwhile appropriate reduce reverse lazymap reductions remove dorun distinct groupby partition partitionby splitat splitby secret sauce makes definitions usually wrap definition define recursive listable exp