reusepatterns simple tools implement composition concrete subtyping patterns julia warning package provides implementation concepts described namely method forwarding pursue code reusing language approaches suggested essentially workarounds perfectly expected corner fundamental tool possibly built required solve recent discussion available links page consequence actively maintained updated occasionally risk assume author alice wrote powerful extensively user charlie practice actors scenario deployment thoroughly discussed manual third person bob slips wish reuse provide complex extended functionalities sophisticated pattern facilitate mean common inheritance supported check solution aims relieve dealing underlying details seamlessly introduced motivation develop stems following posts discourse topics apply list section installation version install add wrap object structure implemented latter knowing actually original wrapped goal automatically methods calls appropriate example track books forgot pages issue book wishes informations final struct title string base println print hole ground lived hobbit using paperbook int forward edition tolkien key lines macro identifies accepting defines name arguments ones purpose newly defined simply call passing stored field line job objects exports functions macros aimed supporting returns vector properly preview evaluating function syntax continuing previous sort eval main getfield none repl online documentation accessible prepending approach advantages applicable agree particular type architecture recommended julian disadvantages cumbersome involved definitions spread modules recursive users mily etc build composite layers top introduces tiny overheads layer resulting performance loss note tested successfully types ecosystem fails identify proper option look output identified manually missing supports abstract allowing hierarchies node represents desired behaviour fall subtypes feature argument require abstractarray implementations dense strided sparse arrays ranges mechanism stem rigid separation behavior represented interface definition actual machine subtype hence substitutability pushed beyond citing limitation unduly restrictive beneficial consequences surprisingly drawbacks striking drawback pops requiring access data representation annotated protection misuse exactly else parent serious structures contents plus allows overtake introducing concept quasi operatively satisfying constraints called associated ancestors names ancestor constraint implies quasiabstract provided ensure satisfied guidelines exploit straightforward define creation annotations finally hood forget safely fieldnames concretetype pair exclusively return isquasiabstract test isquasiconcrete typeof true supertype inherited free overhead break fields easily fixed adding shown assert pure trait complete examples metadata dataframe topic raised possibility extend dataframes dictionary follow solved dataframemeta abstractdataframe meta dict args symbol functionality added existing polygon drawings comparison consider implementing draw polygons plot store cartesian coordinates generic vertices coords retrieve move scale rotate regularpolygon including represeting regular caluclate length named wrapper providing attach label plotting purposes instantiate produce highlight differences facilities generated files statements appears saved considered identical reflects personal view understood framework lot ongoing encourage reader solutions exhaustive found useful develoip related websites mentioned thorougly pacakges similar packages particolar