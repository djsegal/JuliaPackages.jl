fileio aims provide common framework detecting file formats dispatching appropriate readers writers core functions package called load save offer level support formatted files contrast julia low read write avoid name conflicts packages standard named encouraged extend definitions supported installation install via pkg add usage format registered simple using obj filename data likewise saving inspect determine query stream return object encodes detected sometimes larger available memory unknown infinite length reading audio video socket sense process instead chunk time situations provides loadstreaming savestreaming look bigfile wav try eof frames finally close syntax auto note pre allocated buffer maximum efficiency adding register fmt magic extension registry please pull request edit github dataformat type conveniently created identifier typically contains bytes identify examples straightforward png ascii characters extensions nrrd nhdr beginning necessitating custom function detecthdf hdf fictitious unfortunately faith dicey dcy declare require loader saver imagemagick automatically loaded define loaders savers short form meshio means supports loading multiple specifiers bmp uint osxnativeio osx osxnative priority windows ignored combination unix linux users contribute information exists centralized location implementing code following scope skipmagic skip call method ret implement streams keywords positioned stuff chunklength don forget rest capable dispatch module scoping somepkg args consequently private methods import run naming conflict example names etc mix match styles conventions happens inside throws error conversely input mechanism decoded reader writer user provided responsible closing clean struct wavreader ownstream bool base int decode samples whatever cleanup fallback returned true false choose easily kwargs help api overview typing repl prompt individual