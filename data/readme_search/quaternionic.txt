quaternionic quaternions julia installation using pkg add usage documentation details motivation goal project build complete quaternion type features consider fairly basic package including subtypes rotors pure vector corresponding specialized methods numerous conversions representations represent especially rotations smooth interpolation differentation interpolant intelligent handling distance measures construction random various special types enabling efficient integration angular velocity minimal rotation thorough testing wide variety implementations none tick boxes easy extend particular popular design choices conflict plenty experience programming python fancier understanding geometric algebra coded experimenting static arrays imagine hard coding components rewrite hopefully invisible users