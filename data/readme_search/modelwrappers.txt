modelwrappers utility package makes easier model parameters stated nested namedtuples handles flattening unflattening parameter fields arbitrary dimensions constraining unconstraining corresponding constraint provided using automatic differentation namedtuple user specified function log posterior distribution allows flatten vector returns unflatten convert default discrete flattened type float construct via reconstructor myparameter reconstruct vals vec elements adjust settings flattendefault struct instance following map integer values output flattentype flattenall differentiation functions flattenad unflattenad return based input check differences example assign buffers operations performed allocations usually free arrays involved benchmarktools randn rand element btime bytes kib note nest array structures performance penalty consider consists various unknown estimate custom algorithm common algorithms require argument space operate prior efficiently constrain unconstrain tuple initiate param temporary constructor checks handle value combination initial wrapped modelwrapper distributions normal gamma mymodel providing bijector bijectors valid options moment include fixed val excludes unconstrained flattens taking account constrained constraints able lower dimension includes simplex covariancematrix correlationmatrix bijection buffer zeros int mapped mutable contains field updated samples created strict variable conversion stored create update random rng mersennetwister proposed length replacing current supports usage backends immutable objective data derivative information functor manually add target wrt original included call density sample define unpack myobjective basemodel lprior logpdf exponential llik sum iter eachindex constrains converts conversions finite adds eventual jacobian adjustments transformations evaluated evaluate called frameworks forwarddiff reversediff zygote grad fwd gradient rvd zyg true forward highly experimental suggestions comments welcome reasonable simple src core guidance