reverse mode automatic differentiation static dynamic graphs usage mutable struct linear abstractarray forward loss sum rand val grad object type gradientresult holding gradients input variables scalars tensors returns gradient value structs dictionary field path pairs julia dict tuple symbol array float entry conjunction update function modify fields continue previous example println epoch note simplified doesn actually represent error minimized quickly goes zero realistic complex examples vae custom derivatives add using diffrule macro logistic exp expression stands derivative functions accepting keyword arguments instead import nnlib conv data filter pass yota generate call passed original pad corresponding nodiff pattern variable stops backpropagating tracer tape package steps record primitive operations onto trough recording operation simply list construct directly trace print inp const typeof broadcast cassette collect calls execution divided recorded traced ones default set defined primitives includes beasts getproperty specify argument considered backpropagation executed compiled benchmarktools play compile btime allocations bytes alias ctrace based alternative implementation identical interface capabilities juliainterpreter available name itrace currently supported cuarrays support experimental box integration tested addition cuda transform arrays compatible api highly change device agnostic records time loop iterative return exactly iterations replaying values effect applies standard nevertheless provides pseudo caching results generated tapes eliminate cost tracing avoids repeated optimization tell true feature removed future versions simple optimizations buffering calculation fast sometimes accepts attached buffers additional structures whatever create simplegrad abstractmatrix abstractvector world age concerns apply code lowered codeinfo unbroadcast transpose core