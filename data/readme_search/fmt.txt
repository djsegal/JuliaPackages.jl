package active development api change anytime error checks handful basic types supported fmt python style format strings julia provides language alternative printf string utility functions base formats constructed standard literal prefixed called following example surrounded curly braces replaced formatted floating using float goals fledged supports complete features performant formatter faster lightweight dependencies except library overview str macro exported binding module interpolate variables specification interpolation happens inside replacement fields pair treated ordinal field usually argument arg spec separated colon omitted examples load default binary octal decimal hexadecimal minimum width left center alignment dynamic digits thousand separator addition formatting fstr args kwargs creates applying prints stdout values function arguments positional implicit numbering alice bob explicit keyword box drawing syntax borrowed ported std rust sections details semantic escape double interpreted single backslash escaped characters usual dollar signs special character outside formally defined follows conv identifier expression digit valid fill align sign altform zero precision type note syntactic validity imply syntactically semantically invalid support thousands sequence ambiguous start resolve ambiguity followed leading otherwise basically interpolated currently mixing allowed returns object passed template isa true numbered supplied automatically incrementally independent kinds named variable indicated value context placed name mix immediately return evaluated create foo bar conversion specified converted representation repr suggest converts mark instead avoid allows identifiers content aligned text sense unless indicates margins filled space controls indicating negative meaningful alternate form depending integers prefix added tbd aware padding zeros illustrates difference ignorant integer depends spcifies integral xdeadbeef xdead beef floats specifies description uppercase lowercase lowecase none fixed notation scientific percentage multiplied notations refers exponent similar fractional denoted chooses reasonable range denoting force letters positive infinities nans inf nan respectively whiel analogous letter mentioned multiplies denotes appends specifier shown past rationals reduced numerator denominator slash pointers specify performance carefully optimized naive printing benchmarking script devnull print sprintf const expr formatexpr benchmark printer assert length random seed rand benchmarktools btime result machine compare allocations mib environment cpu amd ryzen gnu linux related projects macros opinion doesn match nature functionality apis simpler