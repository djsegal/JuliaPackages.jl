exceptionunwrapping provides exception handling utilities allow inspecting unwrapping wrapped exceptions mean type embeds common example taskfailedexception wraps task caused fail types salsa api exceptiontype bool unwrap wrapper normal root usage library register package simply adding method mywrappedexception client code catch blocks try boundserror else rethrow finally improve robustness tests via test throws assertionerror possibly multithreaded function motivating stable concurrency break users start using bit weird julia cooperative multithreading designed composable fundamental principle changing syncronous run concurrently changes throw consider silly program handle meaningful action user sort names letter readline libary supposed wicked fast return isa println oops entered empty name please shot unknown error valentin jane element array string happens decides parallelize sorting faster lol won demonstrates args kwargs fetch threads spawn inadvertently broken caller nathan attempt access index stacktrace checkbounds strings basic inlined codeunit getindex daly dev src var int base insertionsortalg mergesortalg promised encounters maybe comfortable depending coming lambda provided directly produced path poorly tested conundrum solution structures execption checks continue despite underlying model check wrapping regardless tasks internally exactly martin terminology causes thrown block situation addressing errorexception top level scope repl covered standard functions stack print display instead dealing term coining refer embed inside add information context mechanism cross boundary