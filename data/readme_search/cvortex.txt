cvortex julia wrapper gpu accelerated vortex filament particle methods library introduction following functionality compute velocities induced collections regularised particles straight singular filaments stretching term change vorticity due viscous interaction redistribute onto grid run runs bit windows linux compatible macos cpu instruction sets obtain maximum benefit opencl igpu includes intel integrated graphics amd discrete gpus nvidia cuda installed appropriate drivers note hypervisors programs allow virtual machines virtualbox don pass hardware compatable multicore implementation add package system pkg remembering access environment binaries automatically downloaded documentation ordinary help syntax type repl particular topic example velocity examples using import properties start latter scalar startp rand coordinate endp fvort mesp measurement location vel returned float array length computations suppose vectorise computation influence startps endps fvorts create suitable accelleration multiple matrix vels desirable context ring direction function included nvels coords real directions vector called measured blobs whilst isn stability implements regularisation struct regularisationfunction functions relevent method obtained pre programmed routines reg planet planetary winckel winckelmans gauss gaussian actually allows schemes algebraic normal additions required distance radius roughly represents finest fidelity field resolve consequently overlap solution positions vorts single sized aren supported rate computed dvorts visc dvort inducing kinematic viscosity variables characterised position vorticies stretched leading kernel redistribution redistributed fix introduced spreading scheme encapsulated redistributionfunction created lambda recommended discontinious cause numerically dissipative chosen density negligible vort max optional parameters designed stop lots vorticities threshold discarding value discard implemented proportion average possess kept discarded distributed remaining hard limit equal result fewer mixing mix include unless willing cheat somehow addition putting coord strength assumed contolling accelerators computers probably control found integer index acclerators controlled investigated name accelerator unique share product purchased vega gfx investigate enabled returns true false enable disable potentially faq return underlying code floats manufactures cripple double precision speed consumer level capability spec discretisation lead error computing cost compatability performance benifits huge program hanging supposedly dodgy especially available architecture theoretically targetet msvc gcc clang multithreading openmp acceleration profile compiled architectures mac lack compile test sufficiently keen bean source copy shared build directory faster complicate interface tailored time calls initialisation kernels thats questions expected devices sufficient target objects complicated sucessfully encountered icd loader didn device runtime properly additionally driver installers liable overwrite files running machine check passed hypervisor capable