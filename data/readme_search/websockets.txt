websockets server client protocol julia overhead message layered tcp http establishing connections getting started package manager add paste repl using serverws req response writeguarded hello readguarded handler wshandler connection count async logger websocketlogger serve port task runnable messages transfer encoding chunked data success println stderr received string websocket connected warning workqueue inconsistency detected popfirst queued close access inline documentation look examples folder testing files demonstrate variety benchmarks servers running separate processes oposed asyncronous tasks originally api remained unchanged depends ambitious development functionality implemented directly downstream lag version avoid borderline bugs tests import methods rely imported listen instead possibly previous release capped issues versions released read write entities program svg file web browser containing javascript connecting adding interaction graphics enjoy low latency speed minimum edge coding implement send subprotocols typically subprotocol sensor input text display registered remote controlled hardware relay user backend simulations build network including clients convenience functions gatekeeping suited interactions via cross platform applications electron workload time moved resources error checking code reduced preferably passing arguments compiled security advantages evaluation tips putting handlers coroutines process advantage practice modify page responses include limited tokens address wsuri readguared blocking easily reading indefinitely function example timeout compression currenlty adaptable local probably gain worry milliseconds quirks warm transmission pause avoided heartbeats performance missing garbage collection increases semi random intervals visible benchmark plots memory allocating prefixes wslog accurate accurately track sequences logging debugging servews run directed channel docs errors logged debug statements set level prefer coroutine approach sent serving pages internet nice developing locally comments source help features section planning contributions welcome current immutable removes ratelimiter integrates closely resembles consolelogger standard library additional closer integration core introduce receiving ping pong return boolean indicate failure reason except contain currently pending facilities alternative packages dandelionwebsockets direct implementation updating updated dependency dropped compatibility stated project toml kept claiming compatible restraints graph defaultoptions changed default options behaviour considered bug result closing don call etc syntax removed wrap requesthandlerfunction accepts called handle replaces request accepting consider taking keyword option values changes minimal keywords cert key accepted mbedtls sslconf sslconfig upgrade bevaviour try overrule list type serveroptions corresponding fields reside optional tcpisvalid ratelimiting performed outside pass rate limit supported redirecting logs ratelimit counter intuitive slowed provided sereroptions past able notice tiny improvement issue additionaly exports driven restructuring types main interface intentionally change origin qualified introduction require field generate unique counters similar bencmark browsers countbrowser handling examine websocketsclosederror save wsserver websockethandler wrapper httphandler handlerfunction target orgin recurse center