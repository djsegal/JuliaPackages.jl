documentation build status doi explainable julia using flux package implements interpretability methods visualizations neural networks similar captum zennit pytorch innvestigate keras models installation supports install repl run add explainableai example lrp explain image castle classified pre trained vgg model metalhead vision http fileio imagemagick load url pretrain true layers strip softmax flatten chain input uri img preprocess imagenet reshape whcn format xai method analyzer expl analyze heatmap directly explanation activation output neuron corresponding street sign class specifying position heatmaps implemented analyzers shown following table red color indicate regions positive relevance towards selected whereas blue negative epsilonplus composite epsilonplusflat epsilonalpha beta flat epsilongammabox inputtimesgradient gradient smoothgrad integratedgradients code generate found video demonstration check talk juliacon currently rules zerorule epsilonrule gammarule wsquarerule flatrule zboxrule zplusrule alphabetarule passrule design goals extensibility custom composites easily defined extended roadmap future include patternnet deeplift lime shapley values via shapml contributions welcome acknowledgements adrian hill acknowledges support federal ministry education research bmbf berlin institute foundations learning data bifold