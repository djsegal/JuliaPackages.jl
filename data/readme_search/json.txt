json package provides parsing printing pure julia installation type add hit return repl pkg basic usage import parse string stream data structures array dict abstractstring entries documentation print union integer abstractfloat bool abstractdict abstractvector writes compact extra whitespace indentation representation supplied indent newlines specified zero applied recursively nested elements returns dicttype inttype int parsefile filename mmap true parses indicates dictionary associative function instance objects parsed defaults built passed additional functionality example datastructures assuming installed pass ordereddict maintain insertion items object defaultdict missing found keys index result argument controls integers file recognized otherwise float save space alternatively input bigint subtype real jsontext wrapper representing formatted text inserted output lower define custom serialization rule particular value directly serialized help details customizing users default behaviour inappropriate mechanisms customize method writer structuralcontext cosmetic properties pretty supported provided examples applications appropriate include formatting demands maybe compliance standard formats syntax serializations control translation instructions writing mentioned sufficient user defined overriding deleting predefined globally affect module dangerous piracy application includes commonly requested extension serializes nan infinite values inf contravention methods controlled following signature expected write based rules usually required handled level manner raw ordinarily boilerplate recommended mutable struct mycontext settings context goes structural similar existing contexts instead abstract jsoncontext field preferred implementation replacing avoid requirement regardless subtypes omitted commonserialization called vector pair written requiring newline support indenting vectors dicts separate unless element exists requires detail relied delegate explicitly delimit key indicate start begin specialized available specific byte underlying note enables act etc base uint null safe calls escapes adds double quotes content elt seperate follows none nulls compatible python literal notation pyon wraps wrapped delegated specialization pyoncontext eval pyonprint obj prettycontext stdout sprint cosmetics unimportant converted equivalents arrays changed abstraction specializing instances creating restrictive convert standardserialization added packages types create inherits extend override suffices subtyping except tag taggednumberserialization typeof recursive call constructs stack overflow using toy fine overhead constructing constructed tagged deal complex simply eliminate intermediate implemented carefully calling documented careful difference encapsulated convenient inteface desired inherit choose scratch useful wishes enforce strict throws errors attempting serialize aren means serializing including booleans strings