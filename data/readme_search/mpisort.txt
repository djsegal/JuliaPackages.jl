mpisort don eggs basket sorting elements spread processors processor able hold difficult source implementations charm library provides function distributed mpi based algorithms following standard julia base sort signature moment optimised algorithm provided sihsort sampling interpolated histograms pronounced sigh related minimum inter rank communication memory footprint features require data fits single node comparison additional optimisations numeric threads shared local arrays sizes try balance held abstractvector including accelerators gpus todo test type inference wonders implements api naturally custom comparisons orderings etc example file run mpiexec using random initialise communicator ranks index init comm world nranks size generate array rng xoshiro num rand alg sorted print sequentially stats barrier note redistributed nodes vector change hence input mutated potentially returned reason return value exact inputs settings automatically doesn save reverse specify explicitly rev true key splitters splitting integers specifying sorter default quicksort passed mysorter pass sorts collective gather bcast reduce alltoall allreduce alltoallv aware please issue total frac epsilon samples extracted log except final redistribution length depends involved scalable thousands spare benchmark references builds prior art harsh kale solomonik histogram followed main ideas theoretical results deterministic original interpolation sundar malhotra biros hyksort variant hypercube architectures shi schaeffer parallel regular highly john lapeyre integer logarithm byrne wilcox churavy bindings message passing interface absolute heroes joy license mit licensed enjoy