offsetarrays documentation build status code coverage version introduction provides julia users arrays arbitrary indices similar found programming languages fortran offsetarray lightweight wrapper abstractarray shifts indexing performant parent array usage construct specifying axes origin axis indexed values fall ranges example using float reshape matrix start base oneto eltype index particularly useful opposed convenient begin examples refer common starting wrap integer irrespective libraries linearalgebra require passing shifted lead error diagonal argumenterror offset supported obtain view passed vector restore original able automatically infer practice adopting applications easy understand interface handling conventional requires extra care otherwise crash return incorrect results read julialang information briefly summarize practices package authors support function don internal functions consume standard based doesn change improve defined behavior custom instance linear algebra multiplication agreed conversion helper check throw meaningful intend recommend add real computation instead size length implementations assume writing loops eachindex performance overhead type linearindices cartesianindices allow loop multidimensional efficiently worrying test declare ensure confidence run strange situations numerical correctness issues inbounds inappropriately assumption debug purposes bad idea bounds uncover potential bound errors