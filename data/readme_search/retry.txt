retry macros simplified exception handling repeat try delay protected ignore julia catch statement catches exceptions regardless type error code examples manual involve mathematical errors occur immediate context block assume possibility unexpected hence rethrow technical computing tasks probably reasonable typical systems programming deal multi layered distributed service stacks interfaces external resource contention demand fine grained filtering simple expression loops confidence unintentionally caught ignored include conditional logic appropriate action according handled approach cumbersome comparison richer mechanisms provided languages careless omission retrhow causes resulting behaviour hard debug macro extends automatically insert rethow provide unambiguous syntax specific consider following call create authentication profile aws virtual machine iam createinstanceprofile instanceprofilename name typeof awsexception entityalreadyexists allows note check accessing condition wrapped inner thrown treated false generated retains automatic features adds support example tries times download object recently created storage replica serving request copy sometimes implements exponential backoff algorithm randomised jitter timely retries avoiding due load server return bucket path nosuchbucket nosuchkey raised fourth attempt called dealt stack frame begin result sleep rand continue break deals temporary network warrant delayed tried immediately directing http uverror status uri headers location final creating sqs queue exists deleted creation createqueue queuename xml queueurl queuealreadyexists delete simplequeueservice queuedeletedrecently println waiting minute ocaws