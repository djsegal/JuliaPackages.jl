argos extends power system modeler exapf interior solver madnlp solve optimal flow opf entirely julia package structured follows src evaluators various optimization implement callbacks objective gradient hessian required algorithms augmented lagrangian algorithm implemented targeting primarily resolution scale gpu architectures wrappers wrapper mathoptinterface nlpmodels installation install default manager add check expected please run test command tests cpu available cuda quickstart function entry takes input path matpower file solves associated space ips data fullspace argument specifies formulation inside implements classical powermodels alternatively using reduced dommel tinney dommeltinney fullspaceevaluator whereas reducedspaceevaluator evaluator instantiating simply amounts nlp flp initial variable computed control throughout obtained refresh structures update refreshed evaluated jacobian moi nonlinear compatible optimizer ipopt tolerance newton raphson subsolver set rawoptimizerattribute tol solution optimize wrap model opfmodel obj wrapped leverage juliasmoothoptimizers deport kernelabstractions core operations hence deporting computation accelerators straightforward inherits behavior instantiated cudakernels load backend argoscuda device cudadevice kernels avoid memory transfer host sparse linear algebra handled cusparse factorizations performed cusolverrf via loaded included lib parallel batch evaluation instead computing vector product products activate specify perform nbatch note instances demanding terms