cxxwrap package aims provide boost python wrapping types functions julia idea write code wrapper liner wrapped library available mechanism registered compiled dynamic loaded data provided interface generate accessible passed raw function pointers regular don argument return type conversion std lambda expressions automatic arguments wraps methods automatically user compiler installed supports gcc clang macos users means xcode difference cxx directly access using macro facing task authors options ccall completely line load latter approach translating existing bindings based easier features support lambdas classes single inheritance abstract base trivial converted isbits immutable template map parametric instantiations listed default copy constructor mapped defined class facilitate calling installation pkg mode repl add depends libcxxwrap jll manage binaries readme information build force version hello world example try reproduce tutorial suppose expose following module called cpphello string greet exposed follows include jlcxx hpp define mod method shared wrapmodule joinpath path built lib libhello init initcxx call result found cpp examples directory project test note precompilation compiling recommended compile cmake discover libraries testlib sequence commands mkdir dcmake release prefix sourcedirectory config obtained windows msvc cross incompatible visual studio easy check git source details entry multiple modules appropriate stuff name specified explicitly specific specify dlopen flags rtld global supplied third optional cxxwrapcore stl libdl extensive performance including arrays includes measurements overhead require extra appears expected exposing consider struct const message msg void set cout destroying endl defining cpptypes adds taking finally calls pointer free object manually added creates finalizer disabled adding false actually builds related mutable allocated boxed structure worldallocated ptr cvoid attached deletes held variable concrete letting scope trigger delete responsibility caller lifetime resulting generation considering fpointer worldref thunk cconvert creating warning matters info immutables bits checking null values returned checked isnull setting override revert behavior current unset abstractfloat double float val encapsulate inherit static cast virtual mydata supertype datatype looks associated reference convert bref aref allow figure correct hierarchy time namespace typedef variant useful inheriting teuchos parameterlist abstractdict value auto multi vector typevar multivectorbase vectorbase enum strongly typed myenum enumvala enumvalb cppenum constants accept natural equivalent mapping complicated parameter advance requiring deviation syntax typename templatetype apply decltype wrappedt generic placeholder created exist fulfill requirements functor takes instantiated actual shown import parametrictypes combination applying combinations parameters shorter constructors destructors create memory returns garbage collected arg contructor standard notation easily elements wvec returning array operator overload overloading wrap omitting calloperator int course logical overloaded signatures generated half yields desired basis strictlytypednumber strict yield accessed customization customized passing uint normally overloads integer due imposed size platform fixed equivalents named cxxlong implementation alias otherwise table overview aliases bool cxxbool char cxxchar wchar cxxwchar signed cxxsignedchar unsigned cxxuchar short cxxshort cxxushort cxxint cxxuint cxxulong cxxlonglong cxxulonglong references simple treated allows changing referred writepointerref ptrref ptrmodif ref modifies mydataallocated modification convention boolean cuchar pass boolref strictly speaking representation relies undefined sidestep writing smart currently unique weak supported transparently smartpointer factory swf explicit dereferencing custom mysmartpointer specializing issmartpointertype true constructorpointertype marks enabling referenced indicates constructed relation operate tricky objects additional cxxbaseref signature change cumbersome enter cxxdereference declaring makes changes union dereference calculated resolves exceptions exception abort program avoid intercept thrown intercepted tuples containers tuple header libcontainers export native arrayref conveniently provides basic functionality iterators read accessor push appending primitive sometimes determined elsewhere api translate mymodule larger blob heap sense constarray implements exposes safely natively dimensional sizes matrix definition skipped column major reversed display file included constant replacing owned direct convenient boxing juliafunction invoked max internally slower safe cfunction checks throw runtime error incorrect callback testf func incurs applied times stored safecfunction inside appropriately extendedtypes libextended extendedworld matches exports macros replace readmodule separately wraptypes wrapfunctions introduces mappings stdvector stdstring vectors contains collections complete specializations getsecondaryworldvector getsecondaries linking wrappers requires target link command cmakelists txt breaking begin exists instead expects chosen removed foo symbols corresponding declared statement maps abstractstring ismirroredtype isimmutable layout unexpected mirrored marked disable mirroring box introduction transparent except casting previous wrong cxxptr nullptr packages reorganized juliacon talk technical workshop