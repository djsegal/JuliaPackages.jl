crc julia module calculating cyclic redundancy checksums crcs algorithms reveng catalogue supported easily added calculation direct via cached tables speed comparable optimized checked libz arrays bytes accepted data handle arbitrary sized sequences previous versions complicated code little practical gain removed please contact add examples calculate sum using anonymous function xcbf constructs lookup table returned series efficient starting time called file calling return checksum program example inside look create func created times force tableless notables define algorithm catalogued width poly init refin false refout xorout check name mycrc spec uint assert course defined installation downloaded install package pkg remove command line functionality update argparse dependency project toml drop support switch fixes travis coverage changed handler method string converted instead treated path break existing current sorry hope don users particularly initial release