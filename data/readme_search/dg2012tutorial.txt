sgd algorithms julia repository contains basic implementations fit ols regression ridge logistic data sets stored csv files disk chosen implement speed perfect tool scale analysis unfamiliar methods fitting models note stands stochastic gradient descent algorithm follow defined minibatch hopes iteratively improving parameters model converge globally set standard consists single randomly selected row suggests direction move improve minibatches arbitrary size furthest extreme entire identical run batch mode functions allows explore continuum started provided example help build intuition happens change explored hyperparameters affect performance finicky beautifully easily fail useful parameter estimates caution cross validation strongly encouraged current status moment core functionality code found inside types linearmodel ridgemodel logisticmodel composite type coefficients count rows seen past regularization hyperparameter controls tries push towards following behaviors predict inputs outputs prediction residual leave predicting cost negative filename call function specific file predictions rmse calculate configuration settings minimize maximize likelihood true false epoches epochs training performed defaults mini learning rate hard coded rule constant decreasing averaging learned averaged time occur epoch effect logging prints stdout regular intervals trace interval length tracing walkthrough try start examples scripts generate tips tricks operates locally based recent close worst scenario apply optimal gradually changes settle reasonable region space practice haphazard orderings instead intentionally randomized insure step requires setting low makes required larger add monitoring including dumping fitted results pass automate multiple passes able