redis featured client julia programming language implementation attempt easy understand minimalistic api mirrors actual commands closely basics resides module using main entrypoint redisconnection represents stateful tcp connection single server instance constructor allows user set parameters supplying usual defaults created access expected conn host port password supersecure foo bar returns string normally accepted keywords passed type method function keyword value command call spaces replaced underscores familiar available convention relatively straightforward exceptions due conflicts key keytype eval scripting evalscript finished interacting destroyed prevent resource leaks disconnect types detailed options complex syntax supports final varargs parameter functions example scan individual strings mentioned earlier coerced match count users improved provide custom exception option zinterstore zunionstore specific implementations allow ease complexity pipelining pipelineconnection executed standard pipeline somekey somevalue sent directly waiting response responses read time future current threadsafe multiple threads require pipelines separate thread limitation addressed commit transactions multi exec methods specialized transactionconnection derived parent build transaction execute simplest send cli queued note returned normal planning sense transactional identical except block manually trans throws serverexception notice subtle difference previous calling placed returning pub sub provides support publishing accomplished publish channel hello world subscriptions handled subscriptionconnection similar constructed existing maintains simple event loop defined whenever message received specified push subscription subscribe baz foobar channels subscribed providing dict println written stdout pattern psubscribe unsubscribed unsubscribe punsubscribe async currently runs disconnected regardless active error handling update via spawns routine background process events encounters default behavior disregard continue finer control accepts optional argument provided passing caught sentinel functionality instances sentinelconnection ping implemented masters array master info subscribableconnection allowing monitoring cluster health messages documentation information notes usage found test tests nil following return union corresponding existent mget lists lindex list element lpop rpop rpoplpush llen sets spop empty srandmember sorted zrank zrevrank zscore hashes hget hash field hmget nofield