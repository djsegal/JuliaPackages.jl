iprofile package contains instrumenting profiler julia language profilers mainly code optimization particularly bottlenecks sampling base contain moved proper built fewer limitations recommended essentially documentation api reference fixing bugs anymore happy accept pull requests provides detailed information including times line executed total run time spent requires automatically modified encapsulating begin significant performance cost installation manager pkg add usage starts similarly using encapsulate macro call function int return float load file execute profile uint view execution type report various options controlling profiling display cumulative results timings accumulated start zero remove blocks tips discard include overhead jit compile subfunctions primary source variability garbage collector runs instrumentation lines added contributes fast running puzzlingly slow reduce variance tends accumulate bunch temporaries cleaned middle calling beginning cause misleading consistent result approach multiple explicit hope probably reflected shortest adds prevent subsection profiled inside block individual separately timed tries compensate reported naturally leads degree uncertainty significantly currently consequently avoid nested chunk pick functions addressed attention particular warranted