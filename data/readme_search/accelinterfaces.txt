jai julia accelerator interfaces gpu cpu programming interface programmers focuses reusing fortran application codes include directive based openacc openmp target package phase development subset mentioned features developed please risk creates shared library pre existing code generates arguments ccall function created simplifies user using macros takes advantages time jit compilations installation pkg add accelinterfaces quickstart following calculates vector sum main algorithm written kernel text integer lbound ubound acc parallel loop const fill answer jaccel myaccel framework gfortran fpic jkernel mykernel jlaunch output assert variable contains actually versions users select clause explained context identify literal name specifies acceleration example provide actual compiler command line generate flags except flag file path input source program string external syntax similar calls pair parentheses note space argument names semicolon variables keyword tuple simple inputs outputs write func additional directives jenterdata jexitdata jdecel ftn noomp allocate updateto updatefrom deallocate create cray wrapper compile modify choose content instead specifying default accel skip shown allocates device memory copies allocated corresponding copy data deallocates notifies current anymore notice usage similarity supporting switch proper information fortram silently exit maintain multiple frameworks questions suggestions posted issue