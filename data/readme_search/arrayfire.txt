arrayfire library gpu accelerated computing wraps julia provides interface installation install download binary official site build source add simple usage congratulations installed array cpu rand transfer device calling afarray constructor using don forget load perform arithmetic course divide check supported functions section information computation bring host examples linearalgebra random generation float randn basic operations sin logical trues reduction total max maximum colwise min matrix determinant det positive abs product dot transposer linear algebra cholesky multiplied create definite svd fft fast fourier execution model introduces type subtype abstractarray afarrays data remains unless specifically transferred wrapper julian aims mimic base versatility ease repl behaviour whenever displays values happens showarray method overloaded ensure time display means single operation involves implicit memory lead slowdown interactively depending size bandwidth available semicolon statement disable displaying avoid note script function explicitly called example async asynchronous essentially call particular return control immediately continue executing pretty useful mean code independent simply execute computes resulting real world performance performs kernel fusions elementary intelligent runtime jit compliation engine converts expressions opencl cuda kernels fusion decreases calls avoids extraneous global explicit synchronization barrier sync benchmarking macro times asynchronously background misleading timings individual run multiple average runs affect user writes users write normal abstracted onto ensures computatation complete arrays consider following error throws reside regions coherent performed region automatically considerations manually correctness sometimes marginally lower level libraries blas etc openblas clblas backend cublas exact decimal light encouraged testing codes slow due generic implementations intentional enable workflow ready fallback methods allowslow false getindex disabled creating convert diagm eye range zeros ones falses constant getseed setseed iota complex conj imag round floor hypot sigmoid signbit vectorized form ref issue svdfact lufact qrfact matmul mul transpose ctranspose inv rank norm diag islapackavailable chol solvelu upper signal processing ifft conv fftc fftr convolve fir iir approx statistics median std var cov meanweighted varweighted corrcoef vector algorithms sum minimum findmax findmin countnz sort union cumsum diff sortindex sortbykey minidx maxidx getactivebackend getbackendcount getavailablebackends setbackend getbackendid getactivebackendid getdevice setdevice getnumdevices image scale hist loadimage saveimage isimageioavailable colorspace gray rgb hsv ycbcr sat bilateral maxfilt meanshift medfilt minfilt sobel histequal resize rotate skew transform transformcoordinates translate dilate erode gaussiankernel computer vision orb sift gloh diffofgaussians harris susan hammingmatcher nearestneighbour matchtemplate benchmarked commonly benchmark negative factorization intel xeon ghz grid compute scripts folder include nmf backends allows switch unified starts selected default depends drivers desired hardware override setting environment variable starting loading module change via set resp isn computational represents active built troubleshooting libaf try adding path internal checking libcudart libnvvm libafcuda link loads system platform stuck downloaded doens atom file home directory juliarc env usr local lib able double precision message pops devices support iris pro macbooks generating directly correct scenario instead