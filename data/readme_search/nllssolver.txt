nllssolver package optimizing robustified linear squares nlls following features simple interface scale defined relatively little code derivatives computed automatically user provided desired robust residual blocks easily euclidean variables exist space example rotations represented parameter matrix retain minimal dof update parameterization currently supported constraints bounds explicitly bounded implemented using special parameterizations usage definition types data structure variable contain parameters optimized defines function minimized instance implement standard api follows int nvars myvar returns intrinsic dimensionality block newvar oldvar updatevec updates vector length myres depends nres scalar residuals varind svector varindices res indices stored values assumed remain fixed duration optimization resvars tuple getvars allvars containing float computeresidual jac smatrix computeresjac val varflags optional jacobian corresponding bit set isn forwarddiff auto differentiation robker robustkernel kernel cost squared norm creating nllsproblem object adding addvariable addresidual methods respectively result nllsresult optimize options nllsoptions various optimizer information retruned examples creation included rosenbrock visualizes available optimizers click interactively select start bundle adjustment bundleadjustment adjustement future collaboration add schur complement speed bipartite projection method solving reduced memory allow dynamically change depend broaden additional solvers equality inequality improve coverage tests separate docs pages detail help functionality documentation test framework wish collaborate project please raise issue indicating