blockhaloarrays blockhaloarray type array extend abstractarray designed shared memory multi threaded workloads typical parallelization via loops threads tturbo etc jlo jhi ilo ihi tends scale especially bandwidth limited true stencil operations functions access addresses aim mini domain decomposition separate thread specific chunks blocks operate data race conditions contention context efficient compared mpi method able block maintain numa aware locality communication copies library calls future releases include facilitate hybrid example blocked style operation looks following note advantage single turbo macro vectorize nested loop function blockid limits views split sync nthreads tspawnat types task based parallel workload scaling synchronization required exchange halo benchmark results coming soon exports extent system partitions operated constructors dims ntuple int halodims nhalo integer nblocks float using threadpools matrix entries dimension warning issued create empty rand existing dimensions newdims haloax monotonically increasing outer fill corresponding threadid value init dom domainview initialize tid region neighbors updatehalo anew flatten mpiblockhaloarray implemented version facilitates nodes return flattened copy repartition layout periodic false regions updateblockhalo spawn view onboundary current boundary help apply user code additional overloaded methods eltype abstractblockhaloarray size globaldims dim axes firstindex lastindex eachindex length