cudart note package actively developed please cudadrv instead build status code coverage wraps cuda runtime api wrapper driver preferred program gpu julia require platform support tested linux osx windows visual studio supported installation nvidia device computer available computation graphics card library installed perform steps manually choose bit versions match install using pkg add compile couple files deps directory provide utility functions functionality step fails try fixing running probably idea run test runtests script system errors check example examine ptx look appropriate compiled usage start saying import prefer qualify module name provides launch kernels initialization gpus initialized computations freed complexities process due interaction garbage collection array object allocated session usable close fortunately transparent user shouldn easiest ensure proper cleanup resources block syntax result devices dev true devlist argument function accepts integer input representing starting returns false indicating respectively means variable defined inside vector int sufficient capabilities construct capability select major query properties attribute list fields restrict leaving users nmax keyword func finally request busy tasks free wait specific initializes loads utils onto ensures freeing memory unloading finishes initialize utilities calling init handy trouble unfortunately usually ideal backtraces doesn manage reset choosing querying active command makes commands allocate executed whichever currently return arrays supports main types cudaarray cudapitchedarray correspond contiguous blocks pitched pointers declare uninitialized float conventional reminding copy host typical size ndims reinterpret eltype fill etc noteworthy omission directly index fail transfers relatively slow don write individual elements inspect values storing type hostarray pinned circumstances improve speed allow asynchronous operations stream warning conjunction mapped file observed cause segfaults time workaround modules custom teach programming refer documentation online sources compiling writing compilation nvcc mycudamodule specify compute gencode arch multiple datatypes recommended templates extern instantiate bindings datatype template typename void kernel data goes global double initializing easily approach define analogous following described previous section cumodule cumodulefile cufunction cudacall export const ptxdict dict mdlist mdinit isempty error empty push mdclose local ret set grid ptr rand dimensions written streams synchronize cpu sync async macros short demonstration activates processing measured sleep sleeptime results length force precompile cudasleep nextidx idx begin idev break tstart tstop realistic version feed collect single organize efforts random notes convention matrices stored column whereas row efficiency avoids reordering linear sequence addresses usages purposes algebra effectively transpose todo create cudamatrix cudapitchedmatrix automatically copying useful cublas represented corresponding reported change