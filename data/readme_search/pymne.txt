pymne julia interface mne python via pycall installation package available unsurprisingly dependencies installed attempt install built default happens global path using hidden miniconda anaconda environment virtual sandboxed conda system set env pipflags user add ing build release pypi changed mneversion version preferred note explicitly try abstract rapid api changes deprecation cycle incumbent manage versions accordingly scikit learn functionality ica decoding module automatically dependency wish advantage exported sklearn function variables main manually ahead time shell pip stable ensuring alternatively run pyimport specific specify upgrade test setup usage philosophy allows transparent major wrap step load namespace provide accessors exposing example access docs import infrastructure means docstrings help launch web browser tab documentation parameters str none tutorials examples setting configuration value dev helping type conversions aggressive converting standard types dictionaries native equivalents create due differences inheritance traditionally languages concrete defines info extends dictionary object accessed naively converted subtyping lost passed result method errors discussion derived exactly avoid wraps methods conversion namely property dat zeros fake data direct wrapping pyobject home ubuntu lib site packages init naive dict entries projs utc offset head trans experimenter proj name nchan ctf acq stim events lowpass helium proc history xplotter layout dig kit file rawarray requires simple error pyerror expr escape ccall bctlp src pyfncall pysym call pyptr pyargsptr class typeerror instance instead decorator gen line array validate utils raise stacktrace pyerr check exception inlined wrapped preserves empty values bads names chs misc custom ref applied false highpass meas date unspecified sfreq raw creating float channels times range secs ready loaded leads preserving accessor automatic found problematic particular functions don play nice mechanisms issues pull requests welcome