libexpat julia wrapper usage xpath queries parsed tree relevant apis parse string returns object type etree called parseddata element path search elements data returned using subset specification examples foo bar baz array objects tag representing qux attribute picks value concatenation text nodes descendants node note whitespace preserved concatenated sub exists index assumed omitted empty list found starts root argument start children navigate directly name xml attr dict attributes pairs vector child consists parser calling expression construct passed via macro required recommended performance ability variable interpolation starting variables perform limited contains handles following features currently missing accessing parents functions namespace uri lang processing instructions comment local account xmlns namespaces correctly parenthesized expressions parsing correct output axes sibling preceding escape sequences streaming store memory offers abbility define callbacks document creata xpcallbacks instance receive available default initialised dummy function callback handed xpstreamhandler parameters cdata section sections character txt handler characters wouldn otherwise handled expand doesn inhibit expansion internal entity reference attrs prefix declaration scope initialized takes arbitrary context accessible fit alternative parsefile line lines read expat controlled keyword bufferlines ijulia demonstration notebook demo