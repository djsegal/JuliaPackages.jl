jlsca toolbox julia computational dpa channel attack supports conditional averaging analog measurements bitwise sample reduction whiteboxes threaded tiled incremental correlation statistics parallelization multi core machine power analysis cpa profiled linear regression lra mutual information mia aes enc dec backward forward box attacks round chosen input mixcolumn whitebox models inv mul klemsa des tdes sha hmac key rank evolution csv output inspector trace set split data raw binary daredevil alignment using fft convolution dynamic time warping related playing picoscope example examples piposcope fast acquisition riscure pinata board scope rapid block mode check file header free versatile wrote initially started cees bart breunesse ilya kizhvatov pysca shamelessly baseline ruben muijrers contributed bit compression thanks albert spruyt ideas suggestions codebase funded reassure project officially supported maintained crashes feature requests please contact github code hosted write issue pull request installation install tested prior compatible executable path notably windows users start repl executing type pkg add packagespec url close prompt running interact run scripts command line interactive via jupyter notebooks described readme elegant powerful approach includes solution rhme sca challenges threading versus processing various components parallel worker processes component currently single cpu multiple cores threads process probably outperform splitting thread reason thrash cache implementation friendly usually choosing workers cpus hardware preferred course milage vary default thead change master num unfortunate interface unified parallelized machines haven found experiment todo list create cluster nodes dual xeon shared filesystem sets accessible lean simple linux nfs ssh node deployed machinefile option easiest unleash abilities cmd step performed git clone user directory library script files perform combination settings parameters extracted name hard coded defaults editing main src touched noninc performs vanilla meaning compute entire hypothesis matrices memory starting implementing complain specify destraces ccc trs backwards applies xxx condavg averager job adding aestraces ciph fec dcb condred conditionally reduced source bitwisereduction useful vector floating wbaes combines leakage tackling wise params hardcoded edit pass else apply dataoffset direction inccpa implements modules parallelize invciph aaeed hacking stuff means look pick matches closest copy accordingly details passes aessboxattack aesmcattack dessboxattack inputattack outputattack defined attackaes attackdes attacksha following creates bits intermediate define cipher keylength leakages combine dpaattack field objects inherits leak function leakges implemented instead xor true configuring tell offset offsets based located bytes targetoffsets collect basismodel basismodelsinglebits fat disclaimer model understand basis results invertible crash samplebuckets value buckets samples observations real aren floats addsamplepass float hacky subject passing phase inner rounds material recovered earlier automagically consists separate setting parameter phases printed hex string labeled console cut paste ran phaseinput aabbccddeeff processors instances traces implementations inspectortrace representing splitbinary completely flat types simply providing access addition functionality suppose follows reads meta corresponding disk read bla tuple absolute abs instance modify call object moment objet contain executed spectrum similar mechanism exists adddatapass internally functions perspective filtering consider tvla byte random semi constant return uint undef push stack pop added calling popsamplepass popdatapass potential post processor framework automatically incrementalcpa average max averages sbox roundout returned getnumberofaverages newly module environment variable faster doesn speed laptop configured determine operates picked recombined individual preprocessed fed provided local available splitbytracesblock visit subset required moved interpreted blocks etc splitbytracessliced takes tightly coupled splitxxx test runs package tests runtests trigger typically