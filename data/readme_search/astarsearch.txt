astarsearch algorithm julia space search algorithms implemented baseline package exports astar function provides generic implementation type totally unrestricted provide functions neighbour optionally heuristic goal path exported explore depthfirst breadthfirst iterative deepening intended transparent drop replacement won able installation pkg repl add usage neighbours start defaultheuristic cost defaultcost isgoal defaultisgoal hashfn hash timeout inf maxcost execute reach condition arguments mandatory optional returns structure status field symbol success found timed partial returned nopath didn fields array closedsetsize tested size closed set opensetsize takes iterable starting completely usually estimate optimistic notice expensive guaranteed optimal multiply constant faster current transition default transitions evaluates reached compact representation dictionary key uint int string base composite avoid duplications warning arrays return time please pass value stops returning lowest wil run specified maximum bound accumulated result exists enable closedset track visited nodes visiting disable isn loop graph true uninformed compare performance don explicit interface identical parameters ignored instead maxdepth parameter limit depth expands enabled loops hide paths multiple breadth searches ensuring solution slower iteratively executes levels properties speed disabled internally examples solve shortest mazes sorts puzzles puzzle maze example solver test folder using manhattan following directions seen cartesian indexes added position const cartesianindex left distance positions matrix sum abs check filter moves walls mazeneighbours res push solvemaze currentmazeneighbours share free cell wall breaking changes removed improve memory powerful abstractastarsearch struct supported release api requiring argument third keyword expect subtyping main method renamed introduces strict checking uniformity types heuristics errors probably provided float cast