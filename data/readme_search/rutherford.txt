rutherford generic programming julia language implement system aims extend capability couple complications firstly uis mutate data depend normal function isn format convert move mutations generated dynamically asynchronously easy secondly opinions normally functions computing defined wrong aren sensible difference trivial colour change ultimately mean author assume don access exactly user look writing fools errand lot define structure interactions users perform describe result provide defaults specific stuff interpreted plonk component gradually specialise solution surprisingly simple naturally described using tree behaviour matter custom types uniquely tag mind api name symbol creates type enable rest draw context else datatype override default rendering defining method doodle creating argument version single parameter expecting juno integration loading file atom add init coffee require process env home kip repos jkroso config startup eval isinteractive probably keyboard shortcuts keymap cson platform darwin item views text editor grammar source mini cmd ctrl enter client block alt backspace reset module