adversarialprediction package provides easily optimize generic performance metrics supervised learning settings using adversarial prediction framework method integrated differentiable pipelines julia implementation aistats paper perf incorporating rizal fathony zico kolter python please check overview enables easy integration including decomposable pipeline currently supports defined binary classification code example score metric convolutional neural network training fluxml flux import define constraint model chain conv relu maxpool reshape size dense vec fbeta beta function type confusionmatrix return special positive objective train params set adam write calculates entities confusion matrix incorporate straightforward modification standard cross entropy replace logitbinarycrossentropy mean note equation installation installed terminal add pre requisite packages automatically zygote automatic differential engine requires lbfgsb install separately gpu cuarrays tasks machine require align commonly derived table reports values relate classifier ground truth labels anatomy means broken independent sum depends single sample consider samples wide variety family expressed fractions constants whereas functions hence numerator linear true negative statistics predicted actual counterparts data form constant denominator construction covers vast range defining macro metricname definition implementing precision recall sensitivity specificity enforce avoid division zero contain usually label otherwise similar occur instantiating account parametric value arguments arg adjust arbitrary complex inside follows support intermediate variables store partial expression cohen kappa num den constraints subject occurs trade offs system threshold format real valued precisiongvrecall enforces precisiongvrecallspecificity spec false provide array boolean computing yhat call compute vectors containing element float gradient information formulation propagated previous layers serves replacement loss existing codes simply change customizing inner optimization solver solving admm based default setting run iterations manually iteration max iter argument running time batch solve maximin quadratic complexity minibatch practice takes milliseconds intel core processor reduce definitions gpr mcc etc load current environment commonmetrics detailed src common examples visit repository project contains tabular datasets image mnist fashionmnist interface pytorch deep via pyjulia library citation cite following research article title author journal arxiv preprint acknowledgements supported grant bosch center artificial intelligence foundational prof brian ziebart xinhua zhang university illinois chicago