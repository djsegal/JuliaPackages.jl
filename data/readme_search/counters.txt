counters count create dictionary maps objects counts counter object simplifies process values type string julia entries primary operations value increment retrieval hello access square brackets bye notice worry key unknown assumes assigned alpha bravo invoked time encountered counting elements list function lowercase element array set multiplicity times appears gamma nonzero addition sum creates adding equals incrementing item incr useful collection items add held multiple incremented occurrence int amount note argument changed effect efficient vector functions returns total length include nnz keys iterator display print clean removes won change behavior free memory listing convert dimensional appropriate using collect lists decreasing forth zero listed average counted compute weighted mean hashing hash applied computing ensure equal uint associative subtype methods iterators csv printing writes screen comma separated format readily importing spreadsheet float parallel example directory illustration processes