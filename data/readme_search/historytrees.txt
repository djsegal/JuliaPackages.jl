historytrees multiple construct immutable record history simplest interleave element call root seven elements protected publishing tree hash calculated tuples prove inclusion instance proof included grows linearly size list alternative merkle allows constructing logarithmically issue approach padding overcome requires recomputations added trees leaves directly incomplete node reduce satisfying provides sized proofs consistency constructed historytree int tuple push input hashes callable function interchange real importing nettle demonstrative purposes quantities length access signed main server distributed clients particular replies inclusionproof example third client quickly verifies verify possibility sync synchronisation follows consistencyproof scenario combined sends receives check instead current enforces messages modified note currently recomputed performance computed improvement store complete subtree retrieve calculation prepending bytes leaf byte security references crosby scott dan wallach efficient data structures tamper evident logging usenix symposium rfc farhan aly don trust logs implementing verifiable log