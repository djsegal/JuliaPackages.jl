cbindinggen automatically generate julia bindings api developing cbinding support arbitrary local libraries provided linux distribution usage seeks comprehensive automatic generation framework utilize capabilities precisely interface package build time wish particular library system built installed generated file included code files created committed meant editing lowly humans started example generating start add dependency relies artifacts distributed llvm jll providing header demonstrate following normally placed deps found plctag using import incdir joinpath dirname libclang path include hdrs map hdr clang readdir cvts convert headers args cursor codelocation name string wrap startswith return false ignore function don getfiletime true takes array command line arguments directories compiler options preprocessor definitions detail filter syntax allows fine grained control converted ast traversed constructs defined col expression coderange stop locations additionally spelling symbols result objects contain strings expr comments storing exportable ported finally write expressions loading load define baremodule module encapsulate namespace conflict provides bfj tab bfl provide access types macros increasing chance naming conflicts mymodule const size csize base pre handwritten dir post level julian wrapping section defining dependencies composed hand written imported packages export required finishing inclusion help imports doc try adding fparse list call getclangversion cextern cxstring version suitable user intended parsed format guaranteed stable reference index ccall cglobal wrappers remember low interfacing segmentation faults misuse cxstr unsafe getcstring disposestring