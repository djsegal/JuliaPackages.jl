localfilters package implements multi dimensional local filters julia convolution mathematical morphology etc defined specific operations combining value source array values neighborhood size shape dimensionality predefined provided means simply implement custom document structured follows summary provides quick introduction implementation explains filter neighborhoods describes concept installation install note define api reasonably fast benchmarks separable kernels faster packages overlapping functionalities imagefiltering multidimensional arrays images various boundary conditions imagemorphology morphological structuring elements filtering combine possibly kernel associated relatively position instance type derived called element denoting default centered box dimension available erode performs erosion minimum dilate dilation maximum localextrema yields followed closing top hat summit detection optional third argument supplied pre smooth bottom valley localmean averaging convolve support eltype bool bilateralfilter bilateral range smoothing differences intensities spatial coordinates https wikipedia org wiki pseudo code operation writes sup initial update store result denotes set indices methods variable considered efficiency return execute call localfilter method dst applies stores destination returned compute terms typemin typeof course anonymous functions exploited single example average zero mechanism median via driver amounts rectangular associative binary min max van herk gil werman algorithm naive whatever instead lenght dimensions advantage applied time syntax apply dims rngs overwrites contents applying contiguous interval workspace automatically allocated otherwise vector resized axes hold implemented behavior specifies integer integers colon specify processed appear times matching except unit form kmin kmax specified specifying assuming mono pass rng occurs simple operate shift corresponding effects width obtained omitted list version allocates adepts central defines involved component assumed invariant embedded weights types user view kinds boxes edges aligned arbitrary offsets represented instances rectangularbox arbitrarily shaped offset boolean constructed booleans starting index numerical scalar equal geometrical center according conventions fftshift tuple larger tip remember convert coefficients bounding cartesian cartesianindices cartesianrange versions contains relative positions created calling offs inds cartesianindex tuples ranges dim similarly following statements sense ndims length anchor reasons checked centeredbox previous section explicitly converted target official using pkg add development clone github com emmt git pure build