paddedmatrices deprecated favor stridearrays quick start julia using matmul multi threaded multiply store result overwriting contents serial single return functions multiple threads maximum min vectorizationbase num cores nthreads system example core set environment variable starting usage library provides array types pure matrix multiplication native optionally statically sized padding default ensure columns aligned following chart benchmarks cpus comparing smatrix mmatrix staticarrays beyond switch linearalgebra blas gemm stridearray compile time sizes unsafe ptrarray lower constant overhead solved cascadelake avx base float type method matrices square axis reports size dimension ranged double precision gflops billions floating operations cpu tigerlake laptop haswell performed relative computer mkl instead openblas easiest change staticarray currently relies unrolling taking advantage llvm slp vectorizer approach arrays scales poorly dynamically regular faster despite able specialize unlike versions means didn recompile quickly fell benchmark larger platforms speed skip times specializing methods fixedsizearray matched performance beginning leaving systems loopvectorization code generation goals provide range practical dynamic compare earlier strong especially compared adaptively packing strategy function extending fall hundred particular tuning blocking parameters possibly switching packed column panel major storage prefetching diagnosing fixing cause erratic illustration consider setup linuxperf rand similar allocations kib gib true foreachmklmul foreach oneto sample pstats results cycles instructions branch misses task clock context switches migrations page faults dcache load loads icache dtlb itlb foreachmul insns cycle difference looks relatively minor runs nearly corresponds mean million multiplications investigating additionally vectorizedrng random pay price actually benchmarktools trial memory estimate bytes allocs minimum median samples evals randn generating lot wise biting bullet course preallocate undef staticint preallocating gain additional future try basic broadcasting creation force heap allocation inline easier write allocating mutable broadcasts afs asm bfs bsv svector cfs csv dfs exp log slower pre allocated output