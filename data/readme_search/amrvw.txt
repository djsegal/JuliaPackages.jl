amrvw fast backward stable computation roots polynomials implementation core chasing algorithms finding eigenvalues factored matrices fortran code methods provided eiscor repository provides julia package implementing applied sparse factorization companion matrix jared aurentz thomas mach raf vandebril david watkins siam anal appl error analysis pencil leonardo robol arxiv summarized monograph format eigenvalue twisted algorithm generalization multishift implemented utilize francis factorizations respected real coefficients storage requirements requires flops iteration overall basic require examples import const element array float complex means comparison using polynomial advantage comes larger compared function faster degree grows time whereas created running generic solver computes values floating polynomialsroots bit slower accurate appears method run numeric issues stability shown paper grow linearly norm following computable reasonable doi expected value log rand rts sum isreal allocations kib relatively speedy statistics generated albeit finish randn statsbase xbar mean std sqrt exported functions internal example unitary discusses situation hessenberg terms descending chain rotators fit current framework linearalgebra random rotator descendingchain qrfactorization eigvals diagm ones