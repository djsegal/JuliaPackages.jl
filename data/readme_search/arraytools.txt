utilities coding julia arrays package provides methods types deal variety array sub abstractarray exist help building custom sacrificing performances useful implement process generic rubber indices constants type dots hit tab key indexation left justify instance assuming following equalities hold object seen advantage index automatically expands list colons correct expressions readable idea comes yorick language dave munro setting values fill ones copy idem faster set elements leading trailing specified cartesian cartesianindex technically constant defined rubberindex singleton represents call tuple compile time val warning current limitation confuse interpretation token appearing beacuse parser wrongly assumes counts single dimension appears example rand throws boundserror objects defining interface powerful flexible tempting define behave efficiency arraytools simple means accessed stored concrete embedded inherit lineararray cartesianarray depending style indexlinear indexcartesian extend base parent method returns course replacing ellipsis using pseudoarrays struct customarray arr linear etc inline result instances indexing apart provide getting dimensions element derived override definitions optimized suitable specialized based instead checking requires efficient implementation axes specialize default properties annotatedarray store dictionary named parameters storing annotated easy annotatedarrays dims float zeros units photons undef initial keywords constructor symbolic names value contents created undefined integers accessing symbols yields sum gizmo property pop delete creating summarized prop init existing expression specifies usually reference hence share caller avoid applies pairs ambiguities styles mixed examples yield keys third string dynamic modified deleted inserted fourth immutable via syntax obj textual fastest slowest involves converting symbol initially flexibility specific explicitly specify dict int integer limited reserved unspecified empty iterating iterate length println similar provided metaarrays metadataarrays imagemetadata tools takes arguments iterator visiting behavior eachindex except dimensionmismatch exception safe inbounds simd loop writing loops agnostic specfic rule algorithms easier write involved indexed fast checks starting returned otherwise converted implementing check bool multiple checked flat storage calling ccall compiled function coded fortran assumed languages pass pointer typically ensure memory contiguously column major ckecked possibly eltype requirements converts form faq difference indexstyle indexingtrait efficiently multidimensional access possibility fastindexing holds standard offset args opposite furthermore bit installation official install switch manager repl pkg prompt add