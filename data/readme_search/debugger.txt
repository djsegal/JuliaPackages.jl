debugger julia build status note looking docs juno ide link instead installation install using pkg import add usage starting interface debug entered enter macro function foo bigint allows manipulating program execution stepping functions line local variables setting breakpoints evaluating code context commands square brackets denote optional arguments following prompt misc current editor quit returning toggle compiled mode lowered source increase decrease lines shown basic step int past call steps return continue breakpoint hit stack top advanced expression generated querying run backtrace frame evaluation expr watch list expressions evaluated remove file cond att condition func defaulting float methods matching signature method types variable etc disable enable error break throw empty command execute previous changing frames change subset normal addition debugging type indicated executed example named typing value advancing backspace character manipulate juliainterpreter api documented common shortcut provided equivalent executing abs sin special trig datatype halt thrown calling exported breaking stringindexerror string index err strings noinline abstractstring integer getindex continued uint val bool false repl stacktrace sometimes convenient choose instance matlab octave keyboard browser else println generic support interprets stepped currently interpreter slow feasible workaround toggled pressing color compiler fast normally drawback course missed syntax highlighting preview highlighted options theme set highlights completely alternatively quality settings colors chosen highlight opt highlightoption enum choices system bit pretty terminals exception windows