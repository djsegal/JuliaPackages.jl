set theoretic types toy type system intersections complements julia inspired discourse discussion speculative excerpt jeff bezanson juliacon talk module implements bits extend separate serving proof concept intersection complement stt begin abstract smart organic struct computer fruit brain value thinking notably concrete subtyped including instances deepthought quince actual data instance relationship merely wrapper pine apple typeof regex theory formal figure project particular don consistent sets runtime values picture combined boolean operations assert little structure belongs exactly partition top care respect containing int means subtypes empty distinct alpha beta helpful equivalence classes equivalent singleton arbitrary extent core parametric indexed parameters invariant name box notation represents union parameter note tuples product tuplekind cartesian supertype syntax convenience macros clever overload versions mechanisms names clean separation probably makes clearer duplication chosen arbitrarily isa tuple macro heoretic ypes allows declare methods using familiar declarative example block animal cat pack unpack following code directly constructs kinds functions quote false true kindvar unionallkind kindfunction kindmethod notice gizmos typevar unionall analogous unionkind kindof superkind alongside additional intersectionkind complementkind traits hasduckbill layseggs mammal bird platypus canadiangoose foo goose disadvantage introduce trait isalive existing changing definitions theoretically indeed haven seen reason disallow isdead miraculously trick ergonomic allowing mean appears allow declaration supertypes cool huh