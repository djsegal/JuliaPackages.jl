signals provides multi paradigm fast functional reactive programing julia supports pull push operations async default modes signal creation val strict false create source initial value setting true guarantees carried independently otherwise updates occur faster eventloop process kicks args creates derived type replaced calling reads notation example syntax sets propagating change rest graph useful based pulling changes affects pushes current stored input set propagation read propagate operators droprepeats filter sampleon foldp count previous merge remote bind unbind individual documentation files available time takes consideration debounce executes amount passed inputs updated throttle guaranteed executed times fps buffer mode run asynchronically dedicated behavior changed using dynamic values rand array float package rigorously optimized speed execution minimal recalculation