advumps julia package realise automatic differential variational uniform matrix product vumps implemented algorithms described differentiable programming tensor networks contraction method namely demonstrating applications gradient based optimization ipeps direct calculation energy densities via derivatives free key implement adjoint eigsolve solved differentiation dominant eigensolver quantum physics tensornetworkad reference install git clone move file run repl press pkg activate activating environment dvumps roject toml instantiate backspace ctrl precompile using info precompiling dad example learn deeply highly recommend single test runtests sequence classical ising model start constructing network representation constructed function takes parameter inverse temperature array float env tenosr physical index dimension verbose true random initial step error typeof squarevumpsruntime alias vumpsruntime squarelattice calculate partition site derivative respect times zygote straightforward log generic result ploted plot dising finding ground infinite heisenberg algorithm variationally minimizes dimensional lattice form descent hamiltonian operator default parameters initialize init tol maxiter minimise combine optim hood provide optimiseipeps save finial jld res final value agrees found paper extension available including complex forward backward propagation nixnj unit cell symmmetry