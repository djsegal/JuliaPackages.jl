frank wolfe conditional gradient algorithms package defines generic interface implementations main entry function running algorithm frankwolfe grad lmo max iteration line search agnostic verbose true objective storage inplace structure implementing linear minimization oracle oracles implemented subtypes linearminimizationoracle implement method compute extreme direction kwargs takes returns minimizing set represented methods basic overview convex step size rule nonconvex stochastic blended gradients build stability feature temporarily increases accuracy pairwise lazified version lmos common available box probability simplex unit sparse polytope norm ball birkhoff details moreover simply define directly defined via solver glop scip soplex mathoptinferface features multi precision run various precisions modes float bigfloat rationals based integer types int bigint approximate carath odory example strategies particular ones sqrt vanilla fixed stepsize value useful total iterations short basically smoothness inequality requires knowledge estimate golden ratio linesearch backtracking rational computations kept inputs variants adaptive starts refine dynamically survey forthcoming callbacks top level optional callback argument taking named tuple form primal dual gap phi time start vertex active length fields vary log additional information store values external array passed trajectory keyword ignored special pushing elements returned emphasis solvers support parameter exploit vectorized algebra memory efficient scale instances caching lazy unbounded cache sizes slow bounded sufficient found prices return approximately optimal solutions optionally endowed momentum help convergence especially context cool examples arithmetic approximatecaratheodory solve obtain approximations background conditioanl consider simple instance approximating blas rationalshortstep epsilon type allocations mib output solution exactly built exampple maintain sets maintaining expensive similarly prohibitive friendly esentially limited amount tend allocation allocate gigabytes single computation minimizes performs operations variables broken pieces vector testing update tot measured gib section ncalls avg alloc benchmarking provide understand fast crucial notably evaluations iterate compare normal etc whereas mode consume extra reflected computational times average none components look actual footprint maxiteration gradienttype warning iterates written sec ran secs thread allocating throughout cost terms stems reporting highlights dimension independent rates contract feasible region lipschitzness rate completely input limits scaling stomach citing citation bib bibtex