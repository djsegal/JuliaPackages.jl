benchmarktools makes performance tracking julia code easy supplying framework writing running benchmarks comparing benchmark results package write run found basebenchmarks infrastructure automated testing language nanosoldier installation install following pkg add documentation getting started check manual thorough explanation explore api reference document short example toy suite sample file repo extensive real world look source benchmarking linux wrote series tips tricks help eliminate noise tests quick start primary macro provided using setup expression included timing note require multiple evaluations kernel details sin rand trial memory estimate bytes allocs minimum time median mean maximum samples evals sanity checks btime convenience wrapper output analogous built allocations depends external variables interpolate avoid globals essentially interpolated variable pre computed begins inv global kib interpolation call occurs described supports features additional fine grained control process exist story packages benchmarktrackers implemented execution strategy collecting summarizing individual organizing determining regressions hood relied actual system base library soon apparent suffered variety issues significantly change collect estimates characterize detect statistically vulnerable robust tolerances tune parameter basis magnitude theoretically functions repl reproduce locally cumbersome response designed examining user reports data generated offers solutions corresponding parameters configured separately means subsequent experiments performed consistently avoiding branching substrategies based simple estimators supported pick regression detection tolerance configuration easily cached reloaded reducing simpler transparent overall easier acknowledgements authored primarily jarrett revels jrevels additionally thank people john myles white authoring original greatly inspired andreas noack statistics investigating weird distributions oscar blumberg discussions robustness jiahao chen error analysis