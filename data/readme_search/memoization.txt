memoization easily efficiently memoize function call closure callable object julia example usage using println computed single highlights definition memoized note calls slightly performant incorrect results redefined limitations functions optimally result methods forms args kwargs type parameters remains inferrable choose cache dict lru maxsize specifier called arguments create expression creates instance creation delayed time pass pre instantiated default iddict counts common choice memoizes based probably useful count vectors contain entries lead somewhat slower lookup empty caches precompilation stored precompiled module recomputed runtime serializable channels fft plans don saved manually top level snoopprecompile precompile block additionally definitions multiple defined modules generic method individual instances closures func separately callables struct foo date incorrectly returns fix redefining suffer switch session restart package thread safe threadsafedicts memoizing notes drop replacement writing fewer design partly inspired stack overflow comment