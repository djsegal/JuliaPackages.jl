introduction please note pre release software preview purposes subject breaking changes officially supported itensors library rapidly creating correct efficient tensor network algorithms itensor interface independent memory layout indices objects carry extra information recognize compare equal includes composable extensible optimizing transforming networks matrix product operators dmrg algorithm development flatiron institute division simons foundation steps install version julia run command begin interactive session entering called repl type keyboard enter package manager add system update dependencies finally installing hit backspace key normal prompt ctrl exit using code files examples folder test basic overview construction setting elements contraction addition constructing constructs index representing provide values alternative notation contract shared hasinds true randomitensor random set output singular value decomposition svd example create compute resulting factors simply multiplied operation automatically recognizes matching contracts sums dimension row temporarily treating third fourth column tags prime levels define beyond permanent immutable determined constructed allow matched copies additionally tag strings integer primelevel useful identifying printing tensors performing manipulations priming sets dim similar copy false site hastags level otherwise properties match calculation iterative finding dominant eigenvector exponentially hermitian originates physics purpose eigenvectors hamiltonian energy matrices model behavior quantum systems spin sites siteinds input operator terms convert mpo heisenberg ampo autompo initial psi randommps plan passes sweeps maximum mps internal dimensions sweep truncation cutoff adapting maxdim returning eigenvalue optimized println final mindim maxlinkdim time