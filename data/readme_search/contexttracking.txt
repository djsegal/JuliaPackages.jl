contexttracking track execution context data kept stack structure function called saved exits restored user changes visible current deeper frames usage embarassingly simple annotate functions ctx macro attach using memo access motivation suppose processing web request create correlation include whenever write log file somewhat redundant multiple times invaluable debugging production imagine users hitting service time look interleaving confusing stored naturally gain knowledge forget details unwinds design memoize valuable example foo bar info result julia dict entries object returns following properties unique task thread tracked default path call array names recorded generations levels hex represented hexadecimal string return annotating body wrapped code saves restores consider inside translated try inserted save finally restore purpose operation guarantee chain subsequent assign val push highly recommended annotated failing leak parent usually desirable effect safe async managed properly run program threads separate individual likewise tasks base nthreads println threadid bcd don storing type allows container requirement implement accepting pair symbol getindex retrieving value length empty iterate related projects probably achieve similar cassette