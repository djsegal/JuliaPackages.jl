sortingsortingout experiments sorting api julia features composable types exports functor objects rev predefined const forward isless backward compose method package abstractvector ord sort abs randn perm collect dispatch specialized algorithms currently advanced algorithm float induced downside practice restrictive signature union instance match proposed fix canonicalize instances inferred type goes comparison function direction internally summarizing composed linearized fashion via called flatten takes element vector returns trivialorder bool sometimes original nontrivial true reverse tuple gathered functions transformations explicit example inv effective eltype typeof false effectively comes automatically efficient completely equivalent products weight speedup using benchmarktools struct product price int rand fst benchmark setup copy snd complex absolute magnitude complexf vectors unions exact logic fast floating code potentially efficiently partitioning subsequently calling bit allow maybe missing values afaik convince compiler overhead value actually maximum minimum accept changes methods return empty collection passed satisfy search convenient transformed specific unresolved issue base construct fake name string apple book car searchsortedfirst error field solution implement verbose whenever equal suppose integers sorted naively index obvioulsy following expected transformd solve provide operator build wrapper multiple hard untangle address provides allows write simple liners lowerbound transformation applies note renamed searchsortedlast upperbound searchsorted equalrange