metal programming julia program gpus macos using framework package progress bugs functionality missing performance hasn optimized expect changes prs welcome requirements mac device series chip ventura fairly strict due limited development resources manpower hardware technically relaxed contributing issue details practice probably supported function partially combinations unsupported quick start installed manager repl type enter pkg mode run add equivalently via api import overview toolchain following command importing versioninfo darwin beta llvm apple pro kib allocated array abstraction easiest mtlarray meant convenient container memory provide data parallel gpu writing kernels element int kernel abstractions implemented written follow similar style deviate indexing intrinsics functions arguments arbitrary aggregate etc vadd thread position grid return generic method threads vector profiling supports execution visualization xcode tools generate report profile macro seen code process set capture enabled environment variable detected message stating frame correctly env length info saved gputrace folder current directory view note install peculiarities viewing created traces recommended trace time shader profiler fail wrapper finally interfacing libraries objectivec low level objects map wrappers slightly available mtl submodule exported dev mtldevice agxg xdevice name nsstring hacking relies custom air provided jll normally jllis built yggdrasil look build deps scripts builds local version configures preference depending corresponding jlls pick modified project clone acknowledgements experience contributors cuda amdgpu oneapi