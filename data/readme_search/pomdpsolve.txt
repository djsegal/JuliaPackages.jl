pomdpsolve julia wrapper pomdp solve program orginally developed brown university pomdps interface package code available tony cassandra page solves partially observable markov decision processes taking model specification producing value function action policy employs algorithms exact approximate installation installing run following commands repl add example using pomdpmodels defines tigerpomdp solver pomdpsolvesolver returns alphavectorpolicy parameters stdout filename type abstractstring units default displays status progress information redirected file instead provide name parameter specifying option simply normal rand seed tuple int init via system time functionality requires random able reproduce executing allows set initial string consisting integers separated colon setting result pseudo randomized based clock stat summary flag bool false capable keeping various statistical track stats print true memory limit bytes valid typemax inf upper bound amount threshold met execution terminated imposed naturally elapsed terminal values iteration assumes lifetime maker accrued corresponds zeroes essentially starting serves effectively output send input format identical alpha horizon convergence iterative finite solutions reasons terminate fixed iterations aka epochs positive converge infinite solution discount float sets factor dictates relative usefulness future rewards compared immediate stop criteria symbol weak bellman epoch check converged near optimal determine stopping condition semantics described delta checking types tolerance precision calculations save normally final saved write appened filenames variation zlz adjustable epsilon soln size independent particular algortihms computing variations meant help speed attempt description start solving method specify staring adjust increment adjustment max define maximal soltuion tolerate history length variant compare sizes rpevious whethere staying relatively constant past window care determining previous consider dom computationally simple domination discover useless components useful circumstances prune actor main effect preciseness procedures employ linear programming thisk level inside routines proj purge none domonly step compute forward projection combinations comprise current prior emplying algorithm heart process pruning projected reducing complexity decides details separately individual actions merge results referred functions merging choose pre simplifies witness means found rise alg discovery shape randomly generating finding technique zero specified enum twopass linsup incprune grid mcgs implements differnt selects provided enumeration times pruned purged inc restricted region generalized incremental discuss nuances simplex pairwise search belief generate maximum generated saving external traj monte carlo gauss seidel trajectories space lay funciton lengths num iter count update freq frequently newly created facets generation verbose context global timing cmdline crosssum agenda lpinterface vertexenum mdp param parsimonious approx speedup module controlled extra debugging concerned technically repeatable license library pompd libraries licenses unclear version source laspack custom