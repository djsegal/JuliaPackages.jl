smartboost julia implementation smooth additive regression trees described paper learning tabular data version via juliaconnector available currently support loss extensions planned input features array float dataframe installation pkg add parameters incomplete list smartparam documentation supported depth tree default typically cross validated smartfit lambda rate loglikdivide panel smartloglikdivide set parameter overlap overlaps nfold fold single validation sharevalidation share sample verbose verbosity faster randomizecv false purged time series structure automatically detected smartdata subsamplesharevs row subs sampling randomly drawn iteration determining feature subsampleshare columns column sub example using core workers desired distributed nprocs addprocs random plots jld options cvdepth true slower accurate generate sum nonlinear functions gaussian noise stde test sin exp randn fit predit param fdgp output else paramfield grid stopwhenlossup starts stops soon increases smartpredict smarttrees predict println bestvalue ntrees rmse truth sqrt save load fitted model note key keyerror importance partial dependence marginal effects fnames sorted sortedindx smartrelevance pdp smartpartialplot smartmarginaleffect npoints compute effect vector plot figures png global equity parallelization priors refer examples notice prepare calibrate effective size ess setting sorting date required sort lld excessret stop train split particular tuning entire wish skip step speed comparison methods nofullsample approximately change observations integer switches suggestions speeding approximate computing amd epyc dgp linear sufficient applications minutes runs particularly cores initial cost running consider limiting instead additionally reduces roughly modest efficiency optimum values rapidly start low value sizable improvement rule thumb times double stderulestop iterations decreasing sizably performance