soss library probabilistic programming getting started officially registered package add project type julia repl ready using fails precompile due following gotten version compatibility restrictions current environment happen create folder launch session activate start information projects set pycall python distribution provided install missing dependencies listed precompilation error jump simple linear model begin normal iid size eachrow models class function applying arguments joint sample forward condition subset parameters arbitrary values inputs outputs build predictive assigning particular fake data import random seed randn array float truth rand pairs namedtuple entries element pretend don figure easier terms particles built montecarlomeasurements post dynamichmc diagnostics prediction pred requires posterior check ppc play role similar residuals bayesian approach plenty detail time minor modifications form allows symbolic simplification yhat symlogpdf redundant computation sums helps expand expandsums foldconstants speed computations benchmarktools btime logpdf allocations kib codegen bytes happening hood specify running dist finally outputting seen steps program instead accumulates log density begins initializing step returning note interprets generate specialized code inference primitive idea complex weightedsample sort hybrid increments unknown sampled proposal runtime compiled called future calls fast functions tight loops lift family jointdistribution sometimes usable value args means fine primitives include methods union pymc compile return available result little fiddly respected ignored depend modify monad likelihood weighting example lots method call iterator combine results tools itertools resumablefunctions transducers situation described generating sequence samples single distributions observed mix haskell iteratem carefully specifics merge look intersection interact turing gen ideas outside embed black box stargazers