gaius caesar multi threaded blas library using divide conquer strategy parallelism built top fantastic loopvectorization spawns threads julia depth parallel task runtime routines fearlessly nested inside programs stable tested adventurous note actively maintained anticipate useful relatively simple playground learning implementation linear algebra promising projects result scalable pure tullio octavian performant flexible quick start mul multiply store overwriting contents return serial single remember multiple following auto set num environment variable starting functions list public api internal private matrix multiplication currently fast native implemented matrices types union float int structarray complex support commonly encountered numeric struct rational dual planned click expand defines regular operator whereas takes stores multithreading run variants gais respectively benchmarktools linearalgebra rand zeros btime allocations bytes kib locally versioninfo version commit utc platform info linux gnu cpu amd ryzen six core processor word size libm libopenlibm llvm libllvm orcjit znver threading recursively splitting sub blocks operate change block calling keyword argument left unspecified rough heuristic choose based input heuristics optimal machines supports converted explicity structs arrays structarrays otherwise openblas begin randn complexf true benchmarks floating performance compared running keenly seeing analogous machine avx instruction intel mkl log plots outperforms range sizes appreciably fall believe amount table look forward beating operating competeing integer compare generic provide mat performed gain situation integers provides compelling outperform competition benefit implementing standard straightforward safety break law seize power observe julius automatic array checking occur begins sizecheck false sizechecks occurs sorts bad segfaulty happen package considered expected check obey gemm kernel add utility warned