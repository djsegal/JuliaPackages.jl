naivenaslib library functions mutating computation graphs designed neural architecture search nas mind purpose changes model desired batteries excluded sense independent network implementation policy check contribution world help sometimes annoyingly complex procedure changing existing similar basic usage add main supported operations change input output size vertices parameter pruning insertion graph remove edges vertex makes neighboring ensure consistent dimensions activations price pay explicitly defined language frameworks using modern programming languages defense sole reason begin create started simple summation test inputvertex computes sum typeof mutationvertex compgraph helps evaluating function evaluate represented example mutate remember mutable struct simplelayer nin nout ones int helper creates layer outsize absorbvertex mutation iosize invertex seen consequence changed besides trivial layers type sizeabsorb meaning inputs outputs propagate normal start split div multiplying scalar sizeinvariant lack words scalarmult integer invariantvertex concatenation third called sizestack sizes joined conc dims trait elementwise addition try realize multiples connected paths require result times equivalently divided integers information requirements min noutfactor ninfactor define newinsize newoutsize useful hold clone operation parentgraph copy didn touch due transparent updated metadata actual reasons shown apply intact little bit hand batch normalization pooling element wise core idea basically annotate proper deal labeling major types assumes independently means absorbed don forwards unique backwards architectures annotating quick examples prune insert neurons mockup select rows columns matrix negative values selected indicate cols index params dim wsize collect indskeep repeat colon newmap indices filter ind placed zero length newmat zeros return vector easiliy look prunablelayer reshape business invertices merged weights course complete nonsense perspective easier spot limitation current mutations throwing applied previous thrown replaced net decrease increase utility value metric neuron determine org note column increased target immutable edge time showcase adding support default mismatch advanced focused giving overview customize behavior alter hook functionality strategies achieve fine grained control selecting strategy constraint steps verts throw error successful exactorfail exact sizefailerror failed call instead direction throws errorexception fail silently exactornoop sizefailnoop requested relaxedorfail relaxed happen logging fallback yeah easy eyes job exactorlogthenrelax log sizeexec info relaxing logs pattern built documentation explore options energy write habit abstract base discovered subtypes stop gap solution traits variant bastardization holy attach behaviors freeriding mechanism argument traitdecoration creating supplying takes typically wraps noname name naming debugging mandatory named namedtrait speaking sizechangelogger controlled extra nameonly nameinfostr verbose compared exactly operator arithmetic operators addvertex elaborate traitconf wrappers subtype decoratingtrait else pain wrong painfultrait mutationtrait painlayer implement lot methods methoderror smoothsailingtrait smoothlayer instrumentation modification desirable achieved copying determines individual component copied depending messy pretty names manner override copyfun args keyword fields probably practical real addname otherwise run assume string supply admit thinking dizzy namedgraph contributing contributions welcome please file issue