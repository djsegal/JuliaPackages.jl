oneapi julia support programming toolkit provides unified model package verified currently implementation interface intel compute runtime available linux significant development expect bugs missing features quick start strongly advised official binaries supported windows generation subsystem wsl using alchemist hardware recent distribution installed proceed entering manager repl mode pressing adding theoneapi pkg add installation couple minutes download loader spir tools etc depends spec means compatible refer documentation details perform smoke test calling versioninfo function binary dependencies neo jll libigc gmmlib spirv llvm translator toolchain driver api devices graphics multiple drivers device functions configure current task zedevice iterator gpu vendor ensure functionality expected run suite note pull gpuarrays takes time testing finished milliseconds summary pass total overall success tests passed usage organized follows low level wrappers zero library kernel capabilities abstractions array onel submodule expose flexibility underlying apis user friendly drv ctx zecontext dev gen properties maxtotalgroupsize maxgroupsizex maxgroupsizey maxgroupsizez maxgroupcountx maxgroupcounty maxgroupcountz maxsharedlocalmemory subgroupsizes queue zecommandqueue execute list append barrier built top executing code accelerators reuse opencl intrinsics compile khronos return items reflection macros generated define dso local void unnamed addr src synchronization utils macro expansion call barrierj ret version generator bound schema opcapability addresses opextinstimport std opmemorymodel physical opentrypoint opsource opname uint optypeint opconstant optypevoid optypefunction opfunction none oplabel opcontrolbarrier opreturn opfunctionend finally onearray type makes accelerator write custom kernels thanks rand float status supports capabilties demonstration implements interfaces results featured extensively tested performance issues integration libraries onemkl onednn result operations matrix multiplication unavailable slow debugging igc components instead downloading prebuilt yggdrasil preferences overriding paths resources provided various jlls helpful script automate res folder repository trying found usr lib libiga libigdfcl libopencl clang libigdgmm libze libigdrcl gnu validation layer writing discovered written global file typically home environments localpreferences toml refers modify remove revert default set gpus datatypes following module flags flag false doesn relies values error compilation failed double platform