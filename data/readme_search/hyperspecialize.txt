hyperspecialize proud hack julia package designed resolve method ambiguity errors automating task redefining functions specific types explain solution example suppose peter friend jarrett developed eponymous modules follows module import base struct peternumber export jarrettnumber defined fun numeric look happens user tries using friends error methoderror ambiguous candidates main repl fix define methods applicable neither decide defining question role developers play resolution coordinate efforts agree interact interaction unrealistic poses undue burden communication multiple behaviors desired definitions behavior developer write library run modifed execution environment cassette creates contexts dispatch single concrete subtypes provide utilities extend default definition unless standardize latter approach load dependent decided looks replicable replicate list depends loaded following explicit doesn unpredictable decides explicitly code concretize macro mynumber bigfloat float bool bigint int uint type consider widen set tag widened defines generic chosen widens include triggering evaluated opt join thinking ambiguities jarret added promotion exists stacktrace string promote supertype inlined result top level scope adding chooses instead getting started provides managing defintions replicated concretization enumerate tags describe particular arguments macros interpreted literally symbols referred specify key expand query local specified belonging expanded form mod argument corresponding whatever symbol means name please heart promises combinations appear takes global current substituted foo mykey bar execute calls notice earlier repeated fine print idea simple details data precompilation stored const dictionaries named note happen implicitly called expect exist reason calling eval call init function documentation drawbacks generate includes hyperspecialized mathematical operators alleviated rules unambiguous stands reduce situations sufficient union strategy unlikely redefined drawback manually choose related internal third create forced problematic choice short concretized major benefit based api adopt difficulties involved contextual avoid occur