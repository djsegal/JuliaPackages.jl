dataflowtasks julia package dedicated parallel programming multi core shared memory cpus user annotations read write readwrite program data automatically infers dependencies tasks readme available notebook form installation using pkg pkd add basic usage defines dataflowtask type behaves native task except allows specify explicit information infer constructing analyzing directed acyclic graph based access underlying premise sometimes simpler depend object intended similar api implements macros dspawn dtask dasync behave base counterparts additional declare affects accesses body annotation example implies accessed mode look simple vector float undef result fill view modifies half fetch describing internally set represented reconstructing dag parallalel traces log macro graphviz triggers code loading powered requires info label res plot array independant shown cholesky factorization contrived illustrate parallelize tiled implementation delibarately complex efficient found tiledfactorization algorithm takes symmetric positive definite matrix lower triangular version decomposes tiles sizes simplified step diagonal tile solve update finally submatrix schur complement decomposed steps perform block solves row multiplications following image illustrates sequential implemented linearalgebra tilerange function size assert error tilesize doesn fit dimension serial left blocks uppertriangular ldiv mul construct factorized return zero blasint parallelizing easy wrapping calls adding modes dft chol note extra added attach meaningful labels useful interpret output debugging profiling tools profile scheduled environnement setup context rand adjoint run trigger compilation copy check results err norm inf max comes help understanding inferred execution usual recommended start compiled previous discarded manually call avoid noise runs loginfo visualizing helpful representation identify missing erroneous dependency identifying critical path plotted red understand performances quickly complexity increases test trace timeline threads helps window carries allowing performance limiting factors cairomakie glmakie interactivity categories time bounded length expose parallelism occupy waiting periods cover details possibilities visualization documentation makie meant interactively development process packages considered optional depdendencies assuming environment calling load opt prefer alternative handling improved implementations building operating loopvectorization improve triangularsolve provides approach pursued mentioned combined parallelization strategy create pure factorizations assessed comparison mkl figure generated running script machine intel xeon silver cores ghz topology page literate