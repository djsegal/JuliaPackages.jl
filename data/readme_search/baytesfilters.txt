baytesfilters library perform particle filtering parameter modelwrapper struct modelwrappers introduction start creating univariate normal mixture model via using distributions random unpack rng mersennetwister latent data rand categorical iter create assuming init myparameter param gamma dirichlet base oneto mymodel myobjective objective target equal dimension provided particlefilter assign dynamics dispatching following function basemodel val initial transition particles return markov consist note flexible remarks trajectory current iteration structure process define dependencies mean view access underlying easy adjust filter dependency instance auto regressive look estimating trajectories estimate slightly mydynamics myfilter proposal steps exactly baytesmcmc propose algorithm mode depending check clarification difference functions run sequence diagnostics plots plot label true close nice output evidence luckily discrete evaluate analytically relatively analtyical solution analytical form likelihood logexpfunctions namedtuple nstates length time logsumexp logpdf compare statistics stored resampling step ahead prediction observed inference times variance configuration configure particlefilterdefault pfdefault weighting bootstrap methods systematic referencing marginal type conditional ancestral implementation coverage nparticles ndata threshold ess variety fields options code default arguments scaling scales linearly verify comparing spent ratios benchmarktools btime allocations kib moreover efficiently implemented forward package highly experimental suggestions comments welcome