multisets set unordered collection item appear multiset repetition permitted version subtype abstractset operations bitset supported operators removed instead function issubset creating julia using type elements held int string omitted defaults list vector invoking creates appropriate multiplicity example ones eltype adding deleting push increases added incr allow negative decrease explicitly sets multiplicty delete removes effect keys values pairs returns iterator multiplicyt multiplicities element alpha beta gamma collect array dict entries access determine notice repeated convert effectively printing result println controlled following functions suppose created follows braces causes printed enclosed curly default empty short abbreviated format form proper definition union intersection intersect compute max min disjoint behaves product sum difference cartesian computed nonnegative integer multiplicy setdiff completely cardinality length computes including isempty true exactly comparison operator provided equal submultiset expressed note holds test iteration iterating according counters useful devices counting program reads words text file count word appears step pushing instance basic structure looks return seen module miscellaneous implementation consists single data field called dictionary mapping various ensure integrity enforcing nonnegativity clean purges hash key etc simply cleaned exported probably reason user invoke desired copy assigns object changes affects independent deepcopy