fastarrays formerly called flexiblearrays fast multi dimensional arrays arbitrary lower upper bounds fixed compile time improve efficiency background sometimes index bound question performance convenience example quantum ranging adding array looks tedious type declaration size particular dimension ahead indexing significantly efficient sizes dimensions package provides define types chosen freely generates code using const arr fastarray float undef generic determined creation mixed empty int trivial holding scalar value accessed regular notation getindex setindex functions noticed slightly unusual implementation wise set kept determine parameterized choices correspond function returns respective creating currently support resizing reshaping subarrays straightforward designed reasons model range version respecived faster setting julia confirmed generated machine simpler course benefit accessing actually bottleneck manual flexible objects allocated internally represented tuple integers dimspec ntuple union void via integer leaving colon indicate instead conversely indicates defines element subtype abstractfastarray rank abstract densearray available myarraytype allocate create myarray eltype ndims length obtained lbnd ubnd val access elements