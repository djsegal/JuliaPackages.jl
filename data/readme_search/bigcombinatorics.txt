bigcombinatorics implementation various combinatorial functions return bigint values convention signaled names begin capital letter overview rationale calculate easy julia factorial error overflowerror look table stacktrace lookup int array combinatorics top level scope none fit answer course resolve limitation factorials causes stirlings package using consider instead inlined signed bool packages udg src repl approach shouldn worry arguments function overflows assume result type calculation hampered example stirling remember calculating fibonnaci implicitly calculates fibonacci module saves results calculations subsequent invocations previously stored built similar sufficiently speedy don bother saving simply wrap single time evaluation methods option repeated calls perform bellnum allocations gib bell mib compilation faster cached kib true recursion wisely forth obey nice recurrence relations mathematically elegant computationally problematic compute via save computed thereby avoid explosion incorrect arithmetic call value bytes univariate recursive code stack overflow multivariate suffer light weight self contained rely particular neither provides design philosopy memoize caching previous delete returns fallingfactorial risingfactorial doublefactorial hyperfactorial catalan derangements element set binomial subsets multichoose multisets formed elements warning multinomial vals coefficient index sum vector integers comma separated list words bottom indices partitions nonempty intpartitions integer exactly intpartitionsdistinct distinct euler eulerian permutations ascents powersum menage solutions male female couples managing saved calling reinitializes lost cache tables report prints note total entries