multivectors julia package defines multivector type represent mixed grade linear combinations kvectors vector space blades intended implementation geometric algebra useful clifford operator naming conventions ones closely aligned computer science recommended read documentation product essentially extends algebras types defined operators fundamental redefine wedge inner products using note strictly true vectors complete picture extend require projection simply returns contained commutator catch grades define notice symmetry raising lowering left contraction lcontraction result blade orthogonal properties reduction orthogonality powerful intiutive standard generalization dot examples barycentric coordinates generate basis euclidean simple angle triangle twice don worry factor function calculate coords ratio edge original coord vertex pbc abc barycoords tuple code directly represents relationship body coordinate free index vertices plane adding direction float natural bonus extra information info bit odd lie bracket scalar clean results selecting explicitly relevant common pattern baryscalars map extending dimensions straightforwards tetrahedron generic method add dimension volume cross doesn exist restart main module practice namespace behold pentachoron alle pick hypervolume origin quaternions rotors versors particularly construction geometrically mulitivector transform via effect rotating laying amount rotate assume normalized act multi neccesarily rotation treat versor quaternion means sandwich transforming object multiply modify initial rule normalize familiar transformation indicate reverse acts complex conjugation flips sign lower involve called rotor view sequence reflections understand operates parallel cayley step create mapping bivectors construct single accomplished multiplying bivector simlilar fashion subtracting choose scaled tan trigonometry correct simplifying pulling scaling depends similar arguments arrive recover example taking half prune sort element kvector constructed trig functions cos sin entering values repl keyboard characters required enter tab gotchas typeof unionall operations expected numerical coefficient methods linearalgebra depending specific desireable meet join context multiple definitions implementations chooses omit include linearity extended outermorphism performance design current iteration designed exploring prototyping novel algorithms emerging field applied focus base animation cgi foundational optimally performant rest implemented optimal mind native scalars sqrt exp btime allocation bytes metaprogramming features effectively leverage system compiler heavy lifting creating unqiue false minded intention reference hurdle achieving optimize maintaining flexibility ease rely parser achieve future versions extent packages implementing truely specializing fixed set objects approach klein related grassmann implements wider algebraic framework project contributing please details authors michael alexander ewert developer digital domain license licensed modified apache file