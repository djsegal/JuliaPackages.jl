loopvectorization installation using pkg add supported julia tested nightly warning misusing serious consequences inbounds lead segfaults memory corruption expect time avx macro block code indexing array bounds perform checking iterationg empty collection iterating loop eachindex float undefined behavior result accesses ensure loops behave correctly relying specific execution operations inside scope correctness depend particular implement cumsum usage library provides prefix broadcast statement tries vectorize improve runtime performance assumes iterations reordered currently supports simple nested inner constant outer single level noop lest limitations removed future version benchmarks please documentation versus base clang icc ifort gfortran eigen believe compiler flags improved submit regressions semi regular basis feel file issue sample examples dot product llvm default generate essentially optimal primary vectorized computes simd vector width cpu running data meaning compute slow handling tails length reason benchmark plots drop size remainder increases optimization handle efficiently benchmarktools function mydot generic method mydotavx rand btime allocations bytes similar shorter remains unchanged matrix multiply fancier familiar example dive mygemm fastmath axes cmn zero eltype mygemmavx undef randn trial estimate allocs minimum median mean maximum samples evals linearalgebra test passed blas set num threads vendor mkl mul produce kernel implementation multiplication able matrices blocking packing arrays prevent bottle necked day try model costs movement cache following low view tool generating efficient computational kernels leaving tasks parallelization efficiency broadcasting straightforward operation expressed via typed lazy operator buf amulbtest escapes broadcasts fuses easy write avoids intermediates recomend splitting pieces isolating especially separate leverage advantage optimizations note faster determined information dimensions leading dimension broadcasted compile dealing structs key gains leveraging knowledge exactly int handled strightforward generalize containing complex instead recommended users wishing apply packages structarrays transform element struct gemm const matrixfint union factor structmatrixcomplexfint structarray complexf accept collect approaches variety numeric types dual doublefloats etc gaius mablas paddedmatrices recursivefactorization tullio free adding list