bucephalus package aims automate solution heterogeneous agent economic models using model based reinforcement learning progress expect converge correctly stage usage install run julia command line add tutorials documentation severely documented moment formal currently confined readme function level added seriously reworking backend existing packages thorough time ready public consumption roadmap project feel free contact github jeffreyesun email jesun princeton dot edu designed solve heterogenous macroeconomic market spatial segmentation agents interact environment individual wealth variables common total factor productivity choices period maximize net value future utilities called return stochasticity takes form random drawn inputs transition key detail framework assumed representative internalize effects aggregate quantities components object represents description algorithm attempts policy steady distribution aim include solvers easy accessible interface defining algorithms solved described macros hood syntax examples found folder example defined train types possibly segmentations locations nine stages terms computed course single iteration simulation parameters set constants beginning definition changed define economy output dependent depend equilibrium conventionally prices condition clearing conditions earlier choice chosen utility reward shock varaibles specified strictly speaking assigned rule computing functions variable following determining host type specific labor endowment location determines looks vartype var inputvar input implicitly vector values ref statedep meanpeerwealth mean somewhat associated macro create calling context name statevar lognormal unrolled addstatevariable float init additional match provided operators bymembers defines relationship simply belong relations residence workplace declared matchvar loc rand resulting property partnerhost term hopes day supporting spouse landlord construct acts rent refers finding returning similarly residents descriptions abstract please check action implemented actor critic details tailored standard feature setting differentiate allows automatic differentiation directly compute derivative respect continuous update representation pseudocode pdf note performance improvement obtained specifying actions choose expenditure instead valid regardless limitations perform presence strong convexities network updated gradient descent stuck local minima ergodic fail cover space traversed simulating forward exhibits path dependence try remedy providing option begin various starting parallel periodically restarting initial manually poor entire unnecessary implementing generalized moments deepham replace hand coded addition significantly reducing size source code implement nested including brute force solver robust strategies draw episodes allow user configure method methods test optimality networks euler equation errors effect monopolistic competition