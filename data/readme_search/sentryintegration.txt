sentry integration package allows production environment advantage error monitoring release tracking transaction tracing platform internally synchronous api equivalent python javascript apis featured includes basics exception reporting tags span traces usage start app initialise variable dsn set default sentryintegration init otherwise pass optional assign relevant example tag customer string version env run unset messages sent via capture message level tasks catch unhandled exceptions try core loop exc maybe rethrow plain info boring warning external rest request received name unknown warn including attachment noticed errors field gql return attachments command response spec desc specification structure script specific msg failed json data query drop tables graph recent feature trace execution multiple services frontend authentication layer backend server database create context manager style value inner overall handle web url function logical operation captured time recorded func nested reuse parent passed service track transactions call regular able preserve spawned finish manually persist myapp lifetime async seperate task client details inside separate makes automatically nest future underneath