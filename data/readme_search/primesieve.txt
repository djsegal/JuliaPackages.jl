primesieve prime factoring functions package provides related generating counting primes integers fastest source libraries name cause collisions note dec bitrot rests bit broken tests commented suite pass fix please challenging wrapper standalone program inputs links authors tables unaware binaries libprimesieve libprimecount windows osx easy installation platforms registered dependency install unix pkg clone build genprimes generate array inclusive mfactor factor decimal digits primepi function countprimes nextprime prevprime someprimes iterator allprimes nthprime nth nprimes start isprime primality test gaussian randprime random following oliveira sieve library integer msieve gmp ecm data types encoded int native type uint input output algorithm deleglise rivat risk overflow constructing giving arguments easiest avoid quotes available bigint deepconvert vectorized stop return alg using specified auto default efficient depends parameters larger intervals values keyword fast exceed upper limit argument chosen automatically julia element written computes algorithms methods tabsieve tries choose faster notes slower legendre lehmer meissel lmo parallel method combination table entry example time elapsed bytes allocated dict entries true search factors deadline aborts minutes logfile filename log writes information file info prints terminal returns factorizations calls libmsieve libecm count tuplets interval looks largest value requested remaining logically equivalent equal tuplet optional sextuplets implemented nexta variants examples satisfying triplets quote expression string converted prevents kth preceeding finding optimal partially automated alternate coded borcher iterators primorial defined prod usage single threaded versions scountprimes printprimes print legendrephi sum phi primeli offset logarithmic integral primeliinv inverse range equally lim maximum composite primesievesize set size kilobytes setting satisfy num threads cores numthreads primemaxstop passed parameter xmax allowed primetest run completley hidden user access directly happened look primelookup length found sieves primetableinfo listed increment incr tab len max provided aid understanding behavior tuple elements returned rem index primetables primetable containing format map lengths primetablefilename returning path loaded details typemax explicitly bigger instance routines appropriate convert indices conversions depending support primetabletype primesievetype various formats interface eltype apopcount curiosity supposed optimized loop arr binary representation truncated multiple treats contents bits particular pointers counted comments kim walisch counts population tree merging knowledge arithmetic operations cpus fill overhead negligible lpopcount ones version dric lauradoux simple improved worst magnitude base bugs interrupting call usually memory error apparently static interrupt subsequent sieving runs correct results segfault disable sigint appear leaks crash system handler installed code uninstall