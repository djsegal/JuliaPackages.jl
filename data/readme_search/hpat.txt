hpat repository maintained currently developing python version performance analytics toolkit julia based framework data clusters easy extremely fast magnitude faster alternatives apache spark automatically parallelizes tasks written generates efficient mpi code existing libraries hdf intel acceleration library daal parallelaccelerator compilertools packages development feedback highly appreciated presentation juliacon slides slideshare video youtube quick start pkg add mpirun examples issues installed correctly ubuntu commands resolve sudo apt install gcc gfortran cmake openmpi bin common libopenmpi dev libhdf deps build comparison logistic regression front page website demonstrates speedup compared hadoop example simply memory reads writes disks frequently kept processor registers addition doesn tcp java virtual machine jvm overheads bare metal compare local note parallel required dependencies ppa staticfloat juliareleases update libblas libopenblas generate input million labeled instances home path tmp run processes iterations file assuming configured properly driver executor set submit src main csv monte carlo estimation times various reasons divide computation statically executing program operation dynamic scheduler overhead importantly enormous array map executes reduce removes unnecessary arrays create generated simple loop hence performed extra access usage programmers follow directions effectively task self contained function annotated acc reading samples using datasource syntax form level matrix vector computations comprehensions parallelize sequential loops column major followed matrices divides columns means features sample initialization time issue cost runtime package precompilation limited solutions