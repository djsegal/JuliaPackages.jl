<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-symbolicsat" class="anchor" aria-hidden="true" href="#symbolicsat"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SymbolicSAT</h1>
<p><strong>WARNING: This package is experimental! Use it only to find bugs.</strong></p>
<p>This package extends <a href="https://juliasymbolics.github.io/SymbolicUtils.jl/" rel="nofollow">SymbolicUtils</a> expression simplification with a theorem prover.</p>
<p>It is a wrapper around <a href="https://github.com/ahumenberger/Z3.jl">a wrapper</a> to <a href="https://github.com/Z3Prover/z3/wiki">The Z3 Theorem Prover</a>.</p>
<p>Usage:</p>
<ol start="0">
<li><code>using SymbolicUtils, SymbolicSAT</code></li>
<li>Construct a <code>Constraints([cs...])</code> where <code>cs</code> are boolean expressions</li>
<li>Pass it as the second argument to <code>simplify</code></li>
</ol>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SymbolicUtils, SymbolicSAT

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@syms</span> a<span class="pl-k">::</span><span class="pl-c1">Real</span> b<span class="pl-k">::</span><span class="pl-c1">Real</span>
(a, b)

julia<span class="pl-k">&gt;</span> constraints <span class="pl-k">=</span> <span class="pl-c1">Constraints</span>([a<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> b<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">&lt;</span> <span class="pl-c1">4</span>])
Constraints<span class="pl-k">:</span>
  ((a <span class="pl-k">^</span> <span class="pl-c1">2</span>) <span class="pl-k">+</span> (b <span class="pl-k">^</span> <span class="pl-c1">2</span>)) <span class="pl-k">&lt;</span> <span class="pl-c1">4</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">simplify</span>((a <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>) <span class="pl-k">&amp;</span> (b <span class="pl-k">&lt;</span> <span class="pl-c1">2</span>), <span class="pl-c1">Constraints</span>([a<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> b<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">&lt;</span> <span class="pl-c1">4</span>]))
<span class="pl-c1">true</span></pre></div>
<p>Thanks to the author of <a href="https://github.com/ahumenberger/Z3.jl">Z3.jl</a> for the Julia bindings and answering my questions!</p>
</article></div>