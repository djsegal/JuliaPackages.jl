<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-awss3" class="anchor" aria-hidden="true" href="#awss3"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>AWSS3</h1>
<p>AWS S3 Interface for Julia</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaCloud/AWSS3.jl/workflows/CI/badge.svg"><img src="https://github.com/JuliaCloud/AWSS3.jl/workflows/CI/badge.svg" alt="CI" style="max-width:100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width:100%;"></a>
<a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width:100%;"></a>
<a href="https://juliacloud.github.io/AWSCore.jl/build/AWSS3.html" rel="nofollow">Documentation</a></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using AWSS3
using AWS # for `global_aws_config`

aws = global_aws_config(; region=&quot;us-east-2&quot;) # pass keyword arguments to change defaults

s3_create_bucket(aws, &quot;my.bucket&quot;)
s3_enable_versioning(aws, &quot;my.bucket&quot;)

s3_put(aws, &quot;my.bucket&quot;, &quot;key&quot;, &quot;Hello!&quot;)
println(s3_get(aws, &quot;my.bucket&quot;, &quot;key&quot;))
"><pre><span class="pl-k">using</span> AWSS3
<span class="pl-k">using</span> AWS <span class="pl-c"><span class="pl-c">#</span> for `global_aws_config`</span>

aws <span class="pl-k">=</span> <span class="pl-c1">global_aws_config</span>(; region<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>us-east-2<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> pass keyword arguments to change defaults</span>

<span class="pl-c1">s3_create_bucket</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>my.bucket<span class="pl-pds">"</span></span>)
<span class="pl-c1">s3_enable_versioning</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>my.bucket<span class="pl-pds">"</span></span>)

<span class="pl-c1">s3_put</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>my.bucket<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>key<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Hello!<span class="pl-pds">"</span></span>)
<span class="pl-c1">println</span>(<span class="pl-c1">s3_get</span>(aws, <span class="pl-s"><span class="pl-pds">"</span>my.bucket<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>key<span class="pl-pds">"</span></span>))</pre></div>
<h2><a id="user-content-s3path" class="anchor" aria-hidden="true" href="#s3path"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>S3Path</code></h2>
<p>This package exports the <code>S3Path</code> object.
This is an <code>AbstractPath</code> object as defined by <a href="https://github.com/rofinn/FilePathsBase.jl">FilePathsBase.jl</a>, allowing users to use
Julia's <code>Base</code> <a href="https://docs.julialang.org/en/v1/base/file/" rel="nofollow">file system interface</a> to
obtain information from S3 buckets.
See the below example.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using AWSS3, AWS, FilePathsBase;

# global_aws_config() is also the default if no `config` argument is passed
julia&gt; p = S3Path(&quot;s3://bucket-name/dir1/&quot;, config=global_aws_config());

julia&gt; readdir(p)
1-element Vector{SubString{String}}:
 &quot;demo.txt&quot;

julia&gt; file = joinpath(p, &quot;demo.txt&quot;)
p&quot;s3://bucket-name/dir1/demo.txt&quot;

julia&gt; stat(file)
Status(
  device = 0,
  inode = 0,
  mode = -rw-rw-rw-,
  nlink = 0,
  uid = 1000 (username),
  gid = 1000 (username),
  rdev = 0,
  size = 34 (34.0),
  blksize = 4096 (4.0K),
  blocks = 1,
  mtime = 2021-01-30T18:53:02,
  ctime = 2021-01-30T18:53:02,
)

julia&gt; String(read(file))  # fetch the file into memory
&quot;this is a file for testing S3Path\n&quot;

julia&gt; rm(file)  # delete the file
UInt8[]
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> AWSS3, AWS, FilePathsBase;

<span class="pl-c"><span class="pl-c">#</span> global_aws_config() is also the default if no `config` argument is passed</span>
julia<span class="pl-k">&gt;</span> p <span class="pl-k">=</span> <span class="pl-c1">S3Path</span>(<span class="pl-s"><span class="pl-pds">"</span>s3://bucket-name/dir1/<span class="pl-pds">"</span></span>, config<span class="pl-k">=</span><span class="pl-c1">global_aws_config</span>());

julia<span class="pl-k">&gt;</span> <span class="pl-c1">readdir</span>(p)
<span class="pl-c1">1</span><span class="pl-k">-</span>element Vector{SubString{String}}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>demo.txt<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> file <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(p, <span class="pl-s"><span class="pl-pds">"</span>demo.txt<span class="pl-pds">"</span></span>)
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>s3://bucket-name/dir1/demo.txt<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">stat</span>(file)
<span class="pl-c1">Status</span>(
  device <span class="pl-k">=</span> <span class="pl-c1">0</span>,
  inode <span class="pl-k">=</span> <span class="pl-c1">0</span>,
  mode <span class="pl-k">=</span> <span class="pl-k">-</span>rw<span class="pl-k">-</span>rw<span class="pl-k">-</span>rw<span class="pl-k">-</span>,
  nlink <span class="pl-k">=</span> <span class="pl-c1">0</span>,
  uid <span class="pl-k">=</span> <span class="pl-c1">1000</span> (username),
  gid <span class="pl-k">=</span> <span class="pl-c1">1000</span> (username),
  rdev <span class="pl-k">=</span> <span class="pl-c1">0</span>,
  size <span class="pl-k">=</span> <span class="pl-c1">34</span> (<span class="pl-c1">34.0</span>),
  blksize <span class="pl-k">=</span> <span class="pl-c1">4096</span> (<span class="pl-c1">4.0</span>K),
  blocks <span class="pl-k">=</span> <span class="pl-c1">1</span>,
  mtime <span class="pl-k">=</span> <span class="pl-c1">2021</span><span class="pl-k">-</span><span class="pl-c1">01</span><span class="pl-k">-</span><span class="pl-c1">30</span>T18<span class="pl-k">:</span><span class="pl-c1">53</span><span class="pl-k">:</span><span class="pl-c1">02</span>,
  ctime <span class="pl-k">=</span> <span class="pl-c1">2021</span><span class="pl-k">-</span><span class="pl-c1">01</span><span class="pl-k">-</span><span class="pl-c1">30</span>T18<span class="pl-k">:</span><span class="pl-c1">53</span><span class="pl-k">:</span><span class="pl-c1">02</span>,
)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">String</span>(<span class="pl-c1">read</span>(file))  <span class="pl-c"><span class="pl-c">#</span> fetch the file into memory</span>
<span class="pl-s"><span class="pl-pds">"</span>this is a file for testing S3Path<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">rm</span>(file)  <span class="pl-c"><span class="pl-c">#</span> delete the file</span>
UInt8[]</pre></div>
</article></div>