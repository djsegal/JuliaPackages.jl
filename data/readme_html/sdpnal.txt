<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-sdpnaljl" class="anchor" aria-hidden="true" href="#sdpnaljl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SDPNAL.jl</h1>
<p dir="auto"><a href="https://github.com/jump-dev/SDPNAL.jl">SDPNAL.jl</a> is wrapper for the
<a href="https://blog.nus.edu.sg/mattohkc/softwares/sdpnalplus" rel="nofollow">SDPNALplus</a> solver.</p>
<p dir="auto">The wrapper has two components:</p>
<ul dir="auto">
<li>an exported <code>sdpnalplus</code> function that is a thin wrapper on top of the
<code>sdpnalplus</code> MATLAB function</li>
<li>an interface to <a href="https://github.com/jump-dev/MathOptInterface.jl">MathOptInterface</a></li>
</ul>
<h2 dir="auto"><a id="user-content-affiliation" class="anchor" aria-hidden="true" href="#affiliation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Affiliation</h2>
<p dir="auto">This wrapper is maintained by the JuMP community and is not an official wrapper
of SDPNALplus.</p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto"><code>SDPNAL.jl</code> is licensed under the <a href="https://github.com/jump-dev/SDPNAL.jl/blob/master/LICENSE.md">MIT License</a>.</p>
<p dir="auto">The underlying solver, <a href="https://blog.nus.edu.sg/mattohkc/softwares/sdpnalplus/" rel="nofollow">SDPNALplus</a>
is licensed under the <a href="https://creativecommons.org/licenses/by-sa/4.0/" rel="nofollow">Creative Commons Attribution-ShareAlike 4.0 International Public License</a>.</p>
<p dir="auto">In addition, SDPNAL requires an installation of MATLAB, which is a closed-source
commercial product for which you must <a href="https://www.mathworks.com/products/matlab.html" rel="nofollow">obtain a license</a>.</p>
<h2 dir="auto"><a id="user-content-use-with-jump" class="anchor" aria-hidden="true" href="#use-with-jump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Use with JuMP</h2>
<p dir="auto">To use SDPNAL with <a href="https://github.com/jump-dev/JuMP.jl">JuMP</a>, do:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JuMP, SDPNAL
model = Model(SDPNAL.Optimizer)
set_attribute(model, &quot;printlevel&quot;, 0)"><pre><span class="pl-k">using</span> JuMP, SDPNAL
model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(SDPNAL<span class="pl-k">.</span>Optimizer)
<span class="pl-c1">set_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>printlevel<span class="pl-pds">"</span></span>, <span class="pl-c1">0</span>)</pre></div>
<p dir="auto">Note that, contrary to implementation of other solver-independent interfaces,
using SDPNAL from JuMP or MOI fully exploits the particular structures of the
SDPNAL interface and does not create superfluous slack variables and equality
constraints as discussed in <a href="https://arxiv.org/pdf/1710.10604.pdf" rel="nofollow">the SDPNAL guide</a>:</p>
<blockquote>
<p dir="auto">A new interface is necessary to facilitate the modeling of an SDP problem for
SDPNAL+ because of latter’s flexibility to directly accept inequality
constraints of the form “l ≤ B(X) ≤ u”, and bound constraints of the form
“L ≤ X ≤ U”. The flexibility can significantly simplify the generation of the
data in the SDPNAL+ format as compared to what need to be done in CVX or
YALMIP to reformulate them as equality constraints through introducing extra
variables. In addition, the final number of equality constraints present in
the data input to SDPNAL+ can also be substantially fewer than those present
in CVX or YALMIP. It is important to note here that the number of equality
constraints present in the generated problem data can greatly affect the
computational efficiency of the solvers, especially for interior-point based
solvers.</p>
</blockquote>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">First, make sure that you satisfy the requirements of the
<a href="https://github.com/JuliaInterop/MATLAB.jl">MATLAB.jl</a> Julia package, and that
the SDPNALplus software is installed in your
<a href="http://www.mathworks.com/products/matlab/" rel="nofollow">MATLAB™</a> installation.</p>
<p dir="auto">Then, install <code>SDPNAL.jl</code> using <code>Pkg.add</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import Pkg
Pkg.add(&quot;SDPNAL&quot;)"><pre><span class="pl-k">import</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>SDPNAL<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">There is a <code>startup.m</code> file at the root of the SDPNAL folder. This adds all
subdirectories recursively when MATLAB starts. However, the <code>interface</code> directory
contains a <code>.git</code> subdirectory which contains a very large number of files.
Because of this, MATLAB crashes if SDPNAL is in its path because the <code>startup.m</code>
requests MATLAB to try to parse all the files in the <code>.git</code> folder. To resolve
this problem, delete the <code>startup.m</code> file and <code>.git</code> folder, and add the
subdirectories manually your <code>toolbox/local/pathdef.m</code> file as follows:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="function p = pathdef

% (...)

p = [...
%%% BEGIN ENTRIES %%%
'/path/to/SDPNALv1.0:', ...
'/path/to/SDPNALv1.0/interface:', ...
'/path/to/SDPNALv1.0/mexfun:', ...
'/path/to/SDPNALv1.0/solver:', ...
'/path/to/SDPNALv1.0/solver_main_default:', ...
'/path/to/SDPNALv1.0/util:', ...
% (...)"><pre class="notranslate"><code>function p = pathdef

% (...)

p = [...
%%% BEGIN ENTRIES %%%
'/path/to/SDPNALv1.0:', ...
'/path/to/SDPNALv1.0/interface:', ...
'/path/to/SDPNALv1.0/mexfun:', ...
'/path/to/SDPNALv1.0/solver:', ...
'/path/to/SDPNALv1.0/solver_main_default:', ...
'/path/to/SDPNALv1.0/util:', ...
% (...)
</code></pre></div>
<p dir="auto">If you have <a href="https://github.com/jump-dev/SDPT3.jl">SDPT3</a> in addition to SDPNAL
in the MATLAB path (that is, the <code>toolbox/local/pathdef.m</code> file) then you
might have issues because both solvers define a <code>validate</code> function, and this
might make SDPNAL call SDPT3's <code>validate</code> function instead of SDPT3's <code>validate</code>
function.</p>
</article></div>