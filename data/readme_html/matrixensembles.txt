<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://travis-ci.org/iitis/MatrixEnsembles.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8a2f30d7bd9c0b874e1d3bac9de5238a51b0358f9d3c1cdca2c7c060c66b5a62/68747470733a2f2f7472617669732d63692e6f72672f69697469732f4d6174726978456e73656d626c65732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/iitis/MatrixEnsembles.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/iitis/MatrixEnsembles.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/fc31d6e43593282716c1e0d0737d463dc5934ba280272dc2f4858e853f6b864b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f69697469732f4d6174726978456e73656d626c65732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/iitis/MatrixEnsembles.jl/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-matrixensemblesjl" class="anchor" aria-hidden="true" href="#matrixensemblesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MatrixEnsembles.jl</h1>
<h2 dir="auto"><a id="user-content-sampling-random-matrices-on-the-gpu" class="anchor" aria-hidden="true" href="#sampling-random-matrices-on-the-gpu"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Sampling random matrices on the GPU</h2>
<p dir="auto">We have introduced an experimental implementation of sampling of random matrices and random quantum objects on the GPU. In order to use this feature, the <code>CUDA</code> package is required. To import <code>MatrixEnsembles</code> with GPU support use</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using CUDA, MatrixEnsembles"><pre><span class="pl-k">using</span> CUDA, MatrixEnsembles</pre></div>
<p dir="auto">In order to sample use the <code>curand</code> method on a distribuiotn. For instance</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; c = CUE(4096)
CircularEnsemble{2}(4096, GinibreEnsemble{2}(4096, 4096))

julia&gt; @time rand(c);
 10.452419 seconds (8.22 k allocations: 2.005 GiB, 2.18% gc time)

julia&gt; @time MatrixEnsembles.curand(c);
  0.459959 seconds (624.79 k allocations: 21.493 MiB)"><pre>julia<span class="pl-k">&gt;</span> c <span class="pl-k">=</span> <span class="pl-c1">CUE</span>(<span class="pl-c1">4096</span>)
<span class="pl-c1">CircularEnsemble</span><span class="pl-c1">{2}</span>(<span class="pl-c1">4096</span>, <span class="pl-c1">GinibreEnsemble</span><span class="pl-c1">{2}</span>(<span class="pl-c1">4096</span>, <span class="pl-c1">4096</span>))

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@time</span> <span class="pl-c1">rand</span>(c);
 <span class="pl-c1">10.452419</span> seconds (<span class="pl-c1">8.22</span> k allocations<span class="pl-k">:</span> <span class="pl-c1">2.005</span> GiB, <span class="pl-c1">2.18</span><span class="pl-k">%</span> gc time)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@time</span> MatrixEnsembles<span class="pl-k">.</span><span class="pl-c1">curand</span>(c);
  <span class="pl-c1">0.459959</span> seconds (<span class="pl-c1">624.79</span> k allocations<span class="pl-k">:</span> <span class="pl-c1">21.493</span> MiB)</pre></div>
<p dir="auto">Please report any bugs/problems and feature requests.</p>
</article></div>