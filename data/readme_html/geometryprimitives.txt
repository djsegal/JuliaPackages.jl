<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-geometryprimitives" class="anchor" aria-hidden="true" href="#geometryprimitives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GeometryPrimitives</h1>
<p><a href="https://travis-ci.org/stevengj/GeometryPrimitives.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/91016544538778feae1fd5cf7726b5d058f99fee9ffe604e70116d13cb45ffaa/68747470733a2f2f7472617669732d63692e6f72672f73746576656e676a2f47656f6d657472795072696d6974697665732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/stevengj/GeometryPrimitives.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/StevenGJohnson/geometryprimitives-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5222743284d5a5c1424b651d881b0dd6339ffe3f4c6757a1404cafc22015106b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f67666434746169383471396b646d38383f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/gfd4tai84q9kdm88?svg=true" style="max-width:100%;"></a>
<a href="http://codecov.io/github/stevengj/GeometryPrimitives.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/fd99d0a78efecdaea4cfefeb1d3bd7448db2d744d8202cecf809fdca8dcd83b5/687474703a2f2f636f6465636f762e696f2f6769746875622f73746576656e676a2f47656f6d657472795072696d6974697665732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/stevengj/GeometryPrimitives.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package provides a set of geometric primitive types (spheres, boxes,
cylinders, and so on) and operations on them designed to enable piecewise
definition of functions, especially for finite-difference and finite-element
simulations, in the Julia language.</p>
<p>For example, suppose that you are discretizing a PDE like the Poisson
equation ∇⋅c∇u = f, and you want to provide a simple user interface
for the user to specify the function <code>c(x)</code>.  In many applications,
<code>c</code> will be piecewise constant, and you want to be able to specify
<code>c = 1</code> in one box, <code>c = 2</code> in some cylinders, etcetera.   The
GeometryPrimitives package allows the user to provide a list of
shapes with associated data (in this case, the value of <code>c</code>) to
define such a <code>c(x)</code>.</p>
<p>Furthermore, the application to discretized simulations imposes a couple
of additional requirements:</p>
<ul>
<li>
<p>One needs to be able to evaluate <code>c(x)</code> a huge number of times (once
for every point on a grid).  So, we provide a fast O(log n) K-D tree
data structure for rapid searching of shapes.</p>
</li>
<li>
<p>Often, one wants to compute the <em>average</em> of <code>c(x)</code> over a voxel,
so we provide routines for rapid <em>approximate</em> voxel averages.</p>
</li>
<li>
<p>Often, one needs not only the value <code>c(x)</code> but the normal vector
to the nearest shape, so we provide normal-vector computation.</p>
</li>
</ul>
<p>This package was inspired by the geometry utilities in my
<a href="http://ab-initio.mit.edu/wiki/index.php/Libctl" rel="nofollow">Libctl</a> package.</p>
</article></div>