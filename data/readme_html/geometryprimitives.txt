<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-geometryprimitives" class="anchor" aria-hidden="true" href="#geometryprimitives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GeometryPrimitives</h1>
<p dir="auto"><a href="https://github.com/stevengj/GeometryPrimitives.jl/actions"><img src="https://github.com/stevengj/GeometryPrimitives.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/stevengj/GeometryPrimitives.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/fd99d0a78efecdaea4cfefeb1d3bd7448db2d744d8202cecf809fdca8dcd83b5/687474703a2f2f636f6465636f762e696f2f6769746875622f73746576656e676a2f47656f6d657472795072696d6974697665732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Codecov" data-canonical-src="http://codecov.io/github/stevengj/GeometryPrimitives.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides a set of geometric primitive types (balls, cuboids, cylinders, and
so on) and operations on them designed to enable piecewise definition of functions,
especially for finite-difference and finite-element simulations, in the Julia language.</p>
<p dir="auto">For example, suppose that you are discretizing a PDE like the Poisson equation ∇⋅c∇u = f,
and you want to provide a simple user interface for the user to specify the function <code>c(x)</code>.
In many applications, <code>c</code> will be piecewise constant, and you want to be able to specify
<code>c = 1</code> in one box, <code>c = 2</code> in some cylinders, etcetera.   The GeometryPrimitives package
allows the user to provide a list of shapes with associated data (in this case, the value of
<code>c</code>) to define such a <code>c(x)</code>.</p>
<p dir="auto">Furthermore, the application to discretized simulations imposes a couple of additional
requirements:</p>
<ul dir="auto">
<li>
<p dir="auto">One needs to be able to evaluate <code>c(x)</code> a huge number of times (once for every point on a
grid).  So, we provide a fast O(log n) K-D tree data structure for rapid searching of shapes.</p>
</li>
<li>
<p dir="auto">Often, one wants to compute the <em>average</em> of <code>c(x)</code> over a voxel, so we provide routines
for rapid <em>approximate</em> voxel averages.</p>
</li>
<li>
<p dir="auto">Often, one needs not only the value <code>c(x)</code> but the normal vector to the nearest shape, so
we provide normal-vector computation.</p>
</li>
</ul>
<p dir="auto">This package was inspired by the geometry utilities in Steven G. Johnson's [Libctl]
(<a href="http://ab-initio.mit.edu/wiki/index.php/Libctl" rel="nofollow">http://ab-initio.mit.edu/wiki/index.php/Libctl</a>) package.</p>
</article></div>