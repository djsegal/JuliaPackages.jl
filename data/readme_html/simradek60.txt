<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-simradek60jl" class="anchor" aria-hidden="true" href="#simradek60jl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SimradEK60.jl</h1>
<p><a href="https://travis-ci.org/EchoJulia/SimradEK60.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a6c0f1d4a1e7022445b38fbacca58565d8f167450a2067529d3619ac9b345957/68747470733a2f2f7472617669732d63692e6f72672f4563686f4a756c69612f53696d726164454b36302e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/EchoJulia/SimradEK60.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://coveralls.io/github/EchoJulia/SimradEK60.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/03bb524795e6423fbbdc1782d8f9f3106495aef508b9ad5036aac62ba350f50e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4563686f4a756c69612f53696d726164454b36302e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/EchoJulia/SimradEK60.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/EchoJulia/SimradEK60.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/0689c0f674ccc11c561e0b57917c9d679274870af14e9939bcb77231187e8229/687474703a2f2f636f6465636f762e696f2f6769746875622f4563686f4a756c69612f53696d726164454b36302e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/EchoJulia/SimradEK60.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Introduction</h2>
<p>Based on SimradRaw.jl, this project reads and intepretes Simrad EK60
RAW files, extracting power and phase angle information and allowing
calculation of volume backscatter, Sv.</p>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using SimradEK60
using SimradEK60TestData
filename = EK60_SAMPLE
ps = SimradEK60.load(filename)
ps38 = [p for p in ps if p.frequency == 38000]
Sv38 = Sv(ps38) # Volume backscatter
al38 = alongshipangle(ps38) # Split beam angle
at38 = athwartshipangle(ps38)
_R = R(ps38) # Range / depth
_t = filetime(ps38) # timestamps
"><pre><code>using SimradEK60
using SimradEK60TestData
filename = EK60_SAMPLE
ps = SimradEK60.load(filename)
ps38 = [p for p in ps if p.frequency == 38000]
Sv38 = Sv(ps38) # Volume backscatter
al38 = alongshipangle(ps38) # Split beam angle
at38 = athwartshipangle(ps38)
_R = R(ps38) # Range / depth
_t = filetime(ps38) # timestamps
</code></pre></div>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h2>
<ol>
<li>
<p><a href="http://www.simrad.net/ek60_ref_english/default.htm" rel="nofollow">Simrad EK60 Context sensitive on-line help</a></p>
</li>
<li>
<p>MacLennan, David, and E. John Simmonds. Fisheries acoustics. Vol. 5. Springer Science &amp; Business Media, 2013.</p>
</li>
<li>
<p>Echoview documentation, <a href="http://bit.ly/2o1oOrq" rel="nofollow">http://bit.ly/2o1oOrq</a>  <a href="http://bit.ly/2pqzS2D" rel="nofollow">http://bit.ly/2pqzS2D</a></p>
</li>
</ol>
</article></div>