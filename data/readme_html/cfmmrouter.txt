<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-cfmmrouter" class="anchor" aria-hidden="true" href="#cfmmrouter"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CFMMRouter</h1>
<p dir="auto"><a href="https://bcc-research.github.io/CFMMRouter.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/bcc-research/CFMMRouter.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/bcc-research/CFMMRouter.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/bcc-research/CFMMRouter.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5364271a7f1eeeca11989a05d81a0c91585c66286a4d58b0c8ac769f793ac1cf/68747470733a2f2f636f6465636f762e696f2f67682f6263632d72657365617263682f43464d4d526f757465722e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d5459697a4d6752594e45" alt="codecov" data-canonical-src="https://codecov.io/gh/bcc-research/CFMMRouter.jl/branch/main/graph/badge.svg?token=TYizMgRYNE" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h2>
<p dir="auto">This package contains a fast solver for the CFMM Routing problem, as defined
by Angeris et al. in <a href="https://angeris.github.io/papers/cfmm-routing.pdf" rel="nofollow">Optimal Routing for Constant Function Market Makers</a>.
We partially decompose the problem to enable fast solutions when the number
of CFMMs is large relative to the number of tokens.</p>
<p dir="auto">For more information, check out the <a href="https://bcc-research.github.io/CFMMRouter.jl/dev/" rel="nofollow">documentation</a>.</p>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick Start</h2>
<p dir="auto">First, add the package locally.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg; Pkg.add(&quot;CFMMRouter&quot;)"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CFMMRouter<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Make some swap pools.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using LinearAlgebra
using CFMMRouter

equal_pool = ProductTwoCoin([1e6, 1e6], 1, [1, 2])
unequal_small_pool = ProductTwoCoin([1e3, 2e3], 1, [1, 2])
prices = ones(2)"><pre><span class="pl-k">using</span> LinearAlgebra
<span class="pl-k">using</span> CFMMRouter

equal_pool <span class="pl-k">=</span> <span class="pl-c1">ProductTwoCoin</span>([<span class="pl-c1">1e6</span>, <span class="pl-c1">1e6</span>], <span class="pl-c1">1</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>])
unequal_small_pool <span class="pl-k">=</span> <span class="pl-c1">ProductTwoCoin</span>([<span class="pl-c1">1e3</span>, <span class="pl-c1">2e3</span>], <span class="pl-c1">1</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>])
prices <span class="pl-k">=</span> <span class="pl-c1">ones</span>(<span class="pl-c1">2</span>)</pre></div>
<p dir="auto">Build a Router &amp; route.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="router = Router(
    LinearNonnegative(prices),
    [equal_pool, unequal_small_pool],
    2,
)
route!(router)"><pre>router <span class="pl-k">=</span> <span class="pl-c1">Router</span>(
    <span class="pl-c1">LinearNonnegative</span>(prices),
    [equal_pool, unequal_small_pool],
    <span class="pl-c1">2</span>,
)
<span class="pl-c1">route!</span>(router)</pre></div>
<p dir="auto">Check out the results.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Ψ = round.(Int, netflows(router))
println(&quot;Profit: $(dot(prices, Ψ))&quot;)"><pre>Ψ <span class="pl-k">=</span> <span class="pl-c1">round</span>.(Int, <span class="pl-c1">netflows</span>(router))
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Profit: <span class="pl-v">$(<span class="pl-c1">dot</span>(prices, Ψ))</span><span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Performance</h2>
<p dir="auto">This routing algorithm scales approximately linearly in the number of swap pools
for the <a href="https://bcc-research.github.io/CFMMRouter.jl/dev/examples/arbitrage/" rel="nofollow">arbitrage problem</a>.
These tests were run on a MacBook Pro with a 2.3GHz 8-Core Intel i9 processor.
Several performance improvements are possible.
<a target="_blank" rel="noopener noreferrer" href="https://github.com/bcc-research/CFMMRouter.jl/blob/main/benchmark/router_scaling.png"><img src="https://github.com/bcc-research/CFMMRouter.jl/raw/main/benchmark/router_scaling.png" alt="alt text" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-citing" class="anchor" aria-hidden="true" href="#citing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citing</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@article{diamandis2023efficient,
  title={An Efficient Algorithm for Optimal Routing Through Constant Function Market Makers},
  author={Diamandis, Theo and Resnick, Max and Chitra, Tarun and Angeris, Guillermo},
  journal={arXiv preprint arXiv:2302.04938},
  year={2023}
}"><pre class="notranslate"><code>@article{diamandis2023efficient,
  title={An Efficient Algorithm for Optimal Routing Through Constant Function Market Makers},
  author={Diamandis, Theo and Resnick, Max and Chitra, Tarun and Angeris, Guillermo},
  journal={arXiv preprint arXiv:2302.04938},
  year={2023}
}
</code></pre></div>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ul dir="auto">
<li>
<p dir="auto">T Diamandis, M Resnick, T Chitra, G Angeris. <a href="https://arxiv.org/abs/2302.04938" rel="nofollow">An Efficient Algorithm for Optimal Routing Through Constant Function Market Makers</a></p>
</li>
<li>
<p dir="auto">G Angeris, T Chitra, A Evans, and S Boyd. <a href="https://angeris.github.io/papers/cfmm-routing.pdf" rel="nofollow">Optimal Routing for Constant Function Market Makers</a></p>
</li>
</ul>
</article></div>