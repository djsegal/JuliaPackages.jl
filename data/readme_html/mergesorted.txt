<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mergesorted" class="anchor" aria-hidden="true" href="#mergesorted"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MergeSorted</h1>
<p dir="auto"><a href="https://github.com/vvjn/MergeSorted.jl/actions/workflows/CI.yml"><img src="https://github.com/vvjn/MergeSorted.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/vvjn/MergeSorted.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/04800d4ecdf2561e161fb62b7dca1c5d85fc50bc5ac1a1b2f03a60ace6dd0cc8/68747470733a2f2f636f6465636f762e696f2f67682f76766a6e2f4d65726765536f727465642e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d6d654a347441786c4c6f" alt="codecov" data-canonical-src="https://codecov.io/gh/vvjn/MergeSorted.jl/branch/master/graph/badge.svg?token=meJ4tAxlLo" style="max-width: 100%;"></a></p>
<p dir="auto">Efficiently merge two sorted vectors into one sorted vector in linear time. Provides the <code>mergesorted</code> and <code>mergesorted!</code> functions.</p>
<p dir="auto">E.g.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using MergeSorted

a = sort!(rand(5), order=Base.Reverse)
b = sort!(rand(5), order=Base.Reverse)

c = mergesorted(a,b, order=Base.Reverse)
sort!(vcat(a,b), order=Base.Reverse) == c

d = zeros(10)
mergesorted!(d, a, b, order=Base.Reverse)
sort!(vcat(a,b), order=Base.Reverse) == d"><pre><span class="pl-k">using</span> MergeSorted

a <span class="pl-k">=</span> <span class="pl-c1">sort!</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">5</span>), order<span class="pl-k">=</span>Base<span class="pl-k">.</span>Reverse)
b <span class="pl-k">=</span> <span class="pl-c1">sort!</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">5</span>), order<span class="pl-k">=</span>Base<span class="pl-k">.</span>Reverse)

c <span class="pl-k">=</span> <span class="pl-c1">mergesorted</span>(a,b, order<span class="pl-k">=</span>Base<span class="pl-k">.</span>Reverse)
<span class="pl-c1">sort!</span>(<span class="pl-c1">vcat</span>(a,b), order<span class="pl-k">=</span>Base<span class="pl-k">.</span>Reverse) <span class="pl-k">==</span> c

d <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(<span class="pl-c1">10</span>)
<span class="pl-c1">mergesorted!</span>(d, a, b, order<span class="pl-k">=</span>Base<span class="pl-k">.</span>Reverse)
<span class="pl-c1">sort!</span>(<span class="pl-c1">vcat</span>(a,b), order<span class="pl-k">=</span>Base<span class="pl-k">.</span>Reverse) <span class="pl-k">==</span> d</pre></div>
<p dir="auto">MergeSorted can be installed as follows.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg; Pkg.add(&quot;MergeSorted&quot;)"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>MergeSorted<span class="pl-pds">"</span></span>)</pre></div>
</article></div>