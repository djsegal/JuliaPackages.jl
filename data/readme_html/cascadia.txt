<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-cascadia" class="anchor" aria-hidden="true" href="#cascadia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Cascadia</h1>
<p><a href="https://travis-ci.org/Algocircle/Cascadia.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2d4779dc95cbac474bb8e7fe22952596a20d316c/68747470733a2f2f7472617669732d63692e6f72672f416c676f636972636c652f43617363616469612e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Algocircle/Cascadia.jl.svg?branch=master" style="max-width:100%;"></a></p>
<h3><a id="user-content-a-css-selector-library-in-julia" class="anchor" aria-hidden="true" href="#a-css-selector-library-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>A CSS Selector library in Julia.</h3>
<p>Inspired by, and mostly a direct translation of, the <a href="https://github.com/andybalholm/cascadia">Cascadia</a> CSS Selector library, written in <a href="https://golang.org/" rel="nofollow">Go</a>, by <a href="https://github.com/andybalholm">@andybalhom</a>.</p>
<p>This package depends on the <a href="https://github.com/porterjamesj/Gumbo.jl">Gumbo.jl</a> package by <a href="https://github.com/porterjamesj">@porterjamesj</a>, which is a Julia wrapper around <a href="https://github.com/google/gumbo-parser">Google's Gumbo HTML parser library</a></p>
<h3><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h3>
<p>Usage is simple. Use <code>Gumbo</code> to parse an HTML string into a document, create a <code>Selector</code> from a string, and then use <code>eachmatch</code> to get the nodes in the document that match the selector. Alternatively, use <code>sel"&lt;selector string&gt;"</code> to do the same thing as <code>Selector</code>. The <code>eachmatch</code> function returns an array of elements which match the selector. If no match is found, a zero element array is returned. For unique matches, the array contains one element. Thus, check the length of the array to test whether a selector matches.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Cascadia
<span class="pl-k">using</span> Gumbo

n<span class="pl-k">=</span><span class="pl-c1">parsehtml</span>(<span class="pl-s"><span class="pl-pds">"</span>&lt;p id=<span class="pl-cce">\"</span>foo<span class="pl-cce">\"</span>&gt;&lt;p id=<span class="pl-cce">\"</span>bar<span class="pl-cce">\"</span>&gt;<span class="pl-pds">"</span></span>)
s<span class="pl-k">=</span><span class="pl-c1">Selector</span>(<span class="pl-s"><span class="pl-pds">"</span>#foo<span class="pl-pds">"</span></span>)
sm <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">sel</span>"</span>#foo<span class="pl-pds">"</span></span>
<span class="pl-c1">eachmatch</span>(s, n<span class="pl-k">.</span>root)
<span class="pl-c"><span class="pl-c">#</span> 1-element Array{Gumbo.HTMLNode,1}:</span>
<span class="pl-c"><span class="pl-c">#</span>  Gumbo.HTMLElement{:p}</span>

<span class="pl-c1">eachmatch</span>(sm, n<span class="pl-k">.</span>root)
<span class="pl-c"><span class="pl-c">#</span> 1-element Array{Gumbo.HTMLNode,1}:</span>
<span class="pl-c"><span class="pl-c">#</span>  Gumbo.HTMLElement{:p}</span></pre></div>
<p><strong>Note:</strong> The top level matching function name has changed from <code>matchall</code> in <code>v0.6</code> to <code>eachmatch</code> in <code>v0.7</code> and higher to reflect the change in Julia base.</p>
<h3><a id="user-content-webscraping-example" class="anchor" aria-hidden="true" href="#webscraping-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Webscraping Example</h3>
<p>The primary use case for this library is to enable webscraping -- the automatic extraction of information from html pages. As an example, consider the following code, which returns a list of questions that have been tagged with <code>julia-lang</code> on StackOverflow.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Cascadia, Gumbo, HTTP

r <span class="pl-k">=</span> HTTP<span class="pl-k">.</span><span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">"</span>http://stackoverflow.com/questions/tagged/julia-lang<span class="pl-pds">"</span></span>)
h <span class="pl-k">=</span> <span class="pl-c1">parsehtml</span>(<span class="pl-c1">String</span>(r<span class="pl-k">.</span>body))

qs <span class="pl-k">=</span> <span class="pl-c1">eachmatch</span>(<span class="pl-c1">Selector</span>(<span class="pl-s"><span class="pl-pds">"</span>.question-summary<span class="pl-pds">"</span></span>),h<span class="pl-k">.</span>root)

<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>StackOverflow Julia Questions (votes  answered?  url)<span class="pl-pds">"</span></span>)

<span class="pl-k">for</span> q <span class="pl-k">in</span> qs
    votes <span class="pl-k">=</span> <span class="pl-c1">nodeText</span>(<span class="pl-c1">eachmatch</span>(<span class="pl-c1">Selector</span>(<span class="pl-s"><span class="pl-pds">"</span>.votes .vote-count-post <span class="pl-pds">"</span></span>), q)[<span class="pl-c1">1</span>])
    answered <span class="pl-k">=</span> <span class="pl-c1">length</span>(<span class="pl-c1">eachmatch</span>(<span class="pl-c1">Selector</span>(<span class="pl-s"><span class="pl-pds">"</span>.status.answered<span class="pl-pds">"</span></span>), q)) <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>
    href <span class="pl-k">=</span> <span class="pl-c1">eachmatch</span>(<span class="pl-c1">Selector</span>(<span class="pl-s"><span class="pl-pds">"</span>.question-hyperlink<span class="pl-pds">"</span></span>), q)[<span class="pl-c1">1</span>]<span class="pl-k">.</span>attributes[<span class="pl-s"><span class="pl-pds">"</span>href<span class="pl-pds">"</span></span>]
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$votes</span>  <span class="pl-v">$answered</span>  http://stackoverflow.com<span class="pl-v">$href</span><span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
<p>This code produces the following output:</p>
<pre><code>StackOverflow Julia Questions (votes  answered?  url)

0  false  http://stackoverflow.com/questions/59361325/how-to-get-a-rolling-window-regression-in-julia
0  true  http://stackoverflow.com/questions/59356818/how-i-translate-python-code-into-julia-code
-2  false  http://stackoverflow.com/questions/59354720/how-to-fix-this-error-in-julia-throws-same-error-for-all-packages-not-found-i
-1  true  http://stackoverflow.com/questions/59354407/julia-package-for-geocoding
1  false  http://stackoverflow.com/questions/59350631/jupyter-lab-precompile-error-for-kernel-1-0-after-adding-kernel-1-3
0  true  http://stackoverflow.com/questions/59348461/genie-framework-does-not-install-under-julia-1-2
...
2  true  http://stackoverflow.com/questions/59300202/julia-package-install-fail-with-please-specify-by-known-name-uuid
2  false  http://stackoverflow.com/questions/59297379/how-do-i-transfer-my-packages-after-installing-a-new-julia-version
</code></pre>
<p>Note that this returns the elements on the first page of the query results. Getting the values from subsequent pages is left as an exercise for the reader.</p>
<h3><a id="user-content-current-status" class="anchor" aria-hidden="true" href="#current-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Current Status</h3>
<p>This library should work with almost all CSS selectors. Please <a href="https://github.com/Algocircle/Cascadia.jl/issues">raise an issue</a> if you find any that don't work. However, note that <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements" rel="nofollow">CSS pseudo elements</a> are not yet supported.</p>
<p>Specifically, the following selector types are tested, and known to work.</p>
<table>
<thead>
<tr>
<th>Selector</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>address</code></td>
</tr>
<tr>
<td><code>*</code></td>
</tr>
<tr>
<td><code>#foo</code></td>
</tr>
<tr>
<td><code>li#t1</code></td>
</tr>
<tr>
<td><code>*#t4</code></td>
</tr>
<tr>
<td><code>.t1</code></td>
</tr>
<tr>
<td><code>p.t1</code></td>
</tr>
<tr>
<td><code>div.teST</code></td>
</tr>
<tr>
<td><code>.t1.fail</code></td>
</tr>
<tr>
<td><code>p.t1.t2</code></td>
</tr>
<tr>
<td><code>p[title]</code></td>
</tr>
<tr>
<td><code>address[title="foo"]</code></td>
</tr>
<tr>
<td><code>[title ~= foo]</code></td>
</tr>
<tr>
<td><code>[title~="hello world"]</code></td>
</tr>
<tr>
<td><code>[lang|="en"]</code></td>
</tr>
<tr>
<td><code>[title^="foo"]</code></td>
</tr>
<tr>
<td><code>[title$="bar"]</code></td>
</tr>
<tr>
<td><code>[title*="bar"]</code></td>
</tr>
<tr>
<td><code>.t1:not(.t2)</code></td>
</tr>
<tr>
<td><code>div:not(.t1)</code></td>
</tr>
<tr>
<td><code>li:nth-child(odd)</code></td>
</tr>
<tr>
<td><code>li:nth-child(even)</code></td>
</tr>
<tr>
<td><code>li:nth-child(-n+2)</code></td>
</tr>
<tr>
<td><code>li:nth-child(3n+1)</code></td>
</tr>
<tr>
<td><code>li:nth-last-child(odd)</code></td>
</tr>
<tr>
<td><code>li:nth-last-child(even)</code></td>
</tr>
<tr>
<td><code>li:nth-last-child(-n+2)</code></td>
</tr>
<tr>
<td><code>li:nth-last-child(3n+1)</code></td>
</tr>
<tr>
<td><code>span:first-child</code></td>
</tr>
<tr>
<td><code>span:last-child</code></td>
</tr>
<tr>
<td><code>p:nth-of-type(2)</code></td>
</tr>
<tr>
<td><code>p:nth-last-of-type(2)</code></td>
</tr>
<tr>
<td><code>p:last-of-type</code></td>
</tr>
<tr>
<td><code>p:first-of-type</code></td>
</tr>
<tr>
<td><code>p:only-child</code></td>
</tr>
<tr>
<td><code>p:only-of-type</code></td>
</tr>
<tr>
<td><code>:empty</code></td>
</tr>
<tr>
<td><code>div p</code></td>
</tr>
<tr>
<td><code>div table p</code></td>
</tr>
<tr>
<td><code>div &gt; p</code></td>
</tr>
<tr>
<td><code>p ~ p</code></td>
</tr>
<tr>
<td><code>p + p</code></td>
</tr>
<tr>
<td><code>li, p</code></td>
</tr>
<tr>
<td><code>p +/*This is a comment*/ p</code></td>
</tr>
<tr>
<td><code>p:contains("that wraps")</code></td>
</tr>
<tr>
<td><code>p:containsOwn("that wraps")</code></td>
</tr>
<tr>
<td><code>:containsOwn("inner")</code></td>
</tr>
<tr>
<td><code>p:containsOwn("block")</code></td>
</tr>
<tr>
<td><code>div:has(#p1)</code></td>
</tr>
<tr>
<td><code>div:has(:containsOwn("2"))</code></td>
</tr>
<tr>
<td><code>body :has(:containsOwn("2"))</code></td>
</tr>
<tr>
<td><code>body :haschild(:containsOwn("2"))</code></td>
</tr>
<tr>
<td><code>p:matches([\d])</code></td>
</tr>
<tr>
<td><code>p:matches([a-z])</code></td>
</tr>
<tr>
<td><code>p:matches([a-zA-Z])</code></td>
</tr>
<tr>
<td><code>p:matches([^\d])</code></td>
</tr>
<tr>
<td><code>p:matches(^(0|a))</code></td>
</tr>
<tr>
<td><code>p:matches(^\d+$)</code></td>
</tr>
<tr>
<td><code>p:not(:matches(^\d+$))</code></td>
</tr>
<tr>
<td><code>div :matchesOwn(^\d+$)</code></td>
</tr>
<tr>
<td><code>[href#=(fina)]:not([href#=(\/\/[^\/]+untrusted)])</code></td>
</tr>
<tr>
<td><code>[href#=(^https:\/\/[^\/]*\/?news)]</code></td>
</tr>
<tr>
<td><code>:input</code></td>
</tr>
</tbody>
</table>
</article></div>