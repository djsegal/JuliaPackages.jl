<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-refactoringjl" class="anchor" aria-hidden="true" href="#refactoringjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Refactoring.jl</h1>
<p><a href="https://travis-ci.org/jonathanBieler/Refactoring.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b1b59f937d4a4ea14c1ce2bea89762f92cf692b2/68747470733a2f2f7472617669732d63692e6f72672f6a6f6e617468616e4269656c65722f5265666163746f72696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/jonathanBieler/Refactoring.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/jonathanBieler/Refactoring.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/cbcd7fae3e9216a2938e7d1afb6e5f68ab87931c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6a6f6e617468616e4269656c65722f5265666163746f72696e672e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/jonathanBieler/Refactoring.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<h3><a id="user-content-extract-method" class="anchor" aria-hidden="true" href="#extract-method"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Extract method</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Refactoring

m <span class="pl-k">=</span> <span class="pl-c1">extract_method</span>(<span class="pl-s"><span class="pl-pds">"</span></span>
<span class="pl-s">    y = [sin(2xi + exp(-c)) for xi in x]</span>
<span class="pl-s"><span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">print</span>(m)
<span class="pl-k">function</span> (c, x)
    y <span class="pl-k">=</span> [<span class="pl-c1">sin</span>(<span class="pl-c1">2</span>xi <span class="pl-k">+</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>c)) <span class="pl-k">for</span> xi <span class="pl-k">in</span> x]
<span class="pl-k">end</span></pre></div>
<p>The arguments of the method are guessed by listing the variables that
are unassigned in the expression:</p>
<div class="highlight highlight-source-julia"><pre>ex <span class="pl-k">=</span> <span class="pl-k">quote</span>
    <span class="pl-k">using</span> Gadfly
    mu <span class="pl-k">=</span> K1
    <span class="pl-k">const</span> alpha <span class="pl-k">=</span> <span class="pl-c1">1</span>
    <span class="pl-k">const</span> beta <span class="pl-k">=</span> (alpha<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>mu
    <span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>
        x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">100</span>, <span class="pl-c1">f</span>(K2)) 
    <span class="pl-k">end</span>
    <span class="pl-c1">plot</span>(x <span class="pl-k">=</span> K3, y <span class="pl-k">=</span> <span class="pl-c1">pdf</span>(<span class="pl-c1">InverseGamma</span>(K4,beta),K5), Geom<span class="pl-k">.</span>line)
    ind, K7 <span class="pl-k">=</span> K6<span class="pl-k">.</span>asd
    x <span class="pl-k">=</span> [K8[K7] <span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span>K6]
<span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">unassigned_variables</span>(ex)
<span class="pl-c1">7</span><span class="pl-k">-</span>element Array{Any,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">:K1</span>
 <span class="pl-c1">:K2</span>
 <span class="pl-c1">:K3</span>
 <span class="pl-c1">:K4</span>
 <span class="pl-c1">:K5</span>
 <span class="pl-c1">:K6</span>
 <span class="pl-c1">:K8</span></pre></div>
<h3><a id="user-content-search-and-replace" class="anchor" aria-hidden="true" href="#search-and-replace"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Search and replace</h3>
<p>Replace all sub-expressions matching a pattern with another :</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@search_and_replace</span> <span class="pl-c1">sin</span>(<span class="pl-c1">sin</span>(x)) <span class="pl-c1">sin</span>(<span class="pl-k">$</span>x) <span class="pl-c1">cos</span>(<span class="pl-k">$</span>x <span class="pl-k">+</span><span class="pl-c1">1</span>)
:(<span class="pl-c1">cos</span>(<span class="pl-c1">cos</span>(x <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">+</span> <span class="pl-c1">1</span>))</pre></div>
</article></div>