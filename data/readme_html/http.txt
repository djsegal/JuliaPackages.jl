<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-http" class="anchor" aria-hidden="true" href="#http"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>HTTP</h1>
<p><em>HTTP client and server functionality for Julia</em></p>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://JuliaWeb.github.io/HTTP.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a> <a href="https://JuliaWeb.github.io/HTTP.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://travis-ci.org/JuliaWeb/HTTP.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7126d2025aba26f8f4473b6455436623b2abaece/68747470733a2f2f7472617669732d63692e6f72672f4a756c69615765622f485454502e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.org/JuliaWeb/HTTP.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://codecov.io/gh/JuliaWeb/HTTP.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a5a0083746abdf759a69b86f372f3432faa448dd/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69615765622f485454502e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaWeb/HTTP.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>The package can be installed with Julia's package manager,
either by using the Pkg REPL mode (press <code>]</code> to enter):</p>
<pre><code>pkg&gt; add HTTP
</code></pre>
<p>or by using Pkg functions</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>HTTP<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-project-status" class="anchor" aria-hidden="true" href="#project-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Project Status</h2>
<p>The package has matured and is used in many production systems.
But as with all open-source software, please try it out and report your experience.</p>
<p>The package is tested against Julia 1.0, 1.3 &amp; current master on Linux, macOS, and Windows.</p>
<h2><a id="user-content-contributing-and-questions" class="anchor" aria-hidden="true" href="#contributing-and-questions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contributing and Questions</h2>
<p>Contributions are very welcome, as are feature requests and suggestions. Please open an
<a href="https://github.com/JuliaWeb/HTTP.jl/issues">issue</a> if you encounter any problems or would just like to ask a question.</p>
<h2><a id="user-content-client-examples" class="anchor" aria-hidden="true" href="#client-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Client Examples</h2>
<p><a href="https://juliaweb.github.io/HTTP.jl/stable/index.html#HTTP.request-Tuple%7BString,HTTP.URIs.URI,Array%7BPair%7BSubString%7BString%7D,SubString%7BString%7D%7D,1%7D,Any%7D" rel="nofollow"><code>HTTP.request</code></a>
sends a HTTP Request Message and returns a Response Message.</p>
<div class="highlight highlight-source-julia"><pre>r <span class="pl-k">=</span> HTTP<span class="pl-k">.</span><span class="pl-c1">request</span>(<span class="pl-s"><span class="pl-pds">"</span>GET<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>http://httpbin.org/ip<span class="pl-pds">"</span></span>; verbose<span class="pl-k">=</span><span class="pl-c1">3</span>)
<span class="pl-c1">println</span>(r<span class="pl-k">.</span>status)
<span class="pl-c1">println</span>(<span class="pl-c1">String</span>(r<span class="pl-k">.</span>body))</pre></div>
<p><a href="https://juliaweb.github.io/HTTP.jl/stable/index.html#HTTP.open" rel="nofollow"><code>HTTP.open</code></a>
sends a HTTP Request Message and
opens an <code>IO</code> stream from which the Response can be read.</p>
<div class="highlight highlight-source-julia"><pre>HTTP<span class="pl-k">.</span><span class="pl-c1">open</span>(<span class="pl-c1">:GET</span>, <span class="pl-s"><span class="pl-pds">"</span>https://tinyurl.com/bach-cello-suite-1-ogg<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> http
    <span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">`</span>vlc -q --play-and-exit --intf dummy -<span class="pl-pds">`</span></span>, <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> vlc
        <span class="pl-c1">write</span>(vlc, http)
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<h2><a id="user-content-server-examples" class="anchor" aria-hidden="true" href="#server-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Server Examples</h2>
<p><a href="https://juliaweb.github.io/HTTP.jl/stable/index.html#HTTP.Servers.listen" rel="nofollow"><code>HTTP.Servers.listen</code></a>:</p>
<p>The server will start listening on 127.0.0.1:8081 by default.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> HTTP

HTTP<span class="pl-k">.</span><span class="pl-c1">listen</span>() <span class="pl-k">do</span> http<span class="pl-k">::</span><span class="pl-c1">HTTP.Stream</span>
    <span class="pl-c1">@show</span> http<span class="pl-k">.</span>message
    <span class="pl-c1">@show</span> HTTP<span class="pl-k">.</span><span class="pl-c1">header</span>(http, <span class="pl-s"><span class="pl-pds">"</span>Content-Type<span class="pl-pds">"</span></span>)
    <span class="pl-k">while</span> <span class="pl-k">!</span><span class="pl-c1">eof</span>(http)
        <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>body data: <span class="pl-pds">"</span></span>, <span class="pl-c1">String</span>(<span class="pl-c1">readavailable</span>(http)))
    <span class="pl-k">end</span>
    HTTP<span class="pl-k">.</span><span class="pl-c1">setstatus</span>(http, <span class="pl-c1">404</span>)
    HTTP<span class="pl-k">.</span><span class="pl-c1">setheader</span>(http, <span class="pl-s"><span class="pl-pds">"</span>Foo-Header<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span>)
    HTTP<span class="pl-k">.</span><span class="pl-c1">startwrite</span>(http)
    <span class="pl-c1">write</span>(http, <span class="pl-s"><span class="pl-pds">"</span>response body<span class="pl-pds">"</span></span>)
    <span class="pl-c1">write</span>(http, <span class="pl-s"><span class="pl-pds">"</span>more response body<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
<p><a href="https://juliaweb.github.io/HTTP.jl/stable/index.html#HTTP.Handlers.serve" rel="nofollow"><code>HTTP.Handlers.serve</code></a>:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> HTTP

HTTP<span class="pl-k">.</span><span class="pl-c1">serve</span>() <span class="pl-k">do</span> request<span class="pl-k">::</span><span class="pl-c1">HTTP.Request</span>
   <span class="pl-c1">@show</span> request
   <span class="pl-c1">@show</span> request<span class="pl-k">.</span>method
   <span class="pl-c1">@show</span> HTTP<span class="pl-k">.</span><span class="pl-c1">header</span>(request, <span class="pl-s"><span class="pl-pds">"</span>Content-Type<span class="pl-pds">"</span></span>)
   <span class="pl-c1">@show</span> HTTP<span class="pl-k">.</span><span class="pl-c1">payload</span>(request)
   <span class="pl-k">try</span>
       <span class="pl-k">return</span> HTTP<span class="pl-k">.</span><span class="pl-c1">Response</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello<span class="pl-pds">"</span></span>)
   <span class="pl-k">catch</span> e
       <span class="pl-k">return</span> HTTP<span class="pl-k">.</span><span class="pl-c1">Response</span>(<span class="pl-c1">404</span>, <span class="pl-s"><span class="pl-pds">"</span>Error: <span class="pl-v">$e</span><span class="pl-pds">"</span></span>)
   <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<h2><a id="user-content-websocket-examples" class="anchor" aria-hidden="true" href="#websocket-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>WebSocket Examples</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@async</span> HTTP<span class="pl-k">.</span>WebSockets<span class="pl-k">.</span><span class="pl-c1">listen</span>(<span class="pl-s"><span class="pl-pds">"</span>127.0.0.1<span class="pl-pds">"</span></span>, <span class="pl-c1">UInt16</span>(<span class="pl-c1">8081</span>)) <span class="pl-k">do</span> ws
           <span class="pl-k">while</span> <span class="pl-k">!</span><span class="pl-c1">eof</span>(ws)
               data <span class="pl-k">=</span> <span class="pl-c1">readavailable</span>(ws)
               <span class="pl-c1">write</span>(ws, data)
           <span class="pl-k">end</span>
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> HTTP<span class="pl-k">.</span>WebSockets<span class="pl-k">.</span><span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>ws://127.0.0.1:8081<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> ws
           <span class="pl-c1">write</span>(ws, <span class="pl-s"><span class="pl-pds">"</span>Hello<span class="pl-pds">"</span></span>)
           x <span class="pl-k">=</span> <span class="pl-c1">readavailable</span>(ws)
           <span class="pl-c1">@show</span> x
           <span class="pl-c1">println</span>(<span class="pl-c1">String</span>(x))
       <span class="pl-k">end</span>;
x <span class="pl-k">=</span> UInt8[<span class="pl-c1">0x48</span>, <span class="pl-c1">0x65</span>, <span class="pl-c1">0x6c</span>, <span class="pl-c1">0x6c</span>, <span class="pl-c1">0x6f</span>]
Hello</pre></div>
<h2><a id="user-content-custom-http-layer-examples" class="anchor" aria-hidden="true" href="#custom-http-layer-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Custom HTTP Layer Examples</h2>
<h5><a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Notes:</h5>
<ul>
<li>There is no enforcement of a "well-defined" stack, you can insert a layer anywhere in the stack even if it logically
does not make sense</li>
<li>When creating a custom layer, you need to create a <code>request()</code>, see below for an example</li>
<li>Custom layers is only implemented with the "low-level" <code>request()</code> calls, not the "convenience" functions such as
<code>HTTP.get()</code>, <code>HTTP.put()</code>, etc.</li>
</ul>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">module</span> TestRequest
               <span class="pl-k">import</span> HTTP<span class="pl-k">:</span> Layer, request, Response

               <span class="pl-k">abstract type</span> TestLayer{Next <span class="pl-k">&lt;:</span> <span class="pl-c1">Layer</span>} <span class="pl-k">&lt;:</span> <span class="pl-c1">Layer{Next}</span> <span class="pl-k">end</span>
               <span class="pl-k">export</span> TestLayer, request

               <span class="pl-k">function</span> <span class="pl-en">request</span>(<span class="pl-k">::</span><span class="pl-c1">Type{TestLayer{Next}}</span>, io<span class="pl-k">::</span><span class="pl-c1">IO</span>, req, body; kw<span class="pl-k">...</span>)<span class="pl-k">::</span><span class="pl-c1">Response</span> <span class="pl-k">where</span> Next
                       <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Insert your custom layer logic here!<span class="pl-pds">"</span></span>)
                       <span class="pl-k">return</span> <span class="pl-c1">request</span>(Next, io, req, body; kw<span class="pl-k">...</span>)
               <span class="pl-k">end</span>
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> HTTP
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> <span class="pl-k">..</span>TestRequest

julia<span class="pl-k">&gt;</span> custom_stack <span class="pl-k">=</span> <span class="pl-c1">insert</span>(<span class="pl-c1">stack</span>(), StreamLayer, TestLayer)

julia<span class="pl-k">&gt;</span> result <span class="pl-k">=</span> <span class="pl-c1">request</span>(custom_stack, <span class="pl-s"><span class="pl-pds">"</span>GET<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>https://httpbin.org/ip<span class="pl-pds">"</span></span>)

Insert your custom layer logic here!
HTTP<span class="pl-k">.</span>Messages<span class="pl-k">.</span>Response<span class="pl-k">:</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">HTTP/1.1 200 OK</span>
<span class="pl-s">Access-Control-Allow-Credentials: true</span>
<span class="pl-s">Access-Control-Allow-Origin: *</span>
<span class="pl-s">Content-Type: application/json</span>
<span class="pl-s">Date: Fri, 30 Aug 2019 14:13:17 GMT</span>
<span class="pl-s">Referrer-Policy: no-referrer-when-downgrade</span>
<span class="pl-s">Server: nginx</span>
<span class="pl-s">X-Content-Type-Options: nosniff</span>
<span class="pl-s">X-Frame-Options: DENY</span>
<span class="pl-s">X-XSS-Protection: 1; mode=block</span>
<span class="pl-s">Content-Length: 45</span>
<span class="pl-s">Connection: keep-alive</span>
<span class="pl-s"></span>
<span class="pl-s">{</span>
<span class="pl-s">  "origin": "--Redacted--"</span>
<span class="pl-s">}</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>

julia<span class="pl-k">&gt;</span> </pre></div>
</article></div>