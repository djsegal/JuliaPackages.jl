<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-interpol" class="anchor" aria-hidden="true" href="#interpol"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>InterPol</h1>
<p>Given values of a function y=y(x) <code>y=[...]</code> at points <code>x=[...]</code> we can
generate an interpolating polynomial p(x).  This package provides two
functions: <code>interpolateAt</code> and
<code>interpolateDerivativeAt</code>.  <code>interpolateAt[x,y,x0]</code> gives the value of
the interpolating polynomial p at the point
x0.  <code>interpolateDerivativeAt[x,y,x0]</code> evaluates p' at the point x0.  For example</p>
<pre><code>julia&gt; interpolateAt([0,1,2],[0,1,4],1)
1.0
julia&gt; interpolateDerivativeAt([0,1,2],[0,1,4],1)
2.0
</code></pre>
<p><a href="https://travis-ci.org/pwl/InterPol.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/048bc69f1066617f40e41a1f4aac2521f942e6de/68747470733a2f2f7472617669732d63692e6f72672f70776c2f496e746572506f6c2e6a6c2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/pwl/InterPol.jl.svg" style="max-width:100%;"></a></p>
</article></div>