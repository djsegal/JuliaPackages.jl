<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://github.com/matthieugomez/InfinitesimalGenerators.jl/actions"><img src="https://github.com/matthieugomez/InfinitesimalGenerators.jl/workflows/CI/badge.svg" alt="Build status" style="max-width:100%;"></a></p>
<h1><a id="user-content-markov-processes" class="anchor" aria-hidden="true" href="#markov-processes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Markov Processes</h1>
<p>For a Markov process defined by a matrix <code>T</code>  where <code>T</code> is the operator such that <code>Tf = E[df]</code></p>
<ul>
<li><code>stationary_distribution(T)</code> returns its stationary distribution</li>
<li><code>feynman_kac_backward(T,  t, ψ, f, V)</code> returns the solution of the PDE <code>u_t(x, t) + T u  - V(x, t) u + f(x, t) = 0</code> with <code>u(x, T) = ψ(x)</code></li>
</ul>
<p>Moreoveor,</p>
<ul>
<li><code>generator(DiffusionProcess(x, μ, σ))</code> creates the transition matrix of a diffusive process with drift <code>μ(x)</code> and volatility <code>σ(x)</code> with reflecting boundaries.</li>
</ul>
<h1><a id="user-content-additive-functionals" class="anchor" aria-hidden="true" href="#additive-functionals"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Additive Functionals</h1>
<p>For an additive functional <code>m</code> defined by a function <code>ξ -&gt; T(ξ)</code> where <code>T</code> is the operator such that <code>T f= E[d(e^(ξm)f)]</code></p>
<ul>
<li><code>cgf(f)</code> returns the long run scaled CGF of <code>m</code></li>
<li><code>tail_index(f)</code> returns the tail index of the stationary distribution of <code>e^m</code></li>
</ul>
<p>Moreover,</p>
<ul>
<li><code>generator(AdditiveFunctional(DiffusionProcess(x, μ, σ), μm, σm)</code> creates the function <code>ξ -&gt; T(ξ)</code> for the additive functional with drift <code>μm(x)</code> and volatility <code>σm(x)</code></li>
</ul>
<h2><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Related Packages</h2>
<ul>
<li><a href="https://github.com/QuantEcon/SimpleDifferentialOperators.jl">SimpleDifferentialOperators</a> contains more general tools to define operators with different boundary counditions. In contrast, InfinitesimalGenerators always assumes reflecting boundaries.</li>
</ul>
</article></div>