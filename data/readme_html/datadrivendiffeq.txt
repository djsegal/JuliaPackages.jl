<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-datadrivendiffeqjl" class="anchor" aria-hidden="true" href="#datadrivendiffeqjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DataDrivenDiffEq.jl</h1>
<p><a href="https://travis-ci.org/SciML/DataDrivenDiffEq.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ce48bb8608773ebee5c7c4c38a9f895fe9a84e75/68747470733a2f2f7472617669732d63692e6f72672f5363694d4c2f4461746144726976656e4469666645712e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/SciML/DataDrivenDiffEq.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/ChrisRackauckas/datadrivendiffeq-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/36e9268527c613b44e9819d0d840e8d1ae0b4ae9/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f323972736b6d733033693438787874313f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/29rskms03i48xxt1?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaDiffEq/DataDrivenDiffEq.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/1a5fbb5f124aaf759cc34d7f91e8b648869e342a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c69614469666645712f4461746144726976656e4469666645712e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaDiffEq/DataDrivenDiffEq.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaDiffEq/DataDrivenDiffEq.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/63258c4eb75f721bd9d27e67286dda91fc6a0b19/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614469666645712f4461746144726976656e4469666645712e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaDiffEq/DataDrivenDiffEq.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>DataDrivenDiffEq.jl is a package in the SciML ecosystem for data-driven differential equation
structural estimation and identification. These tools include automatically discovering equations
from data and using this to simulate perturbed dynamics.</p>
<p>For information on using the package,
<a href="https://datadriven.sciml.ai/stable/" rel="nofollow">see the stable documentation</a>. Use the
<a href="https://datadriven.sciml.ai/dev/" rel="nofollow">in-development documentation</a> for the version of
the documentation which contains the un-released features.</p>
<h2><a id="user-content-quick-demonstration" class="anchor" aria-hidden="true" href="#quick-demonstration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick Demonstration</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span># Generate some data by solving a differential equation</span>
<span class="pl-c"><span class="pl-c">#</span>#######################################################</span>

<span class="pl-k">using</span> DataDrivenDiffEq
<span class="pl-k">using</span> ModelingToolkit
<span class="pl-k">using</span> OrdinaryDiffEq

<span class="pl-k">using</span> LinearAlgebra
<span class="pl-k">using</span> Plots
<span class="pl-c1">gr</span>()

<span class="pl-c"><span class="pl-c">#</span> Create a test problem</span>
<span class="pl-k">function</span> <span class="pl-en">lorenz</span>(u,p,t)
    x, y, z <span class="pl-k">=</span> u
    ẋ <span class="pl-k">=</span> <span class="pl-c1">10.0</span><span class="pl-k">*</span>(y <span class="pl-k">-</span> x)
    ẏ <span class="pl-k">=</span> x<span class="pl-k">*</span>(<span class="pl-c1">28.0</span><span class="pl-k">-</span>z) <span class="pl-k">-</span> y
    ż <span class="pl-k">=</span> x<span class="pl-k">*</span>y <span class="pl-k">-</span> (<span class="pl-c1">8</span><span class="pl-k">/</span><span class="pl-c1">3</span>)<span class="pl-k">*</span>z
    <span class="pl-k">return</span> [ẋ, ẏ, ż]
<span class="pl-k">end</span>

u0 <span class="pl-k">=</span> [<span class="pl-k">-</span><span class="pl-c1">8.0</span>; <span class="pl-c1">7.0</span>; <span class="pl-c1">27.0</span>]
p <span class="pl-k">=</span> [<span class="pl-c1">10.0</span>; <span class="pl-k">-</span><span class="pl-c1">10.0</span>; <span class="pl-c1">28.0</span>; <span class="pl-k">-</span><span class="pl-c1">1.0</span>; <span class="pl-k">-</span><span class="pl-c1">1.0</span>; <span class="pl-c1">1.0</span>; <span class="pl-k">-</span><span class="pl-c1">8</span><span class="pl-k">/</span><span class="pl-c1">3</span>]
tspan <span class="pl-k">=</span> (<span class="pl-c1">0.0</span>,<span class="pl-c1">100.0</span>)
dt <span class="pl-k">=</span> <span class="pl-c1">0.001</span>
problem <span class="pl-k">=</span> <span class="pl-c1">ODEProblem</span>(lorenz,u0,tspan)
solution <span class="pl-k">=</span> <span class="pl-c1">solve</span>(problem, <span class="pl-c1">Tsit5</span>(), saveat <span class="pl-k">=</span> dt, atol <span class="pl-k">=</span> <span class="pl-c1">1e-7</span>, rtol <span class="pl-k">=</span> <span class="pl-c1">1e-8</span>)

X <span class="pl-k">=</span> <span class="pl-c1">Array</span>(solution)
DX <span class="pl-k">=</span> <span class="pl-c1">similar</span>(X)
<span class="pl-k">for</span> (i, xi) <span class="pl-k">in</span> <span class="pl-c1">enumerate</span>(<span class="pl-c1">eachcol</span>(X))
    DX[:,i] <span class="pl-k">=</span> <span class="pl-c1">lorenz</span>(xi, [], <span class="pl-c1">0.0</span>)
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span># Now automatically discover the system that generated the data</span>
<span class="pl-c"><span class="pl-c">#</span>###############################################################</span>

<span class="pl-c1">@variables</span> x y z
u <span class="pl-k">=</span> Operation[x; y; z]
polys <span class="pl-k">=</span> Operation[]
<span class="pl-k">for</span> i <span class="pl-k">∈</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">4</span>
    <span class="pl-k">for</span> j <span class="pl-k">∈</span> <span class="pl-c1">0</span><span class="pl-k">:</span>i
        <span class="pl-k">for</span> k <span class="pl-k">∈</span> <span class="pl-c1">0</span><span class="pl-k">:</span>j
            <span class="pl-c1">push!</span>(polys, u[<span class="pl-c1">1</span>]<span class="pl-k">^</span>i<span class="pl-k">*</span>u[<span class="pl-c1">2</span>]<span class="pl-k">^</span>j<span class="pl-k">*</span>u[<span class="pl-c1">3</span>]<span class="pl-k">^</span>k)
            <span class="pl-c1">push!</span>(polys, u[<span class="pl-c1">2</span>]<span class="pl-k">^</span>i<span class="pl-k">*</span>u[<span class="pl-c1">3</span>]<span class="pl-k">^</span>j<span class="pl-k">*</span>u[<span class="pl-c1">1</span>]<span class="pl-k">^</span>k)
            <span class="pl-c1">push!</span>(polys, u[<span class="pl-c1">3</span>]<span class="pl-k">^</span>i<span class="pl-k">*</span>u[<span class="pl-c1">1</span>]<span class="pl-k">^</span>j<span class="pl-k">*</span>u[<span class="pl-c1">2</span>]<span class="pl-k">^</span>k)
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

basis <span class="pl-k">=</span> <span class="pl-c1">Basis</span>(polys, u)

opt <span class="pl-k">=</span> <span class="pl-c1">STRRidge</span>(<span class="pl-c1">0.1</span>)
Ψ <span class="pl-k">=</span> <span class="pl-c1">SInDy</span>(X, DX, basis, maxiter <span class="pl-k">=</span> <span class="pl-c1">100</span>, opt <span class="pl-k">=</span> opt, normalize <span class="pl-k">=</span> <span class="pl-c1">true</span>)
<span class="pl-c1">print_equations</span>(Ψ)
<span class="pl-c1">get_error</span>(Ψ)</pre></div>
<pre><code>3-dimensional basis in ["x", "y", "z"]
dx = p₁ * x + p₂ * y
dy = p₃ * x + p₄ * y + z * x * p₅
dz = p₆ * z + x * y * p₇

# Error
3-element Array{Float64,1}:
 6.7202639134663155e-12
 3.505423292198665e-11
 1.2876598297504605e-11
</code></pre>
</article></div>