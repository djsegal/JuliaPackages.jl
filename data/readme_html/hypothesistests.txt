<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2 dir="auto"><a id="user-content-hypothesistestsjl" class="anchor" aria-hidden="true" href="#hypothesistestsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>HypothesisTests.jl</h2>
<p dir="auto"><em>HypothesisTests.jl</em> is a Julia package that implements a wide range of hypothesis tests.</p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Build &amp; Testing Status:</strong>
<a href="https://github.com/JuliaStats/HypothesisTests.jl/actions/workflows/ci.yml?query=branch%3Amaster"><img src="https://github.com/JuliaStats/HypothesisTests.jl/actions/workflows/ci.yml/badge.svg?branch=master" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaStats/HypothesisTests.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d906c8362b9bf7e6ba3491f6b4a01e8896a2139b2276ddb43c568d96f3260574/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696153746174732f4879706f74686573697354657374732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d7a74536f545859566862" alt="Coverage Status" data-canonical-src="https://codecov.io/gh/JuliaStats/HypothesisTests.jl/branch/master/graph/badge.svg?token=ztSoTXYVhb" style="max-width: 100%;"></a></p>
</li>
<li>
<p dir="auto"><strong>Documentation</strong>: <a href="http://JuliaStats.github.io/HypothesisTests.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="http://JuliaStats.github.io/HypothesisTests.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
</li>
</ul>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick start</h2>
<p dir="auto">Some examples:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using HypothesisTests

pvalue(OneSampleTTest(x))
pvalue(OneSampleTTest(x), tail=:left)
pvalue(OneSampleTTest(x), tail=:right)
confint(OneSampleTTest(x))
confint(OneSampleTTest(x, tail=:left))
confint(OneSampleTTest(x, tail=:right))
OneSampleTTest(x).t
OneSampleTTest(x).df

pvalue(OneSampleTTest(x, y))
pvalue(EqualVarianceTTest(x, y))
pvalue(UnequalVarianceTTest(x, y))

pvalue(MannWhitneyUTest(x, y))
pvalue(SignedRankTest(x, y))
pvalue(SignedRankTest(x))"><pre><span class="pl-k">using</span> HypothesisTests

<span class="pl-c1">pvalue</span>(<span class="pl-c1">OneSampleTTest</span>(x))
<span class="pl-c1">pvalue</span>(<span class="pl-c1">OneSampleTTest</span>(x), tail<span class="pl-k">=</span><span class="pl-c1">:left</span>)
<span class="pl-c1">pvalue</span>(<span class="pl-c1">OneSampleTTest</span>(x), tail<span class="pl-k">=</span><span class="pl-c1">:right</span>)
<span class="pl-c1">confint</span>(<span class="pl-c1">OneSampleTTest</span>(x))
<span class="pl-c1">confint</span>(<span class="pl-c1">OneSampleTTest</span>(x, tail<span class="pl-k">=</span><span class="pl-c1">:left</span>))
<span class="pl-c1">confint</span>(<span class="pl-c1">OneSampleTTest</span>(x, tail<span class="pl-k">=</span><span class="pl-c1">:right</span>))
<span class="pl-c1">OneSampleTTest</span>(x)<span class="pl-k">.</span>t
<span class="pl-c1">OneSampleTTest</span>(x)<span class="pl-k">.</span>df

<span class="pl-c1">pvalue</span>(<span class="pl-c1">OneSampleTTest</span>(x, y))
<span class="pl-c1">pvalue</span>(<span class="pl-c1">EqualVarianceTTest</span>(x, y))
<span class="pl-c1">pvalue</span>(<span class="pl-c1">UnequalVarianceTTest</span>(x, y))

<span class="pl-c1">pvalue</span>(<span class="pl-c1">MannWhitneyUTest</span>(x, y))
<span class="pl-c1">pvalue</span>(<span class="pl-c1">SignedRankTest</span>(x, y))
<span class="pl-c1">pvalue</span>(<span class="pl-c1">SignedRankTest</span>(x))</pre></div>
</article></div>