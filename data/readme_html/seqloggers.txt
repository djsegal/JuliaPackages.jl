<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-seqloggersjl" class="anchor" aria-hidden="true" href="#seqloggersjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SeqLoggers.jl</h1>
<p dir="auto"><a href="https://ueliwechsler.github.io/SeqLoggers.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://ueliwechsler.github.io/SeqLoggers.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/ueliwechsler/SeqLoggers.jl/actions/workflows/ci.yml/"><img src="https://github.com/ueliwechsler/SeqLoggers.jl/actions/workflows/ci.yml/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/ueliwechsler/SeqLoggers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/971cf96de71f368c0df0595f14c0e5925520058238cc8acd67e04902598c7ddb/68747470733a2f2f636f6465636f762e696f2f67682f75656c6977656368736c65722f5365714c6f67676572732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/ueliwechsler/SeqLoggers.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><code>SeqLoggers.jl</code> is a tool for sending log events to a <a href="https://datalust.co/seq" rel="nofollow"><code>Seq</code> log server</a> using the <code>Julia</code> Programming language.</p>
<p dir="auto"><code>SeqLoggers.jl</code> extends the <code>AbstractLogger</code> interface to create log events using the macros:</p>
<ul dir="auto">
<li><code>@debug</code>,</li>
<li><code>@info</code>,</li>
<li><code>@warn</code> and</li>
<li><code>@error</code>.</li>
</ul>
<p dir="auto">Log events are subsequently posted to the <code>Seq</code> log server using <code>HTTP.jl</code> and the <a href="https://docs.datalust.co/docs/posting-raw-events" rel="nofollow"><code>Seq</code> raw-event API</a>.</p>
<p dir="auto">Additionally, features from <a href="https://github.com/oxinabox/LoggingExtras.jl"><code>LoggingExtras.jl</code></a> are used to provide more complex logger types.</p>
<blockquote>
<p dir="auto"><g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png">⚠️</g-emoji> Coping-pasting the examples on this page might introduce invisible extra characters that cannot be handled by the <code>Seq</code> server. When in doubt, replicate the examples without copying the log event strings.</p>
</blockquote>
<h2 dir="auto"><a id="user-content-install-seq" class="anchor" aria-hidden="true" href="#install-seq"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install Seq</h2>
<p dir="auto">The <code>Seq</code> software is avabilable for free for development purposes or single-user deployment (<a href="https://docs.datalust.co/docs/getting-started" rel="nofollow">Installation instructions</a>).</p>
<h2 dir="auto"><a id="user-content-logging-in-julia" class="anchor" aria-hidden="true" href="#logging-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Logging in julia</h2>
<ul dir="auto">
<li><a href="https://docs.julialang.org/en/v1/stdlib/Logging/" rel="nofollow">https://docs.julialang.org/en/v1/stdlib/Logging/</a></li>
</ul>
<p dir="auto">Using the <code>Logging</code> module, log events are created by inserting a logging statement into the source code using the macros <code>@debug</code>, <code>@info</code>,  <code>@warn</code> and <code>@error</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@info &quot;Log Event with `Information` level&quot;"><pre><span class="pl-c1">@info</span> <span class="pl-s"><span class="pl-pds">"</span>Log Event with `Information` level<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">The currently active global logger can be obtained by running</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Logging
global_logger() # ConsoleLogger(...)"><pre><span class="pl-k">using</span> Logging
<span class="pl-c1">global_logger</span>() <span class="pl-c"><span class="pl-c">#</span> ConsoleLogger(...)</span></pre></div>
<p dir="auto">As default, a <code>ConsoleLogger</code> is provided, which prints the logging event directly to the <code>Julia</code> REPL.</p>
<p dir="auto">The global logger can be set to any logger <code>newLogger&lt;:AbstractLogger</code> by calling <code>global_logger(newLogger)</code>.</p>
<p dir="auto">Alternatively, a code section can be wrapped inside  a <code>with_logger</code> <code>do</code>-block to use a specific logger for the execution of the code  contained in the <code>do</code>-block.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Logging.with_logger(newLogger) do
    ...
end"><pre>Logging<span class="pl-k">.</span><span class="pl-c1">with_logger</span>(newLogger) <span class="pl-k">do</span>
    <span class="pl-k">...</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">Within the scope of the <code>do</code>-block, the active logger can be obtained by calling <code>current_logger()</code>.</p>
<h2 dir="auto"><a id="user-content-seqloggersjl-1" class="anchor" aria-hidden="true" href="#seqloggersjl-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SeqLoggers.jl</h2>
<p dir="auto"><code>SeqLoggers.jl</code> provides a new logger type <code>SeqLogger&lt;:AbstractLogger</code>   to replace the default logger to enable the user to post log events to a <code>Seq</code> log server.</p>
<h3 dir="auto"><a id="user-content-basics" class="anchor" aria-hidden="true" href="#basics"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basics</h3>
<p dir="auto">A <code>SeqLogger</code> is constructed by calling the constructor with the same name.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SeqLoggers
seq_logger = SeqLogger(
    &quot;http://localhost:5341&quot;; # `Seq` server url
    min_level=Logging.Info, # define minimal level for log events
    api_key=&quot;&quot;, # api-key for registered Apps
    batch_size=1,
    App=&quot;Trialrun&quot;, # additional log event properties
    Env=&quot;UAT&quot;
)"><pre><span class="pl-k">using</span> SeqLoggers
seq_logger <span class="pl-k">=</span> <span class="pl-c1">SeqLogger</span>(
    <span class="pl-s"><span class="pl-pds">"</span>http://localhost:5341<span class="pl-pds">"</span></span>; <span class="pl-c"><span class="pl-c">#</span> `Seq` server url</span>
    min_level<span class="pl-k">=</span>Logging<span class="pl-k">.</span>Info, <span class="pl-c"><span class="pl-c">#</span> define minimal level for log events</span>
    api_key<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>, <span class="pl-c"><span class="pl-c">#</span> api-key for registered Apps</span>
    batch_size<span class="pl-k">=</span><span class="pl-c1">1</span>,
    App<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Trialrun<span class="pl-pds">"</span></span>, <span class="pl-c"><span class="pl-c">#</span> additional log event properties</span>
    Env<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>UAT<span class="pl-pds">"</span></span>
)</pre></div>
<p dir="auto">The resulting logger <code>seq_logger</code> posts each log event separately to the <code>Seq</code> server with url <code>"http://localhost:5341"</code>.</p>
<p dir="auto">If the performance overhead from posting the log events separately is to high, log events can be stored and posted in a batch. The constructor keyword argument <code>batch_size</code> defines the size of a log event batch. Once the logger has received a number of log events equal to <code>batch_size</code>, all events are sent to the <code>Seq</code> log server in one post. By default, <code>batch_size=10</code>.</p>
<p dir="auto">Therefore, for proper functionality with <code>batch_size&gt;1</code>, it is required to use the <code>SeqLogger</code> by calling <code>with_logger</code> (and not add it as a global logger) to ensure that all log events will be sent to the log server.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Logging.with_logger(seq_logger) do
    @info &quot;Log me into `Seq` with property user = {user}&quot; user=&quot;Me&quot;
end"><pre>Logging<span class="pl-k">.</span><span class="pl-c1">with_logger</span>(seq_logger) <span class="pl-k">do</span>
    <span class="pl-c1">@info</span> <span class="pl-s"><span class="pl-pds">"</span>Log me into `Seq` with property user = {user}<span class="pl-pds">"</span></span> user<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Me<span class="pl-pds">"</span></span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">In this example, besides the <em>global</em> log event properties <code>App="Trialrun"</code> and <code>Env="Test"</code> also a <em>local</em> log event property <code>user="Me"</code> was added.</p>
<p dir="auto">Note, that all elements surrounded by curly brackets, e.g. <code>{user}</code>, will be replaced (on the server-side) by the corresponding log event property if it exists.</p>
<h3 dir="auto"><a id="user-content-interaction-with-loggingextrasjl" class="anchor" aria-hidden="true" href="#interaction-with-loggingextrasjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Interaction with <code>LoggingExtras.jl</code></h3>
<p dir="auto"><code>SeqLogger</code>s can also be combined with the functionality of <a href="https://github.com/oxinabox/LoggingExtras.jl"><code>LoggingExtras.jl</code></a> .</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using LoggingExtras
combinedLogger = TeeLogger(Logging.current_logger(), seq_logger)"><pre><span class="pl-k">using</span> LoggingExtras
combinedLogger <span class="pl-k">=</span> <span class="pl-c1">TeeLogger</span>(Logging<span class="pl-k">.</span><span class="pl-c1">current_logger</span>(), seq_logger)</pre></div>
<p dir="auto">In this example, the <code>combinedLogger</code> logs both to the <code>Julia</code> REPL (if the current logger was a <code>ConsoleLogger</code>) and the <code>Seq</code> log server defined by <code>seq_logger</code>.</p>
<h3 dir="auto"><a id="user-content-loading-logger-from-configuration-file" class="anchor" aria-hidden="true" href="#loading-logger-from-configuration-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Loading Logger from Configuration File</h3>
<p dir="auto">However, the full power of <code>SeqLoggers.jl</code> can be leveraged without knowledge of the inner workings of <code>LoggingExtras.jl</code>.</p>
<p dir="auto">The following example shows how to use <a href="@ref"><code>load_logger_from_config</code></a> to load combined loggers directly from configuration file/dictionary.</p>
<p dir="auto">Given the following configuration file</p>
<div class="highlight highlight-source-json notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="{
    &quot;logging&quot;: [
        {
            &quot;logger_type&quot;: &quot;SeqLogger&quot;,
            &quot;server_url&quot;: &quot;test&quot;,
            &quot;min_level&quot;: &quot;INFO&quot;
        },
        {
            &quot;logger_type&quot;: &quot;ConsoleLogger&quot;,
            &quot;min_level&quot;: &quot;DEBUG&quot;            
        },
        {
            &quot;logger_type&quot;: &quot;FileLogger&quot;,
            &quot;min_level&quot;: &quot;WARN&quot;,
            &quot;file_path&quot;: &quot;C:\\Temp\\test.txt&quot;,
            &quot;append&quot;: false

        }
    ]
}"><pre>{
    <span class="pl-ent">"logging"</span>: [
        {
            <span class="pl-ent">"logger_type"</span>: <span class="pl-s"><span class="pl-pds">"</span>SeqLogger<span class="pl-pds">"</span></span>,
            <span class="pl-ent">"server_url"</span>: <span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>,
            <span class="pl-ent">"min_level"</span>: <span class="pl-s"><span class="pl-pds">"</span>INFO<span class="pl-pds">"</span></span>
        },
        {
            <span class="pl-ent">"logger_type"</span>: <span class="pl-s"><span class="pl-pds">"</span>ConsoleLogger<span class="pl-pds">"</span></span>,
            <span class="pl-ent">"min_level"</span>: <span class="pl-s"><span class="pl-pds">"</span>DEBUG<span class="pl-pds">"</span></span>            
        },
        {
            <span class="pl-ent">"logger_type"</span>: <span class="pl-s"><span class="pl-pds">"</span>FileLogger<span class="pl-pds">"</span></span>,
            <span class="pl-ent">"min_level"</span>: <span class="pl-s"><span class="pl-pds">"</span>WARN<span class="pl-pds">"</span></span>,
            <span class="pl-ent">"file_path"</span>: <span class="pl-s"><span class="pl-pds">"</span>C:<span class="pl-cce">\\</span>Temp<span class="pl-cce">\\</span>test.txt<span class="pl-pds">"</span></span>,
            <span class="pl-ent">"append"</span>: <span class="pl-c1">false</span>

        }
    ]
}</pre></div>
<p dir="auto">a logger that logs to a <code>Seq</code> server, to the <code>REPL</code> and a file at the same is created using</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SeqLoggers
logger = load_logger_from_config(config_file_path)
run_with_logger(logger, 3)  do x
    do_something(x)
end"><pre><span class="pl-k">using</span> SeqLoggers
logger <span class="pl-k">=</span> <span class="pl-c1">load_logger_from_config</span>(config_file_path)
<span class="pl-c1">run_with_logger</span>(logger, <span class="pl-c1">3</span>)  <span class="pl-k">do</span> x
    <span class="pl-c1">do_something</span>(x)
<span class="pl-k">end</span></pre></div>
<h3 dir="auto"><a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FAQ</h3>
<ul dir="auto">
<li>The default <code>Seq</code> log server can be accessed on <a href="http://localhost:5341" rel="nofollow">http://localhost:5341</a>.</li>
</ul>
</article></div>