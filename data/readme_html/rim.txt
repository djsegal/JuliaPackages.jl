<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-rim" class="anchor" aria-hidden="true" href="#rim"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>RIM</h1>
<p><a href="https://travis-ci.org/nantonel/RIM.jl.svg?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/b0d4a8ada0cbf9b5044eb8c9cc1c697ad6861fb8/68747470733a2f2f7472617669732d63692e6f72672f6e616e746f6e656c2f52494d2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/nantonel/RIM.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/nantonel/rim-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2f66647ccbb24962600bea1fc2a0b97ccf9225ae/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6a35327230667535636c3069703065643f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/j52r0fu5cl0ip0ed?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/nantonel/RIM.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/81c8bb458f4d3e3500fc1cfe014fb4d62c95e7b0/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6e616e746f6e656c2f52494d2e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/nantonel/RIM.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>Acoustic Room Impulse Response (RIR) generator using the Randomized Image Method (RIM) for rectangular geometries.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>To install the package, hit <code>]</code> from the Julia command line to enter the package manager, then</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>nantonel<span class="pl-k">/</span>RIM<span class="pl-k">.</span>jl<span class="pl-k">.</span>git</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>Import the package by typing <code>using RIM</code> and specify properties of
the room of interest:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> RIM, Random
Fs <span class="pl-k">=</span> <span class="pl-c1">8e3</span>          <span class="pl-c"><span class="pl-c">#</span> sampling frequency</span>
L <span class="pl-k">=</span> <span class="pl-c1">4.</span>,<span class="pl-c1">5.</span>,<span class="pl-c1">3.</span>      <span class="pl-c"><span class="pl-c">#</span> room dimensions in meters </span>
T60 <span class="pl-k">=</span> <span class="pl-c1">0.7</span>         <span class="pl-c"><span class="pl-c">#</span> reverberation time</span></pre></div>
<p>If the reverberation time is given, all the walls will
have the same reflection coefficient.
Alternatively it is possible to manually change this<br>
using a six element <code>Tuple</code>:</p>
<div class="highlight highlight-source-julia"><pre>β <span class="pl-k">=</span> (<span class="pl-c1">0.9</span>,<span class="pl-c1">0.9</span>,<span class="pl-c1">0.7</span>,<span class="pl-c1">0.7</span>,<span class="pl-c1">0.8</span>,<span class="pl-c1">0.8</span>) 
<span class="pl-c"><span class="pl-c">#</span>(  βx1     ,    βx2   ,    βy1   ,    βy2    ,  βz1 ,   βz2  )</span>
<span class="pl-c"><span class="pl-c">#</span>(front wall, rear wall, left wall, right wall, floor, ceiling)</span></pre></div>
<p>Once the properties of the room are given,
select your source and
microphone position:</p>
<div class="highlight highlight-source-julia"><pre>xs <span class="pl-k">=</span> (<span class="pl-c1">0.5</span>, <span class="pl-c1">0.5</span>, <span class="pl-c1">0.5</span>)          <span class="pl-c"><span class="pl-c">#</span>src pos (in meters)</span>
xr <span class="pl-k">=</span> (Lx<span class="pl-k">-</span><span class="pl-c1">0.1</span>, Ly<span class="pl-k">-</span><span class="pl-c1">0.3</span>, Lz<span class="pl-k">-</span><span class="pl-c1">0.2</span>) <span class="pl-c"><span class="pl-c">#</span>mic pos</span>
Nt <span class="pl-k">=</span> <span class="pl-c1">round</span>(Int,Fs<span class="pl-k">/</span><span class="pl-c1">2</span>)          <span class="pl-c"><span class="pl-c">#</span>time samples (1/5 sec)</span></pre></div>
<p>Now type:</p>
<div class="highlight highlight-source-julia"><pre>h, <span class="pl-k">=</span> <span class="pl-c1">rim</span>(xs,xr,L,T60,Nt,Fs)</pre></div>
<p>to obtain your room impulse response.</p>
<p>You can also use multiple microphone position by providing
an array of <code>Tuple</code>s containing the microphone coordinates.</p>
<div class="highlight highlight-source-julia"><pre>h, <span class="pl-k">=</span> <span class="pl-c1">rim</span>(xs,[(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>),(<span class="pl-c1">1</span>,<span class="pl-c1">1.5</span>,<span class="pl-c1">1</span>)],L,T60,Nt,Fs)</pre></div>
<p>Here <code>h</code> will consist of a matrix: <code>h[:,1]</code> will be the RIR
relative to the microphone in <code>(1,1,1)</code> etc.
It is also possible to specify the source signal
to directly obtain the sound pressure at the microphones:</p>
<div class="highlight highlight-source-julia"><pre>s <span class="pl-k">=</span> <span class="pl-c1">randn</span>(Nt)   <span class="pl-c"><span class="pl-c">#</span>src signal </span></pre></div>
<p>and type:</p>
<div class="highlight highlight-source-julia"><pre>p, <span class="pl-k">=</span> <span class="pl-c1">rim</span>(s,xs,[(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>),(<span class="pl-c1">1</span>,<span class="pl-c1">1.5</span>,<span class="pl-c1">1</span>)],L,T60,Nt,Fs)</pre></div>
<h2><a id="user-content-method-signature" class="anchor" aria-hidden="true" href="#method-signature"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Method signature</h2>
<p><code>h, seed = rim([s,] xs, xr, L, T60, Nt, Fs)</code></p>
<p>Randomized Image Source Method</p>
<h4><a id="user-content-arguments" class="anchor" aria-hidden="true" href="#arguments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Arguments:</h4>
<ul>
<li><code>s</code>   : (Optional) Source signals</li>
<li><code>xs</code>  : Source position in meters (must be a Tuple)</li>
<li><code>xr</code>  : Microphone position in meters (must be a <code>Tuple</code> or a <code>Vector{Tuple}</code> for mic array)</li>
<li><code>Nt</code>  : Time samples</li>
<li><code>L</code>   : 3 element <code>Tuple</code> containing dimensions of the room</li>
<li><code>beta</code>/<code>T60</code> : 6 element <code>Tuple</code> containing reflection coefficients of walls/reverberation time</li>
<li><code>Nt</code>  : length of the RIR</li>
<li><code>Fs</code>  : sampling frequency</li>
</ul>
<h4><a id="user-content-keyword-arguments" class="anchor" aria-hidden="true" href="#keyword-arguments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Keyword Arguments:</h4>
<ul>
<li><code>c = 343</code>    : speed of sound</li>
<li><code>Rd = 1e-2</code>  : random displacement (in meters)</li>
<li><code>N = (0,0,0)</code>: 3 element <code>Tuple</code> representing order of reflection when <code>N == (0;0;0)</code> full order is computed.</li>
<li><code>Tw = 20</code>    : taps of fractional delay filter</li>
<li><code>Fc = 0.9</code>   : cut-off frequency of fractional delay filter</li>
</ul>
<h4><a id="user-content-outputs" class="anchor" aria-hidden="true" href="#outputs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Outputs:</h4>
<ul>
<li><code>h</code>: vector or matrix where each column is an impulse response or the sound pressure if <code>s</code> was specified corresponding to the microphone positions <code>xr</code></li>
<li><code>seed</code>: randomization seed to preserve spatial properties when other RIR at different position are needed</li>
</ul>
<h2><a id="user-content-other-languages-implementations" class="anchor" aria-hidden="true" href="#other-languages-implementations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Other languages implementations</h2>
<p>A single channel MATLAB implementation of the RIM can be found in:
<a href="http://www.desena.org/sweep/" rel="nofollow">http://www.desena.org/sweep/</a></p>
<p>A multi-channel MATLAB version can be found in this repository in the <a href="https://github.com/nantonel/RIM.jl/tree/master/src/MATLAB">src/MATLAB folder</a>. Notice that the Julia version outperforms both implementations in terms of speed.</p>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>References</h2>
<ol>
<li><a href="http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=7045580" rel="nofollow">E. De Sena, N. Antonello, M. Moonen, and T. van Waterschoot, "On the Modeling of
Rectangular Geometries in Room Acoustic Simulations", IEEE Transactions of Audio, Speech
Language Processing, vol. 21, no. 4, April 2015.</a></li>
</ol>
<h2><a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Credits</h2>
<p>RIM.jl is developed by <a href="http://homes.esat.kuleuven.be/~nantonel/" rel="nofollow">Niccolò Antonello</a> at <a href="https://www.esat.kuleuven.be/stadius/" rel="nofollow">KU Leuven, ESAT/Stadius</a>.</p>
</article></div>