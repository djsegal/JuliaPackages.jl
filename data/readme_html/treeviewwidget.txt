<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-treeviewwidgetjl" class="anchor" aria-hidden="true" href="#treeviewwidgetjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TreeViewWidget.jl</h1>
<p dir="auto">A minimal TreeView widget for use in Jupyter notebooks (and maybe Blink)</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="    julia&gt;]add TreeViewWidget"><pre class="notranslate"><code>    julia&gt;]add TreeViewWidget
</code></pre></div>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">Create a treeview widget from a treeview structure:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="    tree = TreeViewRoot()
    beverages = TreeViewNode(&quot;Beverages&quot;)
    push!(beverages, TreeViewNode(&quot;Water&quot;))
    push!(beverages, TreeViewNode(&quot;Tea&quot;))
    push!(tree, beverages)
    push!(tree, TreeViewNode(&quot;Food&quot;))

    treeview = TreeView(tree)"><pre class="notranslate"><code>    tree = TreeViewRoot()
    beverages = TreeViewNode("Beverages")
    push!(beverages, TreeViewNode("Water"))
    push!(beverages, TreeViewNode("Tea"))
    push!(tree, beverages)
    push!(tree, TreeViewNode("Food"))

    treeview = TreeView(tree)
</code></pre></div>
<p dir="auto">The elements with children are shown as collapsed nested structures. You can expand them by clicking on the <code>&gt;</code> icon.
The text of each element can be selected. Use CTRL+Click to select multiple elements.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/matthijscox/TreeViewWidget.jl/main/figures/example_treeview.jpg"><img src="https://raw.githubusercontent.com/matthijscox/TreeViewWidget.jl/main/figures/example_treeview.jpg" alt="example_treeview" style="max-width: 100%;"></a></p>
<p dir="auto">The selection is available in Julia via an Observable. This is an array of dictionaries with the text label <code>treeview[][1]["label"]</code> and the identifier <code>treeview[][1]["id"]</code> which is also present in each <code>TreeViewNode</code>.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="    julia&gt; treeview[]
2-element Array{Dict{String,String},1}:
 Dict(&quot;label&quot; =&gt; &quot;Tea&quot;,&quot;id&quot; =&gt; &quot;654c1dbc-a4c4-42ec-9290-b27ce6165993&quot;)
 Dict(&quot;label&quot; =&gt; &quot;Food&quot;,&quot;id&quot; =&gt; &quot;8c26fdf9-9d4b-4f04-ae54-0f94ad21603c&quot;)"><pre class="notranslate"><code>    julia&gt; treeview[]
2-element Array{Dict{String,String},1}:
 Dict("label" =&gt; "Tea","id" =&gt; "654c1dbc-a4c4-42ec-9290-b27ce6165993")
 Dict("label" =&gt; "Food","id" =&gt; "8c26fdf9-9d4b-4f04-ae54-0f94ad21603c")
</code></pre></div>
<p dir="auto">You can automatically do things whenever the user clicks something using <code>on</code> from Observables:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="    using Observables
    h = on(treeview[]) do selected
        if !isempty(selected)
            println(&quot;The first selected label is: &quot;, selected[1][&quot;label&quot;])
        end
    end"><pre class="notranslate"><code>    using Observables
    h = on(treeview[]) do selected
        if !isempty(selected)
            println("The first selected label is: ", selected[1]["label"])
        end
    end
</code></pre></div>
<p dir="auto">The TreeViewNode identifier is unique and can be used to retrieve the node from the TreeView and TreeViewRoot. Given the example above you can find the Tea Node via:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="    treeview[&quot;654c1dbc-a4c4-42ec-9290-b27ce6165993&quot;]"><pre class="notranslate"><code>    treeview["654c1dbc-a4c4-42ec-9290-b27ce6165993"]
</code></pre></div>
<p dir="auto">Or directly via one of the array elements returned by the Observable</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="    selected = treeview[]
    treeview[selected[1]]"><pre class="notranslate"><code>    selected = treeview[]
    treeview[selected[1]]
</code></pre></div>
<p dir="auto">You can also store data directly in each TreeViewNode, for later retrieval</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="    TreeViewNode(label = &quot;Tea&quot;, data=5.0)"><pre class="notranslate"><code>    TreeViewNode(label = "Tea", data=5.0)
</code></pre></div>
</article></div>