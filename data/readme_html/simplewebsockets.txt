<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-simplewebsocketsjl" class="anchor" aria-hidden="true" href="#simplewebsocketsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SimpleWebsockets.jl</h1>
<p dir="auto"><a href="https://github.com/citkane/SimpleWebsockets.jl/actions/workflows/CI.yml?query=branch%3Amaster"><img src="https://github.com/citkane/SimpleWebsockets.jl/actions/workflows/CI.yml/badge.svg?branch=master" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/citkane/SimpleWebsockets.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a8523f1fe0f8a41a0c83573bc9c0cd8f27a51a8c13cc5d7606b22c18028b9b43/68747470733a2f2f636f6465636f762e696f2f67682f6369746b616e652f53696d706c65576562736f636b6574732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d36544443305441323546" alt="codecov" data-canonical-src="https://codecov.io/gh/citkane/SimpleWebsockets.jl/branch/master/graph/badge.svg?token=6TDC0TA25F" style="max-width: 100%;"></a>
<a href="https://citkane.github.io/SimpleWebsockets.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://citkane.github.io/SimpleWebsockets.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">A flexible, powerful, high level interface for Websockets in Julia. Provides a SERVER and CLIENT.</p>
<h2 dir="auto"><a id="user-content-release-03-notes" class="anchor" aria-hidden="true" href="#release-03-notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Release 0.3 notes</h2>
<p dir="auto">0.3 upgrades the "HTTP" package dependency to major version 1
This breaks all functionality for Julia &lt;=1.6</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto"><code>Pkg.add("SimpleWebsockets")</code></p>
<h2 dir="auto"><a id="user-content-basic-usage-server" class="anchor" aria-hidden="true" href="#basic-usage-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic usage server:</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SimpleWebsockets

server = WebsocketServer()
ended = Condition() 

listen(server, :client) do client
    listen(client, :message) do message
        @info &quot;Got a message&quot; client = client.id message = message
        send(client, &quot;Echo back at you: $message&quot;)
    end
end
listen(server, :connectError) do err
    notify(ended, err, error = true)
end
listen(server, :closed) do details
    @warn &quot;Server has closed&quot; details...
    notify(ended)
end

@async serve(server; verbose = true)
wait(ended)"><pre><span class="pl-k">using</span> SimpleWebsockets

server <span class="pl-k">=</span> <span class="pl-c1">WebsocketServer</span>()
ended <span class="pl-k">=</span> <span class="pl-c1">Condition</span>() 

<span class="pl-c1">listen</span>(server, <span class="pl-c1">:client</span>) <span class="pl-k">do</span> client
    <span class="pl-c1">listen</span>(client, <span class="pl-c1">:message</span>) <span class="pl-k">do</span> message
        <span class="pl-c1">@info</span> <span class="pl-s"><span class="pl-pds">"</span>Got a message<span class="pl-pds">"</span></span> client <span class="pl-k">=</span> client<span class="pl-k">.</span>id message <span class="pl-k">=</span> message
        <span class="pl-c1">send</span>(client, <span class="pl-s"><span class="pl-pds">"</span>Echo back at you: <span class="pl-v">$message</span><span class="pl-pds">"</span></span>)
    <span class="pl-k">end</span>
<span class="pl-k">end</span>
<span class="pl-c1">listen</span>(server, <span class="pl-c1">:connectError</span>) <span class="pl-k">do</span> err
    <span class="pl-c1">notify</span>(ended, err, error <span class="pl-k">=</span> <span class="pl-c1">true</span>)
<span class="pl-k">end</span>
<span class="pl-c1">listen</span>(server, <span class="pl-c1">:closed</span>) <span class="pl-k">do</span> details
    <span class="pl-c1">@warn</span> <span class="pl-s"><span class="pl-pds">"</span>Server has closed<span class="pl-pds">"</span></span> details<span class="pl-k">...</span>
    <span class="pl-c1">notify</span>(ended)
<span class="pl-k">end</span>

<span class="pl-c1">@async</span> <span class="pl-c1">serve</span>(server; verbose <span class="pl-k">=</span> <span class="pl-c1">true</span>)
<span class="pl-c1">wait</span>(ended)</pre></div>
<h2 dir="auto"><a id="user-content-basic-usage-client" class="anchor" aria-hidden="true" href="#basic-usage-client"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic usage client:</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SimpleWebsockets

client = WebsocketClient()
ended = Condition()

listen(client, :connect) do ws
    listen(ws, :message) do message
        @info message
    end
    listen(ws, :close) do reason
        @warn &quot;Websocket connection closed&quot; reason...
        notify(ended)
    end
    for count = 1:10
        send(ws, &quot;hello $count&quot;)
        sleep(1)
    end
    close(ws)
end
listen(client, :connectError) do err
    notify(ended, err, error = true)
end

@async open(client, &quot;ws://localhost:8080&quot;)
wait(ended)"><pre><span class="pl-k">using</span> SimpleWebsockets

client <span class="pl-k">=</span> <span class="pl-c1">WebsocketClient</span>()
ended <span class="pl-k">=</span> <span class="pl-c1">Condition</span>()

<span class="pl-c1">listen</span>(client, <span class="pl-c1">:connect</span>) <span class="pl-k">do</span> ws
    <span class="pl-c1">listen</span>(ws, <span class="pl-c1">:message</span>) <span class="pl-k">do</span> message
        <span class="pl-c1">@info</span> message
    <span class="pl-k">end</span>
    <span class="pl-c1">listen</span>(ws, <span class="pl-c1">:close</span>) <span class="pl-k">do</span> reason
        <span class="pl-c1">@warn</span> <span class="pl-s"><span class="pl-pds">"</span>Websocket connection closed<span class="pl-pds">"</span></span> reason<span class="pl-k">...</span>
        <span class="pl-c1">notify</span>(ended)
    <span class="pl-k">end</span>
    <span class="pl-k">for</span> count <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>
        <span class="pl-c1">send</span>(ws, <span class="pl-s"><span class="pl-pds">"</span>hello <span class="pl-v">$count</span><span class="pl-pds">"</span></span>)
        <span class="pl-c1">sleep</span>(<span class="pl-c1">1</span>)
    <span class="pl-k">end</span>
    <span class="pl-c1">close</span>(ws)
<span class="pl-k">end</span>
<span class="pl-c1">listen</span>(client, <span class="pl-c1">:connectError</span>) <span class="pl-k">do</span> err
    <span class="pl-c1">notify</span>(ended, err, error <span class="pl-k">=</span> <span class="pl-c1">true</span>)
<span class="pl-k">end</span>

<span class="pl-c1">@async</span> <span class="pl-c1">open</span>(client, <span class="pl-s"><span class="pl-pds">"</span>ws://localhost:8080<span class="pl-pds">"</span></span>)
<span class="pl-c1">wait</span>(ended)</pre></div>
</article></div>