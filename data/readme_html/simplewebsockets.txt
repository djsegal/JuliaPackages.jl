<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-simplewebsocketsjl" class="anchor" aria-hidden="true" href="#simplewebsocketsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SimpleWebsockets.jl</h1>
<p><a href="https://travis-ci.org/citkane/SimpleWebsockets.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3c3e4b7736723a1decda0e6b9b745f0fc9a62a9fc1443be5979f74b13f1a9170/68747470733a2f2f7472617669732d63692e6f72672f6369746b616e652f53696d706c65576562736f636b6574732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/citkane/SimpleWebsockets.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/citkane/SimpleWebsockets.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/7016dea65c13b4045ad5c6450722177e38eb7586c12de046b73e8d540423046a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6369746b616e652f53696d706c65576562736f636b6574732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/citkane/SimpleWebsockets.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://citkane.github.io/SimpleWebsockets.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://citkane.github.io/SimpleWebsockets.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<p>A flexible, powerful, high level interface for Websockets in Julia. Provides a SERVER and CLIENT.</p>
<h2><a id="user-content-basic-usage-server" class="anchor" aria-hidden="true" href="#basic-usage-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic usage server:</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using SimpleWebsockets

server = WebsocketServer()
ended = Condition() 

listen(server, :client) do client
    listen(client, :message) do message
        @info &quot;Got a message&quot; client = client.id message = message
        send(client, &quot;Echo back at you: $message&quot;)
    end
end
listen(server, :connectError) do err
    notify(ended, err, error = true)
end
listen(server, :closed) do details
    @warn &quot;Server has closed&quot; details...
    notify(ended)
end

@async serve(server; verbose = true)
wait(ended)
"><pre><span class="pl-k">using</span> SimpleWebsockets

server <span class="pl-k">=</span> <span class="pl-c1">WebsocketServer</span>()
ended <span class="pl-k">=</span> <span class="pl-c1">Condition</span>() 

<span class="pl-c1">listen</span>(server, <span class="pl-c1">:client</span>) <span class="pl-k">do</span> client
    <span class="pl-c1">listen</span>(client, <span class="pl-c1">:message</span>) <span class="pl-k">do</span> message
        <span class="pl-c1">@info</span> <span class="pl-s"><span class="pl-pds">"</span>Got a message<span class="pl-pds">"</span></span> client <span class="pl-k">=</span> client<span class="pl-k">.</span>id message <span class="pl-k">=</span> message
        <span class="pl-c1">send</span>(client, <span class="pl-s"><span class="pl-pds">"</span>Echo back at you: <span class="pl-v">$message</span><span class="pl-pds">"</span></span>)
    <span class="pl-k">end</span>
<span class="pl-k">end</span>
<span class="pl-c1">listen</span>(server, <span class="pl-c1">:connectError</span>) <span class="pl-k">do</span> err
    <span class="pl-c1">notify</span>(ended, err, error <span class="pl-k">=</span> <span class="pl-c1">true</span>)
<span class="pl-k">end</span>
<span class="pl-c1">listen</span>(server, <span class="pl-c1">:closed</span>) <span class="pl-k">do</span> details
    <span class="pl-c1">@warn</span> <span class="pl-s"><span class="pl-pds">"</span>Server has closed<span class="pl-pds">"</span></span> details<span class="pl-k">...</span>
    <span class="pl-c1">notify</span>(ended)
<span class="pl-k">end</span>

<span class="pl-c1">@async</span> <span class="pl-c1">serve</span>(server; verbose <span class="pl-k">=</span> <span class="pl-c1">true</span>)
<span class="pl-c1">wait</span>(ended)</pre></div>
<h2><a id="user-content-basic-usage-client" class="anchor" aria-hidden="true" href="#basic-usage-client"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic usage client:</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using SimpleWebsockets

client = WebsocketClient()
ended = Condition()

listen(client, :connect) do ws
    listen(ws, :message) do message
        @info message
    end
    listen(ws, :close) do reason
        @warn &quot;Websocket connection closed&quot; reason...
        notify(ended)
    end
    for count = 1:10
        send(ws, &quot;hello $count&quot;)
        sleep(1)
    end
    close(ws)
end
listen(client, :connectError) do err
    notify(ended, err, error = true)
end

@async open(client, &quot;ws://localhost:8080&quot;)
wait(ended)
"><pre><span class="pl-k">using</span> SimpleWebsockets

client <span class="pl-k">=</span> <span class="pl-c1">WebsocketClient</span>()
ended <span class="pl-k">=</span> <span class="pl-c1">Condition</span>()

<span class="pl-c1">listen</span>(client, <span class="pl-c1">:connect</span>) <span class="pl-k">do</span> ws
    <span class="pl-c1">listen</span>(ws, <span class="pl-c1">:message</span>) <span class="pl-k">do</span> message
        <span class="pl-c1">@info</span> message
    <span class="pl-k">end</span>
    <span class="pl-c1">listen</span>(ws, <span class="pl-c1">:close</span>) <span class="pl-k">do</span> reason
        <span class="pl-c1">@warn</span> <span class="pl-s"><span class="pl-pds">"</span>Websocket connection closed<span class="pl-pds">"</span></span> reason<span class="pl-k">...</span>
        <span class="pl-c1">notify</span>(ended)
    <span class="pl-k">end</span>
    <span class="pl-k">for</span> count <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>
        <span class="pl-c1">send</span>(ws, <span class="pl-s"><span class="pl-pds">"</span>hello <span class="pl-v">$count</span><span class="pl-pds">"</span></span>)
        <span class="pl-c1">sleep</span>(<span class="pl-c1">1</span>)
    <span class="pl-k">end</span>
    <span class="pl-c1">close</span>(ws)
<span class="pl-k">end</span>
<span class="pl-c1">listen</span>(client, <span class="pl-c1">:connectError</span>) <span class="pl-k">do</span> err
    <span class="pl-c1">notify</span>(ended, err, error <span class="pl-k">=</span> <span class="pl-c1">true</span>)
<span class="pl-k">end</span>

<span class="pl-c1">@async</span> <span class="pl-c1">open</span>(client, <span class="pl-s"><span class="pl-pds">"</span>ws://localhost:8080<span class="pl-pds">"</span></span>)
<span class="pl-c1">wait</span>(ended)</pre></div>
</article></div>