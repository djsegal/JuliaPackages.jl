<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://travis-ci.org/stevengj/LaTeXStrings.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2ffba4d941832237f06b430d95c58181869ad28146a4a88fd93a3da53989e01b/68747470733a2f2f7472617669732d63692e6f72672f73746576656e676a2f4c61546558537472696e67732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/stevengj/LaTeXStrings.jl.svg?branch=master" style="max-width:100%;"></a></p>
<h1><a id="user-content-latexstrings" class="anchor" aria-hidden="true" href="#latexstrings"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LaTeXStrings</h1>
<p>This is a small package to make it easier to type LaTeX equations in
string literals in the <a href="http://julialang.org/" rel="nofollow">Julia language</a>,
written by <a href="http://math.mit.edu/~stevenj" rel="nofollow">Steven G. Johnson</a>.</p>
<p>With ordinary strings in Julia, to enter a string literal with
embedded LaTeX equations you need to manually escape all backslashes
and dollar signs: for example, <code>$\alpha^2$</code> is written
<code>\$\\alpha^2\$</code>.  Also, even though
<a href="https://github.com/JuliaLang/IJulia.jl">IJulia</a> is capable of
displaying formatted LaTeX equations (via
<a href="http://www.mathjax.org/" rel="nofollow">MathJax</a>), an ordinary string will not
exploit this.  Therefore, the LaTeXStrings package defines:</p>
<ul>
<li>
<p>A <code>LaTeXString</code> class (a subtype of <code>String</code>), which works like
a string (for indexing, conversion, etcetera), but automatically displays
as <code>text/latex</code> in IJulia.</p>
</li>
<li>
<p><code>L"..."</code> and <code>L"""..."""</code> string macros which allow you to enter
LaTeX equations without escaping backslashes and dollar signs
(and which add the dollar signs for you if you omit them).</p>
</li>
</ul>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>After installing LaTeXStrings with <code>Pkg.add("LaTeXStrings")</code> in Julia, run</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using LaTeXStrings
"><pre><code>using LaTeXStrings
</code></pre></div>
<p>to load the package.  At this point, you can construct <code>LaTeXString</code>
literals with the constructor <code>L"..."</code> (and <code>L"""..."""</code> for multi-line
strings); for example <code>L"1 + \alpha^2"</code> or <code>L"an equation: $1 + \alpha^2$"</code>.  (Note that <code>$</code> is added automatically around your
string, i.e. the string is interpreted as an equation, if you do not
include <code>$</code> yourself.)</p>
<p>If you want to perform <a href="https://docs.julialang.org/en/v1/manual/strings/#string-interpolation" rel="nofollow">string
interpolation</a>
(inserting the values of other variables into your string), use <code>%$</code> instead of
the plain <code>$</code> that you would use for interpolation in ordinary Julia strings.
For example, if <code>x=3</code> is a Julia variable, then <code>L"y = %$x"</code> will produce <code>L"y = 3"</code>.</p>
<p>You can also use the lower-level constructor <code>latexstring(args...)</code>,
which works much like <code>string(args...)</code> except that it produces a
<code>LaTeXString</code> result and automatically puts <code>$</code> at the beginning and
end of the string if an unescaped <code>$</code> is not already present.  Note
that with <code>latexstring(...)</code> you <em>do</em> have to escape <code>$</code> and <code>\</code>: for
example, <code>latexstring("an equation: \$1 + \\alpha^2\$")</code>.<br>
Note that you can supply multiple arguments (of any types) to <code>latexstring</code>, which are converted to
strings and concatenated as in the <code>string(...)</code> function.</p>
<p>Finally, you can use the lowest-level constructor
<code>LaTeXString(s)</code>.  The only advantage of this is that it
does <em>not</em> automatically put <code>$</code> at the beginning and end of the
string.  So, if for some reason you want to use <code>text/latex</code> display
of ordinary text (with no equations or formatting), you can use this
constructor.  (Note that IJulia <em>only</em> formats LaTeX equations; other
LaTeX text-formatting commands like <code>\emph</code> are ignored.)</p>
<h2><a id="user-content-author" class="anchor" aria-hidden="true" href="#author"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Author</h2>
<p>This package was written by <a href="http://math.mit.edu/~stevenj/" rel="nofollow">Steven
G. Johnson</a>, and is distributed under
the MIT/expat license (see the <a href="LICENSE.md">LICENSE.md</a> file).</p>
</article></div>