<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-plasmabenchmarks" class="anchor" aria-hidden="true" href="#plasmabenchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PlasmaBenchmarks</h1>
<h2 dir="auto"><a id="user-content-two-stream-instability" class="anchor" aria-hidden="true" href="#two-stream-instability"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Two stream instability</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Plasma

e = species.e

function TwoStream(vs1, vs2) 

    function P(x,v)
        if !(v isa Array)
            v = [v]    
        end

        if !(x isa Array)
            x = [x]    
        end

        v = sqrt(sum(v .^2))
        x = sqrt(sum(x .^2))

        1/2*(1/(sqrt(2*π)*vs1)*exp(-(v-vs2)^2)/(2*vs1^2) + 1/(sqrt(2*π)*vs1)*exp(-(v+vs2)^2)/(2*vs1^2))
    end
end

D_e = Distribution(TwoStream(1.6, -1.4), e) 
G = Geometry() 

plasma = ElectrostaticPlasma([D_e], G)

sol = Plasma.solve(plasma, dim=1, GPU=false, time_ub = 4.0, ub=4.0, lb=-4.0) "><pre><span class="pl-k">using</span> Plasma

e <span class="pl-k">=</span> species<span class="pl-k">.</span>e

<span class="pl-k">function</span> <span class="pl-en">TwoStream</span>(vs1, vs2) 

    <span class="pl-k">function</span> <span class="pl-en">P</span>(x,v)
        <span class="pl-k">if</span> <span class="pl-k">!</span>(v <span class="pl-k">isa</span> Array)
            v <span class="pl-k">=</span> [v]    
        <span class="pl-k">end</span>

        <span class="pl-k">if</span> <span class="pl-k">!</span>(x <span class="pl-k">isa</span> Array)
            x <span class="pl-k">=</span> [x]    
        <span class="pl-k">end</span>

        v <span class="pl-k">=</span> <span class="pl-c1">sqrt</span>(<span class="pl-c1">sum</span>(v <span class="pl-k">.^</span><span class="pl-c1">2</span>))
        x <span class="pl-k">=</span> <span class="pl-c1">sqrt</span>(<span class="pl-c1">sum</span>(x <span class="pl-k">.^</span><span class="pl-c1">2</span>))

        <span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">/</span>(<span class="pl-c1">sqrt</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>π)<span class="pl-k">*</span>vs1)<span class="pl-k">*</span><span class="pl-c1">exp</span>(<span class="pl-k">-</span>(v<span class="pl-k">-</span>vs2)<span class="pl-k">^</span><span class="pl-c1">2</span>)<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>vs1<span class="pl-k">^</span><span class="pl-c1">2</span>) <span class="pl-k">+</span> <span class="pl-c1">1</span><span class="pl-k">/</span>(<span class="pl-c1">sqrt</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>π)<span class="pl-k">*</span>vs1)<span class="pl-k">*</span><span class="pl-c1">exp</span>(<span class="pl-k">-</span>(v<span class="pl-k">+</span>vs2)<span class="pl-k">^</span><span class="pl-c1">2</span>)<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>vs1<span class="pl-k">^</span><span class="pl-c1">2</span>))
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

D_e <span class="pl-k">=</span> <span class="pl-c1">Distribution</span>(<span class="pl-c1">TwoStream</span>(<span class="pl-c1">1.6</span>, <span class="pl-k">-</span><span class="pl-c1">1.4</span>), e) 
G <span class="pl-k">=</span> <span class="pl-c1">Geometry</span>() 

plasma <span class="pl-k">=</span> <span class="pl-c1">ElectrostaticPlasma</span>([D_e], G)

sol <span class="pl-k">=</span> Plasma<span class="pl-k">.</span><span class="pl-c1">solve</span>(plasma, dim<span class="pl-k">=</span><span class="pl-c1">1</span>, GPU<span class="pl-k">=</span><span class="pl-c1">false</span>, time_ub <span class="pl-k">=</span> <span class="pl-c1">4.0</span>, ub<span class="pl-k">=</span><span class="pl-c1">4.0</span>, lb<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">4.0</span>) </pre></div>
</article></div>