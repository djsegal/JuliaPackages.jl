<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-kissthreadingjl" class="anchor" aria-hidden="true" href="#kissthreadingjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>KissThreading.jl</h1>
<p>This package is WIP and not fully tested. Use with care (<code>tmap!</code> should be safe to use).</p>
<p>Simple patterns supporting working with threads in Julia. Functionalities:</p>
<ul>
<li><code>tmap!</code>, <code>tmapreduce</code> functions. They are designed for relatively expensive mapping <code>f</code>;</li>
<li><code>trandjump</code> and <code>TRNG</code> are for random number generators ready for threading</li>
<li><code>getrange</code> is a function returning a range of indices to traverse in a given thread
it is designed for cases when we handcode loop inside <code>@threads</code> macro
(usually when mapping <code>f</code> is cheap and e.g. can benefit from <code>@simd</code>); see <code>test/summation.jl</code> for example usage</li>
</ul>
<p>Comparison of performance <code>tmap!</code> threading with copied random number generators and standard <code>@Threading.threads</code>.
Tests run on 16 core AWS c4.4xlarge instance by running <em>src/runtests.sh</em>.
We measure time using <code>@time</code> so <code>tmap!</code> has more of precompilation overhead reported.</p>
<h3><a id="user-content-bootstrapjl" class="anchor" aria-hidden="true" href="#bootstrapjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>bootstrap.jl</code></h3>
<p><a target="_blank" rel="noopener noreferrer" href="bootstrap.png"><img src="bootstrap.png" alt="bootstrap.png" style="max-width:100%;"></a></p>
<h3><a id="user-content-bubblejl" class="anchor" aria-hidden="true" href="#bubblejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>bubble.jl</code></h3>
<p><a target="_blank" rel="noopener noreferrer" href="bubble.png"><img src="bubble.png" alt="bubble.png" style="max-width:100%;"></a></p>
</article></div>