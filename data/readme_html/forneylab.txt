<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-forneylabjl" class="anchor" aria-hidden="true" href="#forneylabjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ForneyLab.jl</h1>
<p><a href="https://travis-ci.org/biaslab/ForneyLab.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4272c3a7d9cff02a44c1eb8ca7fe96ecd3139ec7/68747470733a2f2f7472617669732d63692e6f72672f626961736c61622f466f726e65794c61622e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/biaslab/ForneyLab.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://biaslab.github.io/forneylab/docs" rel="nofollow"><img src="https://camo.githubusercontent.com/e46edd77c7af595ff52e8e423cba725ca97f714b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f632d737461626c652d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/doc-stable-blue.svg" style="max-width:100%;"></a></p>
<p>ForneyLab.jl is a Julia package for automatic generation of (Bayesian) inference algorithms. Given a probabilistic model, ForneyLab generates efficient Julia code for message-passing based inference. It uses the model structure to generate an algorithm that consists of a sequence of local computations on a Forney-style factor graph (FFG) representation of the model. For an excellent introduction to message passing and FFGs, see <a href="https://ieeexplore.ieee.org/document/4282128/" rel="nofollow">The Factor Graph Approach to Model-Based Signal Processing</a> by Loeliger et al. (2007). Moreover, for a comprehensive overview of the underlying principles behind this tool, see <a href="https://arxiv.org/abs/1811.03407" rel="nofollow">A Factor Graph Approach to Automated Design of Bayesian Signal Processing Algorithms</a> by Cox et. al. (2018).</p>
<p>We designed ForneyLab with a focus on flexible and modular modeling of time-series data. ForneyLab enables a user to:</p>
<ul>
<li>Conveniently specify a probabilistic model;</li>
<li>Automatically generate an efficient inference algorithm;</li>
<li>Compile the inference algorithm to executable Julia code.</li>
</ul>
<p>The current version supports <a href="https://en.wikipedia.org/wiki/Belief_propagation" rel="nofollow">belief propagation</a> (sum-product message passing), <a href="https://en.wikipedia.org/wiki/Variational_message_passing" rel="nofollow">variational message passing</a> and <a href="https://en.wikipedia.org/wiki/Expectation_propagation" rel="nofollow">expectation propagation</a>.</p>
<p>The <a href="http://forneylab.org" rel="nofollow">ForneyLab project page</a> provides more background on ForneyLab as well as pointers to related literature and talks. For a practical introduction, have a look at <a href="https://github.com/biaslab/ForneyLab.jl/tree/master/demo">the demos</a>.</p>
<h1><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h1>
<p>Full documentation is available at <a href="https://biaslab.github.io/forneylab/docs/" rel="nofollow">BIASlab website</a>.</p>
<p>It is also possible to build documentation locally. Just execute</p>
<div class="highlight highlight-source-shell"><pre>$ julia make.jl</pre></div>
<p>in the <code>docs/</code> directory to build a local version of the documentation.</p>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h1>
<p>Install ForneyLab through the Julia package manager:</p>
<div class="highlight highlight-source-julia"><pre>] add ForneyLab</pre></div>
<p>If you want to be able to use the graph visualization functions, you will also need to have <a href="http://www.graphviz.org/" rel="nofollow">GraphViz</a> installed. On Linux, just use <code>apt-get install graphviz</code> or <code>yum install graphviz</code>. On Windows, run the installer and afterwards manually add the path of the GraphViz installation to the <code>PATH</code> system variable. On MacOS, use for example <code>brew install graphviz</code>. The <code>dot</code> command should work from the command line.</p>
<p>Some demos use the <a href="https://github.com/stevengj/PyPlot.jl">PyPlot</a> plotting module. Install it using <code>] add PyPlot</code>.</p>
<p>Optionally, use <code>] test ForneyLab</code> to validate the installation by running the test suite.</p>
<h1><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Getting started</h1>
<p>There are <a href="https://github.com/biaslab/ForneyLab.jl/tree/master/demo">demos</a> available to get you started.
Additionally, the <a href="http://forneylab.org" rel="nofollow">ForneyLab project page</a> contains a talk and other resources that might be helpful.</p>
<h1><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h1>
<p>(c) 2019 GN Store Nord A/S. Permission to use this software for any non-commercial purpose is granted. See <code>LICENSE.md</code> file for details.</p>
</article></div>