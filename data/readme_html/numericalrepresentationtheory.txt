<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-numericalrepresentationtheoryjl" class="anchor" aria-hidden="true" href="#numericalrepresentationtheoryjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>NumericalRepresentationTheory.jl</h1>
<p dir="auto">A Julia package for representation theory of the symmetric group</p>
<p dir="auto">This package supports basic representation theory of the symmetric group. One can form irreducible representations (irreps) by specifying the corresponding permutation, combine representations via direct sum and Kronecker product, and also calculate the resulting irrep multipliciplities. For example, the following code calculates the Kronecker coefficients of two irreps of S₇, specified by the partitions <code>5+1+1</code> and <code>2+2+2+1</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using NumericalRepresentationTheory, Permutations, Plots

julia&gt; R₁ = Representation(5,1,1);

julia&gt; g = Permutation([7,2,1,3,4,6,5]); Matrix(R₁(g)) # Matrix representation of a specific permutation
15×15 Array{Float64,2}:
 -0.2       -0.0408248  -0.0527046  …   0.0         0.0         0.0     
  0.163299   0.241667    0.31199        0.0         0.0         0.0     
  0.0       -0.161374    0.0138889      0.0         0.0         0.0     
  0.0        0.0        -0.157135       0.467707    0.810093    0.0     
  0.0        0.0         0.0            0.270031   -0.155902   -0.881917
 -0.966092   0.0493007   0.0636469  …   0.0         0.0         0.0     
  0.0       -0.190941    0.0164336      0.0         0.0         0.0     
  0.0        0.0        -0.185924       0.0790569   0.136931    0.0     
  0.0        0.0         0.0            0.0456435  -0.0263523  -0.149071
  0.0        0.935414   -0.0805076      0.0         0.0         0.0     
  0.0        0.0         0.91084    …   0.0968246   0.167705    0.0     
  0.0        0.0         0.0            0.0559017  -0.0322749  -0.182574
  0.0        0.0         0.0            0.125       0.216506    0.0     
  0.0        0.0         0.0            0.0721688  -0.0416667  -0.235702
  0.0        0.0         0.0           -0.816497    0.471405   -0.333333

julia&gt; R₂ = Representation(2,2,2,1);

julia&gt; R = R₁ ⊗ R₂; # Tensor product representation

julia&gt; multiplicities(R) # Returns a dictionary whose keys are partitions and values are the multiplicities
Dict{Partition, Int64} with 8 entries:
  7 = 2 + 2 + 2 + 1     =&gt; 1
  7 = 4 + 2 + 1         =&gt; 1
  7 = 3 + 1 + 1 + 1 + 1 =&gt; 1
  7 = 3 + 2 + 2         =&gt; 1
  7 = 3 + 3 + 1         =&gt; 1
  7 = 2 + 2 + 1 + 1 + 1 =&gt; 1
  7 = 4 + 1 + 1 + 1     =&gt; 1
  7 = 3 + 2 + 1 + 1     =&gt; 2

julia&gt; plot(multiplicities(R)) # We can also plot"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> NumericalRepresentationTheory, Permutations, Plots

julia<span class="pl-k">&gt;</span> R₁ <span class="pl-k">=</span> <span class="pl-c1">Representation</span>(<span class="pl-c1">5</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>);

julia<span class="pl-k">&gt;</span> g <span class="pl-k">=</span> <span class="pl-c1">Permutation</span>([<span class="pl-c1">7</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>,<span class="pl-c1">5</span>]); <span class="pl-c1">Matrix</span>(<span class="pl-c1">R₁</span>(g)) <span class="pl-c"><span class="pl-c">#</span> Matrix representation of a specific permutation</span>
<span class="pl-c1">15</span><span class="pl-k">×</span><span class="pl-c1">15</span> Array{Float64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">0.2</span>       <span class="pl-k">-</span><span class="pl-c1">0.0408248</span>  <span class="pl-k">-</span><span class="pl-c1">0.0527046</span>  …   <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>     
  <span class="pl-c1">0.163299</span>   <span class="pl-c1">0.241667</span>    <span class="pl-c1">0.31199</span>        <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>     
  <span class="pl-c1">0.0</span>       <span class="pl-k">-</span><span class="pl-c1">0.161374</span>    <span class="pl-c1">0.0138889</span>      <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>     
  <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>        <span class="pl-k">-</span><span class="pl-c1">0.157135</span>       <span class="pl-c1">0.467707</span>    <span class="pl-c1">0.810093</span>    <span class="pl-c1">0.0</span>     
  <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>            <span class="pl-c1">0.270031</span>   <span class="pl-k">-</span><span class="pl-c1">0.155902</span>   <span class="pl-k">-</span><span class="pl-c1">0.881917</span>
 <span class="pl-k">-</span><span class="pl-c1">0.966092</span>   <span class="pl-c1">0.0493007</span>   <span class="pl-c1">0.0636469</span>  …   <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>     
  <span class="pl-c1">0.0</span>       <span class="pl-k">-</span><span class="pl-c1">0.190941</span>    <span class="pl-c1">0.0164336</span>      <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>     
  <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>        <span class="pl-k">-</span><span class="pl-c1">0.185924</span>       <span class="pl-c1">0.0790569</span>   <span class="pl-c1">0.136931</span>    <span class="pl-c1">0.0</span>     
  <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>            <span class="pl-c1">0.0456435</span>  <span class="pl-k">-</span><span class="pl-c1">0.0263523</span>  <span class="pl-k">-</span><span class="pl-c1">0.149071</span>
  <span class="pl-c1">0.0</span>        <span class="pl-c1">0.935414</span>   <span class="pl-k">-</span><span class="pl-c1">0.0805076</span>      <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>     
  <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>         <span class="pl-c1">0.91084</span>    …   <span class="pl-c1">0.0968246</span>   <span class="pl-c1">0.167705</span>    <span class="pl-c1">0.0</span>     
  <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>            <span class="pl-c1">0.0559017</span>  <span class="pl-k">-</span><span class="pl-c1">0.0322749</span>  <span class="pl-k">-</span><span class="pl-c1">0.182574</span>
  <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>            <span class="pl-c1">0.125</span>       <span class="pl-c1">0.216506</span>    <span class="pl-c1">0.0</span>     
  <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>            <span class="pl-c1">0.0721688</span>  <span class="pl-k">-</span><span class="pl-c1">0.0416667</span>  <span class="pl-k">-</span><span class="pl-c1">0.235702</span>
  <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>           <span class="pl-k">-</span><span class="pl-c1">0.816497</span>    <span class="pl-c1">0.471405</span>   <span class="pl-k">-</span><span class="pl-c1">0.333333</span>

julia<span class="pl-k">&gt;</span> R₂ <span class="pl-k">=</span> <span class="pl-c1">Representation</span>(<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>);

julia<span class="pl-k">&gt;</span> R <span class="pl-k">=</span> R₁ ⊗ R₂; <span class="pl-c"><span class="pl-c">#</span> Tensor product representation</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">multiplicities</span>(R) <span class="pl-c"><span class="pl-c">#</span> Returns a dictionary whose keys are partitions and values are the multiplicities</span>
Dict{Partition, Int64} with <span class="pl-c1">8</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">7</span> <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>     <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>
  <span class="pl-c1">7</span> <span class="pl-k">=</span> <span class="pl-c1">4</span> <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>         <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>
  <span class="pl-c1">7</span> <span class="pl-k">=</span> <span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>
  <span class="pl-c1">7</span> <span class="pl-k">=</span> <span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">2</span>         <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>
  <span class="pl-c1">7</span> <span class="pl-k">=</span> <span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>         <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>
  <span class="pl-c1">7</span> <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>
  <span class="pl-c1">7</span> <span class="pl-k">=</span> <span class="pl-c1">4</span> <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>     <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>
  <span class="pl-c1">7</span> <span class="pl-k">=</span> <span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>     <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(<span class="pl-c1">multiplicities</span>(R)) <span class="pl-c"><span class="pl-c">#</span> We can also plot</span></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/dlfivefifty/NumericalRepresentationTheory.jl/raw/master/images/mults.png"><img src="https://github.com/dlfivefifty/NumericalRepresentationTheory.jl/raw/master/images/mults.png" width="500" height="400" style="max-width: 100%;"></a></p>
<p dir="auto">In addition, one can find an orthogonal transformation that reduces a representation to irreducibles:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ρ,Q = blockdiagonalize(R); # Q'R(g)*Q ≈ ρ(g) where ρ is a direct sum (block diagonal) of irreducibles.

julia&gt; Q'R(g)*Q ≈ ρ(g)
true

julia&gt; ρ(g) ≈ (Representation(4,2,1) ⊕ Representation(4,1,1,1) ⊕ Representation(3,3,1) ⊕ Representation(3,2,2) ⊕ Representation(3,2,1,1) ⊕ Representation(3,2,1,1) ⊕ Representation(3,1,1,1,1) ⊕ Representation(2,2,2,1) ⊕ Representation(2,2,1,1,1))(g)
true"><pre>julia<span class="pl-k">&gt;</span> ρ,Q <span class="pl-k">=</span> <span class="pl-c1">blockdiagonalize</span>(R); <span class="pl-c"><span class="pl-c">#</span> Q'R(g)*Q ≈ ρ(g) where ρ is a direct sum (block diagonal) of irreducibles.</span>

julia<span class="pl-k">&gt;</span> Q<span class="pl-k">'</span><span class="pl-c1">R</span>(g)<span class="pl-k">*</span>Q <span class="pl-k">≈</span> <span class="pl-c1">ρ</span>(g)
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">ρ</span>(g) <span class="pl-k">≈</span> (<span class="pl-c1">Representation</span>(<span class="pl-c1">4</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>) ⊕ <span class="pl-c1">Representation</span>(<span class="pl-c1">4</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>) ⊕ <span class="pl-c1">Representation</span>(<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-c1">1</span>) ⊕ <span class="pl-c1">Representation</span>(<span class="pl-c1">3</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>) ⊕ <span class="pl-c1">Representation</span>(<span class="pl-c1">3</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>) ⊕ <span class="pl-c1">Representation</span>(<span class="pl-c1">3</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>) ⊕ <span class="pl-c1">Representation</span>(<span class="pl-c1">3</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>) ⊕ <span class="pl-c1">Representation</span>(<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>) ⊕ <span class="pl-c1">Representation</span>(<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>))(g)
<span class="pl-c1">true</span></pre></div>
</article></div>