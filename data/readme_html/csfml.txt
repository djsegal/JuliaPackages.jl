<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-csfml" class="anchor" aria-hidden="true" href="#csfml"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CSFML</h1>
<p><a href="https://travis-ci.com/JuliaMultimedia/CSFML.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/baaab13b20d1020695716ef0ad34b477041fbe85/68747470733a2f2f7472617669732d63692e636f6d2f4a756c69614d756c74696d656469612f4353464d4c2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/JuliaMultimedia/CSFML.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/JuliaMultimedia/csfml-jl-38st2" rel="nofollow"><img src="https://camo.githubusercontent.com/6b2aaf9bc55e5389b27f6ab180f8f732daedcdee/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f71766b69396c717531643571366e6d313f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/qvki9lqu1d5q6nm1?svg=true" style="max-width:100%;"></a></p>
<p>Julia wrapper for <a href="https://github.com/SFML/CSFML">CSFML</a>, the official binding of <a href="https://github.com/SFML/SFML">SFML</a> for C. SFML is a simple, fast, cross-platform and object-oriented multimedia API. It provides access to windowing, graphics, audio and network. The Julia bindings in this repo are auto-generated using <a href="https://github.com/JuliaInterop/Clang.jl">Clang.jl</a>. You could refer to CSFML's repo for how to use those bindings.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add CSFML</pre></div>
<p>On Linux, you might need to install the following dependencies firstly:</p>
<ul>
<li>openal</li>
<li>pthread</li>
<li>opengl</li>
<li>xlib</li>
<li>xrandr</li>
<li>udev</li>
<li>freetype</li>
<li>flac</li>
<li>vorbis</li>
</ul>
<p>Should you encountered any installation problems, feel free to file an issue.</p>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick start</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> CSFML<span class="pl-k">.</span>LibCSFML

mode <span class="pl-k">=</span> <span class="pl-c1">sfVideoMode</span>(<span class="pl-c1">1280</span>, <span class="pl-c1">720</span>, <span class="pl-c1">32</span>)

window <span class="pl-k">=</span> <span class="pl-c1">sfRenderWindow_create</span>(mode, <span class="pl-s"><span class="pl-pds">"</span>SFML window<span class="pl-pds">"</span></span>, sfResize <span class="pl-k">|</span> sfClose, C_NULL)
<span class="pl-c1">@assert</span> window <span class="pl-k">!=</span> C_NULL

texture <span class="pl-k">=</span> <span class="pl-c1">sfTexture_createFromFile</span>(<span class="pl-c1">joinpath</span>(<span class="pl-c1">@__DIR__</span>, <span class="pl-s"><span class="pl-pds">"</span>julia-tan.png<span class="pl-pds">"</span></span>), C_NULL)
<span class="pl-c1">@assert</span> texture <span class="pl-k">!=</span> C_NULL

sprite <span class="pl-k">=</span> <span class="pl-c1">sfSprite_create</span>()
<span class="pl-c1">sfSprite_setTexture</span>(sprite, texture, sfTrue)

font <span class="pl-k">=</span> <span class="pl-c1">sfFont_createFromFile</span>(<span class="pl-c1">joinpath</span>(<span class="pl-c1">@__DIR__</span>, <span class="pl-s"><span class="pl-pds">"</span>Roboto-Bold.ttf<span class="pl-pds">"</span></span>))
<span class="pl-c1">@assert</span> font <span class="pl-k">!=</span> C_NULL

text <span class="pl-k">=</span> <span class="pl-c1">sfText_create</span>()
<span class="pl-c1">sfText_setString</span>(text, <span class="pl-s"><span class="pl-pds">"</span>Hello SFML<span class="pl-pds">"</span></span>)
<span class="pl-c1">sfText_setFont</span>(text, font)
<span class="pl-c1">sfText_setCharacterSize</span>(text, <span class="pl-c1">50</span>)

music <span class="pl-k">=</span> <span class="pl-c1">sfMusic_createFromFile</span>(<span class="pl-c1">joinpath</span>(<span class="pl-c1">@__DIR__</span>, <span class="pl-s"><span class="pl-pds">"</span>Chrono_Trigger.ogg<span class="pl-pds">"</span></span>))
<span class="pl-c1">@assert</span> music <span class="pl-k">!=</span> C_NULL

<span class="pl-c1">sfMusic_play</span>(music)

event_ref <span class="pl-k">=</span> <span class="pl-c1">Ref</span>(<span class="pl-c1">sfEvent</span>(sfEvtClosed))

<span class="pl-k">while</span> <span class="pl-c1">Bool</span>(<span class="pl-c1">sfRenderWindow_isOpen</span>(window))
    <span class="pl-c"><span class="pl-c">#</span> process events</span>
    <span class="pl-k">while</span> <span class="pl-c1">Bool</span>(<span class="pl-c1">sfRenderWindow_pollEvent</span>(window, event_ref))
        <span class="pl-c"><span class="pl-c">#</span> close window : exit</span>
        event_ref<span class="pl-k">.</span>x<span class="pl-k">.</span>type <span class="pl-k">==</span> sfEvtClosed <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">sfRenderWindow_close</span>(window)
    <span class="pl-k">end</span>
    <span class="pl-c"><span class="pl-c">#</span> clear the screen</span>
    <span class="pl-c1">sfRenderWindow_clear</span>(window, <span class="pl-c1">sfColor_fromRGBA</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>))
    <span class="pl-c"><span class="pl-c">#</span> draw the sprite</span>
    <span class="pl-c1">sfRenderWindow_drawSprite</span>(window, sprite, C_NULL)
    <span class="pl-c"><span class="pl-c">#</span> draw the text</span>
    <span class="pl-c1">sfRenderWindow_drawText</span>(window, text, C_NULL)
    <span class="pl-c"><span class="pl-c">#</span> update the window</span>
    <span class="pl-c1">sfRenderWindow_display</span>(window)
<span class="pl-k">end</span>

<span class="pl-c1">sfMusic_destroy</span>(music)
<span class="pl-c1">sfText_destroy</span>(text)
<span class="pl-c1">sfFont_destroy</span>(font)
<span class="pl-c1">sfSprite_destroy</span>(sprite)
<span class="pl-c1">sfTexture_destroy</span>(texture)
<span class="pl-c1">sfRenderWindow_destroy</span>(window)</pre></div>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p>This package is released under zlib/png license except <code>examples/Chrono_Trigger.ogg</code> which is
licensed under <a href="https://creativecommons.org/licenses/by-sa/3.0/" rel="nofollow">https://creativecommons.org/licenses/by-sa/3.0/</a>.</p>
</article></div>