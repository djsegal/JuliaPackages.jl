<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-nexosjl" class="anchor" aria-hidden="true" href="#nexosjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>NExOS.jl</code></h1>
<p align="center" dir="auto">
  <a href="#Installation">Installation</a> •
  <a href="#Usage">Usage</a> •
  <a href="#Tutorials">Tutorials</a> •
  <a href="#Citing">Citing</a> •
  <a href="#Contact">Contact</a> 
</p>
<p dir="auto"><code>NExOS.jl</code> is a <code>Julia</code> package that implements the <strong>N</strong>onconvex <strong>E</strong>xterior-point <strong>O</strong>ptimization <strong>S</strong>olver (NExOS). The package is tailored for minimizing a convex cost function over a nonconvex constraint set.</p>
<p dir="auto"><code>NExOS.jl</code> considers nonconvex optimization problems of the following form:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="minimize    f(x)+(β/2)‖x‖^2
subject to  x ∈ X,"><pre class="notranslate"><code>minimize    f(x)+(β/2)‖x‖^2
subject to  x ∈ X,
</code></pre></div>
<p dir="auto">where the decision variable <code>x</code> can be a vector in <code>ℜ^d</code> or a matrix in <code>ℜ^(m×d)</code> or a combination of both. The cost function <code>f</code> is convex, <code>β</code> is a positive parameter (can be arbitrarily small), and the constraint set <code>X</code> is a nonconvex set (please see <a href="#Acceptable-functions-and-sets">Acceptable functions and sets</a> for more details).</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">In <code>Julia REPL</code>, type</p>
<p dir="auto"><code>] add NExOS</code></p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">Below is a short usage example on using <code>NExOS.jl</code> for <a href="https://nbviewer.jupyter.org/github/Shuvomoy/NExOS.jl/blob/master/tutorials/sparse_regression_using_NExOS.ipynb" rel="nofollow">sparse regression problem</a> (for other examples, please see <a href="#Tutorials">Tutorials</a>).</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Load the packages
using Random, NExOS, ProximalOperators

# Random data generation 
m = 25
n = 50
A = randn(m,n)
b = randn(m)
M = 100
k = convert(Int64, round(m/3))
beta = 10^-10

# Create the problem instance in NExOS
C = SparseSet(M, k) # Create the set
f = LeastSquares(A, b, iterative = true) # Create the function
settings = Settings(μ_max = 2, μ_mult_fact = 0.85, verbose = false, freq = 250, γ_updt_rule = :adaptive, β = beta) # settings
z0 = zeros(n) # create an initial point
problem = Problem(f, C, settings.β, z0) # problem instance

# Solve the problem
state_final = solve!(problem, settings)

# Extract solution info
x_NExOS = state_final.x # solution found by NExOS
p_star = f(x_NExOS) # objective value"><pre><span class="pl-c"><span class="pl-c">#</span> Load the packages</span>
<span class="pl-k">using</span> Random, NExOS, ProximalOperators

<span class="pl-c"><span class="pl-c">#</span> Random data generation </span>
m <span class="pl-k">=</span> <span class="pl-c1">25</span>
n <span class="pl-k">=</span> <span class="pl-c1">50</span>
A <span class="pl-k">=</span> <span class="pl-c1">randn</span>(m,n)
b <span class="pl-k">=</span> <span class="pl-c1">randn</span>(m)
M <span class="pl-k">=</span> <span class="pl-c1">100</span>
k <span class="pl-k">=</span> <span class="pl-c1">convert</span>(Int64, <span class="pl-c1">round</span>(m<span class="pl-k">/</span><span class="pl-c1">3</span>))
beta <span class="pl-k">=</span> <span class="pl-c1">10</span><span class="pl-k">^-</span><span class="pl-c1">10</span>

<span class="pl-c"><span class="pl-c">#</span> Create the problem instance in NExOS</span>
C <span class="pl-k">=</span> <span class="pl-c1">SparseSet</span>(M, k) <span class="pl-c"><span class="pl-c">#</span> Create the set</span>
f <span class="pl-k">=</span> <span class="pl-c1">LeastSquares</span>(A, b, iterative <span class="pl-k">=</span> <span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> Create the function</span>
settings <span class="pl-k">=</span> <span class="pl-c1">Settings</span>(μ_max <span class="pl-k">=</span> <span class="pl-c1">2</span>, μ_mult_fact <span class="pl-k">=</span> <span class="pl-c1">0.85</span>, verbose <span class="pl-k">=</span> <span class="pl-c1">false</span>, freq <span class="pl-k">=</span> <span class="pl-c1">250</span>, γ_updt_rule <span class="pl-k">=</span> <span class="pl-c1">:adaptive</span>, β <span class="pl-k">=</span> beta) <span class="pl-c"><span class="pl-c">#</span> settings</span>
z0 <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(n) <span class="pl-c"><span class="pl-c">#</span> create an initial point</span>
problem <span class="pl-k">=</span> <span class="pl-c1">Problem</span>(f, C, settings<span class="pl-k">.</span>β, z0) <span class="pl-c"><span class="pl-c">#</span> problem instance</span>

<span class="pl-c"><span class="pl-c">#</span> Solve the problem</span>
state_final <span class="pl-k">=</span> <span class="pl-c1">solve!</span>(problem, settings)

<span class="pl-c"><span class="pl-c">#</span> Extract solution info</span>
x_NExOS <span class="pl-k">=</span> state_final<span class="pl-k">.</span>x <span class="pl-c"><span class="pl-c">#</span> solution found by NExOS</span>
p_star <span class="pl-k">=</span> <span class="pl-c1">f</span>(x_NExOS) <span class="pl-c"><span class="pl-c">#</span> objective value</span></pre></div>
<h3 dir="auto"><a id="user-content-acceptable-functions-and-sets" class="anchor" aria-hidden="true" href="#acceptable-functions-and-sets"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acceptable functions and sets</h3>
<h5 dir="auto"><a id="user-content-objective-function-f" class="anchor" aria-hidden="true" href="#objective-function-f"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Objective function <code>f</code></h5>
<p dir="auto"><code>NExOS.jl</code> allows for any <code>f</code> that is convex. We can classify them into two types:</p>
<ol dir="auto">
<li>
<p dir="auto">The function <code>f</code> is an unconstrained convex function with an easy-to-compute proximal operator. To compute the proximal operators for this category of functions, <code>NExOS.jl</code> uses the package <a href="https://github.com/kul-forbes/ProximalOperators.jl"><code>ProximalOperators.jl</code></a>. The list of available functions for this type is available at this <a href="https://kul-forbes.github.io/ProximalOperators.jl/stable/functions/" rel="nofollow">link</a>.</p>
</li>
<li>
<p dir="auto">The function <code>f</code> is a constrained convex function (<em>i.e.</em>, a convex function over some convex constraint set). For such a function, no closed form solution usually exists, and in this situation <code>NExOS</code> computes the proximal operator of <code>f</code> by solving a convex optimization problem using <a href="https://github.com/jump-dev/JuMP.jl"><code>JuMP</code></a>  and any of the solvers supported by it (listed <a href="https://jump.dev/JuMP.jl/stable/installation/#Getting-Solvers-1" rel="nofollow">here</a>). To know more about how to compute such proximal operators, please see <a href="https://shuvomoy.github.io/blog/programming/2020/09/08/proximal-operator-over-matrix.html" rel="nofollow">this blog post</a> I wrote.</p>
</li>
</ol>
<h5 dir="auto"><a id="user-content-constraint-set-x" class="anchor" aria-hidden="true" href="#constraint-set-x"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Constraint set <code>X</code></h5>
<p dir="auto">The constraint set <code>X</code> is nonconvex, but it can be decomposed into a convex compact set <code>C</code> and a nonconvex set <code>N</code>, <em>i.e.</em>, <code>X = C ⋂ N</code>. For example:</p>
<ol dir="auto">
<li><strong>Sparse set.</strong>  <code>N = {x ∈ ℜ^d ∣ card(x) ≦ k}</code>, where <code>card(x)</code> denotes the number of nonzero components in <code>x</code>,</li>
<li><strong>Low-rank set.</strong>  <code>N = { X ∈ ℜ^(m×d) ∣ rank(X) ≦ r}</code>, where <code>rank(X)</code> denotes the rank of the matrix <code>X</code>,</li>
<li><strong>Combination of low-rank and sparse set.</strong>  <code>N = {X ∈ ℜ^(m×d), x ∈ ℜ^d ∣ card(x) ≦ k, rank(X) ≦ r}</code>,</li>
<li><strong>Any other prox-regular set.</strong>  <code>N</code> can be any other nonconvex set such that projection around local minima is single-valued, <em>e.g.,</em> weakly convex sets, proximally smooth sets, <em>etc.</em></li>
</ol>
<h2 dir="auto"><a id="user-content-tutorials" class="anchor" aria-hidden="true" href="#tutorials"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tutorials</h2>
<p dir="auto">Please see the following <code>jupyter notebook</code> tutorials that describe in more detail how to use <code>NExOS.jl</code>.</p>
<ol dir="auto">
<li><a href="https://nbviewer.jupyter.org/github/Shuvomoy/NExOS.jl/blob/master/tutorials/Affine%20rank%20minimization%20using%20NExOS.jl.ipynb" rel="nofollow">Affine rank minimization</a>.</li>
<li><a href="https://nbviewer.jupyter.org/github/Shuvomoy/NExOS.jl/blob/master/tutorials/Matrix_completion_problem_NEXOS.ipynb" rel="nofollow">Matrix completion</a>.</li>
<li><a href="https://nbviewer.jupyter.org/github/Shuvomoy/NExOS.jl/blob/master/tutorials/sparse_regression_using_NExOS.ipynb" rel="nofollow">Sparse regression</a>.</li>
<li><a href="https://nbviewer.jupyter.org/github/Shuvomoy/NExOS.jl/blob/master/tutorials/Low-rank_factor_analysis_using_NExOS.ipynb" rel="nofollow">Low-rank factor analysis</a>.</li>
</ol>
<h2 dir="auto"><a id="user-content-citing" class="anchor" aria-hidden="true" href="#citing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citing</h2>
<p dir="auto">If you find <code>NExOS.jl</code> useful in your project, we kindly request that you cite the following paper:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@article{NExOS,
  title={Exterior-point Optimization for Nonconvex Learning},
  author={Das Gupta, Shuvomoy and Stellato, Bartolomeo and Van Parys, Bart P.G.},
  journal={arXiv preprint arXiv:2011.04552},
  note={\url{https://arxiv.org/pdf/2011.04552.pdf}},
  year={2020}
}"><pre class="notranslate"><code>@article{NExOS,
  title={Exterior-point Optimization for Nonconvex Learning},
  author={Das Gupta, Shuvomoy and Stellato, Bartolomeo and Van Parys, Bart P.G.},
  journal={arXiv preprint arXiv:2011.04552},
  note={\url{https://arxiv.org/pdf/2011.04552.pdf}},
  year={2020}
}
</code></pre></div>
<p dir="auto">A preprint can be downloaded <a href="http://www.optimization-online.org/DB_FILE/2020/11/8099.pdf" rel="nofollow">here</a>.</p>
<h2 dir="auto"><a id="user-content-reporting-issues" class="anchor" aria-hidden="true" href="#reporting-issues"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reporting issues</h2>
<p dir="auto">Please report any issues via the <a href="https://github.com/Shuvomoy/NExOS.jl/issues">Github issue tracker</a>. All types of issues are welcome including bug reports, feature requests, implementation for a specific research problem and so on.</p>
<h2 dir="auto"><a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contact</h2>
<p dir="auto">Send an email <g-emoji class="g-emoji" alias="email" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e7.png">📧</g-emoji> to <a href="mailto:sdgupta@mit.edu">sdgupta@mit.edu</a> <g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png">🚀</g-emoji>!</p>
</article></div>