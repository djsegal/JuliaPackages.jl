<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="OceanBioME_headerbar.jpg?raw=true"><img src="OceanBioME_headerbar.jpg?raw=true" alt="" style="max-width: 100%;"></a>
<a href="https://oceanbiome.github.io/OceanBioME.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/35462a78085eaddb262a8a276a988cd5c8ec5bf48fbb61bf9b0c5b9deb8b681b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63756d656e746174696f6e2d737461626c6525323072656c656173652d626c75653f7374796c653d666c61742d737175617265" alt="Documentaiton" data-canonical-src="https://img.shields.io/badge/documentation-stable%20release-blue?style=flat-square" style="max-width: 100%;"></a>
<a href="https://mit-license.org" rel="nofollow"><img src="https://camo.githubusercontent.com/ad3ef6f300e4672d89c879c54ee490a4bae95c62b0930b74eecdf702205af3c4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c61742d737175617265" alt="MIT license" data-canonical-src="https://img.shields.io/badge/License-MIT-blue.svg?style=flat-square" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width: 100%;"></a>
<a href="https://github.com/OceanBioME/OceanBioME.jl/discussions"><img src="https://camo.githubusercontent.com/5274a173b70999fcba9d8ec89694746f45b9b9bc30f88c730e6e34f470efd135/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f41736b25323075732d616e797468696e672d3161626339632e7376673f7374796c653d666c61742d737175617265" alt="Ask us anything: discussion" data-canonical-src="https://img.shields.io/badge/Ask%20us-anything-1abc9c.svg?style=flat-square" style="max-width: 100%;"></a>
<a href="https://github.com/OceanBioME/OceanBioME.jl/releases"><img src="https://camo.githubusercontent.com/8460e906c9f9a77c51562532ef872c141921d97b3cb75c4f421d3a89e1590e4b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f7461672f4f6365616e42696f4d452f4f6365616e42696f4d452e6a6c3f696e636c7564655f70726572656c6561736573266c6162656c3d6c617465737425323076657273696f6e266c6f676f3d67697468756226736f72743d73656d766572267374796c653d666c61742d737175617265" alt="GitHub tag (latest SemVer pre-release)" data-canonical-src="https://img.shields.io/github/v/tag/OceanBioME/OceanBioME.jl?include_prereleases&amp;label=latest%20version&amp;logo=github&amp;sort=semver&amp;style=flat-square" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/OceanBioME/OceanBioME.jl/actions/workflows/tests.yml"><img src="https://github.com/OceanBioME/OceanBioME.jl/actions/workflows/tests.yml/badge.svg" alt="Testing" style="max-width: 100%;"></a>
<a href="https://github.com/OceanBioME/OceanBioME.jl/actions/workflows/documentation.yml"><img src="https://github.com/OceanBioME/OceanBioME.jl/actions/workflows/documentation.yml/badge.svg" alt="Documentation" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-ocean-biogeochemical-modelling-environment" class="anchor" aria-hidden="true" href="#ocean-biogeochemical-modelling-environment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><em>Ocean</em> <em>Bio</em>geochemical <em>M</em>odelling <em>E</em>nvironment</h1>
<h2 dir="auto"><a id="user-content-description" class="anchor" aria-hidden="true" href="#description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Description</h2>
<p dir="auto">OceanBioME was developed with generous support from the Cambridge Centre for Climate Repair <a href="https://www.climaterepair.cam.ac.uk" rel="nofollow">CCRC</a> and the Gordon and Betty Moore Foundation as a tool to study the effectiveness and impacts of ocean carbon dioxide removal (CDR) strategies.</p>
<p dir="auto">OceanBioME is a flexible modelling environment written in Julia for modelling the coupled interactions between ocean biogeochemistry, carbonate chemistry, and physics. OceanBioME can be run as a stand-alone box model, or coupled with <a href="https://github.com/cliMA/oceananigans.jl/">Oceananigans.jl</a> to run as a 1D column model or with 2 and 3D physics.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation:</h2>
<p dir="auto">First, <a href="https://julialang.org/downloads/" rel="nofollow">download and install Julia</a></p>
<p dir="auto">From the Julia prompt (REPL), type:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg
julia&gt; Pkg.add(&quot;OceanBioME&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg
julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>OceanBioME<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-running-your-first-model" class="anchor" aria-hidden="true" href="#running-your-first-model"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Running your first model</h2>
<p dir="auto">As a simple example lets run a Nutrient-Phytoplankton-Zooplankton-Detritus (NPZD) model in a two-dimensional simulation of a buoyancy front:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using OceanBioME, Oceananigans
using Oceananigans.Units

grid = RectilinearGrid(CPU(), size=(256, 32), extent=(500, 100), topology=(Bounded, Flat, Bounded))

biogeochemistry = NutrientPhytoplanktonZooplanktonDetritus(; grid, open_bottom=true)

model = NonhydrostaticModel(; grid, biogeochemistry, buoyancy=BuoyancyTracer(), tracers=:b, advection=WENO(; grid), closure = AnisotropicMinimumDissipation())

bᵢ(x, y, z) = ifelse(x &lt; 250, 1e-4, 1e-3)

set!(model, b = bᵢ, N = 5.0, P = 0.1, Z = 0.1, T = 18.0)

simulation = Simulation(model; Δt=1.0, stop_time=3hours)

wizard = TimeStepWizard(cfl=0.3, max_change=1.5)

simulation.callbacks[:wizard] = Callback(wizard, IterationInterval(1))

simulation.output_writers[:tracers] = JLD2OutputWriter(model, model.tracers, filename = &quot;buoyancy_front.jld2&quot;, schedule = TimeInterval(1minute), overwrite_existing=true)

run!(simulation)"><pre><span class="pl-k">using</span> OceanBioME, Oceananigans
<span class="pl-k">using</span> Oceananigans<span class="pl-k">.</span>Units

grid <span class="pl-k">=</span> <span class="pl-c1">RectilinearGrid</span>(<span class="pl-c1">CPU</span>(), size<span class="pl-k">=</span>(<span class="pl-c1">256</span>, <span class="pl-c1">32</span>), extent<span class="pl-k">=</span>(<span class="pl-c1">500</span>, <span class="pl-c1">100</span>), topology<span class="pl-k">=</span>(Bounded, Flat, Bounded))

biogeochemistry <span class="pl-k">=</span> <span class="pl-c1">NutrientPhytoplanktonZooplanktonDetritus</span>(; grid, open_bottom<span class="pl-k">=</span><span class="pl-c1">true</span>)

model <span class="pl-k">=</span> <span class="pl-c1">NonhydrostaticModel</span>(; grid, biogeochemistry, buoyancy<span class="pl-k">=</span><span class="pl-c1">BuoyancyTracer</span>(), tracers<span class="pl-k">=</span><span class="pl-c1">:b</span>, advection<span class="pl-k">=</span><span class="pl-c1">WENO</span>(; grid), closure <span class="pl-k">=</span> <span class="pl-c1">AnisotropicMinimumDissipation</span>())

<span class="pl-en">bᵢ</span>(x, y, z) <span class="pl-k">=</span> <span class="pl-c1">ifelse</span>(x <span class="pl-k">&lt;</span> <span class="pl-c1">250</span>, <span class="pl-c1">1e-4</span>, <span class="pl-c1">1e-3</span>)

<span class="pl-c1">set!</span>(model, b <span class="pl-k">=</span> bᵢ, N <span class="pl-k">=</span> <span class="pl-c1">5.0</span>, P <span class="pl-k">=</span> <span class="pl-c1">0.1</span>, Z <span class="pl-k">=</span> <span class="pl-c1">0.1</span>, T <span class="pl-k">=</span> <span class="pl-c1">18.0</span>)

simulation <span class="pl-k">=</span> <span class="pl-c1">Simulation</span>(model; Δt<span class="pl-k">=</span><span class="pl-c1">1.0</span>, stop_time<span class="pl-k">=</span><span class="pl-c1">3</span>hours)

wizard <span class="pl-k">=</span> <span class="pl-c1">TimeStepWizard</span>(cfl<span class="pl-k">=</span><span class="pl-c1">0.3</span>, max_change<span class="pl-k">=</span><span class="pl-c1">1.5</span>)

simulation<span class="pl-k">.</span>callbacks[<span class="pl-c1">:wizard</span>] <span class="pl-k">=</span> <span class="pl-c1">Callback</span>(wizard, <span class="pl-c1">IterationInterval</span>(<span class="pl-c1">1</span>))

simulation<span class="pl-k">.</span>output_writers[<span class="pl-c1">:tracers</span>] <span class="pl-k">=</span> <span class="pl-c1">JLD2OutputWriter</span>(model, model<span class="pl-k">.</span>tracers, filename <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>buoyancy_front.jld2<span class="pl-pds">"</span></span>, schedule <span class="pl-k">=</span> <span class="pl-c1">TimeInterval</span>(<span class="pl-c1">1</span>minute), overwrite_existing<span class="pl-k">=</span><span class="pl-c1">true</span>)

<span class="pl-c1">run!</span>(simulation)</pre></div>
<details>
<summary>We can then visualise this:</summary>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using CairoMakie
b = FieldTimeSeries(&quot;buoyancy_front.jld2&quot;, &quot;b&quot;)
P = FieldTimeSeries(&quot;buoyancy_front.jld2&quot;, &quot;P&quot;)

n = Observable(1)

b_lims = (minimum(b), maximum(b))
P_lims = (minimum(P), maximum(P))

b_plt = @lift b[1:grid.Nx, 1, 1:grid.Nz, $n]
P_plt = @lift P[1:grid.Nx, 1, 1:grid.Nz, $n]

fig = Figure(resolution = (1600, 160 * 4))

supertitle = Label(fig[0, :], &quot;t = 0.0&quot;)

ax1 = Axis(fig[1, 1], xlabel = &quot;x (m)&quot;, ylabel = &quot;z (m)&quot;, title = &quot;Buouyancy pertubation (m / s)&quot;, width = 1400)
ax2 = Axis(fig[2, 1], xlabel = &quot;x (m)&quot;, ylabel = &quot;z (m)&quot;, title = &quot;Phytoplankton concentration (mmol N / m³)&quot;, width = 1400)

hm1 = heatmap!(ax1, xnodes(grid, Center(), Center(), Center())[1:grid.Nx], znodes(grid, Center(), Center(), Center())[1:grid.Nz], b_plt, colorrange = b_lims, colormap = :batlow, interpolate=true)
hm2 = heatmap!(ax2, xnodes(grid, Center(), Center(), Center())[1:grid.Nx], znodes(grid, Center(), Center(), Center())[1:grid.Nz], P_plt, colorrange = P_lims, colormap = Reverse(:bamako), interpolate=true)

Colorbar(fig[1, 2], hm1)
Colorbar(fig[2, 2], hm2)

record(fig, &quot;buoyancy_front.gif&quot;, 1:length(b.times)) do i
    n[] = i
    msg = string(&quot;Plotting frame &quot;, i, &quot; of &quot;, length(b.times))
    print(msg * &quot; \r&quot;)
    supertitle.text = &quot;t=$(prettytime(b.times[i]))&quot;
end"><pre><span class="pl-k">using</span> CairoMakie
b <span class="pl-k">=</span> <span class="pl-c1">FieldTimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>buoyancy_front.jld2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>)
P <span class="pl-k">=</span> <span class="pl-c1">FieldTimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>buoyancy_front.jld2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>P<span class="pl-pds">"</span></span>)

n <span class="pl-k">=</span> <span class="pl-c1">Observable</span>(<span class="pl-c1">1</span>)

b_lims <span class="pl-k">=</span> (<span class="pl-c1">minimum</span>(b), <span class="pl-c1">maximum</span>(b))
P_lims <span class="pl-k">=</span> (<span class="pl-c1">minimum</span>(P), <span class="pl-c1">maximum</span>(P))

b_plt <span class="pl-k">=</span> <span class="pl-c1">@lift</span> b[<span class="pl-c1">1</span><span class="pl-k">:</span>grid<span class="pl-k">.</span>Nx, <span class="pl-c1">1</span>, <span class="pl-c1">1</span><span class="pl-k">:</span>grid<span class="pl-k">.</span>Nz, <span class="pl-k">$</span>n]
P_plt <span class="pl-k">=</span> <span class="pl-c1">@lift</span> P[<span class="pl-c1">1</span><span class="pl-k">:</span>grid<span class="pl-k">.</span>Nx, <span class="pl-c1">1</span>, <span class="pl-c1">1</span><span class="pl-k">:</span>grid<span class="pl-k">.</span>Nz, <span class="pl-k">$</span>n]

fig <span class="pl-k">=</span> <span class="pl-c1">Figure</span>(resolution <span class="pl-k">=</span> (<span class="pl-c1">1600</span>, <span class="pl-c1">160</span> <span class="pl-k">*</span> <span class="pl-c1">4</span>))

supertitle <span class="pl-k">=</span> <span class="pl-c1">Label</span>(fig[<span class="pl-c1">0</span>, :], <span class="pl-s"><span class="pl-pds">"</span>t = 0.0<span class="pl-pds">"</span></span>)

ax1 <span class="pl-k">=</span> <span class="pl-c1">Axis</span>(fig[<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], xlabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>x (m)<span class="pl-pds">"</span></span>, ylabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>z (m)<span class="pl-pds">"</span></span>, title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Buouyancy pertubation (m / s)<span class="pl-pds">"</span></span>, width <span class="pl-k">=</span> <span class="pl-c1">1400</span>)
ax2 <span class="pl-k">=</span> <span class="pl-c1">Axis</span>(fig[<span class="pl-c1">2</span>, <span class="pl-c1">1</span>], xlabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>x (m)<span class="pl-pds">"</span></span>, ylabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>z (m)<span class="pl-pds">"</span></span>, title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Phytoplankton concentration (mmol N / m³)<span class="pl-pds">"</span></span>, width <span class="pl-k">=</span> <span class="pl-c1">1400</span>)

hm1 <span class="pl-k">=</span> <span class="pl-c1">heatmap!</span>(ax1, <span class="pl-c1">xnodes</span>(grid, <span class="pl-c1">Center</span>(), <span class="pl-c1">Center</span>(), <span class="pl-c1">Center</span>())[<span class="pl-c1">1</span><span class="pl-k">:</span>grid<span class="pl-k">.</span>Nx], <span class="pl-c1">znodes</span>(grid, <span class="pl-c1">Center</span>(), <span class="pl-c1">Center</span>(), <span class="pl-c1">Center</span>())[<span class="pl-c1">1</span><span class="pl-k">:</span>grid<span class="pl-k">.</span>Nz], b_plt, colorrange <span class="pl-k">=</span> b_lims, colormap <span class="pl-k">=</span> <span class="pl-c1">:batlow</span>, interpolate<span class="pl-k">=</span><span class="pl-c1">true</span>)
hm2 <span class="pl-k">=</span> <span class="pl-c1">heatmap!</span>(ax2, <span class="pl-c1">xnodes</span>(grid, <span class="pl-c1">Center</span>(), <span class="pl-c1">Center</span>(), <span class="pl-c1">Center</span>())[<span class="pl-c1">1</span><span class="pl-k">:</span>grid<span class="pl-k">.</span>Nx], <span class="pl-c1">znodes</span>(grid, <span class="pl-c1">Center</span>(), <span class="pl-c1">Center</span>(), <span class="pl-c1">Center</span>())[<span class="pl-c1">1</span><span class="pl-k">:</span>grid<span class="pl-k">.</span>Nz], P_plt, colorrange <span class="pl-k">=</span> P_lims, colormap <span class="pl-k">=</span> <span class="pl-c1">Reverse</span>(<span class="pl-c1">:bamako</span>), interpolate<span class="pl-k">=</span><span class="pl-c1">true</span>)

<span class="pl-c1">Colorbar</span>(fig[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>], hm1)
<span class="pl-c1">Colorbar</span>(fig[<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], hm2)

<span class="pl-c1">record</span>(fig, <span class="pl-s"><span class="pl-pds">"</span>buoyancy_front.gif<span class="pl-pds">"</span></span>, <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">length</span>(b<span class="pl-k">.</span>times)) <span class="pl-k">do</span> i
    n[] <span class="pl-k">=</span> i
    msg <span class="pl-k">=</span> <span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds">"</span>Plotting frame <span class="pl-pds">"</span></span>, i, <span class="pl-s"><span class="pl-pds">"</span> of <span class="pl-pds">"</span></span>, <span class="pl-c1">length</span>(b<span class="pl-k">.</span>times))
    <span class="pl-c1">print</span>(msg <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span> <span class="pl-cce">\r</span><span class="pl-pds">"</span></span>)
    supertitle<span class="pl-k">.</span>text <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>t=<span class="pl-v">$(<span class="pl-c1">prettytime</span>(b<span class="pl-k">.</span>times[i]))</span><span class="pl-pds">"</span></span>
<span class="pl-k">end</span></pre></div>
</details>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/26657828/226373754-42c5c9ed-d7fc-450a-8346-a497a40fe0e2.gif"><img src="https://user-images.githubusercontent.com/26657828/226373754-42c5c9ed-d7fc-450a-8346-a497a40fe0e2.gif" alt="buoyancy_front" data-animated-image="" style="max-width: 100%;"></a></p>
<p dir="auto">In this example <code>OceanBioME</code> is providing the <code>biogeochemistry</code> and the remainder is taken care of by <code>Oceananigans</code>. For comprehensive documentation of the physics modelling see <a href="https://clima.github.io/OceananigansDocumentation/stable/" rel="nofollow">Oceananigans' Documentation</a>, and for biogeochemistry and other features we provide read below.</p>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<p dir="auto">See the <a href="https://oceanbiome.github.io/OceanBioME.jl" rel="nofollow">documentation</a> for full description and examples.</p>
</article></div>