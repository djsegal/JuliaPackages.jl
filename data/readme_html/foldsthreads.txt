<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-foldsthreads-extra-threaded-executors-for-juliafoldsjl" class="anchor" aria-hidden="true" href="#foldsthreads-extra-threaded-executors-for-juliafoldsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FoldsThreads: Extra threaded executors for JuliaFolds/*.jl</h1>
<p><a href="https://juliafolds.github.io/FoldsThreads.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/JuliaFolds/FoldsThreads.jl/actions?query=workflow%3ARun+tests"><img src="https://github.com/JuliaFolds/FoldsThreads.jl/workflows/Run%20tests/badge.svg" alt="GitHub Actions" style="max-width:100%;"></a></p>
<p>FoldsThreads.jl provides extra thread-based executors usable with various
JuliaFolds/*.jl packages such as
<a href="https://github.com/JuliaFolds/Transducers.jl">Transducers.jl</a> and
<a href="https://github.com/JuliaFolds/FLoops.jl">FLoops.jl</a>.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="                                  Executors
                           ,----------------------.
     Algorithms            |    FoldsThreads.jl    |         Data structures
,------------------.       |-----------------------|       ,-----------------.
|  FLoops,         |       |  ThreadedEx*          |       |  Array,         |
|  Folds,          |       |  WorkStealingEx,      |       |  Tables,        |
|  Transducers,    |  ---  |  DepthFirstEx,        |  ---  |  FGenerators,   |
|  OnlineStats,    |       |  TaskPoolEx,          |       |  Dict,          |
|  DataTools, ...  '       |  NondeterministicEx,  |       |  Set, ...       |
`------------------'       |  ...                  |       `-----------------'
                           `-----------------------'
"><pre><code>                                  Executors
                           ,----------------------.
     Algorithms            |    FoldsThreads.jl    |         Data structures
,------------------.       |-----------------------|       ,-----------------.
|  FLoops,         |       |  ThreadedEx*          |       |  Array,         |
|  Folds,          |       |  WorkStealingEx,      |       |  Tables,        |
|  Transducers,    |  ---  |  DepthFirstEx,        |  ---  |  FGenerators,   |
|  OnlineStats,    |       |  TaskPoolEx,          |       |  Dict,          |
|  DataTools, ...  '       |  NondeterministicEx,  |       |  Set, ...       |
`------------------'       |  ...                  |       `-----------------'
                           `-----------------------'
</code></pre></div>
<p>(* <code>ThreadedEx</code> is the default executor provided by Transducers.jl)</p>
<ul>
<li><code>WorkStealingEx</code> implements work stealing (continuation stealing).
Useful for load-balancing.</li>
<li><code>DepthFirstEx</code> implements depth-first scheduling. Useful for <code>findfirst</code>-type
computations.</li>
<li><code>TaskPoolEx</code>: Task pool executor. Useful for fine execution control
(e.g., back pressure and "background" threads).</li>
<li><code>NondeterministicEx</code>: An executor for parallelizing computations with
non-parallelizable iterators.</li>
</ul>
</article></div>