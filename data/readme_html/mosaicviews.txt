<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-mosaicviews" class="anchor" aria-hidden="true" href="#mosaicviews"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MosaicViews</h1>
<p><a href="https://travis-ci.org/JuliaArrays/MosaicViews.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/dfe78dbe6eaf53366043261369386478f7fd0ccd/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614172726179732f4d6f7361696356696577732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Travis-CI" data-canonical-src="https://travis-ci.org/JuliaArrays/MosaicViews.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaArrays/MosaicViews.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ef1ba47de02d600b54c6fa21bfea300b33301815/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614172726179732f4d6f7361696356696577732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="CodeCov" data-canonical-src="http://codecov.io/github/JuliaArrays/MosaicViews.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/9e1b32342748401a42a183cca273ccd32c0813cb/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f4d2f4d6f7361696356696577732e737667" alt="PkgEval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/M/MosaicViews.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-motivations" class="anchor" aria-hidden="true" href="#motivations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Motivations</h2>
<p>When visualizing images, it is not uncommon to provide a 2D view of different image sources.
For example, comparing multiple images of different sizes, getting a preview of machine
learning dataset. This package aims to provide an easy-to-use tool for such tasks.</p>
<h3><a id="user-content-compare-two-images" class="anchor" aria-hidden="true" href="#compare-two-images"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Compare two images</h3>
<p>When comparing and showing multiple images, <code>cat</code>/<code>hcat</code>/<code>vcat</code> can be helpful if images
sizes and colorants are the same. But if not, you'll need <code>mosaicview</code> for this purpose.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MosaicViews, ImageShow, TestImages

julia<span class="pl-k">&gt;</span> lena <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>lena<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> 256*256 RGB image</span>

julia<span class="pl-k">&gt;</span> cameraman <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>cameraman<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> 512*512 Gray image</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(lena, cameraman; nrow<span class="pl-k">=</span><span class="pl-c1">1</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8684355/76200526-c0be4700-622c-11ea-9d8f-03e22bc39be8.png"><img src="https://user-images.githubusercontent.com/8684355/76200526-c0be4700-622c-11ea-9d8f-03e22bc39be8.png" alt="compare-images" style="max-width:100%;"></a></p>
<h3><a id="user-content-get-a-preview-of-dataset" class="anchor" aria-hidden="true" href="#get-a-preview-of-dataset"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Get a preview of dataset</h3>
<p>Many datasets in machine learning field are stored as 3D/4D array, <code>mosaicview</code> provides
some convenient keyword arguments to get a nice looking preview of your dataset.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MosaicViews, ImageShow, MLDatasets

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> MNIST<span class="pl-k">.</span><span class="pl-c1">convert2image</span>(MNIST<span class="pl-k">.</span><span class="pl-c1">traintensor</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">9</span>))
<span class="pl-c1">28</span><span class="pl-k">×</span><span class="pl-c1">28</span><span class="pl-k">×</span><span class="pl-c1">9</span> Array{Gray{Float64},<span class="pl-c1">3</span>}<span class="pl-k">:</span>
[<span class="pl-k">...</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A, fillvalue<span class="pl-k">=</span><span class="pl-c1">.5</span>, nrow<span class="pl-k">=</span><span class="pl-c1">2</span>, npad<span class="pl-k">=</span><span class="pl-c1">1</span>, rowmajor<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">57</span><span class="pl-k">×</span><span class="pl-c1">144</span> MosaicViews<span class="pl-k">.</span>MosaicView{Gray{Float64},<span class="pl-c1">4</span>,<span class="pl-k">...</span>}<span class="pl-k">:</span>
[<span class="pl-k">...</span>]</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/10854026/34172451-5f80173e-e4f2-11e7-9e86-8b3882d53aa7.png"><img src="https://user-images.githubusercontent.com/10854026/34172451-5f80173e-e4f2-11e7-9e86-8b3882d53aa7.png" alt="dataset-preview" style="max-width:100%;"></a></p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>MosaicViews.jl provides an array decorator type, <code>MosaicView</code>,
that creates a matrix-shaped "view" of any three or four
dimensional array <code>A</code>. The resulting <code>MosaicView</code> will display
the data in <code>A</code> such that it emulates using <code>vcat</code> for all
elements in the third dimension of <code>A</code>, and <code>hcat</code> for all
elements in the fourth dimension of <code>A</code>.</p>
<p>If performance isn't a priority, <code>mosaicview</code> is a convenience
helper function to create a <code>MosaicView</code>.</p>
<h3><a id="user-content-the-mosaicview-helper" class="anchor" aria-hidden="true" href="#the-mosaicview-helper"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>the <code>mosaicview</code> helper</h3>
<p><code>mosaicview</code> is sufficient for most visualization use cases. It
accepts multiple arrays as input:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> A1 <span class="pl-k">=</span> <span class="pl-c1">fill</span>(<span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">1</span>)
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">1</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> A2 <span class="pl-k">=</span> <span class="pl-c1">fill</span>(<span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-c1">3</span>)
<span class="pl-c1">1</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>

<span class="pl-c"><span class="pl-c">#</span> A1 and A2 will be padded to the common size and shifted</span>
<span class="pl-c"><span class="pl-c">#</span> to the center, this is a common operation to visualize</span>
<span class="pl-c"><span class="pl-c">#</span> multiple images</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A1, A2)
<span class="pl-c1">6</span><span class="pl-k">×</span><span class="pl-c1">3</span> MosaicView{Int64,<span class="pl-c1">4</span>, <span class="pl-k">...</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span></pre></div>
<p>Besides this, <code>mosaicview</code> also allows for a couple of convenience
keywords. The following example provides a preview, for more detailed
explanation, please refer to the documentation <code>?mosaicview</code>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> disable center shift</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A1, A2; center<span class="pl-k">=</span><span class="pl-c1">false</span>)
<span class="pl-c1">6</span><span class="pl-k">×</span><span class="pl-c1">3</span> MosaicView{Int64,<span class="pl-c1">4</span>, <span class="pl-k">...</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> [k <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>, j <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, k <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>]
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">5</span> Array{Int64,<span class="pl-c1">3</span>}<span class="pl-k">:</span>
[:, :, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>

[:, :, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>

[:, :, <span class="pl-c1">3</span>] <span class="pl-k">=</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>

[:, :, <span class="pl-c1">4</span>] <span class="pl-k">=</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>

[:, :, <span class="pl-c1">5</span>] <span class="pl-k">=</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>

<span class="pl-c"><span class="pl-c">#</span> number of tiles in column direction</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A, ncol<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">6</span><span class="pl-k">×</span><span class="pl-c1">6</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">4</span>,<span class="pl-k">...</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

<span class="pl-c"><span class="pl-c">#</span> number of tiles in row direction</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A, nrow<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">9</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">4</span>,<span class="pl-k">...</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

<span class="pl-c"><span class="pl-c">#</span> take a row-major order, i.e., tile-wise permute</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A, nrow<span class="pl-k">=</span><span class="pl-c1">2</span>, rowmajor<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">9</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">4</span>,<span class="pl-k">...</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

<span class="pl-c"><span class="pl-c">#</span> add empty padding space between adjacent mosaic tiles</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A, nrow<span class="pl-k">=</span><span class="pl-c1">2</span>, npad<span class="pl-k">=</span><span class="pl-c1">1</span>, rowmajor<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">11</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">4</span>,<span class="pl-k">...</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">0</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">0</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">0</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">0</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

<span class="pl-c"><span class="pl-c">#</span> fill spaces with -1</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A, fillvalue<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>, nrow<span class="pl-k">=</span><span class="pl-c1">2</span>, npad<span class="pl-k">=</span><span class="pl-c1">1</span>, rowmajor<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">11</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">4</span>,<span class="pl-k">...</span>}<span class="pl-k">:</span>
  <span class="pl-c1">1</span>   <span class="pl-c1">1</span>   <span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">2</span>   <span class="pl-c1">2</span>   <span class="pl-c1">2</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">3</span>   <span class="pl-c1">3</span>   <span class="pl-c1">3</span>
  <span class="pl-c1">1</span>   <span class="pl-c1">1</span>   <span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">2</span>   <span class="pl-c1">2</span>   <span class="pl-c1">2</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">3</span>   <span class="pl-c1">3</span>   <span class="pl-c1">3</span>
 <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>
  <span class="pl-c1">4</span>   <span class="pl-c1">4</span>   <span class="pl-c1">4</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">5</span>   <span class="pl-c1">5</span>   <span class="pl-c1">5</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>
  <span class="pl-c1">4</span>   <span class="pl-c1">4</span>   <span class="pl-c1">4</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">5</span>   <span class="pl-c1">5</span>   <span class="pl-c1">5</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span></pre></div>
<h3><a id="user-content-the-mosaicview-type" class="anchor" aria-hidden="true" href="#the-mosaicview-type"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>The <code>MosaicView</code> Type</h3>
<p>If performance is important it is recommended to use <code>MosaicView</code>
directly, as <code>mosaicview</code> is not type stable.</p>
<p>Note that the constructor doesn't accept other parameters than
the array <code>A</code> itself, it doesn't accept multiple inputs neither.
Consequently the layout of the mosaic is encoded in the third
(and optionally fourth) dimension. Creating a <code>MosaicView</code> this
way is type stable, non-copying, and should in general give a
decent performance when accessed with <code>getindex</code>.</p>
<p>Another way to think about this is that <code>MosaicView</code> creates a
mosaic of all the individual matrices enumerated in the third
(and optionally fourth) dimension of the given 3D or 4D array
<code>A</code>. This can be especially useful for creating a single
composite image from a set of equally sized images.</p>
<p>Let us look at a couple examples to see the type in action. If
<code>size(A)</code> is <code>(2,3,4)</code>, then the resulting <code>MosaicView</code> will have
the size <code>(2*4,3)</code> which is <code>(8,3)</code>.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> [k <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>, j <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, k <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">4</span>]
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">4</span> Array{Int64,<span class="pl-c1">3</span>}<span class="pl-k">:</span>
[:, :, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>

[:, :, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>

[:, :, <span class="pl-c1">3</span>] <span class="pl-k">=</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>

[:, :, <span class="pl-c1">4</span>] <span class="pl-k">=</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">MosaicView</span>(A)
<span class="pl-c1">8</span><span class="pl-k">×</span><span class="pl-c1">3</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">3</span>,Array{Int64,<span class="pl-c1">3</span>}}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span></pre></div>
<p>Alternatively, <code>A</code> is also allowed to have four dimensions. More
concretely, if <code>size(A)</code> is <code>(2,3,4,5)</code>, then the resulting size
will be <code>(2*4,3*5)</code> which is <code>(8,15)</code>. For the sake of brevity
here is a slightly smaller example:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> [(k<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>l<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>, j <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, k <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>, l <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>]
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">2</span> Array{Int64,<span class="pl-c1">4</span>}<span class="pl-k">:</span>
[:, :, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>

[:, :, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>

[:, :, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>

[:, :, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">MosaicView</span>(A)
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">6</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">4</span>,Array{Int64,<span class="pl-c1">4</span>}}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span></pre></div>
</article></div>