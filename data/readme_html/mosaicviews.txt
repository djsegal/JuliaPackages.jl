<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-mosaicviews" class="anchor" aria-hidden="true" href="#mosaicviews"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MosaicViews</h1>
<p><a href="https://travis-ci.org/JuliaArrays/MosaicViews.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2bbcdd67ccbf25aa302587fefc256adb8e52e40d2da4875e82c1fa58e9e44a3b/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614172726179732f4d6f7361696356696577732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Travis-CI" data-canonical-src="https://travis-ci.org/JuliaArrays/MosaicViews.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaArrays/MosaicViews.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/7157798f64f82682dedb7e276d9ae3c6f889634209359bf652b9eaa569b64306/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614172726179732f4d6f7361696356696577732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="CodeCov" data-canonical-src="http://codecov.io/github/JuliaArrays/MosaicViews.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/d135c926c2a228179750f5a3a35d5e4e4db224dcce7c0c35a1a71aa91eddf548/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f4d2f4d6f7361696356696577732e737667" alt="PkgEval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/M/MosaicViews.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-motivations" class="anchor" aria-hidden="true" href="#motivations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Motivations</h2>
<p>When visualizing images, it is not uncommon to provide a 2D view of different image sources.
For example, comparing multiple images of different sizes, getting a preview of machine
learning dataset. This package aims to provide easy-to-use tools for such tasks.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<h3><a id="user-content-compare-two-or-more-images" class="anchor" aria-hidden="true" href="#compare-two-or-more-images"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Compare two or more images</h3>
<p>When comparing and showing multiple images, <code>cat</code>/<code>hcat</code>/<code>vcat/hvcat</code> can be helpful if the image
sizes and element types are the same. But if not, you'll need <code>mosaic</code> for this purpose.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# ImageCore reexports MosaicViews with some glue code for images
julia&gt; using ImageCore, ImageShow, TestImages, ColorVectorSpace

julia&gt; toucan = testimage(&quot;toucan&quot;) # 150×162 RGBA image

julia&gt; moon = testimage(&quot;moon&quot;) # 256×256 Gray image

julia&gt; mosaic(toucan, moon; nrow=1)
"><pre><span class="pl-c"><span class="pl-c">#</span> ImageCore reexports MosaicViews with some glue code for images</span>
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ImageCore, ImageShow, TestImages, ColorVectorSpace

julia<span class="pl-k">&gt;</span> toucan <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>toucan<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> 150×162 RGBA image</span>

julia<span class="pl-k">&gt;</span> moon <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>moon<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> 256×256 Gray image</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaic</span>(toucan, moon; nrow<span class="pl-k">=</span><span class="pl-c1">1</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1525481/97542758-4b5ade80-1995-11eb-87cc-5fd2b0ba23fc.png"><img src="https://user-images.githubusercontent.com/1525481/97542758-4b5ade80-1995-11eb-87cc-5fd2b0ba23fc.png" alt="compare-images" style="max-width:100%;"></a></p>
<p>Like <code>cat</code>, <code>mosaic</code> makes a copy of the inputs.</p>
<h3><a id="user-content-get-a-preview-of-dataset" class="anchor" aria-hidden="true" href="#get-a-preview-of-dataset"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Get a preview of dataset</h3>
<p>Many datasets in machine learning field are stored as 3D/4D array, where different images are different slices
along the 3rd and 4th dimensions.
<code>mosaicview</code> provides a convenient way to visualize a single higher-dimensional array as a 2D grid-of-images.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using MosaicViews, ImageShow, MLDatasets

julia&gt; A = MNIST.convert2image(MNIST.traintensor(1:9))
28×28×9 Array{Gray{Float64},3}:
[...]

julia&gt; mosaicview(A, fillvalue=.5, nrow=2, npad=1, rowmajor=true)
57×144 MosaicViews.MosaicView{Gray{Float64},4,...}:
[...]
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MosaicViews, ImageShow, MLDatasets

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> MNIST<span class="pl-k">.</span><span class="pl-c1">convert2image</span>(MNIST<span class="pl-k">.</span><span class="pl-c1">traintensor</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">9</span>))
<span class="pl-c1">28</span><span class="pl-k">×</span><span class="pl-c1">28</span><span class="pl-k">×</span><span class="pl-c1">9</span> Array{Gray{Float64},<span class="pl-c1">3</span>}<span class="pl-k">:</span>
[<span class="pl-k">...</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A, fillvalue<span class="pl-k">=</span><span class="pl-c1">.5</span>, nrow<span class="pl-k">=</span><span class="pl-c1">2</span>, npad<span class="pl-k">=</span><span class="pl-c1">1</span>, rowmajor<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">57</span><span class="pl-k">×</span><span class="pl-c1">144</span> MosaicViews<span class="pl-k">.</span>MosaicView{Gray{Float64},<span class="pl-c1">4</span>,<span class="pl-k">...</span>}<span class="pl-k">:</span>
[<span class="pl-k">...</span>]</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/10854026/34172451-5f80173e-e4f2-11e7-9e86-8b3882d53aa7.png"><img src="https://user-images.githubusercontent.com/10854026/34172451-5f80173e-e4f2-11e7-9e86-8b3882d53aa7.png" alt="dataset-preview" style="max-width:100%;"></a></p>
<p>Unlike <code>mosaic</code>, <code>mosaicview</code> does not copy the input--it provides an alternative interpretation of the input data.
Consequently, if you modify pixels of the output of <code>mosaicview</code>, those modifications also apply to the parent array <code>A</code>.</p>
<p><code>mosaicview</code> is essentially a flexible way of constructing a <code>MosaicView</code>; it provides
additional customization options via keyword arguments.
If you do not need the flexibility of <code>mosaicview</code>, you can directly call the <code>MosaicView</code> constructor.
The remainder of this page illustrates the various options for <code>mosaic</code> and <code>mosaicview</code> and then covers the low-level <code>MosaicView</code> constructor.</p>
<h3><a id="user-content-more-on-the-keyword-options" class="anchor" aria-hidden="true" href="#more-on-the-keyword-options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>More on the keyword options</h3>
<p><code>mosaic</code> and <code>mosaicview</code> use almost all the same keyword arguments (all except <code>center</code>, which is not relevant for <code>mosaicview</code>).
Let's illustrate some of the effects you can achieve.
First, in the simplest case:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; A1 = fill(1, 3, 1)
3×1 Array{Int64,2}:
 1
 1
 1

julia&gt; A2 = fill(2, 1, 3)
1×3 Array{Int64,2}:
 2  2  2

# A1 and A2 will be padded to the common size and shifted
# to the center, this is a common operation to visualize
# multiple images
julia&gt; mosaic(A1, A2)
6×3 MosaicView{Int64,4, ...}:
 0  1  0
 0  1  0
 0  1  0
 0  0  0
 2  2  2
 0  0  0
"><pre>julia<span class="pl-k">&gt;</span> A1 <span class="pl-k">=</span> <span class="pl-c1">fill</span>(<span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">1</span>)
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">1</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> A2 <span class="pl-k">=</span> <span class="pl-c1">fill</span>(<span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-c1">3</span>)
<span class="pl-c1">1</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>

<span class="pl-c"><span class="pl-c">#</span> A1 and A2 will be padded to the common size and shifted</span>
<span class="pl-c"><span class="pl-c">#</span> to the center, this is a common operation to visualize</span>
<span class="pl-c"><span class="pl-c">#</span> multiple images</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaic</span>(A1, A2)
<span class="pl-c1">6</span><span class="pl-k">×</span><span class="pl-c1">3</span> MosaicView{Int64,<span class="pl-c1">4</span>, <span class="pl-k">...</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span></pre></div>
<p>If desired, you can disable the automatic centering:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# disable center shift
julia&gt; mosaic(A1, A2; center=false)
6×3 MosaicView{Int64,4, ...}:
 1  0  0
 1  0  0
 1  0  0
 2  2  2
 0  0  0
 0  0  0
"><pre><span class="pl-c"><span class="pl-c">#</span> disable center shift</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaic</span>(A1, A2; center<span class="pl-k">=</span><span class="pl-c1">false</span>)
<span class="pl-c1">6</span><span class="pl-k">×</span><span class="pl-c1">3</span> MosaicView{Int64,<span class="pl-c1">4</span>, <span class="pl-k">...</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span></pre></div>
<p>You can also control the placement of tiles. Here this is illustrated for <code>mosaicview</code>, but
the same options apply for <code>mosaic</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; A = [k for i in 1:2, j in 1:3, k in 1:5]
2×3×5 Array{Int64,3}:
[:, :, 1] =
 1  1  1
 1  1  1

[:, :, 2] =
 2  2  2
 2  2  2

[:, :, 3] =
 3  3  3
 3  3  3

[:, :, 4] =
 4  4  4
 4  4  4

[:, :, 5] =
 5  5  5
 5  5  5

# number of tiles in column direction
julia&gt; mosaicview(A, ncol=2)
6×6 MosaicViews.MosaicView{Int64,4,...}:
 1  1  1  4  4  4
 1  1  1  4  4  4
 2  2  2  5  5  5
 2  2  2  5  5  5
 3  3  3  0  0  0
 3  3  3  0  0  0

# number of tiles in row direction
julia&gt; mosaicview(A, nrow=2)
4×9 MosaicViews.MosaicView{Int64,4,...}:
 1  1  1  3  3  3  5  5  5
 1  1  1  3  3  3  5  5  5
 2  2  2  4  4  4  0  0  0
 2  2  2  4  4  4  0  0  0

# take a row-major order, i.e., tile-wise permute
julia&gt; mosaicview(A, nrow=2, rowmajor=true)
4×9 MosaicViews.MosaicView{Int64,4,...}:
 1  1  1  2  2  2  3  3  3
 1  1  1  2  2  2  3  3  3
 4  4  4  5  5  5  0  0  0
 4  4  4  5  5  5  0  0  0

# add empty padding space between adjacent mosaic tiles
julia&gt; mosaicview(A, nrow=2, npad=1, rowmajor=true)
5×11 MosaicViews.MosaicView{Int64,4,...}:
 1  1  1  0  2  2  2  0  3  3  3
 1  1  1  0  2  2  2  0  3  3  3
 0  0  0  0  0  0  0  0  0  0  0
 4  4  4  0  5  5  5  0  0  0  0
 4  4  4  0  5  5  5  0  0  0  0

# fill spaces with -1
julia&gt; mosaicview(A, fillvalue=-1, nrow=2, npad=1, rowmajor=true)
5×11 MosaicViews.MosaicView{Int64,4,...}:
  1   1   1  -1   2   2   2  -1   3   3   3
  1   1   1  -1   2   2   2  -1   3   3   3
 -1  -1  -1  -1  -1  -1  -1  -1  -1  -1  -1
  4   4   4  -1   5   5   5  -1  -1  -1  -1
  4   4   4  -1   5   5   5  -1  -1  -1  -1
"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> [k <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>, j <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, k <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>]
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">5</span> Array{Int64,<span class="pl-c1">3</span>}<span class="pl-k">:</span>
[:, :, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>

[:, :, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>

[:, :, <span class="pl-c1">3</span>] <span class="pl-k">=</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>

[:, :, <span class="pl-c1">4</span>] <span class="pl-k">=</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>

[:, :, <span class="pl-c1">5</span>] <span class="pl-k">=</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>

<span class="pl-c"><span class="pl-c">#</span> number of tiles in column direction</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A, ncol<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">6</span><span class="pl-k">×</span><span class="pl-c1">6</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">4</span>,<span class="pl-k">...</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

<span class="pl-c"><span class="pl-c">#</span> number of tiles in row direction</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A, nrow<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">9</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">4</span>,<span class="pl-k">...</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

<span class="pl-c"><span class="pl-c">#</span> take a row-major order, i.e., tile-wise permute</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A, nrow<span class="pl-k">=</span><span class="pl-c1">2</span>, rowmajor<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">9</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">4</span>,<span class="pl-k">...</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

<span class="pl-c"><span class="pl-c">#</span> add empty padding space between adjacent mosaic tiles</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A, nrow<span class="pl-k">=</span><span class="pl-c1">2</span>, npad<span class="pl-k">=</span><span class="pl-c1">1</span>, rowmajor<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">11</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">4</span>,<span class="pl-k">...</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">0</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">0</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">0</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">0</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

<span class="pl-c"><span class="pl-c">#</span> fill spaces with -1</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">mosaicview</span>(A, fillvalue<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>, nrow<span class="pl-k">=</span><span class="pl-c1">2</span>, npad<span class="pl-k">=</span><span class="pl-c1">1</span>, rowmajor<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">11</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">4</span>,<span class="pl-k">...</span>}<span class="pl-k">:</span>
  <span class="pl-c1">1</span>   <span class="pl-c1">1</span>   <span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">2</span>   <span class="pl-c1">2</span>   <span class="pl-c1">2</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">3</span>   <span class="pl-c1">3</span>   <span class="pl-c1">3</span>
  <span class="pl-c1">1</span>   <span class="pl-c1">1</span>   <span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">2</span>   <span class="pl-c1">2</span>   <span class="pl-c1">2</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">3</span>   <span class="pl-c1">3</span>   <span class="pl-c1">3</span>
 <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>
  <span class="pl-c1">4</span>   <span class="pl-c1">4</span>   <span class="pl-c1">4</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">5</span>   <span class="pl-c1">5</span>   <span class="pl-c1">5</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>
  <span class="pl-c1">4</span>   <span class="pl-c1">4</span>   <span class="pl-c1">4</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">5</span>   <span class="pl-c1">5</span>   <span class="pl-c1">5</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span></pre></div>
<h3><a id="user-content-the-mosaicview-type" class="anchor" aria-hidden="true" href="#the-mosaicview-type"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>The <code>MosaicView</code> Type</h3>
<p>The <code>MosaicView</code> constructor is simple and straightforward;
if you need more layout options, consider calling it indirectly
through <code>mosaicview</code>.</p>
<p>The layout of the mosaic is encoded in the third
(and optionally fourth) dimension. Creating a <code>MosaicView</code> this
way is type stable, non-copying, and should in general give
decent performance when accessed with <code>getindex</code>.</p>
<p>Let us look at a couple examples to see the type in action. If
<code>size(A)</code> is <code>(2,3,4)</code>, then the resulting <code>MosaicView</code> will have
the size <code>(2*4,3)</code> which is <code>(8,3)</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; A = [k for i in 1:2, j in 1:3, k in 1:4]
2×3×4 Array{Int64,3}:
[:, :, 1] =
 1  1  1
 1  1  1

[:, :, 2] =
 2  2  2
 2  2  2

[:, :, 3] =
 3  3  3
 3  3  3

[:, :, 4] =
 4  4  4
 4  4  4

julia&gt; MosaicView(A)
8×3 MosaicViews.MosaicView{Int64,3,Array{Int64,3}}:
 1  1  1
 1  1  1
 2  2  2
 2  2  2
 3  3  3
 3  3  3
 4  4  4
 4  4  4
"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> [k <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>, j <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, k <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">4</span>]
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">4</span> Array{Int64,<span class="pl-c1">3</span>}<span class="pl-k">:</span>
[:, :, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>

[:, :, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>

[:, :, <span class="pl-c1">3</span>] <span class="pl-k">=</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>

[:, :, <span class="pl-c1">4</span>] <span class="pl-k">=</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">MosaicView</span>(A)
<span class="pl-c1">8</span><span class="pl-k">×</span><span class="pl-c1">3</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">3</span>,Array{Int64,<span class="pl-c1">3</span>}}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">4</span>  <span class="pl-c1">4</span></pre></div>
<p>Alternatively, <code>A</code> is also allowed to have four dimensions. More
concretely, if <code>size(A)</code> is <code>(2,3,4,5)</code>, then the resulting size
will be <code>(2*4,3*5)</code> which is <code>(8,15)</code>. For the sake of brevity
here is a slightly smaller example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; A = [(k+1)*l-1 for i in 1:2, j in 1:3, k in 1:2, l in 1:2]
2×3×2×2 Array{Int64,4}:
[:, :, 1, 1] =
 1  1  1
 1  1  1

[:, :, 2, 1] =
 2  2  2
 2  2  2

[:, :, 1, 2] =
 3  3  3
 3  3  3

[:, :, 2, 2] =
 5  5  5
 5  5  5

julia&gt; MosaicView(A)
4×6 MosaicViews.MosaicView{Int64,4,Array{Int64,4}}:
 1  1  1  3  3  3
 1  1  1  3  3  3
 2  2  2  5  5  5
 2  2  2  5  5  5
"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> [(k<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>l<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>, j <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, k <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>, l <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>]
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">2</span> Array{Int64,<span class="pl-c1">4</span>}<span class="pl-k">:</span>
[:, :, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>

[:, :, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>

[:, :, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>

[:, :, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">MosaicView</span>(A)
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">6</span> MosaicViews<span class="pl-k">.</span>MosaicView{Int64,<span class="pl-c1">4</span>,Array{Int64,<span class="pl-c1">4</span>}}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span>  <span class="pl-c1">5</span></pre></div>
<h3><a id="user-content-customizing-promotion" class="anchor" aria-hidden="true" href="#customizing-promotion"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Customizing promotion</h3>
<p>When the inputs are heterogeneous, <code>mosaic</code> attempts to convert the elements of all input arrays to a common type;
if this promotion step throws an error, consider extending <code>MosaicViews.promote_wrapped_type</code> for your types.</p>
<p><code>ImageCore</code> provides such extensions for colors defined in <a href="https://github.com/JuliaGraphics/ColorTypes.jl">ColorTypes</a>.
You will likely want to load that package if you're using MosaicViews with <code>Colorant</code> arrays.
(<code>ImageCore</code> gets loaded by nearly all the packages in the JuliaImages suite, so you may find that it is already loaded.)</p>
</article></div>