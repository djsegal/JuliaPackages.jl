<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-matrixfactorizationsjl" class="anchor" aria-hidden="true" href="#matrixfactorizationsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MatrixFactorizations.jl</h1>
<p><a href="https://travis-ci.com/JuliaMatrices/MatrixFactorizations.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0b01f6ac14b73a4be1cf4063c2469b3412ee2abed4acedee6d84aa19050bcf58/68747470733a2f2f7472617669732d63692e636f6d2f4a756c69614d617472696365732f4d6174726978466163746f72697a6174696f6e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/JuliaMatrices/MatrixFactorizations.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://codecov.io/gh/JuliaMatrices/MatrixFactorizations.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/44f5999cb890726fe18954078bd9fe1786eae7e73dd5c2fddb801b3ce565a293/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614d617472696365732f4d6174726978466163746f72697a6174696f6e732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaMatrices/MatrixFactorizations.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>A Julia package to contain non-standard matrix factorizations. At the moment it
implements the QL, RQ, and UL factorizations, a combined Cholesky factorization with inverse,
and polar decompositions.
In the future it may include other factorizations such
as the LQ factorization.</p>
<h2><a id="user-content-ql-factorization" class="anchor" aria-hidden="true" href="#ql-factorization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>QL Factorization</h2>
<p>The QL Factorization  is analogous to the QR factorization but with a lower-triangular matrix:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using MatrixFactorizations

julia&gt; A = randn(5,5);

julia&gt; ql(A)
MatrixFactorizations.QL{Float64,Array{Float64,2}}
Q factor:
5×5 MatrixFactorizations.QLPackedQ{Float64,Array{Float64,2}}:
  0.155574  -0.112555   -0.686362   -0.701064   0.0233276
  0.363037  -0.0583277  -0.0329428   0.152682   0.916736 
 -0.670742   0.294355   -0.547867    0.347157   0.206843 
 -0.61094   -0.566041    0.324432   -0.353128   0.276396 
  0.144425  -0.759527   -0.349868    0.489877  -0.199681 
L factor:
5×5 Array{Float64,2}:
 -1.75734     0.0         0.0        0.0       0.0   
 -0.58336    -2.08515     0.0        0.0       0.0   
  0.0213518   0.0722477  -2.01325    0.0       0.0   
  0.930364   -0.46796    -0.322493  -2.9091    0.0   
  1.08725     0.746217    0.549688  -1.10194  -2.0581

julia&gt; b = randn(5); ql(A) \ b ≈ A \ b
true
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MatrixFactorizations

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">5</span>,<span class="pl-c1">5</span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">ql</span>(A)
MatrixFactorizations<span class="pl-k">.</span>QL{Float64,Array{Float64,<span class="pl-c1">2</span>}}
Q factor<span class="pl-k">:</span>
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> MatrixFactorizations<span class="pl-k">.</span>QLPackedQ{Float64,Array{Float64,<span class="pl-c1">2</span>}}<span class="pl-k">:</span>
  <span class="pl-c1">0.155574</span>  <span class="pl-k">-</span><span class="pl-c1">0.112555</span>   <span class="pl-k">-</span><span class="pl-c1">0.686362</span>   <span class="pl-k">-</span><span class="pl-c1">0.701064</span>   <span class="pl-c1">0.0233276</span>
  <span class="pl-c1">0.363037</span>  <span class="pl-k">-</span><span class="pl-c1">0.0583277</span>  <span class="pl-k">-</span><span class="pl-c1">0.0329428</span>   <span class="pl-c1">0.152682</span>   <span class="pl-c1">0.916736</span> 
 <span class="pl-k">-</span><span class="pl-c1">0.670742</span>   <span class="pl-c1">0.294355</span>   <span class="pl-k">-</span><span class="pl-c1">0.547867</span>    <span class="pl-c1">0.347157</span>   <span class="pl-c1">0.206843</span> 
 <span class="pl-k">-</span><span class="pl-c1">0.61094</span>   <span class="pl-k">-</span><span class="pl-c1">0.566041</span>    <span class="pl-c1">0.324432</span>   <span class="pl-k">-</span><span class="pl-c1">0.353128</span>   <span class="pl-c1">0.276396</span> 
  <span class="pl-c1">0.144425</span>  <span class="pl-k">-</span><span class="pl-c1">0.759527</span>   <span class="pl-k">-</span><span class="pl-c1">0.349868</span>    <span class="pl-c1">0.489877</span>  <span class="pl-k">-</span><span class="pl-c1">0.199681</span> 
L factor<span class="pl-k">:</span>
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> Array{Float64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">1.75734</span>     <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>       <span class="pl-c1">0.0</span>   
 <span class="pl-k">-</span><span class="pl-c1">0.58336</span>    <span class="pl-k">-</span><span class="pl-c1">2.08515</span>     <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>       <span class="pl-c1">0.0</span>   
  <span class="pl-c1">0.0213518</span>   <span class="pl-c1">0.0722477</span>  <span class="pl-k">-</span><span class="pl-c1">2.01325</span>    <span class="pl-c1">0.0</span>       <span class="pl-c1">0.0</span>   
  <span class="pl-c1">0.930364</span>   <span class="pl-k">-</span><span class="pl-c1">0.46796</span>    <span class="pl-k">-</span><span class="pl-c1">0.322493</span>  <span class="pl-k">-</span><span class="pl-c1">2.9091</span>    <span class="pl-c1">0.0</span>   
  <span class="pl-c1">1.08725</span>     <span class="pl-c1">0.746217</span>    <span class="pl-c1">0.549688</span>  <span class="pl-k">-</span><span class="pl-c1">1.10194</span>  <span class="pl-k">-</span><span class="pl-c1">2.0581</span>

julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">5</span>); <span class="pl-c1">ql</span>(A) <span class="pl-k">\</span> b <span class="pl-k">≈</span> A <span class="pl-k">\</span> b
<span class="pl-c1">true</span></pre></div>
</article></div>