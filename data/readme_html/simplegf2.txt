<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-simplegf2" class="anchor" aria-hidden="true" href="#simplegf2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>SimpleGF2</h1>
<p><a href="https://travis-ci.org/scheinerman/SimpleGF2.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/77c161f3c8cdcd035ce0e7f2cf286f47274ef7b0/68747470733a2f2f7472617669732d63692e6f72672f73636865696e65726d616e2f53696d706c654746322e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/scheinerman/SimpleGF2.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://coveralls.io/github/scheinerman/SimpleGF2.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/586e9b316282ae876296e60b8c62a25b6a1fcd6a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f73636865696e65726d616e2f53696d706c654746322e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/scheinerman/SimpleGF2.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/scheinerman/SimpleGF2.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/7fa1b6bcf8883208abe52333bbc96c2cabc3af56/687474703a2f2f636f6465636f762e696f2f6769746875622f73636865696e65726d616e2f53696d706c654746322e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/scheinerman/SimpleGF2.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>This a basic implementation of arithmetic in GF(2). Values in
GF(2) can be created like this:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SimpleGF2

julia<span class="pl-k">&gt;</span> <span class="pl-c1">GF2</span>(<span class="pl-c1">5</span>)
<span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">GF2</span>(<span class="pl-c1">4</span>)
<span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">one</span>(GF2)
<span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">zero</span>(GF2)
<span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)</pre></div>
<p>Matrices can be created with <code>ones</code>, <code>zeros</code>, and <code>eye</code>.
The <code>rand</code> function has been extended to return random
elements of GF(2). For example:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span><span class="pl-c1">rand</span>(GF2,<span class="pl-c1">3</span>,<span class="pl-c1">5</span>)
<span class="pl-c1">3</span>x5 Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)</pre></div>
<p>To see this clearly, you can map the values integers:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">map</span>(Int,A)
<span class="pl-c1">3</span>x5 Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span></pre></div>
<p>Arithmetic with scalars and arrays of GF(2) elements
work as expected. For square matrices, <code>det</code> and <code>inv</code>
are available too:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">triu</span>(<span class="pl-c1">ones</span>(GF2,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>))
<span class="pl-c1">5</span>x5 Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">inv</span>(A)
<span class="pl-c1">5</span>x5 Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">triu</span>(<span class="pl-c1">ones</span>(GF2,<span class="pl-c1">4</span>,<span class="pl-c1">4</span>))
<span class="pl-c1">4</span>x4 Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">det</span>(A)
<span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> B <span class="pl-k">=</span> <span class="pl-c1">inv</span>(A)
<span class="pl-c1">4</span>x4 Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> A<span class="pl-k">*</span>B
<span class="pl-c1">4</span>x4 Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)</pre></div>
<h2><a id="user-content-additional-functionality" class="anchor" aria-hidden="true" href="#additional-functionality"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Additional functionality</h2>
<h3><a id="user-content-rank-and-nullity" class="anchor" aria-hidden="true" href="#rank-and-nullity"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Rank and nullity</h3>
<p>Given a matrix <code>A</code> the dimension of its column space and its
null space can be computed using <code>rank(A)</code> and <code>nullity(A)</code>,
respectively. Further, the null space of <code>A</code> is returned by
<code>nullspace(A)</code> as a matrix whose columns are a basis for the
null space.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">rand</span>(GF2,<span class="pl-c1">4</span>,<span class="pl-c1">9</span>)
<span class="pl-c1">4</span>x9 Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">rank</span>(A)
<span class="pl-c1">4</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">nullity</span>(A)
<span class="pl-c1">5</span>

julia<span class="pl-k">&gt;</span> B <span class="pl-k">=</span> <span class="pl-c1">nullspace</span>(A)
<span class="pl-c1">9</span>x5 Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> A<span class="pl-k">*</span>B
<span class="pl-c1">4</span>x5 Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">nullspace</span>(A<span class="pl-k">'</span>)
<span class="pl-c1">4</span>x0 Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">2</span>}</pre></div>
<h3><a id="user-content-equation-solving" class="anchor" aria-hidden="true" href="#equation-solving"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Equation solving</h3>
<p>Given a matrix <code>A</code> and a vector <code>b</code>, the function <code>solve(A,b)</code>
returns a vector <code>x</code> such that <code>A*x==b</code>. For example,
here we show how to solve the pair of equations <code>r+s==1, s+t==1</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">map</span>(GF2,[<span class="pl-c1">1</span> <span class="pl-c1">1</span> <span class="pl-c1">0</span>; <span class="pl-c1">0</span> <span class="pl-c1">1</span> <span class="pl-c1">1</span>])
<span class="pl-c1">2</span>x3 Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">map</span>(GF2,[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>])
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">solve</span>(A,b)
<span class="pl-c1">3</span><span class="pl-k">-</span>element Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)

julia<span class="pl-k">&gt;</span> A<span class="pl-k">*</span>x<span class="pl-k">==</span>b
<span class="pl-c1">true</span></pre></div>
<p>Of course, this is an underdetermined system. The function
<code>solve_all</code> returns a solution to the system <code>A*x==b</code> and
a basis for the null space of <code>A</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> x,B <span class="pl-k">=</span> <span class="pl-c1">solve_all</span>(A,b);

julia<span class="pl-k">&gt;</span> x
<span class="pl-c1">3</span><span class="pl-k">-</span>element Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)

julia<span class="pl-k">&gt;</span> B
<span class="pl-c1">3</span>x1 Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> y <span class="pl-k">=</span> x <span class="pl-k">+</span> B[:,<span class="pl-c1">1</span>]
<span class="pl-c1">3</span><span class="pl-k">-</span>element Array{SimpleGF2<span class="pl-k">.</span>GF2,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> A<span class="pl-k">*</span>y<span class="pl-k">==</span>b
<span class="pl-c1">true</span></pre></div>
<h3><a id="user-content-row-reduced-echelon-form" class="anchor" aria-hidden="true" href="#row-reduced-echelon-form"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Row reduced echelon form</h3>
<p>The function <code>rref(A)</code> returns the row reduced echelon form
of the matrix <code>A</code>. Similarly, <code>rref!(A)</code> overwrites <code>A</code> with
its row reduced echelon form.</p>
<h3><a id="user-content-polynomials" class="anchor" aria-hidden="true" href="#polynomials"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Polynomials</h3>
<p>The <code>SimpleGF2</code> module is compatible with the <code>Polynomials</code> package.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Polynomials

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">Poly</span>( [ <span class="pl-c1">GF2</span>(<span class="pl-c1">0</span>); <span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>) ] )
<span class="pl-c1">Poly</span>(x)

julia<span class="pl-k">&gt;</span> (x<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">^</span><span class="pl-c1">4</span>
<span class="pl-c1">Poly</span>(<span class="pl-c1">GF2</span>(<span class="pl-c1">1</span>) <span class="pl-k">+</span> x<span class="pl-k">^</span><span class="pl-c1">4</span>)</pre></div>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>Install with</p>
<pre><code>Pkg.clone("https://github.com/scheinerman/SimpleGF2.jl.git")
</code></pre>
<p>And then specify <code>using SimpleGF2</code> to use the <code>GF2</code> numbers.</p>
<h2><a id="user-content-acknowledgement" class="anchor" aria-hidden="true" href="#acknowledgement"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Acknowledgement</h2>
<p>Thanks to Tara Abrishami for her contributions to this module including
<code>rref</code>, <code>rref!</code>, <code>solve</code>, <code>solve_all</code>, and <code>nullspace</code>.</p>
</article></div>