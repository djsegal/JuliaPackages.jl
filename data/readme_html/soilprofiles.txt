<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-soilprofilesjl" class="anchor" aria-hidden="true" href="#soilprofilesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SoilProfiles.jl</h1>
<p><a href="https://travis-ci.org/brownag/SoilProfiles.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fb984eaf43f0801cf4c4fbcbaa9bd3e81a4bb7bb70e10aefa3e4e6f5eda30877/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f62726f776e61672f536f696c50726f66696c65732e6a6c2f6d61696e2e737667" alt="Build Status" data-canonical-src="https://img.shields.io/travis/brownag/SoilProfiles.jl/main.svg" style="max-width:100%;"></a>
<a href="https://codecov.io/github/brownag/SoilProfiles.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0d707286b8f4e602d71955c8cf468a821322da59dadbb150e31f694b2788037b/68747470733a2f2f636f6465636f762e696f2f6769746875622f62726f776e61672f536f696c50726f66696c65732e6a6c2f6272616e63682f6d61696e2f6772617068732f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/github/brownag/SoilProfiles.jl/branch/main/graphs/badge.svg" style="max-width:100%;"></a></p>
<p><em>SoilProfiles.jl</em> is a <a href="http://julialang.org" rel="nofollow">Julia</a> package for representing soil profile information using the "site-layer" model. Soil profiles are essentially cross sections where distinct "layers" are defined by a top and bottom depth for a point, line or area on the land surface.</p>
<p>There is generally a many:one relationship between layers observed within a soil profile and the site-level information that identifies or summarizes that profile. The <em>SoilProfile</em> object allows for simultaneous indexing and operations on paired or pooled site and layer data.</p>
<p>The <em>SoilProfile</em> object in <em>SoilProfiles.jl</em> conceptually mirrors the <em>SoilProfileCollection</em> object defined by the <a href="http://github.com/ncss-tech/aqp">aqp</a> <strong>R</strong> package. In Julia, we are using the <em>DataFrames.jl</em> package instead of <strong>R</strong> <em>data.frame</em> objects.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using SoilProfiles
using DataFrames

# 6 sites with 3 profiles of layer data
s = DataFrame(pid = 1:6, elev = 100:105)
l = DataFrame(pid = [1,1,1,1,1,2,2,2,2,2,3,3,3,3,3],
              top = [0,10,20,30,40,0,5,10,15,20,0,20,40,60,80],
              bot = [10,20,30,40,50,5,10,15,20,25,20,40,60,80,100])

# construct a SoilProfile from DataFrames
spc = SoilProfile(&quot;pid&quot;, s, l)
show(spc)

# empty SPC
show(SoilProfile())

# site and layer extraction
res = spc[2:6, 2:4]
show(res)

# all layers have a site
println(isValid(res))

# but not all sites have layers [4,5,6]
println(sitesWithoutLayers(res))

show(spc[1,1])

# iterate using for i in SoilProfile
for i in spc
 show(i)
end

# or use foreach(::Function, ::SoilProfile)
foreach(show, spc)
"><pre><code>using SoilProfiles
using DataFrames

# 6 sites with 3 profiles of layer data
s = DataFrame(pid = 1:6, elev = 100:105)
l = DataFrame(pid = [1,1,1,1,1,2,2,2,2,2,3,3,3,3,3],
              top = [0,10,20,30,40,0,5,10,15,20,0,20,40,60,80],
              bot = [10,20,30,40,50,5,10,15,20,25,20,40,60,80,100])

# construct a SoilProfile from DataFrames
spc = SoilProfile("pid", s, l)
show(spc)

# empty SPC
show(SoilProfile())

# site and layer extraction
res = spc[2:6, 2:4]
show(res)

# all layers have a site
println(isValid(res))

# but not all sites have layers [4,5,6]
println(sitesWithoutLayers(res))

show(spc[1,1])

# iterate using for i in SoilProfile
for i in spc
 show(i)
end

# or use foreach(::Function, ::SoilProfile)
foreach(show, spc)
</code></pre></div>
</article></div>