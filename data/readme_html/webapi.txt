<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-webapijl" class="anchor" aria-hidden="true" href="#webapijl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>WebAPI.jl</h1>
<p dir="auto"><a href="https://eliascarv.github.io/WebAPI.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://eliascarv.github.io/WebAPI.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/eliascarv/WebAPI.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/eliascarv/WebAPI.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/eliascarv/WebAPI.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4b93373d2d04b5e790c60f4e102475028ce2c4f98d35b166e6485cfa389e7039/68747470733a2f2f636f6465636f762e696f2f67682f656c696173636172762f5765624150492e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/eliascarv/WebAPI.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">WebAPI.jl is a abstraction of two Julia packages: HTTP.jl and JSON3.jl.
These abstractions allow you to develop APIs in Julia in a simpler and more readable way.</p>
<p dir="auto">Example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using WebAPI

function bhaskara(a, b, c)
    Δ = b^2 - 4*a*c

    Δ &lt; 0 &amp;&amp; (Δ = complex(Δ))

    x₁ = (-b + √Δ) / 2a
    x₂ = (-b - √Δ) / 2a
    return x₁, x₂
end

const app = App()

add_post!(app, &quot;/bhaskara&quot;) do req
    a = req.body.a
    b = req.body.b
    c = req.body.c
    x₁, x₂ = bhaskara(a, b, c)

    return Dict(&quot;x1&quot; =&gt; &quot;$x₁&quot;, &quot;x2&quot; =&gt; &quot;$x₂&quot;)
end

serve(app) #Deafult: ip = localhost, port = 8081"><pre><span class="pl-k">using</span> WebAPI

<span class="pl-k">function</span> <span class="pl-en">bhaskara</span>(a, b, c)
    Δ <span class="pl-k">=</span> b<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">4</span><span class="pl-k">*</span>a<span class="pl-k">*</span>c

    Δ <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> (Δ <span class="pl-k">=</span> <span class="pl-c1">complex</span>(Δ))

    x₁ <span class="pl-k">=</span> (<span class="pl-k">-</span>b <span class="pl-k">+</span> <span class="pl-k">√</span>Δ) <span class="pl-k">/</span> <span class="pl-c1">2</span>a
    x₂ <span class="pl-k">=</span> (<span class="pl-k">-</span>b <span class="pl-k">-</span> <span class="pl-k">√</span>Δ) <span class="pl-k">/</span> <span class="pl-c1">2</span>a
    <span class="pl-k">return</span> x₁, x₂
<span class="pl-k">end</span>

<span class="pl-k">const</span> app <span class="pl-k">=</span> <span class="pl-c1">App</span>()

<span class="pl-c1">add_post!</span>(app, <span class="pl-s"><span class="pl-pds">"</span>/bhaskara<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> req
    a <span class="pl-k">=</span> req<span class="pl-k">.</span>body<span class="pl-k">.</span>a
    b <span class="pl-k">=</span> req<span class="pl-k">.</span>body<span class="pl-k">.</span>b
    c <span class="pl-k">=</span> req<span class="pl-k">.</span>body<span class="pl-k">.</span>c
    x₁, x₂ <span class="pl-k">=</span> <span class="pl-c1">bhaskara</span>(a, b, c)

    <span class="pl-k">return</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>x1<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$x₁</span><span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>x2<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$x₂</span><span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>

<span class="pl-c1">serve</span>(app) <span class="pl-c"><span class="pl-c">#</span>Deafult: ip = localhost, port = 8081</span></pre></div>
<p dir="auto">More complex example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using WebAPI

function bhaskara(a, b, c)
    Δ = b^2 - 4*a*c

    Δ &lt; 0 &amp;&amp; (Δ = complex(Δ))

    x₁ = (-b + √Δ) / 2a
    x₂ = (-b - √Δ) / 2a
    return x₁, x₂
end

const app = App()

add_get!(app, &quot;/bhaskara/:a/:b/:c&quot;) do req
    a = parse(Int, req.params.a)
    b = parse(Int, req.params.b)
    c = parse(Int, req.params.c)
    x₁, x₂ = bhaskara(a, b, c)

    return Dict(&quot;x1&quot; =&gt; &quot;$x₁&quot;, &quot;x2&quot; =&gt; &quot;$x₂&quot;)
end

add_get!(app, &quot;/bhaskara&quot;) do req
    verifykeys(req.query, (:a, :b, :c)) || return Res(400, &quot;Incorrect Query.&quot;)

    a = parse(Int, req.query.a)
    b = parse(Int, req.query.b)
    c = parse(Int, req.query.c)
    x₁, x₂ = bhaskara(a, b, c)

    return (x1 = &quot;$x₁&quot;, x2 = &quot;$x₂&quot;)
end

add_post!(app, &quot;/bhaskara&quot;) do req
    verifykeys(req.body, [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]) || return Res(400, &quot;Incorrect JSON.&quot;)

    a = req.body.a
    b = req.body.b
    c = req.body.c
    x₁, x₂ = bhaskara(a, b, c)

    return Res(201, (x1 = &quot;$x₁&quot;, x2 = &quot;$x₂&quot;))
end

serve(app) #Deafult: ip = localhost, port = 8081"><pre><span class="pl-k">using</span> WebAPI

<span class="pl-k">function</span> <span class="pl-en">bhaskara</span>(a, b, c)
    Δ <span class="pl-k">=</span> b<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">4</span><span class="pl-k">*</span>a<span class="pl-k">*</span>c

    Δ <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> (Δ <span class="pl-k">=</span> <span class="pl-c1">complex</span>(Δ))

    x₁ <span class="pl-k">=</span> (<span class="pl-k">-</span>b <span class="pl-k">+</span> <span class="pl-k">√</span>Δ) <span class="pl-k">/</span> <span class="pl-c1">2</span>a
    x₂ <span class="pl-k">=</span> (<span class="pl-k">-</span>b <span class="pl-k">-</span> <span class="pl-k">√</span>Δ) <span class="pl-k">/</span> <span class="pl-c1">2</span>a
    <span class="pl-k">return</span> x₁, x₂
<span class="pl-k">end</span>

<span class="pl-k">const</span> app <span class="pl-k">=</span> <span class="pl-c1">App</span>()

<span class="pl-c1">add_get!</span>(app, <span class="pl-s"><span class="pl-pds">"</span>/bhaskara/:a/:b/:c<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> req
    a <span class="pl-k">=</span> <span class="pl-c1">parse</span>(Int, req<span class="pl-k">.</span>params<span class="pl-k">.</span>a)
    b <span class="pl-k">=</span> <span class="pl-c1">parse</span>(Int, req<span class="pl-k">.</span>params<span class="pl-k">.</span>b)
    c <span class="pl-k">=</span> <span class="pl-c1">parse</span>(Int, req<span class="pl-k">.</span>params<span class="pl-k">.</span>c)
    x₁, x₂ <span class="pl-k">=</span> <span class="pl-c1">bhaskara</span>(a, b, c)

    <span class="pl-k">return</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>x1<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$x₁</span><span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>x2<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$x₂</span><span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>

<span class="pl-c1">add_get!</span>(app, <span class="pl-s"><span class="pl-pds">"</span>/bhaskara<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> req
    <span class="pl-c1">verifykeys</span>(req<span class="pl-k">.</span>query, (<span class="pl-c1">:a</span>, <span class="pl-c1">:b</span>, <span class="pl-c1">:c</span>)) <span class="pl-k">||</span> <span class="pl-k">return</span> <span class="pl-c1">Res</span>(<span class="pl-c1">400</span>, <span class="pl-s"><span class="pl-pds">"</span>Incorrect Query.<span class="pl-pds">"</span></span>)

    a <span class="pl-k">=</span> <span class="pl-c1">parse</span>(Int, req<span class="pl-k">.</span>query<span class="pl-k">.</span>a)
    b <span class="pl-k">=</span> <span class="pl-c1">parse</span>(Int, req<span class="pl-k">.</span>query<span class="pl-k">.</span>b)
    c <span class="pl-k">=</span> <span class="pl-c1">parse</span>(Int, req<span class="pl-k">.</span>query<span class="pl-k">.</span>c)
    x₁, x₂ <span class="pl-k">=</span> <span class="pl-c1">bhaskara</span>(a, b, c)

    <span class="pl-k">return</span> (x1 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$x₁</span><span class="pl-pds">"</span></span>, x2 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$x₂</span><span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>

<span class="pl-c1">add_post!</span>(app, <span class="pl-s"><span class="pl-pds">"</span>/bhaskara<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> req
    <span class="pl-c1">verifykeys</span>(req<span class="pl-k">.</span>body, [<span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>c<span class="pl-pds">"</span></span>]) <span class="pl-k">||</span> <span class="pl-k">return</span> <span class="pl-c1">Res</span>(<span class="pl-c1">400</span>, <span class="pl-s"><span class="pl-pds">"</span>Incorrect JSON.<span class="pl-pds">"</span></span>)

    a <span class="pl-k">=</span> req<span class="pl-k">.</span>body<span class="pl-k">.</span>a
    b <span class="pl-k">=</span> req<span class="pl-k">.</span>body<span class="pl-k">.</span>b
    c <span class="pl-k">=</span> req<span class="pl-k">.</span>body<span class="pl-k">.</span>c
    x₁, x₂ <span class="pl-k">=</span> <span class="pl-c1">bhaskara</span>(a, b, c)

    <span class="pl-k">return</span> <span class="pl-c1">Res</span>(<span class="pl-c1">201</span>, (x1 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$x₁</span><span class="pl-pds">"</span></span>, x2 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$x₂</span><span class="pl-pds">"</span></span>))
<span class="pl-k">end</span>

<span class="pl-c1">serve</span>(app) <span class="pl-c"><span class="pl-c">#</span>Deafult: ip = localhost, port = 8081</span></pre></div>
<p dir="auto">The above code running:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="  App running at:
  http://localhost:8081/

  Method        Route
  ==============================================
  POST          /bhaskara
  GET           /bhaskara/:a/:b/:c
  GET           /bhaskara"><pre class="notranslate"><code>  App running at:
  http://localhost:8081/

  Method        Route
  ==============================================
  POST          /bhaskara
  GET           /bhaskara/:a/:b/:c
  GET           /bhaskara
</code></pre></div>
<p dir="auto">Testing the API using HTTPie:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="➜  ~ http GET localhost:8081/bhaskara/1/3/-4
HTTP/1.1 200 OK
Access-Control-Allow-Headers: *
Access-Control-Allow-Methods: *
Access-Control-Allow-Origin: *
Content-Type: application/json
Transfer-Encoding: chunked

{
    &quot;x1&quot;: &quot;1.0&quot;,
    &quot;x2&quot;: &quot;-4.0&quot;
}


➜  ~ http GET localhost:8081/bhaskara a==1 b==3 c==-4
HTTP/1.1 200 OK
Access-Control-Allow-Headers: *
Access-Control-Allow-Methods: *
Access-Control-Allow-Origin: *
Content-Type: application/json
Transfer-Encoding: chunked

{
    &quot;x1&quot;: &quot;1.0&quot;,
    &quot;x2&quot;: &quot;-4.0&quot;
}


➜  ~ http POST localhost:8081/bhaskara a:=1 b:=3 c:=-4
HTTP/1.1 201 Created
Access-Control-Allow-Headers: *
Access-Control-Allow-Methods: *
Access-Control-Allow-Origin: *
Content-Type: application/json
Transfer-Encoding: chunked

{
    &quot;x1&quot;: &quot;1.0&quot;,
    &quot;x2&quot;: &quot;-4.0&quot;
}"><pre>➜  <span class="pl-k">~</span> http GET localhost:8081/bhaskara/1/3/-4
HTTP/1.1 200 OK
Access-Control-Allow-Headers: <span class="pl-k">*</span>
Access-Control-Allow-Methods: <span class="pl-k">*</span>
Access-Control-Allow-Origin: <span class="pl-k">*</span>
Content-Type: application/json
Transfer-Encoding: chunked

{
    <span class="pl-s"><span class="pl-pds">"</span>x1<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>1.0<span class="pl-pds">"</span></span>,
    <span class="pl-s"><span class="pl-pds">"</span>x2<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>-4.0<span class="pl-pds">"</span></span>
}


➜  <span class="pl-k">~</span> http GET localhost:8081/bhaskara a==1 b==3 c==-4
HTTP/1.1 200 OK
Access-Control-Allow-Headers: <span class="pl-k">*</span>
Access-Control-Allow-Methods: <span class="pl-k">*</span>
Access-Control-Allow-Origin: <span class="pl-k">*</span>
Content-Type: application/json
Transfer-Encoding: chunked

{
    <span class="pl-s"><span class="pl-pds">"</span>x1<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>1.0<span class="pl-pds">"</span></span>,
    <span class="pl-s"><span class="pl-pds">"</span>x2<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>-4.0<span class="pl-pds">"</span></span>
}


➜  <span class="pl-k">~</span> http POST localhost:8081/bhaskara a:=1 b:=3 c:=-4
HTTP/1.1 201 Created
Access-Control-Allow-Headers: <span class="pl-k">*</span>
Access-Control-Allow-Methods: <span class="pl-k">*</span>
Access-Control-Allow-Origin: <span class="pl-k">*</span>
Content-Type: application/json
Transfer-Encoding: chunked

{
    <span class="pl-s"><span class="pl-pds">"</span>x1<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>1.0<span class="pl-pds">"</span></span>,
    <span class="pl-s"><span class="pl-pds">"</span>x2<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>-4.0<span class="pl-pds">"</span></span>
}</pre></div>
</article></div>