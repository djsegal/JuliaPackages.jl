<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-intensityscans" class="anchor" aria-hidden="true" href="#intensityscans"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>IntensityScans</h1>
<p><a href="https://Orchard-Ultrasound-Innovation.github.io/IntensityScans.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://Orchard-Ultrasound-Innovation.github.io/IntensityScans.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/Orchard-Ultrasound-Innovation/IntensityScans.jl/actions"><img src="https://github.com/Orchard-Ultrasound-Innovation/IntensityScans.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://travis-ci.com/Orchard-Ultrasound-Innovation/IntensityScans.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/49a1fef0893339d11678ed7b3610bb610d75ee5ce52aac7ee6a84388cb497d99/68747470733a2f2f7472617669732d63692e636f6d2f4f7263686172642d556c747261736f756e642d496e6e6f766174696f6e2f496e74656e736974795363616e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/Orchard-Ultrasound-Innovation/IntensityScans.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/Orchard-Ultrasound-Innovation/IntensityScans.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c11de266abfa3571c095dd4a73aa30cb30bcd788c0a148ca2fd26b4c59c5c72b/68747470733a2f2f636f6465636f762e696f2f67682f4f7263686172642d556c747261736f756e642d496e6e6f766174696f6e2f496e74656e736974795363616e732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/Orchard-Ultrasound-Innovation/IntensityScans.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width:100%;"></a>
<a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width:100%;"></a></p>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h1>
<p>This package relies on the following packages. To learn more about
configuring and using these packages:</p>
<ul>
<li><a href="https://github.com/Orchard-Ultrasound-Innovation/ThorlabsLTStage.jl">ThorlabsLTStage</a></li>
<li><a href="https://github.com/Orchard-Ultrasound-Innovation/TcpInstruments.jl">TcpInstruments</a></li>
<li><a href="https://github.com/Orchard-Ultrasound-Innovation/HydrophoneCalibrations.jl">HydrophoneCalibrations.jl</a></li>
</ul>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using IntensityScans
using IntensityScans.ThorlabsLTStage
using IntensityScans.TcpInstruments
using IntensityScans.Unitful


lts = initialize(LTS)
scope = initialize(AgilentDSOX4034A)
channel = 1
number_of_samples = get_data(scope, channel).info.num_points

scanner = IntensityScan(
    xyz = lts, 
    scope = scope, 
    channel = 1, 
    precapture_delay = 0u&quot;µs&quot;,
    sample_size = 65104,
    post_move_delay = 0u&quot;s&quot;,
)

wave_x = scan_x(scanner, [0u&quot;m&quot;, 100u&quot;mm&quot;], 5)
wave_xy = scan_xy(scanner, [0u&quot;m&quot;, 0.1u&quot;m&quot;], 5, [0u&quot;mm&quot;, 0.1u&quot;m&quot;], 7)
wave_xyz = scan_xyz(scanner, [0u&quot;m&quot;, 0.1u&quot;m&quot;], 3, [0u&quot;m&quot;, 0.1u&quot;m&quot;], 3, [0u&quot;m&quot;, 0.1u&quot;m&quot;], 3)

save(wave_x)
save(wave_xy; filename=&quot;/home/user/scanfolder/myscan&quot;)
save(wave_xyz; format=:matlab)

new_info_xy = load(&quot;home/user/scanfolder/myscan&quot;)

params = ScanParameters(
    medium = Medium(),
    excitation = Excitation(),
    f0 = 15e6,
    hydrophone_id = :Onda_HGL0200_2322,
    preamp_id = :Onda_AH2020_1238_20dB,
)

new_info_xy = compute_metrics(new_info_xy)
wave_xyz = compute_metrics(wave_xyz, params)

plot(wave_x)

plot(new_info_xy)
plot(new_info_xy; isppa=true)
plot(new_info_xy; ispta=true)
plot(new_info_xy; mi=true)

plot(wave_xyz; xslice=0u&quot;m&quot;, ispta=true, mi=true)
"><pre><span class="pl-k">using</span> IntensityScans
<span class="pl-k">using</span> IntensityScans<span class="pl-k">.</span>ThorlabsLTStage
<span class="pl-k">using</span> IntensityScans<span class="pl-k">.</span>TcpInstruments
<span class="pl-k">using</span> IntensityScans<span class="pl-k">.</span>Unitful


lts <span class="pl-k">=</span> <span class="pl-c1">initialize</span>(LTS)
scope <span class="pl-k">=</span> <span class="pl-c1">initialize</span>(AgilentDSOX4034A)
channel <span class="pl-k">=</span> <span class="pl-c1">1</span>
number_of_samples <span class="pl-k">=</span> <span class="pl-c1">get_data</span>(scope, channel)<span class="pl-k">.</span>info<span class="pl-k">.</span>num_points

scanner <span class="pl-k">=</span> <span class="pl-c1">IntensityScan</span>(
    xyz <span class="pl-k">=</span> lts, 
    scope <span class="pl-k">=</span> scope, 
    channel <span class="pl-k">=</span> <span class="pl-c1">1</span>, 
    precapture_delay <span class="pl-k">=</span> <span class="pl-c1">0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>µs<span class="pl-pds">"</span></span>,
    sample_size <span class="pl-k">=</span> <span class="pl-c1">65104</span>,
    post_move_delay <span class="pl-k">=</span> <span class="pl-c1">0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>s<span class="pl-pds">"</span></span>,
)

wave_x <span class="pl-k">=</span> <span class="pl-c1">scan_x</span>(scanner, [<span class="pl-c1">0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>, <span class="pl-c1">100</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>mm<span class="pl-pds">"</span></span>], <span class="pl-c1">5</span>)
wave_xy <span class="pl-k">=</span> <span class="pl-c1">scan_xy</span>(scanner, [<span class="pl-c1">0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>, <span class="pl-c1">0.1</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>], <span class="pl-c1">5</span>, [<span class="pl-c1">0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>mm<span class="pl-pds">"</span></span>, <span class="pl-c1">0.1</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>], <span class="pl-c1">7</span>)
wave_xyz <span class="pl-k">=</span> <span class="pl-c1">scan_xyz</span>(scanner, [<span class="pl-c1">0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>, <span class="pl-c1">0.1</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>], <span class="pl-c1">3</span>, [<span class="pl-c1">0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>, <span class="pl-c1">0.1</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>], <span class="pl-c1">3</span>, [<span class="pl-c1">0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>, <span class="pl-c1">0.1</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>], <span class="pl-c1">3</span>)

<span class="pl-c1">save</span>(wave_x)
<span class="pl-c1">save</span>(wave_xy; filename<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>/home/user/scanfolder/myscan<span class="pl-pds">"</span></span>)
<span class="pl-c1">save</span>(wave_xyz; format<span class="pl-k">=</span><span class="pl-c1">:matlab</span>)

new_info_xy <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>home/user/scanfolder/myscan<span class="pl-pds">"</span></span>)

params <span class="pl-k">=</span> <span class="pl-c1">ScanParameters</span>(
    medium <span class="pl-k">=</span> <span class="pl-c1">Medium</span>(),
    excitation <span class="pl-k">=</span> <span class="pl-c1">Excitation</span>(),
    f0 <span class="pl-k">=</span> <span class="pl-c1">15e6</span>,
    hydrophone_id <span class="pl-k">=</span> <span class="pl-c1">:Onda_HGL0200_2322</span>,
    preamp_id <span class="pl-k">=</span> <span class="pl-c1">:Onda_AH2020_1238_20dB</span>,
)

new_info_xy <span class="pl-k">=</span> <span class="pl-c1">compute_metrics</span>(new_info_xy)
wave_xyz <span class="pl-k">=</span> <span class="pl-c1">compute_metrics</span>(wave_xyz, params)

<span class="pl-c1">plot</span>(wave_x)

<span class="pl-c1">plot</span>(new_info_xy)
<span class="pl-c1">plot</span>(new_info_xy; isppa<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">plot</span>(new_info_xy; ispta<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">plot</span>(new_info_xy; mi<span class="pl-k">=</span><span class="pl-c1">true</span>)

<span class="pl-c1">plot</span>(wave_xyz; xslice<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>, ispta<span class="pl-k">=</span><span class="pl-c1">true</span>, mi<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
</article></div>