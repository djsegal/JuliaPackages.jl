<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-intensityscans" class="anchor" aria-hidden="true" href="#intensityscans"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>IntensityScans</h1>
<p dir="auto"><a href="https://Orchard-Ultrasound-Innovation.github.io/IntensityScans.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://Orchard-Ultrasound-Innovation.github.io/IntensityScans.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/Orchard-Ultrasound-Innovation/IntensityScans.jl/actions"><img src="https://github.com/Orchard-Ultrasound-Innovation/IntensityScans.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://app.travis-ci.com/Orchard-Ultrasound-Innovation/IntensityScans.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/39453d8578fbd59f2b47ce2bde74403e57ac56cd3bba6c37e7a811f73da5b8fb/68747470733a2f2f6170702e7472617669732d63692e636f6d2f4f7263686172642d556c747261736f756e642d496e6e6f766174696f6e2f496e74656e736974795363616e732e6a6c2e7376673f6272616e63683d6d61696e" alt="Build Status" data-canonical-src="https://app.travis-ci.com/Orchard-Ultrasound-Innovation/IntensityScans.jl.svg?branch=main" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/Orchard-Ultrasound-Innovation/IntensityScans.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/80034fc8bbe6df890cc9036d9259dd20d3f7cdde336491621c484b31bdc2e0b9/68747470733a2f2f636f6465636f762e696f2f67682f4f7263686172642d556c747261736f756e642d496e6e6f766174696f6e2f496e74656e736974795363616e732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d4362665248475a394b34" alt="codecov" data-canonical-src="https://codecov.io/gh/Orchard-Ultrasound-Innovation/IntensityScans.jl/branch/main/graph/badge.svg?token=CbfRHGZ9K4" style="max-width: 100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<p dir="auto">This package relies on the following packages. To learn more about
configuring and using these packages:</p>
<ul dir="auto">
<li><a href="https://github.com/Orchard-Ultrasound-Innovation/ThorlabsLTStage.jl">ThorlabsLTStage</a></li>
<li><a href="https://github.com/Orchard-Ultrasound-Innovation/TcpInstruments.jl">TcpInstruments</a></li>
<li><a href="https://github.com/Orchard-Ultrasound-Innovation/HydrophoneCalibrations.jl">HydrophoneCalibrations.jl</a></li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg; Pkg.activate(&quot;.&quot;)
using IntensityScans
using IntensityScans.ThorlabsLTStage
using IntensityScans.TcpInstruments
using IntensityScans.Unitful
using Plots

# setup the positioner system and oscilloscope
ps = initialize(PositionerSystem)
scope = initialize(AgilentDSOX4034A)

scanner = IntensityScan(
    xyz = ps, 
    scope = scope, 
    channel = 1, 
    post_move_delay = 0ms,
    precapture_delay = 0µs,
)

params = ScanParameters(
    medium = Medium(),
    excitation = Excitation(),
    f0 = 5u&quot;MHz&quot;,
    hydrophone_id = :Onda_HGL0200_2322,
    preamp_id = :Onda_AH_2020_100_1238_20dB,
)

set_upper_limit(ps.z, get_pos(ps.z))
move_z_rel(ps, -5mm)
set_origin(ps)

# perform raster scans
wave_x = scan_x(scanner, [-10mm, 10mm], 5)
wave_xy = scan_xy(scanner, [-5mm, 5mm], 3, [-5mm, 5mm], 7)
wave_xyz = scan_xyz(scanner, [-5mm, 5mm], 3, [-5mm, 5mm], 3, [-5mm, 5mm], 3)

# save the data
@save &quot;test_data.jld2&quot; wave_xy params
saved_wave_xy, saved_params = IntensityScans.JLD2.load(&quot;test_data.jld2&quot;, &quot;wave_xy&quot;, &quot;params&quot;);

# calculate ultrasound metrics
metrics_xy = compute_metrics(saved_wave_xy, saved_params)
metrics_xyz = compute_metrics(wave_xyz, params)

# plot the data
plot(wave_x)
plot(metrics_xy)
plot(metrics_xy; isppa=true, ispta=true, mi=true)
plot(metrics_xyz; xslice=0mm, ispta=true, mi=true)

# teardown
terminate(ps)"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">activate</span>(<span class="pl-s"><span class="pl-pds">"</span>.<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> IntensityScans
<span class="pl-k">using</span> IntensityScans<span class="pl-k">.</span>ThorlabsLTStage
<span class="pl-k">using</span> IntensityScans<span class="pl-k">.</span>TcpInstruments
<span class="pl-k">using</span> IntensityScans<span class="pl-k">.</span>Unitful
<span class="pl-k">using</span> Plots

<span class="pl-c"><span class="pl-c">#</span> setup the positioner system and oscilloscope</span>
ps <span class="pl-k">=</span> <span class="pl-c1">initialize</span>(PositionerSystem)
scope <span class="pl-k">=</span> <span class="pl-c1">initialize</span>(AgilentDSOX4034A)

scanner <span class="pl-k">=</span> <span class="pl-c1">IntensityScan</span>(
    xyz <span class="pl-k">=</span> ps, 
    scope <span class="pl-k">=</span> scope, 
    channel <span class="pl-k">=</span> <span class="pl-c1">1</span>, 
    post_move_delay <span class="pl-k">=</span> <span class="pl-c1">0</span>ms,
    precapture_delay <span class="pl-k">=</span> <span class="pl-c1">0</span>µs,
)

params <span class="pl-k">=</span> <span class="pl-c1">ScanParameters</span>(
    medium <span class="pl-k">=</span> <span class="pl-c1">Medium</span>(),
    excitation <span class="pl-k">=</span> <span class="pl-c1">Excitation</span>(),
    f0 <span class="pl-k">=</span> <span class="pl-c1">5</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>MHz<span class="pl-pds">"</span></span>,
    hydrophone_id <span class="pl-k">=</span> <span class="pl-c1">:Onda_HGL0200_2322</span>,
    preamp_id <span class="pl-k">=</span> <span class="pl-c1">:Onda_AH_2020_100_1238_20dB</span>,
)

<span class="pl-c1">set_upper_limit</span>(ps<span class="pl-k">.</span>z, <span class="pl-c1">get_pos</span>(ps<span class="pl-k">.</span>z))
<span class="pl-c1">move_z_rel</span>(ps, <span class="pl-k">-</span><span class="pl-c1">5</span>mm)
<span class="pl-c1">set_origin</span>(ps)

<span class="pl-c"><span class="pl-c">#</span> perform raster scans</span>
wave_x <span class="pl-k">=</span> <span class="pl-c1">scan_x</span>(scanner, [<span class="pl-k">-</span><span class="pl-c1">10</span>mm, <span class="pl-c1">10</span>mm], <span class="pl-c1">5</span>)
wave_xy <span class="pl-k">=</span> <span class="pl-c1">scan_xy</span>(scanner, [<span class="pl-k">-</span><span class="pl-c1">5</span>mm, <span class="pl-c1">5</span>mm], <span class="pl-c1">3</span>, [<span class="pl-k">-</span><span class="pl-c1">5</span>mm, <span class="pl-c1">5</span>mm], <span class="pl-c1">7</span>)
wave_xyz <span class="pl-k">=</span> <span class="pl-c1">scan_xyz</span>(scanner, [<span class="pl-k">-</span><span class="pl-c1">5</span>mm, <span class="pl-c1">5</span>mm], <span class="pl-c1">3</span>, [<span class="pl-k">-</span><span class="pl-c1">5</span>mm, <span class="pl-c1">5</span>mm], <span class="pl-c1">3</span>, [<span class="pl-k">-</span><span class="pl-c1">5</span>mm, <span class="pl-c1">5</span>mm], <span class="pl-c1">3</span>)

<span class="pl-c"><span class="pl-c">#</span> save the data</span>
<span class="pl-c1">@save</span> <span class="pl-s"><span class="pl-pds">"</span>test_data.jld2<span class="pl-pds">"</span></span> wave_xy params
saved_wave_xy, saved_params <span class="pl-k">=</span> IntensityScans<span class="pl-k">.</span>JLD2<span class="pl-k">.</span><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>test_data.jld2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>wave_xy<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>params<span class="pl-pds">"</span></span>);

<span class="pl-c"><span class="pl-c">#</span> calculate ultrasound metrics</span>
metrics_xy <span class="pl-k">=</span> <span class="pl-c1">compute_metrics</span>(saved_wave_xy, saved_params)
metrics_xyz <span class="pl-k">=</span> <span class="pl-c1">compute_metrics</span>(wave_xyz, params)

<span class="pl-c"><span class="pl-c">#</span> plot the data</span>
<span class="pl-c1">plot</span>(wave_x)
<span class="pl-c1">plot</span>(metrics_xy)
<span class="pl-c1">plot</span>(metrics_xy; isppa<span class="pl-k">=</span><span class="pl-c1">true</span>, ispta<span class="pl-k">=</span><span class="pl-c1">true</span>, mi<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">plot</span>(metrics_xyz; xslice<span class="pl-k">=</span><span class="pl-c1">0</span>mm, ispta<span class="pl-k">=</span><span class="pl-c1">true</span>, mi<span class="pl-k">=</span><span class="pl-c1">true</span>)

<span class="pl-c"><span class="pl-c">#</span> teardown</span>
<span class="pl-c1">terminate</span>(ps)</pre></div>
</article></div>