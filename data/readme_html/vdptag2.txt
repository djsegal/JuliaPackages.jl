<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-vdptag2" class="anchor" aria-hidden="true" href="#vdptag2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>VDPTag2</h1>
<p><a href="https://travis-ci.org/zsunberg/VDPTag2.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2d36991bbb5af63625766c5776612b68205aa8b502bf738958fff71f14999c08/68747470733a2f2f7472617669732d63692e6f72672f7a73756e626572672f564450546167322e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/zsunberg/VDPTag2.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://coveralls.io/github/zsunberg/VDPTag2.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ee82a80dd443d563e0f0f28ca42f116818b4018f0b314f1fb0488e838a9c8e1a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f7a73756e626572672f564450546167322e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/zsunberg/VDPTag2.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/zsunberg/VDPTag2.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/e13705923ba133e8abc501a102c53c6f81deb290685fb3d630e9583e0c789edc/687474703a2f2f636f6465636f762e696f2f6769746875622f7a73756e626572672f564450546167322e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/zsunberg/VDPTag2.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>See <a href="https://github.com/zsunberg/VDPTag2.jl/tree/master/test">VDPTag2/test</a> for usage examples.</p>
<h2><a id="user-content-vdptag2-with-pomcpowjl" class="anchor" aria-hidden="true" href="#vdptag2-with-pomcpowjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>VDPTag2 with POMCPOW.jl</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using POMDPs
using POMCPOW
using POMDPModels
using POMDPSimulators
using POMDPPolicies
using VDPTag2

solver = POMCPOWSolver(criterion=MaxUCB(20.0))
pomdp = VDPTagPOMDP() # from VDPTag2
planner = solve(solver, pomdp)

hr = HistoryRecorder(max_steps=100)
hist = simulate(hr, pomdp, planner)
for (s, b, a, r, sp, o) in hist
    @show s, a, r, sp
end

rhist = simulate(hr, pomdp, RandomPolicy(pomdp))
println(&quot;&quot;&quot;
    Cumulative Discounted Reward (for 1 simulation)
        Random: $(discounted_reward(rhist))
        POMCPOW: $(discounted_reward(hist))
    &quot;&quot;&quot;)
"><pre><span class="pl-k">using</span> POMDPs
<span class="pl-k">using</span> POMCPOW
<span class="pl-k">using</span> POMDPModels
<span class="pl-k">using</span> POMDPSimulators
<span class="pl-k">using</span> POMDPPolicies
<span class="pl-k">using</span> VDPTag2

solver <span class="pl-k">=</span> <span class="pl-c1">POMCPOWSolver</span>(criterion<span class="pl-k">=</span><span class="pl-c1">MaxUCB</span>(<span class="pl-c1">20.0</span>))
pomdp <span class="pl-k">=</span> <span class="pl-c1">VDPTagPOMDP</span>() <span class="pl-c"><span class="pl-c">#</span> from VDPTag2</span>
planner <span class="pl-k">=</span> <span class="pl-c1">solve</span>(solver, pomdp)

hr <span class="pl-k">=</span> <span class="pl-c1">HistoryRecorder</span>(max_steps<span class="pl-k">=</span><span class="pl-c1">100</span>)
hist <span class="pl-k">=</span> <span class="pl-c1">simulate</span>(hr, pomdp, planner)
<span class="pl-k">for</span> (s, b, a, r, sp, o) <span class="pl-k">in</span> hist
    <span class="pl-c1">@show</span> s, a, r, sp
<span class="pl-k">end</span>

rhist <span class="pl-k">=</span> <span class="pl-c1">simulate</span>(hr, pomdp, <span class="pl-c1">RandomPolicy</span>(pomdp))
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">    Cumulative Discounted Reward (for 1 simulation)</span>
<span class="pl-s">        Random: <span class="pl-v">$(<span class="pl-c1">discounted_reward</span>(rhist))</span></span>
<span class="pl-s">        POMCPOW: <span class="pl-v">$(<span class="pl-c1">discounted_reward</span>(hist))</span></span>
<span class="pl-s">    <span class="pl-pds">"""</span></span>)</pre></div>
<p>VDPTag2 solved via <a href="https://github.com/JuliaPOMDP/POMCPOW.jl">POMCPOW.jl</a>.</p>
</article></div>