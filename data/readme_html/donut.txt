<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-donutjl" class="anchor" aria-hidden="true" href="#donutjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Donut.jl</h1>
<p>Andy Sloane's <code>donut</code> written in Julia.</p>
<blockquote>
<p><strong>Reference</strong>: <a href="https://www.a1k0n.net/2011/07/20/donut-math.html" rel="nofollow">https://www.a1k0n.net/2011/07/20/donut-math.html</a></p>
</blockquote>

<br>
<p><strong>Copy this into the Julia REPL to watch the <g-emoji class="g-emoji" alias="doughnut" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f369.png">üç©</g-emoji> spin!</strong></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="            function donut()
       A=B=1;b=Vector(undef,1760)
     z=Vector(undef,1760);println(
   &quot;\33[2J&quot;);print(&quot;\e[?25l&quot;);while true
  A+=0.07;B+=0.03;cA=cos(A);sA=sin(A);cB=
cos(B);sB=sin(B);for k = 1:length(b);b[k]=
k%80==79 ? &quot;\n&quot; : &quot; &quot;;z[k] = 0;end;for j in
range(0, step=            0.07,stop = 6.28);
ct=cos(j);st=              sin(j); for i in
range(0,step=               0.02, stop=6.28);
sp=sin(i); cp=             cos(i);h=ct+2;D=1/
(sp*h*sA+st*cA+           5);t=sp*h*cA-st*sA
 x=0|trunc(Int,40+      30*D*(cp*h*cB-t*sB))
 y=0|trunc(Int,12+15*D*(cp*h*sB+t*cB));o=x+
  80*y;N=0|trunc(Int, 8*((st*sA-sp*ct*cA)*
    cB-sp*ct*sA-st*cA-cp*ct*sB));if y&lt;22&amp;&amp;
     y&gt;=0&amp;&amp;x&gt;=0&amp;&amp;x&lt;79&amp;&amp;D&gt;z[o];z[o]=D;b[o]=
       &quot;.,-~:;=!*#\$@&quot;[N&gt;1 ? N : 1];end
         end;end;println(&quot;\033[1;1H&quot;*
            join(b));sleep(0.03)
              end;end;donut()
"><pre>            <span class="pl-k">function</span> <span class="pl-en">donut</span>()
       A<span class="pl-k">=</span>B<span class="pl-k">=</span><span class="pl-c1">1</span>;b<span class="pl-k">=</span><span class="pl-c1">Vector</span>(undef,<span class="pl-c1">1760</span>)
     z<span class="pl-k">=</span><span class="pl-c1">Vector</span>(undef,<span class="pl-c1">1760</span>);<span class="pl-c1">println</span>(
   <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\3</span>3[2J<span class="pl-pds">"</span></span>);<span class="pl-c1">print</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\e</span>[?25l<span class="pl-pds">"</span></span>);<span class="pl-k">while</span> <span class="pl-c1">true</span>
  A<span class="pl-k">+=</span><span class="pl-c1">0.07</span>;B<span class="pl-k">+=</span><span class="pl-c1">0.03</span>;cA<span class="pl-k">=</span><span class="pl-c1">cos</span>(A);sA<span class="pl-k">=</span><span class="pl-c1">sin</span>(A);cB<span class="pl-k">=</span>
<span class="pl-c1">cos</span>(B);sB<span class="pl-k">=</span><span class="pl-c1">sin</span>(B);<span class="pl-k">for</span> k <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">length</span>(b);b[k]<span class="pl-k">=</span>
k<span class="pl-k">%</span><span class="pl-c1">80</span><span class="pl-k">==</span><span class="pl-c1">79</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\n</span><span class="pl-pds">"</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span> <span class="pl-pds">"</span></span>;z[k] <span class="pl-k">=</span> <span class="pl-c1">0</span>;<span class="pl-k">end</span>;<span class="pl-k">for</span> j <span class="pl-k">in</span>
<span class="pl-c1">range</span>(<span class="pl-c1">0</span>, step<span class="pl-k">=</span>            <span class="pl-c1">0.07</span>,stop <span class="pl-k">=</span> <span class="pl-c1">6.28</span>);
ct<span class="pl-k">=</span><span class="pl-c1">cos</span>(j);st<span class="pl-k">=</span>              <span class="pl-c1">sin</span>(j); <span class="pl-k">for</span> i <span class="pl-k">in</span>
<span class="pl-c1">range</span>(<span class="pl-c1">0</span>,step<span class="pl-k">=</span>               <span class="pl-c1">0.02</span>, stop<span class="pl-k">=</span><span class="pl-c1">6.28</span>);
sp<span class="pl-k">=</span><span class="pl-c1">sin</span>(i); cp<span class="pl-k">=</span>             <span class="pl-c1">cos</span>(i);h<span class="pl-k">=</span>ct<span class="pl-k">+</span><span class="pl-c1">2</span>;D<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>
(sp<span class="pl-k">*</span>h<span class="pl-k">*</span>sA<span class="pl-k">+</span>st<span class="pl-k">*</span>cA<span class="pl-k">+</span>           <span class="pl-c1">5</span>);t<span class="pl-k">=</span>sp<span class="pl-k">*</span>h<span class="pl-k">*</span>cA<span class="pl-k">-</span>st<span class="pl-k">*</span>sA
 x<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">|</span><span class="pl-c1">trunc</span>(Int,<span class="pl-c1">40</span><span class="pl-k">+</span>      <span class="pl-c1">30</span><span class="pl-k">*</span>D<span class="pl-k">*</span>(cp<span class="pl-k">*</span>h<span class="pl-k">*</span>cB<span class="pl-k">-</span>t<span class="pl-k">*</span>sB))
 y<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">|</span><span class="pl-c1">trunc</span>(Int,<span class="pl-c1">12</span><span class="pl-k">+</span><span class="pl-c1">15</span><span class="pl-k">*</span>D<span class="pl-k">*</span>(cp<span class="pl-k">*</span>h<span class="pl-k">*</span>sB<span class="pl-k">+</span>t<span class="pl-k">*</span>cB));o<span class="pl-k">=</span>x<span class="pl-k">+</span>
  <span class="pl-c1">80</span><span class="pl-k">*</span>y;N<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">|</span><span class="pl-c1">trunc</span>(Int, <span class="pl-c1">8</span><span class="pl-k">*</span>((st<span class="pl-k">*</span>sA<span class="pl-k">-</span>sp<span class="pl-k">*</span>ct<span class="pl-k">*</span>cA)<span class="pl-k">*</span>
    cB<span class="pl-k">-</span>sp<span class="pl-k">*</span>ct<span class="pl-k">*</span>sA<span class="pl-k">-</span>st<span class="pl-k">*</span>cA<span class="pl-k">-</span>cp<span class="pl-k">*</span>ct<span class="pl-k">*</span>sB));<span class="pl-k">if</span> y<span class="pl-k">&lt;</span><span class="pl-c1">22</span><span class="pl-k">&amp;&amp;</span>
     y<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>x<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>x<span class="pl-k">&lt;</span><span class="pl-c1">79</span><span class="pl-k">&amp;&amp;</span>D<span class="pl-k">&gt;</span>z[o];z[o]<span class="pl-k">=</span>D;b[o]<span class="pl-k">=</span>
       <span class="pl-s"><span class="pl-pds">"</span>.,-~:;=!*#<span class="pl-cce">\$</span>@<span class="pl-pds">"</span></span>[N<span class="pl-k">&gt;</span><span class="pl-c1">1</span> <span class="pl-k">?</span> N <span class="pl-k">:</span> <span class="pl-c1">1</span>];<span class="pl-k">end</span>
         <span class="pl-k">end</span>;<span class="pl-k">end</span>;<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\0</span>33[1;1H<span class="pl-pds">"</span></span><span class="pl-k">*</span>
            <span class="pl-c1">join</span>(b));<span class="pl-c1">sleep</span>(<span class="pl-c1">0.03</span>)
              <span class="pl-k">end</span>;<span class="pl-k">end</span>;<span class="pl-c1">donut</span>()</pre></div>
<p>View the raw donut at <a href="https://raw.githubusercontent.com/mossr/Donut.jl/master/donut.jl" rel="nofollow"><code>donut.jl</code></a> and an unobfuscated version at <a href="https://github.com/mossr/Donut.jl/blob/master/src/donut-unobfuscated.jl"><code>donut-unobfuscated.jl</code></a>.</p>
<p><a target="_blank" rel="noopener noreferrer" href="./img/donut.gif"><img src="./img/donut.gif" style="max-width:100%;"></a></p>
<hr>
<p><a href="http://web.stanford.edu/~mossr" rel="nofollow">Robert Moss</a></p>
</article></div>