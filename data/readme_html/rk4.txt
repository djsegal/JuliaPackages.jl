<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-rk4" class="anchor" aria-hidden="true" href="#rk4"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RK4</h1>
<p dir="auto">This package implements a fairly fast Runge-Kutta 4th order with fixed stepsize.
It also implements a stochastic solver that <strong>is not</strong> technically provably accurate, but works well for finite bandwidth SDE's.</p>
<p dir="auto">Check out the examples directory for some notebooks and their corresponding <code>.jl</code> files.</p>
<p dir="auto"><a href="https://travis-ci.org/ntezak/RK4.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0e50b4018f99fe3782ceb2ce95bdeb17bbeacfe20f7eb42885a17eb0279ab58d/68747470733a2f2f7472617669732d63692e6f72672f6e74657a616b2f524b342e6a6c2e706e67" alt="Build Status" data-canonical-src="https://travis-ci.org/ntezak/RK4.jl.png" style="max-width: 100%;"></a></p>
</article></div>