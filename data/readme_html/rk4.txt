<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-rk4" class="anchor" aria-hidden="true" href="#rk4"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>RK4</h1>
<p>This package implements a fairly fast Runge-Kutta 4th order with fixed stepsize.
It also implements a stochastic solver that <strong>is not</strong> technically provably accurate, but works well for finite bandwidth SDE's.</p>
<p>Check out the examples directory for some notebooks and their corresponding <code>.jl</code> files.</p>
<p><a href="https://travis-ci.org/ntezak/RK4.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6d2566b35c297ca0649d5cd64fc50619595e6903/68747470733a2f2f7472617669732d63692e6f72672f6e74657a616b2f524b342e6a6c2e706e67" alt="Build Status" data-canonical-src="https://travis-ci.org/ntezak/RK4.jl.png" style="max-width:100%;"></a></p>
</article></div>