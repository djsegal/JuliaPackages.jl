<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://github.com/cmhamel/Exodus.jl/actions/workflows/ci.yml"><img src="https://github.com/cmhamel/Exodus.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/cmhamel/Exodus.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/cd60c55417609fe76c4b54dc20f68ff7963a3cfb482e5d9b9d76ac630f2df303/687474703a2f2f636f6465636f762e696f2f6769746875622f636d68616d656c2f45786f6475732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/cmhamel/Exodus.jl/coverage.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://cmhamel.github.io/Exodus.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-exodusjl" class="anchor" aria-hidden="true" href="#exodusjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Exodus.jl</h1>
<p dir="auto">A julia interface for accessing the ExodusII data format for large scale finite element simulations. The C library is directly called through julia ccalls.</p>
<h1 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h1>
<p dir="auto">From the package manager simply type</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="add Exodus"><pre class="notranslate"><code>add Exodus
</code></pre></div>
<h1 dir="auto"><a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Dependencies</h1>
<p dir="auto">The main dependency is Exodus_jll which has a build process that is still being worked out due to evolving changes in NetCDF_jll, HDF5_jll, and LibCURL_jll.</p>
<h1 dir="auto"><a id="user-content-read-example" class="anchor" aria-hidden="true" href="#read-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Read Example</h1>
<p dir="auto">To read in an exodusII file (typically has a .e or .exo extension) simply do the following</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="exo = ExodusDatabase(&quot;/path-to-file/file.e&quot;, &quot;r&quot;)"><pre>exo <span class="pl-k">=</span> <span class="pl-c1">ExodusDatabase</span>(<span class="pl-s"><span class="pl-pds">"</span>/path-to-file/file.e<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>r<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">This returns an ExodusDatabase container which has a single field "exo" that is a file id for this now opened exodusII database in "r" i.e. read only format. The purpose of the container is to attached various types for multiple dispatch later on as the exodusII format can switch between data types for various fields such as element connectivity in Int32 or Int64 format or nodal variables in floats or doubles.</p>
<p dir="auto">For more useful methods, one can fetch the blocks of elements as follows which contains connectivity information for different blocks of elements useful for grouping materials</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="block_ids = read_block_ids(exo)
blocks = read_blocks(exo, block_ids)"><pre>block_ids <span class="pl-k">=</span> <span class="pl-c1">read_block_ids</span>(exo)
blocks <span class="pl-k">=</span> <span class="pl-c1">read_blocks</span>(exo, block_ids)</pre></div>
<p dir="auto">For boundary conditions one can grab the nodes with the following commands</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="nset_ids = read_node_set_ids(exo)
nsets = read_node_sets(exo, nset_ids)"><pre>nset_ids <span class="pl-k">=</span> <span class="pl-c1">read_node_set_ids</span>(exo)
nsets <span class="pl-k">=</span> <span class="pl-c1">read_node_sets</span>(exo, nset_ids)</pre></div>
<p dir="auto">Full code example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Exodus
exo = ExodusDatabase(&quot;../path-to-file/file.e&quot;, &quot;r&quot;) # read only format
coords    = read_coordinates(exo) # matrix of n_nodes x n_dim
block_ids = read_block_ids(exo)
blocks    = read_blocks(exo, block_ids) # contains connectivity information
nset_ids  = read_node_set_ids(exo)
nsets     = read_node_sets(exo, nset_ids) # contains nodes on boundaries
close(exo) # cleanup"><pre><span class="pl-k">using</span> Exodus
exo <span class="pl-k">=</span> <span class="pl-c1">ExodusDatabase</span>(<span class="pl-s"><span class="pl-pds">"</span>../path-to-file/file.e<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>r<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> read only format</span>
coords    <span class="pl-k">=</span> <span class="pl-c1">read_coordinates</span>(exo) <span class="pl-c"><span class="pl-c">#</span> matrix of n_nodes x n_dim</span>
block_ids <span class="pl-k">=</span> <span class="pl-c1">read_block_ids</span>(exo)
blocks    <span class="pl-k">=</span> <span class="pl-c1">read_blocks</span>(exo, block_ids) <span class="pl-c"><span class="pl-c">#</span> contains connectivity information</span>
nset_ids  <span class="pl-k">=</span> <span class="pl-c1">read_node_set_ids</span>(exo)
nsets     <span class="pl-k">=</span> <span class="pl-c1">read_node_sets</span>(exo, nset_ids) <span class="pl-c"><span class="pl-c">#</span> contains nodes on boundaries</span>
<span class="pl-c1">close</span>(exo) <span class="pl-c"><span class="pl-c">#</span> cleanup</span></pre></div>
<h1 dir="auto"><a id="user-content-write-example" class="anchor" aria-hidden="true" href="#write-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Write Example</h1>
<p dir="auto">Coming soon...</p>
</article></div>