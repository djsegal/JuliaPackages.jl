<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-findsteadystates" class="anchor" aria-hidden="true" href="#findsteadystates"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FindSteadyStates</h1>
<p><a href="https://stevengogogo.github.io/FindSteadyStates.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a> <a href="https://codecov.io/gh/stevengogogo/FindSteadyStates.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5d2b5f77ac6aae02f9bc28bf74cebebeb4b916e479adb51312009b2cec0ae2c1/68747470733a2f2f636f6465636f762e696f2f67682f73746576656e676f676f676f2f46696e645374656164795374617465732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d654e73524c6352413639" alt="codecov" data-canonical-src="https://codecov.io/gh/stevengogogo/FindSteadyStates.jl/branch/master/graph/badge.svg?token=eNsRLcRA69" style="max-width:100%;"></a></p>
<p>Exploring the steady states of ODE in given domain.</p>
<h2><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h2>
<ol>
<li>Find steady states</li>
<li>Classify stability: stable and saddle point.</li>
</ol>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using FindSteadyStates
using DifferentialEquations

# Model
function bistable_ode!(du, u, p ,t)
    s1, s2 = u
    K1, K2, k1, k2, k3, k4, n1 , n2  = p
    du[1] = k1 / (1 + (s2/K2)^n1) - k3*s1
    du[2] = k2/  (1 + (s1/K1)^n2) - k4*s2
end

# Parameters
p_ = [1., 1., 20., 20., 5., 5.,  4., 4.]
u_1 = [3., 1.]


# Define a problem
de = DEsteady(func=bistable_ode!, p=p_, u0= u_1, method=SSRootfind())

j_gen = jacobian(de) # jacobian generator

# Searching method and domain
param_gen = ParameterGrid([
            (0.1,5.,100),
            (0.1,5.,100)
            ])

# Solve
sols = solve(de, param_gen)

# Remove similar solutions
steadies = unique(sols)

# Jacobian
jac_ms = j_gen.(steadies)

# Stability
stab_modes = StabilityType.(jac_ms)

"><pre><span class="pl-k">using</span> FindSteadyStates
<span class="pl-k">using</span> DifferentialEquations

<span class="pl-c"><span class="pl-c">#</span> Model</span>
<span class="pl-k">function</span> <span class="pl-en">bistable_ode!</span>(du, u, p ,t)
    s1, s2 <span class="pl-k">=</span> u
    K1, K2, k1, k2, k3, k4, n1 , n2  <span class="pl-k">=</span> p
    du[<span class="pl-c1">1</span>] <span class="pl-k">=</span> k1 <span class="pl-k">/</span> (<span class="pl-c1">1</span> <span class="pl-k">+</span> (s2<span class="pl-k">/</span>K2)<span class="pl-k">^</span>n1) <span class="pl-k">-</span> k3<span class="pl-k">*</span>s1
    du[<span class="pl-c1">2</span>] <span class="pl-k">=</span> k2<span class="pl-k">/</span>  (<span class="pl-c1">1</span> <span class="pl-k">+</span> (s1<span class="pl-k">/</span>K1)<span class="pl-k">^</span>n2) <span class="pl-k">-</span> k4<span class="pl-k">*</span>s2
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Parameters</span>
p_ <span class="pl-k">=</span> [<span class="pl-c1">1.</span>, <span class="pl-c1">1.</span>, <span class="pl-c1">20.</span>, <span class="pl-c1">20.</span>, <span class="pl-c1">5.</span>, <span class="pl-c1">5.</span>,  <span class="pl-c1">4.</span>, <span class="pl-c1">4.</span>]
u_1 <span class="pl-k">=</span> [<span class="pl-c1">3.</span>, <span class="pl-c1">1.</span>]


<span class="pl-c"><span class="pl-c">#</span> Define a problem</span>
de <span class="pl-k">=</span> <span class="pl-c1">DEsteady</span>(func<span class="pl-k">=</span>bistable_ode!, p<span class="pl-k">=</span>p_, u0<span class="pl-k">=</span> u_1, method<span class="pl-k">=</span><span class="pl-c1">SSRootfind</span>())

j_gen <span class="pl-k">=</span> <span class="pl-c1">jacobian</span>(de) <span class="pl-c"><span class="pl-c">#</span> jacobian generator</span>

<span class="pl-c"><span class="pl-c">#</span> Searching method and domain</span>
param_gen <span class="pl-k">=</span> <span class="pl-c1">ParameterGrid</span>([
            (<span class="pl-c1">0.1</span>,<span class="pl-c1">5.</span>,<span class="pl-c1">100</span>),
            (<span class="pl-c1">0.1</span>,<span class="pl-c1">5.</span>,<span class="pl-c1">100</span>)
            ])

<span class="pl-c"><span class="pl-c">#</span> Solve</span>
sols <span class="pl-k">=</span> <span class="pl-c1">solve</span>(de, param_gen)

<span class="pl-c"><span class="pl-c">#</span> Remove similar solutions</span>
steadies <span class="pl-k">=</span> <span class="pl-c1">unique</span>(sols)

<span class="pl-c"><span class="pl-c">#</span> Jacobian</span>
jac_ms <span class="pl-k">=</span> <span class="pl-c1">j_gen</span>.(steadies)

<span class="pl-c"><span class="pl-c">#</span> Stability</span>
stab_modes <span class="pl-k">=</span> <span class="pl-c1">StabilityType</span>.(jac_ms)
</pre></div>
<h2><a id="user-content-multi-threading" class="anchor" aria-hidden="true" href="#multi-threading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Multi-threading</h2>
<p>To enable multi-threading. One needs to set up threads outside Julia. Use the following command to start the REPL.</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="julia --threads 4 # 4 is the number of the thread you want.
"><pre>julia --threads 4 <span class="pl-c"><span class="pl-c">#</span> 4 is the number of the thread you want.</span></pre></div>
<p>review <a href="https://docs.julialang.org/en/v1/manual/multi-threading/" rel="nofollow">the Thread documentation</a> for further info.</p>
<h2><a id="user-content-methods" class="anchor" aria-hidden="true" href="#methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Methods</h2>
<h3><a id="user-content-steady-states-searching-for-differential-equations" class="anchor" aria-hidden="true" href="#steady-states-searching-for-differential-equations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Steady-states Searching for Differential equations</h3>
<p>Theoretically, The steady states of differential equations can be analtically devised by letting the derivaitatives of time equal to zero. However, in most of cases, the analyical solution of steady-states</p>
</article></div>