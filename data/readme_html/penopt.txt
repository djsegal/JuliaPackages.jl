<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-penoptjl" class="anchor" aria-hidden="true" href="#penoptjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Penopt.jl</h1>
<p dir="auto"><a href="https://github.com/jump-dev/Penopt.jl">Penopt.jl</a> is a wrapper for the
<a href="http://www.penopt.com/" rel="nofollow">Penopt Optimizer</a>.</p>
<p dir="auto">It has two components:</p>
<ul dir="auto">
<li>a thin wrapper around the complete C API</li>
<li>an interface to <a href="https://github.com/jump-dev/MathOptInterface.jl">MathOptInterface</a></li>
</ul>
<p dir="auto">The C API can be accessed via <code>Penopt.penbmi</code> functions, where the names and
arguments are identical to the C API. See the <code>/tests</code> folder for inspiration.</p>
<h2 dir="auto"><a id="user-content-affiliation" class="anchor" aria-hidden="true" href="#affiliation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Affiliation</h2>
<p dir="auto">This wrapper is maintained by the JuMP community and is not officially
supported by Penopt.</p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto"><code>Penopt.jl</code> is licensed under the <a href="https://github.com/jump-dev/Penopt.jl/blob/master/LICENSE.md">MIT License</a>.</p>
<p dir="auto">The underlying solver is a closed-source commercial product for which you must
<a href="http://www.penopt.com" rel="nofollow">purchase a license</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">You can install <code>Penopt.jl</code> through the
<a href="https://docs.julialang.org/en/v1/stdlib/Pkg/index.html" rel="nofollow">Julia package manager</a>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add https://github.com/jump-dev/Penopt.jl.git"><pre>] add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>jump<span class="pl-k">-</span>dev<span class="pl-k">/</span>Penopt<span class="pl-k">.</span>jl<span class="pl-k">.</span>git</pre></div>
<p dir="auto">then, open a terminal in the directory when Penopt is installed (find this
directory by writing <code>using Penopt; pathof(Penopt)</code> in a Julia session).</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="$ mkdir -p deps/usr/lib
$ cd deps/usr/lib
$ gcc  -Wl,--no-undefined -shared -lm -lgfortran -lopenblas -llapack -o libpenbmi.so -Wl,--whole-archive /path/to/PENBMI2.1/lib/libpenbmi.a -Wl,--no-whole-archive"><pre lang="raw" class="notranslate"><code>$ mkdir -p deps/usr/lib
$ cd deps/usr/lib
$ gcc  -Wl,--no-undefined -shared -lm -lgfortran -lopenblas -llapack -o libpenbmi.so -Wl,--whole-archive /path/to/PENBMI2.1/lib/libpenbmi.a -Wl,--no-whole-archive
</code></pre></div>
<p dir="auto">This will create a shared library <code>libpenbmi.so</code> in the directory <code>deps/usr/lib</code>.
Then create the following file <code>deps/deps.jl</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import Libdl
const libpenbmi = joinpath(dirname(@__FILE__), &quot;usr/lib/libpenbmi.so&quot;)
function check_deps()
    global libpenbmi
    if !isfile(libpenbmi)
        error(&quot;$(libpenbmi) does not exist, Please re-run Pkg.build(\&quot;Penopt\&quot;), and restart Julia.&quot;)
    end

    if Libdl.dlopen_e(libpenbmi) == C_NULL
        error(&quot;$(libpenbmi) cannot be opened, Please re-run Pkg.build(\&quot;Penopt\&quot;), and restart Julia.&quot;)
    end

end"><pre><span class="pl-k">import</span> Libdl
<span class="pl-k">const</span> libpenbmi <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">@__FILE__</span>), <span class="pl-s"><span class="pl-pds">"</span>usr/lib/libpenbmi.so<span class="pl-pds">"</span></span>)
<span class="pl-k">function</span> <span class="pl-en">check_deps</span>()
    <span class="pl-k">global</span> libpenbmi
    <span class="pl-k">if</span> <span class="pl-k">!</span><span class="pl-c1">isfile</span>(libpenbmi)
        <span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(libpenbmi)</span> does not exist, Please re-run Pkg.build(<span class="pl-cce">\"</span>Penopt<span class="pl-cce">\"</span>), and restart Julia.<span class="pl-pds">"</span></span>)
    <span class="pl-k">end</span>

    <span class="pl-k">if</span> Libdl<span class="pl-k">.</span><span class="pl-c1">dlopen_e</span>(libpenbmi) <span class="pl-k">==</span> <span class="pl-c1">C_NULL</span>
        <span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(libpenbmi)</span> cannot be opened, Please re-run Pkg.build(<span class="pl-cce">\"</span>Penopt<span class="pl-cce">\"</span>), and restart Julia.<span class="pl-pds">"</span></span>)
    <span class="pl-k">end</span>

<span class="pl-k">end</span></pre></div>
<p dir="auto">You can test the installation with <code>using Pkg; Pkg.test("Penopt")</code> in a Julia
session.</p>
<h2 dir="auto"><a id="user-content-use-with-jump" class="anchor" aria-hidden="true" href="#use-with-jump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Use with JuMP</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JuMP, Penopt
model = Model(Penopt.Optimizer)
set_attribute(model, &quot;PBM_MAX_ITER&quot;, 100)
set_attribute(model, &quot;TR_MODE&quot;, 1)"><pre><span class="pl-k">using</span> JuMP, Penopt
model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(Penopt<span class="pl-k">.</span>Optimizer)
<span class="pl-c1">set_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>PBM_MAX_ITER<span class="pl-pds">"</span></span>, <span class="pl-c1">100</span>)
<span class="pl-c1">set_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>TR_MODE<span class="pl-pds">"</span></span>, <span class="pl-c1">1</span>)</pre></div>
<h2 dir="auto"><a id="user-content-options" class="anchor" aria-hidden="true" href="#options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Options</h2>
<p dir="auto">See the <a href="http://www.penopt.com/doc/penbmi2_1.pdf" rel="nofollow">Penbmi Documentation</a>
for a list and description of allowable parameters.</p>
<h2 dir="auto"><a id="user-content-accessing-penopt-specific-attributes-via-jump" class="anchor" aria-hidden="true" href="#accessing-penopt-specific-attributes-via-jump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Accessing Penopt-specific attributes via JuMP</h2>
<p dir="auto">You can get and set Penopt-specific attributes via JuMP as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@show MOI.get(model, Penopt.NumberOfOuterIterations())
@show MOI.get(model, Penopt.NumberOfNewtonSteps())
@show MOI.get(model, Penopt.NumberOfLinesearchSteps())"><pre><span class="pl-c1">@show</span> MOI<span class="pl-k">.</span><span class="pl-c1">get</span>(model, Penopt<span class="pl-k">.</span><span class="pl-c1">NumberOfOuterIterations</span>())
<span class="pl-c1">@show</span> MOI<span class="pl-k">.</span><span class="pl-c1">get</span>(model, Penopt<span class="pl-k">.</span><span class="pl-c1">NumberOfNewtonSteps</span>())
<span class="pl-c1">@show</span> MOI<span class="pl-k">.</span><span class="pl-c1">get</span>(model, Penopt<span class="pl-k">.</span><span class="pl-c1">NumberOfLinesearchSteps</span>())</pre></div>
</article></div>