<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://travis-ci.com/mewertd2/Blades.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/19d60222fc69e30673df91d0932084b38c5dc7de/68747470733a2f2f7472617669732d63692e636f6d2f6d657765727464322f426c616465732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/mewertd2/Blades.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/github/mewertd2/Blades.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/8703b80302ca2a65e1e2d923ed8b6c80935a33bc/68747470733a2f2f636f6465636f762e696f2f6769746875622f6d657765727464322f426c616465732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/mewertd2/Blades.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h1><a id="user-content-note--this-package-is-no-longer-maintained--all-the-types-and-methods-have-been-moved-to-the-multivectorsjl-package" class="anchor" aria-hidden="true" href="#note--this-package-is-no-longer-maintained--all-the-types-and-methods-have-been-moved-to-the-multivectorsjl-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Note:  this package is no longer maintained.  All the Types and methods have been moved to the <a href="https://github.com/digitaldomain/Multivectors.jl">Multivectors.jl</a> Package.</h1>
<h1><a id="user-content-blades" class="anchor" aria-hidden="true" href="#blades"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Blades</h1>
<p>The <code>Blades</code> <a href="http://julialang.org" rel="nofollow">Julia</a> package defines the <code>Blade</code> Type
to represent <a href="https://en.wikipedia.org/wiki/Blade_(geometry)" rel="nofollow">k-blades</a>, and
supports a number of mathematical operations on them.</p>
<p>Both non-euclidean and degenerate metrics are supported as well as the standard euclidean metric.
This makes it suitable for implementing a wide range of algebras based on graded exterior products.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Geometric_algebra" rel="nofollow">Geometric Algebra</a></li>
<li><a href="https://en.wikipedia.org/wiki/Exterior_algebra" rel="nofollow">Exterior Algebra</a></li>
<li><a href="https://en.wikipedia.org/wiki/Clifford_algebra" rel="nofollow">Clifford Algebra</a></li>
</ul>
<p>This document attempts to be a somewhat self-contained description of the algebra implemented in the package.  It is recommended to find more complete tutorials or learning materials on Geometric Algebra.</p>
<h2><a id="user-content-generating-types" class="anchor" aria-hidden="true" href="#generating-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Generating Types</h2>
<p>Blade Types with an associated algebra are generated by calling the macro <code>@generate_basis(s)</code> where <code>s</code> is a character string encoding the desired metric for each generating 1-vector of the algebra.</p>
<pre><code>julia&gt; @generate_basis("+++")

julia&gt; show_basis()
UnionAll[e‚ÇÅ, e‚ÇÇ, e‚ÇÉ, e‚ÇÅ‚ÇÇ, e‚ÇÅ‚ÇÉ, e‚ÇÇ‚ÇÉ, e‚ÇÅ‚ÇÇ‚ÇÉ]
</code></pre>
<p>e‚ÇÅ, e‚ÇÇ, e‚ÇÉ are the generating basis 1-vectors that are combined together with the wedge product, <code>‚àß</code> to form basis vectors of higher grades.<br>
‚àß is like the cross product but generates (hyper)planes/volumes of any dimension rather than the normal to a plane in 3D.</p>
<pre><code>e·µ¢‚àße‚±º = 0     when i == j
e·µ¢‚àße‚±º = e·µ¢‚±º   when i &lt; j
e·µ¢‚àße‚±º = -e·µ¢‚±º   when i &gt; j
</code></pre>
<p>This completely specifies all subspace spanning k-vectors of the space.</p>
<p>Generate all possible combinations of wedge products starting with our orthogonal 1-vectors:</p>
<pre><code>julia&gt; abs.([e·µ¢‚àße‚±º for e·µ¢ in [1e‚ÇÅ, 1e‚ÇÇ, 1e‚ÇÉ] for e‚±º in [1e‚ÇÅ, 1e‚ÇÇ, 1e‚ÇÉ]]) |&gt; unique |&gt; c-&gt;filter(!iszero,c)
3-element Array{Number,1}:
 1e‚ÇÅ‚ÇÇ
 1e‚ÇÅ‚ÇÉ
 1e‚ÇÇ‚ÇÉ

julia&gt; abs.([e·µ¢‚àße‚±º for e·µ¢ in [1e‚ÇÅ, 1e‚ÇÇ, 1e‚ÇÉ] for e‚±º in ans]) |&gt; unique |&gt; c-&gt;filter(!iszero,c)
1-element Array{Number,1}:
 1e‚ÇÅ‚ÇÇ‚ÇÉ

julia&gt; abs.([e·µ¢‚àße‚±º for e·µ¢ in [1e‚ÇÅ, 1e‚ÇÇ, 1e‚ÇÉ] for e‚±º in ans]) |&gt; unique |&gt; c-&gt;filter(!iszero,c)
0-element Array{Int64,1}
</code></pre>
<p>The highest grade blade is known as the pseudoscalar, often written as <code>I</code>.</p>
<p>The <code>grade(b)</code> of a blade is the dimensionality of the subspace spanned by the k-blade.  Same number as 'k' in k-blade, also the count of the number of indices in the Blade Type.</p>
<pre><code>julia&gt; ùêº = 1e‚ÇÅ‚ÇÇ‚ÇÉ; grade(ùêº) == length(subspace(ùêº)) == 3
true

julia&gt; e‚ÇÅ‚ÇÇ‚ÇÉ &lt;: Blade{T,3} where T
true
</code></pre>
<p>Since the wedge product anti-commutes, the same basis k-blades can combine in two ways which have a differing sense of orientation.  Note, Blades always orders k-blades indices in ascending manner.</p>
<pre><code>julia&gt; 1e‚ÇÅ‚àß1e‚ÇÉ
1e‚ÇÅ‚ÇÉ

julia&gt; 1e‚ÇÉ‚àß1e‚ÇÅ
-1e‚ÇÅ‚ÇÉ
</code></pre>
<h2><a id="user-content-metric" class="anchor" aria-hidden="true" href="#metric"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Metric</h2>
<p>The metric defines the result when we operate on a given basis pair with an inner product. Also refered to as the quadratic form for the algebra.</p>
<p>Create an algebra with all 3 kinds of metrics, take all inner products.  Note the result on the diagonal:</p>
<pre><code>julia&gt; module ProjectivizedSpaceTime
  using Blades
  @generate_basis("0-+++")
end

julia&gt; g‚ÇÅ,g‚ÇÇ,g‚ÇÉ,g‚ÇÑ,g‚ÇÖ = alle(ProjectivizedSpaceTime,5)[1:5]

julia&gt; unitg = one.([g‚ÇÅ,g‚ÇÇ,g‚ÇÉ,g‚ÇÑ,g‚ÇÖ]) 

julia&gt; reshape([g·µ¢‚ãÖg‚±º for g·µ¢ in unitg for g‚±º in unitg],(5,5))
5√ó5 Array{Int64,2}:
 0   0  0  0  0
 0  -1  0  0  0
 0   0  1  0  0
 0   0  0  1  0
 0   0  0  0  1
</code></pre>
<h2><a id="user-content-inner-product" class="anchor" aria-hidden="true" href="#inner-product"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Inner Product</h2>
<p>The inner product, <code>‚ãÖ</code>, choosen for Blades is the left contraction.  For 1-blades it is the same as that used in vector algebra.  This suffices for use in defining our quadratic form.<br>
When blades of grade &gt; 1 are involved it is not, in general, commutative, or even associative.</p>
<pre><code>julia&gt; a = 1e‚ÇÅ; b = 1e‚ÇÇ; c = 1e‚ÇÉ
1e‚ÇÉ

julia&gt; B = a‚àßb
1e‚ÇÅ‚ÇÇ

julia&gt; a‚ãÖB
1e‚ÇÇ

julia&gt; B‚ãÖa
0

julia&gt; a‚ãÖ(b‚ãÖB)
-1

julia&gt; (a‚ãÖb)‚ãÖB
0e‚ÇÅ‚ÇÇ
</code></pre>
<p>We could expand the algebra with the geometric product <code>u*B = u‚àßB + u‚ãÖB</code>.
Where <code>u</code> is restricted to be 1-vector, due to non-commutativity/associativity of <code>‚ãÖ</code>.</p>
<p>The geometric product, addition and other operators on blades are better defined in a more general manner once we have Types for k-vectors and multivectors defined.</p>
<p>These Types and operators are defined in the <a href="https://github.com/mewertd2/KVectors.jl">KVectors</a> and <a href="https://github.com/mewertd2/Multivectors.jl">Multivectors</a> packages.</p>
<p>If we wished to we could define only addition of Blades with zero to complete our algebra of simple k-vectors ( blades ).</p>
<pre><code>julia&gt; Base.:+(a::B, b::Number) where {B&lt;:Blade} = iszero(b) ? a : (a,b)

julia&gt; Base.:+(a::Number, b::B) where {B&lt;:Blade} = b+a
</code></pre>
<p>Afer defining these operators we could go back in this document and replace occurences of <code>‚àß</code> and <code>‚ãÖ</code> with <code>*</code> to generate the k-blades and metric results using the geometric product.</p>
<p>Blades does define the geometric product without the need of the <code>+</code> operator since only one of <code>u‚àßB</code> or <code>v‚ãÖB</code> is ever non-zero.  This fact expresses the geometric relationship of parallel and orthogonal vectors.</p>
<h2><a id="user-content-the-dualorthogonal-complement" class="anchor" aria-hidden="true" href="#the-dualorthogonal-complement"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>The Dual/Orthogonal-Complement</h2>
<p>A k-blade is a blade of grade k.  For any k-blade spanning a subspace of dimension k in vector space of dimension n, there exists an (n-k)-blade that represents the same object.  This object is known as it's dual.</p>
<p>The orthogonal complement is very similar in that it is a map from a k-blade to an (n-k)-blade.  Assuming the metric is non-degenerate.  The difference is that the target space of the orthogonal complement is the same as the domain.  For the dual it is better to think of the target space as not being the same space as the domain.  The dual maps a geometric object to the same object in dual space.</p>
<p>Dual space is a very important concept in Projectivized Geometric Algebra.
Blades optionally can generate a set of Types with raised indices if you wish to explicitly track which space you are in.</p>
<p>Both the notion of a metric dual and a non-metric dual are represented in Blades.
For a non-degenerate metric ( no 1-vectors square to 0 ) the <code>dual</code> method is an alias for <code>orthogonal_complement</code>, <code>‚üÇ</code>, or <code>!</code>.</p>
<p>Defined as <code>!A = A*I‚Åª¬π</code> where <code>I‚Åª¬π</code> is the inverse of the pseudoscalar.</p>
<p>It is prefered to not use <code>dual</code> if what you really want is the orthogonal complement.</p>
<p><code>inv</code> the inverse operator is defined by <code>inv(B) = reverse(B)/(B*reverse(B))</code></p>
<p><code>reverse</code> reverses the order of the generating 1-blades for the given Blade.  Generally you end up with the same Blade, possibly with a sign (orientation) flip.</p>
<p>Since the inverse of the pseudoscalar does not exist when the metric is degenerate ( <code>I*reverse(I) == 0</code>), we need an alternative mapping.</p>
<p>In the case of a degenerate metric, <code>dual</code> is a mapping to/from projectivized dual space and primal space.  This is done with a non-metric duality mapping that chooses a non-zero orthogonal complement in the dual space.</p>
<p>Both <code>dual</code> and <code>‚üÇ</code> can be thought of as taking a Blade to it's "other" space.  e.g. plane to normal vector.</p>
<pre><code>julia&gt; cross(a,b) = !(a‚àßb)
cross (generic function with 1 method)

julia&gt; cross(1e‚ÇÅ,1e‚ÇÇ)
1e‚ÇÉ
</code></pre>
<h2><a id="user-content-reciprocal-bases-and-raised-indices" class="anchor" aria-hidden="true" href="#reciprocal-bases-and-raised-indices"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Reciprocal Bases and Raised Indices</h2>
<p>Raised indices can also be used to represent what is often called the reciprocal basis.  The reciprocal basis is useful for geometry and calculus on curved surfaces.  The reciprocal basis is meant to be independent of the metric when applied to a k-blade with lowered indices.</p>
<pre><code>e·µ¢‚ãÖe ≤ = Œ¥·µ¢‚±º
</code></pre>
<p>In this case you want to call <code>@generate_basis</code> with options for reciprocal basis and zeroing mixed indices set to <code>true</code>.</p>
<h2><a id="user-content-julia-spelling-for-symbols-used-in-blades" class="anchor" aria-hidden="true" href="#julia-spelling-for-symbols-used-in-blades"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Julia spelling for symbols used in Blades</h2>
<p>To enter these sybols into the Julia REPL or a Julia enabled editor.</p>
<ul>
<li><code>e‚ÇÅ</code> : e\_1[Tab]</li>
<li><code>e‚ÇÅ‚ÇÇ</code> : e\_1[Tab]\_2[Tab]</li>
<li><code>‚àß</code> : \wedge[Tab]</li>
<li><code>‚üÇ</code> : \perp[Tab]</li>
<li><code>‚ãÖ</code> : \cdot[Tab]</li>
<li><code>‚ãÜ</code> : \star[Tab]</li>
</ul>
<h2><a id="user-content-k-vectors-and-multivectors" class="anchor" aria-hidden="true" href="#k-vectors-and-multivectors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>K-Vectors and Multivectors</h2>
<p>Simple blades alone are not terribly useful.  For applications in geometry and simulation you will want to use packages built on Blades.</p>
<ul>
<li><a href="https://github.com/mewertd2/KVectors.jl">KVectors</a></li>
<li><a href="https://github.com/mewertd2/Multivectors.jl">Multivectors</a></li>
</ul>
<h2><a id="user-content-project-information" class="anchor" aria-hidden="true" href="#project-information"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Project Information</h2>
<h3><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing</h3>
<p>Please read <a href="./CONTRIBUTING.md">CONTRIBUTING.md</a> for details.</p>
<h3><a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Authors</h3>
<ul>
<li><strong>Michael Alexander Ewert</strong> - Developer - <a href="https://digitaldomain.com" rel="nofollow">Digital Domain</a></li>
</ul>
<h3><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h3>
<p>This project is licensed under a modified Apache 2.0 license - see the <a href="./LICENSE">LICENSE</a> file for details</p>
</article></div>