<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-experienceanalysis" class="anchor" aria-hidden="true" href="#experienceanalysis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ExperienceAnalysis</h1>
<p dir="auto"><a href="https://JuliaActuary.github.io/ExperienceAnalysis.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://JuliaActuary.github.io/ExperienceAnalysis.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaActuary/LifeContingencies.jl/workflows/CI/badge.svg"><img src="https://github.com/JuliaActuary/LifeContingencies.jl/workflows/CI/badge.svg" alt="" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaActuary/ExperienceAnalysis.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6b4d9594a85ca7609e98d48c103ea6253617146b6d7b529a7f958947766a28d1/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961416374756172792f457870657269656e6365416e616c797369732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaActuary/ExperienceAnalysis.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://www.tidyverse.org/lifecycle/" rel="nofollow"><img src="https://camo.githubusercontent.com/1a3d36a0843e12ed91c0fb2dc987d64be584df3e1475c75bfb0e0fb0f32e4b42/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6966654379636c652d446576656c6f70696e672d626c756c65" alt="lifecycle" data-canonical-src="https://img.shields.io/badge/LifeCycle-Developing-blule" style="max-width: 100%;"></a></p>
<p dir="auto">Calculate exposures.</p>
<h2 dir="auto"><a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quickstart</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ExperienceAnalysis
using DataFrames
using Dates

df = DataFrame(
    policy_id = 1:3,
    issue_date = [Date(2020,5,10), Date(2020,4,5), Date(2019, 3, 10)],
    termination_date = [Date(2022, 6, 10), Date(2022, 8, 10), nothing],
    status = [&quot;claim&quot;, &quot;lapse&quot;, &quot;inforce&quot;]
)

df.policy_year = exposure.(
    ExperienceAnalysis.Anniversary(Year(1)),
    df.issue_date,
    df.termination_date,
    df.status .== &quot;claim&quot;; # continued exposure
    study_start = Date(2020, 1, 1),
    study_end = Date(2022, 12, 31)
)

df = flatten(df, :policy_year)

df.exposure_fraction =
        map(e -&gt; yearfrac(e.from, e.to + Day(1), DayCounts.Thirty360()), df.policy_year) 
# + Day(1) above because DayCounts has Date(2020, 1, 1) to Date(2021, 1, 1) as an exposure of 1.0
# here we end the interval at Date(2020, 12, 31), so we need to add a day to get the correct exposure fraction."><pre><span class="pl-k">using</span> ExperienceAnalysis
<span class="pl-k">using</span> DataFrames
<span class="pl-k">using</span> Dates

df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(
    policy_id <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>,
    issue_date <span class="pl-k">=</span> [<span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>), <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>), <span class="pl-c1">Date</span>(<span class="pl-c1">2019</span>, <span class="pl-c1">3</span>, <span class="pl-c1">10</span>)],
    termination_date <span class="pl-k">=</span> [<span class="pl-c1">Date</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">6</span>, <span class="pl-c1">10</span>), <span class="pl-c1">Date</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">8</span>, <span class="pl-c1">10</span>), <span class="pl-c1">nothing</span>],
    status <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>claim<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>lapse<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>inforce<span class="pl-pds">"</span></span>]
)

df<span class="pl-k">.</span>policy_year <span class="pl-k">=</span> <span class="pl-c1">exposure</span>.(
    ExperienceAnalysis<span class="pl-k">.</span><span class="pl-c1">Anniversary</span>(<span class="pl-c1">Year</span>(<span class="pl-c1">1</span>)),
    df<span class="pl-k">.</span>issue_date,
    df<span class="pl-k">.</span>termination_date,
    df<span class="pl-k">.</span>status <span class="pl-k">.==</span> <span class="pl-s"><span class="pl-pds">"</span>claim<span class="pl-pds">"</span></span>; <span class="pl-c"><span class="pl-c">#</span> continued exposure</span>
    study_start <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>),
    study_end <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">12</span>, <span class="pl-c1">31</span>)
)

df <span class="pl-k">=</span> <span class="pl-c1">flatten</span>(df, <span class="pl-c1">:policy_year</span>)

df<span class="pl-k">.</span>exposure_fraction <span class="pl-k">=</span>
        <span class="pl-c1">map</span>(e <span class="pl-k">-&gt;</span> <span class="pl-c1">yearfrac</span>(e<span class="pl-k">.</span>from, e<span class="pl-k">.</span>to <span class="pl-k">+</span> <span class="pl-c1">Day</span>(<span class="pl-c1">1</span>), DayCounts<span class="pl-k">.</span><span class="pl-c1">Thirty360</span>()), df<span class="pl-k">.</span>policy_year) 
<span class="pl-c"><span class="pl-c">#</span> + Day(1) above because DayCounts has Date(2020, 1, 1) to Date(2021, 1, 1) as an exposure of 1.0</span>
<span class="pl-c"><span class="pl-c">#</span> here we end the interval at Date(2020, 12, 31), so we need to add a day to get the correct exposure fraction.</span></pre></div>
<table>
<thead>
<tr>
<th>policy_id</th>
<th>issue_date</th>
<th>termination_date</th>
<th>status</th>
<th>policy_year</th>
<th>exposure_fraction</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>2020-05-10</td>
<td>2022-06-10</td>
<td>claim</td>
<td>(from = Date("2020-05-10"), to = Date("2021-05-09"), policy_timestep = 1)</td>
<td>1.0</td>
</tr>
<tr>
<td>1</td>
<td>2020-05-10</td>
<td>2022-06-10</td>
<td>claim</td>
<td>(from = Date("2021-05-10"), to = Date("2022-05-09"), policy_timestep = 2)</td>
<td>1.0</td>
</tr>
<tr>
<td>1</td>
<td>2020-05-10</td>
<td>2022-06-10</td>
<td>claim</td>
<td>(from = Date("2022-05-10"), to = Date("2023-05-09"), policy_timestep = 3)</td>
<td>1.0</td>
</tr>
<tr>
<td>2</td>
<td>2020-04-05</td>
<td>2022-08-10</td>
<td>lapse</td>
<td>(from = Date("2020-04-05"), to = Date("2021-04-04"), policy_timestep = 1)</td>
<td>1.0</td>
</tr>
<tr>
<td>2</td>
<td>2020-04-05</td>
<td>2022-08-10</td>
<td>lapse</td>
<td>(from = Date("2021-04-05"), to = Date("2022-04-04"), policy_timestep = 2)</td>
<td>1.0</td>
</tr>
<tr>
<td>2</td>
<td>2020-04-05</td>
<td>2022-08-10</td>
<td>lapse</td>
<td>(from = Date("2022-04-05"), to = Date("2022-08-10"), policy_timestep = 3)</td>
<td>0.35</td>
</tr>
<tr>
<td>3</td>
<td>2019-03-10</td>
<td></td>
<td>inforce</td>
<td>(from = Date("2020-01-01"), to = Date("2020-03-09"), policy_timestep = 1)</td>
<td>0.191667</td>
</tr>
<tr>
<td>3</td>
<td>2019-03-10</td>
<td></td>
<td>inforce</td>
<td>(from = Date("2020-03-10"), to = Date("2021-03-09"), policy_timestep = 2)</td>
<td>1.0</td>
</tr>
<tr>
<td>3</td>
<td>2019-03-10</td>
<td></td>
<td>inforce</td>
<td>(from = Date("2021-03-10"), to = Date("2022-03-09"), policy_timestep = 3)</td>
<td>1.0</td>
</tr>
<tr>
<td>3</td>
<td>2019-03-10</td>
<td></td>
<td>inforce</td>
<td>(from = Date("2022-03-10"), to = Date("2022-12-31"), policy_timestep = 4)</td>
<td>0.808333</td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-discussion-and-questions" class="anchor" aria-hidden="true" href="#discussion-and-questions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Discussion and Questions</h2>
<p dir="auto">If you have other ideas or questions, feel free to also open an issue, or discuss on the community <a href="https://julialang.zulipchat.com/#narrow/stream/249536-actuary" rel="nofollow">Zulip</a> or <a href="https://slackinvite.julialang.org/" rel="nofollow">Slack #actuary channel</a>. We welcome all actuarial and related disciplines!</p>
<h3 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h3>
<ul dir="auto">
<li><a href="https://www.soa.org/globalassets/assets/files/research/experience-study-calculations.pdf" rel="nofollow">Experience Study Calculations</a> by the Society of Actuaries</li>
</ul>
<h3 dir="auto"><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related Packages</h3>
<ul dir="auto">
<li><a href="https://github.com/mattheaphy/actxps/">actxps</a>, an R package</li>
</ul>
<h1 dir="auto"><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>API</h1>
<p dir="auto">The exposure function has the following type signature for Anniversary exposures:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function exposure(
    p::Anniversary,
    from::Date,
    to::Union{Date,Nothing},
    continued_exposure::Bool = false;
    study_start::Union{Date,Nothing} = nothing,
    study_end::Date,
    left_partials::Bool = false,
    right_partials::Bool = true,
)::Vector{NamedTuple{(:from, :to, :policy_timestep),Tuple{Date,Date,Int}}}"><pre><span class="pl-k">function</span> <span class="pl-en">exposure</span>(
    p<span class="pl-k">::</span><span class="pl-c1">Anniversary</span>,
    from<span class="pl-k">::</span><span class="pl-c1">Date</span>,
    to<span class="pl-k">::</span><span class="pl-c1">Union{Date,Nothing}</span>,
    continued_exposure<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>;
    study_start<span class="pl-k">::</span><span class="pl-c1">Union{Date,Nothing}</span> <span class="pl-k">=</span> <span class="pl-c1">nothing</span>,
    study_end<span class="pl-k">::</span><span class="pl-c1">Date</span>,
    left_partials<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>,
    right_partials<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>,
)<span class="pl-k">::</span><span class="pl-c1">Vector{NamedTuple{(:from, :to, :policy_timestep),Tuple{Date,Date,Int}}}</span></pre></div>
<h2 dir="auto"><a id="user-content-p-exposure-basis" class="anchor" aria-hidden="true" href="#p-exposure-basis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>p, Exposure Basis</h2>
<h3 dir="auto"><a id="user-content-anniversary" class="anchor" aria-hidden="true" href="#anniversary"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Anniversary</h3>
<p dir="auto"><code>ExperienceAnalysis.Anniversary(DatePeriod)</code> will give exposures periods based on the first date. Exposure intervals will fall on annniversaries, <code>start_date + t * dateperiod</code>.
<code>DatePeriod</code> is a <a href="https://github.com/JuliaLang/julia/blob/master/stdlib/Dates/src/types.jl#L35">DatePeriod Type from the Dates standard library</a>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="exposure(
    ExperienceAnalysis.Anniversary(Year(1)), # basis
    Date(2020,5,10),                         # from
    Date(2022, 6, 10);                       # to
    study_start = Date(2020, 1, 1),
    study_end = Date(2022, 12, 31)
)
# returns
# 3-element Vector{NamedTuple{(:from, :to, :policy_timestep), Tuple{Date, Date, Int64}}}:
#  (from = Date(&quot;2020-05-10&quot;), to = Date(&quot;2021-05-09&quot;), policy_timestep = 1)
#  (from = Date(&quot;2021-05-10&quot;), to = Date(&quot;2022-05-09&quot;), policy_timestep = 2)
#  (from = Date(&quot;2022-05-10&quot;), to = Date(&quot;2022-06-10&quot;), policy_timestep = 3)"><pre><span class="pl-c1">exposure</span>(
    ExperienceAnalysis<span class="pl-k">.</span><span class="pl-c1">Anniversary</span>(<span class="pl-c1">Year</span>(<span class="pl-c1">1</span>)), <span class="pl-c"><span class="pl-c">#</span> basis</span>
    <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>),                         <span class="pl-c"><span class="pl-c">#</span> from</span>
    <span class="pl-c1">Date</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">6</span>, <span class="pl-c1">10</span>);                       <span class="pl-c"><span class="pl-c">#</span> to</span>
    study_start <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>),
    study_end <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">12</span>, <span class="pl-c1">31</span>)
)
<span class="pl-c"><span class="pl-c">#</span> returns</span>
<span class="pl-c"><span class="pl-c">#</span> 3-element Vector{NamedTuple{(:from, :to, :policy_timestep), Tuple{Date, Date, Int64}}}:</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2020-05-10"), to = Date("2021-05-09"), policy_timestep = 1)</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2021-05-10"), to = Date("2022-05-09"), policy_timestep = 2)</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2022-05-10"), to = Date("2022-06-10"), policy_timestep = 3)</span></pre></div>
<h3 dir="auto"><a id="user-content-calendar" class="anchor" aria-hidden="true" href="#calendar"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Calendar</h3>
<p dir="auto"><code>ExperienceAnalysis.Calendar(DatePeriod)</code> will follow calendar periods (e.g. month or year). Quarterly exposures can be created with <code>Month(3)</code>, the number of months should divide 12.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="exposure(
    ExperienceAnalysis.Calendar(Year(1)), # basis
    Date(2020,5,10),                      # from
    Date(2022, 6, 10);                    # to
    study_start = Date(2020, 1, 1),
    study_end = Date(2022, 12, 31)
)
# returns
# 3-element Vector{NamedTuple{(:from, :to), Tuple{Date, Date}}}:
#  (from = Date(&quot;2020-05-10&quot;), to = Date(&quot;2020-12-31&quot;))
#  (from = Date(&quot;2021-01-01&quot;), to = Date(&quot;2021-12-31&quot;))
#  (from = Date(&quot;2022-01-01&quot;), to = Date(&quot;2022-06-10&quot;))"><pre><span class="pl-c1">exposure</span>(
    ExperienceAnalysis<span class="pl-k">.</span><span class="pl-c1">Calendar</span>(<span class="pl-c1">Year</span>(<span class="pl-c1">1</span>)), <span class="pl-c"><span class="pl-c">#</span> basis</span>
    <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>),                      <span class="pl-c"><span class="pl-c">#</span> from</span>
    <span class="pl-c1">Date</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">6</span>, <span class="pl-c1">10</span>);                    <span class="pl-c"><span class="pl-c">#</span> to</span>
    study_start <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>),
    study_end <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">12</span>, <span class="pl-c1">31</span>)
)
<span class="pl-c"><span class="pl-c">#</span> returns</span>
<span class="pl-c"><span class="pl-c">#</span> 3-element Vector{NamedTuple{(:from, :to), Tuple{Date, Date}}}:</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2020-05-10"), to = Date("2020-12-31"))</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2021-01-01"), to = Date("2021-12-31"))</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2022-01-01"), to = Date("2022-06-10"))</span></pre></div>
<h3 dir="auto"><a id="user-content-anniversarycalendar" class="anchor" aria-hidden="true" href="#anniversarycalendar"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AnniversaryCalendar</h3>
<p dir="auto"><code>ExperienceAnalysis.AnniversaryCalendar(DatePeriod,DatePeriod)</code> will split into the smaller of the calendar or policy anniversary period. We can ensure that each exposure interval entirely falls within a single calendar year.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="exposure(
    ExperienceAnalysis.AnniversaryCalendar(Year(1), Year(1)), # basis
    Date(2020,5,10),                                          # from
    Date(2022, 6, 10);                                        # to
    study_start = Date(2020, 1, 1),
    study_end = Date(2022, 12, 31)
)
# returns
# 5-element Vector{NamedTuple{(:from, :to, :policy_timestep), Tuple{Date, Date, Int64}}}:
#  (from = Date(&quot;2020-05-10&quot;), to = Date(&quot;2020-12-31&quot;), policy_timestep = 1)
#  (from = Date(&quot;2021-01-01&quot;), to = Date(&quot;2021-05-09&quot;), policy_timestep = 1)
#  (from = Date(&quot;2021-05-10&quot;), to = Date(&quot;2021-12-31&quot;), policy_timestep = 2)
#  (from = Date(&quot;2022-01-01&quot;), to = Date(&quot;2022-05-09&quot;), policy_timestep = 2)
#  (from = Date(&quot;2022-05-10&quot;), to = Date(&quot;2022-06-10&quot;), policy_timestep = 3)
"><pre><span class="pl-c1">exposure</span>(
    ExperienceAnalysis<span class="pl-k">.</span><span class="pl-c1">AnniversaryCalendar</span>(<span class="pl-c1">Year</span>(<span class="pl-c1">1</span>), <span class="pl-c1">Year</span>(<span class="pl-c1">1</span>)), <span class="pl-c"><span class="pl-c">#</span> basis</span>
    <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>),                                          <span class="pl-c"><span class="pl-c">#</span> from</span>
    <span class="pl-c1">Date</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">6</span>, <span class="pl-c1">10</span>);                                        <span class="pl-c"><span class="pl-c">#</span> to</span>
    study_start <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>),
    study_end <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">12</span>, <span class="pl-c1">31</span>)
)
<span class="pl-c"><span class="pl-c">#</span> returns</span>
<span class="pl-c"><span class="pl-c">#</span> 5-element Vector{NamedTuple{(:from, :to, :policy_timestep), Tuple{Date, Date, Int64}}}:</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2020-05-10"), to = Date("2020-12-31"), policy_timestep = 1)</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2021-01-01"), to = Date("2021-05-09"), policy_timestep = 1)</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2021-05-10"), to = Date("2021-12-31"), policy_timestep = 2)</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2022-01-01"), to = Date("2022-05-09"), policy_timestep = 2)</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2022-05-10"), to = Date("2022-06-10"), policy_timestep = 3)</span>
</pre></div>
<h2 dir="auto"><a id="user-content-from-to-study_start-study_end" class="anchor" aria-hidden="true" href="#from-to-study_start-study_end"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>from</code>, <code>to</code>, <code>study_start</code>, <code>study_end</code></h2>
<ul dir="auto">
<li><code>from</code> is the date the policy was issued</li>
<li><code>to</code> is the date the policy was terminated, or <code>nothing</code> if the policy is still in-force</li>
<li><code>study_start</code> is the start of the study period, or <code>nothing</code> if the study period is unbounded on the left</li>
<li><code>study_end</code> is the end of the study period</li>
</ul>
<p dir="auto"><code>from</code> and <code>study_end</code> are required to be <code>Date</code> types. <code>to</code> and <code>study_start</code> can be <code>Date</code> or <code>nothing</code>.</p>
<h2 dir="auto"><a id="user-content-continued_exposure" class="anchor" aria-hidden="true" href="#continued_exposure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>continued_exposure</code></h2>
<p dir="auto">When doing a lapse study, lapsed policies will be given a full year of exposure in the policy year of the lapse. This is accomplished by setting <code>continued_exposure = true</code>. <code>continued_exposure</code> is not a keyword argument so that it can support broadcasting.</p>
<p dir="auto">The continued exposure may extend beyond the end of the study.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="exposure(
    ExperienceAnalysis.AnniversaryCalendar(Year(1), Year(1)), # basis
    Date(2020,5,10),                                          # from
    Date(2022, 6, 10),                                        # to
    true;                                                     # continued_exposure
    study_start = Date(2020, 1, 1),
    study_end = Date(2022, 12, 31)
)
# returns
# 6-element Vector{NamedTuple{(:from, :to, :policy_timestep), Tuple{Date, Date, Int64}}}:
#  (from = Date(&quot;2020-05-10&quot;), to = Date(&quot;2020-12-31&quot;), policy_timestep = 1)
#  (from = Date(&quot;2021-01-01&quot;), to = Date(&quot;2021-05-09&quot;), policy_timestep = 1)
#  (from = Date(&quot;2021-05-10&quot;), to = Date(&quot;2021-12-31&quot;), policy_timestep = 2)
#  (from = Date(&quot;2022-01-01&quot;), to = Date(&quot;2022-05-09&quot;), policy_timestep = 2)
#  (from = Date(&quot;2022-05-10&quot;), to = Date(&quot;2022-12-31&quot;), policy_timestep = 3)
#  (from = Date(&quot;2023-01-01&quot;), to = Date(&quot;2023-05-09&quot;), policy_timestep = 3) # this is the continued exposure"><pre><span class="pl-c1">exposure</span>(
    ExperienceAnalysis<span class="pl-k">.</span><span class="pl-c1">AnniversaryCalendar</span>(<span class="pl-c1">Year</span>(<span class="pl-c1">1</span>), <span class="pl-c1">Year</span>(<span class="pl-c1">1</span>)), <span class="pl-c"><span class="pl-c">#</span> basis</span>
    <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>),                                          <span class="pl-c"><span class="pl-c">#</span> from</span>
    <span class="pl-c1">Date</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">6</span>, <span class="pl-c1">10</span>),                                        <span class="pl-c"><span class="pl-c">#</span> to</span>
    <span class="pl-c1">true</span>;                                                     <span class="pl-c"><span class="pl-c">#</span> continued_exposure</span>
    study_start <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>),
    study_end <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">12</span>, <span class="pl-c1">31</span>)
)
<span class="pl-c"><span class="pl-c">#</span> returns</span>
<span class="pl-c"><span class="pl-c">#</span> 6-element Vector{NamedTuple{(:from, :to, :policy_timestep), Tuple{Date, Date, Int64}}}:</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2020-05-10"), to = Date("2020-12-31"), policy_timestep = 1)</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2021-01-01"), to = Date("2021-05-09"), policy_timestep = 1)</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2021-05-10"), to = Date("2021-12-31"), policy_timestep = 2)</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2022-01-01"), to = Date("2022-05-09"), policy_timestep = 2)</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2022-05-10"), to = Date("2022-12-31"), policy_timestep = 3)</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2023-01-01"), to = Date("2023-05-09"), policy_timestep = 3) # this is the continued exposure</span></pre></div>
<h2 dir="auto"><a id="user-content-left_partials-and-right_partials" class="anchor" aria-hidden="true" href="#left_partials-and-right_partials"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>left_partials</code> and <code>right_partials</code></h2>
<p dir="auto">Assumptions like lapse rates can have uneven distributions within policy years, so we may only want to look at full policy years. This can be accomplished by setting <code>left_partials = false</code> and <code>right_partials = false</code>.</p>
<p dir="auto">See that by default there are partial exposures at the beginning and end of the study period.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="exposure(
    ExperienceAnalysis.Anniversary(Year(1)), # basis
    Date(2019,5,10),                         # from
    Date(2022, 6, 10);                       # to
    study_start = Date(2020, 1, 1),
    study_end = Date(2021, 12, 31)
)

# returns
# 3-element Vector{NamedTuple{(:from, :to, :policy_timestep), Tuple{Date, Date, Int64}}}:
#  (from = Date(&quot;2020-01-01&quot;), to = Date(&quot;2020-05-09&quot;), policy_timestep = 1)
#  (from = Date(&quot;2020-05-10&quot;), to = Date(&quot;2021-05-09&quot;), policy_timestep = 2)
#  (from = Date(&quot;2021-05-10&quot;), to = Date(&quot;2021-12-31&quot;), policy_timestep = 3)"><pre><span class="pl-c1">exposure</span>(
    ExperienceAnalysis<span class="pl-k">.</span><span class="pl-c1">Anniversary</span>(<span class="pl-c1">Year</span>(<span class="pl-c1">1</span>)), <span class="pl-c"><span class="pl-c">#</span> basis</span>
    <span class="pl-c1">Date</span>(<span class="pl-c1">2019</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>),                         <span class="pl-c"><span class="pl-c">#</span> from</span>
    <span class="pl-c1">Date</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">6</span>, <span class="pl-c1">10</span>);                       <span class="pl-c"><span class="pl-c">#</span> to</span>
    study_start <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>),
    study_end <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2021</span>, <span class="pl-c1">12</span>, <span class="pl-c1">31</span>)
)

<span class="pl-c"><span class="pl-c">#</span> returns</span>
<span class="pl-c"><span class="pl-c">#</span> 3-element Vector{NamedTuple{(:from, :to, :policy_timestep), Tuple{Date, Date, Int64}}}:</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2020-01-01"), to = Date("2020-05-09"), policy_timestep = 1)</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2020-05-10"), to = Date("2021-05-09"), policy_timestep = 2)</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2021-05-10"), to = Date("2021-12-31"), policy_timestep = 3)</span></pre></div>
<p dir="auto">But we can remove these partial exposures by setting <code>left_partials = false</code> and <code>right_partials = false</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="exposure(
    ExperienceAnalysis.Anniversary(Year(1)), # basis
    Date(2019,5,10),                         # from
    Date(2022, 6, 10);                       # to
    study_start = Date(2020, 1, 1),
    study_end = Date(2021, 12, 31),
    left_partials = false,
    right_partials = false
)
# returns
# 1-element Vector{NamedTuple{(:from, :to, :policy_timestep), Tuple{Date, Date, Int64}}}:
#  (from = Date(&quot;2020-05-10&quot;), to = Date(&quot;2021-05-09&quot;), policy_timestep = 2)"><pre><span class="pl-c1">exposure</span>(
    ExperienceAnalysis<span class="pl-k">.</span><span class="pl-c1">Anniversary</span>(<span class="pl-c1">Year</span>(<span class="pl-c1">1</span>)), <span class="pl-c"><span class="pl-c">#</span> basis</span>
    <span class="pl-c1">Date</span>(<span class="pl-c1">2019</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>),                         <span class="pl-c"><span class="pl-c">#</span> from</span>
    <span class="pl-c1">Date</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">6</span>, <span class="pl-c1">10</span>);                       <span class="pl-c"><span class="pl-c">#</span> to</span>
    study_start <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>),
    study_end <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2021</span>, <span class="pl-c1">12</span>, <span class="pl-c1">31</span>),
    left_partials <span class="pl-k">=</span> <span class="pl-c1">false</span>,
    right_partials <span class="pl-k">=</span> <span class="pl-c1">false</span>
)
<span class="pl-c"><span class="pl-c">#</span> returns</span>
<span class="pl-c"><span class="pl-c">#</span> 1-element Vector{NamedTuple{(:from, :to, :policy_timestep), Tuple{Date, Date, Int64}}}:</span>
<span class="pl-c"><span class="pl-c">#</span>  (from = Date("2020-05-10"), to = Date("2021-05-09"), policy_timestep = 2)</span></pre></div>
<p dir="auto"><code>Calendar</code> basis does not have <code>left_partials</code> and <code>right_partials</code> because the same effect can always be achieved by setting <code>study_start</code> and <code>study_end</code>.</p>
</article></div>