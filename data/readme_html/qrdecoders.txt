<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-qrdecodersjl" class="anchor" aria-hidden="true" href="#qrdecodersjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>QRDecoders.jl</h1>
<p dir="auto"><a href="https://JuliaImages.github.io/QRDecoders.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaImages/QRDecoders.jl/actions"><img src="https://github.com/JuliaImages/QRDecoders.jl/actions/workflows/CI.yml/badge.svg" alt="" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaImages/QRDecoders.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/f319597297a95669bc3efd760650d913248c0bf2176d3af0d8ec2b4330417a61/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961496d616765732f51524465636f646572732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaImages/QRDecoders.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">QR Codes decoder with support of <code>Numeric</code> mode, <code>Alphanumeric</code> mode, <code>Kanj</code> mode, <code>Byte</code> mode and <code>UTF8</code> mode.</p>
<p dir="auto">The decoding rules of QRDecoders.jl follow the ISO/IEC 18004:2000 standard and are compatible with <a href="http://github.com/JuliaImages/QRCoders.jl">QRCoders.jl</a>.</p>
<h1 dir="auto"><a id="user-content-general-usage" class="anchor" aria-hidden="true" href="#general-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>General Usage</h1>
<h2 dir="auto"><a id="user-content-example-1" class="anchor" aria-hidden="true" href="#example-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example 1</h2>
<p dir="auto">Decode a QR Code from a compact QR code matrix.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; # using Pkg; Pkg.add(&quot;QRCoders&quot;)
julia&gt; using QRCoders, QRDecoders
julia&gt; mat = qrcode(&quot;Hello World!&quot;); # generate a QR code matrix
julia&gt; info = qrdecode(mat)
QRInfo(1, Medium(), 0, UTF8(), &quot;Hello World!&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> using Pkg; Pkg.add("QRCoders")</span>
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> QRCoders, QRDecoders
julia<span class="pl-k">&gt;</span> mat <span class="pl-k">=</span> <span class="pl-c1">qrcode</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello World!<span class="pl-pds">"</span></span>); <span class="pl-c"><span class="pl-c">#</span> generate a QR code matrix</span>
julia<span class="pl-k">&gt;</span> info <span class="pl-k">=</span> <span class="pl-c1">qrdecode</span>(mat)
<span class="pl-c1">QRInfo</span>(<span class="pl-c1">1</span>, <span class="pl-c1">Medium</span>(), <span class="pl-c1">0</span>, <span class="pl-c1">UTF8</span>(), <span class="pl-s"><span class="pl-pds">"</span>Hello World!<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The data type <code>QRInfo</code> contains information of the QR Code.</p>
<table>
<thead>
<tr>
<th>field</th>
<th>description</th>
<th>type</th>
</tr>
</thead>
<tbody>
<tr>
<td>version</td>
<td>version of QR Code</td>
<td><code>Int64</code></td>
</tr>
<tr>
<td>eclevel</td>
<td>error correction level</td>
<td><code>ErrCorrLevel</code></td>
</tr>
<tr>
<td>mask</td>
<td>mask pattern</td>
<td><code>Int64</code></td>
</tr>
<tr>
<td>mode</td>
<td>mode of QR Code</td>
<td><code>Mode</code></td>
</tr>
<tr>
<td>message</td>
<td>decoded message</td>
<td><code>AbstractString</code></td>
</tr>
</tbody>
</table>
<p dir="auto">The result <code>QRInfo(1, Medium(), 0, UTF8(), "Hello World!")</code> means that the QR Code is of version 1, with medium error correction level, mask pattern 1, and is encoded by UTF8 mode with input message <code>"Hello World!"</code>.</p>
<h2 dir="auto"><a id="user-content-example-2" class="anchor" aria-hidden="true" href="#example-2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example 2</h2>
<p dir="auto">Decode a QR Code from an image without non-QRCode information:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; exportqrcode(&quot;Hello World!&quot;, &quot;qrcode.png&quot;)
julia&gt; qrdecode(&quot;qrcode.png&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">exportqrcode</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello World!<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>qrcode.png<span class="pl-pds">"</span></span>)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">qrdecode</span>(<span class="pl-s"><span class="pl-pds">"</span>qrcode.png<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Support for more complicate cases will be added in future work.</p>
<h2 dir="auto"><a id="user-content-example-3" class="anchor" aria-hidden="true" href="#example-3"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example 3</h2>
<p dir="auto">Decode message from an animated QR Code.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; exportqrcode([&quot;hello&quot;, &quot;julia&quot;], &quot;qrcode.gif&quot;)
julia&gt; qrdecodes(&quot;qrcode.gif&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">exportqrcode</span>([<span class="pl-s"><span class="pl-pds">"</span>hello<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>julia<span class="pl-pds">"</span></span>], <span class="pl-s"><span class="pl-pds">"</span>qrcode.gif<span class="pl-pds">"</span></span>)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">qrdecodes</span>(<span class="pl-s"><span class="pl-pds">"</span>qrcode.gif<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-options" class="anchor" aria-hidden="true" href="#options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Options</h2>
<p dir="auto">There are some options for the decoder that can be set by the keyword arguments.</p>
<p dir="auto">First and foremost, we implement two algorithms for error correction:</p>
<ul dir="auto">
<li><a href="https://en.wikipedia.org/wiki/Berlekamp%E2%80%93Massey_algorithm" rel="nofollow">Berlekamp-Massey algorithm</a></li>
<li><a href="https://en.wikipedia.org/wiki/Reed%E2%80%93Solomon_error_correction#Euclidean_decoder" rel="nofollow">Sugiyama's adaption of Euclidean algorithm</a></li>
</ul>
<p dir="auto">The default algorithm is <code>Euclidean algorithm</code>, and one can specify the algorithm by the keyword argument <code>alg</code>. For example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; qrdecode(mat; alg = BerlekampMassey())"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">qrdecode</span>(mat; alg <span class="pl-k">=</span> <span class="pl-c1">BerlekampMassey</span>())</pre></div>
<p dir="auto">The encoding mode <code>Byte</code> and <code>UTF8</code> shared the same mode indicator <code>0100</code>. Therefore, when dealing with cases about <code>Byte</code> mode or <code>UTF8</code> mode, the decoder will try to decode the message with <code>UTF8</code> mode first. If the decoding fails, then it will use the <code>Byte</code> mode. However, one can set the keyword <code>preferutf8</code> to <code>false</code> to tell the decoder to skip the <code>UTF8</code> check.</p>
<p dir="auto">Examples:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; mat = qrcode(&quot;Hello world!&quot;);
julia&gt; qrdecode(mat) # use UTF8 mode by defauls
QRInfo(1, Medium(), 5, UTF8(), &quot;Hello world!&quot;)

julia&gt; qrdecode(mat; preferutf8=false) # skip UTF8 check
QRInfo(1, Medium(), 5, Byte(), &quot;Hello world!&quot;)

julia&gt; mat = qrcode(&quot;©®&quot;); # fail to use UTF8 mode
julia&gt; qrdecode(mat)
QRInfo(1, Medium(), 5, Byte(), &quot;©®&quot;)"><pre>julia<span class="pl-k">&gt;</span> mat <span class="pl-k">=</span> <span class="pl-c1">qrcode</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>);
julia<span class="pl-k">&gt;</span> <span class="pl-c1">qrdecode</span>(mat) <span class="pl-c"><span class="pl-c">#</span> use UTF8 mode by defauls</span>
<span class="pl-c1">QRInfo</span>(<span class="pl-c1">1</span>, <span class="pl-c1">Medium</span>(), <span class="pl-c1">5</span>, <span class="pl-c1">UTF8</span>(), <span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">qrdecode</span>(mat; preferutf8<span class="pl-k">=</span><span class="pl-c1">false</span>) <span class="pl-c"><span class="pl-c">#</span> skip UTF8 check</span>
<span class="pl-c1">QRInfo</span>(<span class="pl-c1">1</span>, <span class="pl-c1">Medium</span>(), <span class="pl-c1">5</span>, <span class="pl-c1">Byte</span>(), <span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> mat <span class="pl-k">=</span> <span class="pl-c1">qrcode</span>(<span class="pl-s"><span class="pl-pds">"</span>©®<span class="pl-pds">"</span></span>); <span class="pl-c"><span class="pl-c">#</span> fail to use UTF8 mode</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">qrdecode</span>(mat)
<span class="pl-c1">QRInfo</span>(<span class="pl-c1">1</span>, <span class="pl-c1">Medium</span>(), <span class="pl-c1">5</span>, <span class="pl-c1">Byte</span>(), <span class="pl-s"><span class="pl-pds">"</span>©®<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Note: One should know that the <code>UTF8</code> mode and <code>Byte</code> mode are the same for ascii characters. It only matters when the input message contains non-ascii characters.</p>
<p dir="auto">Furthermore, there is one more option for the decoder, which is <code>noerror</code>. If <code>noerror</code> is set to be <code>true</code>, the QR matrix should be error-free. Otherwise, the decoder will raise <code>DecodeError</code> when it detects any error. This can be useful for tests of the Encode-Decode process interacting with QRCoders.jl.</p>
<h1 dir="auto"><a id="user-content-acknowledgement" class="anchor" aria-hidden="true" href="#acknowledgement"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgement</h1>
<p dir="auto">The QRDecoders.jl is created as part of the <a href="https://summer-ospp.ac.cn/" rel="nofollow">OSPP'2022 project</a> guided by <a href="http://github.com/johnnychen94">Johnny Chen</a>.</p>

</article></div>