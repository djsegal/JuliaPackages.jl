<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-spikenet" class="anchor" aria-hidden="true" href="#spikenet"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SpikeNet</h1>
<p dir="auto">SpikeNet is a minimalist neural network simulator written in Julia. It is meant to run smallish networks of spiking or hybrid neurons with pretty good performance and a focus on experimentation with non-standard models.</p>
<p dir="auto">SpikeNet does a lot less than other simulators. In fact it's hardly a simulator at all! There is no main loop, only a collection of tools that you can use to turn a set of model equations into a working simulation:</p>
<ul dir="auto">
<li>elementwise kernels with a syntax inspired by Brian</li>
<li>running kernels on populations</li>
<li>running kernels on pathways</li>
<li>recording state</li>
</ul>
<p dir="auto">SpikeNet supports both spikes and rates, but assumes that the network activity is sparse -- it is not optimised to run large networks of rate neurons, as it will not try to use efficient matrix operations.</p>
</article></div>