<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-spikenet" class="anchor" aria-hidden="true" href="#spikenet"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SpikeNet</h1>
<p>SpikeNet is a minimalist neural network simulator written in Julia. It is meant to run smallish networks of spiking or hybrid neurons with pretty good performance and a focus on experimentation with non-standard models.</p>
<p>SpikeNet does a lot less than other simulators. In fact it's hardly a simulator at all! There is no main loop, only a collection of tools that you can use to turn a set of model equations into a working simulation:</p>
<ul>
<li>elementwise kernels with a syntax inspired by Brian</li>
<li>running kernels on populations</li>
<li>running kernels on pathways</li>
<li>recording state</li>
</ul>
<p>SpikeNet supports both spikes and rates, but assumes that the network activity is sparse -- it is not optimised to run large networks of rate neurons, as it will not try to use efficient matrix operations.</p>
</article></div>