<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-spikenet" class="anchor" aria-hidden="true" href="#spikenet"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>SpikeNet</h1>
<p>SpikeNet is a minimalist neural network simulator written in Julia. It is meant to run smallish networks of spiking or hybrid neurons with pretty good performance and a focus on experimentation with non-standard models.</p>
<p>SpikeNet does a lot less than other simulators. In fact it's hardly a simulator at all! There is no main loop, only a collection of tools that you can use to turn a set of model equations into a working simulation:</p>
<ul>
<li>elementwise kernels with a syntax inspired by Brian</li>
<li>running kernels on populations</li>
<li>running kernels on pathways</li>
<li>recording state</li>
</ul>
<p>SpikeNet supports both spikes and rates, but assumes that the network activity is sparse -- it is not optimised to run large networks of rate neurons, as it will not try to use efficient matrix operations.</p>
</article></div>