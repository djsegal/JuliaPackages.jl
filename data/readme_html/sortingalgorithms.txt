<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-sorting-algorithms" class="anchor" aria-hidden="true" href="#sorting-algorithms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Sorting Algorithms</h1>
<p><a href="http://pkg.julialang.org/?pkg=SortingAlgorithms" rel="nofollow"><img src="https://camo.githubusercontent.com/9e40c3edc48855b937704ffc3d178d077b21239a7286209073a244e4bee90ae7/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f536f7274696e67416c676f726974686d735f302e342e737667" alt="SortingAlgorithms" data-canonical-src="http://pkg.julialang.org/badges/SortingAlgorithms_0.4.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=SortingAlgorithms" rel="nofollow"><img src="https://camo.githubusercontent.com/7f1f65c17c6caf487fecba7d3d24d10b4e01ac3eaeb653cd3fdccc625a824b24/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f536f7274696e67416c676f726974686d735f302e352e737667" alt="SortingAlgorithms" data-canonical-src="http://pkg.julialang.org/badges/SortingAlgorithms_0.5.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=SortingAlgorithms" rel="nofollow"><img src="https://camo.githubusercontent.com/0eb05acff82765d358856d6b793dcee72c8926a27d152cb41a7e6a7caf7d0a8b/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f536f7274696e67416c676f726974686d735f302e362e737667" alt="SortingAlgorithms" data-canonical-src="http://pkg.julialang.org/badges/SortingAlgorithms_0.6.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/JuliaLang/SortingAlgorithms.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5ed8321facf723438ee714a72453ae6dc663aa7038abcba9864370d3ba758265/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614c616e672f536f7274696e67416c676f726974686d732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaLang/SortingAlgorithms.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/r/JuliaLang/SortingAlgorithms.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fa38451467eba6dc205c54ce22e4be9499cc83b01dcab2848bcd7d6d309def27/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c69614c616e672f536f7274696e67416c676f726974686d732e6a6c2f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaLang/SortingAlgorithms.jl/badge.svg" style="max-width:100%;"></a></p>
<p>The <code>SortingAlgorithms</code> package provides three sorting algorithms that can be used with Julia's <a href="https://docs.julialang.org/en/stable/stdlib/sort/" rel="nofollow">standard sorting API</a>:</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Heapsort" rel="nofollow">HeapSort</a> – an unstable, general purpose, in-place, O(n log n) comparison sort that works by heapifying an array and repeatedly taking the maximal element from the heap.</li>
<li><a href="http://en.wikipedia.org/wiki/Timsort" rel="nofollow">TimSort</a> – a stable, general purpose, hybrid, O(n log n) comparison sort that adapts to different common patterns of partially ordered input data.</li>
<li><a href="http://en.wikipedia.org/wiki/Radix_sort" rel="nofollow">RadixSort</a> – a stable, special case, in-place, O(n) non-comparison sort that works by sorting data with fixed size, one digit at a time.</li>
</ul>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="	julia&gt; using SortingAlgorithms

	julia&gt; words = map(chomp,[readlines(open(&quot;/usr/share/dict/words&quot;))...])
	235886-element Array{ASCIIString,1}:
	 &quot;A&quot;
	 &quot;a&quot;
	 &quot;aa&quot;
	 &quot;aal&quot;
	 &quot;aalii&quot;
	 ⋮
	 &quot;zythem&quot;
	 &quot;Zythia&quot;
	 &quot;zythum&quot;
	 &quot;Zyzomys&quot;
	 &quot;Zyzzogeton&quot;

	julia&gt; sort!(words, alg=TimSort)
	235886-element Array{ASCIIString,1}:
	 &quot;A&quot;
	 &quot;Aani&quot;
	 &quot;Aaron&quot;
	 &quot;Aaronic&quot;
	 &quot;Aaronical&quot;
	 ⋮
	 &quot;zymotize&quot;
	 &quot;zymotoxic&quot;
	 &quot;zymurgy&quot;
	 &quot;zythem&quot;
	 &quot;zythum&quot;

	julia&gt; sort!(words, alg=TimSort, by=length)
	235886-element Array{ASCIIString,1}:
	 &quot;A&quot;
	 &quot;B&quot;
	 &quot;C&quot;
	 &quot;D&quot;
	 &quot;E&quot;
	 ⋮
	 &quot;formaldehydesulphoxylate&quot;
	 &quot;pathologicopsychological&quot;
	 &quot;scientificophilosophical&quot;
	 &quot;tetraiodophenolphthalein&quot;
	 &quot;thyroparathyroidectomize&quot;

	julia&gt; sort!(words, alg=HeapSort)
	235886-element Array{ASCIIString,1}:
	 &quot;A&quot;
	 &quot;Aani&quot;
	 &quot;Aaron&quot;
	 &quot;Aaronic&quot;
	 &quot;Aaronical&quot;
	 ⋮
	 &quot;zymotize&quot;
	 &quot;zymotoxic&quot;
	 &quot;zymurgy&quot;
	 &quot;zythem&quot;
	 &quot;zythum&quot;

	julia&gt; sort!(words, alg=HeapSort, by=length)
	235886-element Array{ASCIIString,1}:
	 &quot;L&quot;
	 &quot;p&quot;
	 &quot;U&quot;
	 &quot;I&quot;
	 &quot;q&quot;
	 ⋮
	 &quot;pathologicopsychological&quot;
	 &quot;formaldehydesulphoxylate&quot;
	 &quot;scientificophilosophical&quot;
	 &quot;tetraiodophenolphthalein&quot;
	 &quot;thyroparathyroidectomize&quot;

	julia&gt; sort!(words, alg=RadixSort)
	ERROR: Radix sort only sorts bits types (got ASCIIString)
	 in error at error.jl:21
	 in sort! at /Users/stefan/.julia/SortingAlgorithms/src/SortingAlgorithms.jl:54
	 in sort! at sort.jl:328
	 in sort! at sort.jl:329

	julia&gt; floats = randn(1000)
	1000-element Array{Float64,1}:
	  1.729
	  0.907196
	  0.461481
	 -0.204763
	 -0.16022
	  ⋮
	  0.700683
	 -0.236204
	 -2.15634
	 -0.316188
	 -0.171478

	julia&gt; sort!(floats, alg=RadixSort)
	1000-element Array{Float64,1}:
	 -2.86255
	 -2.72041
	 -2.58234
	 -2.57259
	 -2.53046
	  ⋮
	  3.08307
	  3.12902
	  3.15075
	  3.20058
	  3.23942
"><pre>	julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SortingAlgorithms

	julia<span class="pl-k">&gt;</span> words <span class="pl-k">=</span> <span class="pl-c1">map</span>(chomp,[<span class="pl-c1">readlines</span>(<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>/usr/share/dict/words<span class="pl-pds">"</span></span>))<span class="pl-k">...</span>])
	<span class="pl-c1">235886</span><span class="pl-k">-</span>element Array{ASCIIString,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
	 <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>aa<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>aal<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>aalii<span class="pl-pds">"</span></span>
	 ⋮
	 <span class="pl-s"><span class="pl-pds">"</span>zythem<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>Zythia<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>zythum<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>Zyzomys<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>Zyzzogeton<span class="pl-pds">"</span></span>

	julia<span class="pl-k">&gt;</span> <span class="pl-c1">sort!</span>(words, alg<span class="pl-k">=</span>TimSort)
	<span class="pl-c1">235886</span><span class="pl-k">-</span>element Array{ASCIIString,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
	 <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>Aani<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>Aaron<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>Aaronic<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>Aaronical<span class="pl-pds">"</span></span>
	 ⋮
	 <span class="pl-s"><span class="pl-pds">"</span>zymotize<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>zymotoxic<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>zymurgy<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>zythem<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>zythum<span class="pl-pds">"</span></span>

	julia<span class="pl-k">&gt;</span> <span class="pl-c1">sort!</span>(words, alg<span class="pl-k">=</span>TimSort, by<span class="pl-k">=</span>length)
	<span class="pl-c1">235886</span><span class="pl-k">-</span>element Array{ASCIIString,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
	 <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>B<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>C<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>D<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>E<span class="pl-pds">"</span></span>
	 ⋮
	 <span class="pl-s"><span class="pl-pds">"</span>formaldehydesulphoxylate<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>pathologicopsychological<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>scientificophilosophical<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>tetraiodophenolphthalein<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>thyroparathyroidectomize<span class="pl-pds">"</span></span>

	julia<span class="pl-k">&gt;</span> <span class="pl-c1">sort!</span>(words, alg<span class="pl-k">=</span>HeapSort)
	<span class="pl-c1">235886</span><span class="pl-k">-</span>element Array{ASCIIString,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
	 <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>Aani<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>Aaron<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>Aaronic<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>Aaronical<span class="pl-pds">"</span></span>
	 ⋮
	 <span class="pl-s"><span class="pl-pds">"</span>zymotize<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>zymotoxic<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>zymurgy<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>zythem<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>zythum<span class="pl-pds">"</span></span>

	julia<span class="pl-k">&gt;</span> <span class="pl-c1">sort!</span>(words, alg<span class="pl-k">=</span>HeapSort, by<span class="pl-k">=</span>length)
	<span class="pl-c1">235886</span><span class="pl-k">-</span>element Array{ASCIIString,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
	 <span class="pl-s"><span class="pl-pds">"</span>L<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>p<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>U<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>I<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>q<span class="pl-pds">"</span></span>
	 ⋮
	 <span class="pl-s"><span class="pl-pds">"</span>pathologicopsychological<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>formaldehydesulphoxylate<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>scientificophilosophical<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>tetraiodophenolphthalein<span class="pl-pds">"</span></span>
	 <span class="pl-s"><span class="pl-pds">"</span>thyroparathyroidectomize<span class="pl-pds">"</span></span>

	julia<span class="pl-k">&gt;</span> <span class="pl-c1">sort!</span>(words, alg<span class="pl-k">=</span>RadixSort)
	ERROR<span class="pl-k">:</span> Radix sort only sorts bits types (got ASCIIString)
	 <span class="pl-k">in</span> error at error<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">21</span>
	 <span class="pl-k">in</span> sort! at <span class="pl-k">/</span>Users<span class="pl-k">/</span>stefan<span class="pl-k">/</span><span class="pl-k">.</span>julia<span class="pl-k">/</span>SortingAlgorithms<span class="pl-k">/</span>src<span class="pl-k">/</span>SortingAlgorithms<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">54</span>
	 <span class="pl-k">in</span> sort! at sort<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">328</span>
	 <span class="pl-k">in</span> sort! at sort<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">329</span>

	julia<span class="pl-k">&gt;</span> floats <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">1000</span>)
	<span class="pl-c1">1000</span><span class="pl-k">-</span>element Array{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
	  <span class="pl-c1">1.729</span>
	  <span class="pl-c1">0.907196</span>
	  <span class="pl-c1">0.461481</span>
	 <span class="pl-k">-</span><span class="pl-c1">0.204763</span>
	 <span class="pl-k">-</span><span class="pl-c1">0.16022</span>
	  ⋮
	  <span class="pl-c1">0.700683</span>
	 <span class="pl-k">-</span><span class="pl-c1">0.236204</span>
	 <span class="pl-k">-</span><span class="pl-c1">2.15634</span>
	 <span class="pl-k">-</span><span class="pl-c1">0.316188</span>
	 <span class="pl-k">-</span><span class="pl-c1">0.171478</span>

	julia<span class="pl-k">&gt;</span> <span class="pl-c1">sort!</span>(floats, alg<span class="pl-k">=</span>RadixSort)
	<span class="pl-c1">1000</span><span class="pl-k">-</span>element Array{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
	 <span class="pl-k">-</span><span class="pl-c1">2.86255</span>
	 <span class="pl-k">-</span><span class="pl-c1">2.72041</span>
	 <span class="pl-k">-</span><span class="pl-c1">2.58234</span>
	 <span class="pl-k">-</span><span class="pl-c1">2.57259</span>
	 <span class="pl-k">-</span><span class="pl-c1">2.53046</span>
	  ⋮
	  <span class="pl-c1">3.08307</span>
	  <span class="pl-c1">3.12902</span>
	  <span class="pl-c1">3.15075</span>
	  <span class="pl-c1">3.20058</span>
	  <span class="pl-c1">3.23942</span></pre></div>
</article></div>