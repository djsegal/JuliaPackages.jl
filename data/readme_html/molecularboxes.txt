<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-molecularboxesjl" class="anchor" aria-hidden="true" href="#molecularboxesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>MolecularBoxes.jl</h1>
<p><a href="https://travis-ci.org/tom--lee/MolecularBoxes.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/821dabd202ac96a402828a61ca12dee5ac75179c/68747470733a2f2f7472617669732d63692e6f72672f746f6d2d2d6c65652f4d6f6c6563756c6172426f7865732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/tom--lee/MolecularBoxes.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/r/tom--lee/MolecularBoxes.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/29d668bc2b4e537da1cef3e8c3f25bb3c79a4cbd/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f746f6d2d2d6c65652f4d6f6c6563756c6172426f7865732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/tom--lee/MolecularBoxes.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>MolecularBoxes is a Julia package providing tools for dealing with periodic
boundary conditions when analysing molecular simulations.</p>
<p>For example, to create a rectangular box with periodic boundary conditions in
x, y and z start a Julia REPL and enter:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MolecularBoxes

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> StaticArrays

julia<span class="pl-k">&gt;</span> box_edge_length <span class="pl-k">=</span> <span class="pl-c1">SVector</span>(<span class="pl-c1">3.0</span>,<span class="pl-c1">4.0</span>,<span class="pl-c1">5.0</span>)
<span class="pl-c1">3</span><span class="pl-k">-</span>element SArray{Tuple{<span class="pl-c1">3</span>},Float64,<span class="pl-c1">1</span>,<span class="pl-c1">3</span>}<span class="pl-k">:</span>
 <span class="pl-c1">3.0</span>
 <span class="pl-c1">4.0</span>
 <span class="pl-c1">5.0</span>

julia<span class="pl-k">&gt;</span> box <span class="pl-k">=</span> <span class="pl-c1">Box</span>(box_edge_length)
<span class="pl-c1">Box</span><span class="pl-c1">{SArray{Tuple{3},Float64,1,3},3,(true, true, true)}</span>(([<span class="pl-c1">3.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>], [<span class="pl-c1">0.0</span>, <span class="pl-c1">4.0</span>, <span class="pl-c1">0.0</span>], [<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">5.0</span>]), [<span class="pl-c1">3.0</span>, <span class="pl-c1">4.0</span>, <span class="pl-c1">5.0</span>])</pre></div>
<p>The lengths of the sides of the boxes and the unit cell vectors can be accessed via the type fields:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> box<span class="pl-k">.</span>lengths
<span class="pl-c1">3</span><span class="pl-k">-</span>element SArray{Tuple{<span class="pl-c1">3</span>},Float64,<span class="pl-c1">1</span>,<span class="pl-c1">3</span>}<span class="pl-k">:</span>
 <span class="pl-c1">3.0</span>
 <span class="pl-c1">4.0</span>
 <span class="pl-c1">5.0</span>

julia<span class="pl-k">&gt;</span> box<span class="pl-k">.</span>vectors
([<span class="pl-c1">3.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>], [<span class="pl-c1">0.0</span>, <span class="pl-c1">4.0</span>, <span class="pl-c1">0.0</span>], [<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">5.0</span>])</pre></div>
<p>To get the vector separating two points according to the nearest image
convention:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> v1 <span class="pl-k">=</span> <span class="pl-c1">SVector</span>(<span class="pl-c1">0.1</span>, <span class="pl-c1">0.2</span>, <span class="pl-c1">0.3</span>)
<span class="pl-c1">3</span><span class="pl-k">-</span>element SArray{Tuple{<span class="pl-c1">3</span>},Float64,<span class="pl-c1">1</span>,<span class="pl-c1">3</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0.1</span>
 <span class="pl-c1">0.2</span>
 <span class="pl-c1">0.3</span>

julia<span class="pl-k">&gt;</span> v2 <span class="pl-k">=</span> <span class="pl-c1">SVector</span>(<span class="pl-c1">2.9</span>, <span class="pl-c1">3.9</span>, <span class="pl-c1">4.9</span>)
<span class="pl-c1">3</span><span class="pl-k">-</span>element SArray{Tuple{<span class="pl-c1">3</span>},Float64,<span class="pl-c1">1</span>,<span class="pl-c1">3</span>}<span class="pl-k">:</span>
 <span class="pl-c1">2.9</span>
 <span class="pl-c1">3.9</span>
 <span class="pl-c1">4.9</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">separation</span>(v1, v2, box)
<span class="pl-c1">3</span><span class="pl-k">-</span>element SArray{Tuple{<span class="pl-c1">3</span>},Float64,<span class="pl-c1">1</span>,<span class="pl-c1">3</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0.20000000000000018</span>
 <span class="pl-c1">0.30000000000000027</span>
 <span class="pl-c1">0.39999999999999947</span></pre></div>
<p><code>separation(v1, v2, box)</code> should be read as "the separation of <code>v1</code> from <code>v2</code>
in <code>box</code>".</p>
<p>A box can also be defined with one or more fixed (ie non-periodic) boundaries
in order to avoid applying the minimum image convention in that direction.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> box_fpf <span class="pl-k">=</span> <span class="pl-c1">Box</span>(box_edge_length, periodic<span class="pl-k">=</span>(<span class="pl-c1">false</span>, <span class="pl-c1">true</span>, <span class="pl-c1">false</span>))
<span class="pl-c1">Box</span><span class="pl-c1">{SArray{Tuple{3},Float64,1,3},3,(false, true, false)}</span>(([<span class="pl-c1">3.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>], [<span class="pl-c1">0.0</span>, <span class="pl-c1">4.0</span>, <span class="pl-c1">0.0</span>], [<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">5.0</span>]), [<span class="pl-c1">3.0</span>, <span class="pl-c1">4.0</span>, <span class="pl-c1">5.0</span>])

julia<span class="pl-k">&gt;</span> <span class="pl-c1">separation</span>(v1, v2, box_fpf)
<span class="pl-c1">3</span><span class="pl-k">-</span>element SArray{Tuple{<span class="pl-c1">3</span>},Float64,<span class="pl-c1">1</span>,<span class="pl-c1">3</span>}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">2.8</span>
  <span class="pl-c1">0.30000000000000027</span>
 <span class="pl-k">-</span><span class="pl-c1">4.6000000000000005</span></pre></div>
<p>Finally, the center of mass of a collection of particles in a fully-periodic
system can be calculated:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">center_of_mass</span>([v1, v2], box) <span class="pl-c"><span class="pl-c">#</span> assuming all particles have the same mass</span>
<span class="pl-c1">3</span><span class="pl-k">-</span>element SArray{Tuple{<span class="pl-c1">3</span>},Float64,<span class="pl-c1">1</span>,<span class="pl-c1">3</span>}<span class="pl-k">:</span>
 <span class="pl-c1">3.0</span>
 <span class="pl-c1">0.04999999999999972</span>
 <span class="pl-c1">0.10000000000000014</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">center_of_mass</span>([v1, v2], box, weights<span class="pl-k">=</span>[<span class="pl-c1">1.0</span>, <span class="pl-c1">2.0</span>])
<span class="pl-c1">3</span><span class="pl-k">-</span>element SArray{Tuple{<span class="pl-c1">3</span>},Float64,<span class="pl-c1">1</span>,<span class="pl-c1">3</span>}<span class="pl-k">:</span>
 <span class="pl-c1">2.9662270109017728</span>
 <span class="pl-c1">3.999162045790778</span>
 <span class="pl-c1">0.03205882409647218</span></pre></div>
</article></div>