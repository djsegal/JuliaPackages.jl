<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-pkgjogger" class="anchor" aria-hidden="true" href="#pkgjogger"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PkgJogger</h1>
<p dir="auto"><a href="https://awadell1.github.io/PkgJogger.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://awadell1.github.io/PkgJogger.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/awadell1/PkgJogger.jl/actions"><img src="https://github.com/awadell1/PkgJogger.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/awadell1/PkgJogger.jl?branch=main" rel="nofollow"><img src="https://camo.githubusercontent.com/3fbb8ab6c99530c37571f43073392a31a4c7be22c99e5fe3f4c4b69e1df5dd17/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f61776164656c6c312f506b674a6f676765722e6a6c2f62616467652e7376673f6272616e63683d6d61696e" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/awadell1/PkgJogger.jl/badge.svg?branch=main" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://juliahub.com/ui/Packages/PkgJogger/AaLEJ" rel="nofollow"><img src="https://camo.githubusercontent.com/37620188f51ec02b789e6c1ff088bd7727c3eb15deb0899f3c9fb8a13f41d126/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f506b674a6f676765722f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/PkgJogger/version.svg" style="max-width: 100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/84457e9f34ac705aa296662c135cfb29e46912c14dad1e5d245126a40d7dfb3f/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f502f506b674a6f676765722e737667" alt="pkgeval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/P/PkgJogger.svg" style="max-width: 100%;"></a>
<a href="https://pkgs.genieframework.com?packages=PkgJogger" rel="nofollow"><img src="https://camo.githubusercontent.com/e7093361bc3ab2709db4ea803d1c618858d1986b017218437d1f91ae73c0eca5/68747470733a2f2f736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f706b67732e67656e69656672616d65776f726b2e636f6d2f6170692f76312f62616467652f506b674a6f67676572267374796c653d666c6174266c6162656c3d446f776e6c6f616473" alt="PkgJogger Downloads" data-canonical-src="https://shields.io/endpoint?url=https://pkgs.genieframework.com/api/v1/badge/PkgJogger&amp;style=flat&amp;label=Downloads" style="max-width: 100%;"></a></p>
<p dir="auto">PkgJogger provides a framework for running suites of
<a href="https://github.com/JuliaCI/BenchmarkTools.jl">BenchmarkTools.jl</a> benchmarks
without the boilerplate.</p>
<h2 dir="auto"><a id="user-content-just-write-benchmarks" class="anchor" aria-hidden="true" href="#just-write-benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Just write benchmarks</h2>
<p dir="auto">Create a <code>benchmark/bench_*.jl</code> file, define a
<a href="https://github.com/JuliaCI/BenchmarkTools.jl">BenchmarkTools.jl</a> <code>suite</code> and
go!</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using BenchmarkTools
using AwesomePkg
suite = BenchmarkGroup()
suite[&quot;fast&quot;] = @benchmarkable fast_code()"><pre><span class="pl-k">using</span> BenchmarkTools
<span class="pl-k">using</span> AwesomePkg
suite <span class="pl-k">=</span> <span class="pl-c1">BenchmarkGroup</span>()
suite[<span class="pl-s"><span class="pl-pds">"</span>fast<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-c1">@benchmarkable</span> <span class="pl-c1">fast_code</span>()</pre></div>
<p dir="auto">PkgJogger will wrap each <code>benchmark/bench_*.jl</code> in a module and bundle them into <code>JogAwesomePkg</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using AwesomePkg
using PkgJogger

# Creates the JogAwesomePkg module
@jog AwesomePkg

# Warmup, tune, and run all of AwesomePkg's benchmarks
JogAwesomePkg.benchmark()"><pre><span class="pl-k">using</span> AwesomePkg
<span class="pl-k">using</span> PkgJogger

<span class="pl-c"><span class="pl-c">#</span> Creates the JogAwesomePkg module</span>
<span class="pl-c1">@jog</span> AwesomePkg

<span class="pl-c"><span class="pl-c">#</span> Warmup, tune, and run all of AwesomePkg's benchmarks</span>
JogAwesomePkg<span class="pl-k">.</span><span class="pl-c1">benchmark</span>()</pre></div>
<h2 dir="auto"><a id="user-content-benchmark-revise-and-benchmark-again" class="anchor" aria-hidden="true" href="#benchmark-revise-and-benchmark-again"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Benchmark, Revise, and Benchmark Again!</h2>
<p dir="auto">PkgJogger uses <a href="https://github.com/timholy/Revise.jl">Revise.jl</a> to track
changes to your <code>benchmark/bench_*.jl</code> files and reload your suite as you edit.
No more waiting for benchmarks to precompile!</p>
<p dir="auto">Tracked Changes:</p>
<ul dir="auto">
<li>Changing your benchmarked function</li>
<li>Changing benchmarking parameters (i.e. <code>seconds</code> or <code>samples</code>)</li>
<li>Adding new benchmarks</li>
</ul>
<p dir="auto">Current Limitations:</p>
<ul dir="auto">
<li>New benchmark files are not tracked</li>
<li>Deleted benchmarks will stick around</li>
<li>Renamed benchmarks will create a new benchmark and retain the old name</li>
</ul>
<p dir="auto">To get around the above, run <code>@jog PkgName</code> to get an updated jogger.</p>
<blockquote>
<p dir="auto">Note: Revise must be loaded first in order to track changes to your benchmark files.</p>
</blockquote>
<h2 dir="auto"><a id="user-content-continuous-benchmarking-baked-in" class="anchor" aria-hidden="true" href="#continuous-benchmarking-baked-in"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Continuous Benchmarking Baked In!</h2>
<p dir="auto">Install PkgJogger, run benchmarks, and save results to a <code>*.bson.gz</code> with a
one-line command.</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia -e 'using Pkg; Pkg.add(&quot;PkgJogger&quot;); using PkgJogger; PkgJogger.ci()'"><pre>julia -e <span class="pl-s"><span class="pl-pds">'</span>using Pkg; Pkg.add("PkgJogger"); using PkgJogger; PkgJogger.ci()<span class="pl-pds">'</span></span></pre></div>
<p dir="auto">What gets done:</p>
<ul dir="auto">
<li>Constructs a temporary
<a href="https://awadell1.github.io/PkgJogger.jl/stable/ci/#Isolated-Benchmarking-Environment" rel="nofollow">benchmarking environment</a>
from <code>Project.toml</code> and <code>benchmark/Project.toml</code>.</li>
<li>Creates a <a href="https://awadell1.github.io/PkgJogger.jl/stable/jogger/" rel="nofollow">jogger</a>
to run the package's benchmarks.</li>
<li>Warmup, tune and run all benchmarks.</li>
<li>Save Benchmarking results and more to a compressed <code>*.bson.gz</code> file.</li>
</ul>
<p dir="auto">Or for a more lightweight option, use
<a href="https://awadell1.github.io/PkgJogger.jl/stable/ci/#Testing-Benchmarks" rel="nofollow"><code>@test_bechmarks</code></a>
to run each benchmark once (No Warmup, tuning, etc.), as a smoke test
against benchmarking regressions.</p>
</article></div>