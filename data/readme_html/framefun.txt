<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a href="https://travis-ci.org/JuliaApproximation/BasisFunctions.jl.svg?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/4f4dc5c45ab99a62b24f0df4ce1eceb29f92f1ff/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961417070726f78696d6174696f6e2f4672616d6546756e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaApproximation/FrameFun.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaApproximation/FrameFun.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2748865af7af77e00ff34ca4a56ea4205b52bada/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c6961417070726f78696d6174696f6e2f4672616d6546756e2e6a6c2f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaApproximation/FrameFun.jl/badge.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-framefun" class="anchor" aria-hidden="true" href="#framefun"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>FrameFun</h1>
<p>Exploring practical possibilities of approximating functions with frames rather than with a basis. The package is heavily inspired by the Chebfun project and the Julia package ApproxFun.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> BasisFunctions, Plots, DomainSets, FrameFun
<span class="pl-c1">gr</span>();</pre></div>
<h1><a id="user-content-frame-approximations-in-1d" class="anchor" aria-hidden="true" href="#frame-approximations-in-1d"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Frame Approximations in 1D</h1>
<p>After choosing a suitable Basis and Domain, any function can be approximated in the resulting frame:</p>
<div class="highlight highlight-source-julia"><pre>B <span class="pl-k">=</span> <span class="pl-c1">Fourier</span>(<span class="pl-c1">61</span>) → <span class="pl-k">-</span><span class="pl-c1">1..1</span>
D <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.5</span><span class="pl-k">..</span><span class="pl-c1">0.5</span>
f <span class="pl-k">=</span> x<span class="pl-k">-&gt;</span>x
F <span class="pl-k">=</span> <span class="pl-c1">Fun</span>(f,B,D)

P <span class="pl-k">=</span> <span class="pl-c1">plot</span>(F,layout <span class="pl-k">=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">plot!</span>(F,f,subplot<span class="pl-k">=</span><span class="pl-c1">2</span>)
Plots<span class="pl-k">.</span><span class="pl-c1">savefig</span>(P,<span class="pl-s"><span class="pl-pds">"</span>images/lowprecision.png<span class="pl-pds">"</span></span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/lowprecision.png"><img src="images/lowprecision.png" alt="" style="max-width:100%;"></a></p>
<p>The bases support any AbstractFloat subtype, so high precision approximations are straightforward:</p>
<div class="highlight highlight-source-julia"><pre>B <span class="pl-k">=</span> <span class="pl-c1">Fourier</span>(<span class="pl-c1">61</span>) → <span class="pl-c1">big</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">..</span><span class="pl-c1">big</span>(<span class="pl-c1">1</span>)
F <span class="pl-k">=</span> <span class="pl-c1">Fun</span>(f,B,D)

P <span class="pl-k">=</span> <span class="pl-c1">plot</span>(F,layout<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">plot!</span>(F,f,subplot<span class="pl-k">=</span><span class="pl-c1">2</span>)
Plots<span class="pl-k">.</span><span class="pl-c1">savefig</span>(P,<span class="pl-s"><span class="pl-pds">"</span>images/highprecision.png<span class="pl-pds">"</span></span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/highprecision.png"><img src="images/highprecision.png" alt="" style="max-width:100%;"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="images/highprecision.png"><img src="images/highprecision.png" alt="" style="max-width:100%;"></a></p>
<h1><a id="user-content-frame-approximations-in-2d" class="anchor" aria-hidden="true" href="#frame-approximations-in-2d"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Frame Approximations in 2D</h1>
<p>In higher dimensions, a basis can be any tensorproduct of (scaled) lower dimensional bases:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> StaticArrays
C <span class="pl-k">=</span> <span class="pl-c1">disk</span>(<span class="pl-c1">1.0</span>)<span class="pl-k">\</span><span class="pl-c1">disk</span>(<span class="pl-c1">0.3</span>,<span class="pl-c1">SVector</span>(<span class="pl-c1">0.2</span>, <span class="pl-c1">0.5</span>))
B <span class="pl-k">=</span> (<span class="pl-c1">Fourier</span>(<span class="pl-c1">31</span>) → <span class="pl-k">-</span><span class="pl-c1">1.3</span><span class="pl-k">..</span><span class="pl-c1">1.3</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>
f <span class="pl-k">=</span> (x,y)<span class="pl-k">-&gt;</span><span class="pl-c1">exp</span>(x<span class="pl-k">+</span>y)
F <span class="pl-k">=</span> <span class="pl-c1">Fun</span>(f,B,C)

P <span class="pl-k">=</span> <span class="pl-c1">heatmap</span>(F,layout<span class="pl-k">=</span><span class="pl-c1">2</span>,aspect_ratio<span class="pl-k">=</span><span class="pl-c1">1</span>)
<span class="pl-c1">plot!</span>(F,f,subplot<span class="pl-k">=</span><span class="pl-c1">2</span>,aspect_ratio<span class="pl-k">=</span><span class="pl-c1">1</span>)
Plots<span class="pl-k">.</span><span class="pl-c1">savefig</span>(P,<span class="pl-s"><span class="pl-pds">"</span>images/deathstar.png<span class="pl-pds">"</span></span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/deathstar.png"><img src="images/deathstar.png" alt="" style="max-width:100%;"></a></p>
<p>Even fractal domains are not a problem:</p>
<div class="highlight highlight-source-julia"><pre>B <span class="pl-k">=</span> (<span class="pl-c1">Fourier</span>(<span class="pl-c1">31</span>) → <span class="pl-k">-</span><span class="pl-c1">1.0</span><span class="pl-k">..</span><span class="pl-c1">0.35</span>) ⊗ (<span class="pl-c1">Fourier</span>(<span class="pl-c1">31</span>) → <span class="pl-k">-</span><span class="pl-c1">0.65</span><span class="pl-k">..</span><span class="pl-c1">0.65</span>)
f <span class="pl-k">=</span> (x,y)<span class="pl-k">-&gt;</span><span class="pl-c1">cos</span>(<span class="pl-c1">10</span><span class="pl-k">*</span>x<span class="pl-k">*</span>y)
F <span class="pl-k">=</span> <span class="pl-c1">Fun</span>(f, B, <span class="pl-c1">mandelbrot</span>())

P <span class="pl-k">=</span> <span class="pl-c1">heatmap</span>(F,layout<span class="pl-k">=</span><span class="pl-c1">2</span>,aspect_ratio<span class="pl-k">=</span><span class="pl-c1">1</span>)
<span class="pl-c1">plot!</span>(F,f,aspect_ratio<span class="pl-k">=</span><span class="pl-c1">1</span>,subplot<span class="pl-k">=</span><span class="pl-c1">2</span>)
Plots<span class="pl-k">.</span><span class="pl-c1">savefig</span>(P,<span class="pl-s"><span class="pl-pds">"</span>images/mandelbrot<span class="pl-pds">"</span></span>)</pre></div>
<pre><code>GKS: Rectangle definition is invalid in routine SET_WINDOW
GKS: Rectangle definition is invalid in routine CELLARRAY
origin outside current window
</code></pre>
<p><a target="_blank" rel="noopener noreferrer" href="images/mandelbrot.png"><img src="images/mandelbrot.png" alt="" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>FrameFun.jl is not added to the Julia General registry and depends on the unregistered packages GridArrays.jl and BasisFunctions.jl</p>
<h3><a id="user-content-recommended" class="anchor" aria-hidden="true" href="#recommended"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Recommended</h3>
<p>For Julia 1.1 or higher, you can add the FrameFun registry.
From the Julia REPL, type <code>]</code> to enter Pkg mode and run</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> registry add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>FramefunVC<span class="pl-k">/</span>FrameFunRegistry
pkg<span class="pl-k">&gt;</span> add FrameFun</pre></div>
<h3><a id="user-content-legacy" class="anchor" aria-hidden="true" href="#legacy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Legacy</h3>
<p>In Julia 1.0, the packages can be installed by cloning their git repository. From the Julia REPL, type <code>]</code> to enter Pkg mode and run</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>JuliaApproximation<span class="pl-k">/</span>BasisFunctions<span class="pl-k">.</span>jl
pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>JuliaApproximation<span class="pl-k">/</span>FrameFun<span class="pl-k">.</span>jl</pre></div>
</article></div>