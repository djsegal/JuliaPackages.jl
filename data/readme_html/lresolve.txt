<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-lresolvejl" class="anchor" aria-hidden="true" href="#lresolvejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LRESolve.jl</h1>
<p>Solving Systems of Linear Rational Expectations Equations in Julia</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>These commands install the latest version of LRESolve.jl</p>
<ul>
<li><code>import Pkg; Pkg.add("https://github.com/NormannR/LRESolve.jl.git")</code></li>
<li><code>import Pkg; Pkg.add("LRESolve.jl")</code></li>
</ul>
<h2><a id="user-content-methods" class="anchor" aria-hidden="true" href="#methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Methods</h2>
<h3><a id="user-content-sims-2001" class="anchor" aria-hidden="true" href="#sims-2001"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Sims (2001)</h3>
<p><a href="https://ideas.repec.org/c/dge/qmrbcd/11.html" rel="nofollow">Sims (2001)</a> solves LRE systems of the form</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/130caa464bf3b4323af756165005181bed4551995fef751702b20624c9fe8efc/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f73696d735f65715f6465662e706e67"><img src="https://camo.githubusercontent.com/130caa464bf3b4323af756165005181bed4551995fef751702b20624c9fe8efc/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f73696d735f65715f6465662e706e67" alt="image" data-canonical-src="https://normannrion.fr/wp-content/uploads/2019/11/sims_eq_def.png" style="max-width:100%;"></a></p>
<p>where</p>
<ul>
<li>x is the vector of endogenous variables</li>
<li>z is the vector of exogenous shocks</li>
<li>η is the vector of expectation errors</li>
</ul>
<p>The solution verifies</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0dcb27191f58ea3552311e379067a3f2cb844e011f2b9237e0abaea55321fc68/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f73696d735f736f6c2e706e67"><img src="https://camo.githubusercontent.com/0dcb27191f58ea3552311e379067a3f2cb844e011f2b9237e0abaea55321fc68/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f73696d735f736f6c2e706e67" alt="image" data-canonical-src="https://normannrion.fr/wp-content/uploads/2019/11/sims_sol.png" style="max-width:100%;"></a></p>
<p>To solve a LRE system using this method</p>
<ol>
<li>Define the model through the <code>ModelSims</code> structure. The syntax is typically</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="M0 = ModelSims(Γ₀,Γ₁,C,Ψ,Π)
"><pre>M0 <span class="pl-k">=</span> <span class="pl-c1">ModelSims</span>(Γ₀,Γ₁,C,Ψ,Π)</pre></div>
<ol start="2">
<li>Call the <code>solve_sims</code> method over the newly created model</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Θ, Θ₀, Θ₁ = solve_sims(M0)
"><pre>Θ, Θ₀, Θ₁ <span class="pl-k">=</span> <span class="pl-c1">solve_sims</span>(M0)</pre></div>
<h3><a id="user-content-uhlig-1998" class="anchor" aria-hidden="true" href="#uhlig-1998"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Uhlig (1998)</h3>
<p><a href="https://ideas.repec.org/c/dge/qmrbcd/123.html" rel="nofollow">Uhlig (1998)</a> solves LRE systems of the form</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/32579752478c5e9ce913ae53dd394f31bb21e87522eecfdc380ef003f2b40b1c/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f65715f75686c69672e706e67"><img src="https://camo.githubusercontent.com/32579752478c5e9ce913ae53dd394f31bb21e87522eecfdc380ef003f2b40b1c/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f65715f75686c69672e706e67" alt="image" data-canonical-src="https://normannrion.fr/wp-content/uploads/2019/11/eq_uhlig.png" style="max-width:100%;"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a6fe9dcd2777b621d81d3a7bef4a7d81b5af14ded1e557a21fad2f7df78391fd/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f65715f75686c69675f73686f636b732e706e67"><img src="https://camo.githubusercontent.com/a6fe9dcd2777b621d81d3a7bef4a7d81b5af14ded1e557a21fad2f7df78391fd/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f65715f75686c69675f73686f636b732e706e67" alt="image" data-canonical-src="https://normannrion.fr/wp-content/uploads/2019/11/eq_uhlig_shocks.png" style="max-width:100%;"></a></p>
<p>where</p>
<ul>
<li>x is the vector of endogenous variables</li>
<li>f is the vector of exogenous variables</li>
</ul>
<p>The solution takes the form</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6a0aa9bb320eed28ca438f0d86563e0364d3e9a76d1bcb4670fe9f500c1134cf/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f736f6c5f75686c69672e706e67"><img src="https://camo.githubusercontent.com/6a0aa9bb320eed28ca438f0d86563e0364d3e9a76d1bcb4670fe9f500c1134cf/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f736f6c5f75686c69672e706e67" alt="image" data-canonical-src="https://normannrion.fr/wp-content/uploads/2019/11/sol_uhlig.png" style="max-width:100%;"></a></p>
<p>To solve a LRE system using this method</p>
<ol>
<li>Define the model through the <code>ModelUhlig</code> structure. The syntax is typically</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="M0 = ModelUhlig(F,G,H,L,M,N)
"><pre>M0 <span class="pl-k">=</span> <span class="pl-c1">ModelUhlig</span>(F,G,H,L,M,N)</pre></div>
<ol start="2">
<li>Call the <code>solve_uhlig</code> method over the newly created model</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="P,Q = solve_uhlig(M0)
"><pre>P,Q <span class="pl-k">=</span> <span class="pl-c1">solve_uhlig</span>(M0)</pre></div>
<h3><a id="user-content-anderson-and-moore-1985" class="anchor" aria-hidden="true" href="#anderson-and-moore-1985"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Anderson and Moore (1985)</h3>
<p><a href="https://www.sciencedirect.com/science/article/pii/0165176585902113" rel="nofollow">Anderson and Moore (1985)</a> solves systems of the form</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/abec3b9791553498f1ab2c6a9aadb8a3d79ba754db8ef4bac71e1aef706868f1/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f616d615f65712e706e67"><img src="https://camo.githubusercontent.com/abec3b9791553498f1ab2c6a9aadb8a3d79ba754db8ef4bac71e1aef706868f1/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f616d615f65712e706e67" alt="image" data-canonical-src="https://normannrion.fr/wp-content/uploads/2019/11/ama_eq.png" style="max-width:100%;"></a></p>
<p>where</p>
<ul>
<li>x is the vector of all variables</li>
<li>τ is the number of past lags</li>
<li>θ is the number of future lags</li>
</ul>
<p>The solution is of the form</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b0fe01312cff5b11cc9248be07b857c9609cd3fe3baf4b0d71dfba4148a4ddd0/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f616d615f736f6c2e706e67"><img src="https://camo.githubusercontent.com/b0fe01312cff5b11cc9248be07b857c9609cd3fe3baf4b0d71dfba4148a4ddd0/68747470733a2f2f6e6f726d616e6e72696f6e2e66722f77702d636f6e74656e742f75706c6f6164732f323031392f31312f616d615f736f6c2e706e67" alt="image" data-canonical-src="https://normannrion.fr/wp-content/uploads/2019/11/ama_sol.png" style="max-width:100%;"></a></p>
<p>To solve a system using this method</p>
<ol>
<li>Define the model through the <code>ModelAM</code> structure. The syntax is typically</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="M0 = ModelAM(τ,θ,[Hmτ,...,Hθ])
"><pre>M0 <span class="pl-k">=</span> <span class="pl-c1">ModelAM</span>(τ,θ,[Hmτ,<span class="pl-k">...</span>,Hθ])</pre></div>
<ol start="2">
<li>Call the <code>solve_am</code> method over the newly created model</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="B = solve_am(M0)
"><pre>B <span class="pl-k">=</span> <span class="pl-c1">solve_am</span>(M0)</pre></div>
<p>The different methods can be tested using Binder.</p>
<p><a href="https://mybinder.org/v2/gh/NormannR/LRESolve.jl.git/master" rel="nofollow"><img src="https://camo.githubusercontent.com/581c077bdbc6ca6899c86d0acc6145ae85e9d80e6f805a1071793dbe48917982/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667" alt="Binder" data-canonical-src="https://mybinder.org/badge_logo.svg" style="max-width:100%;"></a></p>
</article></div>