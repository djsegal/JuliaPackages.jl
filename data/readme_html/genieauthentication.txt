<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-genieauthentication" class="anchor" aria-hidden="true" href="#genieauthentication"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GenieAuthentication</h1>
<p>Authentication plugin for <code>Genie.jl</code></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Add the <code>GenieAuthentication</code> plugin to your Genie app dependencies.</p>
<p>First load the Genie app's environment:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ cd /path/to/your/genie_app

$ bin/repl
"><pre>$ <span class="pl-c1">cd</span> /path/to/your/genie_app

$ bin/repl</pre></div>
<p>Next, add the plugin:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ]

(MyGenieApp) pkg&gt; add https://github.com/GenieFramework/GenieAuthentication.jl#master
"><pre>julia<span class="pl-k">&gt;</span> ]

(MyGenieApp) pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>GenieFramework<span class="pl-k">/</span>GenieAuthentication<span class="pl-k">.</span>jl<span class="pl-c"><span class="pl-c">#</span>master</span></pre></div>
<p>Once added, we can use it to add its files to the Genie app (required only upon installation):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using GenieAuthentication

julia&gt; GenieAuthentication.install(@__DIR__)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> GenieAuthentication

julia<span class="pl-k">&gt;</span> GenieAuthentication<span class="pl-k">.</span><span class="pl-c1">install</span>(<span class="pl-c1">@__DIR__</span>)</pre></div>
<p>The above command will set up the plugin's files within your Genie app (will potentially add new views, controllers, models, migrations, initializers, etc).</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>The main plugin file should now be found in the <code>plugins/</code> folder within your Genie app. It sets up configuration and registers routes.</p>
<hr>
<p><strong>HEADS UP</strong></p>
<p>Make sure to comment out the <code>/register</code> routes if you don't want to provide user registration features. Otherwise you run the risk of allowing random users to create accounts and expose your application!</p>
<hr>
<h3><a id="user-content-set-up-the-database" class="anchor" aria-hidden="true" href="#set-up-the-database"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Set up the database</h3>
<p>The plugin needs DB support to store user data. You will find a <code>*_create_table_users.jl</code> migration file within the <code>db/migrations/</code> folder. We need to run it:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using SearchLight

julia&gt; SearchLight.Migration.up(&quot;CreateTableUsers&quot;)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SearchLight

julia<span class="pl-k">&gt;</span> SearchLight<span class="pl-k">.</span>Migration<span class="pl-k">.</span><span class="pl-c1">up</span>(<span class="pl-s"><span class="pl-pds">"</span>CreateTableUsers<span class="pl-pds">"</span></span>)</pre></div>
<p>This will create the necessary table.</p>
<hr>
<p><strong>HEADS UP</strong></p>
<p>If your app wasn't already set up to work with SearchLight, you need to add SearchLight support first. Please check the Genie documentation on how to do that.</p>
<hr>
<h3><a id="user-content-set-up-the-successful-login-route" class="anchor" aria-hidden="true" href="#set-up-the-successful-login-route"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Set up the successful login route</h3>
<p>Upon a successful login, the plugin will redirect the user to the <code>:get_home</code> route. Please make sure you define the route and name it accordingly, ex:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="route(&quot;/admin&quot;, AdminController.index, named = :get_home)
"><pre><span class="pl-c1">route</span>(<span class="pl-s"><span class="pl-pds">"</span>/admin<span class="pl-pds">"</span></span>, AdminController<span class="pl-k">.</span>index, named <span class="pl-k">=</span> <span class="pl-c1">:get_home</span>)</pre></div>
<p>If for any reason you can't define the route, you can alternatively edit the code in the <code>login()</code> function in <code>app/resources/authentication/AuthenticationController.jl</code> and change <code>:get_home</code> with your desired route. Editing the controller, however, is not recommended, as future updates might overwrite your changes.</p>
<hr>
<h3><a id="user-content-forcing-authentication" class="anchor" aria-hidden="true" href="#forcing-authentication"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Forcing authentication</h3>
<p>Now that we have a functional authentication system, we can use a Genie controller <code>before</code> hook to force authentication. Add this to the controller files which you want placed behind auth:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="before() = authenticated() || throw(ExceptionalResponse(redirect(:show_login)))
"><pre><span class="pl-en">before</span>() <span class="pl-k">=</span> <span class="pl-c1">authenticated</span>() <span class="pl-k">||</span> <span class="pl-c1">throw</span>(<span class="pl-c1">ExceptionalResponse</span>(<span class="pl-c1">redirect</span>(<span class="pl-c1">:show_login</span>)))</pre></div>
<p>The <code>before</code> hook will automatically be invoked by <code>Genie.Router</code> before actually executing the route handler. By throwing an <code>ExceptionalResponse</code> <code>Exception</code> we force a redirect to the <code>:show_login</code> route which displays the login form.</p>
<h4><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h4>
<p>This is how we would limit access to a full module by forcing authentication:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="module AdminController

using GenieAuthentication, Genie.Renderer, Genie.Exceptions, Genie.Renderer.Html

before() = authenticated() || throw(ExceptionalResponse(redirect(:show_login)))

function index()
  h1(&quot;Welcome Admin&quot;) |&gt; html
end

end
"><pre><span class="pl-k">module</span> AdminController

<span class="pl-k">using</span> GenieAuthentication, Genie<span class="pl-k">.</span>Renderer, Genie<span class="pl-k">.</span>Exceptions, Genie<span class="pl-k">.</span>Renderer<span class="pl-k">.</span>Html

<span class="pl-en">before</span>() <span class="pl-k">=</span> <span class="pl-c1">authenticated</span>() <span class="pl-k">||</span> <span class="pl-c1">throw</span>(<span class="pl-c1">ExceptionalResponse</span>(<span class="pl-c1">redirect</span>(<span class="pl-c1">:show_login</span>)))

<span class="pl-k">function</span> <span class="pl-en">index</span>()
  <span class="pl-c1">h1</span>(<span class="pl-s"><span class="pl-pds">"</span>Welcome Admin<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> html
<span class="pl-k">end</span>

<span class="pl-k">end</span></pre></div>
<hr>
<p><strong>HEADS UP</strong></p>
<p>If you're throwing an <code>ExceptionalResponse</code> as the result of the failed authentication, make sure to also be <code>using Genie.Exceptions</code>.</p>
<hr>
<h4><a id="user-content-example-1" class="anchor" aria-hidden="true" href="#example-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h4>
<p>The plugin can also be used within functions.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="module AdminController

using GenieAuthentication, Genie.Renderer, Genie.Exceptions, Genie.Renderer.Html

# This function _can not_ be accessed without authentication
function index()
  authenticated() || throw(ExceptionalResponse(redirect(:show_login)))
  h1(&quot;Welcome Admin&quot;) |&gt; html
end

# This function _can_ be accessed without authentication
function terms_and_conditions()
  # content here
end

end
"><pre><span class="pl-k">module</span> AdminController

<span class="pl-k">using</span> GenieAuthentication, Genie<span class="pl-k">.</span>Renderer, Genie<span class="pl-k">.</span>Exceptions, Genie<span class="pl-k">.</span>Renderer<span class="pl-k">.</span>Html

<span class="pl-c"><span class="pl-c">#</span> This function _can not_ be accessed without authentication</span>
<span class="pl-k">function</span> <span class="pl-en">index</span>()
  <span class="pl-c1">authenticated</span>() <span class="pl-k">||</span> <span class="pl-c1">throw</span>(<span class="pl-c1">ExceptionalResponse</span>(<span class="pl-c1">redirect</span>(<span class="pl-c1">:show_login</span>)))
  <span class="pl-c1">h1</span>(<span class="pl-s"><span class="pl-pds">"</span>Welcome Admin<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> html
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> This function _can_ be accessed without authentication</span>
<span class="pl-k">function</span> <span class="pl-en">terms_and_conditions</span>()
  <span class="pl-c"><span class="pl-c">#</span> content here</span>
<span class="pl-k">end</span>

<span class="pl-k">end</span></pre></div>
<p>Or even:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using GenieAuthentication

route(&quot;/you/shant/pass&quot;) do 
  authenticated() || return &quot;Can't touch this!&quot;
  
  &quot;You're welcome!&quot;
end
"><pre><span class="pl-k">using</span> GenieAuthentication

<span class="pl-c1">route</span>(<span class="pl-s"><span class="pl-pds">"</span>/you/shant/pass<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> 
  <span class="pl-c1">authenticated</span>() <span class="pl-k">||</span> <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">"</span>Can't touch this!<span class="pl-pds">"</span></span>
  
  <span class="pl-s"><span class="pl-pds">"</span>You're welcome!<span class="pl-pds">"</span></span>
<span class="pl-k">end</span></pre></div>
<hr>
<h3><a id="user-content-adding-a-user" class="anchor" aria-hidden="true" href="#adding-a-user"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Adding a user</h3>
<p>You can create a user at the REPL like this (using stronger usernames and passwords though <g-emoji class="g-emoji" alias="see_no_evil" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f648.png">🙈</g-emoji>):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; u = User(email = &quot;admin@admin&quot;, name = &quot;Admin&quot;, password = Users.hash_password(&quot;admin&quot;), username = &quot;admin&quot;)

julia&gt; save!(u)
"><pre>julia<span class="pl-k">&gt;</span> u <span class="pl-k">=</span> <span class="pl-c1">User</span>(email <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>admin@admin<span class="pl-pds">"</span></span>, name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Admin<span class="pl-pds">"</span></span>, password <span class="pl-k">=</span> Users<span class="pl-k">.</span><span class="pl-c1">hash_password</span>(<span class="pl-s"><span class="pl-pds">"</span>admin<span class="pl-pds">"</span></span>), username <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>admin<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">save!</span>(u)</pre></div>
</article></div>