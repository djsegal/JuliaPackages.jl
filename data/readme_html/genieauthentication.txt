<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-genieauthentication" class="anchor" aria-hidden="true" href="#genieauthentication"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GenieAuthentication</h1>
<p dir="auto">Authentication plugin for <code>Genie.jl</code></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The <code>GenieAuthentication.jl</code> package is an authentication plugin for <code>Genie.jl</code>, the highly productive Julia web framework.
As such, it requires installation within the environment of a <code>Genie.jl</code> MVC application, allowing the plugin to install its files (which include models, controllers, database migrations, plugins, and other files).</p>
<h3 dir="auto"><a id="user-content-load-your-geniejl-app" class="anchor" aria-hidden="true" href="#load-your-geniejl-app"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Load your <code>Genie.jl</code> app</h3>
<p dir="auto">First load the <code>Genie.jl</code> application, for example using</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$&gt; cd /path/to/your/genie_app

$&gt; ./bin/repl"><pre>$<span class="pl-k">&gt;</span> <span class="pl-c1">cd</span> /path/to/your/genie_app

$<span class="pl-k">&gt;</span> ./bin/repl</pre></div>
<p dir="auto">Alternatively, you can create a new <code>Genie.jl</code> MVC application (<code>SearchLight.jl</code> ORM support is required in order to store the user accounts into the database). If you are not sure how to do that, please follow the documentation for <code>Genie.jl</code>, for example at <a href="https://genieframework.com/docs/Genie/v5/tutorials/4-1--Developing_MVC_Web_Apps.html" rel="nofollow">https://genieframework.com/docs/Genie/v5/tutorials/4-1--Developing_MVC_Web_Apps.html</a>.</p>
<h3 dir="auto"><a id="user-content-add-the-plugin" class="anchor" aria-hidden="true" href="#add-the-plugin"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Add the plugin</h3>
<p dir="auto">Next, add the plugin:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]

(MyGenieApp) pkg&gt; add GenieAuthentication"><pre>julia<span class="pl-k">&gt;</span> ]

(MyGenieApp) pkg<span class="pl-k">&gt;</span> add GenieAuthentication</pre></div>
<p dir="auto">Once added, we can use its <code>install</code> function to add its files to the <code>Genie.jl</code> app (required only upon installation):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using GenieAuthentication

julia&gt; GenieAuthentication.install(@__DIR__)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> GenieAuthentication

julia<span class="pl-k">&gt;</span> GenieAuthentication<span class="pl-k">.</span><span class="pl-c1">install</span>(<span class="pl-c1">@__DIR__</span>)</pre></div>
<p dir="auto">The above command will set up the plugin's files within your <code>Genie.jl</code> app (will create various files including new views, controllers, models, migrations, initializers, etc).</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">The main plugin file should now be found in the <code>plugins/</code> folder within your <code>Genie.jl</code> app. It sets up configuration and registers routes.</p>
<hr>
<p dir="auto"><strong>HEADS UP</strong></p>
<p dir="auto">Make sure to uncomment out the <code>/register</code> routes in <code>plugins/genie_authentication.jl</code> if you want to provide user registration features.</p>
<p dir="auto">They are disabled by default in order to eliminate the risk of accidentally allowing random users to create accounts and expose your application.</p>
<hr>
<h3 dir="auto"><a id="user-content-set-up-the-database" class="anchor" aria-hidden="true" href="#set-up-the-database"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Set up the database</h3>
<p dir="auto">The plugin needs DB support to store user data. You will find a <code>*_create_table_users.jl</code> migration file within the <code>db/migrations/</code> folder. We need to run it:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using SearchLight

julia&gt; SearchLight.Migration.up(&quot;CreateTableUsers&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SearchLight

julia<span class="pl-k">&gt;</span> SearchLight<span class="pl-k">.</span>Migration<span class="pl-k">.</span><span class="pl-c1">up</span>(<span class="pl-s"><span class="pl-pds">"</span>CreateTableUsers<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">This will create the necessary table.</p>
<hr>
<p dir="auto"><strong>HEADS UP</strong></p>
<p dir="auto">If your app wasn't already set up to work with <code>SearchLight.jl</code>, you need to add <code>SearchLight.jl</code> support first.
Please check the <code>Genie.jl</code> documentation on how to do that, for example at <a href="https://genieframework.com/docs/Genie/v5/tutorials/4-1--Developing_MVC_Web_Apps.html#Connecting-to-the-database" rel="nofollow">https://genieframework.com/docs/Genie/v5/tutorials/4-1--Developing_MVC_Web_Apps.html#Connecting-to-the-database</a>. This includes setting up a <code>db/connection.yml</code> and an empty migration table with <code>create_migrations_table</code> if it has not already been done.</p>
<hr>
<h3 dir="auto"><a id="user-content-set-up-the-successful-login-route" class="anchor" aria-hidden="true" href="#set-up-the-successful-login-route"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Set up the successful login route</h3>
<p dir="auto">Upon a successful login, the plugin will redirect the user to the <code>:success</code> route, which invokes <code>AuthenticationController.success</code>.</p>
<hr>
<h3 dir="auto"><a id="user-content-enforcing-authentication" class="anchor" aria-hidden="true" href="#enforcing-authentication"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Enforcing authentication</h3>
<p dir="auto">Now that we have a functional authentication system, there are two ways of enforcing authentication.</p>
<h4 dir="auto"><a id="user-content-authenticated" class="anchor" aria-hidden="true" href="#authenticated"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>authenticated!()</code></h4>
<p dir="auto">The <code>authenticated!()</code> function will enforce authentication - meaning that it will check if a user is authenticated, and if not, it will automatically throw an <code>ExceptionalResponse</code> and force a redirect to the <code>:show_login</code> route which displays the login form.</p>
<p dir="auto">We can use this anywhere in our route handling code, for example within routes:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# routes.jl
using GenieAuthentication

route(&quot;/protected&quot;) do; authenticated!()
  # this code is only accessible for authenticated users
end"><pre><span class="pl-c"><span class="pl-c">#</span> routes.jl</span>
<span class="pl-k">using</span> GenieAuthentication

<span class="pl-c1">route</span>(<span class="pl-s"><span class="pl-pds">"</span>/protected<span class="pl-pds">"</span></span>) <span class="pl-k">do</span>; <span class="pl-c1">authenticated!</span>()
  <span class="pl-c"><span class="pl-c">#</span> this code is only accessible for authenticated users</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">Or within handler functions inside controllers:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# routes.jl
route(&quot;/protected&quot;, ProtectedController.secret)"><pre><span class="pl-c"><span class="pl-c">#</span> routes.jl</span>
<span class="pl-c1">route</span>(<span class="pl-s"><span class="pl-pds">"</span>/protected<span class="pl-pds">"</span></span>, ProtectedController<span class="pl-k">.</span>secret)</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# ProtectedController.jl
using GenieAuthentication

function secret()
  authenticated!()

  # this code is only accessible for authenticated users
end"><pre><span class="pl-c"><span class="pl-c">#</span> ProtectedController.jl</span>
<span class="pl-k">using</span> GenieAuthentication

<span class="pl-k">function</span> <span class="pl-en">secret</span>()
  <span class="pl-c1">authenticated!</span>()

  <span class="pl-c"><span class="pl-c">#</span> this code is only accessible for authenticated users</span>
<span class="pl-k">end</span></pre></div>
<hr>
<p dir="auto"><strong>HEADS UP</strong></p>
<p dir="auto">If you're throwing an <code>ExceptionalResponse</code> as the result of the failed authentication, make sure to also be <code>using Genie.Exceptions</code>.</p>
<hr>
<h4 dir="auto"><a id="user-content-authenticated-1" class="anchor" aria-hidden="true" href="#authenticated-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>authenticated()</code></h4>
<p dir="auto">In addition to the imperative style of the <code>authenticated!()</code> function, we can also use the <code>authenticated()</code> function (no <code>!</code> at the end) which returns a <code>bool</code> indicated if a user is currently authenticated.</p>
<p dir="auto">It is especially used for adding dynamic UI elements based on the state of the authentication:</p>
<div class="highlight highlight-text-html-basic notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="&lt;div class=&quot;row align-items-center&quot;&gt;
  &lt;div class=&quot;col col-12 text-center&quot;&gt;
    &lt;% if ! authenticated() %&gt;
    &lt;a href=&quot;/login&quot; class=&quot;btn btn-light btn-lg&quot; style=&quot;color: #fff;&quot;&gt;Login&lt;/a&gt;
    &lt;% end %&gt;
  &lt;/div&gt;
&lt;/div&gt;"><pre><span class="pl-kos">&lt;</span><span class="pl-ent">div</span> <span class="pl-c1">class</span>="<span class="pl-s">row align-items-center</span>"<span class="pl-kos">&gt;</span>
  <span class="pl-kos">&lt;</span><span class="pl-ent">div</span> <span class="pl-c1">class</span>="<span class="pl-s">col col-12 text-center</span>"<span class="pl-kos">&gt;</span>
    <span class="pl-kos">&lt;</span>% if ! authenticated() %<span class="pl-kos">&gt;</span>
    <span class="pl-kos">&lt;</span><span class="pl-ent">a</span> <span class="pl-c1">href</span>="<span class="pl-s">/login</span>" <span class="pl-c1">class</span>="<span class="pl-s">btn btn-light btn-lg</span>" <span class="pl-c1">style</span>="<span class="pl-s">color: #fff;</span>"<span class="pl-kos">&gt;</span>Login<span class="pl-kos">&lt;/</span><span class="pl-ent">a</span><span class="pl-kos">&gt;</span>
    <span class="pl-kos">&lt;</span>% end %<span class="pl-kos">&gt;</span>
  <span class="pl-kos">&lt;/</span><span class="pl-ent">div</span><span class="pl-kos">&gt;</span>
<span class="pl-kos">&lt;/</span><span class="pl-ent">div</span><span class="pl-kos">&gt;</span></pre></div>
<p dir="auto">We can also use it to mimic the behaviour of <code>authenticated!()</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Genie.Exceptions
using GenieAuthentication

# This function _can not_ be accessed without authentication
function index()
  authenticated() || throw(ExceptionalResponse(redirect(:show_login)))

  h1(&quot;Welcome Admin&quot;) |&gt; html
end"><pre><span class="pl-k">using</span> Genie<span class="pl-k">.</span>Exceptions
<span class="pl-k">using</span> GenieAuthentication

<span class="pl-c"><span class="pl-c">#</span> This function _can not_ be accessed without authentication</span>
<span class="pl-k">function</span> <span class="pl-en">index</span>()
  <span class="pl-c1">authenticated</span>() <span class="pl-k">||</span> <span class="pl-c1">throw</span>(<span class="pl-c1">ExceptionalResponse</span>(<span class="pl-c1">redirect</span>(<span class="pl-c1">:show_login</span>)))

  <span class="pl-c1">h1</span>(<span class="pl-s"><span class="pl-pds">"</span>Welcome Admin<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> html
<span class="pl-k">end</span></pre></div>
<p dir="auto">Or to perform custom actions:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GenieAuthentication

route(&quot;/you/shant/pass&quot;) do
  authenticated() || return &quot;Can't touch this!&quot;

  &quot;You're welcome!&quot;
end"><pre><span class="pl-k">using</span> GenieAuthentication

<span class="pl-c1">route</span>(<span class="pl-s"><span class="pl-pds">"</span>/you/shant/pass<span class="pl-pds">"</span></span>) <span class="pl-k">do</span>
  <span class="pl-c1">authenticated</span>() <span class="pl-k">||</span> <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">"</span>Can't touch this!<span class="pl-pds">"</span></span>

  <span class="pl-s"><span class="pl-pds">"</span>You're welcome!<span class="pl-pds">"</span></span>
<span class="pl-k">end</span></pre></div>
<hr>
<h3 dir="auto"><a id="user-content-adding-a-user" class="anchor" aria-hidden="true" href="#adding-a-user"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Adding a user</h3>
<p dir="auto">You can create a user at the REPL like this (using stronger usernames and passwords though <g-emoji class="g-emoji" alias="see_no_evil" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f648.png">🙈</g-emoji>):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Users

julia&gt; u = User(email = &quot;admin@admin&quot;, name = &quot;Admin&quot;, password = Users.hash_password(&quot;admin&quot;), username = &quot;admin&quot;)

julia&gt; save!(u)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Users

julia<span class="pl-k">&gt;</span> u <span class="pl-k">=</span> <span class="pl-c1">User</span>(email <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>admin@admin<span class="pl-pds">"</span></span>, name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Admin<span class="pl-pds">"</span></span>, password <span class="pl-k">=</span> Users<span class="pl-k">.</span><span class="pl-c1">hash_password</span>(<span class="pl-s"><span class="pl-pds">"</span>admin<span class="pl-pds">"</span></span>), username <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>admin<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">save!</span>(u)</pre></div>
<hr>
<h3 dir="auto"><a id="user-content-get-current-user-information" class="anchor" aria-hidden="true" href="#get-current-user-information"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Get current user information</h3>
<p dir="auto">If the user was authenticated, check first with <code>authenticated()</code>, you can obtain the current user information with <code>current_user()</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GenieAuthentication

route(&quot;/your/email&quot;) do
  authenticated() || return &quot;Can't get it!&quot;
  user = current_user()
  user.email
end"><pre><span class="pl-k">using</span> GenieAuthentication

<span class="pl-c1">route</span>(<span class="pl-s"><span class="pl-pds">"</span>/your/email<span class="pl-pds">"</span></span>) <span class="pl-k">do</span>
  <span class="pl-c1">authenticated</span>() <span class="pl-k">||</span> <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">"</span>Can't get it!<span class="pl-pds">"</span></span>
  user <span class="pl-k">=</span> <span class="pl-c1">current_user</span>()
  user<span class="pl-k">.</span>email
<span class="pl-k">end</span></pre></div>
</article></div>