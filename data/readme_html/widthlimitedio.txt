<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-widthlimitedio" class="anchor" aria-hidden="true" href="#widthlimitedio"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>WidthLimitedIO</h1>
<p dir="auto"><a href="https://github.com/JuliaIO/WidthLimitedIO.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/JuliaIO/WidthLimitedIO.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaIO/WidthLimitedIO.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/df51932ddf93850cfd6c27a1f21718f568f6c482e8bac16ec8704ff66fe2b944/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961494f2f57696474684c696d69746564494f2e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaIO/WidthLimitedIO.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This Julia package exports a type, <code>TextWidthLimiter &lt;: IO</code>, which can be used to limit output to no more than a specified number of characters.
Demo:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using WidthLimitedIO

julia&gt; limitio = TextWidthLimiter(IOBuffer(), 15);     # generous limit

julia&gt; println(limitio, &quot;Hello, world!&quot;); String(take!(limitio))
&quot;Hello, world!\n&quot;

julia&gt; limitio = TextWidthLimiter(IOBuffer(), 5);      # restrictive limit

julia&gt; println(limitio, &quot;Hello, world!&quot;); String(take!(limitio))
&quot;Hell…&quot;

julia&gt; print(limitio, collect(1:15)); String(take!(limitio))
&quot;[1, …&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> WidthLimitedIO

julia<span class="pl-k">&gt;</span> limitio <span class="pl-k">=</span> <span class="pl-c1">TextWidthLimiter</span>(<span class="pl-c1">IOBuffer</span>(), <span class="pl-c1">15</span>);     <span class="pl-c"><span class="pl-c">#</span> generous limit</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">println</span>(limitio, <span class="pl-s"><span class="pl-pds">"</span>Hello, world!<span class="pl-pds">"</span></span>); <span class="pl-c1">String</span>(<span class="pl-c1">take!</span>(limitio))
<span class="pl-s"><span class="pl-pds">"</span>Hello, world!<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> limitio <span class="pl-k">=</span> <span class="pl-c1">TextWidthLimiter</span>(<span class="pl-c1">IOBuffer</span>(), <span class="pl-c1">5</span>);      <span class="pl-c"><span class="pl-c">#</span> restrictive limit</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">println</span>(limitio, <span class="pl-s"><span class="pl-pds">"</span>Hello, world!<span class="pl-pds">"</span></span>); <span class="pl-c1">String</span>(<span class="pl-c1">take!</span>(limitio))
<span class="pl-s"><span class="pl-pds">"</span>Hell…<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">print</span>(limitio, <span class="pl-c1">collect</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">15</span>)); <span class="pl-c1">String</span>(<span class="pl-c1">take!</span>(limitio))
<span class="pl-s"><span class="pl-pds">"</span>[1, …<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">A particular feature of the package is that it takes care to ensure that font-color changes and other
features implemented via <a href="https://en.wikipedia.org/wiki/ANSI_escape_code" rel="nofollow">ANSI escape codes</a> work
properly:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; limitio = TextWidthLimiter(IOBuffer(), 5);

julia&gt; printstyled(IOContext(limitio, :color=&gt;true), &quot;abcdef&quot;; color=:red); String(take!(limitio))
&quot;\e[31mabcd…\e[39m&quot;"><pre>julia<span class="pl-k">&gt;</span> limitio <span class="pl-k">=</span> <span class="pl-c1">TextWidthLimiter</span>(<span class="pl-c1">IOBuffer</span>(), <span class="pl-c1">5</span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">printstyled</span>(<span class="pl-c1">IOContext</span>(limitio, <span class="pl-c1">:color</span><span class="pl-k">=&gt;</span><span class="pl-c1">true</span>), <span class="pl-s"><span class="pl-pds">"</span>abcdef<span class="pl-pds">"</span></span>; color<span class="pl-k">=</span><span class="pl-c1">:red</span>); <span class="pl-c1">String</span>(<span class="pl-c1">take!</span>(limitio))
<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\e</span>[31mabcd…<span class="pl-cce">\e</span>[39m<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">Thus the text-color was properly reset despite having exceeded the width of the buffer (as evidenced by the <code>…</code> character).
When the string above is printed, it displays</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="abcd…"><pre class="notranslate"><code>abcd…
</code></pre></div>
<p dir="auto">in red, while avoiding any corruption of any other on-screen display.</p>
<p dir="auto"><code>TextWidthLimiter</code> was initially in <a href="https://github.com/JuliaDebug/Cthulhu.jl">Cthulhu.jl</a>,
but was redesigned and moved here to allow others to take advantage of it.
It may be particularly useful for terminal programs where you may want to limit options to a single line.</p>
</article></div>