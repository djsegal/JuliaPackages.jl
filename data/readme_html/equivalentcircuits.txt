<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-equivalentcircuitsjl" class="anchor" aria-hidden="true" href="#equivalentcircuitsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>EquivalentCircuits.jl</h1>
<p dir="auto">This Julia module allows users to analyse their <strong>electrochemical impedance spectroscopy</strong> (EIS) data using <strong>equivalent electrical circuits</strong>. EquivalentCircuits.jl can be used to either fit the parameters of a given equivalent electrical circuit , or to get recommendations for an appropriate equivalent electrical circuit configuration. The latter is done by conducting an automatic literature search, where the compatibility of impedance measurements with a variety of equivalent circuits from the EIS literature is evaluated. Alternatively, a <a href="https://en.wikipedia.org/wiki/Gene_expression_programming" rel="nofollow">gene expression programming</a>-based approach can be used to algorithmically search for compatible circuits.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The package can be installed using the package manager.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="] add EquivalentCircuits"><pre lang="julialang" class="notranslate"><code>] add EquivalentCircuits
</code></pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-circuit-notation" class="anchor" aria-hidden="true" href="#circuit-notation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Circuit notation</h3>
<p dir="auto">Equivalent electrical circuit models are composed of electrical elements, connected in series or in parallel. The four fundamental elements that are most commonly encountered in equivalent electrical circuits, are resistors, capacitors, inductors and constant phase elements. These four elements are represented by the capital letters R, C, L and P, respectively. serially connected elements have dashes between them, wereas parallely connected elements are placed between square brackets and separated by a comma. Finally all the elements in a circuit are numbered. Using these notation rules, the circuit <code>R1-[C2,R3-[C4,R5]]</code> corresponds to:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="example_circuit.png"><img src="example_circuit.png" alt="" style="max-width: 100%;"></a></p>
<p dir="auto">When using this package, the circuit should input as a String:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using EquivalentCircuits

circuitstring = &quot;R1-[C2,R3-[C4,R5]]&quot;"><pre><span class="pl-k">using</span> EquivalentCircuits

circuitstring <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>R1-[C2,R3-[C4,R5]]<span class="pl-pds">"</span></span></pre></div>
<h3 dir="auto"><a id="user-content-parameter-fitting" class="anchor" aria-hidden="true" href="#parameter-fitting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Parameter fitting</h3>
<p dir="auto">When an appropriate circuit model is available, the parameters can be fitted to experimental data using the <code>parameteroptimisation</code> function which accepts two mandatory arguments:</p>
<ul dir="auto">
<li><code>circuitstring</code> : the equivalent circuit, provided as a string with the circuit notation displayed above.</li>
<li><code>data</code> : the filepath of the electrochemical impedance measurement data.</li>
</ul>
<p dir="auto">Furthermore, there are three optional keyword arguments for increased functionality:</p>
<ul dir="auto">
<li><code>x0</code>: An optional initial parameterset</li>
<li><code>weights</code>: A vector of equal length as the frequencies. This can be used to attatch more importance to specific areas within the frequency range.</li>
<li><code>fixed_params</code>: A tuple with the indices of the parameters that are to be fixed during the optimisation and the corresponding fixed parameter values.</li>
</ul>
<p dir="auto">The data should be provided as a CSV file with three columns: imaginary impedance, real impedance and frequency (see example_measurements.csv).</p>
<p dir="auto">Lets first take a look at what the Ã§ontents of the <a href="https://github.com/MaximeVH/EquivalentCircuits.jl/blob/master/example_measurements.csv">example_measurements.csv</a> file look like:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using CSV, DataFrames

#Load the measurement data.

data = &quot;example_measurements.csv&quot;; #This should be the filepath of the example_measurements.csv file.

df = CSV.read(&quot;example_measurements.csv&quot;,DataFrame,header = false);

#Rename the columns for illustration purposes.

rename_dict = Dict(&quot;Column1&quot;=&gt;&quot;Reals&quot;,&quot;Column2&quot;=&gt;&quot;Imags&quot;,&quot;Column3&quot;=&gt;&quot;Frequencies&quot;);

rename!(df, rename_dict);

println(df)
"><pre><span class="pl-k">using</span> CSV, DataFrames

<span class="pl-c"><span class="pl-c">#</span>Load the measurement data.</span>

data <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>example_measurements.csv<span class="pl-pds">"</span></span>; <span class="pl-c"><span class="pl-c">#</span>This should be the filepath of the example_measurements.csv file.</span>

df <span class="pl-k">=</span> CSV<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>example_measurements.csv<span class="pl-pds">"</span></span>,DataFrame,header <span class="pl-k">=</span> <span class="pl-c1">false</span>);

<span class="pl-c"><span class="pl-c">#</span>Rename the columns for illustration purposes.</span>

rename_dict <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>Column1<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Reals<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>Column2<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Imags<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>Column3<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Frequencies<span class="pl-pds">"</span></span>);

<span class="pl-c1">rename!</span>(df, rename_dict);

<span class="pl-c1">println</span>(df)
</pre></div>
<p dir="auto">Next we can fit the parameters of our example ciruit to the example measurement data as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="circuitparams = parameteroptimisation(circuitstring,data)"><pre>circuitparams <span class="pl-k">=</span> <span class="pl-c1">parameteroptimisation</span>(circuitstring,data)</pre></div>
<p dir="auto">Some users may find it more convenient to directly input the complex-valued impedance measurements and their corresponding frequency values to the function vectors. This is illustrated below.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="measurements = [5919.90 - 15.79im, 5919.58 - 32.68im, 5918.18 - 67.58im, 5912.24 - 139.49im, 5887.12 - 285.74im, 5785.04 - 566.88im, 5428.94 - 997.19im, 4640.21 - 1257.83im, 3871.84 - 978.97im, 3537.68 - 564.96im, 3442.94 - 315.40im, 3418.14 - 219.69im, 3405.51 - 242.57im, 3373.90 - 396.07im, 3249.67 - 742.03im, 2808.42 - 1305.92im, 1779.41 - 1698.97im, 701.96 - 1361.47im, 208.29 - 777.65im, 65.93 - 392.51im]

frequencies = [0.10, 0.21, 0.43, 0.89, 1.83, 3.79, 7.85, 16.24, 33.60, 69.52, 143.84, 297.64, 615.85, 1274.27, 2636.65, 5455.59, 11288.38, 23357.21, 48329.30, 100000.00]

circuitparams = parameteroptimisation(circuitstring,measurements,frequencies)"><pre>measurements <span class="pl-k">=</span> [<span class="pl-c1">5919.90</span> <span class="pl-k">-</span> <span class="pl-c1">15.79im</span>, <span class="pl-c1">5919.58</span> <span class="pl-k">-</span> <span class="pl-c1">32.68im</span>, <span class="pl-c1">5918.18</span> <span class="pl-k">-</span> <span class="pl-c1">67.58im</span>, <span class="pl-c1">5912.24</span> <span class="pl-k">-</span> <span class="pl-c1">139.49im</span>, <span class="pl-c1">5887.12</span> <span class="pl-k">-</span> <span class="pl-c1">285.74im</span>, <span class="pl-c1">5785.04</span> <span class="pl-k">-</span> <span class="pl-c1">566.88im</span>, <span class="pl-c1">5428.94</span> <span class="pl-k">-</span> <span class="pl-c1">997.19im</span>, <span class="pl-c1">4640.21</span> <span class="pl-k">-</span> <span class="pl-c1">1257.83im</span>, <span class="pl-c1">3871.84</span> <span class="pl-k">-</span> <span class="pl-c1">978.97im</span>, <span class="pl-c1">3537.68</span> <span class="pl-k">-</span> <span class="pl-c1">564.96im</span>, <span class="pl-c1">3442.94</span> <span class="pl-k">-</span> <span class="pl-c1">315.40im</span>, <span class="pl-c1">3418.14</span> <span class="pl-k">-</span> <span class="pl-c1">219.69im</span>, <span class="pl-c1">3405.51</span> <span class="pl-k">-</span> <span class="pl-c1">242.57im</span>, <span class="pl-c1">3373.90</span> <span class="pl-k">-</span> <span class="pl-c1">396.07im</span>, <span class="pl-c1">3249.67</span> <span class="pl-k">-</span> <span class="pl-c1">742.03im</span>, <span class="pl-c1">2808.42</span> <span class="pl-k">-</span> <span class="pl-c1">1305.92im</span>, <span class="pl-c1">1779.41</span> <span class="pl-k">-</span> <span class="pl-c1">1698.97im</span>, <span class="pl-c1">701.96</span> <span class="pl-k">-</span> <span class="pl-c1">1361.47im</span>, <span class="pl-c1">208.29</span> <span class="pl-k">-</span> <span class="pl-c1">777.65im</span>, <span class="pl-c1">65.93</span> <span class="pl-k">-</span> <span class="pl-c1">392.51im</span>]

frequencies <span class="pl-k">=</span> [<span class="pl-c1">0.10</span>, <span class="pl-c1">0.21</span>, <span class="pl-c1">0.43</span>, <span class="pl-c1">0.89</span>, <span class="pl-c1">1.83</span>, <span class="pl-c1">3.79</span>, <span class="pl-c1">7.85</span>, <span class="pl-c1">16.24</span>, <span class="pl-c1">33.60</span>, <span class="pl-c1">69.52</span>, <span class="pl-c1">143.84</span>, <span class="pl-c1">297.64</span>, <span class="pl-c1">615.85</span>, <span class="pl-c1">1274.27</span>, <span class="pl-c1">2636.65</span>, <span class="pl-c1">5455.59</span>, <span class="pl-c1">11288.38</span>, <span class="pl-c1">23357.21</span>, <span class="pl-c1">48329.30</span>, <span class="pl-c1">100000.00</span>]

circuitparams <span class="pl-k">=</span> <span class="pl-c1">parameteroptimisation</span>(circuitstring,measurements,frequencies)</pre></div>
<h3 dir="auto"><a id="user-content-circuit-literature-search" class="anchor" aria-hidden="true" href="#circuit-literature-search"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Circuit literature search</h3>
<p dir="auto">The compatibility of a given set of impedance measurements with circuits from similar applications is evaluated with the <code>circuit_search(data,domain;kwargs)</code> function.  Users can finetune the search by restricting the complexity and element composition of the returned circuits. The function returns the compatible circuits along with their Digital Object Identifier (DOI) so that users can examine the circuits' other uses to further evaluate its suitability. An overview of the function's inputs is provided below:</p>
<ul dir="auto">
<li><code>data</code> : A CSV filepath to the measurements with their frequency information.</li>
<li><code>domain</code> : The application. The supported applications are:  "Animals",  "Plants",  "Biosensors" , "Batteries", "Fuel_cells" , "Supercapacitors",  and  "Materials".</li>
<li><code>terminals</code>  : (optional) the circuit components that are to be included in the circuit identification.</li>
<li><code>max_complexity</code>  : a hyperparameter than controls the maximum considered complexity of the circuits.</li>
</ul>
<h3 dir="auto"><a id="user-content-circuit-fitting" class="anchor" aria-hidden="true" href="#circuit-fitting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Circuit fitting</h3>
<p dir="auto">When only the electochemical impedance measurements are available, equivalent electrical circuit recommendations can be also be obtained using the <code>circuit_evolution(data;kwargs)</code> function. Details on the algorithm can be found in the <a href="https://ieeexplore.ieee.org/document/9539171" rel="nofollow">paper</a>. The data can once again be provided as a CSV file's filepath. A variety of keyword arguments can be adjusted to fine-tune the gene expression programming circuit identification procedure.The possible keyword agruments to tune the cirucit identification are:</p>
<ul dir="auto">
<li><code>generations</code> : the maximum number of algorithm iterations.</li>
<li><code>population_size</code> : the number of individuals in the population during each iteration.</li>
<li><code>terminals</code> : the circuit components that are to be included in the circuit identification.</li>
<li><code>cutoff</code>: a hyperparameter that controls the circuit complexity by removing redundant components. Lower values lead to more simple circuits, however too low values will lead to circuits that no longer fit the measurements well.</li>
<li><code>head</code> : a hyperparameter than controls the maximum considered complexity of the circuits.</li>
<li><code>initial_population</code> : the option to provide an initial population of circuits with which the algorithm starts, this initial population can be either a list of Circuit objects (as loaded with the loadpopulation function) or a custom list of circuits which can either be a list of one or more circuit strings or a list of tuples where each tuple has the circuit string as first value and the parameters as second value.</li>
</ul>
<p dir="auto">The defaults values are as follows:</p>
<table>
<thead>
<tr>
<th>Argument</th>
<th>Default value</th>
</tr>
</thead>
<tbody>
<tr>
<td>generations</td>
<td>10</td>
</tr>
<tr>
<td>population_size</td>
<td>30</td>
</tr>
<tr>
<td>terminals</td>
<td>"RCLP"</td>
</tr>
<tr>
<td>head</td>
<td>8</td>
</tr>
<tr>
<td>cutoff</td>
<td>0.80</td>
</tr>
<tr>
<td>initial_population</td>
<td>nothing</td>
</tr>
</tbody>
</table>
<p dir="auto">As an example, by running the code below you can see if a circuit can be found, consisting of only resistors and capacitors, that is capable of fitting the example measurement data. The <code>data</code> argument is the filepath of the <a href="https://github.com/MaximeVH/EquivalentCircuits.jl/blob/master/example_measurements.csv">example_measurements.csv</a> file.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="circuit_evolution(data,terminals=&quot;RC&quot;)"><pre><span class="pl-c1">circuit_evolution</span>(data,terminals<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>RC<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Alternatively, this function can also accept the measurements and frequencies as vectors, rather than a CSV file:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="circuit_evolution(measurements,frequencies,terminals=&quot;RC&quot;)"><pre><span class="pl-c1">circuit_evolution</span>(measurements,frequencies,terminals<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>RC<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Next, the file <a href="https://github.com/MaximeVH/EquivalentCircuits.jl/blob/master/Circuitlibrary.csv">Circuitlibrary.csv</a> contains a collection of various circuit topologies. We can allow the algorithm to start from this circuit collection as initial population as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Load the population from the CSV file, using the loadpopulation function.
# The input of the loadpopulation should be the filepath of Circuitpopulation.csv.
circuit_library = loadpopulation(&quot;Circuitlibrary.csv&quot;); #The input should be the filepath of the Circuitlibrary.csv file.

# Now find a circuit that fits the data, starting from the initial population of circuits
circuit_evolution(data,initial_population = circuit_library)
"><pre><span class="pl-c"><span class="pl-c">#</span> Load the population from the CSV file, using the loadpopulation function.</span>
<span class="pl-c"><span class="pl-c">#</span> The input of the loadpopulation should be the filepath of Circuitpopulation.csv.</span>
circuit_library <span class="pl-k">=</span> <span class="pl-c1">loadpopulation</span>(<span class="pl-s"><span class="pl-pds">"</span>Circuitlibrary.csv<span class="pl-pds">"</span></span>); <span class="pl-c"><span class="pl-c">#</span>The input should be the filepath of the Circuitlibrary.csv file.</span>

<span class="pl-c"><span class="pl-c">#</span> Now find a circuit that fits the data, starting from the initial population of circuits</span>
<span class="pl-c1">circuit_evolution</span>(data,initial_population <span class="pl-k">=</span> circuit_library)
</pre></div>
</article></div>