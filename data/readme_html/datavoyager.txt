<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-datavoyager" class="anchor" aria-hidden="true" href="#datavoyager"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DataVoyager</h1>
<p><a href="http://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/31267b3e96ca20997396b88f7c44233710fcc637/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="Project Status: Active - The project has reached a stable, usable state and is being actively developed." data-canonical-src="http://www.repostatus.org/badges/latest/active.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/queryverse/DataVoyager.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8634a01582961f5081bbb35c06973c0ac5548548/68747470733a2f2f7472617669732d63692e6f72672f717565727976657273652f44617461566f79616765722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/queryverse/DataVoyager.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/queryverse/datavoyager-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/ee5c4b82c5adcf2eb79eb3f3f68707c1472cfa59/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f613638356a38317764396e6c786961362f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/a685j81wd9nlxia6/branch/master?svg=true" style="max-width:100%;"></a>
<a href="http://codecov.io/github/queryverse/DataVoyager.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/c13301b083966d7f30ddb673704ccb74ea60dcaf/687474703a2f2f636f6465636f762e696f2f6769746875622f717565727976657273652f44617461566f79616765722e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/queryverse/DataVoyager.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Overview</h2>
<p>This package provides julia integration for the <a href="https://github.com/vega/voyager">Voyager</a> data exploration tool.</p>
<h2><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Getting Started</h2>
<p>DataVoyager.jl can be used for data exploration. It can help you visualize and understand any data that is in a tabular format.</p>
<p>You can install the package at the Pkg REPL-mode with:</p>
<div class="highlight highlight-source-julia"><pre>(v1<span class="pl-c1">.0</span>) pkg<span class="pl-k">&gt;</span> add DataVoyager</pre></div>
<h2><a id="user-content-exploring-data" class="anchor" aria-hidden="true" href="#exploring-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Exploring data</h2>
<p>You create a new voyager window by calling <code>Voyager</code>:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> DataVoyager

v <span class="pl-k">=</span> <span class="pl-c1">Voyager</span>()</pre></div>
<p>By itself this is not very useful, the next step is to load some data into voyager. Lets assume your data is in a <code>DataFrame</code>:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> DataFrames, DataVoyager

data <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(a<span class="pl-k">=</span><span class="pl-c1">rand</span>(<span class="pl-c1">100</span>), b<span class="pl-k">=</span><span class="pl-c1">randn</span>(<span class="pl-c1">100</span>))

v <span class="pl-k">=</span> <span class="pl-c1">Voyager</span>(data)</pre></div>
<p>You can also use the pipe to load data into voyager:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> DataFrames, DataVoyager

data <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(a<span class="pl-k">=</span><span class="pl-c1">rand</span>(<span class="pl-c1">100</span>), b<span class="pl-k">=</span><span class="pl-c1">randn</span>(<span class="pl-c1">100</span>))

v <span class="pl-k">=</span> data <span class="pl-k">|&gt;</span> <span class="pl-c1">Voyager</span>()</pre></div>
<p>With a more interesting data source</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VegaDatasets, DataVoyager

v <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">Voyager</span>()</pre></div>
<p>You can load any <a href="https://github.com/queryverse/IterableTables.jl">IterableTables.jl</a> source into voyager, i.e. not just <code>DataFrame</code>s. For example, you can load some data from a CSV file with <a href="https://github.com/queryverse/CSVFiles.jl">CSVFiles.jl</a>, filter them with <a href="https://github.com/queryverse/Query.jl">Query.jl</a> and then visualize the result with voyager:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> FileIO, CSVFiles, Query, DataVoyager

v <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>data.csv<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">@filter</span>(_<span class="pl-k">.</span>age<span class="pl-k">&gt;</span><span class="pl-c1">30</span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">Voyager</span>()</pre></div>
<p>In this example the data is streamed directly into voyager and at no point is any <code>DataFrame</code> allocated.</p>
<h2><a id="user-content-extracting-plots" class="anchor" aria-hidden="true" href="#extracting-plots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Extracting plots</h2>
<p>You can also access a plot that you have created in the voyager UI from julia, for example to save the plot to disc.</p>
<p>You can access the currently active plot in a given voyager window <code>v</code> with the brackets syntax:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VegaDatasets, DataVoyager, VegaLite

v <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">Voyager</span>()

plot1 <span class="pl-k">=</span> v[]</pre></div>
<p>At this point <code>plot1</code> will hold a standard <a href="https://github.com/fredo-dedup/VegaLite.jl">VegaLite.jl</a> plot object. You can use the normal <a href="https://github.com/fredo-dedup/VegaLite.jl">VegaLite.jl</a> functions to display such a plot, or save it to disc:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">display</span>(plot1)

plot1 <span class="pl-k">|&gt;</span> <span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>figure1.pdf<span class="pl-pds">"</span></span>)</pre></div>
<p>A useful pattern here is to save the plot as a vega-lite JSON file to disc, without the data:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VegaDatasets, DataVoyager, VegaLite

v <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">Voyager</span>()

<span class="pl-c"><span class="pl-c">#</span> Now create the plot in the UI</span>

v[] <span class="pl-k">|&gt;</span> <span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>figure1.vegalite<span class="pl-pds">"</span></span>)</pre></div>
<p>At a later point you can then load this figure specification again, but pipe new data into it:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VegaLite, VegaDatasets

<span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>figure1.vegalite<span class="pl-pds">"</span></span>)</pre></div>
</article></div>