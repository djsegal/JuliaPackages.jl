<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-datavoyager" class="anchor" aria-hidden="true" href="#datavoyager"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DataVoyager</h1>
<p dir="auto"><a href="http://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/ed51270ad41e2b842f9423b165977ac42f8498581be7c17c78818d1a45b834d5/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="Project Status: Active - The project has reached a stable, usable state and is being actively developed." data-canonical-src="http://www.repostatus.org/badges/latest/active.svg" style="max-width: 100%;"></a>
<a href="https://travis-ci.org/queryverse/DataVoyager.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e9130cdb78ce7051d1edc325369f0d6e5e793bd27096c4e17ea30af17f7e7208/68747470733a2f2f7472617669732d63692e6f72672f717565727976657273652f44617461566f79616765722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/queryverse/DataVoyager.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://ci.appveyor.com/project/queryverse/datavoyager-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/450e333968f0c0d6452eb77595c964e8e23ee56e8e562d8a7e536c217e68c26e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f613638356a38317764396e6c786961362f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/a685j81wd9nlxia6/branch/master?svg=true" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/queryverse/DataVoyager.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/eb2d7ecee4c8b159cc6ddc6837ee5066b65c361c710858f379f27802172e6375/687474703a2f2f636f6465636f762e696f2f6769746875622f717565727976657273652f44617461566f79616765722e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/queryverse/DataVoyager.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h2>
<p dir="auto">This package provides julia integration for the <a href="https://github.com/vega/voyager">Voyager</a> data exploration tool.</p>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting Started</h2>
<p dir="auto">DataVoyager.jl can be used for data exploration. It can help you visualize and understand any data that is in a tabular format.</p>
<p dir="auto">You can install the package at the Pkg REPL-mode with:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="(v1.0) pkg&gt; add DataVoyager"><pre>(v1.<span class="pl-c1">0</span>) pkg<span class="pl-k">&gt;</span> add DataVoyager</pre></div>
<h2 dir="auto"><a id="user-content-exploring-data" class="anchor" aria-hidden="true" href="#exploring-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Exploring data</h2>
<p dir="auto">You create a new voyager window by calling <code>Voyager</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DataVoyager

v = Voyager()"><pre><span class="pl-k">using</span> DataVoyager

v <span class="pl-k">=</span> <span class="pl-c1">Voyager</span>()</pre></div>
<p dir="auto">By itself this is not very useful, the next step is to load some data into voyager. Lets assume your data is in a <code>DataFrame</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DataFrames, DataVoyager

data = DataFrame(a=rand(100), b=randn(100))

v = Voyager(data)"><pre><span class="pl-k">using</span> DataFrames, DataVoyager

data <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(a<span class="pl-k">=</span><span class="pl-c1">rand</span>(<span class="pl-c1">100</span>), b<span class="pl-k">=</span><span class="pl-c1">randn</span>(<span class="pl-c1">100</span>))

v <span class="pl-k">=</span> <span class="pl-c1">Voyager</span>(data)</pre></div>
<p dir="auto">You can also use the pipe to load data into voyager:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DataFrames, DataVoyager

data = DataFrame(a=rand(100), b=randn(100))

v = data |&gt; Voyager()"><pre><span class="pl-k">using</span> DataFrames, DataVoyager

data <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(a<span class="pl-k">=</span><span class="pl-c1">rand</span>(<span class="pl-c1">100</span>), b<span class="pl-k">=</span><span class="pl-c1">randn</span>(<span class="pl-c1">100</span>))

v <span class="pl-k">=</span> data <span class="pl-k">|&gt;</span> <span class="pl-c1">Voyager</span>()</pre></div>
<p dir="auto">With a more interesting data source</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using VegaDatasets, DataVoyager

v = dataset(&quot;cars&quot;) |&gt; Voyager()"><pre><span class="pl-k">using</span> VegaDatasets, DataVoyager

v <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">Voyager</span>()</pre></div>
<p dir="auto">You can load any <a href="https://github.com/queryverse/IterableTables.jl">IterableTables.jl</a> source into voyager, i.e. not just <code>DataFrame</code>s. For example, you can load some data from a CSV file with <a href="https://github.com/queryverse/CSVFiles.jl">CSVFiles.jl</a>, filter them with <a href="https://github.com/queryverse/Query.jl">Query.jl</a> and then visualize the result with voyager:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using FileIO, CSVFiles, Query, DataVoyager

v = load(&quot;data.csv&quot;) |&gt; @filter(_.age&gt;30) |&gt; Voyager()"><pre><span class="pl-k">using</span> FileIO, CSVFiles, Query, DataVoyager

v <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>data.csv<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">@filter</span>(_<span class="pl-k">.</span>age<span class="pl-k">&gt;</span><span class="pl-c1">30</span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">Voyager</span>()</pre></div>
<p dir="auto">In this example the data is streamed directly into voyager and at no point is any <code>DataFrame</code> allocated.</p>
<h2 dir="auto"><a id="user-content-extracting-plots" class="anchor" aria-hidden="true" href="#extracting-plots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Extracting plots</h2>
<p dir="auto">You can also access a plot that you have created in the voyager UI from julia, for example to save the plot to disc.</p>
<p dir="auto">You can access the currently active plot in a given voyager window <code>v</code> with the brackets syntax:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using VegaDatasets, DataVoyager, VegaLite

v = dataset(&quot;cars&quot;) |&gt; Voyager()

plot1 = v[]"><pre><span class="pl-k">using</span> VegaDatasets, DataVoyager, VegaLite

v <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">Voyager</span>()

plot1 <span class="pl-k">=</span> v[]</pre></div>
<p dir="auto">At this point <code>plot1</code> will hold a standard <a href="https://github.com/fredo-dedup/VegaLite.jl">VegaLite.jl</a> plot object. You can use the normal <a href="https://github.com/fredo-dedup/VegaLite.jl">VegaLite.jl</a> functions to display such a plot, or save it to disc:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="display(plot1)

plot1 |&gt; save(&quot;figure1.pdf&quot;)"><pre><span class="pl-c1">display</span>(plot1)

plot1 <span class="pl-k">|&gt;</span> <span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>figure1.pdf<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">A useful pattern here is to save the plot as a vega-lite JSON file to disc, without the data:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using VegaDatasets, DataVoyager, VegaLite

v = dataset(&quot;cars&quot;) |&gt; Voyager()

# Now create the plot in the UI

v[] |&gt; save(&quot;figure1.vegalite&quot;)"><pre><span class="pl-k">using</span> VegaDatasets, DataVoyager, VegaLite

v <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">Voyager</span>()

<span class="pl-c"><span class="pl-c">#</span> Now create the plot in the UI</span>

v[] <span class="pl-k">|&gt;</span> <span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>figure1.vegalite<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">At a later point you can then load this figure specification again, but pipe new data into it:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using VegaLite, VegaDatasets

dataset(&quot;cars&quot;) |&gt; load(&quot;figure1.vegalite&quot;)"><pre><span class="pl-k">using</span> VegaLite, VegaDatasets

<span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>figure1.vegalite<span class="pl-pds">"</span></span>)</pre></div>
</article></div>