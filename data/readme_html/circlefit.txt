<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-circlefitjl" class="anchor" aria-hidden="true" href="#circlefitjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CircleFit.jl</h1>
<p><a href="https://travis-ci.com/feanor12/CircleFit.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0f3e06589c1375c8b10bc1a162854d0d2cf6df4ef344efcc21a6dad25def69d9/68747470733a2f2f7472617669732d63692e636f6d2f6665616e6f7231322f436972636c654669742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/feanor12/CircleFit.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/feanor12/CircleFit.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1b7959683ec74128a0e57c6887715d98cb7bd85ecf4eccb2dedcaa810839f928/68747470733a2f2f636f6465636f762e696f2f67682f6665616e6f7231322f436972636c654669742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/feanor12/CircleFit.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Circle fitting using <a href="https://doi.org/10.1109/TIM.1976.6312298" rel="nofollow">KÃ¥sa's method</a></p>
<p>Example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# import library
using CircleFit
# generate test data
r = 5
x0 = 2
y0 = 4.5
x = r.*[-1.0,0,0,1] .+ x0
y = r.*[0.0,1,-1,0] .+ y0
# fit
x0,y0,radius = circfit(x,y)
#(2.0, 4.499999999999999, 5.0)
"><pre><span class="pl-c"><span class="pl-c">#</span> import library</span>
<span class="pl-k">using</span> CircleFit
<span class="pl-c"><span class="pl-c">#</span> generate test data</span>
r <span class="pl-k">=</span> <span class="pl-c1">5</span>
x0 <span class="pl-k">=</span> <span class="pl-c1">2</span>
y0 <span class="pl-k">=</span> <span class="pl-c1">4.5</span>
x <span class="pl-k">=</span> r<span class="pl-k">.*</span>[<span class="pl-k">-</span><span class="pl-c1">1.0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>] <span class="pl-k">.+</span> x0
y <span class="pl-k">=</span> r<span class="pl-k">.*</span>[<span class="pl-c1">0.0</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>] <span class="pl-k">.+</span> y0
<span class="pl-c"><span class="pl-c">#</span> fit</span>
x0,y0,radius <span class="pl-k">=</span> <span class="pl-c1">circfit</span>(x,y)
<span class="pl-c"><span class="pl-c">#</span>(2.0, 4.499999999999999, 5.0)</span></pre></div>
<p>Non optimized implementations:</p>
<ul>
<li>Method by Taubin <code>CircleFit.taubin(x,y)</code></li>
<li>Method by Pratt <code>CircleFit.pratt(x,y)</code></li>
</ul>
</article></div>