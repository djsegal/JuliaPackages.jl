<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-circlefitjl" class="anchor" aria-hidden="true" href="#circlefitjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CircleFit.jl</h1>
<p dir="auto"><a href="https://github.com/feanor12/CircleFit.jl/actions/workflows/test.yml"><img src="https://github.com/feanor12/CircleFit.jl/actions/workflows/test.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/feanor12/CircleFit.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1b7959683ec74128a0e57c6887715d98cb7bd85ecf4eccb2dedcaa810839f928/68747470733a2f2f636f6465636f762e696f2f67682f6665616e6f7231322f436972636c654669742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/feanor12/CircleFit.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Circle fitting using <a href="https://doi.org/10.1109/TIM.1976.6312298" rel="nofollow">KÃ¥sa's method</a></p>
<p dir="auto">Example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# import library
using CircleFit
using StatsBase

# generate test data
r = 5
x0 = 2
y0 = 4.5
x = r.*[-1.0,0,0,1] .+ x0
y = r.*[0.0,1,-1,0] .+ y0

# fit
result = fit(Circle,x,y)

# fitted coefficients
coef(result)
# (2.0, 4.499999999999999, 5.0)

# names of the coefficients
coefnames(result)
# (&quot;center position x1&quot;, &quot;center position x2&quot;, &quot;radius&quot;)

# calculate the residuals square sum
rss(result)
# 1.5777218104420236e-30"><pre><span class="pl-c"><span class="pl-c">#</span> import library</span>
<span class="pl-k">using</span> CircleFit
<span class="pl-k">using</span> StatsBase

<span class="pl-c"><span class="pl-c">#</span> generate test data</span>
r <span class="pl-k">=</span> <span class="pl-c1">5</span>
x0 <span class="pl-k">=</span> <span class="pl-c1">2</span>
y0 <span class="pl-k">=</span> <span class="pl-c1">4.5</span>
x <span class="pl-k">=</span> r<span class="pl-k">.*</span>[<span class="pl-k">-</span><span class="pl-c1">1.0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>] <span class="pl-k">.+</span> x0
y <span class="pl-k">=</span> r<span class="pl-k">.*</span>[<span class="pl-c1">0.0</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>] <span class="pl-k">.+</span> y0

<span class="pl-c"><span class="pl-c">#</span> fit</span>
result <span class="pl-k">=</span> <span class="pl-c1">fit</span>(Circle,x,y)

<span class="pl-c"><span class="pl-c">#</span> fitted coefficients</span>
<span class="pl-c1">coef</span>(result)
<span class="pl-c"><span class="pl-c">#</span> (2.0, 4.499999999999999, 5.0)</span>

<span class="pl-c"><span class="pl-c">#</span> names of the coefficients</span>
<span class="pl-c1">coefnames</span>(result)
<span class="pl-c"><span class="pl-c">#</span> ("center position x1", "center position x2", "radius")</span>

<span class="pl-c"><span class="pl-c">#</span> calculate the residuals square sum</span>
<span class="pl-c1">rss</span>(result)
<span class="pl-c"><span class="pl-c">#</span> 1.5777218104420236e-30</span></pre></div>
<p dir="auto">Gradient weighted algebraic fit for a circle using <code>LsqFit.levenberg_marquardt</code>: <code>CircleFit.GRAF(x,y,p0)</code> or <code>fit(Circle,x,y,alg=:graf)</code></p>
<p dir="auto">Non optimized implementations:</p>
<ul dir="auto">
<li>Method by Taubin <code>CircleFit.taubin(x,y)</code> or <code>fit(Circle,x,y,alg=:taubin)</code></li>
<li>Method by Pratt <code>CircleFit.pratt(x,y)</code> or <code>fit(Circle,x,y,alg=:pratt)</code></li>
</ul>
</article></div>