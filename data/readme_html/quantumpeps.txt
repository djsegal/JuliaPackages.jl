<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-peps-inspired-quantum-circuit-ansatz" class="anchor" aria-hidden="true" href="#peps-inspired-quantum-circuit-ansatz"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PEPS inspired quantum circuit ansatz</h1>
<p dir="auto"><a href="https://github.com/GiggleLiu/QuantumPEPS.jl/actions/workflows/ci.yml"><img src="https://github.com/GiggleLiu/QuantumPEPS.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a></p>
<p dir="auto">To make life easier, <a href="https://giggleliu.github.io/TwoQubit-VQE.html" rel="nofollow">here</a> is a simplified notebook version of MPS inspired qubit saving scheme for VQE. For a PEPS inpired ansatz solving the J1-J2 square lattice model, please checkout the following content.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/images/j1j2chain44.png"><img src="docs/images/j1j2chain44.png" alt="" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-to-install" class="anchor" aria-hidden="true" href="#to-install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>To Install</h2>
<p dir="auto">Type <code>]</code> in a <a href="https://docs.julialang.org/en/v1/stdlib/REPL/index.html" rel="nofollow">Julia REPL</a> to enter the <code>pkg</code> mode, then type</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; dev https://github.com/GiggleLiu/QuantumPEPS.jl.git"><pre>pkg<span class="pl-k">&gt;</span> dev https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>GiggleLiu<span class="pl-k">/</span>QuantumPEPS<span class="pl-k">.</span>jl<span class="pl-k">.</span>git</pre></div>
<h2 dir="auto"><a id="user-content-to-run" class="anchor" aria-hidden="true" href="#to-run"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>To Run</h2>
<p dir="auto">First, enter the directory <code>~/.julia/dev/QuantumPEPS/</code> (the default development directory of Julia) in a terminal.</p>
<p dir="auto">To run a toy example of J1-J2 model of size 4 x 4 with J2 = 0.5, type</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using QuantumPEPS

julia&gt; Demo.j1j2peps(4, 4)   # QPEPS

julia&gt; Demo.j1j2mps(4, 4)    # QMPS"><pre>julia<span class="pl-k">&gt;</span> using QuantumPEPS

julia<span class="pl-k">&gt;</span> Demo.j1j2peps(4, 4)   <span class="pl-c"><span class="pl-c">#</span> QPEPS</span>

julia<span class="pl-k">&gt;</span> Demo.j1j2mps(4, 4)    <span class="pl-c"><span class="pl-c">#</span> QMPS</span></pre></div>
<p dir="auto">To get some help on input arguments, type <code>?</code> in the REPL to enter the help mode, and then type</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="help?&gt; Demo.j1j2peps
  j1j2peps(nx::Int=4, ny::Int=4; depth::Int=5, nvirtual::Int=1,
                  nbatch::Int=1024, maxiter::Int=200,
                  J2::Float64=0.5, lr::Float64=0.1,
                  periodic::Bool=false, use_cuda::Bool=false, write::Bool=false)

  Faithful QPEPS traning for solving the J1-J2 hamiltonian ground state. Returns a triple of (optimizer, history, params).

  Positional Arguments
  ======================

    •  nx and ny are the square lattice sizes.

  Keyword Arguments
  ===================

    •  depth is the circuit depth, decides how many entangle layers between two measurements.

    •  nvirtual is the number of virtual qubits.

    •  nbatch is the batch size, or the number of shots.

    •  maxiter is the number of optimization iterations.

    •  J2 is the strength of the second nearest neighbor coupling.

    •  lr is the learning rate of the ADAM optimizer.

    •  periodic specifies the boundary condition of the lattice.

    •  use_cuda is true means uploading the code on GPU for faster computation.

    •  write is true will write training results to the data folder."><pre>help?<span class="pl-k">&gt;</span> Demo<span class="pl-k">.</span>j1j2peps
  <span class="pl-c1">j1j2peps</span>(nx<span class="pl-k">::</span><span class="pl-c1">Int</span><span class="pl-k">=</span><span class="pl-c1">4</span>, ny<span class="pl-k">::</span><span class="pl-c1">Int</span><span class="pl-k">=</span><span class="pl-c1">4</span>; depth<span class="pl-k">::</span><span class="pl-c1">Int</span><span class="pl-k">=</span><span class="pl-c1">5</span>, nvirtual<span class="pl-k">::</span><span class="pl-c1">Int</span><span class="pl-k">=</span><span class="pl-c1">1</span>,
                  nbatch<span class="pl-k">::</span><span class="pl-c1">Int</span><span class="pl-k">=</span><span class="pl-c1">1024</span>, maxiter<span class="pl-k">::</span><span class="pl-c1">Int</span><span class="pl-k">=</span><span class="pl-c1">200</span>,
                  J2<span class="pl-k">::</span><span class="pl-c1">Float64</span><span class="pl-k">=</span><span class="pl-c1">0.5</span>, lr<span class="pl-k">::</span><span class="pl-c1">Float64</span><span class="pl-k">=</span><span class="pl-c1">0.1</span>,
                  periodic<span class="pl-k">::</span><span class="pl-c1">Bool</span><span class="pl-k">=</span><span class="pl-c1">false</span>, use_cuda<span class="pl-k">::</span><span class="pl-c1">Bool</span><span class="pl-k">=</span><span class="pl-c1">false</span>, write<span class="pl-k">::</span><span class="pl-c1">Bool</span><span class="pl-k">=</span><span class="pl-c1">false</span>)

  Faithful QPEPS traning <span class="pl-k">for</span> solving the J1<span class="pl-k">-</span>J2 hamiltonian ground state. Returns a triple of (optimizer, history, params)<span class="pl-k">.</span>

  Positional Arguments
  <span class="pl-k">=====================</span><span class="pl-k">=</span>

    •  nx and ny are the square lattice sizes.

  Keyword Arguments
  <span class="pl-k">==================</span><span class="pl-k">=</span>

    •  depth is the circuit depth, decides how many entangle layers between two measurements.

    •  nvirtual is the number of virtual qubits.

    •  nbatch is the batch size, or the number of shots.

    •  maxiter is the number of optimization iterations.

    •  J2 is the strength of the second nearest neighbor coupling.

    •  lr is the learning rate of the ADAM optimizer.

    •  periodic specifies the boundary condition of the lattice.

    •  use_cuda is <span class="pl-c1">true</span> means uploading the code on GPU <span class="pl-k">for</span> faster computation.

    •  write is <span class="pl-c1">true</span> will write training results to the data folder.</pre></div>
<h2 dir="auto"><a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reference</h2>
<div class="highlight highlight-text-bibtex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@article{Liu_2019,
	doi = {10.1103/physrevresearch.1.023025},
	url = {https://doi.org/10.1103%2Fphysrevresearch.1.023025},
	year = 2019,
	month = {sep},
	publisher = {American Physical Society ({APS})},
	volume = {1},
	number = {2},
	author = {Jin-Guo Liu and Yi-Hong Zhang and Yuan Wan and Lei Wang},
	title = {Variational quantum eigensolver with fewer qubits},
	journal = {Physical Review Research}
}"><pre><span class="pl-k">@article</span>{<span class="pl-en">Liu_2019</span>,
	<span class="pl-s">doi</span> = <span class="pl-s"><span class="pl-pds">{</span>10.1103/physrevresearch.1.023025<span class="pl-pds">}</span></span>,
	<span class="pl-s">url</span> = <span class="pl-s"><span class="pl-pds">{</span>https://doi.org/10.1103%2Fphysrevresearch.1.023025<span class="pl-pds">}</span></span>,
	<span class="pl-s">year</span> = <span class="pl-c1">2019</span>,
	<span class="pl-s">month</span> = <span class="pl-s"><span class="pl-pds">{</span>sep<span class="pl-pds">}</span></span>,
	<span class="pl-s">publisher</span> = <span class="pl-s"><span class="pl-pds">{</span>American Physical Society ({APS})<span class="pl-pds">}</span></span>,
	<span class="pl-s">volume</span> = <span class="pl-s"><span class="pl-pds">{</span>1<span class="pl-pds">}</span></span>,
	<span class="pl-s">number</span> = <span class="pl-s"><span class="pl-pds">{</span>2<span class="pl-pds">}</span></span>,
	<span class="pl-s">author</span> = <span class="pl-s"><span class="pl-pds">{</span>Jin-Guo Liu and Yi-Hong Zhang and Yuan Wan and Lei Wang<span class="pl-pds">}</span></span>,
	<span class="pl-s">title</span> = <span class="pl-s"><span class="pl-pds">{</span>Variational quantum eigensolver with fewer qubits<span class="pl-pds">}</span></span>,
	<span class="pl-s">journal</span> = <span class="pl-s"><span class="pl-pds">{</span>Physical Review Research<span class="pl-pds">}</span></span>
}</pre></div>
<p dir="auto"><a href="https://journals.aps.org/prresearch/pdf/10.1103/PhysRevResearch.1.023025" rel="nofollow">Download paper</a></p>
</article></div>