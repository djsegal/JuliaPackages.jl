<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-voronoicells" class="anchor" aria-hidden="true" href="#voronoicells"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>VoronoiCells</h1>
<p><a href="https://travis-ci.org/JuliaGeometry/VoronoiCells.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b6da6e5c44ce6ca5ac2c6f065254573fa721ada6/68747470733a2f2f7472617669732d63692e6f72672f4a756c696147656f6d657472792f566f726f6e6f6943656c6c732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaGeometry/VoronoiCells.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/github/JuliaGeometry/VoronoiCells.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/62f6f88f4a580ec150e8abd622dd6c1b39b9d3a5/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c696147656f6d657472792f566f726f6e6f6943656c6c732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/JuliaGeometry/VoronoiCells.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p><em>VoronoiCells</em> use the <a href="https://github.com/JuliaGeometry/VoronoiDelaunay.jl">VoronoiDelaunay</a> package to compute the vertices and areas of the Voronoi cells in a tessellation.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>In Julia, run</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>VoronoiCells<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>The two main functions of <em>VoronoiCells</em> are <code>voronoicells</code> and <code>voronoiarea</code>.
Both functions have a method where the input is a vector of <code>IndexablePoint2D</code>'s -- a subtype of the <code>AbstractPoint2D</code> from the <a href="https://github.com/JuliaGeometry/GeometricalPredicates.jl">GeometricalPredicates</a> package.
Such a vector can be created with e.g.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VoronoiCells
pts <span class="pl-k">=</span> [<span class="pl-c1">IndexablePoint2D</span>(<span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">rand</span>(), <span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">rand</span>(), n) <span class="pl-k">for</span> n <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>]</pre></div>
<p>Note that an <code>AbstractPoint2D</code> must be in [1,2]x[1,2].
The last entry in an <code>IndexablePoint2D</code> is used to associate it with the corners of its Voronoi cells in the output from <code>voronoicells</code>:</p>
<div class="highlight highlight-source-julia"><pre>C <span class="pl-k">=</span> <span class="pl-c1">voronoicells</span>(pts)</pre></div>
<p><code>C</code> is a Dict where the keys are integers representing the indices of the generator points in <code>pts</code> and <code>C[n]</code> is a vector with the corners of the <code>n</code>'th Voronoi cell.</p>
<p>The function <code>voronoiarea</code> computes the areas of a point set <em>in the same order as the input</em>.
I.e., in</p>
<div class="highlight highlight-source-julia"><pre>A <span class="pl-k">=</span> <span class="pl-c1">voronoiarea</span>(C)</pre></div>
<p><code>A[n]</code> is the area of the <code>IndexablePoint2D</code> with index <code>n</code>.
There is also a method of <code>voronoiarea</code> that accepts two vectors with <code>x</code> and <code>y</code> coordinates, respectively.
If <code>x</code> and <code>y</code> have entries that are <em>not</em> in the unit square a suitable bounding box must be specified.</p>
<div class="highlight highlight-source-julia"><pre>x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10</span>)
y <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10</span>)
A <span class="pl-k">=</span> <span class="pl-c1">voronoiarea</span>(x,y)</pre></div>
<p>The window is specified as a vector with <code>[xmin, xmax, ymin, ymax]</code>.
Consider e.g. points in the rectangle [0,1]x[-1,1]:</p>
<div class="highlight highlight-source-julia"><pre>x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10</span>)
y <span class="pl-k">=</span> <span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">rand</span>(<span class="pl-c1">10</span>) <span class="pl-k">-</span> <span class="pl-c1">1</span>
A <span class="pl-k">=</span> <span class="pl-c1">voronoiarea</span>(x, y, [<span class="pl-c1">0.0</span>, <span class="pl-c1">1.0</span>, <span class="pl-k">-</span><span class="pl-c1">1.0</span>, <span class="pl-c1">1.0</span>])</pre></div>
<p>A third function is <code>density</code>.
If one wish to cover the bounding box with cirlces of equal radii and centers specified by vectors <code>x</code> and <code>y</code>, <code>density(x,y)</code> returns the minimum such radius.
Just as in <code>voronoiarea</code> the default bounding box is the unit square and a different box can be specified as a third argument.</p>
<h2><a id="user-content-note" class="anchor" aria-hidden="true" href="#note"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Note</h2>
<p>For technical reasons (that I don't fully understand) VoronoiDelaunay includes the corner points of the default bounding box, i.e., (1,1), (2,1), (2,2) and (1,2) in the set of generators.
This means that these corners also get their own Voronoi cell and the cells of the generators closest to the corners are a priori <em>incorrect</em>.</p>
<p>The way <em>VoronoiCells</em> removes the corner cells and update the affected neighbor cells are explained in the <a href="doc/remove_bounding_box.md">attached document</a>.
The <code>doc</code> folder also includes the script <code>plots.jl</code> used to make the plots in the document.</p>
</article></div>