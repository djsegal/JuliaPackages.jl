<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p>This package is no longer maintained</p>
<h1><a id="user-content-rudeoil" class="anchor" aria-hidden="true" href="#rudeoil"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>RudeOil</h1>
<p>Crude package to easily interact with docker and docker-machine. This package is meant to be make
interactions with docker scriptable from Julia.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Create a vm, create an ubuntu container (implicitly), echo hello world
activate(&quot;mymachine&quot;) do vm
  result = vm |&gt; `echo &quot;hello world&quot;` |&gt; readchomp
  @assert result == &quot;hello world&quot;
end

# Create an image
activate(&quot;mymachine&quot;) do vm
  myimage = image(&quot;myimage&quot;, base=&quot;ubuntu:14.04&quot;, packages=[&quot;python&quot;])
  vm |&gt; myimage |&gt; run
end

# Create an image, instantiate it and run stuff in it
activate(&quot;mymachine&quot;) do vm
  myimage = image(&quot;myimage&quot;, base=&quot;ubuntu:14.04&quot;, packages=[&quot;python&quot;])
  vm |&gt; myimage |&gt; `python -c &quot;print('hello world')&quot;`|&gt; run
end

# Create an image, create a container, do stuff
activate(&quot;mymachine&quot;) do vm
  myimage = image(&quot;myimage&quot;, volume=&quot;/scripts&quot;)
  container = Container(volume=(&quot;hello&quot;, &quot;/scripts&quot;))
  mkdir(&quot;hello&quot;)

  vm |&gt; myimage |&gt; container |&gt; setenv(`touch world`; dir=&quot;/scripts/&quot;) |&gt; run
  @assert isfile(joinpath(&quot;hello&quot;, &quot;world&quot;))
end
"><pre><span class="pl-c"><span class="pl-c">#</span> Create a vm, create an ubuntu container (implicitly), echo hello world</span>
<span class="pl-c1">activate</span>(<span class="pl-s"><span class="pl-pds">"</span>mymachine<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> vm
  result <span class="pl-k">=</span> vm <span class="pl-k">|&gt;</span> <span class="pl-s"><span class="pl-pds">`</span>echo "hello world"<span class="pl-pds">`</span></span> <span class="pl-k">|&gt;</span> readchomp
  <span class="pl-c1">@assert</span> result <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>hello world<span class="pl-pds">"</span></span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Create an image</span>
<span class="pl-c1">activate</span>(<span class="pl-s"><span class="pl-pds">"</span>mymachine<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> vm
  myimage <span class="pl-k">=</span> <span class="pl-c1">image</span>(<span class="pl-s"><span class="pl-pds">"</span>myimage<span class="pl-pds">"</span></span>, base<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>ubuntu:14.04<span class="pl-pds">"</span></span>, packages<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>python<span class="pl-pds">"</span></span>])
  vm <span class="pl-k">|&gt;</span> myimage <span class="pl-k">|&gt;</span> run
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Create an image, instantiate it and run stuff in it</span>
<span class="pl-c1">activate</span>(<span class="pl-s"><span class="pl-pds">"</span>mymachine<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> vm
  myimage <span class="pl-k">=</span> <span class="pl-c1">image</span>(<span class="pl-s"><span class="pl-pds">"</span>myimage<span class="pl-pds">"</span></span>, base<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>ubuntu:14.04<span class="pl-pds">"</span></span>, packages<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>python<span class="pl-pds">"</span></span>])
  vm <span class="pl-k">|&gt;</span> myimage <span class="pl-k">|&gt;</span> <span class="pl-s"><span class="pl-pds">`</span>python -c "print('hello world')"<span class="pl-pds">`</span></span><span class="pl-k">|&gt;</span> run
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Create an image, create a container, do stuff</span>
<span class="pl-c1">activate</span>(<span class="pl-s"><span class="pl-pds">"</span>mymachine<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> vm
  myimage <span class="pl-k">=</span> <span class="pl-c1">image</span>(<span class="pl-s"><span class="pl-pds">"</span>myimage<span class="pl-pds">"</span></span>, volume<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>/scripts<span class="pl-pds">"</span></span>)
  container <span class="pl-k">=</span> <span class="pl-c1">Container</span>(volume<span class="pl-k">=</span>(<span class="pl-s"><span class="pl-pds">"</span>hello<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>/scripts<span class="pl-pds">"</span></span>))
  <span class="pl-c1">mkdir</span>(<span class="pl-s"><span class="pl-pds">"</span>hello<span class="pl-pds">"</span></span>)

  vm <span class="pl-k">|&gt;</span> myimage <span class="pl-k">|&gt;</span> container <span class="pl-k">|&gt;</span> <span class="pl-c1">setenv</span>(<span class="pl-s"><span class="pl-pds">`</span>touch world<span class="pl-pds">`</span></span>; dir<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>/scripts/<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> run
  <span class="pl-c1">@assert</span> <span class="pl-c1">isfile</span>(<span class="pl-c1">joinpath</span>(<span class="pl-s"><span class="pl-pds">"</span>hello<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>world<span class="pl-pds">"</span></span>))
<span class="pl-k">end</span></pre></div>
</article></div>