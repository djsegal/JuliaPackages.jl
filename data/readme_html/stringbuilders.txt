<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-stringbuilders" class="anchor" aria-hidden="true" href="#stringbuilders"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>StringBuilders</h1>
<p><a href="http://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/ed51270ad41e2b842f9423b165977ac42f8498581be7c17c78818d1a45b834d5/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="Project Status: Active - The project has reached a stable, usable state and is being actively developed." data-canonical-src="http://www.repostatus.org/badges/latest/active.svg" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/davidanthoff/StringBuilders.jl/workflows/Run%20tests/badge.svg"><img src="https://github.com/davidanthoff/StringBuilders.jl/workflows/Run%20tests/badge.svg" alt="" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/davidanthoff/StringBuilders.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f1bd1389ea188f3d69b2fdb6755c8a25d48326de4810f2f52ed2bd1587142753/68747470733a2f2f636f6465636f762e696f2f67682f6461766964616e74686f66662f537472696e674275696c646572732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/davidanthoff/StringBuilders.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Overview</h2>
<p>A simple type for building up <code>String</code>s. Use as follows:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using StringBuilders

sb = StringBuilder()
append!(sb, &quot;First string&quot;)
append!(sb, &quot;Second string&quot;)

s = String(sb)
"><pre><span class="pl-k">using</span> StringBuilders

sb <span class="pl-k">=</span> <span class="pl-c1">StringBuilder</span>()
<span class="pl-c1">append!</span>(sb, <span class="pl-s"><span class="pl-pds">"</span>First string<span class="pl-pds">"</span></span>)
<span class="pl-c1">append!</span>(sb, <span class="pl-s"><span class="pl-pds">"</span>Second string<span class="pl-pds">"</span></span>)

s <span class="pl-k">=</span> <span class="pl-c1">String</span>(sb)</pre></div>
<p>The advantage of StringBuilders.jl over using <code>IOBuffer</code> is in the API. Some may find The higher-level StringBuilders.jl API easier to use. For comparison, the example above using <code>IOBuffer</code> would be</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="io = IOBuffer()
write(io, &quot;First string&quot;)
write(io, &quot;Second String&quot;)
s = String(take!(io))
close(io)
"><pre>io <span class="pl-k">=</span> <span class="pl-c1">IOBuffer</span>()
<span class="pl-c1">write</span>(io, <span class="pl-s"><span class="pl-pds">"</span>First string<span class="pl-pds">"</span></span>)
<span class="pl-c1">write</span>(io, <span class="pl-s"><span class="pl-pds">"</span>Second String<span class="pl-pds">"</span></span>)
s <span class="pl-k">=</span> <span class="pl-c1">String</span>(<span class="pl-c1">take!</span>(io))
<span class="pl-c1">close</span>(io)</pre></div>
</article></div>