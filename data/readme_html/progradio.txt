<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p align="center" dir="auto">
    <a target="_blank" rel="noopener noreferrer" href="./docs/src/assets/logo256px.svg"><img src="./docs/src/assets/logo256px.svg" style="max-width: 100%;"></a>
</p>
<h1 dir="auto"><a id="user-content-projected-gradient-optimization" class="anchor" aria-hidden="true" href="#projected-gradient-optimization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Projected Gradient Optimization</h1>
<p dir="auto"><a href="https://JuDO-dev.github.io/Progradio.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://JuDO-dev.github.io/Progradio.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuDO-dev/Progradio.jl/actions/workflows/CI.yml?query=branch%3Adev"><img src="https://github.com/JuDO-dev/Progradio.jl/actions/workflows/CI.yml/badge.svg?branch=dev" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuDO-dev/Progradio.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f62dc7e999735e8c4133ed5bb245238e3049cf43745c976a4392638ff902f036/68747470733a2f2f636f6465636f762e696f2f67682f4a75444f2d6465762f50726f67726164696f2e6a6c2f6272616e63682f6465762f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuDO-dev/Progradio.jl/branch/dev/graph/badge.svg" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg; Pkg.add(&quot;Progradio&quot;)"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Progradio<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-Ô∏èunconstrained-problems" class="anchor" aria-hidden="true" href="#Ô∏èunconstrained-problems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><g-emoji class="g-emoji" alias="infinity" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/267e.png">‚ôæÔ∏è</g-emoji>Unconstrained Problems</h2>
<p dir="auto"><math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="35dfec77fdf23a7024106b211dd6f383">$$
\begin{aligned}
\min_x \hspace{0.5em} f(x)
\end{aligned}
$$</math-renderer></p>
<p dir="auto">where <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="35dfec77fdf23a7024106b211dd6f383">$x \in \mathbb{R}^n$</math-renderer>, and <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="35dfec77fdf23a7024106b211dd6f383">$f: \mathbb{R}^n \rightarrow \mathbb{R}$</math-renderer> is smooth. Given an initial guess <code>x_0::Vector</code> and an in-place gradient function <code>g!</code>, the problem is defined as:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="up = UProblem(x_0, f, g!);"><pre>up <span class="pl-k">=</span> <span class="pl-c1">UProblem</span>(x_0, f, g!);</pre></div>
<h2 dir="auto">
<a id="user-content-box-constrained-problems" class="anchor" aria-hidden="true" href="#box-constrained-problems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png">üì¶</g-emoji>Box-Constrained Problems</h2>
<p dir="auto"><math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="35dfec77fdf23a7024106b211dd6f383">$$
\begin{aligned}
\min_x \hspace{0.5em}      &amp;f(x)\\
\text{s.t.} \hspace{0.5em} &amp;\ell \leq x \leq u,
\end{aligned}
$$</math-renderer></p>
<p dir="auto">where <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="35dfec77fdf23a7024106b211dd6f383">$\ell, u \in \mathbb{R}^n$</math-renderer>. Given <code>‚Ñì::Vector</code> and <code>u::Vector</code>, the problem is defined as:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="bcp = BCProblem(x_0, ‚Ñì, u, f, g!);"><pre>bcp <span class="pl-k">=</span> <span class="pl-c1">BCProblem</span>(x_0, ‚Ñì, u, f, g!);</pre></div>
<h2 dir="auto">
<a id="user-content-simplex-box-constrained-problems" class="anchor" aria-hidden="true" href="#simplex-box-constrained-problems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><g-emoji class="g-emoji" alias="triangular_ruler" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d0.png">üìê</g-emoji>Simplex-Box-Constrained Problems</h2>
<p dir="auto"><math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="35dfec77fdf23a7024106b211dd6f383">$$
\begin{aligned}
\min_x \hspace{0.5em}       &amp;f(x)\\
\text{s.t.} \hspace{0.5em}  &amp;\sum_{j \in \mathcal{S}} x_j = 1, \quad x_j \geq 0 &amp;\forall j \in \mathcal{S},\\
&amp;\ell_j \leq x_j \leq u_j &amp;\forall j \notin \mathcal{S},
\end{aligned}
$$</math-renderer></p>
<p dir="auto">where <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="35dfec77fdf23a7024106b211dd6f383">$\mathcal{S}$</math-renderer> is the set of indices of <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="35dfec77fdf23a7024106b211dd6f383">$x$</math-renderer> in the unit simplex. Given <code>S::BitSet</code>, the problem is defined as:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="sbcp = SBCProblem(x_0, S, ‚Ñì, u, f, g!);"><pre>sbcp <span class="pl-k">=</span> <span class="pl-c1">SBCProblem</span>(x_0, S, ‚Ñì, u, f, g!);</pre></div>
<h2 dir="auto">
<a id="user-content-available-methods" class="anchor" aria-hidden="true" href="#available-methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Available Methods</h2>
<table>
<thead>
<tr>
<th align="center">Direction\Search</th>
<th align="center"><code>Armijo()</code></th>
<th align="center"><code>Wolfe()</code></th>
<th align="center"><code>TrustRegion()</code></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><code>SteepestDescent()</code></td>
<td align="center"><g-emoji class="g-emoji" alias="infinity" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/267e.png">‚ôæÔ∏è</g-emoji><g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png">üì¶</g-emoji><g-emoji class="g-emoji" alias="triangular_ruler" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d0.png">üìê</g-emoji><sup><a href="#user-content-fn-Bertsekas-35dfec77fdf23a7024106b211dd6f383" id="user-content-fnref-Bertsekas-35dfec77fdf23a7024106b211dd6f383" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup>
</td>
<td align="center">-</td>
<td align="center">-</td>
</tr>
<tr>
<td align="center"><code>ConjugateGradient()</code></td>
<td align="center"><g-emoji class="g-emoji" alias="infinity" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/267e.png">‚ôæÔ∏è</g-emoji><g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png">üì¶</g-emoji></td>
<td align="center">-</td>
<td align="center">-</td>
</tr>
<tr>
<td align="center"><code>QuasiNewton()</code></td>
<td align="center">-</td>
<td align="center">-</td>
<td align="center">-</td>
</tr>
<tr>
<td align="center"><code>Newton()</code></td>
<td align="center">-</td>
<td align="center">-</td>
<td align="center">-</td>
</tr>
</tbody>
</table>
<h2 dir="auto">
<a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">Recommended usage with <code>solve()</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Problem
bcp = BCProblem(x_0, ‚Ñì, u, f, g!);

# Solve
solve(bcp, SteepestDescent(), Armijo())"><pre><span class="pl-c"><span class="pl-c">#</span> Problem</span>
bcp <span class="pl-k">=</span> <span class="pl-c1">BCProblem</span>(x_0, ‚Ñì, u, f, g!);

<span class="pl-c"><span class="pl-c">#</span> Solve</span>
<span class="pl-c1">solve</span>(bcp, <span class="pl-c1">SteepestDescent</span>(), <span class="pl-c1">Armijo</span>())</pre></div>
<p dir="auto">Advanced usage with <code>Iterator</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Iterator
iterator = Iterator(bcp, SteepestDescent(), Armijo());

# Iterate
collect(iterator)"><pre><span class="pl-c"><span class="pl-c">#</span> Iterator</span>
iterator <span class="pl-k">=</span> <span class="pl-c1">Iterator</span>(bcp, <span class="pl-c1">SteepestDescent</span>(), <span class="pl-c1">Armijo</span>());

<span class="pl-c"><span class="pl-c">#</span> Iterate</span>
<span class="pl-c1">collect</span>(iterator)</pre></div>
<section data-footnotes="" class="footnotes"><h2 id="footnote-label" class="sr-only" dir="auto">Footnotes</h2>
<ol dir="auto">
<li id="user-content-fn-Bertsekas-35dfec77fdf23a7024106b211dd6f383">
<p dir="auto">D. P. Bertsekas, "Projected Newton methods for optimization problems with simple constraints", SIAM Journal on Control and Optimization, Vol. 20, pp.221-246, 1982. <a href="#user-content-fnref-Bertsekas-35dfec77fdf23a7024106b211dd6f383" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref"><g-emoji class="g-emoji" alias="leftwards_arrow_with_hook" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/21a9.png">‚Ü©</g-emoji></a></p>
</li>
</ol>
</section>
</article></div>