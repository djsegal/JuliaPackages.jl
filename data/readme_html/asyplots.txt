<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a target="_blank" rel="noopener noreferrer" href="images/header.svg"><img src="images/header.svg" alt="fgf" style="max-width:100%;"></a></p>
<p><a href="https://travis-ci.org/sswatson/AsyPlots.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/dababb4cada5bc381baacfe6ad2fb5470285c8aac740e9bb2e279274afe713ed/68747470733a2f2f7472617669732d63692e6f72672f7373776174736f6e2f417379506c6f74732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/sswatson/AsyPlots.jl.svg?branch=master" style="max-width:100%;"></a></p>
<h1><a id="user-content-asyplotsjl" class="anchor" aria-hidden="true" href="#asyplotsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>AsyPlots.jl</h1>
<p><a href="https://sswatson.github.io/AsyPlots.jl/stable" rel="nofollow">Documentation</a></p>
<h2><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Introduction</h2>
<p><em>AsyPlots</em> is a Julia package for creating figures in <a href="http://asymptote.sourceforge.net" rel="nofollow">Asymptote</a>. Asymptote is
a mature language for technical drawing in two and three dimensions.
This package provides access to</p>
<ul>
<li>Vector graphics with LaTeX-rendered labels in 2D and 3D</li>
<li>An OpenGL renderer for interacting with 3D figures</li>
<li>Easily customizable colors and arrows</li>
<li>Convenience functions for line graphs and surface plots, with less of a time-to-first-plot penalty than some other packages</li>
<li>An environment designed for working directly with graphics
primitives (points, paths, polygons, circles, parametric surfaces)
in natural coordinates</li>
<li>in-line plotting in IJulia and Juno's plot pane</li>
<li>Options to save output as asy, eps, pdf, svg, or png</li>
<li>An alternative Cairo backend, for speed</li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<h3><a id="user-content-install-asymptote" class="anchor" aria-hidden="true" href="#install-asymptote"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Install Asymptote</h3>
<p><em>AsyPlots</em> requires Asymptote, which you might already have as a part
of your TeX installation (run <code>asy --version</code> from the command line to
check). Alternatively, you can download and install it <a href="https://sourceforge.net/projects/asymptote/files/2.44/" rel="nofollow">here</a>. Version 2.44 is recommended. Linux and Windows binaries are available, and to install on macOS, download <a href="https://sourceforge.net/projects/asymptote/files/2.44/asymptote-2.44.src.tgz/download" rel="nofollow">asymptote-2.44.src.tgz</a>, unzip it, <code>cd</code> into that directory, and run</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="wget http://hboehm.info/gc/gc_source/gc-7.6.0.tar.gz
wget http://www.ivmaisoft.com/_bin/atomic_ops/libatomic_ops-7.6.0.tar.gz
./configure
make all
sudo make install
"><pre><code>wget http://hboehm.info/gc/gc_source/gc-7.6.0.tar.gz
wget http://www.ivmaisoft.com/_bin/atomic_ops/libatomic_ops-7.6.0.tar.gz
./configure
make all
sudo make install
</code></pre></div>
<h3><a id="user-content-optionally-install-cairo" class="anchor" aria-hidden="true" href="#optionally-install-cairo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Optionally Install Cairo</h3>
<p>Asymptote can optionally use an alternative backend that relies on <code>Cairo.jl</code>, though
this package is currently not installing cleanly.
Try</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Homebrew
Homebrew.brew(`unlink glib`)
Homebrew.brew(`install --verbose --build-from-source https://raw.githubusercontent.com/Homebrew/homebrew-core/05871cb0394f78ef25a5c1c071456d0f1e4be4fe/Formula/glib.rb`)
Pkg.build(&quot;Cairo&quot;)
"><pre><span class="pl-k">using</span> Homebrew
Homebrew<span class="pl-k">.</span><span class="pl-c1">brew</span>(<span class="pl-s"><span class="pl-pds">`</span>unlink glib<span class="pl-pds">`</span></span>)
Homebrew<span class="pl-k">.</span><span class="pl-c1">brew</span>(<span class="pl-s"><span class="pl-pds">`</span>install --verbose --build-from-source https://raw.githubusercontent.com/Homebrew/homebrew-core/05871cb0394f78ef25a5c1c071456d0f1e4be4fe/Formula/glib.rb<span class="pl-pds">`</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">build</span>(<span class="pl-s"><span class="pl-pds">"</span>Cairo<span class="pl-pds">"</span></span>)</pre></div>
<p>See <a href="https://github.com/JuliaGraphics/Cairo.jl/issues/230">this thread</a> for more details.</p>
<p>If you want to use the Cairo features of Asymptote, you should load Cairo first:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Cairo
using AsyPlots
"><pre><span class="pl-k">using</span> Cairo
<span class="pl-k">using</span> AsyPlots</pre></div>
<h3><a id="user-content-install-asyplots" class="anchor" aria-hidden="true" href="#install-asyplots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Install AsyPlots</h3>
<p>From the Julia <code>pkg</code> prompt, run <code>add AsyPlots</code>, or from the Julia prompt, run <code>Pkg.add("AsyPlots")</code>.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using AsyPlots
n = 250; using Random; Random.seed!(1)
A = [(x,y) == (0,0) ? 0 : 1/(x^2+y^2) for x=0:n-1,y=0:n-1]
B = randn(n,n)
save(&quot;fgf.png&quot;,plot(real(fft(A.*B));width=150)) # hide
plot(real(fft(A.*B)))
"><pre><span class="pl-k">using</span> AsyPlots
n <span class="pl-k">=</span> <span class="pl-c1">250</span>; <span class="pl-k">using</span> Random; Random<span class="pl-k">.</span><span class="pl-c1">seed!</span>(<span class="pl-c1">1</span>)
A <span class="pl-k">=</span> [(x,y) <span class="pl-k">==</span> (<span class="pl-c1">0</span>,<span class="pl-c1">0</span>) <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">1</span><span class="pl-k">/</span>(x<span class="pl-k">^</span><span class="pl-c1">2</span><span class="pl-k">+</span>y<span class="pl-k">^</span><span class="pl-c1">2</span>) <span class="pl-k">for</span> x<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">:</span>n<span class="pl-k">-</span><span class="pl-c1">1</span>,y<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">:</span>n<span class="pl-k">-</span><span class="pl-c1">1</span>]
B <span class="pl-k">=</span> <span class="pl-c1">randn</span>(n,n)
<span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>fgf.png<span class="pl-pds">"</span></span>,<span class="pl-c1">plot</span>(<span class="pl-c1">real</span>(<span class="pl-c1">fft</span>(A<span class="pl-k">.*</span>B));width<span class="pl-k">=</span><span class="pl-c1">150</span>)) <span class="pl-c"><span class="pl-c">#</span> hide</span>
<span class="pl-c1">plot</span>(<span class="pl-c1">real</span>(<span class="pl-c1">fft</span>(A<span class="pl-k">.*</span>B)))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/fgf.png"><img src="images/fgf.png" alt="fgf" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using AsyPlots # hide
n = 100000; using Random; Random.seed!(2) # hide
x = cumsum(rand(-1:1,n))
y = cumsum(rand(-1:1,n))
save(&quot;rw.svg&quot;,Plot(Path(x,y;color=&quot;White&quot;),   # hide
      bgcolor=&quot;Black&quot;, width=512,                 # hide
      axispen=&quot;Red&quot;,axes=true,axisarrow=Arrow())) # hide
Plot(Path(x,y;color=&quot;White&quot;),
     bgcolor=&quot;Black&quot;,
     axispen=&quot;Red&quot;,
     axes=true,
     axisarrow=Arrow())
"><pre><span class="pl-k">using</span> AsyPlots <span class="pl-c"><span class="pl-c">#</span> hide</span>
n <span class="pl-k">=</span> <span class="pl-c1">100000</span>; <span class="pl-k">using</span> Random; Random<span class="pl-k">.</span><span class="pl-c1">seed!</span>(<span class="pl-c1">2</span>) <span class="pl-c"><span class="pl-c">#</span> hide</span>
x <span class="pl-k">=</span> <span class="pl-c1">cumsum</span>(<span class="pl-c1">rand</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>,n))
y <span class="pl-k">=</span> <span class="pl-c1">cumsum</span>(<span class="pl-c1">rand</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>,n))
<span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>rw.svg<span class="pl-pds">"</span></span>,<span class="pl-c1">Plot</span>(<span class="pl-c1">Path</span>(x,y;color<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>White<span class="pl-pds">"</span></span>),   <span class="pl-c"><span class="pl-c">#</span> hide</span>
      bgcolor<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Black<span class="pl-pds">"</span></span>, width<span class="pl-k">=</span><span class="pl-c1">512</span>,                 <span class="pl-c"><span class="pl-c">#</span> hide</span>
      axispen<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Red<span class="pl-pds">"</span></span>,axes<span class="pl-k">=</span><span class="pl-c1">true</span>,axisarrow<span class="pl-k">=</span><span class="pl-c1">Arrow</span>())) <span class="pl-c"><span class="pl-c">#</span> hide</span>
<span class="pl-c1">Plot</span>(<span class="pl-c1">Path</span>(x,y;color<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>White<span class="pl-pds">"</span></span>),
     bgcolor<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Black<span class="pl-pds">"</span></span>,
     axispen<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Red<span class="pl-pds">"</span></span>,
     axes<span class="pl-k">=</span><span class="pl-c1">true</span>,
     axisarrow<span class="pl-k">=</span><span class="pl-c1">Arrow</span>())</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/rw.svg"><img src="images/rw.svg" alt="fgf" style="max-width:100%;"></a></p>
</article></div>