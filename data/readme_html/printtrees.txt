<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-printtreesjl" class="anchor" aria-hidden="true" href="#printtreesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>PrintTrees.jl</h1>
<p>Use <a href="https://github.com/Keno/AbstractTrees.jl">AbstracTrees.jl</a> to print various standard Julia types.</p>
<p>Currently just supports <code>DataType</code> and <code>Dict</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PringTrees
julia<span class="pl-k">&gt;</span> <span class="pl-c1">print_tree</span>(Real)
Real
├─ AbstractFloat
│  ├─ BigFloat
│  ├─ Float16
│  ├─ Float32
│  └─ Float64
├─ AbstractIrrational
│  └─ Irrational
├─ Integer
│  ├─ Bool
│  ├─ Signed
│  │  ├─ BigInt
│  │  ├─ Int128
│  │  ├─ Int16
│  │  ├─ Int32
│  │  ├─ Int64
│  │  └─ Int8
│  └─ Unsigned
│     ├─ UInt128
│     ├─ UInt16
│     ├─ UInt32
│     ├─ UInt64
│     └─ UInt8
└─ Rational

julia<span class="pl-k">&gt;</span> d <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:a</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>,<span class="pl-c1">:d</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:b</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">4</span>,<span class="pl-c1">:c</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Hello<span class="pl-pds">"</span></span>),<span class="pl-c1">:e</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">5.0</span>)
Dict{Symbol,Any} with <span class="pl-c1">3</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">:a</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>
  <span class="pl-c1">:d</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{Symbol,Any}</span>(<span class="pl-c1">:b</span><span class="pl-k">=&gt;</span><span class="pl-c1">4</span>,<span class="pl-c1">:c</span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Hello<span class="pl-pds">"</span></span>)
  <span class="pl-c1">:e</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">5.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">print_tree</span>(d)
Dict{Symbol,Any}
├─ a<span class="pl-k">:</span> <span class="pl-c1">2</span>
├─ d<span class="pl-k">:</span>
│  ├─ b<span class="pl-k">:</span> <span class="pl-c1">4</span>
│  └─ c<span class="pl-k">:</span> Hello
└─ e<span class="pl-k">:</span> <span class="pl-c1">5.0</span></pre></div>
</article></div>