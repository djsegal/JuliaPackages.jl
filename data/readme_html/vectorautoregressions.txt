<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-vectorautoregressionsjl" class="anchor" aria-hidden="true" href="#vectorautoregressionsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>VectorAutoregressions.jl</h1>
<p dir="auto">Vector autoregressive models for Julia</p>
<p dir="auto"><a href="http://lucabrugnolini.github.io/VectorAutoregressions.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/lucabrugnolini/VectorAutoregressions.jl/actions/workflows/Documenter.yml"><img src="https://github.com/lucabrugnolini/VectorAutoregressions.jl/actions/workflows/Documenter.yml/badge.svg" alt="Documenter" style="max-width: 100%;"></a>
<a href="https://travis-ci.org/lucabrugnolini/VectorAutoregressions.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/70131cfb07b88856da3fed2dbc7a4027682c2bfb9da376d00c4943be9065c7f2/68747470733a2f2f7472617669732d63692e6f72672f6c756361627275676e6f6c696e692f566563746f724175746f72656772657373696f6e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/lucabrugnolini/VectorAutoregressions.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/lucabrugnolini/VectorAutoregressions.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/878c37a6b243890ee676e4dc14c9acd8241238c839d82274a2095efbfa8908b5/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6c756361627275676e6f6c696e692f566563746f724175746f72656772657373696f6e732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/lucabrugnolini/VectorAutoregressions.jl/badge.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/lucabrugnolini/VectorAutoregressions.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d59c5a2a706909fb6dac758f3771d859e5eb27eb89523f589f9d43eb896f99ea/68747470733a2f2f636f6465636f762e696f2f67682f6c756361627275676e6f6c696e692f566563746f724175746f72656772657373696f6e732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/lucabrugnolini/VectorAutoregressions.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;https://github.com/lucabrugnolini/VectorAutoregressions.jl&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/lucabrugnolini/VectorAutoregressions.jl<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto">This package is a work in progress for the estimation and identification of Vector Autoregressive (VAR) models.</p>
<h2 dir="auto"><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Status</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> VAR
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> VAR(1) form</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Lag-length selection
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> AIC</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> AICC</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> BIC</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> HQC</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> VAR impulse response function (IRFs)
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Identification
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Reduce form</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Cholesky</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Long-run restrictions</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Sign restrictions</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Heteroskedasticity</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> External instruments (ex. high-frequency,narrative)
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Wild bootstrap</li>
</ul>
</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Confidence bands
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Asymptotic</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Bootstrap</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Bootstrap-after-bootstrap</li>
</ul>
</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Forecasting
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> BVAR</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> FAVAR</li>
</ul>
</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Local projection IRFs
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Lag-length selection</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Confidence bands
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Standard</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Bootstrap</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Bayesian Local Projection</li>
</ul>
</li>
</ul>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="## Example: fit a VAR(`p`) to the data and derive structural IRFs with asymptotic and bootstrap conf. bands.
using VectorAutoregressions
using DelimitedFiles: readdlm
using Plots
plotly()

# Read example data
path = joinpath(dirname(pathof(VectorAutoregressions)), &quot;..&quot;) # set base path to load data
y = readdlm(joinpath(path,&quot;test&quot;,&quot;cholvar_test_data.csv&quot;), ',') #read example file with data

# Set VAR parameters
intercept = false #intercept in the estimation
p = 2 #select lag-length
H = 15 # IRFs horizon
nrep = 500 #bootstrap sample

# Fit VAR(2) to data
V = VAR(y,p,intercept)

# Estimate IRFs - Cholesky identification
mIRFa = IRFs_a(V,H,intercept) #asymptotic conf. bandf
mIRFb = IRFs_b(V,H,nrep,intercept) #bootstrap conf. bands

# Plot irf + asy ci
T,K = size(y)
pIRF_asy = plot(layout = grid(K,K));
[plot!(pIRF_asy, [mIRFa.CI.CIl[i,:] mIRFa.IRF[i,:] mIRFa.CI.CIh[i,:]], color = [&quot;red&quot; &quot;red&quot; &quot;red&quot;],
line = [:dash :solid :dash], legend = false, subplot = i) for i in 1:K^2]
gui(pIRF_asy)

# Plot irf + bootstraped ci
pIRF_boot = plot(layout = grid(K,K));
[plot!(pIRF_boot, [mIRFb.CI.CIl[i,:] mIRFb.IRF[i,:] mIRFb.CI.CIh[i,:]], color = [&quot;blue&quot; &quot;blue&quot; &quot;blue&quot;],
line = [:dash :solid :dash], legend = false, subplot = i) for i in 1:K^2]
gui(pIRF_boot)"><pre><span class="pl-c"><span class="pl-c">#</span># Example: fit a VAR(`p`) to the data and derive structural IRFs with asymptotic and bootstrap conf. bands.</span>
<span class="pl-k">using</span> VectorAutoregressions
<span class="pl-k">using</span> DelimitedFiles<span class="pl-k">:</span> readdlm
<span class="pl-k">using</span> Plots
<span class="pl-c1">plotly</span>()

<span class="pl-c"><span class="pl-c">#</span> Read example data</span>
path <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">pathof</span>(VectorAutoregressions)), <span class="pl-s"><span class="pl-pds">"</span>..<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> set base path to load data</span>
y <span class="pl-k">=</span> <span class="pl-c1">readdlm</span>(<span class="pl-c1">joinpath</span>(path,<span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>cholvar_test_data.csv<span class="pl-pds">"</span></span>), <span class="pl-s"><span class="pl-pds">'</span>,<span class="pl-pds">'</span></span>) <span class="pl-c"><span class="pl-c">#</span>read example file with data</span>

<span class="pl-c"><span class="pl-c">#</span> Set VAR parameters</span>
intercept <span class="pl-k">=</span> <span class="pl-c1">false</span> <span class="pl-c"><span class="pl-c">#</span>intercept in the estimation</span>
p <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">#</span>select lag-length</span>
H <span class="pl-k">=</span> <span class="pl-c1">15</span> <span class="pl-c"><span class="pl-c">#</span> IRFs horizon</span>
nrep <span class="pl-k">=</span> <span class="pl-c1">500</span> <span class="pl-c"><span class="pl-c">#</span>bootstrap sample</span>

<span class="pl-c"><span class="pl-c">#</span> Fit VAR(2) to data</span>
V <span class="pl-k">=</span> <span class="pl-c1">VAR</span>(y,p,intercept)

<span class="pl-c"><span class="pl-c">#</span> Estimate IRFs - Cholesky identification</span>
mIRFa <span class="pl-k">=</span> <span class="pl-c1">IRFs_a</span>(V,H,intercept) <span class="pl-c"><span class="pl-c">#</span>asymptotic conf. bandf</span>
mIRFb <span class="pl-k">=</span> <span class="pl-c1">IRFs_b</span>(V,H,nrep,intercept) <span class="pl-c"><span class="pl-c">#</span>bootstrap conf. bands</span>

<span class="pl-c"><span class="pl-c">#</span> Plot irf + asy ci</span>
T,K <span class="pl-k">=</span> <span class="pl-c1">size</span>(y)
pIRF_asy <span class="pl-k">=</span> <span class="pl-c1">plot</span>(layout <span class="pl-k">=</span> <span class="pl-c1">grid</span>(K,K));
[<span class="pl-c1">plot!</span>(pIRF_asy, [mIRFa<span class="pl-k">.</span>CI<span class="pl-k">.</span>CIl[i,:] mIRFa<span class="pl-k">.</span>IRF[i,:] mIRFa<span class="pl-k">.</span>CI<span class="pl-k">.</span>CIh[i,:]], color <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>red<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>red<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>red<span class="pl-pds">"</span></span>],
line <span class="pl-k">=</span> [<span class="pl-c1">:dash</span> <span class="pl-c1">:solid</span> <span class="pl-c1">:dash</span>], legend <span class="pl-k">=</span> <span class="pl-c1">false</span>, subplot <span class="pl-k">=</span> i) <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>K<span class="pl-k">^</span><span class="pl-c1">2</span>]
<span class="pl-c1">gui</span>(pIRF_asy)

<span class="pl-c"><span class="pl-c">#</span> Plot irf + bootstraped ci</span>
pIRF_boot <span class="pl-k">=</span> <span class="pl-c1">plot</span>(layout <span class="pl-k">=</span> <span class="pl-c1">grid</span>(K,K));
[<span class="pl-c1">plot!</span>(pIRF_boot, [mIRFb<span class="pl-k">.</span>CI<span class="pl-k">.</span>CIl[i,:] mIRFb<span class="pl-k">.</span>IRF[i,:] mIRFb<span class="pl-k">.</span>CI<span class="pl-k">.</span>CIh[i,:]], color <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>blue<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>blue<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>blue<span class="pl-pds">"</span></span>],
line <span class="pl-k">=</span> [<span class="pl-c1">:dash</span> <span class="pl-c1">:solid</span> <span class="pl-c1">:dash</span>], legend <span class="pl-k">=</span> <span class="pl-c1">false</span>, subplot <span class="pl-k">=</span> i) <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>K<span class="pl-k">^</span><span class="pl-c1">2</span>]
<span class="pl-c1">gui</span>(pIRF_boot)</pre></div>
<p dir="auto">More in details, <code>y</code> is a matrix with data, <code>p</code> is the lag-length of the VAR we fit to the data and <code>i</code> is a Boolean for including an intercept (default is true). <code>VAR(y,p,intercept)</code> returns a fitted VAR(<code>p</code>) model in <code>V</code> with the following structure:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="struct VAR
  Y::Array # dep. variables
  X::Array # covariates
  β::Array # parameters
  ϵ::Array # residuals
  Σ::Array # VCV matrix
  p::Int64 # lag-length
  i::Bool # true or false for including an intercept (default is true)
end"><pre><span class="pl-k">struct</span> VAR
  Y<span class="pl-k">::</span><span class="pl-c1">Array</span> <span class="pl-c"><span class="pl-c">#</span> dep. variables</span>
  X<span class="pl-k">::</span><span class="pl-c1">Array</span> <span class="pl-c"><span class="pl-c">#</span> covariates</span>
  β<span class="pl-k">::</span><span class="pl-c1">Array</span> <span class="pl-c"><span class="pl-c">#</span> parameters</span>
  ϵ<span class="pl-k">::</span><span class="pl-c1">Array</span> <span class="pl-c"><span class="pl-c">#</span> residuals</span>
  Σ<span class="pl-k">::</span><span class="pl-c1">Array</span> <span class="pl-c"><span class="pl-c">#</span> VCV matrix</span>
  p<span class="pl-k">::</span><span class="pl-c1">Int64</span> <span class="pl-c"><span class="pl-c">#</span> lag-length</span>
  i<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-c"><span class="pl-c">#</span> true or false for including an intercept (default is true)</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">You can access to each element writing <code>V.</code> and than the element you are interested in (for example for the covariates <code>V.X</code>).</p>
</article></div>