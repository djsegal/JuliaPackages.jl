<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-interface-to-the-r-language" class="anchor" aria-hidden="true" href="#interface-to-the-r-language"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>===========================
Interface to the R language</h1>
<p>R has a wealth of libraries that it would be foolish to ignore
(or try to reimplement all of them).</p>
<p>This packages is here to offer one to play with Julia while
calling R whenever it has a library that would be needed.</p>
<p><a href="https://travis-ci.org/lgautier/Rif.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fe27efdaae4dbd12e8bdb7255afad4d6f65002b6/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f6c676175746965722f5269662e6a6c2e737667" alt="Build Status" data-canonical-src="http://img.shields.io/travis/lgautier/Rif.jl.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=Rif&amp;ver=release" rel="nofollow"><img src="https://camo.githubusercontent.com/852df0de38cb5359b58f6a53a84cbac8c3d65b26/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f5269665f72656c656173652e737667" alt="Rif" data-canonical-src="http://pkg.julialang.org/badges/Rif_release.svg" style="max-width:100%;"></a>
<a href="https://coveralls.io/r/lgautier/Rif.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2692403b8c629056248acbcda74f32ab67eeef2e/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6c676175746965722f5269662e6a6c2e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/coveralls/lgautier/Rif.jl.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h1>
<h2><a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Requirements</h2>
<ul>
<li>R, compiled with the option --enable-R-shlib</li>
<li>R executable in the ${PATH} (or path specified in the file Make.inc)</li>
</ul>
<h2><a id="user-content-build-and-install" class="anchor" aria-hidden="true" href="#build-and-install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Build and install</h2>
<p>This is a valid Julia package. Once you have all the METADATA.jl jazz for Julia packages sorted out
(exercise left to the reader), installing a building will be done with:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Rif<span class="pl-pds">"</span></span>)</pre></div>
<p>Once this is done, in a subsequent Julia process one can just write</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Rif</pre></div>
<p>The first time it is done, the C part of the package will be compiled against the R
found in the <code>$PATH</code>.</p>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h1>
<h2><a id="user-content-initialization" class="anchor" aria-hidden="true" href="#initialization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Initialization</h2>
<p>The package is using an embedded R, which needs to be initalized
before anything useful can be done.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Rif

Rif<span class="pl-k">.</span><span class="pl-c1">initr</span>()</pre></div>
<p>If needed, the initialization parameters can be specified:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> set initialization parameters for the embedded R</span>
argv <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>Julia-R<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>--slave<span class="pl-pds">"</span></span>]
<span class="pl-c"><span class="pl-c">#</span> set the parameters</span>
Rif<span class="pl-k">.</span><span class="pl-c1">setinitargs</span>(argv)
<span class="pl-c"><span class="pl-c">#</span> initialize embedded R</span>
Rif<span class="pl-k">.</span><span class="pl-c1">initr</span>()</pre></div>
<h2><a id="user-content-vectors-and-arrays" class="anchor" aria-hidden="true" href="#vectors-and-arrays"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Vectors and arrays</h2>
<h3><a id="user-content-vectors" class="anchor" aria-hidden="true" href="#vectors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Vectors</h3>
<p>In R there are no scalars, only vectors.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Use R's c()</span>
v <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">cR</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>)

<span class="pl-c"><span class="pl-c">#</span> new anonymous R vector of integers</span>
v <span class="pl-k">=</span> Int32[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]
v_r <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">RArray</span><span class="pl-c1">{Int32,1}</span>(v)
elt <span class="pl-k">=</span> v_r[<span class="pl-c1">1</span>]

<span class="pl-c"><span class="pl-c">#</span> new anonymous R vector of doubles</span>
v <span class="pl-k">=</span> Float64[<span class="pl-c1">1.0</span>,<span class="pl-c1">2.0</span>,<span class="pl-c1">3.0</span>]
v_r <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">RArray</span><span class="pl-c1">{Float64,1}</span>(v)
elt <span class="pl-k">=</span> v_r[<span class="pl-c1">1</span>]

<span class="pl-c"><span class="pl-c">#</span> new anonymous R vector of strings</span>
v <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>abc<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>def<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>ghi<span class="pl-pds">"</span></span>]
v_r <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">RArray</span><span class="pl-c1">{ASCIIString,1}</span>(v)
elt <span class="pl-k">=</span> v_r[<span class="pl-c1">1</span>]</pre></div>
<h3><a id="user-content-matrices-and-arrays" class="anchor" aria-hidden="true" href="#matrices-and-arrays"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Matrices and Arrays</h3>
<p>Matrices are arrays of dimension 2:</p>
<div class="highlight highlight-source-julia"><pre>v <span class="pl-k">=</span> Int32[<span class="pl-c1">1</span> <span class="pl-c1">2</span> <span class="pl-c1">3</span>; <span class="pl-c1">4</span> <span class="pl-c1">5</span> <span class="pl-c1">6</span>]
v_r <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">RArray</span><span class="pl-c1">{Int32,2}</span>(v)
elt <span class="pl-k">=</span> v_r[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>]
v_r[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">int32</span>(<span class="pl-c1">10</span>)
</pre></div>
<h2><a id="user-content-environments" class="anchor" aria-hidden="true" href="#environments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Environments</h2>
<p>In R variables are defined in environments and calls are evaluated
in environments as well. One can think of them as namespaces.
When running R interactively, one is normally in the "Global Environment"
(things are only different when in the debugger).</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> R's global environment</span>
ge <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">getGlobalEnv</span>()
<span class="pl-c"><span class="pl-c">#</span> bind the anonymous R object in v_r to the name "foo" in the</span>
<span class="pl-c"><span class="pl-c">#</span> global environment</span>
ge[<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> v_r</pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> get an R object, starting the search from a given environment</span>
<span class="pl-c"><span class="pl-c">#</span> (here from GlobalEnv, so like it would be from the R console)</span>
letters <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">get</span>(ge, <span class="pl-s"><span class="pl-pds">"</span>letters<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Functions</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> get the R function 'date()'</span>
r_date <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">get</span>(ge, <span class="pl-s"><span class="pl-pds">"</span>date<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> call it without parameters</span>
res_date <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">rcall</span>(r_date, [], [], ge)
res_date[<span class="pl-c1">1</span>]</pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> get the function 'mean()'</span>
r_mean <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">get</span>(ge, <span class="pl-s"><span class="pl-pds">"</span>mean<span class="pl-pds">"</span></span>)
v <span class="pl-k">=</span> Int32[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]
v_r <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">RArray</span><span class="pl-c1">{Int32, 1}</span>(v)
<span class="pl-c"><span class="pl-c">#</span> call it with a named parameter</span>
res_mean <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">rcall</span>(r_mean, [v_r,], [<span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-pds">"</span></span>,], ge)

<span class="pl-c"><span class="pl-c">#</span> other way to achieve the same:</span>
res_mean <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">rcall</span>(r_mean, [], [<span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> v_r])
res_mean[<span class="pl-c1">1</span>]</pre></div>
<h2><a id="user-content-r-code-in-strings" class="anchor" aria-hidden="true" href="#r-code-in-strings"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>R code in strings</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Rif

<span class="pl-c"><span class="pl-c">#</span> load the R package "cluster"</span>
<span class="pl-c1">R</span>(<span class="pl-s"><span class="pl-pds">"</span>require(cluster)<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> today's date by calling R's date()</span>
Rif<span class="pl-k">.</span><span class="pl-c1">rcall</span>(<span class="pl-c1">R</span>(<span class="pl-s"><span class="pl-pds">"</span>date<span class="pl-pds">"</span></span>))[<span class="pl-c1">1</span>]
</pre></div>
<h2><a id="user-content-gui-eventloop" class="anchor" aria-hidden="true" href="#gui-eventloop"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GUI eventloop</h2>
<p>When working with gui windows interactively, it
makes sure the gui is not being blocked.
Especially important for graphic devices.</p>
<div class="highlight highlight-source-julia"><pre>Rif<span class="pl-k">.</span><span class="pl-c1">GUI</span>()</pre></div>
<h1><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h1>
<h2><a id="user-content-hierarchical-clustering" class="anchor" aria-hidden="true" href="#hierarchical-clustering"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Hierarchical clustering</h2>
<p>We are using random data so the example is somewhat futile</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">"</span>Rif<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> Rif
<span class="pl-c1">initr</span>()

r_base <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">importr</span>(<span class="pl-s"><span class="pl-pds">"</span>base<span class="pl-pds">"</span></span>)
r_stats <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">importr</span>(<span class="pl-s"><span class="pl-pds">"</span>stats<span class="pl-pds">"</span></span>)
r_graphics <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">importr</span>(<span class="pl-s"><span class="pl-pds">"</span>graphics<span class="pl-pds">"</span></span>)

m <span class="pl-k">=</span> r_base<span class="pl-k">.</span><span class="pl-c1">matrix</span>(r_stats<span class="pl-k">.</span><span class="pl-c1">rnorm</span>(<span class="pl-c1">100</span>); nrow<span class="pl-k">=</span><span class="pl-c1">20</span>)

<span class="pl-c"><span class="pl-c">#</span> A Julia matrix mj of type (Array{Float64, 2}) could</span>
<span class="pl-c"><span class="pl-c">#</span> be used with</span>
<span class="pl-c"><span class="pl-c">#</span> m = RArray{Float64,2}(mj)</span>

d <span class="pl-k">=</span> r_stats<span class="pl-k">.</span><span class="pl-c1">dist</span>(m)
hc <span class="pl-k">=</span> r_stats<span class="pl-k">.</span><span class="pl-c1">hclust</span>(d)
r_graphics<span class="pl-k">.</span><span class="pl-c1">plot</span>(hc; 
                sub<span class="pl-k">=</span><span class="pl-c1">cR</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>),
                xlab<span class="pl-k">=</span><span class="pl-c1">cR</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="hctree.png"><img src="hctree.png" alt="hctree" style="max-width:100%;"></a></p>
<h2><a id="user-content-ggbio-in-bioconductor" class="anchor" aria-hidden="true" href="#ggbio-in-bioconductor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ggbio (in Bioconductor)</h2>
<p>Not-so-simple example, using some of the documentation for <code>autoplot()</code> in the Bioconductor package <code>ggbio</code>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Rif
<span class="pl-c1">initr</span>()
</pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">R</span>(<span class="pl-s"><span class="pl-pds">"</span>set.seed(1)<span class="pl-pds">"</span></span>)
N <span class="pl-k">=</span> <span class="pl-c1">1000</span>
r_gr <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">importr</span>(<span class="pl-s"><span class="pl-pds">"</span>GenomicRanges<span class="pl-pds">"</span></span>)
r_ir <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">importr</span>(<span class="pl-s"><span class="pl-pds">"</span>IRanges<span class="pl-pds">"</span></span>)
r_base <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">importr</span>(<span class="pl-s"><span class="pl-pds">"</span>base<span class="pl-pds">"</span></span>)
r_stats <span class="pl-k">=</span> Rif<span class="pl-k">.</span><span class="pl-c1">importr</span>(<span class="pl-s"><span class="pl-pds">"</span>stats<span class="pl-pds">"</span></span>)
<span class="pl-k">function</span> <span class="pl-en">sampleR</span>(robj, size, replace)
    r_base<span class="pl-k">.</span><span class="pl-c1">sample</span>(robj;
		  size<span class="pl-k">=</span>size, 
                  replace<span class="pl-k">=</span>replace)
<span class="pl-k">end</span>

gr <span class="pl-k">=</span> r_gr<span class="pl-k">.</span><span class="pl-c1">GRanges</span>(;
	          seqnames<span class="pl-k">=</span><span class="pl-c1">sampleR</span>(<span class="pl-c1">cR</span>(<span class="pl-s"><span class="pl-pds">"</span>chr1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr3<span class="pl-pds">"</span></span>), N, <span class="pl-c1">true</span>),
                  ranges<span class="pl-k">=</span>r_ir<span class="pl-k">.</span><span class="pl-c1">IRanges</span>(;
				      start<span class="pl-k">=</span><span class="pl-c1">sampleR</span>(<span class="pl-c1">R</span>(<span class="pl-s"><span class="pl-pds">"</span>1:300<span class="pl-pds">"</span></span>), N, <span class="pl-c1">true</span>),
                                      width<span class="pl-k">=</span><span class="pl-c1">sampleR</span>(<span class="pl-c1">R</span>(<span class="pl-s"><span class="pl-pds">"</span>70:75<span class="pl-pds">"</span></span>), N, <span class="pl-c1">true</span>)),
                  strand<span class="pl-k">=</span><span class="pl-c1">sampleR</span>(<span class="pl-c1">cR</span>(<span class="pl-s"><span class="pl-pds">"</span>+<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>-<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>*<span class="pl-pds">"</span></span>), N, <span class="pl-c1">true</span>),
                  value<span class="pl-k">=</span>r_stats<span class="pl-k">.</span><span class="pl-c1">rnorm</span>(<span class="pl-c1">cR</span>(N), <span class="pl-c1">cR</span>(<span class="pl-c1">10</span>), <span class="pl-c1">cR</span>(<span class="pl-c1">3</span>)),
                  score<span class="pl-k">=</span>r_stats<span class="pl-k">.</span><span class="pl-c1">rnorm</span>(<span class="pl-c1">cR</span>(N), <span class="pl-c1">cR</span>(<span class="pl-c1">100</span>), <span class="pl-c1">cR</span>(<span class="pl-c1">30</span>)),
                  sample<span class="pl-k">=</span><span class="pl-c1">sampleR</span>(<span class="pl-c1">cR</span>(<span class="pl-s"><span class="pl-pds">"</span>Normal<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Tumor<span class="pl-pds">"</span></span>), N, <span class="pl-c1">true</span>), 
                  pair<span class="pl-k">=</span><span class="pl-c1">sampleR</span>(<span class="pl-c1">R</span>(<span class="pl-s"><span class="pl-pds">"</span>letters<span class="pl-pds">"</span></span>), N, <span class="pl-c1">true</span>))</pre></div>
<p>For reference, the original R code:</p>
<div class="highlight highlight-source-r"><pre>set.seed(<span class="pl-c1">1</span>)
<span class="pl-smi">N</span> <span class="pl-k">&lt;-</span> <span class="pl-c1">1000</span>
library(<span class="pl-smi">GenomicRanges</span>)
<span class="pl-smi">gr</span> <span class="pl-k">&lt;-</span> GRanges(<span class="pl-v">seqnames</span> <span class="pl-k">=</span> 
              sample(c(<span class="pl-s"><span class="pl-pds">"</span>chr1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>chr3<span class="pl-pds">"</span></span>),
                       <span class="pl-v">size</span> <span class="pl-k">=</span> <span class="pl-smi">N</span>, <span class="pl-v">replace</span> <span class="pl-k">=</span> <span class="pl-c1">TRUE</span>),
              IRanges(
                      <span class="pl-v">start</span> <span class="pl-k">=</span> sample(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">300</span>, <span class="pl-v">size</span> <span class="pl-k">=</span> <span class="pl-smi">N</span>, <span class="pl-v">replace</span> <span class="pl-k">=</span> <span class="pl-c1">TRUE</span>),
                      <span class="pl-v">width</span> <span class="pl-k">=</span> sample(<span class="pl-c1">70</span><span class="pl-k">:</span><span class="pl-c1">75</span>, <span class="pl-v">size</span> <span class="pl-k">=</span> <span class="pl-smi">N</span>,<span class="pl-v">replace</span> <span class="pl-k">=</span> <span class="pl-c1">TRUE</span>)),
              <span class="pl-v">strand</span> <span class="pl-k">=</span> sample(c(<span class="pl-s"><span class="pl-pds">"</span>+<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>-<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>*<span class="pl-pds">"</span></span>), <span class="pl-v">size</span> <span class="pl-k">=</span> <span class="pl-smi">N</span>, 
                              <span class="pl-v">replace</span> <span class="pl-k">=</span> <span class="pl-c1">TRUE</span>),
              <span class="pl-v">value</span> <span class="pl-k">=</span> rnorm(<span class="pl-smi">N</span>, <span class="pl-c1">10</span>, <span class="pl-c1">3</span>), <span class="pl-v">score</span> <span class="pl-k">=</span> rnorm(<span class="pl-smi">N</span>, <span class="pl-c1">100</span>, <span class="pl-c1">30</span>),
              <span class="pl-v">sample</span> <span class="pl-k">=</span> sample(c(<span class="pl-s"><span class="pl-pds">"</span>Normal<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Tumor<span class="pl-pds">"</span></span>), 
              <span class="pl-v">size</span> <span class="pl-k">=</span> <span class="pl-smi">N</span>, <span class="pl-v">replace</span> <span class="pl-k">=</span> <span class="pl-c1">TRUE</span>),
              <span class="pl-v">pair</span> <span class="pl-k">=</span> sample(<span class="pl-c1">letters</span>, <span class="pl-v">size</span> <span class="pl-k">=</span> <span class="pl-smi">N</span>, 
              <span class="pl-v">replace</span> <span class="pl-k">=</span> <span class="pl-c1">TRUE</span>))</pre></div>
<div class="highlight highlight-source-julia"><pre>ggbio <span class="pl-k">=</span> <span class="pl-c1">importr</span>(<span class="pl-s"><span class="pl-pds">"</span>ggbio<span class="pl-pds">"</span></span>)
gr <span class="pl-k">=</span> <span class="pl-c1">r_gr</span>.(<span class="pl-c1">symbol</span>(<span class="pl-s"><span class="pl-pds">"</span>seqlengths&lt;-<span class="pl-pds">"</span></span>))(gr, <span class="pl-c1">RArray</span><span class="pl-c1">{Int32, 1}</span>(Int32[<span class="pl-c1">400</span>, <span class="pl-c1">500</span>, <span class="pl-c1">700</span>]))

<span class="pl-c"><span class="pl-c">#</span> still working out how match the R string code below with Julia/Rif</span>
<span class="pl-c"><span class="pl-c">#</span>r_base.(symbol("["))(gr,</span>
<span class="pl-c"><span class="pl-c">#</span>                     r_base.sample(R("1:" * string(r_base.length(gr)[1]))),</span>
<span class="pl-c"><span class="pl-c">#</span>                     r_base.length(gr))</span>
<span class="pl-c"><span class="pl-c">#</span>#values(gr)$to.gr &lt;- gr[sample(1:length(gr), size = length(gr))]</span>
<span class="pl-c"><span class="pl-c">#</span>#idx &lt;- sample(1:length(gr), size = 50)</span>
<span class="pl-c"><span class="pl-c">#</span>#gr &lt;- gr[idx]</span>

<span class="pl-c"><span class="pl-c">#</span> in the meantime the plot _is_ working</span>
<span class="pl-k">+</span>(x<span class="pl-k">::</span><span class="pl-c1">RArray{Sexp,1}</span>, y<span class="pl-k">::</span><span class="pl-c1">RArray{Sexp,1}</span>)<span class="pl-k">=</span><span class="pl-c1">r_base</span>.(<span class="pl-c1">symbol</span>(<span class="pl-s"><span class="pl-pds">"</span>+<span class="pl-pds">"</span></span>))(x,y)

ggplot2 <span class="pl-k">=</span> <span class="pl-c1">importr</span>(<span class="pl-s"><span class="pl-pds">"</span>ggplot2<span class="pl-pds">"</span></span>)
p <span class="pl-k">=</span> ggplot2<span class="pl-k">.</span><span class="pl-c1">ggplot</span>() <span class="pl-k">+</span> 
  ggbio<span class="pl-k">.</span><span class="pl-c1">layout_circle</span>(gr; geom <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>ideo<span class="pl-pds">"</span></span>, fill <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>gray70<span class="pl-pds">"</span></span>, 
                radius <span class="pl-k">=</span> <span class="pl-c1">7</span>, trackWidth <span class="pl-k">=</span> <span class="pl-c1">3</span>) <span class="pl-k">+</span>
  ggbio<span class="pl-k">.</span><span class="pl-c1">layout_circle</span>(gr; geom <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span>, radius <span class="pl-k">=</span> <span class="pl-c1">10</span>, trackWidth <span class="pl-k">=</span> <span class="pl-c1">4</span>, 
                aes<span class="pl-k">=</span>ggplot2<span class="pl-k">.</span><span class="pl-c1">aes_string</span>(;fill <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>score<span class="pl-pds">"</span></span>, y <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>score<span class="pl-pds">"</span></span>)) <span class="pl-k">+</span>
  ggbio<span class="pl-k">.</span><span class="pl-c1">layout_circle</span>(gr; geom <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>point<span class="pl-pds">"</span></span>, color <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>red<span class="pl-pds">"</span></span>, radius <span class="pl-k">=</span> <span class="pl-c1">14</span>,
                trackWidth <span class="pl-k">=</span> <span class="pl-c1">3</span>, grid <span class="pl-k">=</span> <span class="pl-c1">true</span>,
                aes<span class="pl-k">=</span>ggplot2<span class="pl-k">.</span><span class="pl-c1">aes_string</span>(;y <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>score<span class="pl-pds">"</span></span>)) <span class="pl-c"><span class="pl-c">#</span>+</span>
  ggbio<span class="pl-k">.</span><span class="pl-en">layout_circle</span>(gr; geom <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>link<span class="pl-pds">"</span></span>, (<span class="pl-en">symbol</span>(<span class="pl-s"><span class="pl-pds">"</span>linked.to<span class="pl-pds">"</span></span>)) <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>to.gr<span class="pl-pds">"</span></span>, 
                radius <span class="pl-k">=</span> <span class="pl-c1">6</span>, trackWidth <span class="pl-k">=</span> <span class="pl-c1">1</span>)

r_base<span class="pl-k">.</span><span class="pl-c1">print</span>(p)
</pre></div>
<p>R code:</p>
<div class="highlight highlight-source-r"><pre>require(<span class="pl-smi">ggbio</span>)
seqlengths(<span class="pl-smi">gr</span>) <span class="pl-k">&lt;-</span> c(<span class="pl-c1">400</span>, <span class="pl-c1">500</span>, <span class="pl-c1">700</span>)
values(<span class="pl-smi">gr</span>)<span class="pl-k">$</span><span class="pl-smi">to.gr</span> <span class="pl-k">&lt;-</span> <span class="pl-smi">gr</span>[sample(<span class="pl-c1">1</span><span class="pl-k">:</span>length(<span class="pl-smi">gr</span>), <span class="pl-v">size</span> <span class="pl-k">=</span> length(<span class="pl-smi">gr</span>))]
<span class="pl-smi">idx</span> <span class="pl-k">&lt;-</span> sample(<span class="pl-c1">1</span><span class="pl-k">:</span>length(<span class="pl-smi">gr</span>), <span class="pl-v">size</span> <span class="pl-k">=</span> <span class="pl-c1">50</span>)
<span class="pl-smi">gr</span> <span class="pl-k">&lt;-</span> <span class="pl-smi">gr</span>[<span class="pl-smi">idx</span>]
ggplot() <span class="pl-k">+</span> 
  layout_circle(<span class="pl-smi">gr</span>, <span class="pl-v">geom</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>ideo<span class="pl-pds">"</span></span>, <span class="pl-v">fill</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>gray70<span class="pl-pds">"</span></span>, 
                <span class="pl-v">radius</span> <span class="pl-k">=</span> <span class="pl-c1">7</span>, <span class="pl-v">trackWidth</span> <span class="pl-k">=</span> <span class="pl-c1">3</span>) <span class="pl-k">+</span>
  layout_circle(<span class="pl-smi">gr</span>, <span class="pl-v">geom</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span>, <span class="pl-v">radius</span> <span class="pl-k">=</span> <span class="pl-c1">10</span>, <span class="pl-v">trackWidth</span> <span class="pl-k">=</span> <span class="pl-c1">4</span>, 
                aes(<span class="pl-v">fill</span> <span class="pl-k">=</span> <span class="pl-smi">score</span>, <span class="pl-v">y</span> <span class="pl-k">=</span> <span class="pl-smi">score</span>)) <span class="pl-k">+</span>
  layout_circle(<span class="pl-smi">gr</span>, <span class="pl-v">geom</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>point<span class="pl-pds">"</span></span>, <span class="pl-v">color</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>red<span class="pl-pds">"</span></span>, <span class="pl-v">radius</span> <span class="pl-k">=</span> <span class="pl-c1">14</span>,
                <span class="pl-v">trackWidth</span> <span class="pl-k">=</span> <span class="pl-c1">3</span>, <span class="pl-v">grid</span> <span class="pl-k">=</span> <span class="pl-c1">TRUE</span>, aes(<span class="pl-v">y</span> <span class="pl-k">=</span> <span class="pl-smi">score</span>)) <span class="pl-k">+</span>
  layout_circle(<span class="pl-smi">gr</span>, <span class="pl-v">geom</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>link<span class="pl-pds">"</span></span>, <span class="pl-v">linked.to</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>to.gr<span class="pl-pds">"</span></span>, 
                <span class="pl-v">radius</span> <span class="pl-k">=</span> <span class="pl-c1">6</span>, <span class="pl-v">trackWidth</span> <span class="pl-k">=</span> <span class="pl-c1">1</span>)
</pre></div>
</article></div>