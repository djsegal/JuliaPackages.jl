<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-fielddoctables" class="anchor" aria-hidden="true" href="#fielddoctables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>FieldDocTables</h1>
<p><a href="https://travis-ci.org/rafaqz/FieldDocTables.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/dca1f4e1bee83920bd09644755dede4a4b541fa4/68747470733a2f2f7472617669732d63692e6f72672f72616661717a2f4669656c64446f635461626c65732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/rafaqz/FieldDocTables.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/rafaqz/FieldDocTables.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/baa3fdcc932767587a8f9a3d7fbfd7a7c8ebdcf5/687474703a2f2f636f6465636f762e696f2f6769746875622f72616661717a2f4669656c64446f635461626c65732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/rafaqz/FieldDocTables.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>FieldDocTables uses <a href="https://github.com/JuliaDocs/DocStringExtensions.jl">DocStringExtensions.jl</a>
and <a href="https://github.com/ronisbr/PrettyTables.jl">PrettyTables.jl</a> to print field names and field
docs in a table in the docs for a type (defaults to unfenced markdown).</p>
<p>But the main reason to use this package is to add additional columns to the
field documentation, such as from <a href="https://github.com/rafaqz/FieldMetadata.jl">FieldMetadata.jl</a>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> FieldDocTables, FieldMetadata

<span class="pl-k">import</span> FieldMetadata<span class="pl-k">:</span> <span class="pl-c1">@default</span>, default, <span class="pl-c1">@bounds</span>, bounds, <span class="pl-c1">@description</span>, description

<span class="pl-c"><span class="pl-c">#</span> Declare the doc abbreviation for your doc table</span>
<span class="pl-k">const</span> FIELDDOCTABLE <span class="pl-k">=</span> <span class="pl-c1">FieldDocTable</span>((Description<span class="pl-k">=</span>description, Default<span class="pl-k">=</span>default, Bounds<span class="pl-k">=</span>bounds))

<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>
The docs and metadata <span class="pl-k">for</span> this type are printed as a markdown table<span class="pl-k">:</span>
<span class="pl-k">$</span>(FIELDDOCTABLE)
<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">@description @bounds @default mutable struct TestStruct</span>
<span class="pl-s">   "Field a docs"</span>
<span class="pl-s">   a::Int     | 2   | (1, 10)     | "an Int"</span>
<span class="pl-s">   "Field b docs"</span>
<span class="pl-s">   b::Float64 | 4.0 | (2.0, 20.0) | "a Float "</span>
<span class="pl-s">end</span>
<span class="pl-s"></span>
<span class="pl-s">help?&gt; TestStruct</span>
<span class="pl-s">search: TestStruct</span>
<span class="pl-s"></span>
<span class="pl-s">  The docs and metadata for this type are printed as a markdown table:</span>
<span class="pl-s"></span>
<span class="pl-s">Field Description Default      Bounds    Docs</span>
<span class="pl-s">––––– ––––––––––– ––––––– ––––––––––– –––––––</span>
<span class="pl-s">    a      an Int       2     (1, 10) Field a</span>
<span class="pl-s">    b     a Float     4.0 (2.0, 20.0) Field b</span></pre></div>
<p>You could additionally set the truncation length for each field, or use another
table format. Table formats besides markdown should be fenced:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">const</span> FIELDDOCTABLE <span class="pl-k">=</span> <span class="pl-c1">FieldDocTable</span>((<span class="pl-c1">:Description</span><span class="pl-k">=</span>description, <span class="pl-c1">:Default</span><span class="pl-k">=</span>default, <span class="pl-c1">:Bounds</span><span class="pl-k">=</span>bounds);
                                    truncation<span class="pl-k">=</span>(<span class="pl-c1">100</span>,<span class="pl-c1">40</span>,<span class="pl-c1">70</span>),
                                    tableformat<span class="pl-k">=</span><span class="pl-c1">PrettyTableFormat</span>(unicode_rounded),
                                    fenced<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<p>Note that formats besides markdown will not translate to good html tables in browser documentation.</p>
<p>Custom functions can also be passed to the field doc constructor <code>FieldDocTable()</code>. They must accept
a type argument and return a vector or tuple of the same length as the number of fields in the type:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-en">somemethod</span>(<span class="pl-k">::</span><span class="pl-c1">Type{&lt;:TypeToDocument}</span>) <span class="pl-k">=</span> (<span class="pl-s"><span class="pl-pds">"</span>doc<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>for<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>each<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>field<span class="pl-pds">"</span></span>)</pre></div>
</article></div>