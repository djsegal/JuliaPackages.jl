<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h2><a id="user-content-functional-julia" class="anchor" aria-hidden="true" href="#functional-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Functional Julia</h2>
<p>Useful functions for functional programming in Julia. Based heavily on
<a href="https://github.com/fogus/lemonad">fogus/lemonad</a>. I make no claims that
all of these are Good Ideas. Some (or many) may be removed.</p>
<p>See the
<a href="https://github.com/zachallaun/FunctionalUtils.jl/blob/master/test/FunctionalUtilsTest.jl">tests</a>
for examples.</p>
<p>Current exports:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">export</span> <span class="pl-c"><span class="pl-c">#</span> Basic functions</span>
       partial,
       rpartial,
       not,
       complement,
       inc,
       dec,
       halve,
       explode,
       implode,
       truthy,
       falsey,
       ispos,
       isneg,
       iszero,

       <span class="pl-c"><span class="pl-c">#</span> Sequence operations</span>
       cons,
       construct,
       rest,
       butlast,
       drop,
       takewhile,
       dropwhile,
       partition,
       partitionall,
       mapcat,
       interpose,
       mapkeys,
       mapvals,
       interleave,
       repeat,
       repeatedly,
       cycle,
       splitat,

       <span class="pl-c"><span class="pl-c">#</span> Combinators</span>
       constantly,
       always,
       pipeline,
       comp,
       everypred,
       somepred,
       splat,
       unsplat,

       <span class="pl-c"><span class="pl-c">#</span> Applicative functions</span>
       update,
       remove,
       accessor,
       first,
       second,
       third,
       juxt,
       iterate,
       iterateuntil,
       reductions,

       <span class="pl-c"><span class="pl-c">#</span> HOFs</span>
       best,
       fnothing,
       curry2,
       curry3,
       curry4,
       gt,
       gte,
       lt,
       lte,
       eq,
       trampoline,
       Continue,
       <span class="pl-c1">@jump</span></pre></div>
</article></div>