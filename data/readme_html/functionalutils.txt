<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2><a id="user-content-functional-julia" class="anchor" aria-hidden="true" href="#functional-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Functional Julia</h2>
<p>Useful functions for functional programming in Julia. Based heavily on
<a href="https://github.com/fogus/lemonad">fogus/lemonad</a>. I make no claims that
all of these are Good Ideas. Some (or many) may be removed.</p>
<p>See the
<a href="https://github.com/zachallaun/FunctionalUtils.jl/blob/master/test/FunctionalUtilsTest.jl">tests</a>
for examples.</p>
<p>Current exports:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">export</span> <span class="pl-c"><span class="pl-c">#</span> Basic functions</span>
       partial,
       rpartial,
       not,
       complement,
       inc,
       dec,
       halve,
       explode,
       implode,
       truthy,
       falsey,
       ispos,
       isneg,
       iszero,

       <span class="pl-c"><span class="pl-c">#</span> Sequence operations</span>
       cons,
       construct,
       rest,
       butlast,
       drop,
       takewhile,
       dropwhile,
       partition,
       partitionall,
       mapcat,
       interpose,
       mapkeys,
       mapvals,
       interleave,
       repeat,
       repeatedly,
       cycle,
       splitat,

       <span class="pl-c"><span class="pl-c">#</span> Combinators</span>
       constantly,
       always,
       pipeline,
       comp,
       everypred,
       somepred,
       splat,
       unsplat,

       <span class="pl-c"><span class="pl-c">#</span> Applicative functions</span>
       update,
       remove,
       accessor,
       first,
       second,
       third,
       juxt,
       iterate,
       iterateuntil,
       reductions,

       <span class="pl-c"><span class="pl-c">#</span> HOFs</span>
       best,
       fnothing,
       curry2,
       curry3,
       curry4,
       gt,
       gte,
       lt,
       lte,
       eq,
       trampoline,
       Continue,
       <span class="pl-c1">@jump</span></pre></div>
</article></div>