<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text">
<h1 align="center" dir="auto"><a id="user-content---hiddenmarkovmodelreaders" class="anchor" aria-hidden="true" href="#--hiddenmarkovmodelreaders"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>
  HiddenMarkovModelReaders
</h1>

<p align="center" dir="auto">
  <strong>Hidden Markov model and unsupervised hypothesis generator for signal processing and anomaly detection</strong>
</p>

<p align="center" dir="auto">
  <a href="https://www.repostatus.org/#active" rel="nofollow">
    <img alt="Repo status" src="https://camo.githubusercontent.com/3b32dc5183a4fd39fab11f974c151297877f38723b8b7c450d42cbf0d9d9849a/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://www.repostatus.org/badges/latest/active.svg?style=flat-square" style="max-width: 100%;">
  </a>
  <a href="https://mit-license.org" rel="nofollow">
    <img alt="MIT license" src="https://camo.githubusercontent.com/ad3ef6f300e4672d89c879c54ee490a4bae95c62b0930b74eecdf702205af3c4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/License-MIT-blue.svg?style=flat-square" style="max-width: 100%;">
  </a>
  <a href="https://DanielRivasMD.github.io/HiddenMarkovModelReaders/stable" rel="nofollow">
    <img alt="Stable" src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;">
  </a>
  
  <a href="https://DanielRivasMD.github.io/HiddenMarkovModelReaders/dev" rel="nofollow">
    <img alt="Dev" src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;">
  </a>
</p>

<p align="center" dir="auto">
  <a href="https://github.com/DanielRivasMD/HiddenMarkovModelReaders/discussions">
    <img alt="Ask us anything" src="https://camo.githubusercontent.com/5274a173b70999fcba9d8ec89694746f45b9b9bc30f88c730e6e34f470efd135/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f41736b25323075732d616e797468696e672d3161626339632e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/Ask%20us-anything-1abc9c.svg?style=flat-square" style="max-width: 100%;">
  </a>
  <a href="https://github.com/SciML/ColPrac">
    <img alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" src="https://camo.githubusercontent.com/89e628d28fec8ebfb49b4d141883305bffbaa2059c281e74c1ad8022e58efc53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c65743f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet?style=flat-square" style="max-width: 100%;">
  </a>
</p>

<p align="center" dir="auto">
  <a href="https://github.com/DanielRivasMD/HiddenMarkovModelReaders/releases">
    <img alt="GitHub tag (latest SemVer pre-release)" src="https://camo.githubusercontent.com/0f7c8c5976baaca80593d879dad7a5d3c05572a91ee4baeb07c8864d6678cfc5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f7461672f44616e69656c52697661734d442f4d696e645265616465722e6a6c3f696e636c7564655f70726572656c6561736573266c6162656c3d6c617465737425323076657273696f6e266c6f676f3d67697468756226736f72743d73656d766572267374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/github/v/tag/DanielRivasMD/MindReader.jl?include_prereleases&amp;label=latest%20version&amp;logo=github&amp;sort=semver&amp;style=flat-square" style="max-width: 100%;">
  </a>
</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="assets/HiddenMarkovModelReaders.png"><img src="assets/HiddenMarkovModelReaders.png" alt="HiddenMarkovModelReaders" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-description" class="anchor" aria-hidden="true" href="#description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Description</h2>
<p dir="auto"><strong>HiddenMarkovModelReaders</strong> is a package for creating Hidden Markov models and unsupervised hypothesis generation for signal processing and anomaly detection.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt;]
pkg&gt; add HiddenMarkovModelReaders"><pre>julia<span class="pl-k">&gt;</span>]
pkg<span class="pl-k">&gt;</span> add HiddenMarkovModelReaders</pre></div>
<p dir="auto">To exit Pkg mode, just backspace. Once the package is installed it can be imported with:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using HiddenMarkovModelReaders"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> HiddenMarkovModelReaders</pre></div>
<p dir="auto">For more information, see the <a href="https://docs.julialang.org/en/v1/stdlib/Pkg/" rel="nofollow">Pkg documentation</a>.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">Using <code>Parameters.jl</code> and <code>HMMParams</code> struct the user can control all of the parameters of the model in a user friendly way.</p>
<p dir="auto">The <code>distance</code> function passed to <code>HMMParams</code> struct could either be a function:</p>
<ul dir="auto">
<li>Contained in <strong>HiddenMarkovModelReaders</strong> package, i.e., <code>euclideanDistance</code> or <code>bhattacharyyaDistance</code>, for Euclidean or Bhattacharyya distances, respectively.</li>
<li>A user predefined function whose declaration precceds the <code>HMMParams</code> strcutor.</li>
<li>A lambda or anonymous function defined within the struct declaration.</li>
</ul>
<p dir="auto">The function must be of the form <code>function distance(arr::Array{T, 1}, h::Array{T, 1}) where T &lt;: Number</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Hidden Markov model parameters

# Declare all values explicitly
explicitParams = HMMParams(
  penalty                    = 200,
  distance                   = bhattacharyyaDistance,      # package-defined distance function
  minimumFrequency           = 20,
  verbosity                  = false,
)

# Use default values and use package-defined distance function
defaultParams = HMMParams(
  distance                   = euclideanDistance,          # package-defined distance function
)

# User-defined distance function
function myDistance(arr, h)
  return (arr .- h) .^ 2
end

# Use prefined distance function
myfunctionParams = HMMParams(
  distance                   = myDistance,                 # user-predefined distance function
)

# Use lambda distance function within struct declaration
lambdaFunctionParams = HMMParams(
  distance                   = x, y -&gt; (x .- y) .^ 2       # lambda or anonymous distance function
)
"><pre><span class="pl-c"><span class="pl-c">#</span> Hidden Markov model parameters</span>

<span class="pl-c"><span class="pl-c">#</span> Declare all values explicitly</span>
explicitParams <span class="pl-k">=</span> <span class="pl-c1">HMMParams</span>(
  penalty                    <span class="pl-k">=</span> <span class="pl-c1">200</span>,
  distance                   <span class="pl-k">=</span> bhattacharyyaDistance,      <span class="pl-c"><span class="pl-c">#</span> package-defined distance function</span>
  minimumFrequency           <span class="pl-k">=</span> <span class="pl-c1">20</span>,
  verbosity                  <span class="pl-k">=</span> <span class="pl-c1">false</span>,
)

<span class="pl-c"><span class="pl-c">#</span> Use default values and use package-defined distance function</span>
defaultParams <span class="pl-k">=</span> <span class="pl-c1">HMMParams</span>(
  distance                   <span class="pl-k">=</span> euclideanDistance,          <span class="pl-c"><span class="pl-c">#</span> package-defined distance function</span>
)

<span class="pl-c"><span class="pl-c">#</span> User-defined distance function</span>
<span class="pl-k">function</span> <span class="pl-en">myDistance</span>(arr, h)
  <span class="pl-k">return</span> (arr <span class="pl-k">.-</span> h) <span class="pl-k">.^</span> <span class="pl-c1">2</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Use prefined distance function</span>
myfunctionParams <span class="pl-k">=</span> <span class="pl-c1">HMMParams</span>(
  distance                   <span class="pl-k">=</span> myDistance,                 <span class="pl-c"><span class="pl-c">#</span> user-predefined distance function</span>
)

<span class="pl-c"><span class="pl-c">#</span> Use lambda distance function within struct declaration</span>
lambdaFunctionParams <span class="pl-k">=</span> <span class="pl-c1">HMMParams</span>(
  distance                   <span class="pl-k">=</span> x, y <span class="pl-k">-&gt;</span> (x <span class="pl-k">.-</span> y) <span class="pl-k">.^</span> <span class="pl-c1">2</span>       <span class="pl-c"><span class="pl-c">#</span> lambda or anonymous distance function</span>
)
</pre></div>
<p dir="auto">Initialize a Hidden Markov model object with <code>setup</code> function.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# declare random two-dimensional array
x = rand(10, 5)

# setup Hidden Markov model object
hmm = setup(x)"><pre><span class="pl-c"><span class="pl-c">#</span> declare random two-dimensional array</span>
x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10</span>, <span class="pl-c1">5</span>)

<span class="pl-c"><span class="pl-c">#</span> setup Hidden Markov model object</span>
hmm <span class="pl-k">=</span> <span class="pl-c1">setup</span>(x)</pre></div>
<p dir="auto">Control the training using <code>process!</code> function.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# create a dictionary to hold results
resultsDc = Dict()

# procces Hidden Markov model with state splitting option
resultsDc[1] = process!(hmm, x, true, params = hmmParams)

# procces Hidden Markov model without state splitting option
resultsDc[2] = process!(hmm, x, false, params = hmmParams)"><pre><span class="pl-c"><span class="pl-c">#</span> create a dictionary to hold results</span>
resultsDc <span class="pl-k">=</span> <span class="pl-c1">Dict</span>()

<span class="pl-c"><span class="pl-c">#</span> procces Hidden Markov model with state splitting option</span>
resultsDc[<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">process!</span>(hmm, x, <span class="pl-c1">true</span>, params <span class="pl-k">=</span> hmmParams)

<span class="pl-c"><span class="pl-c">#</span> procces Hidden Markov model without state splitting option</span>
resultsDc[<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">process!</span>(hmm, x, <span class="pl-c1">false</span>, params <span class="pl-k">=</span> hmmParams)</pre></div>
<h2 dir="auto"><a id="user-content-citations" class="anchor" aria-hidden="true" href="#citations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citations</h2>
<p dir="auto">If you use <strong>HiddenMarkovModelReaders</strong> or derivates in your work, please consider citing the code record.</p>
<h2 dir="auto"><a id="user-content-contributing-and-support" class="anchor" aria-hidden="true" href="#contributing-and-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing and Support</h2>
<p dir="auto"><a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width: 100%;"></a></p>
<p dir="auto">In general contributions should follow <a href="https://github.com/SciML/ColPrac">ColPrac</a>. If you are interested in extending/improving <strong>HiddenMarkovModelReaders</strong>, head to the <a href="https://github.com/DanielRivasMD/HiddenMarkovModelReaders/discussions">discussions</a> to reach out. For support with using <strong>HiddenMarkovModelReaders</strong>, please open an <a href="https://github.com/DanielRivasMD/HiddenMarkovModelReaders/issues/new/">issue</a> describing the problem and steps to reproduce it.</p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">This package is licensed under the MIT Expat license. See <a href="LICENSE">LICENSE</a> for more informaiton.</p>
<hr>
<p dir="auto"><strong>Author's Note</strong>: This package is still under active development and is subject to change.</p>
</article></div>