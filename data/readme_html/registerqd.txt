<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-registerqd" class="anchor" aria-hidden="true" href="#registerqd"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RegisterQD</h1>
<p dir="auto"><a href="https://github.com/HolyLab/RegisterQD.jl/actions/workflows/CI.yml"><img src="https://github.com/HolyLab/RegisterQD.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a><a href="https://codecov.io/gh/HolyLab/RegisterQD.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2f39e01df23aaae13fc38468252d0c0baf77e00b4d27cf6659df59e25effddfc/68747470733a2f2f636f6465636f762e696f2f67682f486f6c794c61622f526567697374657251442e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/HolyLab/RegisterQD.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">RegisterQD performs image registration using the global optimization routine <a href="https://github.com/timholy/QuadDIRECT.jl">QuadDIRECT</a>.
Unlike many other registration packages, this is not "greedy" descent based on an initial guess---it attempts to find the globally-optimal alignment of your images.</p>
<p dir="auto">To use this package, users must choose between using either the CPU or the GPU. For CPU processing, you must manually load the <a href="https://github.com/HolyLab/RegisterMismatch.jl">RegisterMismatch package</a>: <code>using RegisterMismatch, RegisterQD</code>. For GPU processing, you should instead load the <a href="https://github.com/HolyLab/RegisterMismatchCuda.jl">RegisterMismatchCuda package</a>: <code>using RegisterMismatchCuda, RegisterQD</code>. <em>Note that loading both mismatch packages in the same session will cause method conflicts.</em> Both mismatch packages are registered in the publicly-available <a href="https://github.com/HolyLab/HolyLabRegistry">HolyLabRegistry</a>, and users are advised to add that registry.
In the current absense of Github resources for GPU code, "gpu_test.jl" should be run on your personal machine as required.</p>
<p dir="auto">This package exports the following registration functions:</p>
<ul dir="auto">
<li><code>qd_translate</code>: register images by shifting one with respect to another (translations only)</li>
<li><code>qd_rigid</code>: register images using rotations and translations</li>
<li><code>qd_affine</code>: register images using arbitrary affine transformations</li>
</ul>
<p dir="auto">In general, using more degrees of freedom allows you to solve harder optimization problems, but also makes it harder to find the global optimum. Your best strategy is to permit no more degrees of freedom than needed to solve the problem.</p>
<p dir="auto">See the help on these functions for details about how to call them.</p>
<p dir="auto">Another important feature of this package is that it supports images that were sampled anisotropically. This is particularly common for three-dimensional biomedical imaging, where MRI and optical microscopy typically have one axis sampled at lower resolution.
A rotation (from a rigid transformation) in physical space needs to be modified before applying it to an anisotropically-sampled image; see <code>arrayscale</code> and <code>getSD</code> for more information.</p>
<p dir="auto"><strong>NOTE</strong>: see NEWS.md for information about a recent breaking change.</p>
</article></div>