<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-ringlists" class="anchor" aria-hidden="true" href="#ringlists"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>RingLists</h1>
<p><a href="https://travis-ci.org/scheinerman/RingLists.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/719dbc0899d3ecb249fd7d118079ef8c424e27ca/68747470733a2f2f7472617669732d63692e6f72672f73636865696e65726d616e2f52696e674c697374732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/scheinerman/RingLists.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://coveralls.io/github/scheinerman/RingLists.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/3f01651ed2b3ae534af62af3f17f8edad4865e2d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f73636865696e65726d616e2f52696e674c697374732e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/scheinerman/RingLists.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/scheinerman/RingLists.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/7ec759f7d059910538779dd8c2c05fce3a491e36/687474703a2f2f636f6465636f762e696f2f6769746875622f73636865696e65726d616e2f52696e674c697374732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/scheinerman/RingLists.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>A <code>RingList</code> is a list of distinct values that is
unchanged by rotation. These can be created by giving a list of values
or a one-dimensional array of values:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">RingList</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>);

julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">RingList</span>([<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">1</span>]);

julia<span class="pl-k">&gt;</span> a<span class="pl-k">==</span>b
<span class="pl-c1">true</span></pre></div>
<h2><a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Functions</h2>
<p>In this list, <code>a</code> stands for a <code>RingList</code>.</p>
<ul>
<li><code>length(a)</code> gives the number of elements held in the <code>RingList</code>.</li>
<li><code>keys(a)</code> returns an iterator of the elements in <code>a</code>.</li>
<li><code>haskey(a,x)</code> checks if <code>x</code> is an element of the <code>RingList</code>.</li>
<li><code>Vector(a)</code> returns a one-dimensional array of
the elements in <code>a</code>.</li>
<li><code>Set(a)</code> returns the elements of <code>a</code> (as an unordered collection).</li>
<li><code>a[x]</code> returns the next element after <code>x</code> in <code>a</code>.</li>
<li><code>previous(a,x)</code> returns the element <code>y</code> with <code>a[y]==x</code>.</li>
<li><code>first(a)</code> returns an element of <code>a</code>; call <code>first(a,true)</code> to attempt try to
return the smallest value held in <code>a</code>. Fails if <code>a</code> is empty.</li>
<li><code>insert!(a,x)</code> inserts the element <code>a</code> into the <code>RingList</code>. No guarantee where it will end up.</li>
<li><code>delete!(a,x)</code> removes <code>x</code> from the collection linking together its
predecessor and successor.</li>
<li><code>insertafter!(a,x,y)</code> inserts <code>x</code> into <code>a</code> after <code>y</code>. For example:</li>
</ul>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">RingList</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>)
<span class="pl-c1">RingList</span><span class="pl-c1">{Int64}</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">insertafter!</span>(a,<span class="pl-c1">99</span>,<span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> a
<span class="pl-c1">RingList</span><span class="pl-c1">{Int64}</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">99</span>,<span class="pl-c1">3</span>)</pre></div>
<ul>
<li><code>reverse(a)</code> returns a new <code>RingList</code> with the elements reversed.</li>
</ul>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">RingList</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>)
<span class="pl-c1">RingList</span><span class="pl-c1">{Int64}</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>)

julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">reverse</span>(a)
<span class="pl-c1">RingList</span><span class="pl-c1">{Int64}</span>(<span class="pl-c1">1</span>,<span class="pl-c1">5</span>,<span class="pl-c1">4</span>,<span class="pl-c1">3</span>,<span class="pl-c1">2</span>)</pre></div>
</article></div>