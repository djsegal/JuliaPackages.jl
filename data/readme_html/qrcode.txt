<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-qrcode" class="anchor" aria-hidden="true" href="#qrcode"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>QRCode</h1>
<p dir="auto">New development goes to <a href="https://github.com/JuliaImages/QRCoders.jl">QRCoders</a></p>
<p dir="auto"><a href="https://github.com/JuliaImages/QRCode.jl/actions"><img src="https://github.com/JuliaImages/QRCode.jl/workflows/CI/badge.svg" alt="" style="max-width: 100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/9e736da0f6874ced5e8150691a0074d006746afcb3dd7ddea3e22ff7b576bbef/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f512f5152436f64652e737667" alt="" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/Q/QRCode.svg" style="max-width: 100%;"></a>
<a href="https://codecov.io/github/JuliaImages/QRCode.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/bd408eb6d52335cc9d835d0846f906791cbf6b4837e6923b041a3eb094e76d6a/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c6961496d616765732f5152436f64652e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://codecov.io/github/JuliaImages/QRCode.jl/coverage.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://JuliaImages.github.io/QRCode.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://JuliaImages.github.io/QRCode.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Create <a href="https://en.wikipedia.org/wiki/QR_code" rel="nofollow">QR Codes</a> as data within Julia, or export as PNG.</p>
<h3 dir="auto"><a id="user-content-create-a-qr-code-as-data" class="anchor" aria-hidden="true" href="#create-a-qr-code-as-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Create a QR Code as data</h3>
<p dir="auto">Creating a QR Code couldn't be simpler.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using QRCode

julia&gt; qrcode(&quot;Hello world!&quot;)
29×29 BitArray{2}:
 false  false  false  false  …  false  false  false
 false  false  false  false     false  false  false
     ⋮                       ⋱
 false  false  false  false     false  false  false
 false  false  false  false     false  false  false"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> QRCode

julia<span class="pl-k">&gt;</span> <span class="pl-c1">qrcode</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>)
<span class="pl-c1">29</span><span class="pl-k">×</span><span class="pl-c1">29</span> BitArray{<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  …  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>
 <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>     <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>
     ⋮                       ⋱
 <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>     <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>
 <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>     <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span></pre></div>
<p dir="auto">The value <code>true</code> represents a dark space and <code>false</code> a white square.</p>
<p dir="auto">There are two optional arguments: the error correction level (explained below) and <code>compact</code> which, when <code>true</code>, removes the white space around the code.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; qrcode(&quot;Hello world!&quot;, High(), compact = true)
25×25 BitArray{2}:
 true   true   true   true  …   true   true   true
 true  false  false  false     false  false   true
    ⋮                       ⋱
 true  false  false  false     false  false  false
 true   true   true   true     false  false   true"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">qrcode</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>, <span class="pl-c1">High</span>(), compact <span class="pl-k">=</span> <span class="pl-c1">true</span>)
<span class="pl-c1">25</span><span class="pl-k">×</span><span class="pl-c1">25</span> BitArray{<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">true</span>   <span class="pl-c1">true</span>   <span class="pl-c1">true</span>   <span class="pl-c1">true</span>  …   <span class="pl-c1">true</span>   <span class="pl-c1">true</span>   <span class="pl-c1">true</span>
 <span class="pl-c1">true</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>     <span class="pl-c1">false</span>  <span class="pl-c1">false</span>   <span class="pl-c1">true</span>
    ⋮                       ⋱
 <span class="pl-c1">true</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>     <span class="pl-c1">false</span>  <span class="pl-c1">false</span>  <span class="pl-c1">false</span>
 <span class="pl-c1">true</span>   <span class="pl-c1">true</span>   <span class="pl-c1">true</span>   <span class="pl-c1">true</span>     <span class="pl-c1">false</span>  <span class="pl-c1">false</span>   <span class="pl-c1">true</span></pre></div>
<h3 dir="auto"><a id="user-content-export-a-qr-code-as-a-png-file" class="anchor" aria-hidden="true" href="#export-a-qr-code-as-a-png-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Export a QR Code as a PNG file</h3>
<p dir="auto">Exporting files is also easy.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; exportqrcode(&quot;Hello world!&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">exportqrcode</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">A file will be saved at <code>./qrcode.png</code>.</p>
<blockquote>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/jiegillet/QRCode.jl/966b11d0334e050992d4167bda34a495fb334a6c/qrcode.png"><img src="https://raw.githubusercontent.com/jiegillet/QRCode.jl/966b11d0334e050992d4167bda34a495fb334a6c/qrcode.png" alt="QRCode1" style="max-width: 100%;"></a></p>
</blockquote>
<p dir="auto">There are three optional parameters.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; exportqrcode(&quot;Hello world!&quot;, &quot;img/hello.png&quot;, Medium(), targetsize = 10, compact = true)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">exportqrcode</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>img/hello.png<span class="pl-pds">"</span></span>, <span class="pl-c1">Medium</span>(), targetsize <span class="pl-k">=</span> <span class="pl-c1">10</span>, compact <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<p dir="auto">This file will be saved as <code>./img/hello.png</code> (if the <code>img</code> directory already exists), have a size of (approximately) 10 centimeters and be compact. Please note that compact codes may be hard to read depending on their background.</p>
<blockquote>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/jiegillet/QRCode.jl/966b11d0334e050992d4167bda34a495fb334a6c/hello.png"><img src="https://raw.githubusercontent.com/jiegillet/QRCode.jl/966b11d0334e050992d4167bda34a495fb334a6c/hello.png" alt="QRCode2" style="max-width: 100%;"></a></p>
</blockquote>
<h3 dir="auto"><a id="user-content-error-correction-level" class="anchor" aria-hidden="true" href="#error-correction-level"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Error Correction Level</h3>
<p dir="auto">QR Codes and be encoded with four error correction levels <code>Low</code>, <code>Medium</code>, <code>Quartile</code> and <code>High</code>. Error correction can restore missing data from the QR code.</p>
<ul dir="auto">
<li><code>Low</code> can restore up to 7% of missing codewords.</li>
<li><code>Medium</code> can restore up to 15% of missing codewords.</li>
<li><code>Quartile</code> can restore up to 25% of missing codewords.</li>
<li><code>High</code> can restore up to 30% of missing codewords.</li>
</ul>
<p dir="auto">The four levels are encoded as types in <code>QRCode.jl</code>, grouped under the abstract type <code>ErrCorrLevel</code>. Don't forget to use parentheses when you call the values: <code>qrcode("Hello", High())</code>.</p>
<h3 dir="auto"><a id="user-content-encoding-modes" class="anchor" aria-hidden="true" href="#encoding-modes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Encoding Modes</h3>
<p dir="auto">QR Codes can encode data using several encoding schemes. <code>QRCode.jl</code> supports three of them: <code>Numeric</code>, <code>Alphanumeric</code> and <code>Byte</code>.</p>
<p dir="auto"><code>Numeric</code> is used for messages composed of digits only, <code>Alphanumeric</code> for messages composed of digits, characters <code>A</code>-<code>Z</code> (capital only) space and <code>%</code> <code>*</code> <code>+</code> <code>-</code> <code>.</code> <code>/</code> <code>:</code> <code>\$</code>, and <code>Bytes</code> for messages composed of ISO 8859-1 or UTF-8 characters. Please not that QR Code reader don't always support arbitrary UTF-8 characters.</p>
<h3 dir="auto"><a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgments</h3>
<p dir="auto"><code>QRCode.jl</code> was built following this <a href="https://www.thonky.com/qr-code-tutorial/" rel="nofollow">excellent tutorial</a>.</p>
<p dir="auto"><code>QRCode.jl</code> was created during the <a href="https://groups.oist.jp/grad/skill-pill-67" rel="nofollow">Efficient Scientific Computing with Julia</a> workshop, taught by <a href="https://github.com/vchuravy">Valentin Churavy</a> at the <a href="https://www.oist.jp" rel="nofollow">Okinawa Institute of Science and Technology</a> in July 2019. <a href="https://github.com/JuliaLabs/Workshop-OIST">Slides available here</a>.</p>

</article></div>