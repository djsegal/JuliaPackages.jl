<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-drillholes" class="anchor" aria-hidden="true" href="#drillholes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DrillHoles</h1>
<p><a href="https://github.com/JuliaEarth/DrillHoles.jl/actions"><img src="https://camo.githubusercontent.com/dfb0465c9a6a9b61e49a52858898a1cda200b202c2c786e150ab8a9d34126383/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f4a756c696145617274682f4472696c6c486f6c65732e6a6c2f43493f7374796c653d666c61742d737175617265" alt="Build Status" data-canonical-src="https://img.shields.io/github/workflow/status/JuliaEarth/DrillHoles.jl/CI?style=flat-square" style="max-width:100%;"></a> <a href="https://codecov.io/gh/JuliaEarth/DrillHoles.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/952030c538b414c92c692bc9217f5f153c8aa34e3f665158fd90f156619aec68/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696145617274682f4472696c6c486f6c65732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaEarth/DrillHoles.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p><code>DrillHoles.jl</code> is a package written in Julia for drill holes desurvey and compositing.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>First, it is necessary to install Julia. Installation instructions for Windows, Linux and macOS are available <a href="https://julialang.org/downloads/platform/" rel="nofollow">here</a>.</p>
<p>To install <code>DrillHoles.jl</code> package: open a terminal, type <code>julia</code> to open the REPL and then install the package with the following command. Additionally, the <code>GeoStats.jl</code> package is also installed to run the example later.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg; Pkg.add(&quot;DrillHoles&quot;); Pkg.add(&quot;GeoStats&quot;)
"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>DrillHoles<span class="pl-pds">"</span></span>); Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>GeoStats<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-drill-hole-tables" class="anchor" aria-hidden="true" href="#drill-hole-tables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Drill hole tables</h2>
<p>Before using the package, it is necessary to have a collar table, a survey table and at least one interval table (such as assay and lithology). They can be passed as CSV file or <code>DataFrame</code>. Examples of data tables are shown below:</p>
<p align="center">
  <a target="_blank" rel="noopener noreferrer" href="imgs/tables_example.png"><img src="imgs/tables_example.png" style="max-width:100%;"></a>
</p>
<h2><a id="user-content-usage-example" class="anchor" aria-hidden="true" href="#usage-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage example</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using DrillHoles

# Inform drill hole tables and main columns
collar = Collar(file=&quot;C:/collar.csv&quot;, holeid=:HOLEID, x=:X, y=:Y, z=:Z)
survey = Survey(file=&quot;C:/survey.csv&quot;, holeid=:HOLEID, at=:AT, azm=:AZM, dip=:DIP)
assay  = Interval(file=&quot;C:/assay.csv&quot;, holeid=:HOLEID, from=:FROM, to=:TO)
litho  = Interval(file=&quot;C:/litho.csv&quot;, holeid=:HOLEID, from=:FROM, to=:TO)

# Desurvey drill hole tables
dh = drillhole(collar, survey, [assay, litho])

# The DrillHole object created have 4 components
dh.table  # the desurveyed drill hole table
dh.trace  # the trace file with coordinates at surveyed depths
dh.pars   # the main column names
dh.warns  # the table of warning and errors identified during desurvey

# Composite drillhole using :equalcomp mode, which seeks to create composites
# with the exact `interval` length;  borders are discarded if have length below
# `mincomp`. Max composite length = `interval`
comps = composite(dh, interval=1.0, zone=:LITHO, mode=:equalcomp)

# Composite drillhole using :equalcomp mode; composite lengths are defined
# seeking to include all possible intervals with length above `mincomp`.
# Max composite length = 1.5*`interval`
comps = composite(dh, interval=1.0, zone=:LITHO, mode=:nodiscard)

# To use the drill hole file as PointSet into GeoStats.jl framework
using GeoStats
pointset = georef(comps.table, (:X,:Y,:Z))
"><pre><span class="pl-k">using</span> DrillHoles

<span class="pl-c"><span class="pl-c">#</span> Inform drill hole tables and main columns</span>
collar <span class="pl-k">=</span> <span class="pl-c1">Collar</span>(file<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>C:/collar.csv<span class="pl-pds">"</span></span>, holeid<span class="pl-k">=</span><span class="pl-c1">:HOLEID</span>, x<span class="pl-k">=</span><span class="pl-c1">:X</span>, y<span class="pl-k">=</span><span class="pl-c1">:Y</span>, z<span class="pl-k">=</span><span class="pl-c1">:Z</span>)
survey <span class="pl-k">=</span> <span class="pl-c1">Survey</span>(file<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>C:/survey.csv<span class="pl-pds">"</span></span>, holeid<span class="pl-k">=</span><span class="pl-c1">:HOLEID</span>, at<span class="pl-k">=</span><span class="pl-c1">:AT</span>, azm<span class="pl-k">=</span><span class="pl-c1">:AZM</span>, dip<span class="pl-k">=</span><span class="pl-c1">:DIP</span>)
assay  <span class="pl-k">=</span> <span class="pl-c1">Interval</span>(file<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>C:/assay.csv<span class="pl-pds">"</span></span>, holeid<span class="pl-k">=</span><span class="pl-c1">:HOLEID</span>, from<span class="pl-k">=</span><span class="pl-c1">:FROM</span>, to<span class="pl-k">=</span><span class="pl-c1">:TO</span>)
litho  <span class="pl-k">=</span> <span class="pl-c1">Interval</span>(file<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>C:/litho.csv<span class="pl-pds">"</span></span>, holeid<span class="pl-k">=</span><span class="pl-c1">:HOLEID</span>, from<span class="pl-k">=</span><span class="pl-c1">:FROM</span>, to<span class="pl-k">=</span><span class="pl-c1">:TO</span>)

<span class="pl-c"><span class="pl-c">#</span> Desurvey drill hole tables</span>
dh <span class="pl-k">=</span> <span class="pl-c1">drillhole</span>(collar, survey, [assay, litho])

<span class="pl-c"><span class="pl-c">#</span> The DrillHole object created have 4 components</span>
dh<span class="pl-k">.</span>table  <span class="pl-c"><span class="pl-c">#</span> the desurveyed drill hole table</span>
dh<span class="pl-k">.</span>trace  <span class="pl-c"><span class="pl-c">#</span> the trace file with coordinates at surveyed depths</span>
dh<span class="pl-k">.</span>pars   <span class="pl-c"><span class="pl-c">#</span> the main column names</span>
dh<span class="pl-k">.</span>warns  <span class="pl-c"><span class="pl-c">#</span> the table of warning and errors identified during desurvey</span>

<span class="pl-c"><span class="pl-c">#</span> Composite drillhole using :equalcomp mode, which seeks to create composites</span>
<span class="pl-c"><span class="pl-c">#</span> with the exact `interval` length;  borders are discarded if have length below</span>
<span class="pl-c"><span class="pl-c">#</span> `mincomp`. Max composite length = `interval`</span>
comps <span class="pl-k">=</span> <span class="pl-c1">composite</span>(dh, interval<span class="pl-k">=</span><span class="pl-c1">1.0</span>, zone<span class="pl-k">=</span><span class="pl-c1">:LITHO</span>, mode<span class="pl-k">=</span><span class="pl-c1">:equalcomp</span>)

<span class="pl-c"><span class="pl-c">#</span> Composite drillhole using :equalcomp mode; composite lengths are defined</span>
<span class="pl-c"><span class="pl-c">#</span> seeking to include all possible intervals with length above `mincomp`.</span>
<span class="pl-c"><span class="pl-c">#</span> Max composite length = 1.5*`interval`</span>
comps <span class="pl-k">=</span> <span class="pl-c1">composite</span>(dh, interval<span class="pl-k">=</span><span class="pl-c1">1.0</span>, zone<span class="pl-k">=</span><span class="pl-c1">:LITHO</span>, mode<span class="pl-k">=</span><span class="pl-c1">:nodiscard</span>)

<span class="pl-c"><span class="pl-c">#</span> To use the drill hole file as PointSet into GeoStats.jl framework</span>
<span class="pl-k">using</span> GeoStats
pointset <span class="pl-k">=</span> <span class="pl-c1">georef</span>(comps<span class="pl-k">.</span>table, (<span class="pl-c1">:X</span>,<span class="pl-c1">:Y</span>,<span class="pl-c1">:Z</span>))</pre></div>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<p>The documentation of the main functions are available as <a href="https://juliahub.com/docs/DrillHoles" rel="nofollow">docstrings</a></p>
</article></div>