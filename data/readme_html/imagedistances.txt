<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-imagedistancesjl" class="anchor" aria-hidden="true" href="#imagedistancesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ImageDistances.jl</h1>
<p><a href="https://travis-ci.org/JuliaImages/ImageDistances.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/20fa19d50ff80ba0f588a93cb7926ab42c7b2c9c523e9c321855fa7655d14592/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961496d616765732f496d61676544697374616e6365732e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.org/JuliaImages/ImageDistances.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/32163bb752b414e80467237fe76704b78e63d210819ab6d6e8c52701c806b03c/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f492f496d61676544697374616e6365732e737667" alt="" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/I/ImageDistances.svg" style="max-width:100%;"></a>
<a href="https://codecov.io/github/JuliaImages/ImageDistances.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/9f9e6c4d27fc0aa26dc4ed5555c8e34597a034c7756c3eda9c3f9c1bde71b867/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c6961496d616765732f496d61676544697374616e6365732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://codecov.io/github/JuliaImages/ImageDistances.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p><code>ImageDistances.jl</code> aims to:</p>
<ul>
<li>follow the same API in <a href="https://github.com/JuliaStats/Distances.jl">Distances.jl</a></li>
<li>support image types</li>
<li>provide image-specific distances</li>
</ul>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p><code>ImageDistances.jl</code> is shipped together with <code>Images.jl</code>, but you can still use it as a standalone package.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# both line includes this package
using Images
using ImageDistances
"><pre><span class="pl-c"><span class="pl-c">#</span> both line includes this package</span>
<span class="pl-k">using</span> Images
<span class="pl-k">using</span> ImageDistances</pre></div>
<p>Here's a simple usage example</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using ImageDistances, TestImages

d = Euclidean()
imgA = testimage(&quot;cameraman&quot;) # N0f8
imgB = testimage(&quot;lena_gray_512&quot;) # N0f8

# distance between two images
evaluate(d, imgA, imgB) # 142.59576f0
d(imgA, imgB) # 142.59576f0
"><pre><span class="pl-k">using</span> ImageDistances, TestImages

d <span class="pl-k">=</span> <span class="pl-c1">Euclidean</span>()
imgA <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>cameraman<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> N0f8</span>
imgB <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>lena_gray_512<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> N0f8</span>

<span class="pl-c"><span class="pl-c">#</span> distance between two images</span>
<span class="pl-c1">evaluate</span>(d, imgA, imgB) <span class="pl-c"><span class="pl-c">#</span> 142.59576f0</span>
<span class="pl-c1">d</span>(imgA, imgB) <span class="pl-c"><span class="pl-c">#</span> 142.59576f0</span></pre></div>
<p>Distances are calculated regardless of the color type and storage type.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using ImageCore

# For gray image, all of them equals
d(imgA, imgB) # 142.59576f0
d(float32.(imgA), float32.(imgB)) # 142.59576f0
d(Float32.(imgA), Float32.(imgB)) # 142.59576f0
d(imgA, float32.(imgB)) # 142.59576f0
"><pre><span class="pl-k">using</span> ImageCore

<span class="pl-c"><span class="pl-c">#</span> For gray image, all of them equals</span>
<span class="pl-c1">d</span>(imgA, imgB) <span class="pl-c"><span class="pl-c">#</span> 142.59576f0</span>
<span class="pl-c1">d</span>(<span class="pl-c1">float32</span>.(imgA), <span class="pl-c1">float32</span>.(imgB)) <span class="pl-c"><span class="pl-c">#</span> 142.59576f0</span>
<span class="pl-c1">d</span>(<span class="pl-c1">Float32</span>.(imgA), <span class="pl-c1">Float32</span>.(imgB)) <span class="pl-c"><span class="pl-c">#</span> 142.59576f0</span>
<span class="pl-c1">d</span>(imgA, <span class="pl-c1">float32</span>.(imgB)) <span class="pl-c"><span class="pl-c">#</span> 142.59576f0</span></pre></div>
<p>However, for <code>Color3</code> images such as <code>RGB</code>, it's noteworthy that the following results are
different in general.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="d = ZNCC()
imgA = testimage(&quot;lena_color_512&quot;)
imgB = testimage(&quot;fabio_color_512&quot;)
# distance of each pixel is calculated first, and then sum up all pixels
d(imgA, imgB) # 0.023451565f0
# distance of each slice is calculated first, and then sum up three channels
d(channelview(imgA), channelview(imgB)) # 0.21142173f0
"><pre>d <span class="pl-k">=</span> <span class="pl-c1">ZNCC</span>()
imgA <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>lena_color_512<span class="pl-pds">"</span></span>)
imgB <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>fabio_color_512<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> distance of each pixel is calculated first, and then sum up all pixels</span>
<span class="pl-c1">d</span>(imgA, imgB) <span class="pl-c"><span class="pl-c">#</span> 0.023451565f0</span>
<span class="pl-c"><span class="pl-c">#</span> distance of each slice is calculated first, and then sum up three channels</span>
<span class="pl-c1">d</span>(<span class="pl-c1">channelview</span>(imgA), <span class="pl-c1">channelview</span>(imgB)) <span class="pl-c"><span class="pl-c">#</span> 0.21142173f0</span></pre></div>
<p>That's said, to achieve the same results to other languages, you need to <code>channelview</code> the image first to get a raw numeric view.</p>
<p>Just like in <code>Distances.jl</code>, huge performance gains are obtained by calling the <code>colwise</code> and <code>pairwise</code>
functions instead of naively looping over a collection of images and calling <code>evaluate</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="d = ModifiedHausdorff()

# two lists of images
imgsA = [imgA, imgB, ...]
imgsB = [imgB, imgA, ...]

# distance between the &quot;columns&quot;
colwise(d, imgsA, imgsB)

# distance between every pair of images
pairwise(d, imgsA, imgsB)
pairwise(d, imgsA)
"><pre>d <span class="pl-k">=</span> <span class="pl-c1">ModifiedHausdorff</span>()

<span class="pl-c"><span class="pl-c">#</span> two lists of images</span>
imgsA <span class="pl-k">=</span> [imgA, imgB, <span class="pl-k">...</span>]
imgsB <span class="pl-k">=</span> [imgB, imgA, <span class="pl-k">...</span>]

<span class="pl-c"><span class="pl-c">#</span> distance between the "columns"</span>
<span class="pl-c1">colwise</span>(d, imgsA, imgsB)

<span class="pl-c"><span class="pl-c">#</span> distance between every pair of images</span>
<span class="pl-c1">pairwise</span>(d, imgsA, imgsB)
<span class="pl-c1">pairwise</span>(d, imgsA)</pre></div>
<h2><a id="user-content-distances" class="anchor" aria-hidden="true" href="#distances"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Distances</h2>
<h3><a id="user-content-general-distances" class="anchor" aria-hidden="true" href="#general-distances"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>General Distances</h3>
<table>
<thead>
<tr>
<th>type name</th>
<th>convenient syntax</th>
<th>math definition</th>
</tr>
</thead>
<tbody>
<tr>
<td>Euclidean</td>
<td><code>euclidean(x, y)</code></td>
<td><code>sqrt(sum((x - y) .^ 2))</code></td>
</tr>
<tr>
<td>SqEuclidean</td>
<td><code>sqeuclidean(x, y)</code></td>
<td><code>sum((x - y).^2)</code></td>
</tr>
<tr>
<td>Cityblock</td>
<td><code>cityblock(x, y)</code></td>
<td><code>sum(abs(x - y))</code></td>
</tr>
<tr>
<td>TotalVariation</td>
<td><code>totalvariation(x, y)</code></td>
<td><code>sum(abs(x - y)) / 2</code></td>
</tr>
<tr>
<td>Minkowski</td>
<td><code>minkowski(x, y, p)</code></td>
<td><code>sum(abs(x - y).^p) ^ (1/p)</code></td>
</tr>
<tr>
<td>Hamming</td>
<td><code>hamming(x, y)</code></td>
<td><code>sum(x .!= y)</code></td>
</tr>
<tr>
<td>SumAbsoluteDifference</td>
<td><code>sad(x, y)</code></td>
<td><code>sum(abs(x - y))</code></td>
</tr>
<tr>
<td>SumSquaredDifference</td>
<td><code>ssd(x, y)</code></td>
<td><code>sum((x - y).^2)</code></td>
</tr>
<tr>
<td>MeanAbsoluteError</td>
<td><code>mae(x, y)</code>, <code>sadn(x, y)</code></td>
<td><code>sum(abs(x - y))/len(x)</code></td>
</tr>
<tr>
<td>MeanSquaredError</td>
<td><code>mse(x, y)</code>, <code>ssdn(x, y)</code></td>
<td><code>sum((x - y).^2)/len(x)</code></td>
</tr>
<tr>
<td>RootMeanSquaredError</td>
<td><code>rmse(x, y)</code></td>
<td><code>sqrt(sum((x - y) .^ 2)/len(x))</code></td>
</tr>
<tr>
<td>ZNCC</td>
<td><code>zncc(x, y)</code></td>
<td><code>dot(x,y)/(norm(x)*norm(y))</code></td>
</tr>
</tbody>
</table>
<h3><a id="user-content-image-specific-distances" class="anchor" aria-hidden="true" href="#image-specific-distances"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Image-specific Distances</h3>
<table>
<thead>
<tr>
<th>Distance type</th>
<th>Convenient syntax</th>
<th>References</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Hausdorff</code> and <code>ModifiedHausdorff</code></td>
<td><code>hausdorff(imgA,imgB)</code> and <code>modified_hausdorff(imgA,imgB)</code></td>
<td>Dubuisson, M-P et al. 1994. A Modified Hausdorff Distance for Object-Matching.</td>
</tr>
<tr>
<td><code>CIEDE2000</code></td>
<td><code>ciede2000(imgA,imgB)</code> and <code>ciede2000(imgA,imgB; metric=DE_2000())</code></td>
<td>Sharma, G., Wu, W., and Dalal, E. N., 2005. The CIEDE2000 color‐difference formula.</td>
</tr>
</tbody>
</table>

</article></div>