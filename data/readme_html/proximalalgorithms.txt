<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-proximalalgorithmsjl" class="anchor" aria-hidden="true" href="#proximalalgorithmsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ProximalAlgorithms.jl</h1>
<p><a href="https://travis-ci.org/kul-forbes/ProximalAlgorithms.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/882ada621d9f49742cf7a0a310f0f69cb4648681/68747470733a2f2f7472617669732d63692e6f72672f6b756c2d666f726265732f50726f78696d616c416c676f726974686d732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/kul-forbes/ProximalAlgorithms.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/kul-forbes/ProximalAlgorithms.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/f27f7f9fc7e8b571fb406f33efb819a1c608c4f0/687474703a2f2f636f6465636f762e696f2f6769746875622f6b756c2d666f726265732f50726f78696d616c416c676f726974686d732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/kul-forbes/ProximalAlgorithms.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Proximal algorithms (also known as "splitting" algorithms or methods) for nonsmooth optimization in Julia.</p>
<p>This package can be used in combination with <a href="https://github.com/kul-forbes/ProximalOperators.jl">ProximalOperators.jl</a> (providing first-order primitives, i.e. gradient and proximal mapping, for numerous cost functions) and <a href="https://github.com/kul-forbes/AbstractOperators.jl">AbstractOperators.jl</a> (providing several linear and nonlinear operators) to formulate and solve a wide spectrum of nonsmooth optimization problems.</p>
<p><a href="https://github.com/kul-forbes/StructuredOptimization.jl">StructuredOptimization.jl</a> provides a higher-level interface to formulate and solve problems using (some of) the algorithms here included.</p>
<h3><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Quick start</h3>
<p>To install the package, simply issue the following command in the Julia REPL:</p>
<div class="highlight highlight-source-julia"><pre>] add ProximalAlgorithms</pre></div>
<p>Check out <a href="test/problems">these test scripts</a> for examples on how to apply
the provided algorithms to problems.</p>
<h3><a id="user-content-implemented-algorithms" class="anchor" aria-hidden="true" href="#implemented-algorithms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Implemented Algorithms</h3>
<table>
<thead>
<tr>
<th>Algorithm</th>
<th>Function</th>
<th>Reference</th>
</tr>
</thead>
<tbody>
<tr>
<td>Douglas-Rachford splitting algorithm</td>
<td><a href="src/algorithms/douglasrachford.jl"><code>DouglasRachford</code></a></td>
<td><a href="https://link.springer.com/article/10.1007/BF01581204" rel="nofollow">[1]</a></td>
</tr>
<tr>
<td>Forward-backward splitting (i.e. proximal gradient) algorithm</td>
<td><a href="src/algorithms/forwardbackward.jl"><code>ForwardBackward</code></a></td>
<td><a href="http://www.mit.edu/~dimitrib/PTseng/papers/apgm.pdf" rel="nofollow">[2]</a>, <a href="http://epubs.siam.org/doi/abs/10.1137/080716542" rel="nofollow">[3]</a></td>
</tr>
<tr>
<td>Vũ-Condat primal-dual algorithm</td>
<td><a href="src/algorithms/primaldual.jl"><code>VuCondat</code></a></td>
<td><a href="https://link.springer.com/article/10.1007/s10851-010-0251-1" rel="nofollow">[4]</a>, <a href="https://link.springer.com/article/10.1007/s10444-011-9254-8" rel="nofollow">[6]</a>, <a href="https://link.springer.com/article/10.1007/s10957-012-0245-9" rel="nofollow">[7]</a></td>
</tr>
<tr>
<td>Davis-Yin splitting algorithm</td>
<td><a href="src/algorithms/davisyin.jl"><code>DavisYin</code></a></td>
<td><a href="https://link.springer.com/article/10.1007/s11228-017-0421-z" rel="nofollow">[9]</a></td>
</tr>
<tr>
<td>Asymmetric forward-backward-adjoint algorithm</td>
<td><a href="src/algorithms/primaldual.jl"><code>AFBA</code></a></td>
<td><a href="https://link.springer.com/article/10.1007/s10589-017-9909-6" rel="nofollow">[10]</a></td>
</tr>
<tr>
<td>PANOC (L-BFGS)</td>
<td><a href="src/algorithms/panoc.jl"><code>PANOC</code></a></td>
<td><a href="https://doi.org/10.1109/CDC.2017.8263933" rel="nofollow">[11]</a></td>
</tr>
<tr>
<td>ZeroFPR (L-BFGS)</td>
<td><a href="src/algorithms/zerofpr.jl"><code>ZeroFPR</code></a></td>
<td><a href="https://epubs.siam.org/doi/10.1137/16M1080240" rel="nofollow">[12]</a></td>
</tr>
</tbody>
</table>
<h3><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contributing</h3>
<p>Contributions are welcome in the form of <a href="https://github.com/kul-forbes/ProximalAlgorithms.jl/issues">issues notification</a> or <a href="https://github.com/kul-forbes/ProximalAlgorithms.jl/pulls">pull requests</a>. We recommend looking at already implemented algorithms to get inspiration on how to structure new ones.</p>
<h3><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>References</h3>
<p><a href="https://link.springer.com/article/10.1007/BF01581204" rel="nofollow">[1]</a> Eckstein, Bertsekas, <em>On the Douglas-Rachford Splitting Method and the Proximal Point Algorithm for Maximal Monotone Operators</em>, Mathematical Programming, vol. 55, no. 1, pp. 293-318 (1989).</p>
<p><a href="http://www.mit.edu/~dimitrib/PTseng/papers/apgm.pdf" rel="nofollow">[2]</a> Tseng, <em>On Accelerated Proximal Gradient Methods for Convex-Concave Optimization</em> (2008).</p>
<p><a href="http://epubs.siam.org/doi/abs/10.1137/080716542" rel="nofollow">[3]</a> Beck, Teboulle, <em>A Fast Iterative Shrinkage-Thresholding Algorithm for Linear Inverse Problems</em>, SIAM Journal on Imaging Sciences, vol. 2, no. 1, pp. 183-202 (2009).</p>
<p><a href="https://link.springer.com/article/10.1007/s10851-010-0251-1" rel="nofollow">[4]</a> Chambolle, Pock, <em>A First-Order Primal-Dual Algorithm for Convex Problems with Applications to Imaging</em>, Journal of Mathematical Imaging and Vision, vol. 40, no. 1, pp. 120-145 (2011).</p>
<p><a href="http://www.nowpublishers.com/article/Details/MAL-016" rel="nofollow">[5]</a> Boyd, Parikh, Chu, Peleato, Eckstein, <em>Distributed Optimization and Statistical Learning via the Alternating Direction Method of Multipliers</em>, Foundations and Trends in Machine Learning, vol. 3, no. 1, pp. 1-122 (2011).</p>
<p><a href="https://link.springer.com/article/10.1007/s10444-011-9254-8" rel="nofollow">[6]</a> Vũ, <em>A splitting algorithm for dual monotone inclusions involving cocoercive operators</em>, Advances in Computational Mathematics, vol. 38, no. 3, pp. 667-681 (2013).</p>
<p><a href="https://link.springer.com/article/10.1007/s10957-012-0245-9" rel="nofollow">[7]</a> Condat, <em>A primal–dual splitting method for convex optimization involving Lipschitzian, proximable and linear composite terms</em>, Journal of Optimization Theory and Applications, vol. 158, no. 2, pp 460-479 (2013).</p>
<p><a href="http://www.nowpublishers.com/article/Details/OPT-003" rel="nofollow">[8]</a> Parikh, Boyd, <em>Proximal Algorithms</em>, Foundations and Trends in Optimization, vol. 1, no. 3, pp. 127-239 (2014).</p>
<p><a href="https://link.springer.com/article/10.1007/s11228-017-0421-z" rel="nofollow">[9]</a> Davis, Yin, <em>A Three-Operator Splitting Scheme and its Optimization Applications</em>, Set-Valued and Variational Analysis, vol. 25, no. 4, pp. 829–858 (2017).</p>
<p><a href="https://link.springer.com/article/10.1007/s10589-017-9909-6" rel="nofollow">[10]</a> Latafat, Patrinos, <em>Asymmetric forward–backward–adjoint splitting for solving monotone inclusions involving three operators</em>, Computational Optimization and Applications, vol. 68, no. 1, pp. 57-93 (2017).</p>
<p><a href="https://doi.org/10.1109/CDC.2017.8263933" rel="nofollow">[11]</a> Stella, Themelis, Sopasakis, Patrinos, <em>A simple and efficient algorithm for nonlinear model predictive control</em>, 56th IEEE Conference on Decision and Control (2017).</p>
<p><a href="https://epubs.siam.org/doi/10.1137/16M1080240" rel="nofollow">[12]</a> Themelis, Stella, Patrinos, <em>Forward-backward envelope for the sum of two nonconvex functions: Further properties and nonmonotone line-search algorithms</em>, SIAM Journal on Optimization, vol. 28, no. 3, pp. 2274–2303 (2018).</p>
</article></div>