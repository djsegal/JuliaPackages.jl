<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-jlpkg" class="anchor" aria-hidden="true" href="#jlpkg"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>jlpkg</h1>
<table>
<thead>
<tr>
<th align="left"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="left"><a href="https://travis-ci.com/fredrikekre/jlpkg" rel="nofollow"><img src="https://camo.githubusercontent.com/738a2909163bead599392eb2af821c9167934813/68747470733a2f2f7472617669732d63692e636f6d2f6672656472696b656b72652f6a6c706b672e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.com/fredrikekre/jlpkg.svg?branch=master" style="max-width:100%;"></a> <a href="https://ci.appveyor.com/project/fredrikekre/jlpkg/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/8fd5873833f371573c456a03bafd9983f33275f1/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6f316a307571316a316c6b37716e6c752f6272616e63682f6d61737465723f7376673d74727565" alt="" data-canonical-src="https://ci.appveyor.com/api/projects/status/o1j0uq1j1lk7qnlu/branch/master?svg=true" style="max-width:100%;"></a> <a href="https://codecov.io/gh/fredrikekre/jlpkg" rel="nofollow"><img src="https://camo.githubusercontent.com/bf2bfb3155310d9709f4a6a6e974bf2cb6834bbc/68747470733a2f2f636f6465636f762e696f2f67682f6672656472696b656b72652f6a6c706b672f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/fredrikekre/jlpkg/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>A command line interface (CLI) to <a href="https://github.com/JuliaLang/Pkg.jl">Pkg</a>, Julia's package manager.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>Output of <code>jlpkg --help</code>:</p>
<pre><code>$ jlpkg --help
NAME
       jlpkg - command line interface (CLI) to Pkg, Julia's package manager

SYNOPSIS
       jlpkg [--options] &lt;pkg-cmds&gt;...

OPTIONS
       &lt;pkg-cmds&gt;...
           Commands to the Pkg REPL mode. Execute the `help` command
           (e.g. `jlpkg help`) to list all available commands, and execute
           `jlpkg ?cmd` (or `jlpkg help cmd`) to show detailed help for a
           specific command. See https://julialang.github.io/Pkg.jl/v1/repl/
           for documentation of the syntax and the available commands.

       --project[=&lt;path&gt;]
           Set the home project/environment.
           Equivalent to Julia's `--project` switch.

       --julia=&lt;path&gt;
           Specify path to, or command for, the Julia executable.
           Overrides the executable set when installing the CLI.

       --update
           Allow the subsequent commands to update package registries.

       --version
           Show jlpkg and julia version numbers.

       --help
           Show this message.

EXAMPLES
       · Add the Example package to the package environment located at `path`:
           $ jlpkg --project=path add Example

       · Update package registries and add the JSON package:
           $ jlpkg --update add JSON

       · Show the help for the `add` Pkg REPL command:
           $ jlpkg ?add
</code></pre>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<h3><a id="user-content-installing-from-within-julia" class="anchor" aria-hidden="true" href="#installing-from-within-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installing from within Julia</h3>
<p>First install <code>jlpkg</code> from the Pkg REPL:</p>
<pre><code>pkg&gt; add jlpkg
</code></pre>
<p>then install the command line interface with</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> jlpkg; jlpkg<span class="pl-k">.</span><span class="pl-c1">install</span>()</pre></div>
<p>For available configuration, see the documentation for <code>jlpkg.install</code>,
e.g. from the Julia REPL:</p>
<pre><code>help?&gt; jlpkg.install

    jlpkg.install(; kwargs...)

Install the command line interface.

Keyword arguments:

 · command: name of the executable command, defaults to jlpkg.

 · julia: path to julia executable, defaults to the path of the current running julia.

 · destdir: writable directory (available in PATH) for the executable,
   defaults to ~/.julia/bin.

 · julia_flags: vector with command line flags for the julia executable,
   defaults to ["--color=yes", "--startup-file=no", "-q", "--compile=min", "-O0"]

 · force: boolean used to remove any existing commands.
</code></pre>
<h3><a id="user-content-installing-by-downloading-tarball" class="anchor" aria-hidden="true" href="#installing-by-downloading-tarball"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installing by downloading tarball</h3>
<p>It is possible to download and extract a prebuilt script with default settings.
For example, to download the latest release you can run the following</p>
<div class="highlight highlight-source-shell"><pre>$ curl -L https://github.com/fredrikekre/jlpkg/releases/download/v1.1.3/jlpkg-v1.1.3.tar.gz <span class="pl-k">|</span> \
  tar -xzC /usr/local/bin</pre></div>
<p>This will extract the executable script <code>jlpkg</code> and place it in <code>/usr/local/bin</code>.
You can of course replace <code>/usr/local/bin</code> with any writable folder in your <code>PATH</code>.
When using the prebuilt script it is assumed that <code>julia</code> is also in your <code>PATH</code>.</p>
</article></div>