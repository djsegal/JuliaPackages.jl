<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-assignment" class="anchor" aria-hidden="true" href="#assignment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Assignment</h1>
<p dir="auto">Routines to solve the linear assignment problem, and the <em>k</em>-best assignment problem.</p>
<p dir="auto">A variant of the Jonker-Volgenant algorithm is used to solve the linear assignment problem, this algorithm is in general faster than the Hungarian/Kuhn-Munkres algorithm. Murty's algorithm combined with the modified Jonker-Volgenant algorithm is used to solve the <em>k</em>-best assignment problem. Algorithms are described in detail in [1].</p>
<p dir="auto">This is a Julia port of the Matlab code for solving the
<a href="https://en.wikipedia.org/wiki/Assignment_problem" rel="nofollow">assignment problem</a>
from the <a href="https://github.com/USNavalResearchLaboratory/TrackerComponentLibrary">TrackerComponentLibrary</a>
produced by D. F. Crouse [2], released into the public domain by the US Naval Research Laboratory.</p>
<p dir="auto">This work is not affliated with or endorsed by the US Naval Research Laboratory.</p>
<h3 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Assignment

julia&gt; M=rand(1:100,3,4)
3×4 Matrix{Int64}:
 77  51  42  67
 72  53  47   4
 24  50  77  96

julia&gt; sol = find_best_assignment(M)
AssignmentSolution(CartesianIndex.(1:3, [3, 4, 1]), 70)

julia&gt; sum(M[sol])
70

julia&gt; max_sol = find_best_assignment(M', true)
AssignmentSolution(CartesianIndex.([1, 2, 4], 1:3), 226)

julia&gt; sols = find_kbest_assigments(M, 5)
5-element Vector{Assignment.AssignmentSolution{Int64, Int64}}:
 AssignmentSolution(CartesianIndex.(1:3, [3, 4, 1]), 70)
 AssignmentSolution(CartesianIndex.(1:3, [2, 4, 1]), 79)
 AssignmentSolution(CartesianIndex.(1:3, [3, 4, 2]), 96)
 AssignmentSolution(CartesianIndex.(1:3, [3, 2, 1]), 119)
 AssignmentSolution(CartesianIndex.(1:3, [2, 3, 1]), 122)
 
julia&gt; max_sols = find_kbest_assignments(M, 5, true)
5-element Vector{Assignment.AssignmentSolution{Int64, Int64}}:
 AssignmentSolution(CartesianIndex.(1:3, [1, 2, 4]), 226)
 AssignmentSolution(CartesianIndex.(1:3, [1, 3, 4]), 220)
 AssignmentSolution(CartesianIndex.(1:3, [2, 1, 4]), 219)
 AssignmentSolution(CartesianIndex.(1:3, [4, 1, 3]), 216)
 AssignmentSolution(CartesianIndex.(1:3, [3, 1, 4]), 210)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Assignment

julia<span class="pl-k">&gt;</span> M<span class="pl-k">=</span><span class="pl-c1">rand</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>)
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">4</span> Matrix{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">77</span>  <span class="pl-c1">51</span>  <span class="pl-c1">42</span>  <span class="pl-c1">67</span>
 <span class="pl-c1">72</span>  <span class="pl-c1">53</span>  <span class="pl-c1">47</span>   <span class="pl-c1">4</span>
 <span class="pl-c1">24</span>  <span class="pl-c1">50</span>  <span class="pl-c1">77</span>  <span class="pl-c1">96</span>

julia<span class="pl-k">&gt;</span> sol <span class="pl-k">=</span> <span class="pl-c1">find_best_assignment</span>(M)
<span class="pl-c1">AssignmentSolution</span>(<span class="pl-c1">CartesianIndex</span>.(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, [<span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">1</span>]), <span class="pl-c1">70</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sum</span>(M[sol])
<span class="pl-c1">70</span>

julia<span class="pl-k">&gt;</span> max_sol <span class="pl-k">=</span> <span class="pl-c1">find_best_assignment</span>(M<span class="pl-k">'</span>, <span class="pl-c1">true</span>)
<span class="pl-c1">AssignmentSolution</span>(<span class="pl-c1">CartesianIndex</span>.([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">4</span>], <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>), <span class="pl-c1">226</span>)

julia<span class="pl-k">&gt;</span> sols <span class="pl-k">=</span> <span class="pl-c1">find_kbest_assigments</span>(M, <span class="pl-c1">5</span>)
<span class="pl-c1">5</span><span class="pl-k">-</span>element Vector{Assignment<span class="pl-k">.</span>AssignmentSolution{Int64, Int64}}<span class="pl-k">:</span>
 <span class="pl-c1">AssignmentSolution</span>(<span class="pl-c1">CartesianIndex</span>.(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, [<span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">1</span>]), <span class="pl-c1">70</span>)
 <span class="pl-c1">AssignmentSolution</span>(<span class="pl-c1">CartesianIndex</span>.(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, [<span class="pl-c1">2</span>, <span class="pl-c1">4</span>, <span class="pl-c1">1</span>]), <span class="pl-c1">79</span>)
 <span class="pl-c1">AssignmentSolution</span>(<span class="pl-c1">CartesianIndex</span>.(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, [<span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">2</span>]), <span class="pl-c1">96</span>)
 <span class="pl-c1">AssignmentSolution</span>(<span class="pl-c1">CartesianIndex</span>.(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, [<span class="pl-c1">3</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>]), <span class="pl-c1">119</span>)
 <span class="pl-c1">AssignmentSolution</span>(<span class="pl-c1">CartesianIndex</span>.(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, [<span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">1</span>]), <span class="pl-c1">122</span>)
 
julia<span class="pl-k">&gt;</span> max_sols <span class="pl-k">=</span> <span class="pl-c1">find_kbest_assignments</span>(M, <span class="pl-c1">5</span>, <span class="pl-c1">true</span>)
<span class="pl-c1">5</span><span class="pl-k">-</span>element Vector{Assignment<span class="pl-k">.</span>AssignmentSolution{Int64, Int64}}<span class="pl-k">:</span>
 <span class="pl-c1">AssignmentSolution</span>(<span class="pl-c1">CartesianIndex</span>.(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">4</span>]), <span class="pl-c1">226</span>)
 <span class="pl-c1">AssignmentSolution</span>(<span class="pl-c1">CartesianIndex</span>.(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, [<span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>]), <span class="pl-c1">220</span>)
 <span class="pl-c1">AssignmentSolution</span>(<span class="pl-c1">CartesianIndex</span>.(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, [<span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-c1">4</span>]), <span class="pl-c1">219</span>)
 <span class="pl-c1">AssignmentSolution</span>(<span class="pl-c1">CartesianIndex</span>.(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, [<span class="pl-c1">4</span>, <span class="pl-c1">1</span>, <span class="pl-c1">3</span>]), <span class="pl-c1">216</span>)
 <span class="pl-c1">AssignmentSolution</span>(<span class="pl-c1">CartesianIndex</span>.(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, [<span class="pl-c1">3</span>, <span class="pl-c1">1</span>, <span class="pl-c1">4</span>]), <span class="pl-c1">210</span>)</pre></div>
<h1 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h1>
<p dir="auto">[1] D. F. Crouse, "Advances in displaying uncertain estimates of multiple
targets," in Proceedings of SPIE: Signal Processing, Sensor Fusion, and
Target Recognition XXII, vol. 8745, Baltimore, MD, Apr. 2013.
[2] D. F. Crouse, "The Tracker Component Library: Free Routines for Rapid
Prototyping," IEEE Aerospace and Electronic Systems Magazine, vol. 32,
no. 5, pp. 18-27, May. 2017</p>
</article></div>