<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-dynamicgridsgtk" class="anchor" aria-hidden="true" href="#dynamicgridsgtk"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DynamicGridsGtk</h1>
<p><a href="https://travis-ci.org/cesaraustralia/DynamicGridsGtk.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6ffb7a52f08ab9aa5e2d8314b7ee04695eff0d341e803056fac47816a4afe87d/68747470733a2f2f7472617669732d63692e6f72672f63657361726175737472616c69612f44796e616d6963477269647347746b2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/cesaraustralia/DynamicGridsGtk.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/cesaraustralia/Cellular.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/265a08a988ae74c677e051d0ea3e825ad4d1adb261bfd12ee52e7023d7808928/687474703a2f2f636f6465636f762e696f2f6769746875622f63657361726175737472616c69612f44796e616d6963477269647347746b2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/cesaraustralia/DynamicGridsGtk.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Provides a GTK interface for visualising simulations with <a href="https://github.com/cesaraustralia/DynamicGrids.jl">DynamicGrids.jl</a> and packages that build on it like <a href="https://github.com/cesaraustralia/Dispersal.jl">Dispersal.jl</a>.</p>
<p>To create a Gtk window for use as a simulation output:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using DynamicGridsGtk
output = GtkOutput(init; tspan=1:100, fps=25, showfps=fps, store=false, processor=ColorProcessor())
"><pre><span class="pl-k">using</span> DynamicGridsGtk
output <span class="pl-k">=</span> <span class="pl-c1">GtkOutput</span>(init; tspan<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>, fps<span class="pl-k">=</span><span class="pl-c1">25</span>, showfps<span class="pl-k">=</span>fps, store<span class="pl-k">=</span><span class="pl-c1">false</span>, processor<span class="pl-k">=</span><span class="pl-c1">ColorProcessor</span>())</pre></div>
<p>Where <code>init</code> is the initialisation array for the simulation, and processor can
be any <code>GridProcessor</code> from DynamicGrids.jl, which can use ColorSchemes.jl schemes.</p>
<p>Keyword arguments are optional, with defaults shown above.</p>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<p>See the documentation for <a href="https://cesaraustralia.github.io/DynamicGrids.jl/dev/" rel="nofollow">DynamicGrids.jl</a></p>
<p>Note: using Gtk on Windows will lead to very slow performance of the REPL and
IDEs like Atom. Use DynamicGridsInteract instead.</p>
</article></div>