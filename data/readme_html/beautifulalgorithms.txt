<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-beautifulalgorithmsjl" class="anchor" aria-hidden="true" href="#beautifulalgorithmsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>BeautifulAlgorithms.jl</h1>
<p><a href="https://github.com/mossr/BeautifulAlgorithms.jl/actions"><img src="https://github.com/mossr/BeautifulAlgorithms.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/mossr/BeautifulAlgorithms.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d74d3f1f325cfd7bbfd554849926b78b8ff739738d9c1d9c87d5590dbb4e5ba4/68747470733a2f2f636f6465636f762e696f2f6769746875622f6d6f7373722f42656175746966756c416c676f726974686d732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov" data-canonical-src="https://codecov.io/github/mossr/BeautifulAlgorithms.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Concise algorithms written in Julia and formatted with <a href="https://carbon.now.sh/" rel="nofollow">Carbon</a>.</p>
<p>Algorithms for machine learning, optimization, reinforcement learning, online planning, decision making under uncertainty, and sorting. All implementations are working and self-contained; refer to the <a href="./test/">test cases</a>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="] add http://github.com/mossr/BeautifulAlgorithms.jl
"><pre>] add http<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>mossr<span class="pl-k">/</span>BeautifulAlgorithms<span class="pl-k">.</span>jl</pre></div>
<ul>
<li><a href="#gradient-descent">Gradient descent</a></li>
<li><a href="#stochastic-gradient-descent">Stochastic gradient descent</a></li>
<li><a href="#two-layer-neural-network">Two-layer neural network</a>
<ul>
<li><a href="#two-layer-neural-network-one-liner">Two-layer neural network (one-liner)</a></li>
</ul>
</li>
<li><a href="#multi-layer-neural-network">Multi-layer neural network</a></li>
<li><a href="#loss-functions">Loss functions</a></li>
<li><a href="#distance-functions">Distance functions</a></li>
<li><a href="#nearest-neighbor">Nearest neighbor</a></li>
<li><a href="#k-nearest-neighbors">K-nearest neighbors</a></li>
<li><a href="#k-means-clustering">K-means clustering</a></li>
<li><a href="#the-em-algorithm">The EM algorithm</a></li>
<li><a href="#linear-regression">Linear regression</a></li>
<li><a href="#radial-basis-regression">Radial basis regression</a></li>
<li><a href="#cross-entropy-method">Cross-entropy method</a></li>
<li><a href="#finite-difference-methods">Finite difference methods</a></li>
<li><a href="#simulated-annealing">Simulated annealing</a></li>
<li><a href="#twiddle">Twiddle</a></li>
<li><a href="#newtons-method">Newton's method</a></li>
<li><a href="#gaussian-process">Gaussian process</a>
<ul>
<li><a href="#gaussian-process-kernels">Gaussian process kernels</a></li>
</ul>
</li>
<li><a href="#thompson-sampling">Thompson sampling</a></li>
<li><a href="#particle-filter">Particle filter</a></li>
<li><a href="#value-iteration">Value iteration</a></li>
<li><a href="#branch-and-bound">Branch and bound</a></li>
<li><a href="#monte-carlo-tree-search">Monte Carlo tree search</a></li>
<li><a href="#huffman-coding">Huffman coding</a></li>
<li><a href="#hailstone-sequence-collatz-conjecture">Hailstone sequence (Collatz conjecture)</a></li>
<li><a href="#bubble-sort">Bubble sort</a></li>
<li><a href="#merge-sort">Merge sort</a></li>
<li><a href="#insertion-sort">Insertion sort</a></li>
<li><a href="#bogo-sort">Bogo sort</a>
<ul>
<li><a href="#bogo-sort-one-liner">Bogo sort (one-liner)</a></li>
</ul>
</li>
<li><a href="#quine">Quine</a></li>
</ul>
<p><em>Note: Algorithms are modified from their original sources.</em></p>
<h2><a id="user-content-gradient-descent" class="anchor" aria-hidden="true" href="#gradient-descent"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Gradient descent</h2>
<p>Percy Liang and Dorsa Sadigh, <em>Artificial Intelligence: Principles and Techniques</em>, Stanford University, 2019.</p>
<p align="center"><a href="./src/gradient_descent.jl"> <img src="./img/svg/gradient_descent.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-stochastic-gradient-descent" class="anchor" aria-hidden="true" href="#stochastic-gradient-descent"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Stochastic gradient descent</h2>
<p>Percy Liang and Dorsa Sadigh, <em>Artificial Intelligence: Principles and Techniques</em>, Stanford University, 2019.</p>
<p align="center"><a href="./src/stochastic_gradient_descent.jl"> <img src="./img/svg/stochastic_gradient_descent.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-two-layer-neural-network" class="anchor" aria-hidden="true" href="#two-layer-neural-network"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Two-layer neural network</h2>
<p align="center"><a href="./src/neural_network.jl"> <img src="./img/svg/neural_network.svg" style="max-width:100%;"></a></p>
<h5><a id="user-content-two-layer-neural-network-one-liner" class="anchor" aria-hidden="true" href="#two-layer-neural-network-one-liner"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Two-layer neural network (one-liner)</h5>
<p align="center"><a href="./src/neural_network_one_liner.jl"> <img src="./img/svg/neural_network_one_liner.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-multi-layer-neural-network" class="anchor" aria-hidden="true" href="#multi-layer-neural-network"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Multi-layer neural network</h2>
<p align="center"><a href="./src/multi_layer_neural_network.jl"> <img src="./img/svg/multi_layer_neural_network.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-loss-functions" class="anchor" aria-hidden="true" href="#loss-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Loss functions</h2>
<p align="center"><a href="./src/loss_functions.jl"> <img src="./img/svg/loss_functions.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-distance-functions" class="anchor" aria-hidden="true" href="#distance-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Distance functions</h2>
<p align="center"><a href="./src/distance_functions.jl"> <img src="./img/svg/distance_functions.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-nearest-neighbor" class="anchor" aria-hidden="true" href="#nearest-neighbor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Nearest neighbor</h2>
<p align="center"><a href="./src/nearest_neighbor.jl"> <img src="./img/svg/nearest_neighbor.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-k-nearest-neighbors" class="anchor" aria-hidden="true" href="#k-nearest-neighbors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>K-nearest neighbors</h2>
<p align="center"><a href="./src/k_nearest_neighbors.jl"> <img src="./img/svg/k_nearest_neighbors.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-k-means-clustering" class="anchor" aria-hidden="true" href="#k-means-clustering"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>K-means clustering</h2>
<p>Percy Liang and Dorsa Sadigh, <em>Artificial Intelligence: Principles and Techniques</em>, Stanford University, 2019.</p>
<p align="center"><a href="./src/k_means_clustering.jl"> <img src="./img/svg/k_means_clustering.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-the-em-algorithm" class="anchor" aria-hidden="true" href="#the-em-algorithm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>The EM algorithm</h2>
<p>Andrew Ng, <em>Mixtures of Gaussians and the EM algorithm</em>, Stanford University, 2020.<sup><a href="http://cs229.stanford.edu/notes2020spring/cs229-notes7b.pdf" rel="nofollow">1</a></sup></p>
<p align="center"><a href="./src/em_algorithm.jl"> <img src="./img/svg/em_algorithm.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-linear-regression" class="anchor" aria-hidden="true" href="#linear-regression"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Linear regression</h2>
<p>Mykel J. Kochenderfer and Tim A. Wheeler, <em>Algorithms for Optimization</em>, MIT Press, 2019.</p>
<p align="center"><a href="./src/linear_regression.jl"> <img src="./img/svg/linear_regression.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-radial-basis-regression" class="anchor" aria-hidden="true" href="#radial-basis-regression"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Radial basis regression</h2>
<p>Mykel J. Kochenderfer and Tim A. Wheeler, <em>Algorithms for Optimization</em>, MIT Press, 2019.</p>
<p align="center"><a href="./src/radial_basis_regression.jl"> <img src="./img/svg/radial_basis_regression.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-cross-entropy-method" class="anchor" aria-hidden="true" href="#cross-entropy-method"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Cross-entropy method</h2>
<p>Mykel J. Kochenderfer and Tim A. Wheeler, <em>Algorithms for Optimization</em>, MIT Press, 2019.</p>
<p align="center"><a href="./src/cross_entropy_method.jl"> <img src="./img/svg/cross_entropy_method.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-finite-difference-methods" class="anchor" aria-hidden="true" href="#finite-difference-methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Finite difference methods</h2>
<p>Mykel J. Kochenderfer and Tim A. Wheeler, <em>Algorithms for Optimization</em>, MIT Press, 2019.</p>
<p align="center"><a href="./src/finite_difference_methods.jl"> <img src="./img/svg/finite_difference_methods.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-simulated-annealing" class="anchor" aria-hidden="true" href="#simulated-annealing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Simulated annealing</h2>
<p>Mykel J. Kochenderfer and Tim A. Wheeler, <em>Algorithms for Optimization</em>, MIT Press, 2019.</p>
<p align="center"><a href="./src/simulated_annealing.jl"> <img src="./img/svg/simulated_annealing.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-twiddle" class="anchor" aria-hidden="true" href="#twiddle"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Twiddle</h2>
<p>Sebatian Thurn, <em>Artificial Intelligence for Robotics</em>, Udacity, 2012.</p>
<p align="center"><a href="./src/twiddle.jl"> <img src="./img/svg/twiddle.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-newtons-method" class="anchor" aria-hidden="true" href="#newtons-method"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Newton's method</h2>
<p>John Wallis, <em>A Treatise of Algebra both Historical and Practical</em>, 1685.</p>
<p align="center"><a href="./src/newtons_method.jl"> <img src="./img/svg/newtons_method.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-gaussian-process" class="anchor" aria-hidden="true" href="#gaussian-process"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Gaussian process</h2>
<p>Mykel J. Kochenderfer and Tim A. Wheeler, <em>Algorithms for Optimization</em>, MIT Press, 2019.</p>
<p align="center"><a href="./src/gaussian_process.jl"> <img src="./img/svg/gaussian_process.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-gaussian-process-kernels" class="anchor" aria-hidden="true" href="#gaussian-process-kernels"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Gaussian process kernels</h2>
<p align="center"><a href="./src/gaussian_process_kernels.jl"> <img src="./img/svg/gaussian_process_kernels.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-thompson-sampling" class="anchor" aria-hidden="true" href="#thompson-sampling"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Thompson sampling</h2>
<p>Daniel J. Russo, Benjamin Van Roy, Abbas Kazerouni, Ian Osband, and Zheng Wen, <em>A Tutorial on Thompson Sampling</em>, arXiv:1707.02038, 2020.</p>
<p align="center"><a href="./src/thompson_sampling.jl"> <img src="./img/svg/thompson_sampling.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-particle-filter" class="anchor" aria-hidden="true" href="#particle-filter"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Particle filter</h2>
<p>Mykel J. Kochenderfer, Tim A. Wheeler, and Kyle H. Wray, <em>Algorithms for Decision Making</em>, Preprint.</p>
<p align="center"><a href="./src/particle_filter.jl"> <img src="./img/svg/particle_filter.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-value-iteration" class="anchor" aria-hidden="true" href="#value-iteration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Value iteration</h2>
<p>Mykel J. Kochenderfer, Tim A. Wheeler, and Kyle H. Wray, <em>Algorithms for Decision Making</em>, Preprint.</p>
<p align="center"><a href="./src/value_iteration.jl"> <img src="./img/svg/value_iteration.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-branch-and-bound" class="anchor" aria-hidden="true" href="#branch-and-bound"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Branch and bound</h2>
<p>Mykel J. Kochenderfer, Tim A. Wheeler, and Kyle H. Wray, <em>Algorithms for Decision Making</em>, Preprint.</p>
<p align="center"><a href="./src/branch_and_bound.jl"> <img src="./img/svg/branch_and_bound.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-monte-carlo-tree-search" class="anchor" aria-hidden="true" href="#monte-carlo-tree-search"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Monte Carlo tree search</h2>
<p>Mykel J. Kochenderfer, Tim A. Wheeler, and Kyle H. Wray, <em>Algorithms for Decision Making</em>, Preprint.</p>
<p align="center"><a href="./src/monte_carlo_tree_search.jl"> <img src="./img/svg/monte_carlo_tree_search.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-huffman-coding" class="anchor" aria-hidden="true" href="#huffman-coding"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Huffman coding</h2>
<p>David A. Huffman, <em>A Method for the Construction of Minimum-Redundancy Codes</em>, IEEE, 1952.</p>
<p align="center"><a href="./src/huffman_coding.jl"> <img src="./img/svg/huffman_coding.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-hailstone-sequence-collatz-conjecture" class="anchor" aria-hidden="true" href="#hailstone-sequence-collatz-conjecture"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Hailstone sequence (Collatz conjecture)</h2>
<p align="center"><a href="./src/hailstone.jl"> <img src="./img/svg/hailstone.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-bubble-sort" class="anchor" aria-hidden="true" href="#bubble-sort"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Bubble sort</h2>
<p>Karey Shi, <em>Design and Analysis of Algorithms</em>, Stanford University, 2020.</p>
<p align="center"><a href="./src/bubble_sort!.jl"> <img src="./img/svg/bubble_sort!.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-merge-sort" class="anchor" aria-hidden="true" href="#merge-sort"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Merge sort</h2>
<p>Karey Shi, <em>Design and Analysis of Algorithms</em>, Stanford University, 2020.</p>
<p align="center"><a href="./src/merge_sort.jl"> <img src="./img/svg/merge_sort.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-insertion-sort" class="anchor" aria-hidden="true" href="#insertion-sort"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Insertion sort</h2>
<p>Karey Shi, <em>Design and Analysis of Algorithms</em>, Stanford University, 2020.</p>
<p align="center"><a href="./src/insertion_sort!.jl"> <img src="./img/svg/insertion_sort!.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-bogo-sort" class="anchor" aria-hidden="true" href="#bogo-sort"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Bogo sort</h2>
<p align="center"><a href="./src/bogo_sort!.jl"> <img src="./img/svg/bogo_sort!.svg" style="max-width:100%;"></a></p>
<h5><a id="user-content-bogo-sort-one-liner" class="anchor" aria-hidden="true" href="#bogo-sort-one-liner"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Bogo sort (one-liner)</h5>
<p align="center"><a href="./src/bogo_sort!_one_liner.jl"> <img src="./img/svg/bogo_sort!_one_liner.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-quine" class="anchor" aria-hidden="true" href="#quine"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quine</h2>
<p>Nathan Daly, <em>Julia Discord</em>, 2019.<sup><a href="https://discourse.julialang.org/t/quines-and-loons-self-replicating-programs/12607/7" rel="nofollow">2</a></sup></p>
<p align="center"><a href="./src/quine.jl"> <img src="./img/svg/quine.svg" style="max-width:100%;"></a></p>
<hr>
<p>Written by <a href="https://github.com/mossr">Robert Moss</a>.</p>
</article></div>