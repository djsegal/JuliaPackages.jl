<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-correctmatch" class="anchor" aria-hidden="true" href="#correctmatch"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CorrectMatch</h1>
<p><a href="https://travis-ci.org/computationalprivacy/CorrectMatch.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e082a00a5752b574bcd18275fe2e6b4e79941c1f9291ab84b7935bfcab796e6d/68747470733a2f2f7472617669732d63692e6f72672f636f6d7075746174696f6e616c707269766163792f436f72726563744d617463682e6a6c2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/computationalprivacy/CorrectMatch.jl.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>CorrectMatch requires gfortran to precompile the mvndst routines.</p>
<p>On macOS, using Homebrew, run:
<code>brew install gcc</code></p>
<p>On GNU/Linux, install the gfortran package with your preferred package manager:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="sudo apt-get install gfortran  # on Debian-based systems
sudo pacman -S gcc-gfortran    # on Archlinux-based systems
"><pre><code>sudo apt-get install gfortran  # on Debian-based systems
sudo pacman -S gcc-gfortran    # on Archlinux-based systems
</code></pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>CorrectMatch contains functions to fit a copula model and estimate the population uniqueness:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using CorrectMatch
# Create a simple dataset of 100 records and 4 independent columns, and compute the true uniqueness
d = rand(1:10, 1000, 3)
uniqueness(d)  # 0.377

# The first precompilation takes a few seconds
G = fit_mle(GaussianCopula, d)
d_sim = rand(G, 1000)
uniqueness(d_sim)  # 0.361
"><pre><span class="pl-k">using</span> CorrectMatch
<span class="pl-c"><span class="pl-c">#</span> Create a simple dataset of 100 records and 4 independent columns, and compute the true uniqueness</span>
d <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>, <span class="pl-c1">1000</span>, <span class="pl-c1">3</span>)
<span class="pl-c1">uniqueness</span>(d)  <span class="pl-c"><span class="pl-c">#</span> 0.377</span>

<span class="pl-c"><span class="pl-c">#</span> The first precompilation takes a few seconds</span>
G <span class="pl-k">=</span> <span class="pl-c1">fit_mle</span>(GaussianCopula, d)
d_sim <span class="pl-k">=</span> <span class="pl-c1">rand</span>(G, <span class="pl-c1">1000</span>)
<span class="pl-c1">uniqueness</span>(d_sim)  <span class="pl-c"><span class="pl-c">#</span> 0.361</span></pre></div>
<p>but also the likelihood of uniqueness for a single individual:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Uniqueness of record (5, 5, 5)
individual_uniqueness(G, [5, 5, 5], 1000)  # 0.34276768289842735
"><pre><span class="pl-c"><span class="pl-c">#</span> Uniqueness of record (5, 5, 5)</span>
<span class="pl-c1">individual_uniqueness</span>(G, [<span class="pl-c1">5</span>, <span class="pl-c1">5</span>, <span class="pl-c1">5</span>], <span class="pl-c1">1000</span>)  <span class="pl-c"><span class="pl-c">#</span> 0.34276768289842735</span></pre></div>
<p>See the <a href="https://github.com/computationalprivacy/CorrectMatch.jl/tree/master/examples">examples</a> folder to learn how to load a CSV file and estimate the uniqueness from a small sample.</p>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p>GNU General Public License v3.0</p>
<p>See LICENSE to see the full text.</p>
<p>Patent-pending code. Additional support and details are available for commercial uses.</p>
</article></div>