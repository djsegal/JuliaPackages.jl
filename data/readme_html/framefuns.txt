<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><table>
<thead>
<tr>
<th><strong>Build Status</strong></th>
<th><strong>Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/JuliaApproximation/FrameFun.jl/actions/workflows/CI.yml"><img src="https://github.com/JuliaApproximation/FrameFun.jl/workflows/CI/badge.svg?branch=master" alt="Build Status" style="max-width: 100%;"></a></td>
<td><a href="https://codecov.io/gh/JuliaApproximation/FrameFun.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/73f885fd960b6282c389548687e908e05eade137cb0f8c8dd45062d20907aee0/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961417070726f78696d6174696f6e2f4672616d6546756e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaApproximation/FrameFun.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h1 dir="auto"><a id="user-content-framefun" class="anchor" aria-hidden="true" href="#framefun"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FrameFun</h1>
<p dir="auto">Exploring practical possibilities of approximating functions with frames rather than with a basis. The package is heavily inspired by the Chebfun project and the Julia package ApproxFun.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using BasisFunctions, Plots, DomainSets, FrameFun
gr();"><pre><span class="pl-k">using</span> BasisFunctions, Plots, DomainSets, FrameFun
<span class="pl-c1">gr</span>();</pre></div>
<h1 dir="auto"><a id="user-content-frame-approximations-in-1d" class="anchor" aria-hidden="true" href="#frame-approximations-in-1d"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Frame Approximations in 1D</h1>
<p dir="auto">After choosing a suitable Basis and Domain, any function can be approximated in the resulting frame:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="B = Fourier(61) → -1..1
D = -0.5..0.5
f = x-&gt;x
F = Fun(f,B,D)

P = plot(F,layout = 2)
plot!(F,f,subplot=2)"><pre>B <span class="pl-k">=</span> <span class="pl-c1">Fourier</span>(<span class="pl-c1">61</span>) → <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">..</span><span class="pl-c1">1</span>
D <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.5</span><span class="pl-k">..</span><span class="pl-c1">0.5</span>
f <span class="pl-k">=</span> x<span class="pl-k">-&gt;</span>x
F <span class="pl-k">=</span> <span class="pl-c1">Fun</span>(f,B,D)

P <span class="pl-k">=</span> <span class="pl-c1">plot</span>(F,layout <span class="pl-k">=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">plot!</span>(F,f,subplot<span class="pl-k">=</span><span class="pl-c1">2</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="images/lowprecision.png"><img src="images/lowprecision.png" alt="" style="max-width: 100%;"></a></p>
<p dir="auto">The bases support any AbstractFloat subtype, so high precision approximations are straightforward:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="B = Fourier(61) → big(-1)..big(1)
F = Fun(f,B,D)

P = plot(F,layout=2)
plot!(F,f,subplot=2)"><pre>B <span class="pl-k">=</span> <span class="pl-c1">Fourier</span>(<span class="pl-c1">61</span>) → <span class="pl-c1">big</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">..</span><span class="pl-c1">big</span>(<span class="pl-c1">1</span>)
F <span class="pl-k">=</span> <span class="pl-c1">Fun</span>(f,B,D)

P <span class="pl-k">=</span> <span class="pl-c1">plot</span>(F,layout<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">plot!</span>(F,f,subplot<span class="pl-k">=</span><span class="pl-c1">2</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="images/highprecision.png"><img src="images/highprecision.png" alt="" style="max-width: 100%;"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="images/highprecision.png"><img src="images/highprecision.png" alt="" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-frame-approximations-in-2d" class="anchor" aria-hidden="true" href="#frame-approximations-in-2d"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Frame Approximations in 2D</h1>
<p dir="auto">In higher dimensions, a basis can be any tensorproduct of (scaled) lower dimensional bases:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using StaticArrays
C = Disk(1.0)\Disk(0.3,SVector(0.2, 0.5))
B = (Fourier(31) → -1.3..1.3)^2
f = (x,y)-&gt;exp(x+y)
F = Fun(f,B,C)

P = heatmap(F,layout=2,aspect_ratio=1)
plot!(F,f,subplot=2,aspect_ratio=1)"><pre><span class="pl-k">using</span> StaticArrays
C <span class="pl-k">=</span> <span class="pl-c1">Disk</span>(<span class="pl-c1">1.0</span>)<span class="pl-k">\</span><span class="pl-c1">Disk</span>(<span class="pl-c1">0.3</span>,<span class="pl-c1">SVector</span>(<span class="pl-c1">0.2</span>, <span class="pl-c1">0.5</span>))
B <span class="pl-k">=</span> (<span class="pl-c1">Fourier</span>(<span class="pl-c1">31</span>) → <span class="pl-k">-</span><span class="pl-c1">1.3</span><span class="pl-k">..</span><span class="pl-c1">1.3</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>
f <span class="pl-k">=</span> (x,y)<span class="pl-k">-&gt;</span><span class="pl-c1">exp</span>(x<span class="pl-k">+</span>y)
F <span class="pl-k">=</span> <span class="pl-c1">Fun</span>(f,B,C)

P <span class="pl-k">=</span> <span class="pl-c1">heatmap</span>(F,layout<span class="pl-k">=</span><span class="pl-c1">2</span>,aspect_ratio<span class="pl-k">=</span><span class="pl-c1">1</span>)
<span class="pl-c1">plot!</span>(F,f,subplot<span class="pl-k">=</span><span class="pl-c1">2</span>,aspect_ratio<span class="pl-k">=</span><span class="pl-c1">1</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="images/deathstar.png"><img src="images/deathstar.png" alt="" style="max-width: 100%;"></a></p>
<p dir="auto">Even fractal domains are not a problem:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="B = (Fourier(31) → -1.0..0.35) ⊗ (Fourier(31) → -0.65..0.65)
f = (x,y)-&gt;cos(10*x*y)
F = Fun(f, B, mandelbrot())

P = heatmap(F,layout=2,aspect_ratio=1)
plot!(F,f,aspect_ratio=1,subplot=2)"><pre>B <span class="pl-k">=</span> (<span class="pl-c1">Fourier</span>(<span class="pl-c1">31</span>) → <span class="pl-k">-</span><span class="pl-c1">1.0</span><span class="pl-k">..</span><span class="pl-c1">0.35</span>) ⊗ (<span class="pl-c1">Fourier</span>(<span class="pl-c1">31</span>) → <span class="pl-k">-</span><span class="pl-c1">0.65</span><span class="pl-k">..</span><span class="pl-c1">0.65</span>)
f <span class="pl-k">=</span> (x,y)<span class="pl-k">-&gt;</span><span class="pl-c1">cos</span>(<span class="pl-c1">10</span><span class="pl-k">*</span>x<span class="pl-k">*</span>y)
F <span class="pl-k">=</span> <span class="pl-c1">Fun</span>(f, B, <span class="pl-c1">mandelbrot</span>())

P <span class="pl-k">=</span> <span class="pl-c1">heatmap</span>(F,layout<span class="pl-k">=</span><span class="pl-c1">2</span>,aspect_ratio<span class="pl-k">=</span><span class="pl-c1">1</span>)
<span class="pl-c1">plot!</span>(F,f,aspect_ratio<span class="pl-k">=</span><span class="pl-c1">1</span>,subplot<span class="pl-k">=</span><span class="pl-c1">2</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="images/mandelbrot.png"><img src="images/mandelbrot.png" alt="" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">From the Julia REPL, type <code>]</code> to enter Pkg mode and run</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add DomainSets, BasisFunctions, FrameFun"><pre>pkg<span class="pl-k">&gt;</span> add DomainSets, BasisFunctions, FrameFun</pre></div>
</article></div>