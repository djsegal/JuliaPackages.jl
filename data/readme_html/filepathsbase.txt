<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-filepathsbasejl" class="anchor" aria-hidden="true" href="#filepathsbasejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>FilePathsBase.jl</h1>
<p><a href="https://travis-ci.com/rofinn/FilePathsBase.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/645ada554c431ddbebfaa625e362dbae3ba074dd/68747470733a2f2f7472617669732d63692e636f6d2f726f66696e6e2f46696c655061746873426173652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/rofinn/FilePathsBase.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/rofinn/FilePathsBase.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/76ddb158fa081de8471b1119898627ce63ef7ca9/68747470733a2f2f636f6465636f762e696f2f6769746875622f726f66696e6e2f46696c655061746873426173652e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/rofinn/FilePathsBase.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://rofinn.github.io/FilePathsBase.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://rofinn.github.io/FilePathsBase.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<p>FilePathsBase.jl provides a type based approach to working with filesystem paths in julia.</p>
<h2><a id="user-content-intallation" class="anchor" aria-hidden="true" href="#intallation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Intallation</h2>
<p>FilePathsBase.jl is registered, so you can to use <code>Pkg.add</code> to install it.</p>
<pre lang="julia-repl"><code>julia&gt; Pkg.add("FilePathsBase")
</code></pre>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<pre lang="julia-repl"><code>julia&gt; using FilePathsBase; using FilePathsBase: /
</code></pre>
<p>The first important difference about working with paths in FilePathsBase.jl is that path
segments are represented as an immutable tuple of strings.</p>
<p>Path creation:</p>
<pre lang="julia-repl"><code>julia&gt; Path("~/repos/FilePathsBase.jl/")
p"~/repos/FilePathsBase.jl/"
</code></pre>
<p>or</p>
<pre lang="julia-repl"><code>julia&gt; p"~/repos/FilePathsBase.jl/"
p"~/repos/FilePathsBase.jl/"
</code></pre>
<p>Human readable file status info:</p>
<pre lang="julia-repl"><code>julia&gt; stat(p"README.md")
Status(
  device = 16777220,
  inode = 48428965,
  mode = -rw-r--r--,
  nlink = 1,
  uid = 501,
  gid = 20,
  rdev = 0,
  size = 1880 (1.8K),
  blksize = 4096 (4.0K),
  blocks = 8,
  mtime = 2016-02-16T00:49:27,
  ctime = 2016-02-16T00:49:27,
)
</code></pre>
<p>Working with permissions:</p>
<pre lang="julia-repl"><code>julia&gt; m = mode(p"README.md")
-rw-r--r--

julia&gt; m - readable(:ALL)
--w-------

julia&gt; m + executable(:ALL)
-rwxr-xr-x

julia&gt; chmod(p"README.md", "+x")

julia&gt; mode(p"README.md")
-rwxr-xr-x

julia&gt; chmod(p"README.md", m)

julia&gt; m = mode(p"README.md")
-rw-r--r--

julia&gt; chmod(p"README.md", user=(READ+WRITE+EXEC), group=(READ+WRITE), other=READ)

julia&gt; mode(p"README.md")
-rwxrw-r--

</code></pre>
<p>Reading and writing directly to file paths:</p>
<pre lang="julia-repl"><code>julia&gt; write(p"testfile", "foobar")
6

julia&gt; read(p"testfile")
"foobar"
</code></pre>
</article></div>