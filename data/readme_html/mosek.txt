<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2 dir="auto"><a id="user-content-note-on-versions-and-release" class="anchor" aria-hidden="true" href="#note-on-versions-and-release"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Note on versions and release</h2>
<p dir="auto">Since the <code>Mosek.jl</code> package is designed to match a specific MOSEK version (major+minor version), there are branches for the different MOSEK versions:</p>
<ul dir="auto">
<li>Branch <code>b0.8</code> is compatible with MOSEK 8.0. Not actively updated.</li>
<li>Branch <code>b0.9</code> is compatible with MOSEK 8.1. Currently updated only for bugfixes.</li>
<li>Branch <code>b1.1-msk9.1</code> is compatible with MOSEK 9.1. Not actively updated.</li>
<li>Branch <code>b1.1-msk9.2</code> is compatible with MOSEK 9.2. Not actively updated.</li>
<li>Branch <code>b1.1-msk9.3</code> is compatible with MOSEK 9.3. Currently updated only for bugfixes.</li>
<li>Branch <code>b10.0</code> is compatible with MOSE 10.0, at the time of writing in beta. Since MOSEK 10.0 the branch names of Mosek.jl will follow Mosek, so the branch compatible with MOSEK 10.0 will be called b10.0. Release will be called <code>MAJORVER.MINORVER.N</code>, where <code>N</code> is incremented independently of MOSEK. This means that since MOSEK 10.0, Mosek.jl vX.Y.Z will require MOSEK version X.Y</li>
<li>The <code>master</code> branch. This is more or less kept compatible with the latest MOSEK release, either latest stable release or, if available, the latest alpha or beta.</li>
</ul>
<p dir="auto"><code>Mosek.jl</code> releases are taken from the <code>b*.*</code> branches.</p>
<h1 dir="auto"><a id="user-content-mosekjl" class="anchor" aria-hidden="true" href="#mosekjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Mosek.jl</h1>
<p dir="auto">Interface to the <a href="https://www.mosek.com" rel="nofollow">MOSEK solver</a> in Julia.</p>
<p dir="auto">Mosek.jl is a more or less complete mapping of the MOSEK functionality:</p>
<ul dir="auto">
<li>Most MOSEK C API functions are available</li>
<li>Callbacks for information retrival and log output during optimization</li>
<li>Interface for the MOSEK general convex solver</li>
</ul>
<p dir="auto">MOSEK can solve LP (linear), SOCP (second order conic), SDP (semi-definite),
QP (quadratic objective, quadratic constraints), and MIP (mixed-integer problems). These can be mixed as follows:</p>
<ul dir="auto">
<li>LP+CONIC+SDP</li>
<li>LP+CONIC+MIP</li>
</ul>
<p dir="auto">MOSEK is commercial software, but free licenses are available for
academic use. See <a href="http://mosek.com/products/academic-licenses/" rel="nofollow">here</a>
for details.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Use the Julia package manager to install Mosek.jl:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;Mosek&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Mosek<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The <code>Mosek.jl</code> package requires the MOSEK distribution binaries run. Upon
installation it will attempt to either local an installed MOSEK or download and
install from the MOSEK website (<a href="http://www.mosek.com" rel="nofollow">www.mosek.com</a>):</p>
<ol dir="auto">
<li>If the environment variable <code>MOSEKBINDIR</code> is defined, the installer will assume that this directory contains the necessary libraries. If it does not, the installer will fail.</li>
<li>If the current <code>Mosek.jl</code> installation uses a user-defined MOSEK and this is a valid version, this will be used.</li>
<li>If MOSEK is installed in the default location in the users HOME directory, and this installation has the correct version, this will be used.</li>
<li>If no usable MOSEK installation is found here, the installer will
attempt to download and unpack the latest distro. In this case doing
<code>Pkg.build("Mosek")</code> will update the MOSEK distro if possible.`</li>
</ol>
<p dir="auto">If the MOSEK distro installation directory is moved it is necessary to rebuild the package using</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.build(&quot;Mosek&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">build</span>(<span class="pl-s"><span class="pl-pds">"</span>Mosek<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">If you have previously installed <code>Mosek.jl</code> using a pre-installed
MOSEK distro, setting the <code>MOSEKJL_FORCE_DOWNLOAD=YES</code> will force the
installer to download MOSEK from the web instead of using the old
version.</p>
<p dir="auto">Note that environment variables can be set temporarily from Julia as</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ENV[&quot;MOSEKBINDIR&quot;] = &quot;/home/myname/lib&quot;"><pre><span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>MOSEKBINDIR<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>/home/myname/lib<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">Furthermore, a license file is required to use MOSEK (these are
free for academic use). MOSEK will look first for the enironment
variable <code>MOSEKLM_LICENSE_FILE</code> which, if defined, must point to the relevant
license file. If this is not defined, MOSEK will look for a file
called <code>mosek.lic</code> in the default install path, e.g.</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$HOME/mosek/mosek.lic"><pre><span class="pl-smi">$HOME</span>/mosek/mosek.lic</pre></div>
<h3 dir="auto"><a id="user-content-updating-the-mosek-library" class="anchor" aria-hidden="true" href="#updating-the-mosek-library"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Updating the Mosek library</h3>
<p dir="auto">If the MOSEK distro was installed manually, it can be updated simply
by installing a newer distro in the same place. Otherwise, doing
<code>Pkg.build("Mosek")</code> will check the latest MOSEK distro and update if
possible.</p>
<p dir="auto">You can see if the MOSEK distro was installed internally this way:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="is_internal = open(joinpath(Pkg.dir(&quot;Mosek&quot;),&quot;deps&quot;,&quot;inst_method&quot;),&quot;r&quot;) do f readstring(f) == &quot;internal&quot; end"><pre>is_internal <span class="pl-k">=</span> <span class="pl-c1">open</span>(<span class="pl-c1">joinpath</span>(Pkg<span class="pl-k">.</span><span class="pl-c1">dir</span>(<span class="pl-s"><span class="pl-pds">"</span>Mosek<span class="pl-pds">"</span></span>),<span class="pl-s"><span class="pl-pds">"</span>deps<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>inst_method<span class="pl-pds">"</span></span>),<span class="pl-s"><span class="pl-pds">"</span>r<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> f <span class="pl-c1">readstring</span>(f) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>internal<span class="pl-pds">"</span></span> <span class="pl-k">end</span></pre></div>
<h3 dir="auto"><a id="user-content-when-installation-does-not-work" class="anchor" aria-hidden="true" href="#when-installation-does-not-work"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>When installation does not work</h3>
<p dir="auto">If you experience problems installing (in particular on Windows or OS X), you can try to pull the latest revision and see if that works</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.checkout(&quot;Mosek&quot;,&quot;master&quot;)
Pkg.build(&quot;Mosek&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">checkout</span>(<span class="pl-s"><span class="pl-pds">"</span>Mosek<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>master<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">build</span>(<span class="pl-s"><span class="pl-pds">"</span>Mosek<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">If this also fails, please post an issue in Github.</p>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<p dir="auto">All functions and constants in the Mosek.jl are briefly documented in docs strings, and an HTML reference can be built using <code>Documenter.jl</code>.</p>
<p dir="auto">For a more complete description of functions, please refer to
<a href="https://www.mosek.com/documentation/" rel="nofollow">the MOSEK C API documentation</a>.</p>
<h2 dir="auto"><a id="user-content-use-with-jump" class="anchor" aria-hidden="true" href="#use-with-jump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Use with JuMP</h2>
<p dir="auto">The <a href="https://github.com/jump-dev/MathOptInterface.jl">MathOptInterface</a> wrapper
for MOSEK is a separate package called <a href="https://github.com/jump-dev/MosekTools.jl"><code>MosekTools</code></a>.
However, for consistency the optimizer is still named <code>Mosek.Optimizer</code>.</p>
<p dir="auto">Use MOSEK with JuMP as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JuMP, MosekTools
model = Model(Mosek.Optimizer)"><pre><span class="pl-k">using</span> JuMP, MosekTools
model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(Mosek<span class="pl-k">.</span>Optimizer)</pre></div>
<h2 dir="auto"><a id="user-content-mathprogbase-interface" class="anchor" aria-hidden="true" href="#mathprogbase-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>MathProgBase</code> interface</h2>
<p dir="auto">The legacy <a href="https://github.com/JuliaOpt/MathProgBase.jl">MathProgBase</a> wrapper
for MOSEK is implemented in the <code>MosekConicInterface.jl</code>, <code>MosekLPQCQPInterface.jl</code>
and <code>MosekSolverInterface.jl</code> files in the <code>src</code> folder.</p>
</article></div>