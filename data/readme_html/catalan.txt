<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-catalan" class="anchor" aria-hidden="true" href="#catalan"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>catalan</h1>
<p><strong>THIS PACKAGE IS DEPRECATED</strong>: Please use <a href="https://github.com/jiahao/Combinatorics.jl">Combinatorics.jl</a> instead.</p>
<p>Catalan: a combinatorics library for Julia, focusing mostly (as of now) on enumerative combinatorics and permutations.
As overflows are expected even for low values, most of the functions always return <code>BigInt</code>, and are marked as such below.</p>
<p>This library provides the following functions:</p>
<ul>
<li><code>bell(n)</code>: returns the n-th Bell number; always returns a <code>BigInt</code>;</li>
<li><code>catalan(n)</code>: returns the n-th Catalan number; always returns a <code>BigInt</code>;</li>
<li><code>derangement(n)</code>/<code>subfactorial(n)</code>: returns the number of permutations of n with no fixed points; always returns a <code>BigInt</code>;</li>
<li><code>doublefactorial(n)</code>: returns the double factorial n!!; always returns a <code>BigInt</code>;</li>
<li><code>fibonacci(n)</code>: the n-th Fibonacci number; always returns a <code>BigInt</code>;</li>
<li><code>hyperfactorial(n)</code>: the n-th hyperfactorial, i.e. prod([i^i for i = 2:n]; always returns a <code>BigInt</code>;</li>
<li><code>integer_partitions(n)</code>: returns a <code>Vector{Int}</code> consisting of the partitions of the number <code>n</code>.</li>
<li><code>jacobisymbol(a,b)</code>: returns the Jacobi symbol (a/b);</li>
<li><code>lassalle(n)</code>: returns the nth Lassalle number A<sub>n</sub> defined in <a href="http://arxiv.org/abs/1009.4225" rel="nofollow">arXiv:1009.4225</a> (<a href="http://oeis.org/A180874" rel="nofollow">OEIS A180874</a>); always returns a <code>BigInt</code>;</li>
<li><code>legendresymbol(a,p)</code>: returns the Legendre symbol (a/p);</li>
<li><code>lucas(n)</code>: the n-th Lucas number; always returns a <code>BigInt</code>;</li>
<li><code>multifactorial(n)</code>: returns the m-multifactorial n(!^m); always returns a <code>BigInt</code>;</li>
<li><code>multinomial(k...)</code>: receives a tuple of <code>k_1, ..., k_n</code> and calculates the multinomial coefficient <code>(n k)</code>, where <code>n = sum(k)</code>; returns a <code>BigInt</code> only if given a <code>BigInt</code>;</li>
<li><code>primorial(n)</code>: returns the product of all positive prime numbers &lt;= n; always returns a <code>BigInt</code>;</li>
<li><code>stirlings1(n, k)</code>: the signed <code>(n,k)</code>-th Stirling number of the first kind; returns a <code>BigInt</code> only if given a <code>BigInt</code>.</li>
</ul>
<h2><a id="user-content-young-diagrams" class="anchor" aria-hidden="true" href="#young-diagrams"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Young diagrams</h2>
<p>Limited support for working with Young diagrams is provided.</p>
<ul>
<li><code>partitionsequence(a)</code>: computes partition sequence for an integer partition <code>a</code></li>
<li><code>x = a \ b</code> creates the skew diagram for partitions (tuples) <code>a</code>, <code>b</code></li>
<li><code>isrimhook(x)</code>: checks if skew diagram <code>x</code> is a rim hook</li>
<li><code>leglength(x)</code>: computes leg length of rim hook <code>x</code></li>
<li><code>character(a, b)</code>: computes character the partition <code>b</code> in the <code>a</code>th irrep of Sn</li>
</ul>
</article></div>