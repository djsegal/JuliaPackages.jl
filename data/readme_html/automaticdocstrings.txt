<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-automaticdocstrings" class="anchor" aria-hidden="true" href="#automaticdocstrings"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>AutomaticDocstrings</h1>
<p><a href="https://travis-ci.org/baggepinnen/AutomaticDocstrings.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ffbdcdb47f368cee6d00e75c8356514d73709923/68747470733a2f2f7472617669732d63692e6f72672f626167676570696e6e656e2f4175746f6d61746963446f63737472696e67732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/baggepinnen/AutomaticDocstrings.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/65b3a183a4138e85e145db1d5bda756368ced3b4/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f412f4175746f6d61746963446f63737472696e67732e737667" alt="PkgEval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/A/AutomaticDocstrings.svg" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/baggepinnen/AutomaticDocstrings.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e8be1570ac56bedc35995cbe4c363ded1a08af82/68747470733a2f2f636f6465636f762e696f2f67682f626167676570696e6e656e2f4175746f6d61746963446f63737472696e67732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/baggepinnen/AutomaticDocstrings.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>This small package automatically generates docstring stubs for you to fill in.</p>
<p>Install using <code>import Pkg; Pkg.add("AutomaticDocstrings")</code></p>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h1>
<p>Place the macro call <code>@autodoc</code> above the function or struct definition that you want to generate a docstring for:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> AutomaticDocstrings

<span class="pl-c1">@autodoc</span>
<span class="pl-k">function</span> <span class="pl-en">f</span>(x<span class="pl-k">::</span><span class="pl-c1">A</span>, b<span class="pl-k">=</span><span class="pl-c1">5</span>; c<span class="pl-k">=</span><span class="pl-c1">LinRange</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">10</span>)) <span class="pl-k">where</span> A
    <span class="pl-c1">5</span>
<span class="pl-k">end</span></pre></div>
<p>When you execute the macro, e.g. by ctrl-enter in Juno, the macro is replaced by a docstring</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">    f(x::A, b=5; c=LinRange(1,2,10)) where A</span>
<span class="pl-s"></span>
<span class="pl-s">DOCSTRING</span>
<span class="pl-s"></span>
<span class="pl-s">#Arguments:</span>
<span class="pl-s">- `x`: DESCRIPTION</span>
<span class="pl-s">- `b`: DESCRIPTION</span>
<span class="pl-s">- `c`: DESCRIPTION</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-k">function</span> <span class="pl-en">f</span>(x<span class="pl-k">::</span><span class="pl-c1">A</span>, b<span class="pl-k">=</span><span class="pl-c1">5</span>; c<span class="pl-k">=</span><span class="pl-c1">LinRange</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">10</span>)) <span class="pl-k">where</span> A
    <span class="pl-c1">5</span>
<span class="pl-k">end</span></pre></div>
<p>Before modifying your file, a backup is saved.</p>
<pre lang="julia-repl"><code>[ Info: Saved a backup to /tmp/jl_VQvgbW/backup
</code></pre>
<p>If you don't like the docstring or if something went wrong, ctrl-z (undo) works fine as well.</p>
<h1><a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Limitations</h1>
<ul>
<li>If a file with multiple <code>@autodoc</code> are <code>include</code>ed, then only the first will be executed and then an error is thrown. Instead of <code>include(file)</code> call <code>autodoc(file)</code>.</li>
<li>Make sure the file is saved before you try to generate any docstrings.</li>
<li>Short-form function definitions with <code>where</code>, e.g., <code>f(a::A) where A</code>, does not work.</li>
</ul>
<h1><a id="user-content-options" class="anchor" aria-hidden="true" href="#options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h1>
<p>You may modify the <code>AutomaticDocstrings.options::Dict</code> to change some default values:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">:min_args</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">3</span> <span class="pl-c"><span class="pl-c">#</span> Minimum number of arguments to print the argument list</span>
<span class="pl-c1">:args_header</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Arguments:<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> Printed above the argument list</span>
<span class="pl-c1">:full_def</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">true</span> <span class="pl-c"><span class="pl-c">#</span> Include the full function signature, if false, only include function and argument names</span></pre></div>
<p>You can always call <code>restore_defaults()</code> to restore the default options.</p>
</article></div>