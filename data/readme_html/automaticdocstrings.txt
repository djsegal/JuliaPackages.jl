<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-automaticdocstrings" class="anchor" aria-hidden="true" href="#automaticdocstrings"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AutomaticDocstrings</h1>
<p dir="auto"><a href="https://github.com/baggepinnen/AutomaticDocstrings.jl/actions"><img src="https://github.com/baggepinnen/AutomaticDocstrings.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/baggepinnen/AutomaticDocstrings.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3b9fce771083a99f72103073574f6002945cc4a3bfad1ff04a03cd6999f5388a/68747470733a2f2f636f6465636f762e696f2f67682f626167676570696e6e656e2f4175746f6d61746963446f63737472696e67732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/baggepinnen/AutomaticDocstrings.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This small package automatically generates docstring stubs for you to fill in.</p>
<p dir="auto">Install using <code>import Pkg; Pkg.add("AutomaticDocstrings")</code></p>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<p dir="auto">Place the macro call <code>@autodoc</code> above the function or struct definition that you want to generate a docstring for:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using AutomaticDocstrings

@autodoc
function f(x::A, b=5; c=LinRange(1,2,10)) where A
    5
end"><pre><span class="pl-k">using</span> AutomaticDocstrings

<span class="pl-c1">@autodoc</span>
<span class="pl-k">function</span> <span class="pl-en">f</span>(x<span class="pl-k">::</span><span class="pl-c1">A</span>, b<span class="pl-k">=</span><span class="pl-c1">5</span>; c<span class="pl-k">=</span><span class="pl-c1">LinRange</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">10</span>)) <span class="pl-k">where</span> A
    <span class="pl-c1">5</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">When you execute the macro, e.g. by ctrl-enter in Juno, the macro is replaced by a docstring</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="&quot;&quot;&quot;
    f(x::A, b=5; c=LinRange(1,2,10))

DOCSTRING

# Arguments:
- `x`: DESCRIPTION
- `b`: DESCRIPTION
- `c`: DESCRIPTION
&quot;&quot;&quot;
function f(x::A, b=5; c=LinRange(1,2,10)) where A
    5
end"><pre><span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">    f(x::A, b=5; c=LinRange(1,2,10))</span>
<span class="pl-s"></span>
<span class="pl-s">DOCSTRING</span>
<span class="pl-s"></span>
<span class="pl-s"># Arguments:</span>
<span class="pl-s">- `x`: DESCRIPTION</span>
<span class="pl-s">- `b`: DESCRIPTION</span>
<span class="pl-s">- `c`: DESCRIPTION</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-k">function</span> <span class="pl-en">f</span>(x<span class="pl-k">::</span><span class="pl-c1">A</span>, b<span class="pl-k">=</span><span class="pl-c1">5</span>; c<span class="pl-k">=</span><span class="pl-c1">LinRange</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">10</span>)) <span class="pl-k">where</span> A
    <span class="pl-c1">5</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">Before modifying your file, a backup is saved.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="[ Info: Saved a backup to /tmp/jl_VQvgbW/backup"><pre lang="julia-repl" class="notranslate"><code>[ Info: Saved a backup to /tmp/jl_VQvgbW/backup
</code></pre></div>
<p dir="auto">If you don't like the docstring or if something went wrong, ctrl-z (undo) works fine as well.</p>
<h1 dir="auto"><a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Limitations</h1>
<ul dir="auto">
<li>If a file with multiple <code>@autodoc</code> are <code>include</code>ed, then only the first will be executed and then an error is thrown. Instead of <code>include(file)</code> call <code>autodoc(file)</code>.</li>
<li>Make sure the file is saved before you try to generate any docstrings.</li>
</ul>
<h1 dir="auto"><a id="user-content-options" class="anchor" aria-hidden="true" href="#options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Options</h1>
<p dir="auto">You may modify the <code>AutomaticDocstrings.options::Dict</code> to change some default values:</p>
<ul dir="auto">
<li><code>:min_args = 3</code>: Minimum number of arguments to print the argument list of function</li>
<li><code>:args_header = "# Arguments:"</code>: Printed above the argument list of function</li>
<li><code>:kwargs_header = nothing</code>: Printed above the keyword argument list of function</li>
<li><code>:struct_fields_header = "# Fields:"</code>: Printed above the fields list of a struct</li>
<li><code>:arg_types_in_desc = false</code>: Include the argument types in the description</li>
<li><code>:defaults_in_desc = false</code>: Include the default values in the description</li>
<li><code>:arg_types_in_header = false</code>: Include the argument types in the function header</li>
<li><code>:defaults_in_header = false</code>: Include the default values in the function header</li>
<li></li>
</ul>
<p dir="auto">You can always call <code>restore_defaults()</code> to restore the default options.</p>
</article></div>