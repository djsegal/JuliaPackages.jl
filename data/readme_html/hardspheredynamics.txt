<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-hardspheredynamicsjl" class="anchor" aria-hidden="true" href="#hardspheredynamicsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>HardSphereDynamics.jl</h1>
<p>This is a Julia package to simulate the dynamics of hard-sphere fluids using an event-driven algorithm ("exact" calculation of each collision). The code is designed to work in any number of spatial dimensions.</p>
<p>Simple visualizations in 2D and 3D using Makie are also provided.</p>
<h2><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example usage</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> HardSphereDynamics, StaticArrays

<span class="pl-c"><span class="pl-c">#</span> create box:</span>

table <span class="pl-k">=</span> HardSphereDynamics<span class="pl-k">.</span><span class="pl-c1">RectangularBox</span>(SA[<span class="pl-k">-</span><span class="pl-c1">0.5</span>, <span class="pl-k">-</span><span class="pl-c1">0.5</span>, <span class="pl-k">-</span><span class="pl-c1">1.0</span>],
                                          SA[<span class="pl-k">+</span><span class="pl-c1">0.5</span>, <span class="pl-k">+</span><span class="pl-c1">0.5</span>, <span class="pl-k">+</span><span class="pl-c1">3.0</span>])

<span class="pl-c"><span class="pl-c">#</span> create fluid:</span>
d <span class="pl-k">=</span> <span class="pl-c1">3</span>     <span class="pl-c"><span class="pl-c">#</span> spatial dimension</span>
n <span class="pl-k">=</span> <span class="pl-c1">20</span>   <span class="pl-c"><span class="pl-c">#</span> number of spheres</span>
r <span class="pl-k">=</span> <span class="pl-c1">0.1</span>  <span class="pl-c"><span class="pl-c">#</span> radius</span>

fluid <span class="pl-k">=</span> <span class="pl-c1">HardSphereFluid</span><span class="pl-c1">{d,Float64}</span>(table, n, r)
<span class="pl-c1">initial_condition!</span>(fluid, lower<span class="pl-k">=</span>table<span class="pl-k">.</span>lower, upper<span class="pl-k">=</span><span class="pl-k">-</span>table<span class="pl-k">.</span>lower)

<span class="pl-c"><span class="pl-c">#</span> set up simulation:</span>
collision_type <span class="pl-k">=</span> <span class="pl-c1">ElasticCollision</span>()
flow_type <span class="pl-k">=</span> <span class="pl-c1">ExternalFieldFlow</span>(SA[<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-k">-</span><span class="pl-c1">10.0</span>])
event_handler <span class="pl-k">=</span> <span class="pl-c1">AllToAll</span>(fluid, flow_type)

simulation <span class="pl-k">=</span>  <span class="pl-c1">HardSphereSimulation</span>(
    fluid, event_handler, flow_type, collision_type);

<span class="pl-c"><span class="pl-c">#</span> time evolution:</span>
δt <span class="pl-k">=</span> <span class="pl-c1">0.01</span>
final_time <span class="pl-k">=</span> <span class="pl-c1">100</span>
states, times <span class="pl-k">=</span> <span class="pl-c1">evolve!</span>(simulation, δt, final_time);

<span class="pl-c"><span class="pl-c">#</span> visualization:</span>
<span class="pl-k">using</span> Makie

<span class="pl-c1">visualize_3d</span>(states, sleep_step<span class="pl-k">=</span><span class="pl-c1">0.005</span>, lower<span class="pl-k">=</span>table<span class="pl-k">.</span>lower, upper<span class="pl-k">=</span><span class="pl-k">-</span>table<span class="pl-k">.</span>lower)</pre></div>
<h2><a id="user-content-author" class="anchor" aria-hidden="true" href="#author"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Author</h2>
<ul>
<li><a href="http://sistemas.fciencias.unam.mx/~dsanders" rel="nofollow">David P. Sanders</a>, Departamento de Física, Facultad de Ciencias, Universidad Nacional Autónoma de México (UNAM) &amp; Visiting researcher, MIT</li>
</ul>
<h2><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Acknowledgements</h2>
<p>Financial support is acknowledged from DGAPA-UNAM PAPIIT grant IN-117117 and a <em>Cátedra Marcos Moshinsky</em> (2018).</p>
<p>The author thanks Simon Danisch for help with visualizations using <code>Makie.jl</code>.</p>
</article></div>