<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-sudoku" class="anchor" aria-hidden="true" href="#sudoku"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Sudoku</h1>
<p><a href="https://travis-ci.com/scheinerman/Sudoku.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/849908144b19368f11bd3472b0ffdd172f875efe8f085222a5e1914d3c27a887/68747470733a2f2f7472617669732d63692e636f6d2f73636865696e65726d616e2f5375646f6b752e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/scheinerman/Sudoku.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/scheinerman/Sudoku.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/bd2d597a58c967a4147279153baed0bb918cdf297eff949da9c80cd8d442f6a2/687474703a2f2f636f6465636f762e696f2f6769746875622f73636865696e65726d616e2f5375646f6b752e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/scheinerman/Sudoku.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>This module solves Sudoku puzzles using integer programming.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>The main function in this module is <code>sudoku</code> which takes as input a
9-by-9 integer matrix. The entries of this matrix give the Sudoku puzzle
with 0s representing blanks. The output is the solved Sudoku puzzle.</p>
<p>For testing purposes, we provide three sample puzzles named <code>Sudoku.puzz1</code>,
<code>Sudoku.puzz2</code>, and <code>Sudoku.puzz3</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Sudoku

julia&gt; A = Sudoku.puzz1
9×9 Array{Int64,2}:
 9  3  0  0  0  0  0  4  0
 0  0  0  0  4  2  0  9  0
 8  0  0  1  9  6  7  0  0
 0  0  0  4  7  0  0  0  0
 0  2  0  0  0  0  0  6  0
 0  0  0  0  2  3  0  0  0
 0  0  8  5  3  1  0  0  2
 0  9  0  2  8  0  0  0  0
 0  7  0  0  0  0  0  5  3

julia&gt; sudoku(A)
9×9 Array{Int64,2}:
 9  3  6  7  5  8  2  4  1
 1  5  7  3  4  2  6  9  8
 8  4  2  1  9  6  7  3  5
 6  8  3  4  7  5  1  2  9
 5  2  4  8  1  9  3  6  7
 7  1  9  6  2  3  5  8  4
 4  6  8  5  3  1  9  7  2
 3  9  5  2  8  7  4  1  6
 2  7  1  9  6  4  8  5  3
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Sudoku

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> Sudoku<span class="pl-k">.</span>puzz1
<span class="pl-c1">9</span><span class="pl-k">×</span><span class="pl-c1">9</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">9</span>  <span class="pl-c1">3</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">4</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">4</span>  <span class="pl-c1">2</span>  <span class="pl-c1">0</span>  <span class="pl-c1">9</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">8</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">9</span>  <span class="pl-c1">6</span>  <span class="pl-c1">7</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">4</span>  <span class="pl-c1">7</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">2</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">6</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">8</span>  <span class="pl-c1">5</span>  <span class="pl-c1">3</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">9</span>  <span class="pl-c1">0</span>  <span class="pl-c1">2</span>  <span class="pl-c1">8</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">7</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">5</span>  <span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sudoku</span>(A)
<span class="pl-c1">9</span><span class="pl-k">×</span><span class="pl-c1">9</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">9</span>  <span class="pl-c1">3</span>  <span class="pl-c1">6</span>  <span class="pl-c1">7</span>  <span class="pl-c1">5</span>  <span class="pl-c1">8</span>  <span class="pl-c1">2</span>  <span class="pl-c1">4</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">5</span>  <span class="pl-c1">7</span>  <span class="pl-c1">3</span>  <span class="pl-c1">4</span>  <span class="pl-c1">2</span>  <span class="pl-c1">6</span>  <span class="pl-c1">9</span>  <span class="pl-c1">8</span>
 <span class="pl-c1">8</span>  <span class="pl-c1">4</span>  <span class="pl-c1">2</span>  <span class="pl-c1">1</span>  <span class="pl-c1">9</span>  <span class="pl-c1">6</span>  <span class="pl-c1">7</span>  <span class="pl-c1">3</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">6</span>  <span class="pl-c1">8</span>  <span class="pl-c1">3</span>  <span class="pl-c1">4</span>  <span class="pl-c1">7</span>  <span class="pl-c1">5</span>  <span class="pl-c1">1</span>  <span class="pl-c1">2</span>  <span class="pl-c1">9</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">2</span>  <span class="pl-c1">4</span>  <span class="pl-c1">8</span>  <span class="pl-c1">1</span>  <span class="pl-c1">9</span>  <span class="pl-c1">3</span>  <span class="pl-c1">6</span>  <span class="pl-c1">7</span>
 <span class="pl-c1">7</span>  <span class="pl-c1">1</span>  <span class="pl-c1">9</span>  <span class="pl-c1">6</span>  <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">5</span>  <span class="pl-c1">8</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">6</span>  <span class="pl-c1">8</span>  <span class="pl-c1">5</span>  <span class="pl-c1">3</span>  <span class="pl-c1">1</span>  <span class="pl-c1">9</span>  <span class="pl-c1">7</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">9</span>  <span class="pl-c1">5</span>  <span class="pl-c1">2</span>  <span class="pl-c1">8</span>  <span class="pl-c1">7</span>  <span class="pl-c1">4</span>  <span class="pl-c1">1</span>  <span class="pl-c1">6</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">7</span>  <span class="pl-c1">1</span>  <span class="pl-c1">9</span>  <span class="pl-c1">6</span>  <span class="pl-c1">4</span>  <span class="pl-c1">8</span>  <span class="pl-c1">5</span>  <span class="pl-c1">3</span></pre></div>
<p>If there is no solution to the puzzle, an error is thrown.</p>
<h2><a id="user-content-nice-printing" class="anchor" aria-hidden="true" href="#nice-printing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Nice Printing</h2>
<p>The function <code>sudoku_print</code> prints a Sudoku matrix in an attractive manner.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; sudoku_print(A)
+-------+-------+-------+
| 9 3 . | . . . | . 4 . |
| . . . | . 4 2 | . 9 . |
| 8 . . | 1 9 6 | 7 . . |
+-------+-------+-------+
| . . . | 4 7 . | . . . |
| . 2 . | . . . | . 6 . |
| . . . | . 2 3 | . . . |
+-------+-------+-------+
| . . 8 | 5 3 1 | . . 2 |
| . 9 . | 2 8 . | . . . |
| . 7 . | . . . | . 5 3 |
+-------+-------+-------+

julia&gt; sudoku_print(sudoku(A))
+-------+-------+-------+
| 9 3 6 | 7 5 8 | 2 4 1 |
| 1 5 7 | 3 4 2 | 6 9 8 |
| 8 4 2 | 1 9 6 | 7 3 5 |
+-------+-------+-------+
| 6 8 3 | 4 7 5 | 1 2 9 |
| 5 2 4 | 8 1 9 | 3 6 7 |
| 7 1 9 | 6 2 3 | 5 8 4 |
+-------+-------+-------+
| 4 6 8 | 5 3 1 | 9 7 2 |
| 3 9 5 | 2 8 7 | 4 1 6 |
| 2 7 1 | 9 6 4 | 8 5 3 |
+-------+-------+-------+
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">sudoku_print</span>(A)
<span class="pl-k">+-------+-------+-------+</span>
<span class="pl-k">|</span> <span class="pl-c1">9</span> <span class="pl-c1">3</span> . <span class="pl-k">|</span> . . . <span class="pl-k">|</span> . <span class="pl-c1">4</span> . <span class="pl-k">|</span>
<span class="pl-k">|</span> . . . <span class="pl-k">|</span> . <span class="pl-c1">4</span> <span class="pl-c1">2</span> <span class="pl-k">|</span> . <span class="pl-c1">9</span> . <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">8</span> . . <span class="pl-k">|</span> <span class="pl-c1">1</span> <span class="pl-c1">9</span> <span class="pl-c1">6</span> <span class="pl-k">|</span> <span class="pl-c1">7</span> . . <span class="pl-k">|</span>
<span class="pl-k">+-------+-------+-------+</span>
<span class="pl-k">|</span> . . . <span class="pl-k">|</span> <span class="pl-c1">4</span> <span class="pl-c1">7</span> . <span class="pl-k">|</span> . . . <span class="pl-k">|</span>
<span class="pl-k">|</span> . <span class="pl-c1">2</span> . <span class="pl-k">|</span> . . . <span class="pl-k">|</span> . <span class="pl-c1">6</span> . <span class="pl-k">|</span>
<span class="pl-k">|</span> . . . <span class="pl-k">|</span> . <span class="pl-c1">2</span> <span class="pl-c1">3</span> <span class="pl-k">|</span> . . . <span class="pl-k">|</span>
<span class="pl-k">+-------+-------+-------+</span>
<span class="pl-k">|</span> . . <span class="pl-c1">8</span> <span class="pl-k">|</span> <span class="pl-c1">5</span> <span class="pl-c1">3</span> <span class="pl-c1">1</span> <span class="pl-k">|</span> . . <span class="pl-c1">2</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> . <span class="pl-c1">9</span> . <span class="pl-k">|</span> <span class="pl-c1">2</span> <span class="pl-c1">8</span> . <span class="pl-k">|</span> . . . <span class="pl-k">|</span>
<span class="pl-k">|</span> . <span class="pl-c1">7</span> . <span class="pl-k">|</span> . . . <span class="pl-k">|</span> . <span class="pl-c1">5</span> <span class="pl-c1">3</span> <span class="pl-k">|</span>
<span class="pl-k">+-------+-------+-------+</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sudoku_print</span>(<span class="pl-c1">sudoku</span>(A))
<span class="pl-k">+-------+-------+-------+</span>
<span class="pl-k">|</span> <span class="pl-c1">9</span> <span class="pl-c1">3</span> <span class="pl-c1">6</span> <span class="pl-k">|</span> <span class="pl-c1">7</span> <span class="pl-c1">5</span> <span class="pl-c1">8</span> <span class="pl-k">|</span> <span class="pl-c1">2</span> <span class="pl-c1">4</span> <span class="pl-c1">1</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">1</span> <span class="pl-c1">5</span> <span class="pl-c1">7</span> <span class="pl-k">|</span> <span class="pl-c1">3</span> <span class="pl-c1">4</span> <span class="pl-c1">2</span> <span class="pl-k">|</span> <span class="pl-c1">6</span> <span class="pl-c1">9</span> <span class="pl-c1">8</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">8</span> <span class="pl-c1">4</span> <span class="pl-c1">2</span> <span class="pl-k">|</span> <span class="pl-c1">1</span> <span class="pl-c1">9</span> <span class="pl-c1">6</span> <span class="pl-k">|</span> <span class="pl-c1">7</span> <span class="pl-c1">3</span> <span class="pl-c1">5</span> <span class="pl-k">|</span>
<span class="pl-k">+-------+-------+-------+</span>
<span class="pl-k">|</span> <span class="pl-c1">6</span> <span class="pl-c1">8</span> <span class="pl-c1">3</span> <span class="pl-k">|</span> <span class="pl-c1">4</span> <span class="pl-c1">7</span> <span class="pl-c1">5</span> <span class="pl-k">|</span> <span class="pl-c1">1</span> <span class="pl-c1">2</span> <span class="pl-c1">9</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">5</span> <span class="pl-c1">2</span> <span class="pl-c1">4</span> <span class="pl-k">|</span> <span class="pl-c1">8</span> <span class="pl-c1">1</span> <span class="pl-c1">9</span> <span class="pl-k">|</span> <span class="pl-c1">3</span> <span class="pl-c1">6</span> <span class="pl-c1">7</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">7</span> <span class="pl-c1">1</span> <span class="pl-c1">9</span> <span class="pl-k">|</span> <span class="pl-c1">6</span> <span class="pl-c1">2</span> <span class="pl-c1">3</span> <span class="pl-k">|</span> <span class="pl-c1">5</span> <span class="pl-c1">8</span> <span class="pl-c1">4</span> <span class="pl-k">|</span>
<span class="pl-k">+-------+-------+-------+</span>
<span class="pl-k">|</span> <span class="pl-c1">4</span> <span class="pl-c1">6</span> <span class="pl-c1">8</span> <span class="pl-k">|</span> <span class="pl-c1">5</span> <span class="pl-c1">3</span> <span class="pl-c1">1</span> <span class="pl-k">|</span> <span class="pl-c1">9</span> <span class="pl-c1">7</span> <span class="pl-c1">2</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">3</span> <span class="pl-c1">9</span> <span class="pl-c1">5</span> <span class="pl-k">|</span> <span class="pl-c1">2</span> <span class="pl-c1">8</span> <span class="pl-c1">7</span> <span class="pl-k">|</span> <span class="pl-c1">4</span> <span class="pl-c1">1</span> <span class="pl-c1">6</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">2</span> <span class="pl-c1">7</span> <span class="pl-c1">1</span> <span class="pl-k">|</span> <span class="pl-c1">9</span> <span class="pl-c1">6</span> <span class="pl-c1">4</span> <span class="pl-k">|</span> <span class="pl-c1">8</span> <span class="pl-c1">5</span> <span class="pl-c1">3</span> <span class="pl-k">|</span>
<span class="pl-k">+-------+-------+-------+</span></pre></div>
<h2><a id="user-content-comments" class="anchor" aria-hidden="true" href="#comments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Comments</h2>
<ul>
<li>This version only handles 9x9 Sudoku puzzles. It would probably not be
too much work to generalize.</li>
<li>We provide the function <code>sudoku_check</code> that verifies if the output of
<code>sudoku</code> is a valid grid.</li>
<li>We use the CBC solver because it is open source. It would be easy to change
to other solvers.</li>
<li>Note that the first time <code>sudoku</code> is invoked it can be a
bit slow (presumably because of initialization of the integer programming code).
Subsequent calls go faster.</li>
<li>If a puzzle is given with more than one solution, we only report one answer.</li>
<li>If a puzzle is given with no solutions, warnings are generated and an all
zero matrix is returned.</li>
</ul>
</article></div>