<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mzplots" class="anchor" aria-hidden="true" href="#mzplots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MzPlots</h1>
<p dir="auto"><a href="https://github.com/timholy/MzPlots.jl/actions"><img src="https://github.com/timholy/MzPlots.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/timholy/MzPlots.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/05e4cf39b52c8892193c4aef746355f78c45ef9468e8f974928bf91e902e5f39/68747470733a2f2f636f6465636f762e696f2f67682f74696d686f6c792f4d7a506c6f74732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/timholy/MzPlots.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package supports limited plotting of mass spectrometry data.
It is designed to be format-agnostic through its use of the <a href="https://github.com/timholy/MzCore.jl"><code>MzCore</code></a> interface,
although currently only <a href="https://github.com/timholy/MzXML.jl">MzXML</a> has been implemented.</p>
<h2 dir="auto"><a id="user-content-interactive-exploration-via-makie" class="anchor" aria-hidden="true" href="#interactive-exploration-via-makie"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Interactive exploration via Makie</h2>
<p dir="auto">Supposing that you have some mass spectrometry data loaded into <code>scans</code>, then it's as simple as</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Makie, MzPlots
scene, ax = mzplot(scans)   # `scans` is a vector of scan data you've loaded from a file
display(scene)"><pre><span class="pl-k">using</span> Makie, MzPlots
scene, ax <span class="pl-k">=</span> <span class="pl-c1">mzplot</span>(scans)   <span class="pl-c"><span class="pl-c">#</span> `scans` is a vector of scan data you've loaded from a file</span>
<span class="pl-c1">display</span>(scene)</pre></div>
<h2 dir="auto"><a id="user-content-limited-plots-support" class="anchor" aria-hidden="true" href="#limited-plots-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Limited Plots support</h2>
<p dir="auto">You can convert the scans to an <code>AxisArray</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using AxisArrays: Axis, AxisArray
# Convenient creation of an Axis range from an interval. `n` is the number of distinct values in the range.
asrange(axi::Axis{name}, n) where name = Axis{name}(range(minimum(axi.val), stop=maximum(axi.val), length=n))

lims = limits(scans)
sz = (800, length(scans))                    # or pick something else
aa = AxisArray(zeros(sz), map(asrange, lims, sz)...)
copyto!(aa, scans)"><pre><span class="pl-k">using</span> AxisArrays<span class="pl-k">:</span> Axis, AxisArray
<span class="pl-c"><span class="pl-c">#</span> Convenient creation of an Axis range from an interval. `n` is the number of distinct values in the range.</span>
<span class="pl-en">asrange</span>(axi<span class="pl-k">::</span><span class="pl-c1">Axis{name}</span>, n) <span class="pl-k">where</span> name <span class="pl-k">=</span> <span class="pl-c1">Axis</span><span class="pl-c1">{name}</span>(<span class="pl-c1">range</span>(<span class="pl-c1">minimum</span>(axi<span class="pl-k">.</span>val), stop<span class="pl-k">=</span><span class="pl-c1">maximum</span>(axi<span class="pl-k">.</span>val), length<span class="pl-k">=</span>n))

lims <span class="pl-k">=</span> <span class="pl-c1">limits</span>(scans)
sz <span class="pl-k">=</span> (<span class="pl-c1">800</span>, <span class="pl-c1">length</span>(scans))                    <span class="pl-c"><span class="pl-c">#</span> or pick something else</span>
aa <span class="pl-k">=</span> <span class="pl-c1">AxisArray</span>(<span class="pl-c1">zeros</span>(sz), <span class="pl-c1">map</span>(asrange, lims, sz)<span class="pl-k">...</span>)
<span class="pl-c1">copyto!</span>(aa, scans)</pre></div>
<p dir="auto">Then you can plot <code>aa</code> with <code>Plots.plot</code>.</p>
</article></div>