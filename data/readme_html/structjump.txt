<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-structjump" class="anchor" aria-hidden="true" href="#structjump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>StructJuMP</h1>
<p>The StructJuMP package provides a parallel algebraic modeling framework for block structured optimization models in Julia. StructJuMP, originally known as StochJuMP, is tailored to two-stage stochastic optimization problems and uses MPI to enable a parallel, distributed memory instantiation of the problem. StructJuMP.jl is an extension of the <a href="https://github.com/JuliaOpt/JuMP.jl">JuMP.jl</a> package, which is as fast as <a href="http://ampl.com" rel="nofollow">AMPL</a> and faster than any other modeling tools such as <a href="http://www.gams.com" rel="nofollow">GAMS</a> and <a href="http://www.pyomo.org" rel="nofollow">Pyomo</a> (see <a href="http://arxiv.org/pdf/1312.1431.pdf" rel="nofollow">this</a>).</p>
<p><a href="https://travis-ci.org/StructJuMP/StructJuMP.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c1a6d6ea134d864599e03a989e929d3875aaf2d9/68747470733a2f2f7472617669732d63692e6f72672f5374727563744a754d502f5374727563744a754d502e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/StructJuMP/StructJuMP.jl.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>The <code>master</code> branch of this package works with the JuMP v0.19. To
try this package with JuMP v0.19, do:</p>
<div class="highlight highlight-source-julia"><pre>] add StructJuMP<span class="pl-c"><span class="pl-c">#</span>master</span></pre></div>
<h2><a id="user-content-an-example" class="anchor" aria-hidden="true" href="#an-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>An example</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> StructJuMP

numScen <span class="pl-k">=</span> <span class="pl-c1">2</span>
m <span class="pl-k">=</span> <span class="pl-c1">StructuredModel</span>(num_scenarios<span class="pl-k">=</span>numScen)
<span class="pl-c1">@variable</span>(m, x[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>])
<span class="pl-c1">@NLconstraint</span>(m, x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> x[<span class="pl-c1">2</span>] <span class="pl-k">==</span> <span class="pl-c1">100</span>)
<span class="pl-c1">@NLobjective</span>(m, Min, x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x[<span class="pl-c1">1</span>]<span class="pl-k">*</span>x[<span class="pl-c1">2</span>])

<span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>numScen
    bl <span class="pl-k">=</span> <span class="pl-c1">StructuredModel</span>(parent<span class="pl-k">=</span>m, id<span class="pl-k">=</span>i)
    <span class="pl-c1">@variable</span>(bl, y[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>])
    <span class="pl-c1">@NLconstraint</span>(bl, x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> y[<span class="pl-c1">1</span>] <span class="pl-k">+</span> y[<span class="pl-c1">2</span>] <span class="pl-k">≥</span>  <span class="pl-c1">0</span>)
    <span class="pl-c1">@NLconstraint</span>(bl, x[<span class="pl-c1">2</span>] <span class="pl-k">+</span> y[<span class="pl-c1">1</span>] <span class="pl-k">+</span> y[<span class="pl-c1">2</span>] <span class="pl-k">≤</span> <span class="pl-c1">50</span>)
    <span class="pl-c1">@NLobjective</span>(bl, Min, y[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> y[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> y[<span class="pl-c1">1</span>]<span class="pl-k">*</span>y[<span class="pl-c1">2</span>])
<span class="pl-k">end</span></pre></div>
<p>The above example builds a two level structured model <code>m</code> with 2 scenarios.</p>
<h2><a id="user-content-available-solvers-for-structjump" class="anchor" aria-hidden="true" href="#available-solvers-for-structjump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Available Solvers for StructJuMP</h2>
<h3><a id="user-content-nonlinear-solvers" class="anchor" aria-hidden="true" href="#nonlinear-solvers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Nonlinear Solvers</h3>
<p>Problems modeled in StructJuMP models can be solved in parallel using the <a href="https://github.com/Argonne-National-Laboratory/PIPS">PIPS-NLP</a> parallel optimization solver. In addition, StructJuMP models can be solved (in serial only) using <a href="https://projects.coin-or.org/Ipopt" rel="nofollow">Ipopt</a>. The SturctJuMP models interface with the solvers via <a href="https://github.com/Argonne-National-Laboratory/StructJuMPSolverInterface.jl">StructJuMPSolverInterface.jl</a>.</p>
<h3><a id="user-content-mixed-integer-solvers" class="anchor" aria-hidden="true" href="#mixed-integer-solvers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Mixed-Integer Solvers</h3>
<p><a href="https://github.com/Argonne-National-Laboratory/DSP.git">DSP</a> can read models from StructJuMP via <a href="https://github.com/Argonne-National-Laboratory/DSPsolver.jl.git">DSPsolver.jl</a>. In particular, <code>DSP</code> can solver problems with integer variables in parallel.</p>
<h3><a id="user-content-stochastic-dual-dynamic-programming-sddp" class="anchor" aria-hidden="true" href="#stochastic-dual-dynamic-programming-sddp"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Stochastic Dual Dynamic Programming (SDDP)</h3>
<p><a href="https://github.com/blegat/StructDualDynProg.jl">StructDualDynProg</a> can run the SDDP algorithm on multi-stage models from StructJuMP.</p>
<h2><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Acknowledgements</h2>
<p>StructJuMP has been developed under the financial support of Department of Energy (DOE), Office of Advanced Scientific Computing Research, Office of Electricity Delivery and Energy Reliability, and Grid Modernization Laboratory Consortium (GMLC) (PIs: Cosmin G. Petra, Lawrence Livermore National Laboratory and Mihai Anitescu, Argonne National Laboratory).</p>
</article></div>