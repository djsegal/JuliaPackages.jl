<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-vortexdistributionsjl" class="anchor" aria-hidden="true" href="#vortexdistributionsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>VortexDistributions.jl</h1>

<p dir="auto"><a href="https://github.com/AshtonSBradley/VortexDistributions.jl/actions"><img src="https://github.com/AshtonSBradley/VortexDistributions.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/AshtonSBradley/VortexDistributions.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6b41e503dbe9c28a6d7420b16c3a0fe5ee7f074d8889654ec62613ad46c56da6/68747470733a2f2f636f6465636f762e696f2f67682f417368746f6e53427261646c65792f566f72746578446973747269627574696f6e732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/AshtonSBradley/VortexDistributions.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Tools for creating and detecting quantum vortices in Bose-Einstein condensates.</p>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Fast, accurate vortex detection.
<ul dir="auto">
<li>Highly optimized version of the plaquette method (phase integral around each 4-point plaquette), with recursive interpolation to achieve a good balance between speed and accuracy.</li>
<li>At present only tests for charge +/-1 in 2D</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Vortex creation
<ul dir="auto">
<li>Solves the 2D GPE problem for charge n on the infinite domain</li>
<li>Interpolates vortex solution to density and phase imprint on arbitrary 2D domains</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Recursive cluster algorithm</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Vortex correlation functions</li>
</ul>
<h1 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="]add VortexDistributions"><pre>]add VortexDistributions</pre></div>
<h1 dir="auto"><a id="user-content-detection-example" class="anchor" aria-hidden="true" href="#detection-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Detection Example</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using VortexDistributions, Plots
gr(xlabel=&quot;x&quot;,ylabel=&quot;y&quot;,legend=false)

# make a simple 2D test field
Nx = 400; Ny = Nx
Lx = 200; Ly = Lx
x = LinRange(-Lx / 2, Ly / 2, Nx); y = x
psi0 = one.(x*y') |&gt; complex

# doubly periodic boundary conditions
psi = Torus(psi0,x,y)

# make a point vortex
pv = PointVortex(30.0,70.3,-1)

# make a scalar GPE vortex with exact core
spv = ScalarVortex(pv)
vortex!(psi,spv)

# make some more random vortices
vort = rand_vortex(10,psi)
vortex!(psi,vort)"><pre><span class="pl-k">using</span> VortexDistributions, Plots
<span class="pl-c1">gr</span>(xlabel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-pds">"</span></span>,ylabel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>y<span class="pl-pds">"</span></span>,legend<span class="pl-k">=</span><span class="pl-c1">false</span>)

<span class="pl-c"><span class="pl-c">#</span> make a simple 2D test field</span>
Nx <span class="pl-k">=</span> <span class="pl-c1">400</span>; Ny <span class="pl-k">=</span> Nx
Lx <span class="pl-k">=</span> <span class="pl-c1">200</span>; Ly <span class="pl-k">=</span> Lx
x <span class="pl-k">=</span> <span class="pl-c1">LinRange</span>(<span class="pl-k">-</span>Lx <span class="pl-k">/</span> <span class="pl-c1">2</span>, Ly <span class="pl-k">/</span> <span class="pl-c1">2</span>, Nx); y <span class="pl-k">=</span> x
psi0 <span class="pl-k">=</span> <span class="pl-c1">one</span>.(x<span class="pl-k">*</span>y<span class="pl-k">'</span>) <span class="pl-k">|&gt;</span> complex

<span class="pl-c"><span class="pl-c">#</span> doubly periodic boundary conditions</span>
psi <span class="pl-k">=</span> <span class="pl-c1">Torus</span>(psi0,x,y)

<span class="pl-c"><span class="pl-c">#</span> make a point vortex</span>
pv <span class="pl-k">=</span> <span class="pl-c1">PointVortex</span>(<span class="pl-c1">30.0</span>,<span class="pl-c1">70.3</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)

<span class="pl-c"><span class="pl-c">#</span> make a scalar GPE vortex with exact core</span>
spv <span class="pl-k">=</span> <span class="pl-c1">ScalarVortex</span>(pv)
<span class="pl-c1">vortex!</span>(psi,spv)

<span class="pl-c"><span class="pl-c">#</span> make some more random vortices</span>
vort <span class="pl-k">=</span> <span class="pl-c1">rand_vortex</span>(<span class="pl-c1">10</span>,psi)
<span class="pl-c1">vortex!</span>(psi,vort)</pre></div>
<p dir="auto">We can recover the raw point vortex data from <code>PointVortex()</code> with</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="vortex_array(pv)"><pre><span class="pl-c1">vortex_array</span>(pv)</pre></div>
<p dir="auto">or from a <code>ScalarVortex()</code> with</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="vortex_array(spv.vort)"><pre><span class="pl-c1">vortex_array</span>(spv<span class="pl-k">.</span>vort)</pre></div>
<p dir="auto">We can find all the vortices, removing edge vortices by default:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="vfound = findvortices(psi)"><pre>vfound <span class="pl-k">=</span> <span class="pl-c1">findvortices</span>(psi)</pre></div>
<p dir="auto">For a single vortex example, we show have the phase at successive zoom levels with vortex location, <code>+</code>, and detected location, <code>o</code> (see examples):</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="/examples/phase.png"><img src="/examples/phase.png" alt="" style="max-width: 100%;"></a></p>
<p dir="auto">and density at successive zoom levels with vortex location and detected location:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="/examples/density.png"><img src="/examples/density.png" alt="" style="max-width: 100%;"></a></p>
<p dir="auto">The benchmark gives (2018 MacBook Pro 2.33GHz Intel i5)</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using BenchmarkTools
julia&gt; @btime vort = findvortices(psi)
  4.037 ms (585 allocations: 3.84 MiB)"><pre><span class="pl-k">using</span> BenchmarkTools
julia<span class="pl-k">&gt;</span> <span class="pl-c1">@btime</span> vort <span class="pl-k">=</span> <span class="pl-c1">findvortices</span>(psi)
  <span class="pl-c1">4.037</span> ms (<span class="pl-c1">585</span> allocations<span class="pl-k">:</span> <span class="pl-c1">3.84</span> MiB)</pre></div>
<h4 dir="auto"><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgements</h4>
<p dir="auto">Matthew Reeves, Thomas Billam, Michael Cawte</p>
<h1 dir="auto"><a id="user-content-external-links" class="anchor" aria-hidden="true" href="#external-links"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>External links</h1>
<p dir="auto"><em><strong>Signatures of Coherent Vortex Structures in a Disordered 2D Quantum Fluid</strong></em>,<br>
Matthew T. Reeves, Thomas P. Billam, Brian P. Anderson, and Ashton S. Bradley, <br>
<a href="http://journals.aps.org/pra/abstract/10.1103/PhysRevA.89.053631" rel="nofollow">Physical Review A 89, 053631 (2014)</a></p>
<p dir="auto"><em><strong>Onsager-Kraichnan Condensation in Decaying Two-Dimensional Quantum Turbulence</strong></em>,<br>
Thomas P. Billam, Matthew T. Reeves, Brian P. Anderson, and Ashton S. Bradley, <br>
<a href="http://dx.doi.org/10.1103/PhysRevLett.112.145301" rel="nofollow">Physical Review Letters 112, 145301 (2014)</a></p>
</article></div>