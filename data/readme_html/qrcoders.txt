<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/22d8d0b904c1164a1323a9ab3d3cb3499f1362cc60b6afe57b96693f0ae40e85/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6a756c6961696d616765732f5152436f646572732e6a6c406173736574732f6c6f676f2d5152436f646572732e706e67"><img src="https://camo.githubusercontent.com/22d8d0b904c1164a1323a9ab3d3cb3499f1362cc60b6afe57b96693f0ae40e85/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6a756c6961696d616765732f5152436f646572732e6a6c406173736574732f6c6f676f2d5152436f646572732e706e67" alt="logo-QRCoders" data-canonical-src="https://cdn.jsdelivr.net/gh/juliaimages/QRCoders.jl@assets/logo-QRCoders.png" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/JuliaImages/QRCoders.jl/actions"><img src="https://github.com/JuliaImages/QRCoders.jl/workflows/CI/badge.svg" alt="" style="max-width: 100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/9e736da0f6874ced5e8150691a0074d006746afcb3dd7ddea3e22ff7b576bbef/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f512f5152436f64652e737667" alt="" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/Q/QRCode.svg" style="max-width: 100%;"></a>
<a href="https://codecov.io/github/JuliaImages/QRCoders.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/3546969dad270d15b69e2162b9aa5fe2506e81ea999ffcc15f41874bf7c38af0/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c6961496d616765732f5152436f646572732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://codecov.io/github/JuliaImages/QRCoders.jl/coverage.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://JuliaImages.github.io/QRCoders.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Create <a href="https://en.wikipedia.org/wiki/QR_code" rel="nofollow">QR Codes</a> as data within Julia, or export as PNG.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-create-a-qr-code-as-data" class="anchor" aria-hidden="true" href="#create-a-qr-code-as-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Create a QR Code as data</h3>
<p dir="auto">Creating a QR Code couldn't be simpler.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using QRCoders

julia&gt; qrcode(&quot;Hello world!&quot;)
21×21 BitMatrix:
 1  1  1  1  1  1  1  0  1  1  1  1  1  0  1  1  1  1  1  1  1
 1  0  0  0  0  0  1  0  1  0  1  0  1  0  1  0  0  0  0  0  1
 1  0  1  1  1  0  1  0  0  0  1  1  0  0  1  0  1  1  1  0  1
 ⋮              ⋮              ⋮              ⋮              ⋮
 1  0  1  1  1  0  1  0  1  0  0  0  1  0  0  1  0  0  1  0  0
 1  0  0  0  0  0  1  0  0  1  0  1  0  1  1  1  1  0  0  0  1
 1  1  1  1  1  1  1  0  1  0  1  1  0  1  1  1  0  0  1  0  0"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> QRCoders

julia<span class="pl-k">&gt;</span> <span class="pl-c1">qrcode</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>)
<span class="pl-c1">21</span><span class="pl-k">×</span><span class="pl-c1">21</span> BitMatrix<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>
 ⋮              ⋮              ⋮              ⋮              ⋮
 <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span></pre></div>
<p dir="auto">The value <code>1(true)</code> represents a dark space and <code>0(false)</code> a white space.</p>
<h3 dir="auto"><a id="user-content-export-a-qr-code-as-a-file" class="anchor" aria-hidden="true" href="#export-a-qr-code-as-a-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Export a QR Code as a file</h3>
<p dir="auto">Exporting files is also easy.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; exportqrcode(&quot;Hello world!&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">exportqrcode</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">A file will be saved at <code>./qrcode.png</code>.</p>
<blockquote>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/c3cc63efc071a70d67695f21f02f1d5a761c05bd7e91b19aaae3ad667271fb67/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6a756c6961696d616765732f5152436f646572732e6a6c406173736574732f7172636f64652e706e67"><img src="https://camo.githubusercontent.com/c3cc63efc071a70d67695f21f02f1d5a761c05bd7e91b19aaae3ad667271fb67/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6a756c6961696d616765732f5152436f646572732e6a6c406173736574732f7172636f64652e706e67" alt="QRCode1" data-canonical-src="https://cdn.jsdelivr.net/gh/juliaimages/QRCoders.jl@assets/qrcode.png" style="max-width: 100%;"></a></p>
</blockquote>
<h3 dir="auto"><a id="user-content-qrcode-type" class="anchor" aria-hidden="true" href="#qrcode-type"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>QRCode type</h3>
<p dir="auto"><code>QRCode</code> is a structure type that contains the data of a QR Code. One can use
it as an input to call functions.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; code = QRCode(&quot;Hello world!&quot;)
█████████████████████████
██ ▄▄▄▄▄ █▀ █ ▄█ ▄▄▄▄▄ ██
██ █   █ █▄ █▀▄█ █   █ ██
██ █▄▄▄█ █ ██▀ █ █▄▄▄█ ██
██▄▄▄▄▄▄▄█ ▀ ▀ █▄▄▄▄▄▄▄██
██▄ ▀ ▀▀▄ ▀ ▄███ ▄▄█▄ ▀██
████▄ █ ▄▄ █▄▀▄▄███ ▄▀ ██
██████▄█▄▄▀  ▀▄█▄▀ █▀█▀██
██ ▄▄▄▄▄ █▄  ▀▀ █ ▀▄▄▄███
██ █   █ █▀▄▀ ██▄ ▄▀▀▀ ██
██ █▄▄▄█ █▀  █▄▀▀█▄█▄█▄██
██▄▄▄▄▄▄▄█▄█▄▄▄██▄█▄█▄███
▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
julia&gt; qrcode(code) # get the data of the QR Code
julia&gt; exportqrcode(code, &quot;qrcode.png&quot;) # export to a file
julia&gt; qrwidth(code) # get the width of the QR Code"><pre>julia<span class="pl-k">&gt;</span> code <span class="pl-k">=</span> <span class="pl-c1">QRCode</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>)
█████████████████████████
██ ▄▄▄▄▄ █▀ █ ▄█ ▄▄▄▄▄ ██
██ █   █ █▄ █▀▄█ █   █ ██
██ █▄▄▄█ █ ██▀ █ █▄▄▄█ ██
██▄▄▄▄▄▄▄█ ▀ ▀ █▄▄▄▄▄▄▄██
██▄ ▀ ▀▀▄ ▀ ▄███ ▄▄█▄ ▀██
████▄ █ ▄▄ █▄▀▄▄███ ▄▀ ██
██████▄█▄▄▀  ▀▄█▄▀ █▀█▀██
██ ▄▄▄▄▄ █▄  ▀▀ █ ▀▄▄▄███
██ █   █ █▀▄▀ ██▄ ▄▀▀▀ ██
██ █▄▄▄█ █▀  █▄▀▀█▄█▄█▄██
██▄▄▄▄▄▄▄█▄█▄▄▄██▄█▄█▄███
▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
julia<span class="pl-k">&gt;</span> <span class="pl-c1">qrcode</span>(code) <span class="pl-c"><span class="pl-c">#</span> get the data of the QR Code</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">exportqrcode</span>(code, <span class="pl-s"><span class="pl-pds">"</span>qrcode.png<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> export to a file</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">qrwidth</span>(code) <span class="pl-c"><span class="pl-c">#</span> get the width of the QR Code</span></pre></div>
<p dir="auto">The show method of <code>QRCode</code> is a visual representation of the QR Code using
unicode characters <code>['█', '▀', '▄', ' ']</code>.</p>
<p dir="auto">Besides, animated QR code is supported in version 1.3+.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; exportqrcode([&quot;Hello world!&quot;, &quot;Hello Julia!&quot;], fps=2)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">exportqrcode</span>([<span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Hello Julia!<span class="pl-pds">"</span></span>], fps<span class="pl-k">=</span><span class="pl-c1">2</span>)</pre></div>
<blockquote>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/dcf09dab7c462f58ed04b4d0c81198f6bfa5f75b4fcea7f81d480969279c64a4/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6a756c6961696d616765732f5152436f646572732e6a6c406173736574732f68656c6c6f6a756c69612e676966"><img src="https://camo.githubusercontent.com/dcf09dab7c462f58ed04b4d0c81198f6bfa5f75b4fcea7f81d480969279c64a4/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6a756c6961696d616765732f5152436f646572732e6a6c406173736574732f68656c6c6f6a756c69612e676966" alt="QRCode2" data-animated-image="" data-canonical-src="https://cdn.jsdelivr.net/gh/juliaimages/QRCoders.jl@assets/hellojulia.gif" style="max-width: 100%;"></a></p>
</blockquote>
<p dir="auto">The keyword <code>fps</code> controls the frame rate of the animation.</p>
<h3 dir="auto"><a id="user-content-styles-of-qrcode" class="anchor" aria-hidden="true" href="#styles-of-qrcode"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Styles of QRCode</h3>
<blockquote>
<p dir="auto">This part is still under development, see <a href="https://github.com/JuliaImages/QRCoders.jl/issues/33" data-hovercard-type="issue" data-hovercard-url="/JuliaImages/QRCoders.jl/issues/33/hovercard">issue#33</a> for more information. Feel free to contribute or propose more ideas!</p>
</blockquote>
<p dir="auto">Plot an image inside a QRCode.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TestImages, ColorTypes, ImageTransformations
using QRCoders
oriimg = testimage(&quot;cameraman&quot;)
code = QRCode(&quot;Hello world!&quot;, version=16, width=4)
img = imresize(oriimg, 66, 66) .|&gt; Gray .|&gt; round .|&gt; Bool .|&gt; !
imageinqrcode(code, img; rate=0.9) |&gt; exportbitmat(&quot;qrcode-camera.png&quot;)"><pre><span class="pl-k">using</span> TestImages, ColorTypes, ImageTransformations
<span class="pl-k">using</span> QRCoders
oriimg <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>cameraman<span class="pl-pds">"</span></span>)
code <span class="pl-k">=</span> <span class="pl-c1">QRCode</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>, version<span class="pl-k">=</span><span class="pl-c1">16</span>, width<span class="pl-k">=</span><span class="pl-c1">4</span>)
img <span class="pl-k">=</span> <span class="pl-c1">imresize</span>(oriimg, <span class="pl-c1">66</span>, <span class="pl-c1">66</span>) <span class="pl-k">.|</span><span class="pl-k">&gt;</span> Gray <span class="pl-k">.|</span><span class="pl-k">&gt;</span> round <span class="pl-k">.|</span><span class="pl-k">&gt;</span> Bool <span class="pl-k">.|</span><span class="pl-k">&gt;</span> <span class="pl-k">!</span>
<span class="pl-c1">imageinqrcode</span>(code, img; rate<span class="pl-k">=</span><span class="pl-c1">0.9</span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">exportbitmat</span>(<span class="pl-s"><span class="pl-pds">"</span>qrcode-camera.png<span class="pl-pds">"</span></span>)</pre></div>
<blockquote>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/21f30a0108f2523daefbb7a249613bb5e6bea8d7832309a02fe586ed1983361a/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6a756c6961696d616765732f5152436f646572732e6a6c406173736574732f7172636f64652d63616d6572612e706e67"><img src="https://camo.githubusercontent.com/21f30a0108f2523daefbb7a249613bb5e6bea8d7832309a02fe586ed1983361a/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6a756c6961696d616765732f5152436f646572732e6a6c406173736574732f7172636f64652d63616d6572612e706e67" alt="cameraman" data-canonical-src="https://cdn.jsdelivr.net/gh/juliaimages/QRCoders.jl@assets/qrcode-camera.png" style="max-width: 100%;"></a></p>
</blockquote>
<p dir="auto">Here <code>rate</code> is the damage rate of error correction codewords, it should be no greater than 1.</p>
<h3 dir="auto"><a id="user-content-parameters" class="anchor" aria-hidden="true" href="#parameters"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Parameters</h3>
<p dir="auto">There are some optional arguments.</p>
<p dir="auto">Keyword <code>width</code> with default value <code>0</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; qrcode(&quot;Hello world!&quot;, width=1)
23×23 BitMatrix:
 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
 0  1  1  1  1  1  1  1  0  1  1  1  1  1  0  1  1  1  1  1  1  1  0
 0  1  0  0  0  0  0  1  0  1  0  1  0  1  0  1  0  0  0  0  0  1  0
 ⋮              ⋮              ⋮              ⋮              ⋮     
 0  1  0  0  0  0  0  1  0  0  1  0  1  0  1  1  1  1  0  0  0  1  0
 0  1  1  1  1  1  1  1  0  1  0  1  1  0  1  1  1  0  0  1  0  0  0
 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">qrcode</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>, width<span class="pl-k">=</span><span class="pl-c1">1</span>)
<span class="pl-c1">23</span><span class="pl-k">×</span><span class="pl-c1">23</span> BitMatrix<span class="pl-k">:</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>
 ⋮              ⋮              ⋮              ⋮              ⋮     
 <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span></pre></div>
<p dir="auto">The QR Code will be surrounded by a white border of width <code>width</code>.</p>
<p dir="auto">Keywords <code>eclevel</code>, <code>version</code>, <code>mode</code> and <code>mask</code> in <code>qrcode</code>:</p>
<ol dir="auto">
<li>
<p dir="auto">Error correction level <code>eclevel</code> can be picked from four values <code>Low()</code>, <code>Medium()</code>, <code>Quartile()</code> or <code>High()</code>. Higher levels make denser QR codes.</p>
</li>
<li>
<p dir="auto">Version of the QR code <code>version</code> can be picked from 1 to 40. If the assigned version is too small to contain the message, the first available version is used.</p>
</li>
<li>
<p dir="auto">Encoding mode <code>mode</code> can be picked from five values: <code>Numeric()</code>, <code>Alphanumeric()</code>, <code>Byte()</code>, <code>Kanji()</code> or <code>UTF8()</code>. If the assigned <code>mode</code> is failed to contain the message, it will be picked automatically.</p>
</li>
<li>
<p dir="auto">Mask pattern <code>mask</code> can be picked from 0 to 7. If the assigned <code>mask</code> is not valid, it will be picked automatically.</p>
</li>
</ol>
<p dir="auto">Keywords in <code>qrcode</code> are also available in <code>exportqrcode</code>. Moreover, a new keyword <code>pixels</code> is used to control the size of the exported image.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; exportqrcode(&quot;Hello world!&quot;, &quot;img/hello.png&quot;, pixels = 160, width = 0)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">exportqrcode</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello world!<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>img/hello.png<span class="pl-pds">"</span></span>, pixels <span class="pl-k">=</span> <span class="pl-c1">160</span>, width <span class="pl-k">=</span> <span class="pl-c1">0</span>)</pre></div>
<p dir="auto">This file will be saved as <code>./img/hello.png</code> (if the <code>img</code> directory already exists), have a size of (approximately) 160 centimeters and be compact.</p>
<blockquote>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/44619ad1b9f44048ffa1e2008ff0f40d19926ea2f98eac804360c60f91e9476f/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6a756c6961696d616765732f5152436f646572732e6a6c406173736574732f68656c6c6f2e706e67"><img src="https://camo.githubusercontent.com/44619ad1b9f44048ffa1e2008ff0f40d19926ea2f98eac804360c60f91e9476f/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6a756c6961696d616765732f5152436f646572732e6a6c406173736574732f68656c6c6f2e706e67" alt="QRCode2" data-canonical-src="https://cdn.jsdelivr.net/gh/juliaimages/QRCoders.jl@assets/hello.png" style="max-width: 100%;"></a></p>
</blockquote>
<h2 dir="auto"><a id="user-content-about-qrcode" class="anchor" aria-hidden="true" href="#about-qrcode"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>About QRCode</h2>
<h3 dir="auto"><a id="user-content-error-correction-level" class="anchor" aria-hidden="true" href="#error-correction-level"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Error Correction Level</h3>
<p dir="auto">QR Codes can be encoded with four error correction levels <code>Low</code>, <code>Medium</code>, <code>Quartile</code> and <code>High</code>. Error correction can restore missing data from the QR code.</p>
<ul dir="auto">
<li><code>Low</code> can restore up to 7% of missing codewords.</li>
<li><code>Medium</code> can restore up to 15% of missing codewords.</li>
<li><code>Quartile</code> can restore up to 25% of missing codewords.</li>
<li><code>High</code> can restore up to 30% of missing codewords.</li>
</ul>
<p dir="auto">The four levels are encoded as types in <code>QRCoders.jl</code>, grouped under the abstract type <code>ErrCorrLevel</code>. Don't forget to use parentheses when you call the values: <code>qrcode("Hello", eclevel = High())</code>.</p>
<h3 dir="auto"><a id="user-content-encoding-modes" class="anchor" aria-hidden="true" href="#encoding-modes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Encoding Modes</h3>
<p dir="auto">QR Codes can encode data using several encoding schemes. <code>QRCoders.jl</code> supports five of them: <code>Numeric</code>, <code>Alphanumeric</code>, <code>Kanji</code>, <code>Byte</code> and <code>UTF8</code>.</p>
<p dir="auto"><code>Numeric</code> is used for messages composed of digits only, <code>Alphanumeric</code> for messages composed of digits, characters <code>A</code>-<code>Z</code> (capital only) space and <code>%</code> <code>*</code> <code>+</code> <code>-</code> <code>.</code> <code>/</code> <code>:</code> <code>\$</code>, <code>Kanji</code> for kanji for Shift JIS(Shift Japanese Industrial Standards) characters, <code>Bytes</code> for messages composed of one-byte characters(including undefined characters), and <code>UTF8</code> for messages composed of Unicode characters.</p>
<p dir="auto">Please note that QR Code reader don't always support arbitrary UTF-8 characters.</p>
<p dir="auto">Another thing to point out is that, for <code>Byte</code> mode, we allow the use of undefined characters(Unicode range from 0x7f to 0x9f), following the original setting in QRCode.jl. For example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; exportqrcode(join(Char.(0x80:0x9f)))"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">exportqrcode</span>(<span class="pl-c1">join</span>(<span class="pl-c1">Char</span>.(<span class="pl-c1">0x80</span><span class="pl-k">:</span><span class="pl-c1">0x9f</span>)))</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/62223937/190864667-0b24f7ad-e905-453d-a6fe-4d7d6d9feb15.png"><img src="https://user-images.githubusercontent.com/62223937/190864667-0b24f7ad-e905-453d-a6fe-4d7d6d9feb15.png" alt="qrcode" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgments</h2>
<p dir="auto"><code>QRCoders.jl</code> was built following this <a href="https://www.thonky.com/qr-code-tutorial/" rel="nofollow">excellent tutorial</a>.</p>
<p dir="auto">The original repository <a href="https://github.com/JuliaImages/QRCode.jl">QRCode.jl</a> was created during the <a href="https://groups.oist.jp/grad/skill-pill-67" rel="nofollow">Efficient Scientific Computing with Julia</a> workshop, taught by <a href="https://github.com/vchuravy">Valentin Churavy</a> at the <a href="https://www.oist.jp" rel="nofollow">Okinawa Institute of Science and Technology</a> in July 2019. <a href="https://github.com/JuliaLabs/Workshop-OIST">Slides available here</a>.</p>
<p dir="auto">The current version QRCoders.jl(≥v1.0.0) is proposed as part of the <a href="https://summer-ospp.ac.cn/" rel="nofollow">OSPP'2022 project</a>.</p>

</article></div>