<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-fractionalgaussianfields" class="anchor" aria-hidden="true" href="#fractionalgaussianfields"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FractionalGaussianFields</h1>
<p>Provides tools for simulating Gaussian free fields and other fractional Gaussian fields</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using AsyPlots, FractionalGaussianFields
plot(zeroboundary(torus_gff(20)))
"><pre><span class="pl-k">using</span> AsyPlots, FractionalGaussianFields
<span class="pl-c1">plot</span>(<span class="pl-c1">zeroboundary</span>(<span class="pl-c1">torus_gff</span>(<span class="pl-c1">20</span>)))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/gff20.png"><img src="images/gff20.png" alt="" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using AsyPlots, FractionalGaussianFields
n = 250
h = zeroboundary(torus_gff(n))
κ = 3
χ = 2/sqrt(κ) - sqrt(κ)/2
z0 = (n+1)/2 + im*(n+1)/2
L = 40
C = Colors.colormap(&quot;Blues&quot;,L)
cairo() # the Cairo backend to AsyPlots is faster
Plot([Path(flowline(h, z0, χ, θ),color=c) for (θ,c) in
		       zip(range(0,2π,length=L),C)],bgcolor=&quot;Black&quot;,border=0)
"><pre><span class="pl-k">using</span> AsyPlots, FractionalGaussianFields
n <span class="pl-k">=</span> <span class="pl-c1">250</span>
h <span class="pl-k">=</span> <span class="pl-c1">zeroboundary</span>(<span class="pl-c1">torus_gff</span>(n))
κ <span class="pl-k">=</span> <span class="pl-c1">3</span>
χ <span class="pl-k">=</span> <span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">sqrt</span>(κ) <span class="pl-k">-</span> <span class="pl-c1">sqrt</span>(κ)<span class="pl-k">/</span><span class="pl-c1">2</span>
z0 <span class="pl-k">=</span> (n<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span> <span class="pl-k">+</span> im<span class="pl-k">*</span>(n<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>
L <span class="pl-k">=</span> <span class="pl-c1">40</span>
C <span class="pl-k">=</span> Colors<span class="pl-k">.</span><span class="pl-c1">colormap</span>(<span class="pl-s"><span class="pl-pds">"</span>Blues<span class="pl-pds">"</span></span>,L)
<span class="pl-c1">cairo</span>() <span class="pl-c"><span class="pl-c">#</span> the Cairo backend to AsyPlots is faster</span>
<span class="pl-c1">Plot</span>([<span class="pl-c1">Path</span>(<span class="pl-c1">flowline</span>(h, z0, χ, θ),color<span class="pl-k">=</span>c) <span class="pl-k">for</span> (θ,c) <span class="pl-k">in</span>
		       <span class="pl-c1">zip</span>(<span class="pl-c1">range</span>(<span class="pl-c1">0</span>,<span class="pl-c1">2</span>π,length<span class="pl-k">=</span>L),C)],bgcolor<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Black<span class="pl-pds">"</span></span>,border<span class="pl-k">=</span><span class="pl-c1">0</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/flowlines.png"><img src="images/flowlines.png" alt="" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using AsyPlots, FractionalGaussianFields
P = [(1+cos(8θ)/8)*cis(θ) for θ=range(0,2π,length=500)]
loop = Path(P).points
n = 200
Δvals(i,j) = (i,j) == (120,120) ? 1 : 0
bvals(i,j) = 0 
G = domainapprox(loop,n)
laplacesurface(G,Δvals,bvals)
"><pre><span class="pl-k">using</span> AsyPlots, FractionalGaussianFields
P <span class="pl-k">=</span> [(<span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">cos</span>(<span class="pl-c1">8</span>θ)<span class="pl-k">/</span><span class="pl-c1">8</span>)<span class="pl-k">*</span><span class="pl-c1">cis</span>(θ) <span class="pl-k">for</span> θ<span class="pl-k">=</span><span class="pl-c1">range</span>(<span class="pl-c1">0</span>,<span class="pl-c1">2</span>π,length<span class="pl-k">=</span><span class="pl-c1">500</span>)]
loop <span class="pl-k">=</span> <span class="pl-c1">Path</span>(P)<span class="pl-k">.</span>points
n <span class="pl-k">=</span> <span class="pl-c1">200</span>
<span class="pl-en">Δvals</span>(i,j) <span class="pl-k">=</span> (i,j) <span class="pl-k">==</span> (<span class="pl-c1">120</span>,<span class="pl-c1">120</span>) <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>
<span class="pl-en">bvals</span>(i,j) <span class="pl-k">=</span> <span class="pl-c1">0</span> 
G <span class="pl-k">=</span> <span class="pl-c1">domainapprox</span>(loop,n)
<span class="pl-c1">laplacesurface</span>(G,Δvals,bvals)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/flower.png"><img src="images/flower.png" alt="" style="max-width:100%;"></a></p>
</article></div>