<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/poldavezac/BokehServer.jl/actions/workflows/ci.yml/badge.svg?develop"><img src="https://github.com/poldavezac/BokehServer.jl/actions/workflows/ci.yml/badge.svg?develop" alt="Continuous Integration" style="max-width: 100%;"></a>
<a href="https://poldavezac.github.io/BokehServer.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev Documentation" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-pythons-bokeh-library-in-julia" class="anchor" aria-hidden="true" href="#pythons-bokeh-library-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Python's <em>Bokeh</em> library in Julia</h1>
<h2 dir="auto"><a id="user-content-goals" class="anchor" aria-hidden="true" href="#goals"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Goals</h2>
<p dir="auto">This packages provides a server for the <em>bokehjs</em> libary:</p>
<ul dir="auto">
<li>It allows creating plots in a notebook cell <em>and</em> updating them in another.</li>
<li>It also allows publishing web apps, just as <em>Bokeh</em> does.</li>
</ul>
<p dir="auto">The package relies extensively on the
<a href="https://docs.bokeh.org/en/latest/index.html" rel="nofollow"><em>Bokeh</em></a> library. The latter is a
python web server together with a javascript client. This package rewrites the
python server in julia and reuses the javascript part as is. This package's API
is loosely similar to its python counterpart.</p>
<h2 dir="auto"><a id="user-content-using-our-plots-backend" class="anchor" aria-hidden="true" href="#using-our-plots-backend"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using our Plots backend</h2>
<p dir="auto">The <code>Plots</code> package provides multiple backends. We created our own:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Plots
using BokehServer
bokeh()

plot([1, 2])"><pre><span class="pl-k">using</span> Plots
<span class="pl-k">using</span> BokehServer
<span class="pl-c1">bokeh</span>()

<span class="pl-c1">plot</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>])</pre></div>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">Examples are available in the <em>examples</em> directory. One such one would be</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using BokehServer

BokehServer.Plotting.serve() do
    fig = BokehServer.figure(x_axis_label = &quot;time&quot;, y_axis_label = &quot;energy&quot;)
    y   = rand(1:100, 100)
    BokehServer.line!(fig; y, color = :blue)
    BokehServer.scatter!(fig; y, color = :red)

    fig
end"><pre><span class="pl-k">using</span> BokehServer

BokehServer<span class="pl-k">.</span>Plotting<span class="pl-k">.</span><span class="pl-c1">serve</span>() <span class="pl-k">do</span>
    fig <span class="pl-k">=</span> BokehServer<span class="pl-k">.</span><span class="pl-c1">figure</span>(x_axis_label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>time<span class="pl-pds">"</span></span>, y_axis_label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>energy<span class="pl-pds">"</span></span>)
    y   <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>, <span class="pl-c1">100</span>)
    BokehServer<span class="pl-k">.</span><span class="pl-c1">line!</span>(fig; y, color <span class="pl-k">=</span> <span class="pl-c1">:blue</span>)
    BokehServer<span class="pl-k">.</span><span class="pl-c1">scatter!</span>(fig; y, color <span class="pl-k">=</span> <span class="pl-c1">:red</span>)

    fig
<span class="pl-k">end</span></pre></div>
<p dir="auto">** Note ** Within a notebook, one needs a cell to return <code>BokehServer.Embeddings.notebook()</code>
for plots to be displayed and typescript &lt;-&gt; julia synchronisation to occur:</p>
<p dir="auto">In the first cell, do:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using BokehServer
BokehServer.Embeddings.notebook(port = 7788)"><pre class="notranslate"><code>using BokehServer
BokehServer.Embeddings.notebook(port = 7788)
</code></pre></div>
<p dir="auto">Then another can contain</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="&quot;A simple plot&quot;
FIG = BokehServer.line(; x = 1:10, y = 1:10)

&quot;The data source used by the plot&quot;
DATA = FIG.renderers[1].data_source

&quot;A button which adds a datapoint when clicked&quot;
BTN = let btn = BokehServer.Button(; label = &quot;add a data point&quot;)

    # Note that the `onchange` call only reacts to `ButtonClick` events
    BokehServer.onchange(btn) do evt::BokehServer.ButtonClick
        BokehServer.stream!(
            DATA,
            Dict(&quot;x&quot; =&gt; [length(DATA.data[&quot;x&quot;])+1], &quot;y&quot; =&gt; [rand(1:10)])
        )
    end
    btn
end

&quot;A display with both the plot and the button&quot;
BokehServer.layout([FIG, BTN])"><pre><span class="pl-s"><span class="pl-pds">"</span>A simple plot<span class="pl-pds">"</span></span>
FIG <span class="pl-k">=</span> BokehServer<span class="pl-k">.</span><span class="pl-c1">line</span>(; x <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>, y <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>)

<span class="pl-s"><span class="pl-pds">"</span>The data source used by the plot<span class="pl-pds">"</span></span>
DATA <span class="pl-k">=</span> FIG<span class="pl-k">.</span>renderers[<span class="pl-c1">1</span>]<span class="pl-k">.</span>data_source

<span class="pl-s"><span class="pl-pds">"</span>A button which adds a datapoint when clicked<span class="pl-pds">"</span></span>
BTN <span class="pl-k">=</span> <span class="pl-k">let</span> btn <span class="pl-k">=</span> BokehServer<span class="pl-k">.</span><span class="pl-c1">Button</span>(; label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>add a data point<span class="pl-pds">"</span></span>)

    <span class="pl-c"><span class="pl-c">#</span> Note that the `onchange` call only reacts to `ButtonClick` events</span>
    BokehServer<span class="pl-k">.</span><span class="pl-c1">onchange</span>(btn) <span class="pl-k">do</span> evt<span class="pl-k">::</span><span class="pl-c1">BokehServer.ButtonClick</span>
        BokehServer<span class="pl-k">.</span><span class="pl-c1">stream!</span>(
            DATA,
            <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">length</span>(DATA<span class="pl-k">.</span>data[<span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-pds">"</span></span>])<span class="pl-k">+</span><span class="pl-c1">1</span>], <span class="pl-s"><span class="pl-pds">"</span>y<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">rand</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>)])
        )
    <span class="pl-k">end</span>
    btn
<span class="pl-k">end</span>

<span class="pl-s"><span class="pl-pds">"</span>A display with both the plot and the button<span class="pl-pds">"</span></span>
BokehServer<span class="pl-k">.</span><span class="pl-c1">layout</span>([FIG, BTN])</pre></div>
<h2 dir="auto"><a id="user-content-bokeh--bokehserver-differences" class="anchor" aria-hidden="true" href="#bokeh--bokehserver-differences"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><em>Bokeh</em> / <em>BokehServer</em> differences</h2>
<ul dir="auto">
<li>This package provdes all models already existing in <em>Bokeh</em> and <em>bokehjs</em>.
This is done by programmatically parsing the python <em>Bokeh</em> and creating our
own code. Hopefully further <em>Bokeh</em> versions will not affect this too much.</li>
<li>This package should work out-of-the-box both with <code>IJulia</code> and <code>Pluto</code>.</li>
<li>Because <code>end</code> is a julia keyword, all class attributes starting with <code>end</code> in
<em>Bokeh</em> start with <code>finish</code> in <em>BokehServer</em>. The protocol hides this from the
<em>bokehjs</em> library.</li>
<li>This package does not yet have a mechanism for adding custom classes with
their typescript code.</li>
<li>This package does not deliver a full web server. There is no authentification mechanism, for example.
The package does provide routes and a bare-bone web server. The idea is rather to have users add the routes
to their own server rather than use this package's.</li>
<li>This package does not provide a <code>bokeh</code> executable. Rather, the user should
call <code>BokehServer.Plotting.server(f)</code> where <code>f</code> must return the <code>BokehServer</code> layout
instance, say one plot. Check the doc on <code>BokehServer.serve</code> for other options.</li>
</ul>
<h2 dir="auto"><a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related projects</h2>
<p dir="auto"><a href="https://github.com/cjdoris/Bokeh.jl">Another bokeh in julia</a> is the same idea,
created more or less at the same time. To the best of my understanding, with my
appologies if I'm wrong, it does not provide <em>Julia</em> &lt;-&gt; <em>javascript</em>
synchronisation: static HTML pages only.</p>
</article></div>