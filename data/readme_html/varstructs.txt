<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-varstructs" class="anchor" aria-hidden="true" href="#varstructs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>VarStructs</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/aminya/VarStructs.jl/workflows/CI/badge.svg"><img src="https://github.com/aminya/VarStructs.jl/workflows/CI/badge.svg" alt="CI" style="max-width:100%;"></a></p>
<h1><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h1>
<p>VarStructs are similar to struct but have extra features:</p>
<ul>
<li>You can add fields after their definition.</li>
<li>They can be defined inside a function or a local scope.</li>
<li>They can be redefined.</li>
</ul>
<p>Similar to structs</p>
<ul>
<li>They can be used for dispatching</li>
<li>They can have custom constructors</li>
<li>They have type conversion/checking for the fields that are declared</li>
</ul>
<h1><a id="user-content-install-and-usage" class="anchor" aria-hidden="true" href="#install-and-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Install and Usage</h1>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>VarStructs<span class="pl-pds">"</span></span>)</pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VarStructs</pre></div>
<h1><a id="user-content-declaration" class="anchor" aria-hidden="true" href="#declaration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Declaration</h1>
<p>There are two ways to declare them:</p>
<h2><a id="user-content-struct-syntax" class="anchor" aria-hidden="true" href="#struct-syntax"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Struct Syntax</h2>
<p>In this syntax, providing initial values and types for the fields are optional.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">@var</span> <span class="pl-k">struct</span> Animal
    name<span class="pl-k">::</span><span class="pl-c1">String</span>
    number<span class="pl-k">::</span><span class="pl-c1">Int64</span>
<span class="pl-k">end</span></pre></div>
<h2><a id="user-content-call-syntax" class="anchor" aria-hidden="true" href="#call-syntax"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Call Syntax</h2>
<p>In this syntax, you <strong>should</strong> provide the initial values for the fields. Providing type for the fields are optional (if not provided, it is considered as <code>Any</code>).</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">@var</span> <span class="pl-c1">Person</span>(
        name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Amin<span class="pl-pds">"</span></span>,
        number<span class="pl-k">::</span><span class="pl-c1">Float64</span> <span class="pl-k">=</span> <span class="pl-c1">20.0</span>,
    )</pre></div>
<h1><a id="user-content-getting-an-instance" class="anchor" aria-hidden="true" href="#getting-an-instance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Getting an Instance</h1>
<p>Use the following syntax for getting an instance:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> person <span class="pl-k">=</span> <span class="pl-c1">Person</span>(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Amin<span class="pl-pds">"</span></span>, number <span class="pl-k">=</span> <span class="pl-c1">20.0</span>)
<span class="pl-c1">Person</span>(
    name<span class="pl-k">::</span><span class="pl-c1">Any</span> <span class="pl-k">=</span> Amin,       
    number<span class="pl-k">::</span><span class="pl-c1">Float64</span> <span class="pl-k">=</span> <span class="pl-c1">20.0</span>,
)

<span class="pl-c"><span class="pl-c">#</span> Type conversion for the fields that were declared</span>
julia<span class="pl-k">&gt;</span> person2 <span class="pl-k">=</span> <span class="pl-c1">Person</span>(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Amin<span class="pl-pds">"</span></span>, number <span class="pl-k">=</span> <span class="pl-c1">20</span>)  <span class="pl-c"><span class="pl-c">#</span> number is converted to Float64</span>
<span class="pl-c1">Person</span>(
    name<span class="pl-k">::</span><span class="pl-c1">Any</span> <span class="pl-k">=</span> Amin,       
    number<span class="pl-k">::</span><span class="pl-c1">Float64</span> <span class="pl-k">=</span> <span class="pl-c1">20.0</span>,
)

<span class="pl-c"><span class="pl-c">#</span> Type checking for the fields that were declared</span>
julia<span class="pl-k">&gt;</span> person2 <span class="pl-k">=</span> <span class="pl-c1">Person</span>(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Amin<span class="pl-pds">"</span></span>, number <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>20<span class="pl-pds">"</span></span>)
ERROR<span class="pl-k">:</span> MethodError<span class="pl-k">:</span> Cannot <span class="pl-s"><span class="pl-pds">`</span>convert<span class="pl-pds">`</span></span> an object of type String to an object of type Float64

<span class="pl-c"><span class="pl-c">#</span> new field added</span>
julia<span class="pl-k">&gt;</span> person2 <span class="pl-k">=</span> <span class="pl-c1">Person</span>(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Amin<span class="pl-pds">"</span></span>, number <span class="pl-k">=</span> <span class="pl-c1">20.0</span>, initial <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>T<span class="pl-pds">"</span></span>)
<span class="pl-c1">Person</span>(
    initial<span class="pl-k">::</span><span class="pl-c1">String</span> <span class="pl-k">=</span> T,    
    name<span class="pl-k">::</span><span class="pl-c1">Any</span> <span class="pl-k">=</span> Amin,       
    number<span class="pl-k">::</span><span class="pl-c1">Float64</span> <span class="pl-k">=</span> <span class="pl-c1">20.0</span>,
)</pre></div>
<p>The two syntaxes that are used for declaration also return an instance of the VarStruct. So if you need an instance right away, you can use the following. Note that in redeclaration you will not get type checking based on the previous declaration.</p>
<div class="highlight highlight-source-julia"><pre>animal <span class="pl-k">=</span> <span class="pl-c1">@var</span> <span class="pl-c1">Animal</span>(
        name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>lion<span class="pl-pds">"</span></span>,
        number<span class="pl-k">::</span><span class="pl-c1">Int64</span> <span class="pl-k">=</span> <span class="pl-c1">10</span>,
    )

<span class="pl-c"><span class="pl-c">#</span> redefinition of `Animal` returns a new instance:</span>
animal2 <span class="pl-k">=</span> <span class="pl-c1">@var</span> <span class="pl-c1">Animal</span>(
        name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>dog<span class="pl-pds">"</span></span>,
        number<span class="pl-k">::</span><span class="pl-c1">Int64</span> <span class="pl-k">=</span> <span class="pl-c1">1</span>,
    )</pre></div>
<h1><a id="user-content-accessing-setting-adding-fields" class="anchor" aria-hidden="true" href="#accessing-setting-adding-fields"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Accessing, Setting, Adding Fields</h1>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Accessing</span>
julia<span class="pl-k">&gt;</span> person<span class="pl-k">.</span>name
<span class="pl-s"><span class="pl-pds">"</span>Amin<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> Setting</span>
julia<span class="pl-k">&gt;</span> person<span class="pl-k">.</span>name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Tim<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> Adding Fields</span>
julia<span class="pl-k">&gt;</span> person<span class="pl-k">.</span>initial <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>T<span class="pl-pds">"</span></span>
</pre></div>
<h1><a id="user-content-dispatch" class="anchor" aria-hidden="true" href="#dispatch"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Dispatch</h1>
<p><code>info</code> function dispatch for <code>Person</code> and <code>Animal</code> type:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> <span class="pl-en">info</span>(x<span class="pl-k">::</span><span class="pl-c1">Person</span>)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Their home is city<span class="pl-pds">"</span></span>)
    <span class="pl-k">return</span> x<span class="pl-k">.</span>name
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">info</span>(x<span class="pl-k">::</span><span class="pl-c1">Animal</span>)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Their home is jungle<span class="pl-pds">"</span></span>)
    <span class="pl-k">return</span> x<span class="pl-k">.</span>name
<span class="pl-k">end</span></pre></div>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">info</span>(person)
<span class="pl-s"><span class="pl-pds">"</span>Their home is city<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds">"</span>Amin<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">info</span>(animal)
<span class="pl-s"><span class="pl-pds">"</span>Their home is jungle<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds">"</span>lion<span class="pl-pds">"</span></span></pre></div>
<h1><a id="user-content-custom-constructor" class="anchor" aria-hidden="true" href="#custom-constructor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Custom Constructor</h1>
<p>To define a custom constructor return an instance using keyword method:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> <span class="pl-en">Person</span>(name, number)
    <span class="pl-k">return</span> <span class="pl-c1">Person</span>(
        name <span class="pl-k">=</span> name,
        number <span class="pl-k">=</span> number,
        initial <span class="pl-k">=</span> name[<span class="pl-c1">1</span>],
    )
<span class="pl-k">end</span>

<span class="pl-c1">Person</span>(<span class="pl-s"><span class="pl-pds">"</span>Amin<span class="pl-pds">"</span></span>, <span class="pl-c1">20.0</span>)</pre></div>
<p>This type will be used in the developing of a package called JuliaSON which aims to provide data serialization with Julia syntax.</p>
</article></div>