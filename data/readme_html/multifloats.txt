<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-multifloatsjl" class="anchor" aria-hidden="true" href="#multifloatsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MultiFloats.jl</h1>
<h4><a id="user-content-copyright--2019-2020-by-david-k-zhang-released-under-the-mit-license" class="anchor" aria-hidden="true" href="#copyright--2019-2020-by-david-k-zhang-released-under-the-mit-license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Copyright © 2019-2020 by David K. Zhang. Released under the <a href="https://github.com/dzhang314/MultiFloats.jl/blob/master/LICENSE">MIT License</a>.</h4>
<p><strong>MultiFloats.jl</strong> is a Julia package for extended-precision floating-point arithmetic using 100–400 accurate bits (≈30–120 accurate digits). In this range, it is by far the <strong>fastest</strong> extended-precision floating-point library that the author is aware of. At 100-bit precision, <strong>MultiFloats.jl</strong> is roughly <strong>40x faster than <a href="https://docs.julialang.org/en/v1/manual/integers-and-floating-point-numbers/#Arbitrary-Precision-Arithmetic" rel="nofollow"><code>Base.BigFloat</code></a></strong> and <strong>2x faster than <a href="https://github.com/JuliaMath/DoubleFloats.jl">DoubleFloats.jl</a></strong>.</p>
<p><strong>MultiFloats.jl</strong> achieves this speed by performing arithmetic with native <code>Float64</code> operations using immutable data structures that do not dynamically allocate memory. It stores extended-precision numbers in the <a href="https://en.wikipedia.org/wiki/Quadruple-precision_floating-point_format#Double-double_arithmetic" rel="nofollow">double-double representation</a>, generalized to an arbitrary number of components. This idea takes inspiration from Jonathan Shewchuk's work on <a href="http://dx.doi.org/10.1007/pl00009321" rel="nofollow">adaptive-precision floating-point arithmetic</a> and Yozo Hida/Xiaoye Li/David Bailey's <a href="https://doi.org/10.1109/ARITH.2001.930115" rel="nofollow">algorithms for quad-double arithmetic</a>, combined in a novel fashion with Julia's unique JIT architecture and metaprogramming capabilities.</p>
<p><strong>MultiFloats.jl</strong> currently provides basic arithmetic operations (<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>sqrt</code>), comparison operators (<code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>), and floating-point introspection methods (<code>isfinite</code>, <code>eps</code>, <code>minfloat</code>, etc.). Work on trigonometric functions, exponentials, and logarithms is currently in progress.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p><strong>MultiFloats.jl</strong> provides the types <strong><code>Float64x2</code></strong>, <strong><code>Float64x3</code></strong>, ..., <strong><code>Float64x8</code></strong> representing extended-precision numbers with 2x, 3x, ..., 8x the precision of <strong><code>Float64</code></strong>. These are all instances of the parametric type <strong><code>MultiFloat{T,N}</code></strong>, where <strong><code>T = Float64</code></strong> and <b><code>N = 2, 3, ..., 8</code></b>.</p>
<p>Instances of <strong><code>Float64x2</code></strong>, <strong><code>Float64x3</code></strong>, ..., <strong><code>Float64x8</code></strong> are convertible to and from <strong><code>Float64</code></strong> and <strong><code>BigFloat</code></strong>, as shown in the following example.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MultiFloats

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">Float64x4</span>(<span class="pl-c1">2.0</span>)

julia<span class="pl-k">&gt;</span> y <span class="pl-k">=</span> <span class="pl-c1">sqrt</span>(x)
<span class="pl-c1">1.41421356237309504880168872420969807856967187537694807317667973799</span>

julia<span class="pl-k">&gt;</span> y <span class="pl-k">*</span> y <span class="pl-k">-</span> x
<span class="pl-k">-</span><span class="pl-c1">1.1566582006914837e-66</span></pre></div>
<p>A comparison with <code>sqrt(BigFloat(2))</code> reveals that all displayed digits are correct in this example.</p>
<p><sup>Note: <strong>MultiFloats.jl</strong> also provides a <code>Float64x1</code> type that has the same precision as <code>Float64</code>, but behaves like <code>Float64x2</code>–<code>Float64x8</code> in terms of supported operations. This is occasionally useful for testing, since any code that works for <code>Float64x1</code> should also work for <code>Float64x2</code>–<code>Float64x8</code> and vice versa.</sup></p>
<h2><a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Benchmarks</h2>
<p>Two basic linear algebra tasks are used below to compare the performance of extended-precision floating-point libraries:</p>
<ul>
<li>QR factorization of a random 400×400 matrix</li>
<li>Computing the pseudoinverse of a random 400×250 matrix (using <strong><a href="https://github.com/JuliaLinearAlgebra/GenericSVD.jl">GenericSVD.jl</a></strong>)</li>
</ul>
<p><a href="https://gist.github.com/dzhang314/3e10463843f4ab5f5a4a2206c877771b">See benchmark code here.</a> The timings reported below are averages of 10 runs performed under identical conditions on an Intel Core i7-8650U (Surface Book 2 13.5").</p>
<table>
<thead>
<tr>
<th></th>
<th>MultiFloats <code>Float64x2</code></th>
<th>Julia Base <code>BigFloat</code></th>
<th>ArbNumerics <code>ArbFloat</code></th>
<th>Decimals <code>Decimal</code></th>
<th>DecFP <code>Dec128</code></th>
<th>DoubleFloats <code>Double64</code></th>
<th>Quadmath <code>Float128</code></th>
</tr>
</thead>
<tbody>
<tr>
<td>400×400 <code>qr</code> time</td>
<td><strong>0.257 sec</strong></td>
<td>10.303 sec <strong>(40x slower)</strong></td>
<td>17.871 sec <strong>(69x slower)</strong></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji> Error</td>
<td>9.448 sec <strong>(36x slower)</strong></td>
<td>0.535 sec <strong>(2x slower)</strong></td>
<td>2.403 sec <strong>(9x slower)</strong></td>
</tr>
<tr>
<td>accurate digits</td>
<td>26.0</td>
<td>25.9</td>
<td>25.9</td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji> Error</td>
<td>27.6</td>
<td>26.1</td>
<td>28.1</td>
</tr>
<tr>
<td>400×250 <code>pinv</code> time</td>
<td><strong>1.709 sec</strong></td>
<td>96.655 sec <strong>(56x slower)</strong></td>
<td>133.085 sec <strong>(77x slower)</strong></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji> Error</td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji> Error</td>
<td>3.668 sec <strong>(2x slower)</strong></td>
<td>15.576 sec <strong>(9x slower)</strong></td>
</tr>
<tr>
<td>accurate digits</td>
<td>25.6</td>
<td>25.8</td>
<td>25.8</td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji> Error</td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji> Error</td>
<td>25.4</td>
<td>27.9</td>
</tr>
</tbody>
</table>
<h2><a id="user-content-feature-comparison" class="anchor" aria-hidden="true" href="#feature-comparison"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Feature Comparison</h2>
<table>
<thead>
<tr>
<th></th>
<th>MultiFloats</th>
<th>BigFloat</th>
<th>ArbNumerics</th>
<th>Decimals</th>
<th>DecFP</th>
<th>DoubleFloats</th>
<th>Quadmath</th>
</tr>
</thead>
<tbody>
<tr>
<td>user-selectable precision</td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
</tr>
<tr>
<td>avoids dynamic memory allocation</td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png">⚠️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
</tr>
<tr>
<td>basic arithmetic <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>sqrt</code></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
</tr>
<tr>
<td>transcendental functions <code>sin</code>, <code>cos</code>, <code>exp</code>, <code>log</code></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji> (WIP)</td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
</tr>
<tr>
<td>compatible with <strong><a href="https://github.com/JuliaLinearAlgebra/GenericSVD.jl">GenericSVD.jl</a></strong></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
</tr>
<tr>
<td>floating-point introspection <code>minfloat</code>, <code>eps</code></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
</tr>
</tbody>
</table>
</article></div>