<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-simplexpoly" class="anchor" aria-hidden="true" href="#simplexpoly"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SimplexPoly</h1>
<p>Provide various operations of polynomials and polynomial differential
forms that live on simplices.</p>
<ul>
<li><a href="https://eschnett.github.io/SimplexPoly.jl/dev/" rel="nofollow">Documentation</a>: Future
documentation</li>
<li><a href="https://github.com/eschnett/SimplexPoly.jl">GitHub</a>: Source code repository</li>
<li><a href="https://github.com/eschnett/SimplexPoly.jl/actions"><img src="https://github.com/eschnett/SimplexPoly.jl/workflows/CI/badge.svg" alt="GitHub CI" style="max-width:100%;"></a></li>
<li><a href="https://codecov.io/gh/eschnett/SimplexPoly.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/af04633a2a78686dcaddcd46d336250b7d0cb90f9bbebb4f0dd43f10dda37a96/68747470733a2f2f636f6465636f762e696f2f67682f657363686e6574742f53696d706c6578506f6c792e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/eschnett/SimplexPoly.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></li>
</ul>
<h2><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Overview</h2>
<p>This package provides three main datatypes:</p>
<ul>
<li><code>Poly{D,T}</code>: Polynomials of type <code>T</code> of <code>D</code> unknowns</li>
<li><code>Form{D,R,Poly{D,T}}</code>: Polynomial differential forms of rank <code>R</code></li>
<li><code>Basis{D,R,T}</code>: A basis for a subspace of polynomial differential
forms</li>
</ul>
<p>This packagae provides the usual arithmetic operations (scaling,
adding, multiplying) for polynomials, as well as derivative and
<a href="https://en.wikipedia.org/wiki/Koszul_complex" rel="nofollow">Koszul</a> operators. (The
Koszul operator is similar to an antiderivative.) For subspaces, there
is a function to determine whether a particular polynomial form is
contained in it.</p>
<p>Differential forms are handled via the package <code>DifferentialForms.jl</code>.</p>
<p>This package can also calculate the PᵣΛᵏ and Pᵣ⁻Λᵏ families of finite
elements for the <a href="https://en.wikipedia.org/wiki/Finite_element_exterior_calculus" rel="nofollow">Finite element exterior calculus
(FEEC)</a>.
See <a href="http://www-users.math.umn.edu/~arnold/femtable/" rel="nofollow">Periodic Table of the Finite
Elements</a> for an
overview, and <a href="https://www-users.math.umn.edu/~arnold/papers/periodic-table.pdf" rel="nofollow">Periodic Table of the Finite
Elements</a>
for some details.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<h3><a id="user-content-polynomial-complex-pᵣλᵏ" class="anchor" aria-hidden="true" href="#polynomial-complex-pᵣλᵏ"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Polynomial complex PᵣΛᵏ</h3>
<p>Polynomial complex PᵣΛᵏ for polynomial order r=2 in n=2 dimensions.
This complex consists of the spaces (P₂Λ⁰, P₁Λ¹, P₀Λ²) for scalars,
1-forms, and 2-forms, respectively. In this complex, higher rank forms
are represented via lower degree polynomials. All polynomials depend
on x and y.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using SimplexPoly

julia&gt; pc = polynomial_complex(Val(2), Int, 2);

julia&gt; pc[0]
Basis{2,0,Int64}[
    ⟦(1 * [0, 0])⟧,
    ⟦(1 * [0, 1])⟧,
    ⟦(1 * [0, 2])⟧,
    ⟦(1 * [1, 0])⟧,
    ⟦(1 * [1, 1])⟧,
    ⟦(1 * [2, 0])⟧]
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SimplexPoly

julia<span class="pl-k">&gt;</span> pc <span class="pl-k">=</span> <span class="pl-c1">polynomial_complex</span>(<span class="pl-c1">Val</span>(<span class="pl-c1">2</span>), Int, <span class="pl-c1">2</span>);

julia<span class="pl-k">&gt;</span> pc[<span class="pl-c1">0</span>]
Basis{<span class="pl-c1">2</span>,<span class="pl-c1">0</span>,Int64}[
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">2</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">1</span>, <span class="pl-c1">0</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">2</span>, <span class="pl-c1">0</span>])⟧]</pre></div>
<p>These are the basis elements for scalar functions. There are 6 basis
polynomials. The factor <code>1 *</code> can be ignored. The vectors describe the
polynomial terms, i.e. the (quadratic) polynomials are: 1, y, y², x,
xy, x².</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; pc[1]
Basis{2,1,Int64}[
    ⟦(), (1 * [0, 0])⟧,
    ⟦(), (1 * [0, 1])⟧,
    ⟦(), (1 * [1, 0])⟧,
    ⟦(1 * [0, 0]), ()⟧,
    ⟦(1 * [0, 1]), ()⟧,
    ⟦(1 * [1, 0]), ()⟧]
"><pre>julia<span class="pl-k">&gt;</span> pc[<span class="pl-c1">1</span>]
Basis{<span class="pl-c1">2</span>,<span class="pl-c1">1</span>,Int64}[
    ⟦(), (<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>])⟧,
    ⟦(), (<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>])⟧,
    ⟦(), (<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">1</span>, <span class="pl-c1">0</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>]), ()⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>]), ()⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">1</span>, <span class="pl-c1">0</span>]), ()⟧]</pre></div>
<p>These are the basis elements for 1-forms. Each basis element has two
components (for dx and dy). The 6 (linear) basis polynomials are: dy,
y dy, x dy, dx, y dx, x dx.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; pc[2]
Basis{2,2,Int64}[⟦(1 * [0, 0])⟧]
"><pre>julia<span class="pl-k">&gt;</span> pc[<span class="pl-c1">2</span>]
Basis{<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,Int64}[⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>])⟧]</pre></div>
<p>These is the basis element for 2-forms. The only (constant) basis
polynomial is: dx ∧ dy.</p>
<h3><a id="user-content-trimmed-polynomial-complex-pᵣλᵏ" class="anchor" aria-hidden="true" href="#trimmed-polynomial-complex-pᵣλᵏ"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Trimmed polynomial complex Pᵣ⁻Λᵏ</h3>
<p>Polynomial complex Pᵣ⁻Λᵏ for polynomial order r=2 in n=2 dimensions.
This complex consists of the spaces (P₂⁻Λ⁰, P₂⁻Λ¹, P₂⁻Λ²) for scalars,
1-forms, and 2-forms, respectively. In this complex, forms of all
ranks are represented via polynomials of approximately the same
degree. All polynomials depend on x and y.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using SimplexPoly

julia&gt; tpc = trimmed_polynomial_complex(Val(2), Int, 2);

julia&gt; tpc[0]
Basis{2,0,Int64}[
    ⟦(1 * [0, 0])⟧,
    ⟦(1 * [0, 1])⟧,
    ⟦(1 * [0, 2])⟧,
    ⟦(1 * [1, 0])⟧,
    ⟦(1 * [1, 1])⟧,
    ⟦(1 * [2, 0])⟧]
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SimplexPoly

julia<span class="pl-k">&gt;</span> tpc <span class="pl-k">=</span> <span class="pl-c1">trimmed_polynomial_complex</span>(<span class="pl-c1">Val</span>(<span class="pl-c1">2</span>), Int, <span class="pl-c1">2</span>);

julia<span class="pl-k">&gt;</span> tpc[<span class="pl-c1">0</span>]
Basis{<span class="pl-c1">2</span>,<span class="pl-c1">0</span>,Int64}[
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">2</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">1</span>, <span class="pl-c1">0</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">2</span>, <span class="pl-c1">0</span>])⟧]</pre></div>
<p>This is the same space as P₂Λ⁰ described above with the (quadratic)
polynomials: 1, y, y², x, xy, x².</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; tpc[1]
Basis{2,1,Int64}[
    ⟦(), (1 * [0, 0])⟧,
    ⟦(), (1 * [0, 1])⟧,
    ⟦(), (1 * [1, 0])⟧,
    ⟦(1 * [0, 0]), ()⟧,
    ⟦(1 * [0, 1]), ()⟧,
    ⟦(-1 * [0, 2]), (1 * [1, 1])⟧,
    ⟦(1 * [1, 0]), ()⟧,
    ⟦(-1 * [1, 1]), (1 * [2, 0])⟧]
"><pre>julia<span class="pl-k">&gt;</span> tpc[<span class="pl-c1">1</span>]
Basis{<span class="pl-c1">2</span>,<span class="pl-c1">1</span>,Int64}[
    ⟦(), (<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>])⟧,
    ⟦(), (<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>])⟧,
    ⟦(), (<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">1</span>, <span class="pl-c1">0</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>]), ()⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>]), ()⟧,
    ⟦(<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">2</span>]), (<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">1</span>, <span class="pl-c1">0</span>]), ()⟧,
    ⟦(<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]), (<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">2</span>, <span class="pl-c1">0</span>])⟧]</pre></div>
<p>These are the basis elements for 1-forms. Each basis element has two
components (for dx and dy). This space contains some, but not all
quadratic polynomials. The 8 basis polynomials are: dy, y dy, x dy,
dx, y dx, -x² dx + x y dy, x dx, - x y dx + y² dy.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; tpc[2]
Basis{2,2,Int64}[
    ⟦(1 * [0, 0])⟧,
    ⟦(1 * [0, 1])⟧,
    ⟦(1 * [1, 0])⟧]
"><pre>julia<span class="pl-k">&gt;</span> tpc[<span class="pl-c1">2</span>]
Basis{<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,Int64}[
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>])⟧,
    ⟦(<span class="pl-c1">1</span> <span class="pl-k">*</span> [<span class="pl-c1">1</span>, <span class="pl-c1">0</span>])⟧]</pre></div>
<p>These are the basis element for 2-forms. The 3 (linear) basis
polynomials are: dx ∧ dy, y dx ∧ dy, x dx ∧ dy.</p>
<h2><a id="user-content-related-work" class="anchor" aria-hidden="true" href="#related-work"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Related work</h2>
<p>See also <a href="https://github.com/JuliaMath/Polynomials.jl">https://github.com/JuliaMath/Polynomials.jl</a> and
<a href="https://github.com/scheinerman/SimplePolynomials.jl">https://github.com/scheinerman/SimplePolynomials.jl</a>; these support
only one-dimensional polynomials.</p>
</article></div>