<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-floops-foldl-for-humans" class="anchor" aria-hidden="true" href="#floops-foldl-for-humans"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FLoops: <code>foldl</code> for humansâ„¢</h1>
<p><a href="https://github.com/tkf/FLoops.jl/actions?query=workflow%3A%22Run+tests%22"><img src="https://github.com/tkf/FLoops.jl/workflows/Run%20tests/badge.svg" alt="GitHub Actions" style="max-width:100%;"></a></p>
<p><a href="https://github.com/tkf/FLoops.jl">FLoops.jl</a> provides a macro
<code>@floop</code>.  It can be used to generate a fast generic iteration over
complex collections.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Simply wrap a <code>for</code> loop and its initialization part by <code>@floop</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FLoops  <span class="pl-c"><span class="pl-c">#</span> exports @floop macro</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@floop</span> <span class="pl-k">begin</span>
           s <span class="pl-k">=</span> <span class="pl-c1">0</span>
           <span class="pl-k">for</span> x <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>
               s <span class="pl-k">+=</span> x
           <span class="pl-k">end</span>
       <span class="pl-k">end</span>
       s
<span class="pl-c1">6</span></pre></div>
<p>When accumulating into pre-defined variables, simply list them between
<code>begin</code> and <code>for</code>.  <code>@floop</code> also works with multiple accumulators.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@floop</span> <span class="pl-k">begin</span>
           s
           p <span class="pl-k">=</span> <span class="pl-c1">1</span>
           <span class="pl-k">for</span> x <span class="pl-k">in</span> <span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">5</span>
               s <span class="pl-k">+=</span> x
               p <span class="pl-k">*=</span> x
           <span class="pl-k">end</span>
       <span class="pl-k">end</span>
       s
<span class="pl-c1">15</span>

julia<span class="pl-k">&gt;</span> p
<span class="pl-c1">20</span></pre></div>
<p>The <code>begin ... end</code> block can be omitted if the <code>for</code> loop does not
require local variables to carry the state:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@floop</span> <span class="pl-k">for</span> x <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>
           <span class="pl-c1">@show</span> x
       <span class="pl-k">end</span>
x <span class="pl-k">=</span> <span class="pl-c1">1</span>
x <span class="pl-k">=</span> <span class="pl-c1">2</span>
x <span class="pl-k">=</span> <span class="pl-c1">3</span></pre></div>
<h2><a id="user-content-how-it-works" class="anchor" aria-hidden="true" href="#how-it-works"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>How it works</h2>
<p><code>@floop</code> works by converting the native Julia <code>for</code> loop syntax to
<code>foldl</code> defined by
<a href="https://github.com/tkf/Transducers.jl">Transducers.jl</a>.  Unlike
<code>foldl</code> defined in <code>Base</code>, <code>foldl</code> defined by Transducers.jl is
<a href="https://tkf.github.io/Transducers.jl/dev/manual/#Base.foreach" rel="nofollow">powerful enough to cover the <code>for</code> loop semantics and more</a>.</p>
<h2><a id="user-content-supported-syntaxes" class="anchor" aria-hidden="true" href="#supported-syntaxes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Supported syntaxes</h2>
<h3><a id="user-content-continue" class="anchor" aria-hidden="true" href="#continue"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>continue</code></h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@floop</span> <span class="pl-k">for</span> x <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>
           <span class="pl-k">if</span> x <span class="pl-k">==</span> <span class="pl-c1">1</span>
               <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>continue<span class="pl-pds">"</span></span>)
               <span class="pl-k">continue</span>
           <span class="pl-k">end</span>
           <span class="pl-c1">@show</span> x
       <span class="pl-k">end</span>
<span class="pl-k">continue</span>
x <span class="pl-k">=</span> <span class="pl-c1">2</span>
x <span class="pl-k">=</span> <span class="pl-c1">3</span></pre></div>
<h3><a id="user-content-break" class="anchor" aria-hidden="true" href="#break"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>break</code></h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@floop</span> <span class="pl-k">for</span> x <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>
           <span class="pl-c1">@show</span> x
           <span class="pl-k">if</span> x <span class="pl-k">==</span> <span class="pl-c1">2</span>
               <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>break<span class="pl-pds">"</span></span>)
               <span class="pl-k">break</span>
           <span class="pl-k">end</span>
       <span class="pl-k">end</span>
x <span class="pl-k">=</span> <span class="pl-c1">1</span>
x <span class="pl-k">=</span> <span class="pl-c1">2</span>
<span class="pl-k">break</span></pre></div>
<h3><a id="user-content-return" class="anchor" aria-hidden="true" href="#return"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>return</code></h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">function</span> <span class="pl-en">demo</span>()
           <span class="pl-c1">@floop</span> <span class="pl-k">for</span> x <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>
               <span class="pl-c1">@show</span> x
               <span class="pl-k">if</span> x <span class="pl-k">==</span> <span class="pl-c1">2</span>
                   <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">"</span>return<span class="pl-pds">"</span></span>
               <span class="pl-k">end</span>
           <span class="pl-k">end</span>
       <span class="pl-k">end</span>
       <span class="pl-c1">demo</span>()
x <span class="pl-k">=</span> <span class="pl-c1">1</span>
x <span class="pl-k">=</span> <span class="pl-c1">2</span>
<span class="pl-s"><span class="pl-pds">"</span>return<span class="pl-pds">"</span></span></pre></div>
<h3><a id="user-content-goto" class="anchor" aria-hidden="true" href="#goto"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>@goto</code></h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">begin</span>
       <span class="pl-c1">@floop</span> <span class="pl-k">for</span> x <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>
           x <span class="pl-k">==</span> <span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">@goto</span> L1
           <span class="pl-c1">@show</span> x
           <span class="pl-k">if</span> x <span class="pl-k">==</span> <span class="pl-c1">2</span>
               <span class="pl-c1">@goto</span> L2
           <span class="pl-k">end</span>
           <span class="pl-c1">@label</span> L1
       <span class="pl-k">end</span>
       <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>This is not going to be printed.<span class="pl-pds">"</span></span>)
       <span class="pl-c1">@label</span> L2
       <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>THIS is going to be printed.<span class="pl-pds">"</span></span>)
       <span class="pl-k">end</span>
x <span class="pl-k">=</span> <span class="pl-c1">2</span>
THIS is going to be printed.</pre></div>
</article></div>