<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://jbytecode.github.io/OperationsResearchModels.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Doc" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-operationsresearchmodelsjl" class="anchor" aria-hidden="true" href="#operationsresearchmodelsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>OperationsResearchModels.jl</h1>
<p dir="auto">A package for Operations Research problems.</p>
<h2 dir="auto"><a id="user-content-linear-transportation-problem" class="anchor" aria-hidden="true" href="#linear-transportation-problem"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Linear Transportation Problem</h2>
<p dir="auto">Suppose the linear transportation problem is</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">D1</th>
<th align="center">D2</th>
<th align="center">D3</th>
<th align="center">D4</th>
<th align="center">Supply</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">S1</td>
<td align="center">1</td>
<td align="center">5 (100)</td>
<td align="center">7</td>
<td align="center">8</td>
<td align="center">100</td>
</tr>
<tr>
<td align="center">S2</td>
<td align="center">2</td>
<td align="center">6</td>
<td align="center">4 (100)</td>
<td align="center">9</td>
<td align="center">100</td>
</tr>
<tr>
<td align="center">S3</td>
<td align="center">3 (100)</td>
<td align="center">10</td>
<td align="center">11</td>
<td align="center">12 (100)</td>
<td align="center">200</td>
</tr>
<tr>
<td align="center">Demand</td>
<td align="center">100</td>
<td align="center">100</td>
<td align="center">100</td>
<td align="center">100</td>
<td align="center"></td>
</tr>
</tbody>
</table>
<p dir="auto">Here is the Julia solution:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="t = TransportationProblem(
            [1 5 7 8;
             2 6 4 9;
             3 10 11 12;],
            [100, 100, 100, 100],
            [100, 100, 200])
        
result = solve(t)"><pre>t <span class="pl-k">=</span> <span class="pl-c1">TransportationProblem</span>(
            [<span class="pl-c1">1</span> <span class="pl-c1">5</span> <span class="pl-c1">7</span> <span class="pl-c1">8</span>;
             <span class="pl-c1">2</span> <span class="pl-c1">6</span> <span class="pl-c1">4</span> <span class="pl-c1">9</span>;
             <span class="pl-c1">3</span> <span class="pl-c1">10</span> <span class="pl-c1">11</span> <span class="pl-c1">12</span>;],
            [<span class="pl-c1">100</span>, <span class="pl-c1">100</span>, <span class="pl-c1">100</span>, <span class="pl-c1">100</span>],
            [<span class="pl-c1">100</span>, <span class="pl-c1">100</span>, <span class="pl-c1">200</span>])
        
result <span class="pl-k">=</span> <span class="pl-c1">solve</span>(t)</pre></div>
<h2 dir="auto"><a id="user-content-linear-assignment-problem" class="anchor" aria-hidden="true" href="#linear-assignment-problem"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Linear Assignment Problem</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="mat = [
            4 8 1;
            3 1 9;
            1 6 7;
        ]
        # x13 = 1
        # x22 = 1
        # x31 = 1
        # cost = 3 

a = AssignmentProblem(mat)
result = solve(a)"><pre>mat <span class="pl-k">=</span> [
            <span class="pl-c1">4</span> <span class="pl-c1">8</span> <span class="pl-c1">1</span>;
            <span class="pl-c1">3</span> <span class="pl-c1">1</span> <span class="pl-c1">9</span>;
            <span class="pl-c1">1</span> <span class="pl-c1">6</span> <span class="pl-c1">7</span>;
        ]
        <span class="pl-c"><span class="pl-c">#</span> x13 = 1</span>
        <span class="pl-c"><span class="pl-c">#</span> x22 = 1</span>
        <span class="pl-c"><span class="pl-c">#</span> x31 = 1</span>
        <span class="pl-c"><span class="pl-c">#</span> cost = 3 </span>

a <span class="pl-k">=</span> <span class="pl-c1">AssignmentProblem</span>(mat)
result <span class="pl-k">=</span> <span class="pl-c1">solve</span>(a)</pre></div>
<h2 dir="auto"><a id="user-content-the-shortest-path-problem" class="anchor" aria-hidden="true" href="#the-shortest-path-problem"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>The Shortest-Path Problem</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="conns = [
            Connection(1, 2, 3),
            Connection(1, 3, 2),
            Connection(1, 4, 4),
            Connection(2, 5, 3),
            Connection(3, 5, 1),
            Connection(3, 6, 1),
            Connection(4, 6, 2),
            Connection(5, 7, 6),
            Connection(6, 7, 5),
]
result = solve(conns, problem = ShortestPathProblem)"><pre>conns <span class="pl-k">=</span> [
            <span class="pl-c1">Connection</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">1</span>, <span class="pl-c1">4</span>, <span class="pl-c1">4</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">2</span>, <span class="pl-c1">5</span>, <span class="pl-c1">3</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">3</span>, <span class="pl-c1">5</span>, <span class="pl-c1">1</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">3</span>, <span class="pl-c1">6</span>, <span class="pl-c1">1</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">4</span>, <span class="pl-c1">6</span>, <span class="pl-c1">2</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">5</span>, <span class="pl-c1">7</span>, <span class="pl-c1">6</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">6</span>, <span class="pl-c1">7</span>, <span class="pl-c1">5</span>),
]
result <span class="pl-k">=</span> <span class="pl-c1">solve</span>(conns, problem <span class="pl-k">=</span> ShortestPathProblem)</pre></div>
<h2 dir="auto"><a id="user-content-the-maximum-flow-problem" class="anchor" aria-hidden="true" href="#the-maximum-flow-problem"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>The Maximum Flow Problem</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="conns = [
            Connection(1, 4, 10),
            Connection(1, 2, 20),
            Connection(1, 3, 30),
            Connection(2, 3, 30),
            Connection(4, 5, 20),
            Connection(3, 5, 20),
            Connection(2, 5, 30),
            Connection(3, 4, 10),
            Connection(4, 3, 5),
        ]

result = solve(conns, problem = MaximumFlowProblem)
"><pre>conns <span class="pl-k">=</span> [
            <span class="pl-c1">Connection</span>(<span class="pl-c1">1</span>, <span class="pl-c1">4</span>, <span class="pl-c1">10</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">20</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">30</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">30</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">4</span>, <span class="pl-c1">5</span>, <span class="pl-c1">20</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">3</span>, <span class="pl-c1">5</span>, <span class="pl-c1">20</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">2</span>, <span class="pl-c1">5</span>, <span class="pl-c1">30</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">10</span>),
            <span class="pl-c1">Connection</span>(<span class="pl-c1">4</span>, <span class="pl-c1">3</span>, <span class="pl-c1">5</span>),
        ]

result <span class="pl-k">=</span> <span class="pl-c1">solve</span>(conns, problem <span class="pl-k">=</span> MaximumFlowProblem)
</pre></div>
<h2 dir="auto"><a id="user-content-zero-sum-games" class="anchor" aria-hidden="true" href="#zero-sum-games"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Zero-Sum Games</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="mat = [
          -2 6 3;
           3 -4 7;
           -1 2 4;
    ]

result = game(mat)"><pre>mat <span class="pl-k">=</span> [
          <span class="pl-k">-</span><span class="pl-c1">2</span> <span class="pl-c1">6</span> <span class="pl-c1">3</span>;
           <span class="pl-c1">3</span> <span class="pl-k">-</span><span class="pl-c1">4</span> <span class="pl-c1">7</span>;
           <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-c1">2</span> <span class="pl-c1">4</span>;
    ]

result <span class="pl-k">=</span> <span class="pl-c1">game</span>(mat)</pre></div>
</article></div>