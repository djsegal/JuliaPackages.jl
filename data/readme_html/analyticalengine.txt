<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-deprecated-analyticalengine" class="anchor" aria-hidden="true" href="#deprecated-analyticalengine"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>[DEPRECATED] AnalyticalEngine</h1>
<p>/!\ This package is deprecated in favour of <a href="https://github.com/alan-turing-institute/MLJ.jl">MLJ</a>.</p>
<p><a href="https://travis-ci.org/tlienart/AnalyticalEngine.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/91a48ce2f3aa86950fd0fa4aefbebd07f181a5bd/68747470733a2f2f7472617669732d63692e6f72672f746c69656e6172742f416e616c79746963616c456e67696e652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/tlienart/AnalyticalEngine.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/tlienart/AnalyticalEngine.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/9af9467a14742892f78307d4ce8a1c517dcdc8ea/687474703a2f2f636f6465636f762e696f2f6769746875622f746c69656e6172742f416e616c79746963616c456e67696e652e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/tlienart/AnalyticalEngine.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-whos-behind-this" class="anchor" aria-hidden="true" href="#whos-behind-this"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Who's behind this</h2>
<ul>
<li>Thibaut Lienart (Imperial College London)</li>
<li>Miguel Morin (Alan Turing Institute)</li>
<li>Sebastian Vollmer (University of Warwick, Alan Turing Institute)</li>
<li>Franz Kiraly (University College London)</li>
<li>Mike Innes (Julia Computing)</li>
<li>Avik Sengupta (Julia Computing)</li>
<li>Valentin Churavy (Massachusetts Institute of Technology)</li>
</ul>
<h2><a id="user-content-aims-and-milestones" class="anchor" aria-hidden="true" href="#aims-and-milestones"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Aims and Milestones</h2>
<h3><a id="user-content-milestones" class="anchor" aria-hidden="true" href="#milestones"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Milestones</h3>
<ul>
<li>March 2018
<ul>
<li>[<strong>working prototype</strong>] <del>have a basic <code>GeneralizedLinearRegression</code> that works well and showcases the ideas + works with Flux</del></li>
<li>[<strong>WIP</strong>] have a basic pipeline <code>JuliaDB -&gt; AnalyticalEngine</code></li>
<li>have an interface with <code>DecisionTree.jl</code></li>
<li>[<strong>WIP</strong>] have a way to deal with hyperparameters that works well with meta-learning</li>
</ul>
</li>
<li>August 2018
<ul>
<li>have a full pipeline <code>JuliaDB -&gt; FeatEng -&gt; AnalyticalEngine</code></li>
<li>have a working framework for metalearning</li>
<li>have working tools for hyperparameter tuning (BayesianOpt, K-Folds, ...)</li>
</ul>
</li>
<li>Longer term
<ul>
<li>In the spirit of <a href="https://github.com/mlr-org/mrl">MLR</a> we'd like to interface with as many dedicated packages ("solvers") as possible and promote the creation and maintenance of those.
<ul>
<li>In a first phase we won't care too much about this, focusing on the general pipeline, hyperparameter management etc but eventually this will become the key focus once we have a strong central API.</li>
<li>There are a ton of packages implementing / re-implementing specific capabilities, hopefully the API will lead to the merging / concentration of packages solving generic tasks efficiently</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3><a id="user-content-aims" class="anchor" aria-hidden="true" href="#aims"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Aims</h3>
<ul>
<li><strong>Major aims</strong>: offer a modern SkLearn-style package that can:
<ul>
<li>work efficiently with large databases (via JuliaDB)</li>
<li>work efficiently with different compute infrastructure (parallel, GPU, ...)</li>
<li>work with generic optimisation algorithms (via <code>Optim.jl</code>)</li>
<li>work with auto-diff algorithms (via <code>Flux.jl</code>)</li>
<li>offer extensible meta-learning</li>
<li>offer modern and extensible hyperparameter tuning (such as Bayesian opt)</li>
<li>be extended easily by researchers/users in such a way that the maths matches well with the code</li>
</ul>
</li>
</ul>
<h3><a id="user-content-inspiration" class="anchor" aria-hidden="true" href="#inspiration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Inspiration</h3>
<ul>
<li><a href="https://github.com/mlr-org/mlr">MLR in R</a></li>
<li><a href="https://github.com/scikit-learn/scikit-learn">Sklearn in Python</a> as well as <a href="https://github.com/scikit-learn-contrib">contributions</a> such as <a href="https://github.com/scikit-learn-contrib/sklearn-pandas">sklearn pandas</a> and <a href="https://github.com/scikit-learn-contrib/lightning">lightning</a></li>
<li><a href="https://github.com/cstjean/ScikitLearn.jl">Sklearn in Julia</a></li>
<li>Caret</li>
</ul>
</article></div>