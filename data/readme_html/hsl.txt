<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-hsl" class="anchor" aria-hidden="true" href="#hsl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>HSL</h1>
<p><a href="https://JuliaSmoothOptimizers.github.io/HSL.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://zenodo.org/badge/latestdoi/44119477" rel="nofollow"><img src="https://camo.githubusercontent.com/a91dbfee6bf1513d2162e88bf4864b517778f4e40958669e8e5ea14a37b0ef11/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f34343131393437372e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/44119477.svg" style="max-width:100%;"></a></p>
<p>These are the beginnings of a set of interfaces to
<a href="http://www.hsl.rl.ac.uk" rel="nofollow">HSL</a> packages for sparse linear algebra.</p>
<p>Certain HSL packages are freely available to all, others are freely available
to academics only. Please refer to the website above for licensing information.
In all cases, users are responsible for obtaining HSL packages.</p>
<h2><a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installing</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ]
pkg&gt; add HSL
"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> add HSL</pre></div>
<p>At this point, make sure that there isn't a stray METIS library on your library
path. You especially want to make sure that METIS 5 is not accessible because
the HSL library currently interfaced only supports METIS 4. If you have such
library accessible, it is important to remove it from the library path, at
least temporarily. For example, if you are on OSX and are using Homebrew, you
can hide METIS 5 with <code>brew unlink metis</code>. After the install procedure is
complete, it is fine to link <code>metis</code> again with <code>brew link metis</code>.</p>
<p>Set the environment variables <code>HSL_MA57_PATH</code> and <code>HSL_MA97_PATH</code> to specify where the source archives <code>tar.gz</code> are stored.
The <code>HSL</code> Julia module will take care of compilation.
Once the source archives have been placed in the locations indicated by the environment variables, run</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ]
pkg&gt; build HSL
pkg&gt; test HSL
"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> build HSL
pkg<span class="pl-k">&gt;</span> test HSL</pre></div>
<p>Note that a C and Fortran compilers are required.</p>
<h2><a id="user-content-supported-packages" class="anchor" aria-hidden="true" href="#supported-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Supported Packages</h2>
<h3><a id="user-content-hsl_ma97" class="anchor" aria-hidden="true" href="#hsl_ma97"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>HSL_MA97</h3>
<p><a href="http://www.hsl.rl.ac.uk/catalogue/hsl_ma97.html" rel="nofollow">HSL_MA97</a> version 2.6.0: an
OpenMP-based direct solver for symmetric linear systems. Example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using MatrixMarket
using HSL

K = MatrixMarket.mmread(&quot;K.mtx&quot;)  # only the lower triangle
rhs = readdlm(&quot;rhs.rhs&quot;)

LBL = Ma97(K)
ma97_factorize!(LBL)
x = ma97_solve(LBL, rhs)  # or x = LBL \ rhs
"><pre><span class="pl-k">using</span> MatrixMarket
<span class="pl-k">using</span> HSL

K <span class="pl-k">=</span> MatrixMarket<span class="pl-k">.</span><span class="pl-c1">mmread</span>(<span class="pl-s"><span class="pl-pds">"</span>K.mtx<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> only the lower triangle</span>
rhs <span class="pl-k">=</span> <span class="pl-c1">readdlm</span>(<span class="pl-s"><span class="pl-pds">"</span>rhs.rhs<span class="pl-pds">"</span></span>)

LBL <span class="pl-k">=</span> <span class="pl-c1">Ma97</span>(K)
<span class="pl-c1">ma97_factorize!</span>(LBL)
x <span class="pl-k">=</span> <span class="pl-c1">ma97_solve</span>(LBL, rhs)  <span class="pl-c"><span class="pl-c">#</span> or x = LBL \ rhs</span></pre></div>
<h4><a id="user-content-rectangular-systems" class="anchor" aria-hidden="true" href="#rectangular-systems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Rectangular Systems</h4>
<p>There is a convenience interface to solve rectangular systems that complements
the sparse QR factorization in Julia.</p>
<p>When <em>A</em> is <em>m</em>-by-<em>n</em> with <em>m</em> &lt; <em>n</em> and has full row rank,</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(x, y) = ma97_solve(A, b)
"><pre>(x, y) <span class="pl-k">=</span> <span class="pl-c1">ma97_solve</span>(A, b)</pre></div>
<p>solves for the minimum-norm solution, i.e., <em>x</em> such that <em>Ax = b</em> and <em>x +
Aᵀ y = 0</em>. The call</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(x, y) = ma97_min_norm(A, b)
"><pre>(x, y) <span class="pl-k">=</span> <span class="pl-c1">ma97_min_norm</span>(A, b)</pre></div>
<p>is also defined, and is equivalent to the above.</p>
<p>When <em>m</em> &gt; <em>n</em> and has full column rank,</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(r, x) = ma97_solve(A, b)
"><pre>(r, x) <span class="pl-k">=</span> <span class="pl-c1">ma97_solve</span>(A, b)</pre></div>
<p>solves for the least-squares solution, i.e., <em>x</em> such that <em>r = b - Ax</em>
satisfies <em>Aᵀ r = 0</em>. The call</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(r, x) = ma97_least_squares(A, b)
"><pre>(r, x) <span class="pl-k">=</span> <span class="pl-c1">ma97_least_squares</span>(A, b)</pre></div>
<p>is also defined, and is equivalent to the above.</p>
<h3><a id="user-content-hsl_ma57" class="anchor" aria-hidden="true" href="#hsl_ma57"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>HSL_MA57</h3>
<p><a href="http://www.hsl.rl.ac.uk/specs/ma57.pdf" rel="nofollow">HSL_MA57</a> version 5.2.0:
a sparse, multifrontal solver for symmetric linear systems. Example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using MatrixMarket
using HSL

K = MatrixMarket.mmread(&quot;examples/K_0.mtx&quot;)  # only the lower triangle
rhs = readdlm(&quot;examples/rhs_0.rhs&quot;)
rhss = hcat(rhs, rhs)

## factorize and solve
LDL = Ma57(K)
ma57_factorize(LDL)
LDL.info.rank
x = ma57_solve(LDL, rhs)  # or x = LBL \ rhs
norm(K*x - rhs)
xx = ma57_solve(LDL, rhss)  # or x = LBL \ rhss
"><pre><span class="pl-k">using</span> MatrixMarket
<span class="pl-k">using</span> HSL

K <span class="pl-k">=</span> MatrixMarket<span class="pl-k">.</span><span class="pl-c1">mmread</span>(<span class="pl-s"><span class="pl-pds">"</span>examples/K_0.mtx<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> only the lower triangle</span>
rhs <span class="pl-k">=</span> <span class="pl-c1">readdlm</span>(<span class="pl-s"><span class="pl-pds">"</span>examples/rhs_0.rhs<span class="pl-pds">"</span></span>)
rhss <span class="pl-k">=</span> <span class="pl-c1">hcat</span>(rhs, rhs)

<span class="pl-c"><span class="pl-c">#</span># factorize and solve</span>
LDL <span class="pl-k">=</span> <span class="pl-c1">Ma57</span>(K)
<span class="pl-c1">ma57_factorize</span>(LDL)
LDL<span class="pl-k">.</span>info<span class="pl-k">.</span>rank
x <span class="pl-k">=</span> <span class="pl-c1">ma57_solve</span>(LDL, rhs)  <span class="pl-c"><span class="pl-c">#</span> or x = LBL \ rhs</span>
<span class="pl-c1">norm</span>(K<span class="pl-k">*</span>x <span class="pl-k">-</span> rhs)
xx <span class="pl-k">=</span> <span class="pl-c1">ma57_solve</span>(LDL, rhss)  <span class="pl-c"><span class="pl-c">#</span> or x = LBL \ rhss</span></pre></div>
<h4><a id="user-content-rectangular-systems-1" class="anchor" aria-hidden="true" href="#rectangular-systems-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Rectangular Systems</h4>
<p>There is a convenience interface to solve rectangular systems that complements
the sparse QR factorization in Julia.</p>
<p>When <em>A</em> is <em>m</em>-by-<em>n</em> with <em>m</em> &lt; <em>n</em> and has full row rank,</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(x, y) = ma57_solve(A, b)
"><pre>(x, y) <span class="pl-k">=</span> <span class="pl-c1">ma57_solve</span>(A, b)</pre></div>
<p>solves for the minimum-norm solution, i.e., <em>x</em> such that <em>Ax = b</em> and <em>x +
Aᵀ y = 0</em>. The call</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(x, y) = ma57_min_norm(A, b)
"><pre>(x, y) <span class="pl-k">=</span> <span class="pl-c1">ma57_min_norm</span>(A, b)</pre></div>
<p>is also defined, and is equivalent to the above.</p>
<p>When <em>m</em> &gt; <em>n</em> and has full column rank,</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(r, x) = ma57_solve(A, b)
"><pre>(r, x) <span class="pl-k">=</span> <span class="pl-c1">ma57_solve</span>(A, b)</pre></div>
<p>solves for the least-squares solution, i.e., <em>x</em> such that <em>r = b - Ax</em>
satisfies <em>Aᵀ r = 0</em>. The call</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(r, x) = ma57_least_squares(A, b)
"><pre>(r, x) <span class="pl-k">=</span> <span class="pl-c1">ma57_least_squares</span>(A, b)</pre></div>
<p>is also defined, and is equivalent to the above. Example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using MatrixMarket
using HSL

K = MatrixMarket.mmread(&quot;examples/K_0.mtx&quot;)  # only the lower triangle
rhs = readdlm(&quot;examples/rhs_0.rhs&quot;)

## solve min norm
K_mn = K[1:200,:]
x_mn, y_mn = ma57_min_norm(K_mn, rhs[1:200]) # == ma57_solve(K_mn, rhs[1:200])

## solve least squares
K_ls = K[:,1:200]
r_ls, x_ls = ma57_least_squares(K_ls, rhs)   # == ma57_solve(K_ls, rhs)
"><pre><span class="pl-k">using</span> MatrixMarket
<span class="pl-k">using</span> HSL

K <span class="pl-k">=</span> MatrixMarket<span class="pl-k">.</span><span class="pl-c1">mmread</span>(<span class="pl-s"><span class="pl-pds">"</span>examples/K_0.mtx<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> only the lower triangle</span>
rhs <span class="pl-k">=</span> <span class="pl-c1">readdlm</span>(<span class="pl-s"><span class="pl-pds">"</span>examples/rhs_0.rhs<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span># solve min norm</span>
K_mn <span class="pl-k">=</span> K[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">200</span>,:]
x_mn, y_mn <span class="pl-k">=</span> <span class="pl-c1">ma57_min_norm</span>(K_mn, rhs[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">200</span>]) <span class="pl-c"><span class="pl-c">#</span> == ma57_solve(K_mn, rhs[1:200])</span>

<span class="pl-c"><span class="pl-c">#</span># solve least squares</span>
K_ls <span class="pl-k">=</span> K[:,<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">200</span>]
r_ls, x_ls <span class="pl-k">=</span> <span class="pl-c1">ma57_least_squares</span>(K_ls, rhs)   <span class="pl-c"><span class="pl-c">#</span> == ma57_solve(K_ls, rhs)</span></pre></div>
<h2><a id="user-content-todo-list" class="anchor" aria-hidden="true" href="#todo-list"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TODO List</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Convenient constructor for rectangular matrices to enable <code>\</code></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Convenient access to control parameters, especially pivot tolerance</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Real single precision arithmetic <a href="https://github.com/JuliaSmoothOptimizers/HSL.jl/commit/e59c5015297bad38357c7cf64bd0dc5fa68e3ba5">(e59c501)</a></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Complex single precision arithmetic <a href="https://github.com/JuliaSmoothOptimizers/HSL.jl/commit/e59c5015297bad38357c7cf64bd0dc5fa68e3ba5">(e59c501)</a></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Complex double precision arithmetic <a href="https://github.com/JuliaSmoothOptimizers/HSL.jl/commit/e59c5015297bad38357c7cf64bd0dc5fa68e3ba5">(e59c501)</a></li>
</ul>
</article></div>