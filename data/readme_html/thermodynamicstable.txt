<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-thermodynamicstable" class="anchor" aria-hidden="true" href="#thermodynamicstable"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ThermodynamicsTable</h1>
<p dir="auto"><a href="https://travis-ci.org/DANA-Laboratory/ThermodynamicsTable.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1a9b4ddb6377fb7a356ebc165139ea3287b216a8196b859dd8ff94d95e88ab20/68747470733a2f2f7472617669732d63692e6f72672f44414e412d4c61626f7261746f72792f546865726d6f64796e616d6963735461626c652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/DANA-Laboratory/ThermodynamicsTable.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto"><code>ThermodynamicsTable</code> calculates different physical properties of materials, in 0.0.4 version, it can retrieves 17 constants and computes
11 temperature dependent and 1 pressure dependent property for a set of 345 compounds.<br>
Main reference for the quantities are <em>Perry chemical engineering handbook ed.8</em>,
but some values have been updated using data from other sources (e.g. YAWS) for more precision or integrity and also some typo errors have been corrected.<br>
Since 0.0.4 this package was fully reviewed for the aim of achieving a similar interface compare to <em>CAPE-Open Themo 1.1 standard</em> in the case of naming, definitions and behavior.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">Refer to CAPE-Open standard a Property Package Manager (PPM), is a software component that manages a set of Property Packages (PP) ,and a Property Package is a software component that can calculate Physical Properties and can retrieve constants for a set of Compounds.<br>
Here <code>ThermodynamicsTable</code> behaves more like a PPM that serves one PP.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using ThermodynamicsTable
`perryanalytic` Property Package was created and is ready to use."><pre class="notranslate"><code>julia&gt; using ThermodynamicsTable
`perryanalytic` Property Package was created and is ready to use.
</code></pre></div>
<p dir="auto">Two interfaces of CAPE-Open thermo 1.1 standard have been implemented and can be used to interact with the system.</p>
<ol dir="auto">
<li>ICapeThermoUniversalConstants<br>
Description:<br>
Methods implemented by components that can supply the values of Universal Constants.</li>
</ol>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Units:
  * avogadroConstant =&gt; 1/mol
  * boltzmannConstant =&gt; J/K
  * idealGasStateReferencePressure =&gt; Pa
  * molarGasConstant =&gt; J/mol/K
  * speedOfLightInVacuum =&gt; m/s
  * standardAccelerationOfGravity =&gt; m/s2  

Methods:
  * getuniversalconstant()
  * getuniversalconstantlist()"><pre class="notranslate"><code>Units:
  * avogadroConstant =&gt; 1/mol
  * boltzmannConstant =&gt; J/K
  * idealGasStateReferencePressure =&gt; Pa
  * molarGasConstant =&gt; J/mol/K
  * speedOfLightInVacuum =&gt; m/s
  * standardAccelerationOfGravity =&gt; m/s2  

Methods:
  * getuniversalconstant()
  * getuniversalconstantlist()
</code></pre></div>
<ol start="2" dir="auto">
<li>ICapeThermoCompounds<br>
Description:<br>
Methods implemented by components that need to describe the Compounds that occur or can occur in a Material.</li>
</ol>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Methods:
  * getcompoundlist()
  * getcompoundconstant!()
  * getconstproplist()
  * getnumcompounds()
  * getpdependentproperty!()
  * getpdependentproplist()
  * gettdependentproperty!()
  * gettdependentproplist()"><pre class="notranslate"><code>Methods:
  * getcompoundlist()
  * getcompoundconstant!()
  * getconstproplist()
  * getnumcompounds()
  * getpdependentproperty!()
  * getpdependentproplist()
  * gettdependentproperty!()
  * gettdependentproplist()
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="  using ThermodynamicsTable
  getnumcompounds() # =&gt; 345
  compIds,formulae,names,boilTemps,molwts,casnos=getcompoundlist();
  waterid=findfirst(names,&quot;Water&quot;) # =&gt; 342
  println(&quot;formulae=$(formulae[waterid]) boilTemps=$(boilTemps[waterid]) molwts=$(molwts[waterid]) casnos=$(casnos[waterid])&quot;)
# =&gt; formulae=H2O boilTemps=373.1678389916408 molwts=18.015 casnos=7732-18-5
  getconstproplist()
#=  
    17-element Array{String,1}:
     &quot;iupacName&quot;
     &quot;casRegistryNumber&quot;
     &quot;chemicalFormula&quot;
     &quot;standardFormationGibbsEnergyGas&quot;
     &quot;criticalTemperature&quot;
     &quot;standardEntropyGas&quot;
     &quot;criticalVolume&quot;
     &quot;idealGasGibbsFreeEnergyOfFormationAt25C&quot;
     &quot;molecularWeight&quot;
     &quot;criticalPressure&quot;
     &quot;liquidVolumeAt25C&quot;
     &quot;criticalCompressibilityFactor&quot;
     &quot;standardFormationEnthalpyGas&quot;
     &quot;criticalDensity&quot;
     &quot;normalBoilingPoint&quot;
     &quot;liquidDensityAt25C&quot;
     &quot;heatOfVaporizationAtNormalBoilingPoint&quot;
=#
  comps=UInt16[findfirst(names,name) for name in [&quot;Air&quot;,&quot;Water&quot;,&quot;Nitrogen&quot;]];
  propvals=Vector{Union{String,Float64}}();
  try
    getcompoundconstant!([&quot;casRegistryNumber&quot;,&quot;chemicalFormula&quot;,&quot;criticalPressure&quot;,&quot;liquidDensityAt25C&quot;],comps,propvals)
  catch err
    if isa(err,ECapeThrmPropertyNotAvailable)
      println(&quot;check $propvals for UNDEFIEND values&quot;)
    end
  end
  getpdependentproplist() # =&gt; &quot;boilingPointTemperature&quot;
  propvals=Vector{Float64}()
  getpdependentproperty!([&quot;boilingPointTemperature&quot;],80000.,comps,propvals)"><pre class="notranslate"><code>  using ThermodynamicsTable
  getnumcompounds() # =&gt; 345
  compIds,formulae,names,boilTemps,molwts,casnos=getcompoundlist();
  waterid=findfirst(names,"Water") # =&gt; 342
  println("formulae=$(formulae[waterid]) boilTemps=$(boilTemps[waterid]) molwts=$(molwts[waterid]) casnos=$(casnos[waterid])")
# =&gt; formulae=H2O boilTemps=373.1678389916408 molwts=18.015 casnos=7732-18-5
  getconstproplist()
#=  
    17-element Array{String,1}:
     "iupacName"
     "casRegistryNumber"
     "chemicalFormula"
     "standardFormationGibbsEnergyGas"
     "criticalTemperature"
     "standardEntropyGas"
     "criticalVolume"
     "idealGasGibbsFreeEnergyOfFormationAt25C"
     "molecularWeight"
     "criticalPressure"
     "liquidVolumeAt25C"
     "criticalCompressibilityFactor"
     "standardFormationEnthalpyGas"
     "criticalDensity"
     "normalBoilingPoint"
     "liquidDensityAt25C"
     "heatOfVaporizationAtNormalBoilingPoint"
=#
  comps=UInt16[findfirst(names,name) for name in ["Air","Water","Nitrogen"]];
  propvals=Vector{Union{String,Float64}}();
  try
    getcompoundconstant!(["casRegistryNumber","chemicalFormula","criticalPressure","liquidDensityAt25C"],comps,propvals)
  catch err
    if isa(err,ECapeThrmPropertyNotAvailable)
      println("check $propvals for UNDEFIEND values")
    end
  end
  getpdependentproplist() # =&gt; "boilingPointTemperature"
  propvals=Vector{Float64}()
  getpdependentproperty!(["boilingPointTemperature"],80000.,comps,propvals)
</code></pre></div>
</article></div>