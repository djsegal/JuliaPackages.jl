<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-catalystjl" class="anchor" aria-hidden="true" href="#catalystjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Catalyst.jl</h1>
<p><a href="https://gitter.im/JuliaDiffEq/Lobby?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge" rel="nofollow"><img src="https://camo.githubusercontent.com/833b89353967086ef3bf7e1d470c469fd93cc80696ae173ffc5fbcf401d2f5af/68747470733a2f2f6261646765732e6769747465722e696d2f4a756c69614469666645712f4c6f6262792e737667" alt="Join the chat at https://gitter.im/JuliaDiffEq/Lobby" data-canonical-src="https://badges.gitter.im/JuliaDiffEq/Lobby.svg" style="max-width:100%;"></a>
<a href="https://github.com/SciML/Catalyst.jl/actions?query=workflow%3ACI"><img src="https://github.com/SciML/Catalyst.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/SciML/Catalyst.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/5af9920a65d5ed34c4673887ccbb6ac26ada53267629866b00abd9719e02b5e3/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f5363694d4c2f436174616c7973742e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/SciML/Catalyst.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/SciML/Catalyst.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/04a14f9a335b6a36251a1612907e48dbfb51c633d09b2d748b01869fd00b4fe9/68747470733a2f2f636f6465636f762e696f2f67682f5363694d4c2f436174616c7973742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov.io" data-canonical-src="https://codecov.io/gh/SciML/Catalyst.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p><a href="https://catalyst.sciml.ai/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://catalyst.sciml.ai/stable/api/catalyst_api/" rel="nofollow"><img src="https://camo.githubusercontent.com/e21f82caa28cac2b3b683912d2cc86456d81d67ec8be8345b8817699dc13ddea/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4150492d737461626c652d626c75652e737667" alt="API Stable" data-canonical-src="https://img.shields.io/badge/API-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://catalyst.sciml.ai/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://catalyst.sciml.ai/dev/api/catalyst_api/" rel="nofollow"><img src="https://camo.githubusercontent.com/581bbdbdff9e2dd767a91b7665579d5e1df33cd4ecc2b2af362e8274aa29bf66/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4150492d6465762d626c75652e737667" alt="API Dev" data-canonical-src="https://img.shields.io/badge/API-dev-blue.svg" style="max-width:100%;"></a></p>
<p>Catalyst.jl is a domain-specific language (DSL) for high-performance simulation
and modeling of chemical reaction networks. Catalyst utilizes
<a href="https://github.com/SciML/ModelingToolkit.jl">ModelingToolkit</a>
<code>ReactionSystem</code>s, leveraging ModelingToolkit to enable large-scale simulations
through auto-vectorization and parallelism. <code>ReactionSystem</code>s can be used to
generate ModelingToolkit-based models, allowing easy simulation and
parameter estimation of mass action ODE models, Chemical Langevin SDE models,
stochastic chemical kinetics jump process models, and more. Generated models can
be used with solvers throughout the broader <a href="https://sciml.ai" rel="nofollow">SciML</a> ecosystem,
including higher-level SciML packages (e.g., for sensitivity analysis, parameter
estimation, machine learning applications, etc.).</p>
<h2><a id="user-content-new-in-611" class="anchor" aria-hidden="true" href="#new-in-611"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>New in 6.11</h2>
<p><em>1.</em> Plain text arrows "&lt;--" and "&lt;--&gt;" for backward and reversible reactions are
available if using Julia 1.6:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="rn = @reaction_network begin 
  (k1,k2), A + B &lt;--&gt; C
  k3, 0 &lt;-- C
end k1 k2 k3
"><pre>rn <span class="pl-k">=</span> <span class="pl-c1">@reaction_network</span> <span class="pl-k">begin</span> 
  (k1,k2), A <span class="pl-k">+</span> B <span class="pl-k">&lt;--&gt;</span> C
  k3, <span class="pl-c1">0</span> <span class="pl-k">&lt;-</span><span class="pl-k">-</span> C
<span class="pl-k">end</span> k1 k2 k3</pre></div>
<p><em>2.</em> Reaction networks can be named</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="rn = @reaction_network Reversible_Reaction begin
  k1, A --&gt; B
  k2, B --&gt; A
  end k1 k2 
nameof(rn) == :Reversible_Reaction
"><pre>rn <span class="pl-k">=</span> <span class="pl-c1">@reaction_network</span> Reversible_Reaction <span class="pl-k">begin</span>
  k1, A <span class="pl-k">--&gt;</span> B
  k2, B <span class="pl-k">--&gt;</span> A
  <span class="pl-k">end</span> k1 k2 
<span class="pl-c1">nameof</span>(rn) <span class="pl-k">==</span> <span class="pl-c1">:Reversible_Reaction</span></pre></div>
<p>Note, empty networks can no longer be created with parameters, i.e. only</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="rn = @reaction_network          # uses a randomly generated name
rn = @reaction_network MyName   # is named MyName
"><pre>rn <span class="pl-k">=</span> <span class="pl-c1">@reaction_network</span>          <span class="pl-c"><span class="pl-c">#</span> uses a randomly generated name</span>
rn <span class="pl-k">=</span> <span class="pl-c1">@reaction_network</span> MyName   <span class="pl-c"><span class="pl-c">#</span> is named MyName</span></pre></div>
<p>are allowed.</p>
<p><em>3.</em> Compositional modeling with generated <code>ODESystem</code>s, see
<a href="https://github.com/SciML/ModelingToolkit.jl/blob/master/test/reactionsystem_components.jl">here</a>
for an example that composes three gene modules to make the repressilator.</p>
<h2><a id="user-content-tutorials-and-documentation" class="anchor" aria-hidden="true" href="#tutorials-and-documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Tutorials and Documentation</h2>
<p>For information on using the package, <a href="https://catalyst.sciml.ai/stable/" rel="nofollow">see the stable
documentation</a>. The <a href="https://catalyst.sciml.ai/dev/" rel="nofollow">in-development
documentation</a> describes unreleased features in
the current master branch.</p>
<h2><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h2>
<ul>
<li>DSL provides a simple and readable format for manually specifying chemical
reactions.</li>
<li>The <a href="http://catalyst.sciml.ai/dev/api/catalyst_api" rel="nofollow">Catalyst.jl API</a> provides
functionality for extending networks, building networks programmatically, and
for composing multiple networks together.</li>
<li><code>ReactionSystem</code>s generated by the DSL can be converted to a variety of
<code>ModelingToolkit.AbstractSystem</code>s, including ODE, SDE, and jump process
representations.</li>
<li>By leveraging ModelingToolkit, users have a variety of options for generating
optimized system representations to use in solvers. These include construction
of dense or sparse Jacobians, multithreading or parallelization of generated
derivative functions, automatic classification of reactions into optimized
jump types for Gillespie-type simulations, automatic construction of
dependency graphs for jump systems, and more.</li>
<li>Generated systems can be solved using any
<a href="https://github.com/SciML/DifferentialEquations.jl">DifferentialEquations.jl</a>
ODE/SDE/jump solver, and can be used within <code>EnsembleProblem</code>s for carrying
out GPU-parallelized parameter sweeps and statistical sampling. Plot recipes
are available for visualizing the solutions.</li>
<li>Julia <code>Expr</code>s can be obtained for all rate laws and functions determining the
deterministic and stochastic terms within resulting ODE, SDE, or jump models.</li>
<li><a href="https://github.com/korsbo/Latexify.jl">Latexify</a> can be used to generate
LaTeX expressions corresponding to generated mathematical models or the
underlying set of reactions.</li>
<li><a href="https://graphviz.org/" rel="nofollow">Graphviz</a> can be used to generate and visualize
reaction network graphs. (Reusing the Graphviz interface created in
<a href="https://github.com/AlgebraicJulia/Catlab.jl/">Catlab.jl</a>.)</li>
</ul>
<h2><a id="user-content-illustrative-examples" class="anchor" aria-hidden="true" href="#illustrative-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Illustrative Examples</h2>
<h4><a id="user-content-gillespie-simulations-of-michaelis-menten-enzyme-kinetics" class="anchor" aria-hidden="true" href="#gillespie-simulations-of-michaelis-menten-enzyme-kinetics"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Gillespie Simulations of Michaelis-Menten Enzyme Kinetics</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="rs = @reaction_network begin
  c1, S + E --&gt; SE
  c2, SE --&gt; S + E
  c3, SE --&gt; P + E
end c1 c2 c3
p = (0.00166,0.0001,0.1)   # [c1,c2,c3]
tspan = (0., 100.)
u0 = [301., 100., 0., 0.]  # [S,E,SE,P]

# solve JumpProblem
dprob = DiscreteProblem(rs, u0, tspan, p)
jprob = JumpProblem(rs, dprob, Direct())
jsol = solve(jprob, SSAStepper())
plot(jsol,lw=2,title=&quot;Gillespie: Michaelis-Menten Enzyme Kinetics&quot;)
"><pre>rs <span class="pl-k">=</span> <span class="pl-c1">@reaction_network</span> <span class="pl-k">begin</span>
  c1, S <span class="pl-k">+</span> E <span class="pl-k">--&gt;</span> SE
  c2, SE <span class="pl-k">--&gt;</span> S <span class="pl-k">+</span> E
  c3, SE <span class="pl-k">--&gt;</span> P <span class="pl-k">+</span> E
<span class="pl-k">end</span> c1 c2 c3
p <span class="pl-k">=</span> (<span class="pl-c1">0.00166</span>,<span class="pl-c1">0.0001</span>,<span class="pl-c1">0.1</span>)   <span class="pl-c"><span class="pl-c">#</span> [c1,c2,c3]</span>
tspan <span class="pl-k">=</span> (<span class="pl-c1">0.</span>, <span class="pl-c1">100.</span>)
u0 <span class="pl-k">=</span> [<span class="pl-c1">301.</span>, <span class="pl-c1">100.</span>, <span class="pl-c1">0.</span>, <span class="pl-c1">0.</span>]  <span class="pl-c"><span class="pl-c">#</span> [S,E,SE,P]</span>

<span class="pl-c"><span class="pl-c">#</span> solve JumpProblem</span>
dprob <span class="pl-k">=</span> <span class="pl-c1">DiscreteProblem</span>(rs, u0, tspan, p)
jprob <span class="pl-k">=</span> <span class="pl-c1">JumpProblem</span>(rs, dprob, <span class="pl-c1">Direct</span>())
jsol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(jprob, <span class="pl-c1">SSAStepper</span>())
<span class="pl-c1">plot</span>(jsol,lw<span class="pl-k">=</span><span class="pl-c1">2</span>,title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Gillespie: Michaelis-Menten Enzyme Kinetics<span class="pl-pds">"</span></span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1814174/87864114-3bf9dd00-c932-11ea-83a0-58f38aee8bfb.png"><img src="https://user-images.githubusercontent.com/1814174/87864114-3bf9dd00-c932-11ea-83a0-58f38aee8bfb.png" alt="" style="max-width:100%;"></a></p>
<h4><a id="user-content-adaptive-sdes-for-a-birth-death-process" class="anchor" aria-hidden="true" href="#adaptive-sdes-for-a-birth-death-process"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Adaptive SDEs for A Birth-Death Process</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Catalyst, Plots, StochasticDiffEq, DiffEqJump
rs = @reaction_network begin
  c1, X --&gt; 2X
  c2, X --&gt; 0
  c3, 0 --&gt; X
end c1 c2 c3
p = (1.0,2.0,50.) # [c1,c2,c3]
tspan = (0.,10.)
u0 = [5.]         # [X]
sprob = SDEProblem(rs, u0, tspan, p)
ssol  = solve(sprob, LambaEM(), reltol=1e-3)
plot(ssol,lw=2,title=&quot;Adaptive SDE: Birth-Death Process&quot;)
"><pre><span class="pl-k">using</span> Catalyst, Plots, StochasticDiffEq, DiffEqJump
rs <span class="pl-k">=</span> <span class="pl-c1">@reaction_network</span> <span class="pl-k">begin</span>
  c1, X <span class="pl-k">--&gt;</span> <span class="pl-c1">2</span>X
  c2, X <span class="pl-k">--&gt;</span> <span class="pl-c1">0</span>
  c3, <span class="pl-c1">0</span> <span class="pl-k">--&gt;</span> X
<span class="pl-k">end</span> c1 c2 c3
p <span class="pl-k">=</span> (<span class="pl-c1">1.0</span>,<span class="pl-c1">2.0</span>,<span class="pl-c1">50.</span>) <span class="pl-c"><span class="pl-c">#</span> [c1,c2,c3]</span>
tspan <span class="pl-k">=</span> (<span class="pl-c1">0.</span>,<span class="pl-c1">10.</span>)
u0 <span class="pl-k">=</span> [<span class="pl-c1">5.</span>]         <span class="pl-c"><span class="pl-c">#</span> [X]</span>
sprob <span class="pl-k">=</span> <span class="pl-c1">SDEProblem</span>(rs, u0, tspan, p)
ssol  <span class="pl-k">=</span> <span class="pl-c1">solve</span>(sprob, <span class="pl-c1">LambaEM</span>(), reltol<span class="pl-k">=</span><span class="pl-c1">1e-3</span>)
<span class="pl-c1">plot</span>(ssol,lw<span class="pl-k">=</span><span class="pl-c1">2</span>,title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Adaptive SDE: Birth-Death Process<span class="pl-pds">"</span></span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1814174/87864113-3bf9dd00-c932-11ea-8275-f903eef90b91.png"><img src="https://user-images.githubusercontent.com/1814174/87864113-3bf9dd00-c932-11ea-8275-f903eef90b91.png" alt="" style="max-width:100%;"></a></p>
</article></div>