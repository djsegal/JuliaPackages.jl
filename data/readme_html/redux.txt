<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-redux" class="anchor" aria-hidden="true" href="#redux"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Redux</h1>
<p><a href="https://github.com/Gnimuc/Redux.jl/actions/workflows/ci.yml"><img src="https://github.com/Gnimuc/Redux.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width:100%;"></a>
<a href="https://github.com/Gnimuc/Redux.jl/actions/workflows/TagBot.yml"><img src="https://github.com/Gnimuc/Redux.jl/actions/workflows/TagBot.yml/badge.svg" alt="TagBot" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/Gnimuc/Redux.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/257b32b9a2d6ccb5720d85066ce08634658343a4c13171b432e614891d08b452/68747470733a2f2f636f6465636f762e696f2f67682f476e696d75632f52656475782e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/Gnimuc/Redux.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="pkg&gt; add Redux
"><pre>pkg<span class="pl-k">&gt;</span> add Redux</pre></div>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick Start</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Redux

# actions
struct IncrementAction &lt;: AbstractSyncAction end
struct DecrementAction &lt;: AbstractSyncAction end

const INCREMENT = IncrementAction()
const DECREMENT = DecrementAction()

# state
struct State &lt;: AbstractImmutableState
    counter::Int
end

# reducers
counter(state::AbstractState, action::AbstractAction) = state
counter(state::Vector{&lt;:AbstractState}, action::AbstractAction) = state
counter(state::State, action::IncrementAction) = State(state.counter + 1)
counter(state::State, action::DecrementAction) = State(state.counter - 1)

# create store
store = create_store(counter, State(0))

# get_state
@show get_state(store).counter

# dispatch action
dispatch!(store, INCREMENT)
@show get_state(store).counter

dispatch!(store, DECREMENT)
@show get_state(store).counter

"><pre><span class="pl-k">using</span> Redux

<span class="pl-c"><span class="pl-c">#</span> actions</span>
<span class="pl-k">struct</span> IncrementAction <span class="pl-k">&lt;:</span> <span class="pl-c1">AbstractSyncAction</span> <span class="pl-k">end</span>
<span class="pl-k">struct</span> DecrementAction <span class="pl-k">&lt;:</span> <span class="pl-c1">AbstractSyncAction</span> <span class="pl-k">end</span>

<span class="pl-k">const</span> INCREMENT <span class="pl-k">=</span> <span class="pl-c1">IncrementAction</span>()
<span class="pl-k">const</span> DECREMENT <span class="pl-k">=</span> <span class="pl-c1">DecrementAction</span>()

<span class="pl-c"><span class="pl-c">#</span> state</span>
<span class="pl-k">struct</span> State <span class="pl-k">&lt;:</span> <span class="pl-c1">AbstractImmutableState</span>
    counter<span class="pl-k">::</span><span class="pl-c1">Int</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> reducers</span>
<span class="pl-en">counter</span>(state<span class="pl-k">::</span><span class="pl-c1">AbstractState</span>, action<span class="pl-k">::</span><span class="pl-c1">AbstractAction</span>) <span class="pl-k">=</span> state
<span class="pl-en">counter</span>(state<span class="pl-k">::</span><span class="pl-c1">Vector{&lt;:AbstractState}</span>, action<span class="pl-k">::</span><span class="pl-c1">AbstractAction</span>) <span class="pl-k">=</span> state
<span class="pl-en">counter</span>(state<span class="pl-k">::</span><span class="pl-c1">State</span>, action<span class="pl-k">::</span><span class="pl-c1">IncrementAction</span>) <span class="pl-k">=</span> <span class="pl-c1">State</span>(state<span class="pl-k">.</span>counter <span class="pl-k">+</span> <span class="pl-c1">1</span>)
<span class="pl-en">counter</span>(state<span class="pl-k">::</span><span class="pl-c1">State</span>, action<span class="pl-k">::</span><span class="pl-c1">DecrementAction</span>) <span class="pl-k">=</span> <span class="pl-c1">State</span>(state<span class="pl-k">.</span>counter <span class="pl-k">-</span> <span class="pl-c1">1</span>)

<span class="pl-c"><span class="pl-c">#</span> create store</span>
store <span class="pl-k">=</span> <span class="pl-c1">create_store</span>(counter, <span class="pl-c1">State</span>(<span class="pl-c1">0</span>))

<span class="pl-c"><span class="pl-c">#</span> get_state</span>
<span class="pl-c1">@show</span> <span class="pl-c1">get_state</span>(store)<span class="pl-k">.</span>counter

<span class="pl-c"><span class="pl-c">#</span> dispatch action</span>
<span class="pl-c1">dispatch!</span>(store, INCREMENT)
<span class="pl-c1">@show</span> <span class="pl-c1">get_state</span>(store)<span class="pl-k">.</span>counter

<span class="pl-c1">dispatch!</span>(store, DECREMENT)
<span class="pl-c1">@show</span> <span class="pl-c1">get_state</span>(store)<span class="pl-k">.</span>counter
</pre></div>
</article></div>