<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-optimaltransportjl-" class="anchor" aria-hidden="true" href="#optimaltransportjl-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>OptimalTransport.jl <a href="https://juliaoptimaltransport.github.io/OptimalTransport.jl/dev" rel="nofollow"><img src="docs/src/assets/logo.svg" align="right" height="138.5" style="max-width: 100%;"></a></h1>
<p dir="auto"><a href="https://JuliaOptimalTransport.github.io/OptimalTransport.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://JuliaOptimalTransport.github.io/OptimalTransport.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaOptimalTransport/OptimalTransport.jl/actions?query=workflow%3ACI+branch%3Amaster"><img src="https://github.com/JuliaOptimalTransport/OptimalTransport.jl/workflows/CI/badge.svg?branch=master" alt="CI" style="max-width: 100%;"></a>
<a href="https://buildkite.com/julialang/optimaltransport-dot-jl/builds?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/c9eb75f90969ab6c43c91aa26ea00c18ad6df379c71509e664f6634ab9d2f40f/68747470733a2f2f696d672e736869656c64732e696f2f6275696c646b6974652f65633430373135333531366362396263326138623636313035626334613431386432323361623962626135663163626533612f6d61737465723f6c6162656c3d4750552532307465737473" alt="GPU tests" data-canonical-src="https://img.shields.io/buildkite/ec407153516cb9bc2a8b66105bc4a418d223ab9bba5f1cbe3a/master?label=GPU%20tests" style="max-width: 100%;"></a>
<a href="https://zenodo.org/badge/latestdoi/253333137" rel="nofollow"><img src="https://camo.githubusercontent.com/4292a361650f59e261d3c5f9b627e087ce361ee3747a9633343f445e3fdf2952/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3235333333333133372e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/253333137.svg" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaOptimalTransport/OptimalTransport.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d39f0a0352976dc554d88ea0daf637f95167973fe96a935a7387878e0d711904/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614f7074696d616c5472616e73706f72742f4f7074696d616c5472616e73706f72742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/JuliaOptimalTransport/OptimalTransport.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/JuliaOptimalTransport/OptimalTransport.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/5354ee4a44e53e01f3d044d6ee711175f95dbe6390dd4f5eb5303d76fba5d550/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c69614f7074696d616c5472616e73706f72742f4f7074696d616c5472616e73706f72742e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/JuliaOptimalTransport/OptimalTransport.jl/badge.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides some <a href="https://julialang.org/" rel="nofollow">Julia</a> implementations of algorithms for computational <a href="https://optimaltransport.github.io/" rel="nofollow">optimal transport</a>, including the Earth-Mover's (Wasserstein) distance, Sinkhorn algorithm for entropically regularized optimal transport as well as some variants or extensions.</p>
<p dir="auto">Notably, OptimalTransport.jl provides GPU acceleration through <a href="https://github.com/JuliaGPU/CUDA.jl/">CUDA.jl</a> and <a href="https://github.com/FluxML/NNlibCUDA.jl">NNlibCUDA.jl</a>.</p>
<p dir="auto">This package is inspired by the <a href="https://optimaltransport.github.io/" rel="nofollow">Python Optimal Transport</a>
package.</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using OptimalTransport
using Distances

# uniform histograms
μ = fill(1/250, 250)
ν = fill(1/200, 200)

# random cost matrix
C = pairwise(SqEuclidean(), rand(1, 250), rand(1, 200); dims=2)

# regularization parameter
ε = 0.01

# solve entropically regularized optimal transport problem
sinkhorn(μ, ν, C, ε)"><pre><span class="pl-k">using</span> OptimalTransport
<span class="pl-k">using</span> Distances

<span class="pl-c"><span class="pl-c">#</span> uniform histograms</span>
μ <span class="pl-k">=</span> <span class="pl-c1">fill</span>(<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">250</span>, <span class="pl-c1">250</span>)
ν <span class="pl-k">=</span> <span class="pl-c1">fill</span>(<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">200</span>, <span class="pl-c1">200</span>)

<span class="pl-c"><span class="pl-c">#</span> random cost matrix</span>
C <span class="pl-k">=</span> <span class="pl-c1">pairwise</span>(<span class="pl-c1">SqEuclidean</span>(), <span class="pl-c1">rand</span>(<span class="pl-c1">1</span>, <span class="pl-c1">250</span>), <span class="pl-c1">rand</span>(<span class="pl-c1">1</span>, <span class="pl-c1">200</span>); dims<span class="pl-k">=</span><span class="pl-c1">2</span>)

<span class="pl-c"><span class="pl-c">#</span> regularization parameter</span>
ε <span class="pl-k">=</span> <span class="pl-c1">0.01</span>

<span class="pl-c"><span class="pl-c">#</span> solve entropically regularized optimal transport problem</span>
<span class="pl-c1">sinkhorn</span>(μ, ν, C, ε)</pre></div>
<p dir="auto">Please see the documentation pages for further information.</p>
<h2 dir="auto"><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related packages</h2>
<ul dir="auto">
<li><a href="https://github.com/JuliaOptimalTransport/ExactOptimalTransport.jl">ExactOptimalTransport.jl</a>: Julia implementation of algorithms for exact unregularized (Kantorovich) optimal transport problems.</li>
<li><a href="https://github.com/JuliaOptimalTransport/PythonOT.jl">PythonOT.jl</a>: Julia interface for the <a href="https://pythonot.github.io/" rel="nofollow">Python Optimal Transport (POT) package</a>.</li>
<li><a href="https://github.com/JuliaOptimalTransport/StochasticOptimalTransport.jl">StochasticOptimalTransport.jl</a>: Julia implementation of stochastic optimization algorithms for large-scale optimal transport.</li>
</ul>
<h2 dir="auto"><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing</h2>
<p dir="auto">Contributions are more than welcome! Please feel free to submit an issue or pull request in this repository.</p>
<h2 dir="auto"><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgements</h2>
<p dir="auto">Contributors include:</p>
<ul dir="auto">
<li>Tim Matsumoto (UBC)</li>
<li>David Widmann (Uppsala)</li>
<li>Davi Barreira (FGV)</li>
<li>Stephen Zhang (UBC)</li>
</ul>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ul dir="auto">
<li>Peyré, G. and Cuturi, M., 2019. Computational optimal transport. Foundations and Trends® in Machine Learning, 11(5-6), pp.355-607.</li>
<li>Lorenz, D.A., Manns, P. and Meyer, C., 2019. Quadratically regularized optimal transport. Applied Mathematics &amp; Optimization, pp.1-31.</li>
<li>Rémi Flamary and Nicolas Courty, POT Python Optimal Transport library, <a href="https://pythonot.github.io/" rel="nofollow">https://pythonot.github.io/</a>, 2017</li>
<li>Chizat, L., Peyré, G., Schmitzer, B. and Vialard, F.X., 2016. Scaling algorithms for unbalanced transport problems. arXiv preprint arXiv:1607.05816.</li>
<li>Schmitzer, B., 2019. Stabilized sparse scaling algorithms for entropy regularized transport problems. SIAM Journal on Scientific Computing, 41(3), pp.A1443-A1481.</li>
</ul>
</article></div>