<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-empiricalcdfsjl" class="anchor" aria-hidden="true" href="#empiricalcdfsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>EmpiricalCDFs.jl</h1>
<p><em>Empirical cumulative distribution functions</em></p>
<p><a href="https://jlapeyre.github.io/EmpiricalCDFs.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a>
Linux, OSX: <a href="https://travis-ci.org/jlapeyre/EmpiricalCDFs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8f5e36c9372129966fc629f31d9b02989805bf81/68747470733a2f2f7472617669732d63692e6f72672f6a6c6170657972652f456d7069726963616c434446732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/jlapeyre/EmpiricalCDFs.jl.svg?branch=master" style="max-width:100%;"></a>
 
Windows: <a href="https://ci.appveyor.com/project/jlapeyre/empiricalcdfs-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6386c22ae62e2ddf51f395c56d3f3a15685e1e04/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6a6c6170657972652f456d7069726963616c434446732e6a6c3f6272616e63683d6d6173746572267376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/jlapeyre/EmpiricalCDFs.jl?branch=master&amp;svg=true" style="max-width:100%;"></a>
     
<a href="https://coveralls.io/github/jlapeyre/EmpiricalCDFs.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/94db07c5829e9e5f9917ec81439a981c9d6b8259/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a6c6170657972652f456d7069726963616c434446732e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/jlapeyre/EmpiricalCDFs.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/jlapeyre/EmpiricalCDFs.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ed405f8010ad171b5682e1b05b746c3c55df8583/687474703a2f2f636f6465636f762e696f2f6769746875622f6a6c6170657972652f456d7069726963616c434446732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/jlapeyre/EmpiricalCDFs.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Provides <a href="https://en.wikipedia.org/wiki/Empirical_distribution_function" rel="nofollow">empirical cumulative distribution functions (CDFs)</a>
(or "empirical distribution functions" as they are know to probabalists).</p>
<p>See the documentation <a href="https://jlapeyre.github.io/EmpiricalCDFs.jl/latest" rel="nofollow">https://jlapeyre.github.io/EmpiricalCDFs.jl/latest</a>.</p>
<p>I'm surprised that this module is not more popular (if stars are a good measure) because it's rather generic,
I use it frequently for new projects,
and the functionality is not available elsewhere.</p>
<p><em>EmpiricalCDFs</em> implements empirical CDFs; building, evaluating, random sampling, evaluating the inverse, etc.
It is useful especially for examining the
tail of the CDF obtained from streaming a large number of data, more than can be stored in memory.
For this purpose, you specify a lower cutoff; data points below this value will be silently rejected, but the
resulting CDF will still be properly normalized. This ability to process and filter data <a href="https://en.wikipedia.org/wiki/Online_algorithm" rel="nofollow">online</a>
is absent in <code>StatsBase.ecdf</code>.</p>




</article></div>