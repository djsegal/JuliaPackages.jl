<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2><a id="user-content-simpsonsjl" class="anchor" aria-hidden="true" href="#simpsonsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Simpsons.jl</h2>
<p>Julia module to check data for a Simpson's statistical paradox
<br><br></p>
<h3><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h3>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using Simpsons

has_simpsons_paradox(df, cause, effect, factor; continuous_threshold = 5, verbose = true)
"><pre><code>using Simpsons

has_simpsons_paradox(df, cause, effect, factor; continuous_threshold = 5, verbose = true)
</code></pre></div>
<p>Returns true if the DataFrame <code>df</code>'s <code>cause</code> and <code>effect</code> column data, as aggregated by <code>factor</code>,
exhibits Simpson's paradox. A continuous data <code>factor</code> (one with <code>continuous_threshold</code> or more
discrete levels) will be grouped into a binary factor so as to avoid too many clusters.
Prints the regression slope directions for overall data and groups if <code>verbose</code> is true.
<br><br><br></p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="simpsons_analysis(df, cause_column, effect_column; verbose = true, show_plots = true)
"><pre><code>simpsons_analysis(df, cause_column, effect_column; verbose = true, show_plots = true)
</code></pre></div>
<p>Analyze the dataframe <code>df</code> assuming a cause is in <code>cause_column</code> and an effect in
<code>effect_column</code> of the dataframe. Output data including any Simpson's paradox type
first degree slope reversals in subgroups found. Plots shown if <code>show_plots</code> is true (default).
<br><br><br></p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="make_paradox(nsubgroups = 3 , N = 8192)
"><pre><code>make_paradox(nsubgroups = 3 , N = 8192)
</code></pre></div>
<p>Return a dataframe containing <code>N</code> rows of random data in 3 columns <code>:x</code> (cause),
<code>:y</code> (effect), and <code>:z</code> (cofactor) which displays the Simpson's paradox.
<br><br><br></p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="plot_clusters(df, cause, effect)
"><pre><code>plot_clusters(df, cause, effect)
</code></pre></div>
<p>Plot, with subplots, clustering of the dataframe <code>df</code> using <code>cause</code> and <code>effect</code> plotted and
color coded by clusterings. Use kmeans clustering analysis on all fields of dataframe.
Use 2 to 5 as cluster numbers.
<br><br><br></p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="plot_kmeans_by_factor(df, cause_column, effect_column, factor_column)
"><pre><code>plot_kmeans_by_factor(df, cause_column, effect_column, factor_column)
</code></pre></div>
<p>Plot clustering of the dataframe <code>df</code> using cause as X, effect Y, with the <code>factor_column</code>
used for kmeans clustering into 2 clusters on the plot.
<br><br><br></p>
<h3><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h3>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using Simpsons

# Create a dataframe with cause :x, effect :y, and cofactor :z columns
dfp = make_paradox()

# Test for a Simpson's paradox, where the regression direction :x with :y 
#    reverses if the data is split by factor :z.
has_simpsons_paradox(dfp, :x, :y, :z)  # true with this data

# Analyze with plots made of data clustering. 
# To see the plots, run in REPL to prevent premature display closure. 
simpsons_analysis(dfp, :x, :y)
"><pre><code>using Simpsons

# Create a dataframe with cause :x, effect :y, and cofactor :z columns
dfp = make_paradox()

# Test for a Simpson's paradox, where the regression direction :x with :y 
#    reverses if the data is split by factor :z.
has_simpsons_paradox(dfp, :x, :y, :z)  # true with this data

# Analyze with plots made of data clustering. 
# To see the plots, run in REPL to prevent premature display closure. 
simpsons_analysis(dfp, :x, :y)
</code></pre></div>
<p><br><br></p>
<h3><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h3>
<p>Install the package using the package manager (Press ] to enter pkg&gt; mode):</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="(v1) pkg&gt; add Simpsons
"><pre><code>(v1) pkg&gt; add Simpsons
</code></pre></div>
</article></div>