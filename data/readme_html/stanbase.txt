<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-stanbase-v4" class="anchor" aria-hidden="true" href="#stanbase-v4"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>StanBase v4</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Project Status</strong></th>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/f92308582c303fb4e899bc59dd8e3aff6305da887902492fe8590be27121963a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d737461626c652d677265656e2e737667"><img src="https://camo.githubusercontent.com/f92308582c303fb4e899bc59dd8e3aff6305da887902492fe8590be27121963a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d737461626c652d677265656e2e737667" alt="" data-canonical-src="https://img.shields.io/badge/lifecycle-stable-green.svg" style="max-width: 100%;"></a></td>
<td align="center"><a target="_blank" rel="noopener noreferrer" href="https://github.com/stanjulia/StanBase.jl/workflows/CI/badge.svg?branch=master"><img src="https://github.com/stanjulia/StanBase.jl/workflows/CI/badge.svg?branch=master" alt="" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto">This package contains common components and methods for several packages wrapping Stan's <code>cmdstan</code> executable.</p>
<p dir="auto">The actual Stan methods supported, e.g. <code>stan_sample()</code>,  <code>stan_optimize()</code>, etc., are in StanSample.jl, StanOptimize.jl, StanVariational.jl, StanDiagnose.jl and <code>generated_quantities</code> (included in StanSample.jl).</p>
<p dir="auto">A new package, DiffEqBayesStan.jl is available to focus on DifferentialEquations and Stan.</p>
<p dir="auto">Another package, StanQuap.jl, provides a quadratic approximation using StanOptimize.jl and StanSample.jl which I have used in the early chapters of <a href="https://github.com/StatisticalRethinkingJulia">StatisticalRethinking</a>.</p>
<p dir="auto">These six application packages support all features and options currently available in the <code>cmdstan</code> executable.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">This package is registered. Install it with:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add StanBase"><pre>pkg<span class="pl-k">&gt;</span> add StanBase</pre></div>
<p dir="auto">although the intention is that users of Stan's <code>cmdstan</code> executable will never have to install StanBase.jl, they can simply install any of the application packages listed <a href="https://github.com/StanJulia">here</a>.</p>
<p dir="auto">This and all the method packages need a working <a href="https://mc-stan.org/users/interfaces/cmdstan.html" rel="nofollow">cmdstan</a> installation, the path of which you should specify in an evironment variable <code>CMDSTAN</code>, e.g. in your <code>~/.julia/config/startup.jl</code> have a line like:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ENV[&quot;CMDSTAN&quot;] = expanduser(&quot;~/.../cmdstan/&quot;) # replace with your path"><pre><span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>CMDSTAN<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-c1">expanduser</span>(<span class="pl-s"><span class="pl-pds">"</span>~/.../cmdstan/<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> replace with your path</span></pre></div>
<p dir="auto">This package is structured somewhat similar to Tamas Papp's <a href="https://github.com/tpapp/StanRun.jl">StanRun.jl</a> package.</p>
<h2 dir="auto"><a id="user-content-versions" class="anchor" aria-hidden="true" href="#versions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Versions</h2>
<p dir="auto">Martrix input data is not handled properly in v6.4, please use v6.5</p>
<p dir="auto">StanBase.jl v4 supports Stan.jl v9 and StanSample v6 which by default use C++ level threads (and chains). This has major consequences for StanSample.jl and Stan.jl (explained in the documentation of Stan.jl v9 and in the on-line help in StanSample.jl v6). As such StanBase.jl v4 is a breaking update.</p>
<p dir="auto">StanBase.jl versions &lt; v4.0.0 used StanDump.jl to create data.R and init.R files. It is no longer clear if .R files will be supported in future version of cmdstan. Certainly with cmdstan-2.28.2 I have seen error messages when using init.R files. Hence version 4 uses by default JSON.jl for this purpose. I have added a positional <code>use_json=true</code> argument to e.g. stan_sample().</p>
<p dir="auto">StanBase v4.7.0 drops support for creating R files (Thanks to Andrew Radcliffe).</p>
</article></div>