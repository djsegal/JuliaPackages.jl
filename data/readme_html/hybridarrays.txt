<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><table>
<thead>
<tr>
<th align="center">Status</th>
<th align="center">Coverage</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://travis-ci.com/mateuszbaran/HybridArrays.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b3630c1e1ea86344737c710d520fe4b905da39e6/68747470733a2f2f7472617669732d63692e636f6d2f6d61746575737a626172616e2f4879627269644172726179732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/mateuszbaran/HybridArrays.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://ci.appveyor.com/project/mateuszbaran/hybridarrays-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/455930d16a99e3088204f55869de3abd4a6d92df/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f37326e623870703470703665327137783f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/72nb8pp4pp6e2q7x?svg=true" style="max-width:100%;"></a></td>
<td align="center"><a href="http://codecov.io/github/mateuszbaran/HybridArrays.jl?branch=master" rel="nofollow"> <img src="https://camo.githubusercontent.com/2dacffab783efdc289e1097c6b8db6db498be484/687474703a2f2f636f6465636f762e696f2f6769746875622f6d61746575737a626172616e2f4879627269644172726179732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/mateuszbaran/HybridArrays.jl/coverage.svg?branch=master" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h1><a id="user-content-hybridarraysjl" class="anchor" aria-hidden="true" href="#hybridarraysjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>HybridArrays.jl</h1>
<p>Arrays with both statically and dynamically sized axes in Julia. This is a convenient replacement for the commonly used <code>Arrays</code>s of <code>SArray</code>s which are fast but not easy to mutate. <code>HybridArray</code> makes this easier: any <code>AbstractArray</code> can be wrapped in a structure that specifies which axes are statically sized. Based on this information code for <code>getindex</code>, <code>setindex!</code> and broadcasting is (or should soon be, not all cases have been optimized yet) as efficient as for <code>Arrays</code>s of <code>SArray</code>s while mutation of single elements is possible, as well as other operations on the wrapped array.</p>
<p>There are also statically sized views for fast and convenient mutation of <code>HybridArray</code>s.</p>
<p>Example:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> HybridArrays, StaticArrays

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">HybridArray</span><span class="pl-c1">{Tuple{2,2,StaticArrays.Dynamic()}}</span>(<span class="pl-c1">randn</span>(<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">100</span>));

julia<span class="pl-k">&gt;</span> A[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">10</span>] <span class="pl-k">=</span> <span class="pl-c1">12</span>
<span class="pl-c1">12</span>

julia<span class="pl-k">&gt;</span> A[:,:,<span class="pl-c1">10</span>]
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">2</span> SArray{Tuple{<span class="pl-c1">2</span>,<span class="pl-c1">2</span>},Float64,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>} with indices <span class="pl-c1">SOneTo</span>(<span class="pl-c1">2</span>)<span class="pl-k">×</span><span class="pl-c1">SOneTo</span>(<span class="pl-c1">2</span>)<span class="pl-k">:</span>
 <span class="pl-c1">12.0</span>       <span class="pl-k">-</span><span class="pl-c1">0.264816</span>
  <span class="pl-c1">0.615372</span>  <span class="pl-k">-</span><span class="pl-c1">1.00042</span>

julia<span class="pl-k">&gt;</span> A[<span class="pl-c1">2</span>,:,:]
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">100</span> HybridArray{Tuple{<span class="pl-c1">2</span>,StaticArrays<span class="pl-k">.</span><span class="pl-c1">Dynamic</span>()},Float64,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,Array{Float64,<span class="pl-c1">2</span>}} with indices <span class="pl-c1">SOneTo</span>(<span class="pl-c1">2</span>)<span class="pl-k">×</span>Base<span class="pl-k">.</span><span class="pl-c1">OneTo</span>(<span class="pl-c1">100</span>)<span class="pl-k">:</span>
  <span class="pl-c1">1.26017</span>  <span class="pl-k">-</span><span class="pl-c1">0.401046</span>  <span class="pl-c1">1.46593</span>    <span class="pl-c1">1.01009</span>   …  <span class="pl-c1">0.862791</span>  <span class="pl-k">-</span><span class="pl-c1">0.0928537</span>  <span class="pl-k">-</span><span class="pl-c1">1.60457</span>
 <span class="pl-k">-</span><span class="pl-c1">1.00588</span>   <span class="pl-c1">0.581524</span>  <span class="pl-c1">0.639293</span>  <span class="pl-k">-</span><span class="pl-c1">0.445845</span>     <span class="pl-c1">2.0826</span>    <span class="pl-k">-</span><span class="pl-c1">1.40952</span>     <span class="pl-c1">0.166665</span>

julia<span class="pl-k">&gt;</span> A[:,:,<span class="pl-c1">10</span>] <span class="pl-k">.*=</span> <span class="pl-c1">2</span>
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">2</span> HybridArrays<span class="pl-k">.</span>SSubArray{Tuple{<span class="pl-c1">2</span>,<span class="pl-c1">2</span>},Float64,<span class="pl-c1">2</span>,HybridArray{Tuple{<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,StaticArrays<span class="pl-k">.</span><span class="pl-c1">Dynamic</span>()},Float64,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,Array{Float64,<span class="pl-c1">3</span>}},Tuple{Base<span class="pl-k">.</span>Slice{SOneTo{<span class="pl-c1">2</span>}},Base<span class="pl-k">.</span>Slice{SOneTo{<span class="pl-c1">2</span>}},Int64},<span class="pl-c1">false</span>} with indices <span class="pl-c1">SOneTo</span>(<span class="pl-c1">2</span>)<span class="pl-k">×</span><span class="pl-c1">SOneTo</span>(<span class="pl-c1">2</span>)<span class="pl-k">:</span>
 <span class="pl-c1">24.0</span>      <span class="pl-k">-</span><span class="pl-c1">0.529633</span>
  <span class="pl-c1">1.23074</span>  <span class="pl-k">-</span><span class="pl-c1">2.00083</span>

julia<span class="pl-k">&gt;</span> A[:,:,<span class="pl-c1">10</span>] <span class="pl-k">=</span> <span class="pl-c1">SMatrix</span><span class="pl-c1">{2,2}</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">4</span>)
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">2</span> SArray{Tuple{<span class="pl-c1">2</span>,<span class="pl-c1">2</span>},Int64,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>} with indices <span class="pl-c1">SOneTo</span>(<span class="pl-c1">2</span>)<span class="pl-k">×</span><span class="pl-c1">SOneTo</span>(<span class="pl-c1">2</span>)<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">4</span></pre></div>
<p>Tips:</p>
<ul>
<li>If possible, statically known dimensions should come first. This way the most common access pattern where indices of dynamic dimensions are specified will be faster.</li>
</ul>
<p>Code of this package is based on the code of the <a href="https://github.com/JuliaArrays/StaticArrays.jl"><code>StaticArrays</code></a> package and the <code>SubArray</code> type from Julia base.</p>
</article></div>