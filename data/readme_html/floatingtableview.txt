<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-floatingtableview" class="anchor" aria-hidden="true" href="#floatingtableview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FloatingTableView</h1>
<p><a href="https://travis-ci.org/pdeffebach/FloatingTableView.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cfc90e61c735ec39969e7ad60aea326dbdb160bda86cf15d48b1180e00bcb05a/68747470733a2f2f7472617669732d63692e6f72672f706465666665626163682f466c6f6174696e675461626c65566965772e6a6c2e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/pdeffebach/FloatingTableView.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>View your datasets in a new window. Ideal for terminal-based data cleaning workflows.</p>
<p>FloatingTableView.jl leverages Julia Computing's <a href="https://github.com/JuliaComputing/TableView.jl">TableView.jl</a> and <a href="https://github.com/JuliaGizmos/Blink.jl">Blink.jl</a> to view any <a href="https://github.com/JuliaData/Tables.jl">Tables.jl</a> compatible data source in an Electron-based window.</p>
<p>The function exports a single function, <code>browse</code> to view tables.  <code>browse</code> accepts all the
keyword arguments that <code>TableView.showtable</code> accepts. For example, tables can be displayed
in dark mode and fixed widths and heights. Run <code>? TableView</code> for a full list of keyword
arguments supported.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; using DataFrames, FloatingTableView

julia&gt; df = DataFrame(rand(100, 100));

julia&gt; browse(df)
"><pre><code>julia&gt; using DataFrames, FloatingTableView

julia&gt; df = DataFrame(rand(100, 100));

julia&gt; browse(df)
</code></pre></div>
<p>Because TableView.jl uses lazy-loading of data, FloatingTableView can handle very large datasets with no performance penalty. However, because it uses an Electron-based window via Blink.jl, there is a non-trivial "time to first browse" startup time. Repeated calls to <code>browse</code> will be fast.</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/23196228/87883381-f8a47a80-c9d4-11ea-9788-45c42b53731d.gif"><img src="https://user-images.githubusercontent.com/23196228/87883381-f8a47a80-c9d4-11ea-9788-45c42b53731d.gif" alt="Screencast" style="max-width:100%;"></a></p>
<p>Similar packages: <a href="https://github.com/tpapp/BrowseTables.jl">BrowseTables.jl</a>. Opens tables in a browser instead of an Electron window, which may offer slightly improved performance for small datasets. However columns are not re-sizeable. Due the lazy-loading FloatingTableView will offer much better performance for large datasets.</p>
</article></div>