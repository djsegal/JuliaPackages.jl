<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-ant-colony-optimization" class="anchor" aria-hidden="true" href="#ant-colony-optimization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Ant Colony Optimization</h1>
<p align="center">
    <a target="_blank" rel="noopener noreferrer" href="assets/aco_evolution.gif"><img src="assets/aco_evolution.gif" alt="Ant Colony Evolution" style="max-width:100%;"></a>
</p>
<p><a href="https://github.com/schiegl/AntColony.jl">AntColony.jl</a> implements elements from various types of ant colony algorithms. The types of algorithms are <a href="https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithms#Max-Min_Ant_System_(MMAS)" rel="nofollow">MAX-MIN Ant System (MMAS)</a>, <a href="https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithms#Elitist_Ant_System" rel="nofollow">Elitist Ant System</a> and <a href="https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithms#Ant_Colony_System_(ACS)" rel="nofollow">Ant Colony System (ACS)</a>.
This implementation is elitist in the sense that only the ants which found the shortest paths this iteration deposit pheromones on their trails.
In order to avoid being trapped in a local optimum ants select the next node <a href="https://en.wikipedia.org/wiki/Fitness_proportionate_selection" rel="nofollow">roulette wheel style</a>, often used in ACS.
Furthermore pheromone levels are reset after a user defined number of non-improving iterations while also being limited to a range, which is commonly found in MMAS.</p>
<h2><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Install</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Pkg.add(&quot;AntColony&quot;)
"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>AntColony<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<h3><a id="user-content-import-the-library" class="anchor" aria-hidden="true" href="#import-the-library"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Import the library</h3>
<p>This brings the function <code>aco</code> (short for ant colony optimization) into the scope.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using AntColony
"><pre><span class="pl-k">using</span> AntColony</pre></div>
<h3><a id="user-content-define-your-optimization-problem" class="anchor" aria-hidden="true" href="#define-your-optimization-problem"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Define your optimization problem</h3>
<p>Create a <a href="https://en.wikipedia.org/wiki/Distance_matrix" rel="nofollow">distance matrix</a> which defines the cost of travelling between nodes. Note that this matrix represents a directed graph and therefore the matrix need not be symmetric.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="distance_matrix = rand(10, 10)
# note that distance_matrix[3, 5] = travel distance from node 5 to node 3 
"><pre>distance_matrix <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10</span>, <span class="pl-c1">10</span>)
<span class="pl-c"><span class="pl-c">#</span> note that distance_matrix[3, 5] = travel distance from node 5 to node 3 </span></pre></div>
<h3><a id="user-content-find-a-tour" class="anchor" aria-hidden="true" href="#find-a-tour"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Find a tour</h3>
<p>Find a path which visits all nodes and returns to the start node. Note the function doesn't return the start node twice.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="aco(distance_matrix, is_tour = true)
"><pre><span class="pl-c1">aco</span>(distance_matrix, is_tour <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<h3><a id="user-content-find-a-path" class="anchor" aria-hidden="true" href="#find-a-path"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Find a path</h3>
<p>Find a path with a specific start and end node</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="aco(distance_matrix, start_node = 1, end_node = 5)
"><pre><span class="pl-c1">aco</span>(distance_matrix, start_node <span class="pl-k">=</span> <span class="pl-c1">1</span>, end_node <span class="pl-k">=</span> <span class="pl-c1">5</span>)</pre></div>
<h3><a id="user-content-best-hyperparameters" class="anchor" aria-hidden="true" href="#best-hyperparameters"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Best hyperparameters?</h3>
<p>There are lots of parameters that can be tweaked. The algorithm is generally fairly robust meaning that slight changes in parameters should not result in drastically different performance.</p>
<p>I recommend reading up on ant colony optimization algorithms as all the parameter names this package uses are notation commonly used in the literature. However if you don't feel like it, the first parameters worth playing around with might be: <code>max_iter</code>, <code>q</code>, <code>beta</code> and <code>top_perc_ants</code></p>
<p><code>max_iter</code> is simply the maximum number of iterations the algorithm will spend trying to find better solutions. If you'd like to decrease the greedyness of the algorithm <code>q</code> will increase the amount of randomness involved in deciding which node to travel to next. <code>top_perc_ants</code> has a similar effect in that convergence will speed up since only the best solutions influence the search. Finally <code>beta</code> allows you to scale the the importance of distance in the decision process compared to the pheromone level.</p>
</article></div>