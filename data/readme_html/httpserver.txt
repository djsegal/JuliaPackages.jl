<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><em>This project is deprecated. Please use <a href="https://github.com/JuliaWeb/HTTP.jl">HTTP.jl</a></em></p>
<h1><a id="user-content-httpserverjl" class="anchor" aria-hidden="true" href="#httpserverjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>HttpServer.jl</h1>
<p><a href="https://travis-ci.org/JuliaWeb/HttpServer.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/585d218cd1b91e9f7a02b404dbbf8dbb04cd7c72/68747470733a2f2f7472617669732d63692e6f72672f4a756c69615765622f487474705365727665722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaWeb/HttpServer.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaWeb/HttpServer.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/337a270602a79546d97c5d64742672d97ac02052/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69615765622f487474705365727665722e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaWeb/HttpServer.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="http://pkg.julialang.org/?pkg=HttpServer&amp;ver=0.3" rel="nofollow"><img src="https://camo.githubusercontent.com/a8813980fe4da0c4055d3a552dfc6d398a5feb95/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f487474705365727665725f302e332e737667" alt="HttpServer" data-canonical-src="http://pkg.julialang.org/badges/HttpServer_0.3.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=HttpServer&amp;ver=0.4" rel="nofollow"><img src="https://camo.githubusercontent.com/084f4b49c8a71dc0b6c36a2f6badcd40efa0a534/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f487474705365727665725f302e342e737667" alt="HttpServer" data-canonical-src="http://pkg.julialang.org/badges/HttpServer_0.4.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=HttpServer&amp;ver=0.5" rel="nofollow"><img src="https://camo.githubusercontent.com/540d6c35bbca19dd89bc061852a952b9323ec389/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f487474705365727665725f302e352e737667" alt="HttpServer" data-canonical-src="http://pkg.julialang.org/badges/HttpServer_0.5.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=HttpServer&amp;ver=0.6" rel="nofollow"><img src="https://camo.githubusercontent.com/8476712653d711e80e7188d19c8b1e172fdcfec5/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f487474705365727665725f302e362e737667" alt="HttpServer" data-canonical-src="http://pkg.julialang.org/badges/HttpServer_0.6.svg" style="max-width:100%;"></a></p>
<p>This is a basic, non-blocking HTTP server in Julia.</p>
<p>You can write a basic application using just this if you're happy dealing with values representing HTTP requests and responses directly.
For a higher-level view, you could use <a href="https://github.com/one-more-minute/Mux.jl">Mux</a>.
If you'd like to use WebSockets as well, you'll need to grab <a href="https://github.com/JuliaWeb/WebSockets.jl">WebSockets.jl</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>Use Julia package manager to install this package as follows:</p>
<pre><code>Pkg.add("HttpServer")
</code></pre>
<h2><a id="user-content-functionality" class="anchor" aria-hidden="true" href="#functionality"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Functionality</h2>
<ul>
<li>binds to any address and port</li>
<li>supports IPv4 &amp; IPv6 addresses</li>
<li>supports HTTP, HTTPS and Unix socket transports</li>
</ul>
<p>You can find many examples of how to use this package in the <code>examples</code> folder.</p>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> HttpServer

http <span class="pl-k">=</span> <span class="pl-c1">HttpHandler</span>() <span class="pl-k">do</span> req<span class="pl-k">::</span><span class="pl-c1">Request</span>, res<span class="pl-k">::</span><span class="pl-c1">Response</span>
    <span class="pl-c1">Response</span>( <span class="pl-c1">ismatch</span>(<span class="pl-sr"><span class="pl-pds">r"</span>^/hello/<span class="pl-pds">"</span></span>,req<span class="pl-k">.</span>resource) ? <span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello <span class="pl-pds">"</span></span>, <span class="pl-c1">split</span>(req<span class="pl-k">.</span>resource,<span class="pl-s"><span class="pl-pds">'</span>/<span class="pl-pds">'</span></span>)[<span class="pl-c1">3</span>], <span class="pl-s"><span class="pl-pds">"</span>!<span class="pl-pds">"</span></span>) : <span class="pl-c1">404</span> )
<span class="pl-k">end</span>

server <span class="pl-k">=</span> <span class="pl-c1">Server</span>( http )
<span class="pl-c1">run</span>( server, <span class="pl-c1">8000</span> )
<span class="pl-c"><span class="pl-c">#</span> or</span>
<span class="pl-c1">run</span>(server, host<span class="pl-k">=</span><span class="pl-c1">IPv4</span>(<span class="pl-c1">127</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>), port<span class="pl-k">=</span><span class="pl-c1">8000</span>)</pre></div>
<p>If you open up <code>localhost:8000/hello/name/</code> in your browser, you should get a greeting from the server.</p>
<hr>
<pre><code>:::::::::::::
::         ::
:: Made at ::
::         ::
:::::::::::::
     ::
Hacker School
:::::::::::::
</code></pre>
</article></div>