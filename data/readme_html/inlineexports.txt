<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-inlineexportsjl" class="anchor" aria-hidden="true" href="#inlineexportsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>InlineExports.jl</h1>
<p><a href="https://travis-ci.org/dalum/InlineExports.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3b7a31907e4ed0471a4a9f22754e98486c9919f2/68747470733a2f2f7472617669732d63692e6f72672f64616c756d2f496e6c696e654578706f7274732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dalum/InlineExports.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/dalum/InlineExports.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3e234dd156a98a44b50e44053b8825dfdf67a1bc/68747470733a2f2f636f6465636f762e696f2f67682f64616c756d2f496e6c696e654578706f7274732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/dalum/InlineExports.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Decentralizing exports in Julia</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p><code>InlineExports</code> provides the convenience macro, <code>@export</code>, for
exporting names in a module at the location of definition, as an
alternative to the convention of exporting names at the top of the
module.  <code>@export</code> analyses an expression for definitions of
variables, functions or types, and inserts an appropriate <code>export</code>
statement above.  This is illustrated by the following example:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">module</span> M

<span class="pl-k">using</span> InlineExports

<span class="pl-c1">@export</span> <span class="pl-k">struct</span> T{<span class="pl-k">...</span>}
    <span class="pl-k">...</span>
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">f</span>(x)
    <span class="pl-k">...</span>
<span class="pl-k">end</span>

<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">    g(x)</span>
<span class="pl-s"></span>
<span class="pl-s">...</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-c1">@export</span> <span class="pl-k">function</span> <span class="pl-en">g</span>(x)
    <span class="pl-k">...</span>
<span class="pl-k">end</span>

<span class="pl-k">end</span></pre></div>
<p>The module above will export the names <code>T</code> and <code>g</code>.  Alternatively,
definitions can be wrapped inside a block.  The example below will
export both <code>a</code>, <code>b</code> and <code>c</code>:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">module</span> M

<span class="pl-k">using</span> InlineExports

<span class="pl-c1">@export</span> <span class="pl-k">begin</span>
    a <span class="pl-k">=</span> <span class="pl-c1">1</span>
    <span class="pl-k">const</span> b <span class="pl-k">=</span> <span class="pl-c1">2</span>
    c <span class="pl-k">=</span> <span class="pl-c1">3</span>
<span class="pl-k">end</span>

<span class="pl-k">end</span></pre></div>
</article></div>