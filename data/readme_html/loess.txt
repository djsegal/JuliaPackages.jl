<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-loess" class="anchor" aria-hidden="true" href="#loess"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Loess</h1>
<p><a href="https://travis-ci.org/JuliaStats/Loess.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4f82495db6670c74f79f7a692ccf675de85050a9/68747470733a2f2f7472617669732d63692e6f72672f4a756c696153746174732f4c6f6573732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaStats/Loess.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>This is a pure Julia loess implementation, based on the fast kd-tree based
approximation described in the original Cleveland, et al papers, implemented
in the netlib loess C/Fortran code, and used by many, including in R's loess
function.</p>
<h2><a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Synopsis</h2>
<p><code>Loess</code> exports two functions: <code>loess</code> and <code>predict</code>, that train and apply the model, respectively.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Loess

xs <span class="pl-k">=</span> <span class="pl-c1">10</span> <span class="pl-k">.*</span> <span class="pl-c1">rand</span>(<span class="pl-c1">100</span>)
ys <span class="pl-k">=</span> <span class="pl-c1">sin</span>.(xs) <span class="pl-k">.+</span> <span class="pl-c1">0.5</span> <span class="pl-k">*</span> <span class="pl-c1">rand</span>(<span class="pl-c1">100</span>)

model <span class="pl-k">=</span> <span class="pl-c1">loess</span>(xs, ys)

us <span class="pl-k">=</span> <span class="pl-c1">range</span>(<span class="pl-c1">extrema</span>(xs)<span class="pl-k">...</span>; step <span class="pl-k">=</span> <span class="pl-c1">0.1</span>)
vs <span class="pl-k">=</span> <span class="pl-c1">predict</span>(model, us)

<span class="pl-k">using</span> Gadfly
p <span class="pl-k">=</span> <span class="pl-c1">plot</span>(x<span class="pl-k">=</span>xs, y<span class="pl-k">=</span>ys, Geom<span class="pl-k">.</span>point, Guide<span class="pl-k">.</span><span class="pl-c1">xlabel</span>(<span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-pds">"</span></span>), Guide<span class="pl-k">.</span><span class="pl-c1">ylabel</span>(<span class="pl-s"><span class="pl-pds">"</span>y<span class="pl-pds">"</span></span>),
         <span class="pl-c1">layer</span>(Geom<span class="pl-k">.</span>line, x<span class="pl-k">=</span>us, y<span class="pl-k">=</span>vs))
<span class="pl-c1">draw</span>(<span class="pl-c1">SVG</span>(<span class="pl-s"><span class="pl-pds">"</span>loess.svg<span class="pl-pds">"</span></span>, <span class="pl-c1">6</span>inch, <span class="pl-c1">3</span>inch), p)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1c3e9e2ba95b758e09e416e5307bd7837d464888/687474703a2f2f4a756c696153746174732e6769746875622e696f2f4c6f6573732e6a6c2f6c6f6573732e737667"><img src="https://camo.githubusercontent.com/1c3e9e2ba95b758e09e416e5307bd7837d464888/687474703a2f2f4a756c696153746174732e6769746875622e696f2f4c6f6573732e6a6c2f6c6f6573732e737667" alt="Example Plot" data-canonical-src="http://JuliaStats.github.io/Loess.jl/loess.svg" style="max-width:100%;"></a></p>
<p>There's also a shortcut in Gadfly to draw these plots:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">plot</span>(x<span class="pl-k">=</span>xs, y<span class="pl-k">=</span>ys, Geom<span class="pl-k">.</span>point, Geom<span class="pl-k">.</span>smooth, Guide<span class="pl-k">.</span><span class="pl-c1">xlabel</span>(<span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-pds">"</span></span>), Guide<span class="pl-k">.</span><span class="pl-c1">ylabel</span>(<span class="pl-s"><span class="pl-pds">"</span>y<span class="pl-pds">"</span></span>))</pre></div>
<h2><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Status</h2>
<p>Multivariate regression is not yet fully implemented, but most of the parts
are already there, and wouldn't require too much additional work.</p>
</article></div>