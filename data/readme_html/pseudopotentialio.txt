<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-pseudopotentialiojl" class="anchor" aria-hidden="true" href="#pseudopotentialiojl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PseudoPotentialIO.jl</h1>
<p dir="auto"><a href="https://azadoks.github.io/PseudoPotentialIO.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://azadoks.github.io/PseudoPotentialIO.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/azadoks/PseudoPotentialIO.jl/actions"><img src="https://github.com/azadoks/PseudoPotentialIO.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/azadoks/PseudoPotentialIO.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7814feeaf761e885729e1ece172ee0fcae6c1930cabfdc60d45f9451923cea33/68747470733a2f2f636f6465636f762e696f2f67682f617a61646f6b732f50736575646f506f74656e7469616c494f2e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/azadoks/PseudoPotentialIO.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">PseudoPotentialIO aims to provide parsers for common pseudopotential file formats used by density functional theory codes and an interface for accesssing the quantities that they contain.</p>
<p dir="auto">The following file formats are supported or have planned (or no planned) support.
If your favorite format does not appear in the table below, please file an <a href="https://github.com/azadoks/PseudoPotentialIO.jl/issues">issue</a>!</p>
<table>
<thead>
<tr>
<th>Format</th>
<th>Read</th>
<th>Standardize</th>
</tr>
</thead>
<tbody>
<tr>
<td>UPF (old)</td>
<td><g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png">✅</g-emoji></td>
<td><code>NormConserving</code>, <code>Ultrasoft</code></td>
</tr>
<tr>
<td>UPF (v2.0.1 with schema)</td>
<td><g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png">✅</g-emoji></td>
<td><code>NormConserving</code>, <code>Ultrasoft</code></td>
</tr>
<tr>
<td>PSP1</td>
<td>Not planned</td>
<td></td>
</tr>
<tr>
<td>PSP3/HGH</td>
<td>Planned</td>
<td><code>Hgh</code></td>
</tr>
<tr>
<td>PSP4/Teter</td>
<td>Not planned</td>
<td></td>
</tr>
<tr>
<td>PSP5/"Phoney"</td>
<td>Not planned</td>
<td></td>
</tr>
<tr>
<td>PSP6/FHI98PP</td>
<td>Not planned</td>
<td></td>
</tr>
<tr>
<td>PSP7/ABINIT PAW</td>
<td>Not planned</td>
<td></td>
</tr>
<tr>
<td>PSP8/ONCVPSP</td>
<td><g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png">✅</g-emoji></td>
<td><code>NormConserving</code></td>
</tr>
<tr>
<td>PSP9/PSML</td>
<td>Planned</td>
<td></td>
</tr>
<tr>
<td>PSP17/ABINIT PAW XML</td>
<td>Planned</td>
<td></td>
</tr>
<tr>
<td>FPMD XML</td>
<td>Not planned</td>
<td></td>
</tr>
<tr>
<td>Vanderbilt USPP</td>
<td>Planned</td>
<td></td>
</tr>
</tbody>
</table>
<p dir="auto">Pseudopotentials are read into <code>[Format]File</code> structs which mirror very closely the contents of the file.
However, different file formats provide important physical quantities in slightly different forms.
For a more consistent interface to the physical quantities with consitent units, meanings, and dimensions, <code>*File</code> structs can be converted to <code>*Psp</code> pseudopotential structs.</p>
<p dir="auto">The following type tree for representing different types of pseudopotentials is implemented</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="AbstractPsP
|
--- NumericPsP (pseudopotentials on grids)
|   |
|   --- NormConservingPsP (UPF, PSP8)
|   |
|   --- UltrasoftPsP (UPF)
|   |
|   --- [Placeholder] ProjectorAugmentedWavePsP (UPF)
|
--- AnalyticPsP (pseudopotentials with analytic forms)
    |
    --- HghPsP (HGH)"><pre class="notranslate"><code>AbstractPsP
|
--- NumericPsP (pseudopotentials on grids)
|   |
|   --- NormConservingPsP (UPF, PSP8)
|   |
|   --- UltrasoftPsP (UPF)
|   |
|   --- [Placeholder] ProjectorAugmentedWavePsP (UPF)
|
--- AnalyticPsP (pseudopotentials with analytic forms)
    |
    --- HghPsP (HGH)
</code></pre></div>
<p dir="auto">Unsupported features:</p>
<ul dir="auto">
<li>Fully relativistic (spin-orbit coupling) pseudopotentials</li>
<li>Semilocal pseudopotentials</li>
</ul>
<p dir="auto">Supported features:</p>
<ul dir="auto">
<li>Non-linear core corrections</li>
<li>Multiprojector pseudopotentials</li>
<li>Linear and logarithmic meshes</li>
</ul>
</article></div>