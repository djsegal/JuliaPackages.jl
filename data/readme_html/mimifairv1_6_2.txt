<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mimifairv1_6_2jl" class="anchor" aria-hidden="true" href="#mimifairv1_6_2jl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MimiFAIRv1_6_2.jl</h1>
<p dir="auto">This is a work-in-progress repository for a Julia-Mimi implementation of the FAIRv1_6_2 simple climate model.</p>
<h2 dir="auto"><a id="user-content-preparing-the-software-environment" class="anchor" aria-hidden="true" href="#preparing-the-software-environment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Preparing the Software Environment</h2>
<p dir="auto">To add the package to your current environment, run the following command at the julia package REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add https://github.com/FrankErrickson/MimiFAIRv1_6_2.jl.git"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>FrankErrickson<span class="pl-k">/</span>MimiFAIRv1_6_2<span class="pl-k">.</span>jl<span class="pl-k">.</span>git</pre></div>
<p dir="auto">You probably also want to install the Mimi package into your julia environment, so that you can use some of the tools in there:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add Mimi"><pre>pkg<span class="pl-k">&gt;</span> add Mimi</pre></div>
<h2 dir="auto"><a id="user-content-running-the-model" class="anchor" aria-hidden="true" href="#running-the-model"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Running the Model</h2>
<p dir="auto">The model uses the Mimi framework and it is highly recommended to read the Mimi  documentation first to understand the code structure. The basic way to access a copy of the default MimiFAIRv2 model and explore the resuts is the following:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Mimi 
using MimiFAIRv1_6_2

# Create an instance of MimiFAIRv1_6_2.
m = MimiFAIRv1_6_2.get_model() 

# Run the model.
run(m)

# Access the temperature output.
fair_temps = m[:temperature, :T]

# Explore interactive plots of all the model output.
explore(m)"><pre><span class="pl-k">using</span> Mimi 
<span class="pl-k">using</span> MimiFAIRv1_6_2

<span class="pl-c"><span class="pl-c">#</span> Create an instance of MimiFAIRv1_6_2.</span>
m <span class="pl-k">=</span> MimiFAIRv1_6_2<span class="pl-k">.</span><span class="pl-c1">get_model</span>() 

<span class="pl-c"><span class="pl-c">#</span> Run the model.</span>
<span class="pl-c1">run</span>(m)

<span class="pl-c"><span class="pl-c">#</span> Access the temperature output.</span>
fair_temps <span class="pl-k">=</span> m[<span class="pl-c1">:temperature</span>, <span class="pl-c1">:T</span>]

<span class="pl-c"><span class="pl-c">#</span> Explore interactive plots of all the model output.</span>
<span class="pl-c1">explore</span>(m)</pre></div>
<p dir="auto">The <code>get_model()</code> function currently has the following keyword arguments:</p>
<ul dir="auto">
<li><code>ar6_scenario</code>: One of the RCMIP scenarios from the original FAIRv2.0 paper. Current options include "ssp119", "ssp126", "ssp245", "ssp370", and"ssp585". The default is "ssp245".</li>
<li><code>start_year</code>: The model has an option to be initialized at different time periods, however this is only currently set up to start in 1750.</li>
<li><code>end_year</code>: The model can be run out to 2500 (the default final year).</li>
</ul>
<h2 dir="auto"><a id="user-content-running-a-monte-carlo-simulation" class="anchor" aria-hidden="true" href="#running-a-monte-carlo-simulation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Running a Monte Carlo Simulation</h2>
<h3 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h3>
<p dir="auto">See <code>mcs/AR6_Monte_Carlo.jl</code> for the script and details on running a Monte Carlo Simulation, and don't hesitate to contact the developers with any questions, or post an Issue on Github.</p>
<p dir="auto">This file contains functions to run a Monte Carlo with the AR6 implementation of MimiFAIRv1_6_2 using the constrained parameters from AR6. The primary function, <code>run_mcs</code>, loads the constrained parameter samples and then performs the analysis.</p>
<p dir="auto">Note that the original parameter samples are stored in <code>model_data/fair-1.6.2-wg3-params.json</code> and then are parsed into <code>mcs_params</code> using the function <code>parse_mcs_params</code> in <code>mcs/utils.jl</code>.  This does not need to be repeated, but can be useful for replication and understanding.</p>
<h3 dir="auto"><a id="user-content-function-details" class="anchor" aria-hidden="true" href="#function-details"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Function Details</h3>
<p dir="auto">The <code>run_mcs</code> function is the primary user-facing function provided for the monte carlo simulation and has the signature and function arguments as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="    run_mcs(;trials::Int64 = 2237, 
        output_dir::Union{String, Nothing} = nothing, 
        save_trials::Bool = false,
        m::Mimi.Model = get_model())"><pre>    <span class="pl-c1">run_mcs</span>(;trials<span class="pl-k">::</span><span class="pl-c1">Int64</span> <span class="pl-k">=</span> <span class="pl-c1">2237</span>, 
        output_dir<span class="pl-k">::</span><span class="pl-c1">Union{String, Nothing}</span> <span class="pl-k">=</span> <span class="pl-c1">nothing</span>, 
        save_trials<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>,
        m<span class="pl-k">::</span><span class="pl-c1">Mimi.Model</span> <span class="pl-k">=</span> <span class="pl-c1">get_model</span>())</pre></div>
<p dir="auto">This function returns the results of a Monte Carlo Simulation with the defined
number of trials and save data into the <code>output_dir</code> folder, optionally also saving
trials if <code>save_trials</code> is set to <code>true.</code> If no model is provided, use the default
model returned by get_model(). If an <code>output_dir</code> is not provided, data will be
saved to the <code>output</code> folder in this repository in a subfolder named based on the
Date, Time, and number of trials.</p>
<p dir="auto">Call this function as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="results = MimiFAIRv1_6_2.run_mcs(trials = 100, output_dir = path, save_trials = true)
explore(results)
Mimi.plot(results, :temperature, :T; interactive = true)"><pre>results <span class="pl-k">=</span> MimiFAIRv1_6_2<span class="pl-k">.</span><span class="pl-c1">run_mcs</span>(trials <span class="pl-k">=</span> <span class="pl-c1">100</span>, output_dir <span class="pl-k">=</span> path, save_trials <span class="pl-k">=</span> <span class="pl-c1">true</span>)
<span class="pl-c1">explore</span>(results)
Mimi<span class="pl-k">.</span><span class="pl-c1">plot</span>(results, <span class="pl-c1">:temperature</span>, <span class="pl-c1">:T</span>; interactive <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<p dir="auto">will run a Monte Carlo simulation with 100 trials, and return a Mimi.SimulationInstance object that can be <code>explore</code>d with a UI (note this is fairly slow at the moment it is under improvement), or display a particular plot for an output variable. Output variable data and trials data will be saved in <code>path</code>, or if this isn't provided in the <code>output</code> folder in this repository in a subfolder named based on the Date, Time, and number of trials.
<br>
<br>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/FrankErrickson/MimiFAIRv1_6_2.jl/blob/main/plot_1.svg"><img src="https://github.com/FrankErrickson/MimiFAIRv1_6_2.jl/raw/main/plot_1.svg" alt="Illustrative Example of FAIR Temperatures (n = 100)" style="max-width: 100%;"></a></p>
<p dir="auto">The output variables, currently temperature and co2, will be saved to the <code>output_directory</code> as will all trials values in <code>trials.csv</code>.  Adding more variables to output is a matter of augmenting the following section of code.  Feel free to contact the authors with requests on more outputs, or open a PR doing so yourself.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# define the Monte Carlo Simulation
mcs = @defsim begin
    save(temperature.T, co2_cycle.co2)
end"><pre><span class="pl-c"><span class="pl-c">#</span> define the Monte Carlo Simulation</span>
mcs <span class="pl-k">=</span> <span class="pl-c1">@defsim</span> <span class="pl-k">begin</span>
    <span class="pl-c1">save</span>(temperature<span class="pl-k">.</span>T, co2_cycle<span class="pl-k">.</span>co2)
<span class="pl-k">end</span></pre></div>
</article></div>