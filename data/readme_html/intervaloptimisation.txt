<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-intervaloptimisationjl" class="anchor" aria-hidden="true" href="#intervaloptimisationjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>IntervalOptimisation.jl</code></h1>
<p><a href="https://travis-ci.org/JuliaIntervals/IntervalOptimisation.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/82f3ebb70d9b10bf3760761e4586f1f13c73d99a/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961496e74657276616c732f496e74657276616c4f7074696d69736174696f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="travis badge" data-canonical-src="https://travis-ci.org/JuliaIntervals/IntervalOptimisation.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/JuliaIntervals/intervaloptimisation-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6c1a091345ca0a930a59bd54bccc362f554d24d0/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f4a756c6961496e74657276616c732f496e74657276616c4f7074696d69736174696f6e2e6a6c3f7376673d74727565266272616e63683d6d6173746572" alt="appveyor badge" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/JuliaIntervals/IntervalOptimisation.jl?svg=true&amp;branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaIntervals/IntervalOptimisation.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/704873d508e73b53f63e8388d2590c2f47ce5e9d/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c6961496e74657276616c732f496e74657276616c4f7074696d69736174696f6e2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov badge" data-canonical-src="http://codecov.io/github/JuliaIntervals/IntervalOptimisation.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-rigorous-global-optimisation-using-julia" class="anchor" aria-hidden="true" href="#rigorous-global-optimisation-using-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Rigorous global optimisation using Julia</h2>
<p>This package provides rigorous global optimisation routines written in pure Julia, using interval arithmetic provided by the author's <a href="https://github.com/JuliaIntervals/IntervalArithmetic.jl">IntervalArithmetic.jl</a> package.</p>
<p>Currently, the package uses an implementation of the Moore-Skelboe algorithm.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>Functions <code>minimise</code> and <code>maximise</code> are provided to find the <strong>global</strong> minimum or maximum, respectively, of a standard Julia function <code>f</code> of one or several variables.</p>
<p>They return an <code>Interval</code> that is guaranteed to contain the global minimum (maximum), and a <code>Vector</code> of <code>Interval</code>s or <code>IntervalBox</code>es whose union contains all the minimisers.</p>
<h3><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Examples</h3>
<h4><a id="user-content-1d" class="anchor" aria-hidden="true" href="#1d"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>1D</h4>
<pre><code>using IntervalArithmetic, IntervalOptimisation

julia&gt; @time global_min, minimisers = minimise(x -&gt; (x^2 - 2)^2, -10..11);
  0.046620 seconds (36.07 k allocations: 1.586 MiB)

julia&gt; global_min
[0, 1.50881e-09]

julia&gt; minimisers
2-element Array{IntervalArithmetic.Interval{Float64},1}:
  [1.41387, 1.41453]
 [-1.41428, -1.41363]
</code></pre>
<h4><a id="user-content-2d" class="anchor" aria-hidden="true" href="#2d"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>2D</h4>
<pre><code>julia&gt; @time global_min, minimisers = minimise(  X -&gt; ( (x,y) = X; x^2 + y^2 ),
                                                        (-10000..10001) × (-10000..10001) );
  0.051122 seconds (46.80 k allocations: 2.027 MiB)

julia&gt; global_min
[0, 2.33167e-08]

julia&gt; minimisers
3-element Array{IntervalArithmetic.IntervalBox{2,Float64},1}:
 [-0.000107974, 0.000488103] × [-0.000107974, 0.000488103]
 [-0.000107974, 0.000488103] × [-0.000704051, -0.000107973]
 [-0.000704051, -0.000107973] × [-0.000107974, 0.000488103]
</code></pre>
<p>Note that the last two <code>IntervalBox</code>es do not actually contain the global minimum;
decreasing the tolerance (maximum allowed box diameter) removes them:</p>
<pre><code>julia&gt; @time global_min, minimisers = minimise(  X -&gt; ( (x,y) = X; x^2 + y^2 ),
                                                               (-10000..10001) × (-10000..10001), 1e-5 );
  0.047196 seconds (50.72 k allocations: 2.180 MiB)

julia&gt; minimisers
1-element Array{IntervalArithmetic.IntervalBox{2,Float64},1}:
 [-5.52321e-06, 3.79049e-06] × [-5.52321e-06, 3.79049e-06]
</code></pre>
<h2><a id="user-content-author" class="anchor" aria-hidden="true" href="#author"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Author</h2>
<ul>
<li><a href="http://sistemas.fciencias.unam.mx/~dsanders" rel="nofollow">David P. Sanders</a>,
Departamento de Física, Facultad de Ciencias, Universidad Nacional Autónoma de México (UNAM)</li>
</ul>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>References:</h2>
<ul>
<li>
<p><em>Validated Numerics: A Short Introduction to Rigorous Computations</em>, W. Tucker, Princeton University Press (2010)</p>
</li>
<li>
<p><em>Applied Interval Analysis</em>, Luc Jaulin, Michel Kieffer, Olivier Didrit, Eric Walter (2001)</p>
</li>
<li>
<p>van Emden M.H., Moa B. (2004). Termination Criteria in the Moore-Skelboe Algorithm for Global Optimization by Interval Arithmetic. In: Floudas C.A., Pardalos P. (eds), <em>Frontiers in Global Optimization. Nonconvex Optimization and Its Applications</em>, vol. 74. Springer, Boston, MA. <a href="http://webhome.cs.uvic.ca/~vanemden/Publications/mooreSkelb.pdf" rel="nofollow">Preprint</a></p>
</li>
<li>
<p>H. Ratschek and J. Rokne, <a href="http://pages.cpsc.ucalgary.ca/~rokne/global_book.pdf" rel="nofollow"><em>New Computer Methods for Global Optimization</em></a></p>
</li>
</ul>
<h2><a id="user-content-acknowledements" class="anchor" aria-hidden="true" href="#acknowledements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Acknowledements</h2>
<p>Financial support is acknowledged from DGAPA-UNAM PAPIIT grant IN-117117.</p>
</article></div>