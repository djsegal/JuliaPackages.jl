<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://github.com/dhanak/TidyTest.jl/actions/workflows/CI.yml"><img src="https://github.com/dhanak/TidyTest.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/dhanak/TidyTest.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d10828dca8b362fc55bda224cecd8a23c6e13a95702187190400aa46ff494127/68747470733a2f2f636f6465636f762e696f2f67682f6468616e616b2f54696479546573742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d4351595343374e4c4f54" alt="codecov" data-canonical-src="https://codecov.io/gh/dhanak/TidyTest.jl/branch/master/graph/badge.svg?token=CQYSC7NLOT" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaTesting/Aqua.jl"><img src="https://raw.githubusercontent.com/JuliaTesting/Aqua.jl/master/badge.svg" alt="Aqua QA" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-tidytestjl" class="anchor" aria-hidden="true" href="#tidytestjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TidyTest.jl</h1>
<p dir="auto">An <code>AbstractTestSet</code> implementation and a helper macro for test execution with
auto discovery and a neater test summary.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Within Julia, execute</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg; Pkg.add(&quot;TidyTest&quot;)"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>TidyTest<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">For the simplest use case, write the following lines in your <code>runtests.jl</code> file:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TidyTest

@run_tests"><pre><span class="pl-k">using</span> TidyTest

<span class="pl-c1">@run_tests</span></pre></div>
<p dir="auto">Add <code>TidyTest.jl</code> to the dependencies of your test:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg; pkg&quot;activate test; add TidyTest&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; <span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>activate test; add TidyTest<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">And then execute your tests:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia --project -e &quot;using Pkg; Pkg.test()&quot;"><pre>julia --project -e <span class="pl-s"><span class="pl-pds">"</span>using Pkg; Pkg.test()<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">For example:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="sample/vhs/sample.gif"><img src="sample/vhs/sample.gif" alt="" data-animated-image="" style="max-width: 100%;"></a></p>
<p dir="auto">The <a href="#run_tests"><code>@run_tests</code></a> macro automatically discovers all Julia source
files in the directory of <code>runtests.jl</code>, and includes all of them. The entire
block of includes is wrapped in a single toplevel <code>@testset</code> using the custom
test set type <a href="#spinnertestset"><code>SpinnerTestSet</code></a>. Test progress is reported
using <a href="https://github.com/timholy/ProgressMeter.jl">ProgressMeter.jl</a>, continuously updating the status as tests are
completed. If some tests fail (or throw an error), the issues are reported as
they happen, and a detailed test summary is printed upon completion, using the
default test reporting.</p>
<h3 dir="auto"><a id="user-content-test-filtering" class="anchor" aria-hidden="true" href="#test-filtering"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Test filtering</h3>
<p dir="auto">The macro facilitates running tests selectively. Every command line argument is
treated as a pattern that narrows the set of included test files. Specifically,
only test files with a name containing any of the arguments as a substring are
included. The search uses smart case matching: if any of the patterns contains
at least one capital letter, then matching is case-sensitive, otherwise it is
case-insensitive. To pass command line arguments to <code>Pkg.test()</code>, the
<code>test_args</code> keyword argument must be used:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ alias jlt='julia --project -e &quot;using Pkg; Pkg.test(test_args=ARGS)&quot;'
$ jlt some tests
# ...runs test files which have &quot;some&quot; or &quot;tests&quot; occurring in their names"><pre>$ <span class="pl-c1">alias</span> jlt=<span class="pl-s"><span class="pl-pds">'</span>julia --project -e "using Pkg; Pkg.test(test_args=ARGS)"<span class="pl-pds">'</span></span>
$ jlt some tests
<span class="pl-c"><span class="pl-c">#</span> ...runs test files which have "some" or "tests" occurring in their names</span></pre></div>
<p dir="auto">Alternatively, one can filter tests by passing a <code>filters</code> keyword argument to
the <code>@run_tests</code> macro, with a list of strings:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@run_tests filters=[&quot;some&quot;, &quot;tests&quot;]"><pre><span class="pl-c1">@run_tests</span> filters<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>some<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>tests<span class="pl-pds">"</span></span>]</pre></div>
<h3 dir="auto"><a id="user-content-migration-guide" class="anchor" aria-hidden="true" href="#migration-guide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Migration guide</h3>
<p dir="auto">To start using <code>TidyTest.jl</code> in an existing package, perform the following
steps:</p>
<ol dir="auto">
<li>
<p dir="auto">add <code>TidyTest.jl</code> to the dependencies of your test (as above);</p>
</li>
<li>
<p dir="auto">rename your existing "runtests.jl" file (e.g., "MyModule.jl", but any name
other than "runtests.jl" works);</p>
</li>
<li>
<p dir="auto">add a new "runtests.jl" file with "using TidyTest; @run_tests" as its
contents (as above).</p>
</li>
</ol>
<p dir="auto">And you are all set. Optionally, if you want to use the test filtering
functionality, break up your unit tests into multiple files, placing a single
test set in every file.</p>
<h2 dir="auto"><a id="user-content-example-sessions" class="anchor" aria-hidden="true" href="#example-sessions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example sessions</h2>
<p dir="auto">Here are some more examples, run in the <a href="sample"><code>sample</code></a> directory of this
repository.</p>
<p dir="auto">When there are some tests that fail and/or throw an error, the issues are
reported immediately, the progress line is printed in red, and a detailed
summary is printed upon completion:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="sample/vhs/full.gif"><img src="sample/vhs/full.gif" alt="" data-animated-image="" style="max-width: 100%;"></a></p>
<p dir="auto">When there are passing tests only, no details are shown. The color of the
progress line stays green:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="sample/vhs/oo.gif"><img src="sample/vhs/oo.gif" alt="" data-animated-image="" style="max-width: 100%;"></a></p>
<p dir="auto">Filtering is case-sensitive when the pattern contains uppercase characters.
Also, when there are broken tests, the color of the progress line turns yellow,
but still no details are printed:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="sample/vhs/b.gif"><img src="sample/vhs/b.gif" alt="" data-animated-image="" style="max-width: 100%;"></a></p>
<p dir="auto">Detailed reporting can be forced with the <code>verbose=true</code> keyword argument even
for passing tests:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="sample/vhs/oo-verbose.gif"><img src="sample/vhs/oo-verbose.gif" alt="" data-animated-image="" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reference</h2>
<h3 dir="auto"><a id="user-content-run_tests" class="anchor" aria-hidden="true" href="#run_tests"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>@run_tests</code></h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@run_tests [name] [dir=&quot;.&quot;] [filters=ARGS] [rest...]"><pre><span class="pl-c1">@run_tests</span> [name] [dir<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>.<span class="pl-pds">"</span></span>] [filters<span class="pl-k">=</span><span class="pl-c1">ARGS</span>] [rest<span class="pl-k">...</span>]</pre></div>
<p dir="auto">Discover and include test (Julia) files from the directory of the caller, and
wrap them in a <a href="#spinnertestset"><code>SpinnerTestSet</code></a> for reporting. The name of
the testset is automatically derived from the package name, if the macro is
called from the <code>runtests.jl</code> file.</p>
<p dir="auto">Optional arguments:</p>
<ul dir="auto">
<li>
<p dir="auto"><code>name</code>: explicitly name the testset;</p>
</li>
<li>
<p dir="auto"><code>dir="."</code>: discover tests in the provided directory (defaults to the directory
of the source file that contains the macro call);</p>
</li>
<li>
<p dir="auto"><code>filters=[...]</code>: filter discovered source files - include only those which
contain any of the filter strings as a substring (defaults to the command line
arguments);</p>
</li>
<li>
<p dir="auto">all other keyword arguments are passed directly to
<a href="#spinnertestset"><code>SpinnerTestSet</code></a>.</p>
</li>
</ul>
<p dir="auto">Filtering uses smart case matching: if any of the patterns contains at least one
capital letter, then matching is case-sensitive, otherwise its case-insensitive.</p>
<h3 dir="auto"><a id="user-content-spinnertestset" class="anchor" aria-hidden="true" href="#spinnertestset"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>SpinnerTestSet</code></h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="SpinnerTestSet(desc::String; [width::Integer, verbose::Bool, rest...])"><pre><span class="pl-c1">SpinnerTestSet</span>(desc<span class="pl-k">::</span><span class="pl-c1">String</span>; [width<span class="pl-k">::</span><span class="pl-c1">Integer</span>, verbose<span class="pl-k">::</span><span class="pl-c1">Bool</span>, rest<span class="pl-k">...</span>])</pre></div>
<p dir="auto">An implementation of <code>Test.AbstractTestSet</code>, that reports testing progress using
<code>ProgressMeter.ProgressUnknown</code>, continuously updating the status as tests are
completed.</p>
<p dir="auto">Arguments:</p>
<ul dir="auto">
<li>
<p dir="auto"><code>desc</code>: the name of the testset;</p>
</li>
<li>
<p dir="auto"><code>width</code>: the display width of the progress line (defaults to the width of the
terminal);</p>
</li>
<li>
<p dir="auto"><code>verbose</code>: whether to print a detailed summary even when none of the tests
fail or throw an error (defaults to <code>false</code>);</p>
</li>
<li>
<p dir="auto">all other keyword arguments are passed directly to <code>Test.DefaultTestSet</code>.</p>
</li>
</ul>
<h2 dir="auto"><a id="user-content-similar-packages" class="anchor" aria-hidden="true" href="#similar-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Similar packages</h2>
<ul dir="auto">
<li><a href="https://github.com/ssfrr/TestSetExtensions.jl">TestSetExtensions.jl</a></li>
</ul>
</article></div>