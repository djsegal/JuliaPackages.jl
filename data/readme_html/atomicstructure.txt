<div id="readme" class="org" data-path="README.org"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-atomicstructurejl" class="anchor" aria-hidden="true" href="#atomicstructurejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AtomicStructure.jl</h1>
<p dir="auto"><a href="https://juliaatoms.org/AtomicStructure.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="https://img.shields.io/badge/docs-stable-blue.svg" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
  <a href="https://juliaatoms.org/AtomicStructure.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="https://img.shields.io/badge/docs-dev-blue.svg" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
  <a href="https://github.com/JuliaAtoms/AtomicStructure.jl/actions"><img src="https://github.com/JuliaAtoms/AtomicStructure.jl/workflows/CI/badge.svg" alt="https://github.com/JuliaAtoms/AtomicStructure.jl/workflows/CI/badge.svg" style="max-width: 100%;"></a>
  <a href="https://codecov.io/gh/JuliaAtoms/AtomicStructure.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/21e42ef4f1d85f64b4935e257ace3b1b64ee511f0ead2b456297773adafde733/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696141746f6d732f41746f6d69635374727563747572652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="https://codecov.io/gh/JuliaAtoms/AtomicStructure.jl/branch/master/graph/badge.svg" data-canonical-src="https://codecov.io/gh/JuliaAtoms/AtomicStructure.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This library provides structures for representing atoms as linear
  combinations of single-particle orbitals.</p>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<p dir="auto">The radial coordinate is represented using a basis function
  expansion that fulfils the <a href="https://github.com/JuliaApproximation/ContinuumArrays.jl">ContinuumArrays.jl</a> interface. The
  examples below use <a href="https://github.com/JuliaApproximation/CompactBases.jl">CompactBases.jl</a>, but AtomicStructure.jl is not dependent on
  which basis you choose.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using AtomicStructure
using AtomicLevels
using CompactBases"><pre><span class="pl-k">using</span> AtomicStructure
<span class="pl-k">using</span> AtomicLevels
<span class="pl-k">using</span> CompactBases</pre></div>
<h2 dir="auto"><a id="user-content-grid-setup" class="anchor" aria-hidden="true" href="#grid-setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Grid setup</h2>
<p dir="auto">The grid can be tailored to a specific nucleus, which is why we
  first decide the nuclear potential to be used, in this case a
  point charge corresponding to helium:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="nucleus = pc&quot;He&quot;"><pre>nucleus <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">pc</span>"</span>He<span class="pl-pds">"</span></span></pre></div>
<pre>Z = 2 [He]
</pre>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="rₘₐₓ = 300
ρ = 0.25 # Discretization interval
N = ceil(Int, rₘₐₓ/ρ + 1/2)
# Finite-difference scheme that accounts for the boundary condition at
# r = 0
R = StaggeredFiniteDifferences(N, ρ, float(charge(nucleus)))"><pre>rₘₐₓ <span class="pl-k">=</span> <span class="pl-c1">300</span>
ρ <span class="pl-k">=</span> <span class="pl-c1">0.25</span> <span class="pl-c"><span class="pl-c">#</span> Discretization interval</span>
N <span class="pl-k">=</span> <span class="pl-c1">ceil</span>(Int, rₘₐₓ<span class="pl-k">/</span>ρ <span class="pl-k">+</span> <span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>)
<span class="pl-c"><span class="pl-c">#</span> Finite-difference scheme that accounts for the boundary condition at</span>
<span class="pl-c"><span class="pl-c">#</span> r = 0</span>
R <span class="pl-k">=</span> <span class="pl-c1">StaggeredFiniteDifferences</span>(N, ρ, <span class="pl-c1">float</span>(<span class="pl-c1">charge</span>(nucleus)))</pre></div>
<pre>Radial finite differences basis {Float64} on 0.125..300.125 (formally 0..300.125) with 1201 points spaced by ρ = 0.25
</pre>
<h2 dir="auto"><a id="user-content-different-atoms" class="anchor" aria-hidden="true" href="#different-atoms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Different atoms</h2>
<p dir="auto">Non-relativistic helium, one configuration state function, the
  orbitals are automatically initialized to their hydrogenic values:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Atom(R, csfs(c&quot;1s2&quot;), nucleus, verbosity=3)"><pre><span class="pl-c1">Atom</span>(R, <span class="pl-c1">csfs</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">c</span>"</span>1s2<span class="pl-pds">"</span></span>), nucleus, verbosity<span class="pl-k">=</span><span class="pl-c1">3</span>)</pre></div>
<pre>⎡ Hydrogenic initialization of the orbitals of Atom{Float64,RadialDifferences{Float64,Int64}}(Z = 2 [He]) with 1 CSF
⎢ ⎡ Diagonalizing symmetry ℓ = s, maximum n = 1 =&gt; 1 eigenvalues required
⎢ ⎢ Target eigenvalue: ≤ -2.0 Ha
⎢ ⎢ Diagonalizing via arnoldi_shift_invert
⎢ ⎢ Schur values: [0.49955]
⎢ ⎢ Hydrogenic energies [-1.9981975] Ha
⎢ ⎢ Analytic energies   [-2.0000000] Ha
⎢ ⎣ Δ                   [+1.803e-03] Ha
⎢ 
⎢ [ Initial norm of 1s: 0.500000, 1-normalized: 5.000000e-01
⎣ 

Atom{Float64,RadialDifferences{Float64,Int64}}(Z = 2 [He]) with 1 CSF: 1s²(₀¹S|¹S)+
</pre>
<p dir="auto">Non-relativistic, with the <code>2s,2p,3s,3p,3d</code> orbitals as possible
  correlation orbitals:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Atom(R, csfs(excited_configurations(c&quot;1s2&quot;, os&quot;2[s-p]&quot;..., os&quot;3[s-d]&quot;...)), nucleus, verbosity=3)"><pre><span class="pl-c1">Atom</span>(R, <span class="pl-c1">csfs</span>(<span class="pl-c1">excited_configurations</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">c</span>"</span>1s2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">os</span>"</span>2[s-p]<span class="pl-pds">"</span></span><span class="pl-k">...</span>, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">os</span>"</span>3[s-d]<span class="pl-pds">"</span></span><span class="pl-k">...</span>)), nucleus, verbosity<span class="pl-k">=</span><span class="pl-c1">3</span>)</pre></div>
<pre>⎡ Hydrogenic initialization of the orbitals of Atom{Float64,RadialDifferences{Float64,Int64}}(Z = 2 [He]) with 32 CSFs
⎢ ⎡ Diagonalizing symmetry ℓ = s, maximum n = 3 =&gt; 3 eigenvalues required
⎢ ⎢ Target eigenvalue: ≤ -2.0 Ha
⎢ ⎢ Diagonalizing via arnoldi_shift_invert
⎢ ⎢ Schur values: [0.49955, 0.285767, 0.264747]
⎢ ⎢ Hydrogenic energies [-1.9981975, -0.5006417, -0.2228092] Ha
⎢ ⎢ Analytic energies   [-2.0000000, -0.5000000, -0.2222222] Ha
⎢ ⎣ Δ                   [+1.803e-03, -6.417e-04, -5.870e-04] Ha
⎢ 
⎢ ⎡ Diagonalizing symmetry ℓ = d, maximum n = 3 =&gt; 1 eigenvalues required
⎢ ⎢ Target eigenvalue: ≤ -0.2222222222222222 Ha
⎢ ⎢ Diagonalizing via arnoldi_shift_invert
⎢ ⎢ Schur values: [4.5007]
⎢ ⎢ Hydrogenic energies [-0.2222567] Ha
⎢ ⎢ Analytic energies   [-0.2222222] Ha
⎢ ⎣ Δ                   [-3.448e-05] Ha
⎢ 
⎢ ⎡ Diagonalizing symmetry ℓ = p, maximum n = 3 =&gt; 2 eigenvalues required
⎢ ⎢ Target eigenvalue: ≤ -0.5 Ha
⎢ ⎢ Diagonalizing via arnoldi_shift_invert
⎢ ⎢ Schur values: [1.99957, 1.28594]
⎢ ⎢ Hydrogenic energies [-0.4998912, -0.2223581] Ha
⎢ ⎢ Analytic energies   [-0.5000000, -0.2222222] Ha
⎢ ⎣ Δ                   [+1.088e-04, -1.359e-04] Ha
⎢ 
⎢ ⎡ Initial norm of 1s: 0.500000, 1-normalized: 5.000000e-01
⎢ ⎢ Initial norm of 2s: 0.500000, 1-normalized: 5.000000e-01
⎢ ⎢ Initial norm of 2p: 0.500000, 1-normalized: 5.000000e-01
⎢ ⎢ Initial norm of 3s: 0.500000, 1-normalized: 5.000000e-01
⎢ ⎢ Initial norm of 3p: 0.500000, 1-normalized: 5.000000e-01
⎢ ⎣ Initial norm of 3d: 0.500000, 1-normalized: 5.000000e-01
⎣ 

Atom{Float64,RadialDifferences{Float64,Int64}}(Z = 2 [He]) with 32 CSFs:
32-element Array{CSF{Orbital,IntermediateTerm,Term},1}:
 1s²(₀¹S|¹S)+          
 1s(₁²S|²S) 2s(₁²S|¹S)+
 1s(₁²S|²S) 2s(₁²S|³S)+
 1s(₁²S|²S) 3s(₁²S|¹S)+
 1s(₁²S|²S) 3s(₁²S|³S)+
 1s(₁²S|²S) 3d(₁²D|¹D)+
 1s(₁²S|²S) 3d(₁²D|³D)+
 2s²(₀¹S|¹S)+          
 2s(₁²S|²S) 3s(₁²S|¹S)+
 2s(₁²S|²S) 3s(₁²S|³S)+
 2s(₁²S|²S) 3d(₁²D|¹D)+
 ⋮                     
 3s²(₀¹S|¹S)+          
 3s(₁²S|²S) 3d(₁²D|¹D)+
 3s(₁²S|²S) 3d(₁²D|³D)+
 3p²(₀¹S|¹S)+          
 3p²(₂¹D|¹D)+          
 3p²(₂³P|³P)+          
 3d²(₀¹S|¹S)+          
 3d²(₂¹D|¹D)+          
 3d²(₂¹G|¹G)+          
 3d²(₂³P|³P)+          
 3d²(₂³F|³F)+
</pre>
<h1 dir="auto"><a id="user-content-todoideas" class="anchor" aria-hidden="true" href="#todoideas"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TODO/Ideas</h1>
<ul dir="auto">
  <li>[ ] Multiple eigenvalues per symmetry and/or Lagrange multipliers
    for orthogonality</li>
  <li>[ ] Warn if core modelled by potential differs too much from core
    of configuration(s) to optimize
    <ul dir="auto">
      <li>[ ] Optimize “frozen” orbitals as well</li>
    </ul>
  </li>
  <li>[ ] Virial theorem V/T = -2 as accuracy indicator</li>
  <li>[ ] Number of eigenvalues required per equation</li>
  <li>[ ] Tabulate bound spectra</li>
  <li>[ ] Extension of atom
    <ul dir="auto">
      <li>[ ] onto larger grid</li>
      <li>[ ] more configurations (e.g. continuum)</li>
    </ul>
  </li>
  <li>[ ] Evaluate smaller effect [eg. (hyper)fine structure] by
    inclusion of new operators
    <ul dir="auto">
      <li>[ ] via perturbation theory
        <ul dir="auto">
          <li>[ ] tests of accuracy using analytic perturbation theory
            formulas, e.g. hyperfine splitting of Rb in magnetic fields.</li>
        </ul>
      </li>
      <li>[ ] reoptimization of orbitals (requires expansion of basis, if
        not working with spin-orbitals)</li>
    </ul>
  </li>
  <li>[ ] Generalize atomic operators
    <ul dir="auto">
      <li>[ ] <code>AbstractAtomicOperator</code></li>
      <li>[ ] <code>DiagonalIntegral</code></li>
      <li>[ ] <code>RepulsionIntegral</code></li>
      <li>[ ] <code>MultipoleInteraction</code></li>
      <li>[ ] <code>Spin–orbit interaction</code></li>
      <li>[ ] &amp;c.</li>
    </ul>
  </li>
  <li>[ ] Generalize notion of energy expression to derive arbitrary
    equations of motion, either for optimization of orbitals or for
    time propagation.</li>
</ul>
</article></div>