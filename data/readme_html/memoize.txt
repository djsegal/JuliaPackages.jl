<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-memoizejl" class="anchor" aria-hidden="true" href="#memoizejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Memoize.jl</h1>
<p><a href="https://travis-ci.org/JuliaCollections/Memoize.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/193db742f23d90cf8d87addabbd4d4f3313911c5/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961436f6c6c656374696f6e732f4d656d6f697a652e6a6c2e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaCollections/Memoize.jl.png?branch=master" style="max-width:100%;"></a> <a href="https://coveralls.io/github/JuliaCollections/Memoize.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/221376cb34357ab5020d8517d590ff941930a1e4/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c6961436f6c6c656374696f6e732f4d656d6f697a652e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaCollections/Memoize.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>Easy memoization for Julia.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Memoize
<span class="pl-c1">@memoize</span> <span class="pl-k">function</span> <span class="pl-en">x</span>(a)
	<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Running<span class="pl-pds">"</span></span>)
	a
<span class="pl-k">end</span></pre></div>
<pre><code>julia&gt; x(1)
Running
1

julia&gt; x(1)
1
</code></pre>
<p>By default, Memoize.jl uses an <code>ObjectIdDict</code> as a cache, but it's also possible to specify the type of the cache. If you want to cache vectors based on the values they contain, you probably want this:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Memoize
<span class="pl-c1">@memoize</span> Dict <span class="pl-k">function</span> <span class="pl-en">x</span>(a)
	<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Running<span class="pl-pds">"</span></span>)
	a
<span class="pl-k">end</span></pre></div>
<p>You can also specify the full function call for constructing the dictionary.  For example, to use LRUCache.jl:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Memoize
<span class="pl-k">using</span> LRUCache
<span class="pl-c1">@memoize</span> <span class="pl-c1">LRU</span><span class="pl-c1">{Tuple{Any,Any},Any}</span>(maxsize<span class="pl-k">=</span><span class="pl-c1">2</span>) <span class="pl-k">function</span> <span class="pl-en">x</span>(a, b)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Running<span class="pl-pds">"</span></span>)
    a <span class="pl-k">+</span> b
<span class="pl-k">end</span></pre></div>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">x</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>)
Running
<span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">x</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>)
<span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">x</span>(<span class="pl-c1">2</span>,<span class="pl-c1">2</span>)
Running
<span class="pl-c1">4</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">x</span>(<span class="pl-c1">2</span>,<span class="pl-c1">3</span>)
Running
<span class="pl-c1">5</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">x</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>)
Running
<span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">x</span>(<span class="pl-c1">2</span>,<span class="pl-c1">3</span>)
<span class="pl-c1">5</span></pre></div>
</article></div>