<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-gettextjl" class="anchor" aria-hidden="true" href="#gettextjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Gettext.jl</h1>
<p dir="auto"><a href="https://travis-ci.org/Julia-i18n/Gettext.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ae8cd354863283bddeae330a0f2f347de6d577621a3bdc612527569edecf8f15/68747470733a2f2f7472617669732d63692e6f72672f4a756c69612d6931386e2f476574746578742e6a6c2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/Julia-i18n/Gettext.jl.svg" style="max-width: 100%;"></a>
<a href="https://coveralls.io/r/Julia-i18n/Gettext.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/b3b787fdea4b32c307714c0a73d29e943b847a3bef461d5de872cf9157210fc3/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c69612d6931386e2f476574746578742e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/Julia-i18n/Gettext.jl/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">An interface to the <a href="http://www.gnu.org/software/gettext/manual/html_node/index.html" rel="nofollow">gettext</a> internationalization/translation interface.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Within Julia, run <code>Pkg.update()</code> and then <code>Pkg.add("Gettext")</code></p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">A simple string can be translated as follows:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Gettext

bindtextdomain(&quot;sample&quot;, &quot;po/&quot;)
textdomain(&quot;sample&quot;)

println(_&quot;Hello, world!&quot;)"><pre class="notranslate"><code>using Gettext

bindtextdomain("sample", "po/")
textdomain("sample")

println(_"Hello, world!")
</code></pre></div>
<p dir="auto">In fact, such a sample program can be run from the toplevel directory of this repository as follows:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="$ LANGUAGE=fr julia helloworld.jl
Bonjour le monde !"><pre class="notranslate"><code>$ LANGUAGE=fr julia helloworld.jl
Bonjour le monde !
</code></pre></div>
<h2 dir="auto"><a id="user-content-string-interpolation" class="anchor" aria-hidden="true" href="#string-interpolation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>String interpolation</h2>
<p dir="auto">For string interpolation, you will need to use a runtime method (e.g. <a href="https://github.com/lindahua/Formatting.jl">Formatting.jl</a>) rather than Julia's built-in compile-time interpolation syntax.  If using Formatting.jl, it probably makes sense to use the "Python" formatting style, as it allows the translations to have different argument orders than the original strings.  For example,</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Gettext
using Formatting

bindtextdomain(&quot;sample&quot;, &quot;po/&quot;)
textdomain(&quot;sample&quot;)

daystr(n) = format(ngettext(&quot;{1} day&quot;, &quot;{1} days&quot;, n), n)

println(daystr(1))
println(daystr(3))"><pre class="notranslate"><code>using Gettext
using Formatting

bindtextdomain("sample", "po/")
textdomain("sample")

daystr(n) = format(ngettext("{1} day", "{1} days", n), n)

println(daystr(1))
println(daystr(3))
</code></pre></div>
<p dir="auto">When run, this gives</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="$ LANGUAGE=fr julia daystr.jl
1 jour
3 jours"><pre class="notranslate"><code>$ LANGUAGE=fr julia daystr.jl
1 jour
3 jours
</code></pre></div>
<h2 dir="auto"><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Status</h2>
<p dir="auto">Currently this library relies on Python's built-in <a href="https://github.com/python/cpython/blob/master/Lib/gettext.py">gettext.py</a> implementation via <a href="https://github.com/stevengj/PyCall.jl">PyCall</a>.  In the future, it may make sense to port this code into a Julia-native version (see <a href="https://github.com/Julia-i18n/Gettext.jl/issues/1" data-hovercard-type="issue" data-hovercard-url="/Julia-i18n/Gettext.jl/issues/1/hovercard">issue #1</a>).</p>
</article></div>