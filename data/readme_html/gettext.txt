<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-gettextjl" class="anchor" aria-hidden="true" href="#gettextjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Gettext.jl</h1>
<p><a href="https://travis-ci.org/Julia-i18n/Gettext.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fdd333fa9996f5edd5fc00fd3558a450b4b32b49/68747470733a2f2f7472617669732d63692e6f72672f4a756c69612d6931386e2f476574746578742e6a6c2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/Julia-i18n/Gettext.jl.svg" style="max-width:100%;"></a>
<a href="https://coveralls.io/r/Julia-i18n/Gettext.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/e1b2877a9f6b0b9b0e5ef80e2639faf9e7269c90/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c69612d6931386e2f476574746578742e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/Julia-i18n/Gettext.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>An interface to the <a href="http://www.gnu.org/software/gettext/manual/html_node/index.html" rel="nofollow">gettext</a> internationalization/translation interface.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Within Julia, run <code>Pkg.update()</code> and then <code>Pkg.add("Gettext")</code></p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>A simple string can be translated as follows:</p>
<pre><code>using Gettext

bindtextdomain("sample", "po/")
textdomain("sample")

println(_"Hello, world!")
</code></pre>
<p>In fact, such a sample program can be run from the toplevel directory of this repository as follows:</p>
<pre><code>$ LANGUAGE=fr julia helloworld.jl
Bonjour le mondeÂ !
</code></pre>
<h2><a id="user-content-string-interpolation" class="anchor" aria-hidden="true" href="#string-interpolation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>String interpolation</h2>
<p>For string interpolation, you will need to use a runtime method (e.g. <a href="https://github.com/lindahua/Formatting.jl">Formatting.jl</a>) rather than Julia's built-in compile-time interpolation syntax.  If using Formatting.jl, it probably makes sense to use the "Python" formatting style, as it allows the translations to have different argument orders than the original strings.  For example,</p>
<pre><code>using Gettext
using Formatting

bindtextdomain("sample", "po/")
textdomain("sample")

daystr(n) = format(ngettext("{1} day", "{1} days", n), n)

println(daystr(1))
println(daystr(3))
</code></pre>
<p>When run, this gives</p>
<pre><code>$ LANGUAGE=fr julia daystr.jl
1 jour
3 jours
</code></pre>
<h2><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Status</h2>
<p>Currently this library relies on Python's built-in <a href="https://github.com/python/cpython/blob/master/Lib/gettext.py">gettext.py</a> implementation via <a href="https://github.com/stevengj/PyCall.jl">PyCall</a>.  In the future, it may make sense to port this code into a Julia-native version (see <a href="https://github.com/Julia-i18n/Gettext.jl/issues/1">issue #1</a>).</p>
</article></div>