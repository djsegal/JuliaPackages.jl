<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto">#A Julia interface to Mongrel2</p>
<blockquote>
<p dir="auto">This package is deprecated. The Mongrel2 webserver hasn't turned out to be very popular, and Julia now has a native web server. Therefore, my current reccomendation is to use <a href="https://github.com/JuliaWeb/HttpServer.jl">HTTPServer</a>, fronted by an nginx or Apache2 reverse proxy</p>
</blockquote>
<p dir="auto">Mongrel2.jl is a package that enables writing [Mongrel2] (<a href="http://mongrel2.org/" rel="nofollow">http://mongrel2.org/</a>) handlers in the [Julia] (<a href="http://julialang.org" rel="nofollow">http://julialang.org</a>) programming language.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;Mongrel2&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Mongrel2<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">This will also install the dependent Julia packages: [ZMQ] (<a href="https://github.com/aviks/ZMQ.jl">https://github.com/aviks/ZMQ.jl</a>) and [JSON] (<a href="https://github.com/JuliaLang/JSON.jl">https://github.com/JuliaLang/JSON.jl</a>)</p>
<p dir="auto">Install Mongrel2 and ZMQ libraries for your OS using your favourite package manager</p>
<p dir="auto">##Usage</p>
<p dir="auto">Start Mongrel2 in the usual fashion with <code>m2sh</code> using a relevant configuration. [Example] (<a href="https://raw.github.com/aviks/Mongrel2.jl/master/example/mongrel2.config">https://raw.github.com/aviks/Mongrel2.jl/master/example/mongrel2.config</a>)</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="load(&quot;Mongrel2&quot;)
using Mongrel2

t = run_server(&quot;6DFF1523-C091-49B8-B635-598640E864B3&quot;, &quot;tcp://127.0.0.1:9997&quot;, &quot;tcp://127.0.0.1:9996&quot;)

 while true                                                                                            
    (conn, req) = consume (t) 
    response = &quot;&lt;html&gt;&lt;body&gt;Sender: $(req.sender_id)&lt;br&gt;ConnectionId: $(req.connection_id)&lt;br&gt;
                  Path: $(req.path)&lt;br&gt;Headers: $(string(req.headers))&lt;br&gt; Body: $(req.body)&lt;/html&gt;&lt;/body&gt;&quot;
       
    if is_disconnected(req); print(&quot;Disconnected $(req.connection_id) \n&quot;);continue; end
    reply_http(conn, req, response); disconnect_client(conn,req);
end"><pre><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>Mongrel2<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> Mongrel2

t <span class="pl-k">=</span> <span class="pl-c1">run_server</span>(<span class="pl-s"><span class="pl-pds">"</span>6DFF1523-C091-49B8-B635-598640E864B3<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>tcp://127.0.0.1:9997<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>tcp://127.0.0.1:9996<span class="pl-pds">"</span></span>)

 <span class="pl-k">while</span> <span class="pl-c1">true</span>                                                                                            
    (conn, req) <span class="pl-k">=</span> consume (t) 
    response <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>&lt;html&gt;&lt;body&gt;Sender: <span class="pl-v">$(req<span class="pl-k">.</span>sender_id)</span>&lt;br&gt;ConnectionId: <span class="pl-v">$(req<span class="pl-k">.</span>connection_id)</span>&lt;br&gt;</span>
<span class="pl-s">                  Path: <span class="pl-v">$(req<span class="pl-k">.</span>path)</span>&lt;br&gt;Headers: <span class="pl-v">$(<span class="pl-c1">string</span>(req<span class="pl-k">.</span>headers))</span>&lt;br&gt; Body: <span class="pl-v">$(req<span class="pl-k">.</span>body)</span>&lt;/html&gt;&lt;/body&gt;<span class="pl-pds">"</span></span>
       
    <span class="pl-k">if</span> <span class="pl-c1">is_disconnected</span>(req); <span class="pl-c1">print</span>(<span class="pl-s"><span class="pl-pds">"</span>Disconnected <span class="pl-v">$(req<span class="pl-k">.</span>connection_id)</span> <span class="pl-cce">\n</span><span class="pl-pds">"</span></span>);<span class="pl-k">continue</span>; <span class="pl-k">end</span>
    <span class="pl-c1">reply_http</span>(conn, req, response); <span class="pl-c1">disconnect_client</span>(conn,req);
<span class="pl-k">end</span></pre></div>
<p dir="auto">Navigate to <a href="http://localhost:6767/handlertest/" rel="nofollow">http://localhost:6767/handlertest/</a></p>
</article></div>