<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-libgeosjl" class="anchor" aria-hidden="true" href="#libgeosjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LibGEOS.jl</h1>
<p dir="auto"><a href="https://github.com/JuliaGeo/LibGEOS.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaGeo/LibGEOS.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaGeo/LibGEOS.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/476d858d4167dda1bb4ab0e42fc258748428584e93698bd5d40f77d71fd3bfe1/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696147656f2f4c696247454f532e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d776e53334a30305a5048" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaGeo/LibGEOS.jl/branch/master/graph/badge.svg?token=wnS3J00ZPH" style="max-width: 100%;"></a></p>
<p dir="auto">LibGEOS is a package for manipulation and analysis of planar geometric objects, based on the
libraries <a href="https://libgeos.org/" rel="nofollow">GEOS</a> (the engine of PostGIS) and JTS (from which GEOS is
ported). This package wraps the GEOS C API, see its
<a href="https://libgeos.org/usage/c_api/" rel="nofollow">usage</a> and
<a href="http://libgeos.org/doxygen/geos__c_8h.html" rel="nofollow">reference</a> docs.</p>
<p dir="auto">Among other things, it allows you to parse <a href="https://en.wikipedia.org/wiki/Well-known_text" rel="nofollow">Well-known Text (WKT)</a>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="p1 = readgeom(&quot;POLYGON((0 0,1 0,1 1,0 0))&quot;)
p2 = readgeom(&quot;POLYGON((0 0,1 0,1 1,0 1,0 0))&quot;)
p3 = readgeom(&quot;POLYGON((2 0,3 0,3 1,2 1,2 0))&quot;)"><pre>p1 <span class="pl-k">=</span> <span class="pl-c1">readgeom</span>(<span class="pl-s"><span class="pl-pds">"</span>POLYGON((0 0,1 0,1 1,0 0))<span class="pl-pds">"</span></span>)
p2 <span class="pl-k">=</span> <span class="pl-c1">readgeom</span>(<span class="pl-s"><span class="pl-pds">"</span>POLYGON((0 0,1 0,1 1,0 1,0 0))<span class="pl-pds">"</span></span>)
p3 <span class="pl-k">=</span> <span class="pl-c1">readgeom</span>(<span class="pl-s"><span class="pl-pds">"</span>POLYGON((2 0,3 0,3 1,2 1,2 0))<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="examples/example1.png"><img src="examples/example1.png" alt="Example 1" style="max-width: 100%;"></a></p>
<p dir="auto">Add a buffer around them</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="g1 = buffer(p1, 0.5)
g2 = buffer(p2, 0.5)
g3 = buffer(p3, 0.5)"><pre>g1 <span class="pl-k">=</span> <span class="pl-c1">buffer</span>(p1, <span class="pl-c1">0.5</span>)
g2 <span class="pl-k">=</span> <span class="pl-c1">buffer</span>(p2, <span class="pl-c1">0.5</span>)
g3 <span class="pl-k">=</span> <span class="pl-c1">buffer</span>(p3, <span class="pl-c1">0.5</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="examples/example2.png"><img src="examples/example2.png" alt="Example 2" style="max-width: 100%;"></a></p>
<p dir="auto">and take the union of different geometries</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="polygon = LibGEOS.union(g1, g3)"><pre>polygon <span class="pl-k">=</span> LibGEOS<span class="pl-k">.</span><span class="pl-c1">union</span>(g1, g3)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="examples/example3.png"><img src="examples/example3.png" alt="Example 3" style="max-width: 100%;"></a></p>
<p dir="auto">GEOS functionality is extensive, so coverage is incomplete, but the basic functionality for working with geospatial data is already available. I'm learning as I go along, so documentation is lacking, but if you're interested, you can have a look at the examples in the <code>examples/</code> folder, or the tests in <code>test/test_geo_interface.jl</code> and <code>test/test_geos_operations.jl</code>.</p>
<h2 dir="auto"><a id="user-content-conversion-tofrom-geointerface-objects" class="anchor" aria-hidden="true" href="#conversion-tofrom-geointerface-objects"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Conversion to/from GeoInterface objects</h2>
<p dir="auto"><a href="https://github.com/JuliaGeo/GeoInterface.jl">GeoInterface.jl</a> compatible geometries from many
packages including GeometryBasics.jl, Shapefile.jl, GeoJSON.jl, KML.jl, ArchGDAL.jl, GADM.jl
and others can be easily converted to LibGEOS geometries using:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="GeoInterface.convert(LibGEOS, other_package_geometry)"><pre class="notranslate"><code>GeoInterface.convert(LibGEOS, other_package_geometry)
</code></pre></div>
<p dir="auto">To broadcast this over a vector or iterable we need to use <code>Ref</code> on <code>LibGEOS</code>:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="GeoInterface.convert.(Ref(LibGEOS), iterable_of_geometries)"><pre class="notranslate"><code>GeoInterface.convert.(Ref(LibGEOS), iterable_of_geometries)
</code></pre></div>
<p dir="auto">The same applies in reverse, such as for interop with the Makie.jl/GeometryBasics.jl ecosystem:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="GeoInterface.convert(GeometryBasics, libgeos_geometry)"><pre class="notranslate"><code>GeoInterface.convert(GeometryBasics, libgeos_geometry)
</code></pre></div>
<p dir="auto">For packages like Shapefile.jl and GeoJSON.jl, converting to their objects isn't
possible, as theyre not particularly useful on their own. Instead, we can just write directly:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Shapefile.write(&quot;myfile.shp&quot;, libgeos_geometry)"><pre class="notranslate"><code>Shapefile.write("myfile.shp", libgeos_geometry)
</code></pre></div>
<h2 dir="auto"><a id="user-content-geointerface-methods" class="anchor" aria-hidden="true" href="#geointerface-methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GeoInterface methods</h2>
<p dir="auto">GeoInterace.jl OGC standards methods work on LibGEOS objects:</p>
<ul dir="auto">
<li><code>GeoInterface.distance</code></li>
<li><code>GeoInterface.buffer</code></li>
<li><code>GeoInterface.convexhull</code></li>
<li><code>GeoInterface.equals</code></li>
<li><code>GeoInterface.disjoint</code></li>
<li><code>GeoInterface.intersects</code></li>
<li><code>GeoInterface.touches</code></li>
<li><code>GeoInterface.within</code></li>
<li><code>GeoInterface.contains</code></li>
<li><code>GeoInterface.overlaps</code></li>
<li><code>GeoInterface.crosses</code></li>
<li><code>GeoInterface.symdifference</code></li>
<li><code>GeoInterface.difference</code></li>
<li><code>GeoInterface.intersection</code></li>
<li><code>GeoInterface.union</code></li>
</ul>
<p dir="auto">See the GeoInterface.jl <a href="https://juliageo.org/GeoInterface.jl/stable/reference/api/" rel="nofollow">API docs</a> for details.</p>
<h2 dir="auto"><a id="user-content-exported-libgeos-geometries" class="anchor" aria-hidden="true" href="#exported-libgeos-geometries"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Exported LibGEOS geometries:</h2>
<ul dir="auto">
<li><code>GeometryCollection</code></li>
<li><code>LineString</code></li>
<li><code>LinearRing</code></li>
<li><code>MultiLineString</code></li>
<li><code>MultiPoint</code></li>
<li><code>MultiPolygon</code></li>
<li><code>Point</code></li>
<li><code>Polygon</code></li>
<li><code>STRtree</code></li>
</ul>
<h2 dir="auto"><a id="user-content-exported-libgeos-functions" class="anchor" aria-hidden="true" href="#exported-libgeos-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Exported LibGEOS functions:</h2>
<ul dir="auto">
<li><code>area</code></li>
<li><code>boundary</code></li>
<li><code>buffer</code></li>
<li><code>bufferWithStyle</code></li>
<li><code>centroid</code></li>
<li><code>constrainedDelaunayTriangulation</code></li>
<li><code>containsproperly</code></li>
<li><code>convexhull</code></li>
<li><code>coveredby</code></li>
<li><code>covers</code></li>
<li><code>crosses</code></li>
<li><code>delaunayTriangulation</code></li>
<li><code>delaunayTriangulationEdges</code></li>
<li><code>difference</code></li>
<li><code>disjoint</code></li>
<li><code>distance</code></li>
<li><code>endPoint</code></li>
<li><code>envelope</code></li>
<li><code>equals</code></li>
<li><code>equalsexact</code></li>
<li><code>exteriorRing</code></li>
<li><code>geomLength</code></li>
<li><code>getGeometries</code></li>
<li><code>getGeometry</code></li>
<li><code>getPrecision</code></li>
<li><code>getXMax</code></li>
<li><code>getXMin</code></li>
<li><code>getYMax</code></li>
<li><code>getYMin</code></li>
<li><code>hasZ</code></li>
<li><code>hausdorffdistance</code></li>
<li><code>interiorRing</code></li>
<li><code>interiorRings</code></li>
<li><code>interpolate</code></li>
<li><code>interpolateNormalized</code></li>
<li><code>intersection</code></li>
<li><code>intersects</code></li>
<li><code>isClosed</code></li>
<li><code>isEmpty</code></li>
<li><code>isRing</code></li>
<li><code>isSimple</code></li>
<li><code>isValid</code></li>
<li><code>lineMerge</code></li>
<li><code>minimumRotatedRectangle</code></li>
<li><code>nearestPoints</code></li>
<li><code>node</code></li>
<li><code>numGeometries</code></li>
<li><code>numPoints</code></li>
<li><code>overlaps</code></li>
<li><code>pointOnSurface</code></li>
<li><code>polygonize</code></li>
<li><code>prepareGeom</code></li>
<li><code>project</code></li>
<li><code>projectNormalized</code></li>
<li><code>query</code></li>
<li><code>readgeom</code></li>
<li><code>setPrecision</code></li>
<li><code>sharedPaths</code></li>
<li><code>simplify</code></li>
<li><code>snap</code></li>
<li><code>startPoint</code></li>
<li><code>symmetricDifference</code></li>
<li><code>topologyPreserveSimplify</code></li>
<li><code>touches</code></li>
<li><code>unaryUnion</code></li>
<li><code>union</code></li>
<li><code>uniquePoints</code></li>
<li><code>within</code></li>
<li><code>writegeom</code></li>
</ul>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<ol dir="auto">
<li>At the Julia prompt, run</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add LibGEOS"><pre>pkg<span class="pl-k">&gt;</span> add LibGEOS</pre></div>
<p dir="auto">This will install both the Julia package and GEOS shared libraries together. The GEOS build comes from <a href="https://github.com/JuliaBinaryWrappers/GEOS_jll.jl/releases">GEOS_jll</a>, and the build script can be found in <a href="https://github.com/JuliaPackaging/Yggdrasil/tree/master/G/GEOS">Yggdrasil</a>.</p>
<ol start="2" dir="auto">
<li>Test that <code>LibGEOS</code> works by runnning</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; test LibGEOS"><pre>pkg<span class="pl-k">&gt;</span> test LibGEOS</pre></div>
<h1 dir="auto"><a id="user-content-ecosystem" class="anchor" aria-hidden="true" href="#ecosystem"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Ecosystem</h1>
<ul dir="auto">
<li>All <a href="https://github.com/JuliaGeo/GeoInterface.jl">GeoInterface.jl</a> compatible geometries will work in LibGEOS without conversion.</li>
<li>Makie support for LibGEOS is available via <a href="https://github.com/jw3126/LibGEOSMakie.jl">LibGEOSMakie.jl</a></li>
<li>LibGEOS integrates with <a href="https://github.com/JuliaGeo/GeoInterface.jl">GeoInterface.jl</a> making it easy to combine LibGEOS with other geometry packages.</li>
</ul>
</article></div>