<div id="readme" class="md" data-path="Readme.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-trignometric-polynomials" class="anchor" aria-hidden="true" href="#trignometric-polynomials"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Trignometric Polynomials</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://juliaalgebra.github.io/TrigPolys.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/JuliaAlgebra/TrigPolys.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaAlgebra/TrigPolys.jl/workflows/CI/badge.svg?branch=master" alt="Build Status" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<ul dir="auto">
<li><a href="https://juliaalgebra.github.io/TrigPolys.jl/dev/" rel="nofollow"><strong>LATEST</strong></a> — <em>in-development version of the documentation.</em></li>
</ul>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto"><a href="https://github.com/JuliaAlgebra/TrigPolys.jl">TrigPolys.jl</a> is a package for
fast manipulation of trigonometric polynomials.</p>
<p dir="auto">A trignometric polynomial is defined on the interval [0, 2π) by</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="img/trigpoly.png"><img src="img/trigpoly.png" alt="Trig poly definition" style="max-width: 100%;"></a></p>
<p dir="auto">The polynomial p(x) can be represented either by 2n+1 coefficients aₖ or by
evaluations at 2n+1 distinct points in the interval [0, 2π). Each representation
is useful in different situations: the coefficient representation is useful for
truncating or increasing the degree of a polynomial whereas the evaluation
representation is useful for adding and multiplying polynomials.</p>
<p dir="auto">This package provides the functions <code>evaluate</code> and <code>interpolate</code> to convert
efficiently between these two representations. These operations are implemented
via the Fast Fourier Transform (FFT) provided by the
<a href="https://github.com/JuliaMath/FFTW.jl">FFTW.jl</a> library.</p>
<p dir="auto">For example, multiplying two trigonometric polynomials is implemented with the
following code:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function Base.:*(p1::TrigPoly, p2::TrigPoly)
    n = p1.n + p2.n
    interpolate(evaluate(pad_to(p1, n)) .* evaluate(pad_to(p2, n)))
end"><pre><span class="pl-k">function</span> Base.:<span class="pl-k">*</span>(p1<span class="pl-k">::</span><span class="pl-c1">TrigPoly</span>, p2<span class="pl-k">::</span><span class="pl-c1">TrigPoly</span>)
    n <span class="pl-k">=</span> p1<span class="pl-k">.</span>n <span class="pl-k">+</span> p2<span class="pl-k">.</span>n
    <span class="pl-c1">interpolate</span>(<span class="pl-c1">evaluate</span>(<span class="pl-c1">pad_to</span>(p1, n)) <span class="pl-k">.*</span> <span class="pl-c1">evaluate</span>(<span class="pl-c1">pad_to</span>(p2, n)))
<span class="pl-k">end</span></pre></div>
</article></div>