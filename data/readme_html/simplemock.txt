<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-simplemock--" class="anchor" aria-hidden="true" href="#simplemock--"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SimpleMock <a href="https://juliatesting.github.io/SimpleMock.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Docs" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://github.com/JuliaTesting/SimpleMock.jl/actions/workflows/CI.yml"><img src="https://github.com/JuliaTesting/SimpleMock.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a></h1>
<h3 dir="auto"><a id="user-content-notice-kind-of-broken" class="anchor" aria-hidden="true" href="#notice-kind-of-broken"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Notice: kind of broken</h3>
<p dir="auto">This package is <a href="https://github.com/JuliaTesting/SimpleMock.jl/issues/13" data-hovercard-type="issue" data-hovercard-url="/JuliaTesting/SimpleMock.jl/issues/13/hovercard">broken in some cases on Julia 1.6 and newer</a>, for unknown reasons.
Use at your own risk!</p>
<hr>
<p dir="auto">A basic mocking module, inspired by Python's <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow"><code>unittest.mock</code></a> and implemented with <a href="https://github.com/jrevels/Cassette.jl">Cassette</a>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SimpleMock

f(x) = x + 1
mock(+) do plus
    @assert plus isa Mock
    @assert f(0) != 1  # The call to + is mocked.
    @assert called_once_with(plus, 0, 1)
end

mock((+, Float64, Float64) =&gt; Mock((a, b) -&gt; 2a + 2b)) do plus
    @assert 1 + 1 == 2
    @assert 2.0 + 2.0 == 8
    @assert called_once_with(plus, 2.0, 2.0)
end"><pre><span class="pl-k">using</span> SimpleMock

<span class="pl-en">f</span>(x) <span class="pl-k">=</span> x <span class="pl-k">+</span> <span class="pl-c1">1</span>
<span class="pl-c1">mock</span>(<span class="pl-k">+</span>) <span class="pl-k">do</span> plus
    <span class="pl-c1">@assert</span> plus <span class="pl-k">isa</span> Mock
    <span class="pl-c1">@assert</span> <span class="pl-c1">f</span>(<span class="pl-c1">0</span>) <span class="pl-k">!=</span> <span class="pl-c1">1</span>  <span class="pl-c"><span class="pl-c">#</span> The call to + is mocked.</span>
    <span class="pl-c1">@assert</span> <span class="pl-c1">called_once_with</span>(plus, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>)
<span class="pl-k">end</span>

<span class="pl-c1">mock</span>((<span class="pl-k">+</span>, Float64, Float64) <span class="pl-k">=&gt;</span> <span class="pl-c1">Mock</span>((a, b) <span class="pl-k">-&gt;</span> <span class="pl-c1">2</span>a <span class="pl-k">+</span> <span class="pl-c1">2</span>b)) <span class="pl-k">do</span> plus
    <span class="pl-c1">@assert</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">==</span> <span class="pl-c1">2</span>
    <span class="pl-c1">@assert</span> <span class="pl-c1">2.0</span> <span class="pl-k">+</span> <span class="pl-c1">2.0</span> <span class="pl-k">==</span> <span class="pl-c1">8</span>
    <span class="pl-c1">@assert</span> <span class="pl-c1">called_once_with</span>(plus, <span class="pl-c1">2.0</span>, <span class="pl-c1">2.0</span>)
<span class="pl-k">end</span></pre></div>
<p dir="auto">See the documentation for more details and examples.</p>
</article></div>