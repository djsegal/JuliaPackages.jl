<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-simplemock--" class="anchor" aria-hidden="true" href="#simplemock--"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SimpleMock <a href="https://juliatesting.github.io/SimpleMock.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Docs" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a> <a href="https://travis-ci.com/JuliaTesting/SimpleMock.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/09ced26a184a860b1700a90a3f914e36f1a41f2e/68747470733a2f2f7472617669732d63692e636f6d2f4a756c696154657374696e672f53696d706c654d6f636b2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/JuliaTesting/SimpleMock.jl.svg?branch=master" style="max-width:100%;"></a></h1>
<p>A basic mocking module, inspired by Python's <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow"><code>unittest.mock</code></a> and implemented with <a href="https://github.com/jrevels/Cassette.jl">Cassette</a>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> SimpleMock

<span class="pl-en">f</span>(x) <span class="pl-k">=</span> x <span class="pl-k">+</span> <span class="pl-c1">1</span>
<span class="pl-c1">mock</span>(<span class="pl-k">+</span>) <span class="pl-k">do</span> plus
    <span class="pl-c1">@assert</span> plus <span class="pl-k">isa</span> Mock
    <span class="pl-c1">@assert</span> <span class="pl-c1">f</span>(<span class="pl-c1">0</span>) <span class="pl-k">!=</span> <span class="pl-c1">1</span>  <span class="pl-c"><span class="pl-c">#</span> The call to + is mocked.</span>
    <span class="pl-c1">@assert</span> <span class="pl-c1">called_once_with</span>(plus, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>)
<span class="pl-k">end</span>

<span class="pl-c1">mock</span>((<span class="pl-k">+</span>, Float64, Float64) <span class="pl-k">=&gt;</span> <span class="pl-c1">Mock</span>((a, b) <span class="pl-k">-&gt;</span> <span class="pl-c1">2</span>a <span class="pl-k">+</span> <span class="pl-c1">2</span>b)) <span class="pl-k">do</span> plus
    <span class="pl-c1">@assert</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">==</span> <span class="pl-c1">2</span>
    <span class="pl-c1">@assert</span> <span class="pl-c1">2.0</span> <span class="pl-k">+</span> <span class="pl-c1">2.0</span> <span class="pl-k">==</span> <span class="pl-c1">8</span>
    <span class="pl-c1">@assert</span> <span class="pl-c1">called_once_with</span>(plus, <span class="pl-c1">2.0</span>, <span class="pl-c1">2.0</span>)
<span class="pl-k">end</span></pre></div>
<p>See the documentation for more details and examples.</p>
</article></div>