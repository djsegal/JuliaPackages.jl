<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-intervalrootfindingjl" class="anchor" aria-hidden="true" href="#intervalrootfindingjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>IntervalRootFinding.jl</h1>
<p><a href="https://github.com/JuliaIntervals/IntervalRootFinding.jl/actions/workflows/CI.yml"><img src="https://github.com/JuliaIntervals/IntervalRootFinding.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a></p>
<p><a href="https://codecov.io/gh/JuliaIntervals/IntervalRootFinding.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9b9c14fa3e641bf7c66306fe33947d6d57882c9dbada48ed746584c4f74ef6aa/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961496e74657276616c732f496e74657276616c526f6f7446696e64696e672e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="coverage" data-canonical-src="https://codecov.io/gh/JuliaIntervals/IntervalRootFinding.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p><a href="https://juliaintervals.github.io/pages/packages/intervalrootfinding/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a></p>
<p>This package provides guaranteed methods for finding <strong>roots</strong> of functions, i.e. solutions to the equation <code>f(x) == 0</code> for a function <code>f</code>.
To do so, it uses methods from interval analysis, using interval arithmetic from the <a href="https://github.com/JuliaIntervals/IntervalArithmetic.jl"><code>IntervalArithmetic.jl</code></a> package by the same authors.</p>
<h2><a id="user-content-basic-usage-examples" class="anchor" aria-hidden="true" href="#basic-usage-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic usage examples</h2>
<p>The basic function is <code>roots</code>. A standard Julia function and an interval is provided and the <code>roots</code> function return a list of intervals containing <em>all</em> roots of the function located in the starting interval.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using IntervalArithmetic, IntervalRootFinding

julia&gt; f(x) = sin(x) - 0.1*x^2 + 1
f (generic function with 1 method)

julia&gt; roots(f, -10..10)
4-element Array{Root{Interval{Float64}},1}:
 Root([3.14959, 3.1496], :unique)
 Root([-4.42654, -4.42653], :unique)
 Root([-1.08205, -1.08204], :unique)
 Root([-3.10682, -3.10681], :unique)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> IntervalArithmetic, IntervalRootFinding

julia<span class="pl-k">&gt;</span> <span class="pl-en">f</span>(x) <span class="pl-k">=</span> <span class="pl-c1">sin</span>(x) <span class="pl-k">-</span> <span class="pl-c1">0.1</span><span class="pl-k">*</span>x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>
f (generic <span class="pl-k">function</span> with <span class="pl-c1">1</span> method)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">roots</span>(f, <span class="pl-k">-</span><span class="pl-c1">10..10</span>)
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{Root{Interval{Float64}},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Root</span>([<span class="pl-c1">3.14959</span>, <span class="pl-c1">3.1496</span>], <span class="pl-c1">:unique</span>)
 <span class="pl-c1">Root</span>([<span class="pl-k">-</span><span class="pl-c1">4.42654</span>, <span class="pl-k">-</span><span class="pl-c1">4.42653</span>], <span class="pl-c1">:unique</span>)
 <span class="pl-c1">Root</span>([<span class="pl-k">-</span><span class="pl-c1">1.08205</span>, <span class="pl-k">-</span><span class="pl-c1">1.08204</span>], <span class="pl-c1">:unique</span>)
 <span class="pl-c1">Root</span>([<span class="pl-k">-</span><span class="pl-c1">3.10682</span>, <span class="pl-k">-</span><span class="pl-c1">3.10681</span>], <span class="pl-c1">:unique</span>)</pre></div>
<p>The <code>:unique</code> status tell us, in addition, that each listed region contains exactly one root. The other possible status is <code>:unknown</code>, which corresponds to intervals that may contain zero, one, or more roots - no guarantee is provided for these intervals.</p>
<p>These results are represented in the following plot, the region containing roots being in green. The inset show a close-up of one of the roots:</p>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/basic_usage.png"><img src="docs/src/basic_usage.png" alt="basic usage" style="max-width:100%;"></a></p>
<p>The full documentation is available <a href="https://juliaintervals.github.io/IntervalRootFinding.jl/latest/" rel="nofollow">here</a>.</p>
<h2><a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Authors</h2>
<ul>
<li><a href="http://www.cicc.unam.mx/~benet/" rel="nofollow">Luis Benet</a>, Instituto de Ciencias Físicas,
Universidad Nacional Autónoma de México (UNAM)</li>
<li><a href="http://sistemas.fciencias.unam.mx/~dsanders" rel="nofollow">David P. Sanders</a>,
Departamento de Física, Facultad de Ciencias, Universidad Nacional Autónoma de México (UNAM)</li>
</ul>
<h2><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Acknowledgements</h2>
<p>Financial support is acknowledged from DGAPA-UNAM PAPIME grants PE-105911 and PE-107114, and DGAPA-UNAM PAPIIT grants IN-117214 and IN-117117. LB acknowledges support through a <em>Cátedra Moshinsky</em> (2013).</p>
</article></div>