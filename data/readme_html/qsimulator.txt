<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-qsimulatorjl" class="anchor" aria-hidden="true" href="#qsimulatorjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>QSimulator.jl</h1>
<p dir="auto"><a href="https://github.com/BBN-Q/QSimulator.jl/actions/workflows/CI.yml"><img src="https://github.com/BBN-Q/QSimulator.jl/actions/workflows/CI.yml/badge.svg?branch=master" alt="CI" style="max-width: 100%;"></a></p>
<p dir="auto">Package for simulating time dynamics of quantum systems with a focus on superconducting qubits.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="(v1.2) pkg&gt; add https://github.com/BBN-Q/QSimulator.jl"><pre class="notranslate"><code>(v1.2) pkg&gt; add https://github.com/BBN-Q/QSimulator.jl
</code></pre></div>
<h2 dir="auto"><a id="user-content-unit-tests" class="anchor" aria-hidden="true" href="#unit-tests"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Unit tests</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.test(&quot;QSimulator&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">test</span>(<span class="pl-s"><span class="pl-pds">"</span>QSimulator<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Benchmarks</h2>
<p dir="auto">We can track the code performance between commits by running the benchmarking suite in
<code>benchmark/benchmarks.jl</code> using <a href="https://github.com/JuliaCI/PkgBenchmark.jl">PkgBenchmark</a>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import QSimulator

julia&gt; using PkgBenchmark

julia&gt; results = benchmarkpkg(&quot;QSimulator&quot;)
PkgBenchmark: Running benchmarks...
PkgBenchmark: using benchmark tuning data in /home/cryan/repos/QSimulator.jl/benchmark/tune.json
Benchmarking:  54%|███████████████████████████████████████████████████████████████▎                                                      |  ETA: 0:01:00
    [2/2]:        &quot;unitary&quot;
      [1/2]:      &quot;propagator&quot;
        [1/4]:    &quot;lab frame parametric 2Q gate&quot;
          [2/2]:  &quot;2 transmons&quot;
          ⋮

julia&gt; export_markdown(stdout, results)
# Benchmark Report for *.*

## Job Properties
* Time of benchmark: 3 Sep 2019 - 22:11
* Package commit: dirty
* Julia commit: c6da87
* Julia command flags: None
* Environment variables: None

## Results
Below is a table of this job's results, obtained by running the benchmarks.
The values listed in the `ID` column have the structure `[parent_group, child_group, ..., key]`, and can be used to
index into the BaseBenchmarks suite to retrieve the corresponding benchmarks.
The percentages accompanying time and memory values in the below table are noise tolerances. The &quot;true&quot;
time/memory value for a given benchmark is expected to fall within this percentage of the reported value.
An empty cell means that the value was zero.

| ID                                                | time            | GC time    | memory          | allocations |
|---------------------------------------------------|----------------:|-----------:|----------------:|------------:|
| `[&quot;operators&quot;, &quot;X(q) (2 levels)&quot;]`                |  97.304 ns (5%) |            |  272 bytes (1%) |           4 |
| `[&quot;operators&quot;, &quot;X(q) (3 levels)&quot;]`                | 102.005 ns (5%) |            |  320 bytes (1%) |           4 |
| `[&quot;operators&quot;, &quot;X(q) (4 levels)&quot;]`                | 108.733 ns (5%) |            |  384 bytes (1%) |           4 |
| `[&quot;operators&quot;, &quot;X(q) (5 levels)&quot;]`                | 113.097 ns (5%) |            |  464 bytes (1%) |           4 |
| `[&quot;operators&quot;, &quot;X(q, 0.123) (2 levels)&quot;]`         |  95.520 ns (5%) |            |  272 bytes (1%) |           4 |
| `[&quot;operators&quot;, &quot;X(q, 0.123) (3 levels)&quot;]`         | 101.485 ns (5%) |            |  320 bytes (1%) |           4 |
| `[&quot;operators&quot;, &quot;X(q, 0.123) (4 levels)&quot;]`         | 105.386 ns (5%) |            |  384 bytes (1%) |           4 |
| `[&quot;operators&quot;, &quot;X(q, 0.123) (5 levels)&quot;]`         | 116.289 ns (5%) |            |  464 bytes (1%) |           4 |
| `[&quot;operators&quot;, &quot;lowering(q) (2 levels)&quot;]`         |  77.935 ns (5%) |            |  240 bytes (1%) |           3 |
| `[&quot;operators&quot;, &quot;lowering(q) (3 levels)&quot;]`         |  80.843 ns (5%) |            |  288 bytes (1%) |           3 |
⋮"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> QSimulator

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PkgBenchmark

julia<span class="pl-k">&gt;</span> results <span class="pl-k">=</span> <span class="pl-c1">benchmarkpkg</span>(<span class="pl-s"><span class="pl-pds">"</span>QSimulator<span class="pl-pds">"</span></span>)
PkgBenchmark<span class="pl-k">:</span> Running benchmarks<span class="pl-k">...</span>
PkgBenchmark<span class="pl-k">:</span> <span class="pl-k">using</span> benchmark tuning data <span class="pl-k">in</span> <span class="pl-k">/</span>home<span class="pl-k">/</span>cryan<span class="pl-k">/</span>repos<span class="pl-k">/</span>QSimulator<span class="pl-k">.</span>jl<span class="pl-k">/</span>benchmark<span class="pl-k">/</span>tune<span class="pl-k">.</span>json
Benchmarking<span class="pl-k">:</span>  <span class="pl-c1">54</span><span class="pl-k">%</span><span class="pl-k">|</span>███████████████████████████████████████████████████████████████▎                                                      <span class="pl-k">|</span>  ETA<span class="pl-k">:</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">01</span><span class="pl-k">:</span><span class="pl-c1">00</span>
    [<span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>]<span class="pl-k">:</span>        <span class="pl-s"><span class="pl-pds">"</span>unitary<span class="pl-pds">"</span></span>
      [<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>]<span class="pl-k">:</span>      <span class="pl-s"><span class="pl-pds">"</span>propagator<span class="pl-pds">"</span></span>
        [<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">4</span>]<span class="pl-k">:</span>    <span class="pl-s"><span class="pl-pds">"</span>lab frame parametric 2Q gate<span class="pl-pds">"</span></span>
          [<span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">2</span>]<span class="pl-k">:</span>  <span class="pl-s"><span class="pl-pds">"</span>2 transmons<span class="pl-pds">"</span></span>
          ⋮

julia<span class="pl-k">&gt;</span> <span class="pl-c1">export_markdown</span>(<span class="pl-c1">stdout</span>, results)
<span class="pl-c"><span class="pl-c">#</span> Benchmark Report for *.*</span>

<span class="pl-c"><span class="pl-c">#</span># Job Properties</span>
<span class="pl-k">*</span> Time of benchmark<span class="pl-k">:</span> <span class="pl-c1">3</span> Sep <span class="pl-c1">2019</span> <span class="pl-k">-</span> <span class="pl-c1">22</span><span class="pl-k">:</span><span class="pl-c1">11</span>
<span class="pl-k">*</span> Package commit<span class="pl-k">:</span> dirty
<span class="pl-k">*</span> Julia commit<span class="pl-k">:</span> c6da87
<span class="pl-k">*</span> Julia command flags<span class="pl-k">:</span> None
<span class="pl-k">*</span> Environment variables<span class="pl-k">:</span> None

<span class="pl-c"><span class="pl-c">#</span># Results</span>
Below is a table of this job<span class="pl-k">'</span>s results, obtained by running the benchmarks.
The values listed <span class="pl-k">in</span> the <span class="pl-s"><span class="pl-pds">`</span>ID<span class="pl-pds">`</span></span> column have the structure <span class="pl-s"><span class="pl-pds">`</span>[parent_group, child_group, ..., key]<span class="pl-pds">`</span></span>, and can be used to
index into the BaseBenchmarks suite to retrieve the corresponding benchmarks.
The percentages accompanying time and memory values <span class="pl-k">in</span> the below table are noise tolerances. The <span class="pl-s"><span class="pl-pds">"</span>true<span class="pl-pds">"</span></span>
time<span class="pl-k">/</span>memory value <span class="pl-k">for</span> a given benchmark is expected to fall within this percentage of the reported value.
An empty cell means that the value was zero.

<span class="pl-k">|</span> ID                                                <span class="pl-k">|</span> time            <span class="pl-k">|</span> GC time    <span class="pl-k">|</span> memory          <span class="pl-k">|</span> allocations <span class="pl-k">|</span>
<span class="pl-k">|</span><span class="pl-k">---------------------------------------------------</span><span class="pl-k">|</span><span class="pl-k">----------------</span>:<span class="pl-k">|</span><span class="pl-k">-----------</span>:<span class="pl-k">|</span><span class="pl-k">----------------</span>:<span class="pl-k">|</span><span class="pl-k">------------</span>:<span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">`</span>["operators", "X(q) (2 levels)"]<span class="pl-pds">`</span></span>                <span class="pl-k">|</span>  <span class="pl-c1">97.304</span> ns (<span class="pl-c1">5</span><span class="pl-k">%</span>) <span class="pl-k">|</span>            <span class="pl-k">|</span>  <span class="pl-c1">272</span> bytes (<span class="pl-c1">1</span><span class="pl-k">%</span>) <span class="pl-k">|</span>           <span class="pl-c1">4</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">`</span>["operators", "X(q) (3 levels)"]<span class="pl-pds">`</span></span>                <span class="pl-k">|</span> <span class="pl-c1">102.005</span> ns (<span class="pl-c1">5</span><span class="pl-k">%</span>) <span class="pl-k">|</span>            <span class="pl-k">|</span>  <span class="pl-c1">320</span> bytes (<span class="pl-c1">1</span><span class="pl-k">%</span>) <span class="pl-k">|</span>           <span class="pl-c1">4</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">`</span>["operators", "X(q) (4 levels)"]<span class="pl-pds">`</span></span>                <span class="pl-k">|</span> <span class="pl-c1">108.733</span> ns (<span class="pl-c1">5</span><span class="pl-k">%</span>) <span class="pl-k">|</span>            <span class="pl-k">|</span>  <span class="pl-c1">384</span> bytes (<span class="pl-c1">1</span><span class="pl-k">%</span>) <span class="pl-k">|</span>           <span class="pl-c1">4</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">`</span>["operators", "X(q) (5 levels)"]<span class="pl-pds">`</span></span>                <span class="pl-k">|</span> <span class="pl-c1">113.097</span> ns (<span class="pl-c1">5</span><span class="pl-k">%</span>) <span class="pl-k">|</span>            <span class="pl-k">|</span>  <span class="pl-c1">464</span> bytes (<span class="pl-c1">1</span><span class="pl-k">%</span>) <span class="pl-k">|</span>           <span class="pl-c1">4</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">`</span>["operators", "X(q, 0.123) (2 levels)"]<span class="pl-pds">`</span></span>         <span class="pl-k">|</span>  <span class="pl-c1">95.520</span> ns (<span class="pl-c1">5</span><span class="pl-k">%</span>) <span class="pl-k">|</span>            <span class="pl-k">|</span>  <span class="pl-c1">272</span> bytes (<span class="pl-c1">1</span><span class="pl-k">%</span>) <span class="pl-k">|</span>           <span class="pl-c1">4</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">`</span>["operators", "X(q, 0.123) (3 levels)"]<span class="pl-pds">`</span></span>         <span class="pl-k">|</span> <span class="pl-c1">101.485</span> ns (<span class="pl-c1">5</span><span class="pl-k">%</span>) <span class="pl-k">|</span>            <span class="pl-k">|</span>  <span class="pl-c1">320</span> bytes (<span class="pl-c1">1</span><span class="pl-k">%</span>) <span class="pl-k">|</span>           <span class="pl-c1">4</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">`</span>["operators", "X(q, 0.123) (4 levels)"]<span class="pl-pds">`</span></span>         <span class="pl-k">|</span> <span class="pl-c1">105.386</span> ns (<span class="pl-c1">5</span><span class="pl-k">%</span>) <span class="pl-k">|</span>            <span class="pl-k">|</span>  <span class="pl-c1">384</span> bytes (<span class="pl-c1">1</span><span class="pl-k">%</span>) <span class="pl-k">|</span>           <span class="pl-c1">4</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">`</span>["operators", "X(q, 0.123) (5 levels)"]<span class="pl-pds">`</span></span>         <span class="pl-k">|</span> <span class="pl-c1">116.289</span> ns (<span class="pl-c1">5</span><span class="pl-k">%</span>) <span class="pl-k">|</span>            <span class="pl-k">|</span>  <span class="pl-c1">464</span> bytes (<span class="pl-c1">1</span><span class="pl-k">%</span>) <span class="pl-k">|</span>           <span class="pl-c1">4</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">`</span>["operators", "lowering(q) (2 levels)"]<span class="pl-pds">`</span></span>         <span class="pl-k">|</span>  <span class="pl-c1">77.935</span> ns (<span class="pl-c1">5</span><span class="pl-k">%</span>) <span class="pl-k">|</span>            <span class="pl-k">|</span>  <span class="pl-c1">240</span> bytes (<span class="pl-c1">1</span><span class="pl-k">%</span>) <span class="pl-k">|</span>           <span class="pl-c1">3</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">`</span>["operators", "lowering(q) (3 levels)"]<span class="pl-pds">`</span></span>         <span class="pl-k">|</span>  <span class="pl-c1">80.843</span> ns (<span class="pl-c1">5</span><span class="pl-k">%</span>) <span class="pl-k">|</span>            <span class="pl-k">|</span>  <span class="pl-c1">288</span> bytes (<span class="pl-c1">1</span><span class="pl-k">%</span>) <span class="pl-k">|</span>           <span class="pl-c1">3</span> <span class="pl-k">|</span>
⋮</pre></div>
<h3 dir="auto"><a id="user-content-comparing-benchmarks" class="anchor" aria-hidden="true" href="#comparing-benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Comparing benchmarks</h3>
<p dir="auto">To track performance regressions or improvements run the benchmark suite as above on the two
different branches.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Statistics: median

julia&gt; judgement = judge(&quot;QSimulator&quot;, &quot;faster-branch&quot;, &quot;master&quot;; f=median)

julia&gt; export_markdown(stdout, judgement)
⋮"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Statistics<span class="pl-k">:</span> median

julia<span class="pl-k">&gt;</span> judgement <span class="pl-k">=</span> <span class="pl-c1">judge</span>(<span class="pl-s"><span class="pl-pds">"</span>QSimulator<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>faster-branch<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>master<span class="pl-pds">"</span></span>; f<span class="pl-k">=</span>median)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">export_markdown</span>(<span class="pl-c1">stdout</span>, judgement)
⋮</pre></div>
</article></div>