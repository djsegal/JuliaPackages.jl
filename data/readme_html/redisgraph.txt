<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-redisgraph-julia-client" class="anchor" aria-hidden="true" href="#redisgraph-julia-client"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>RedisGraph Julia client</h1>
<h2><a id="user-content-usage-example" class="anchor" aria-hidden="true" href="#usage-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage example</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using RedisGraph

db_conn = getdatabase()
g = Graph(&quot;TestGraph&quot;, db_conn)

node1 = Node(&quot;FirstSimpleNode&quot;, Dict(&quot;IntProp&quot; =&gt; 1, &quot;StringProp&quot; =&gt; &quot;node prop&quot;, &quot;BoolProp&quot; =&gt; true))
node2 = Node(&quot;SecondSimpleNode&quot;)
edge = Edge(&quot;SimpleEdge&quot;, node1, node2, Dict(&quot;IntProp&quot; =&gt; 1, &quot;StringProp&quot; =&gt; &quot;node prop&quot;, &quot;BoolProp&quot; =&gt; false))

addnode!(g, node1)
addnode!(g, node2)
addedge!(g, edge)
res = commit(g)

res = query(g, &quot;MATCH (n1)-[e]-&gt;(n2) RETURN n1, e, n2&quot;)
println(res.results[1])

delete(g)
"><pre><span class="pl-k">using</span> RedisGraph

db_conn <span class="pl-k">=</span> <span class="pl-c1">getdatabase</span>()
g <span class="pl-k">=</span> <span class="pl-c1">Graph</span>(<span class="pl-s"><span class="pl-pds">"</span>TestGraph<span class="pl-pds">"</span></span>, db_conn)

node1 <span class="pl-k">=</span> <span class="pl-c1">Node</span>(<span class="pl-s"><span class="pl-pds">"</span>FirstSimpleNode<span class="pl-pds">"</span></span>, <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>IntProp<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">"</span>StringProp<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>node prop<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>BoolProp<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">true</span>))
node2 <span class="pl-k">=</span> <span class="pl-c1">Node</span>(<span class="pl-s"><span class="pl-pds">"</span>SecondSimpleNode<span class="pl-pds">"</span></span>)
edge <span class="pl-k">=</span> <span class="pl-c1">Edge</span>(<span class="pl-s"><span class="pl-pds">"</span>SimpleEdge<span class="pl-pds">"</span></span>, node1, node2, <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>IntProp<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">"</span>StringProp<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>node prop<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>BoolProp<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">false</span>))

<span class="pl-c1">addnode!</span>(g, node1)
<span class="pl-c1">addnode!</span>(g, node2)
<span class="pl-c1">addedge!</span>(g, edge)
res <span class="pl-k">=</span> <span class="pl-c1">commit</span>(g)

res <span class="pl-k">=</span> <span class="pl-c1">query</span>(g, <span class="pl-s"><span class="pl-pds">"</span>MATCH (n1)-[e]-&gt;(n2) RETURN n1, e, n2<span class="pl-pds">"</span></span>)
<span class="pl-c1">println</span>(res<span class="pl-k">.</span>results[<span class="pl-c1">1</span>])

<span class="pl-c1">delete</span>(g)</pre></div>
<h2><a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Prerequisites</h2>
<p>julia &gt;= 1.6.0<br>
redisgraph &gt;= 2.0</p>
<h2><a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Setup</h2>
<ol>
<li>redisgraph needs to be running.</li>
</ol>
<p>You can install it <a href="https://docs.redislabs.com/latest/modules/redisgraph/redisgraph-quickstart/" rel="nofollow">manually</a><br>
Or you can use <a href="https://hub.docker.com/r/redislabs/redisgraph" rel="nofollow">docker container</a> instead of. For example:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="docker run -p 6379:6379 -it --rm redislabs/redisgraph
"><pre><code>docker run -p 6379:6379 -it --rm redislabs/redisgraph
</code></pre></div>
<ol start="2">
<li>add RedisGraph from the github repo</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="pkg&gt; add https://github.com/xyxel/RedisGraph.jl
"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>xyxel<span class="pl-k">/</span>RedisGraph<span class="pl-k">.</span>jl</pre></div>
<p>More information about package management: <a href="https://pkgdocs.julialang.org/v1/" rel="nofollow">https://pkgdocs.julialang.org/v1/</a></p>
</article></div>