<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png">⚠️</g-emoji> This project is no longer maintained and is not guaranteed to work on newer versions of Julia. Please refer to <a href="https://github.com/JuliaGraphs/LightGraphs.jl">LightGraphs</a> package if you need graph algorithms.</p>
<br>
<br>
<p align="center">
  <a target="_blank" rel="noopener noreferrer" href="./doc/src/images/logo.svg"><img alt="logo" src="./doc/src/images/logo.svg" height="200px" style="max-width:100%;"></a>
</p>
<br>
<h1><a id="user-content-junet--networks-package-for-julia" class="anchor" aria-hidden="true" href="#junet--networks-package-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Junet — Networks Package for Julia</h1>
<p>Junet is a new package for network analysis that seeks
to be a fast and hackable alternative to mainstream network analysis
libraries such as NetworkX, igraph, and graph-tool.
Unlike other Julia packages, it allows to quickly traverse and modify
the graphs as well as to associate the attributes with their nodes and edges.</p>
<p>Currently, Junet is in <em>alpha</em> stage: many features are being ported from
experimental branches. Some things may break unexpectedly.
To report a problem, please create an issue here. To contribute some code, please fork this repository and create a pull request.</p>
<h2><a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Demo</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Junet

g = graph_smallworld(100, 4, .1)

plot(g, node_size=10degree(g), edge_curve=.5)
"><pre><span class="pl-k">using</span> Junet

g <span class="pl-k">=</span> <span class="pl-c1">graph_smallworld</span>(<span class="pl-c1">100</span>, <span class="pl-c1">4</span>, <span class="pl-c1">.1</span>)

<span class="pl-c1">plot</span>(g, node_size<span class="pl-k">=</span><span class="pl-c1">10</span><span class="pl-c1">degree</span>(g), edge_curve<span class="pl-k">=</span><span class="pl-c1">.5</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="./doc/src/images/test.svg"><img alt="plot" src="./doc/src/images/test.svg" height="450px" style="max-width:100%;"></a></p>
<p>See <a href="https://github.com/inguar/Junet-demos">more examples</a>.</p>
<h2><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h2>
<ul>
<li>Familiar syntax to manipulate graphs.</li>
</ul>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="g = Graph(directed=true)  # create new graph

addnode!(g, 10)     # add 10 nodes

for i = 1:20        # add 20 random edges
    addedge!(g, rand(nodes(g), 2)...)
end

plot(g)             # layout and display the result
"><pre>g <span class="pl-k">=</span> <span class="pl-c1">Graph</span>(directed<span class="pl-k">=</span><span class="pl-c1">true</span>)  <span class="pl-c"><span class="pl-c">#</span> create new graph</span>

<span class="pl-c1">addnode!</span>(g, <span class="pl-c1">10</span>)     <span class="pl-c"><span class="pl-c">#</span> add 10 nodes</span>

<span class="pl-k">for</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">20</span>        <span class="pl-c"><span class="pl-c">#</span> add 20 random edges</span>
    <span class="pl-c1">addedge!</span>(g, <span class="pl-c1">rand</span>(<span class="pl-c1">nodes</span>(g), <span class="pl-c1">2</span>)<span class="pl-k">...</span>)
<span class="pl-k">end</span>

<span class="pl-c1">plot</span>(g)             <span class="pl-c"><span class="pl-c">#</span> layout and display the result</span></pre></div>
<ul>
<li>Arbitrary-typed node and edge attributes stored within network objects.</li>
</ul>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="g[:, :size] = &quot;a&quot;     # add a constant attribute to all nodes

g[2:4, :size] = &quot;b&quot;   # change value for particular nodes

g[:, :, :weight] = 1  # add constant edge attribute

g[1, 2, :weight] = 3  # then change it for certain edge...

g[4:6, 8:10, :weight] = 2  # ... or a whole range of edges
"><pre>g[:, <span class="pl-c1">:size</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>     <span class="pl-c"><span class="pl-c">#</span> add a constant attribute to all nodes</span>

g[<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">4</span>, <span class="pl-c1">:size</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>   <span class="pl-c"><span class="pl-c">#</span> change value for particular nodes</span>

g[:, :, <span class="pl-c1">:weight</span>] <span class="pl-k">=</span> <span class="pl-c1">1</span>  <span class="pl-c"><span class="pl-c">#</span> add constant edge attribute</span>

g[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">:weight</span>] <span class="pl-k">=</span> <span class="pl-c1">3</span>  <span class="pl-c"><span class="pl-c">#</span> then change it for certain edge...</span>

g[<span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">6</span>, <span class="pl-c1">8</span><span class="pl-k">:</span><span class="pl-c1">10</span>, <span class="pl-c1">:weight</span>] <span class="pl-k">=</span> <span class="pl-c1">2</span>  <span class="pl-c"><span class="pl-c">#</span> ... or a whole range of edges</span></pre></div>
<p>What's better is that attributes are stored in sparse data structures,
which can greatly improve the memory consumption.</p>
<ul>
<li>Smaller data structures. By default, Junet uses <code>UInt32</code>s everywhere
and takes up to 2 times less space than libraries using <code>Int64</code>s.
Users can also strip off support for edge attributes, which gives
an additional 2x improvement in memory footprint.</li>
</ul>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="g = Graph(TNode=Int, TEdge=Int)  # about the same size as igraph on 64-bit machines

g = Graph(TNode=UInt32, TEdge=UInt32)  # 2 times smaller (default)

g = Graph(TNode=UInt32, TEdge=Nothing)    # 4 times smaller

g = Graph(TNode=UInt8, TEdge=Nothing)     # hardly usable, but ~16x smaller!
"><pre>g <span class="pl-k">=</span> <span class="pl-c1">Graph</span>(TNode<span class="pl-k">=</span>Int, TEdge<span class="pl-k">=</span>Int)  <span class="pl-c"><span class="pl-c">#</span> about the same size as igraph on 64-bit machines</span>

g <span class="pl-k">=</span> <span class="pl-c1">Graph</span>(TNode<span class="pl-k">=</span>UInt32, TEdge<span class="pl-k">=</span>UInt32)  <span class="pl-c"><span class="pl-c">#</span> 2 times smaller (default)</span>

g <span class="pl-k">=</span> <span class="pl-c1">Graph</span>(TNode<span class="pl-k">=</span>UInt32, TEdge<span class="pl-k">=</span>Nothing)    <span class="pl-c"><span class="pl-c">#</span> 4 times smaller</span>

g <span class="pl-k">=</span> <span class="pl-c1">Graph</span>(TNode<span class="pl-k">=</span>UInt8, TEdge<span class="pl-k">=</span>Nothing)     <span class="pl-c"><span class="pl-c">#</span> hardly usable, but ~16x smaller!</span></pre></div>
<ul>
<li>Zero-cost views on the networks, which don't copy the data.</li>
</ul>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="ug = undirected(g)  # network data not copied

rg = reverse(g)     # here too

dg = directed(undirected(g))   # another object, but indistinguishable from g
"><pre>ug <span class="pl-k">=</span> <span class="pl-c1">undirected</span>(g)  <span class="pl-c"><span class="pl-c">#</span> network data not copied</span>

rg <span class="pl-k">=</span> <span class="pl-c1">reverse</span>(g)     <span class="pl-c"><span class="pl-c">#</span> here too</span>

dg <span class="pl-k">=</span> <span class="pl-c1">directed</span>(<span class="pl-c1">undirected</span>(g))   <span class="pl-c"><span class="pl-c">#</span> another object, but indistinguishable from g</span></pre></div>
<h2><a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Performance</h2>
<p>Here's how Junet compares with other network analysis tools.
They all are tested on a <a href="https://snap.stanford.edu/data/soc-LiveJournal1.html" rel="nofollow">LiveJournal network</a>:
they had to load it into RAM and run 4 different algorithms on it.</p>
<table>
<thead>
<tr>
<th></th>
<th align="right">igraph</th>
<th align="right">graph-tool</th>
<th align="right">SNAP</th>
<th align="right"><em>Junet</em></th>
<th align="right"><em>Junet*</em></th>
<th align="right">NetworkX</th>
</tr>
</thead>
<tbody>
<tr>
<td>Memory</td>
<td align="right">2,285 MB</td>
<td align="right">3,457 MB</td>
<td align="right">5,120 MB</td>
<td align="right">2,247 MB</td>
<td align="right">591 MB</td>
<td align="right">43,343 MB</td>
</tr>
<tr>
<td>Conn. Components</td>
<td align="right">3.5 s</td>
<td align="right">3.4 s</td>
<td align="right">22.5 s</td>
<td align="right">3.6 s</td>
<td align="right">2.8 s</td>
<td align="right">35.5 s</td>
</tr>
<tr>
<td>K-cores</td>
<td align="right">6.2 s</td>
<td align="right">3.2 s</td>
<td align="right">39.4 s</td>
<td align="right">9.5 s</td>
<td align="right">8.5 s</td>
<td align="right">349.2 s</td>
</tr>
<tr>
<td>PageRank</td>
<td align="right">22.2 s</td>
<td align="right">50.6 s</td>
<td align="right">250.2 s</td>
<td align="right">24.3 s</td>
<td align="right">17.3 s</td>
<td align="right">625.9 s</td>
</tr>
<tr>
<td>Clustering Coef.</td>
<td align="right">22.2 s</td>
<td align="right">254.2 s</td>
<td align="right">266.9 s</td>
<td align="right">44.9 s</td>
<td align="right">35.2 s</td>
<td align="right">2804.4 s</td>
</tr>
</tbody>
</table>
<p>* Asterisk denotes the version with RAM optimizations enabled.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>You need Julia 1.0 or newer to run Junet. You can check it out from this repository as it is not listed on METADATA registry. Run the following command in your REPL's package mode:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(v1.0) pkg&gt; add &quot;git://github.com/inguar/Junet.jl.git&quot;
"><pre>(v1.<span class="pl-c1">0</span>) pkg<span class="pl-k">&gt;</span> add <span class="pl-s"><span class="pl-pds">"</span>git://github.com/inguar/Junet.jl.git<span class="pl-pds">"</span></span></pre></div>
<p>If you want to update the package, just run the built-in <code>update</code> command.</p>
<h2><a id="user-content-citing-junet" class="anchor" aria-hidden="true" href="#citing-junet"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Citing Junet</h2>
<p>If you're using Junet in scientific research, here is a way to cite it:</p>
<div class="highlight highlight-text-bibtex position-relative" data-snippet-clipboard-copy-content="@inbook{
    Zakhlebin_2017,
    author={Zakhlebin, Igor},
    title={Junet: a Julia package for network research},
    booktitle={Proceedings of 11th International AAAI Conference on Web and Social Media (ICWSM-17)},
    year={2017},
    place={Montreal, Canada},
    pages={731–732}
}
"><pre><span class="pl-k">@inbook</span>{
    Zakhlebin_2017,
    <span class="pl-s">author</span>=<span class="pl-s"><span class="pl-pds">{</span>Zakhlebin, Igor<span class="pl-pds">}</span></span>,
    <span class="pl-s">title</span>=<span class="pl-s"><span class="pl-pds">{</span>Junet: a Julia package for network research<span class="pl-pds">}</span></span>,
    <span class="pl-s">booktitle</span>=<span class="pl-s"><span class="pl-pds">{</span>Proceedings of 11th International AAAI Conference on Web and Social Media (ICWSM-17)<span class="pl-pds">}</span></span>,
    <span class="pl-s">year</span>=<span class="pl-s"><span class="pl-pds">{</span>2017<span class="pl-pds">}</span></span>,
    <span class="pl-s">place</span>=<span class="pl-s"><span class="pl-pds">{</span>Montreal, Canada<span class="pl-pds">}</span></span>,
    <span class="pl-s">pages</span>=<span class="pl-s"><span class="pl-pds">{</span>731–732<span class="pl-pds">}</span></span>
}</pre></div>
</article></div>