<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p align="center">
  <a target="_blank" rel="noopener noreferrer" href="./doc/src/images/logo.svg"><img alt="logo" src="./doc/src/images/logo.svg" height="200px" style="max-width:100%;"></a>
</p>
<br>
<h1><a id="user-content-junet--networks-package-for-julia" class="anchor" aria-hidden="true" href="#junet--networks-package-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Junet â€” Networks Package for Julia</h1>
<p>Junet is a new package for network analysis that seeks
to be a fast and hackable alternative to mainstream network analysis
libraries such as NetworkX, igraph, and graph-tool.
Unlike other Julia packages, it allows to quickly traverse and modify
the graphs as well as to associate the attributes with their nodes and edges.</p>
<p>Currently, Junet is in <em>alpha</em> stage: many features are being ported from
experimental branches. Some things may break unexpectedly.
To report a problem, please create an issue here. To contribute some code, please fork this repository and create a pull request.</p>
<h2><a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Demo</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Junet

g <span class="pl-k">=</span> <span class="pl-c1">graph_smallworld</span>(<span class="pl-c1">100</span>, <span class="pl-c1">4</span>, <span class="pl-c1">.1</span>)

<span class="pl-c1">plot</span>(g, node_size<span class="pl-k">=</span><span class="pl-c1">10</span><span class="pl-c1">degree</span>(g), edge_curve<span class="pl-k">=</span><span class="pl-c1">.5</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="./doc/src/images/test.svg"><img alt="plot" src="./doc/src/images/test.svg" height="450px" style="max-width:100%;"></a></p>
<p>See <a href="https://github.com/inguar/Junet-demos">more examples</a>.</p>
<h2><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Features</h2>
<ul>
<li>Familiar syntax to manipulate graphs.</li>
</ul>
<div class="highlight highlight-source-julia"><pre>g <span class="pl-k">=</span> <span class="pl-c1">Graph</span>(directed<span class="pl-k">=</span><span class="pl-c1">true</span>)  <span class="pl-c"><span class="pl-c">#</span> create new graph</span>

<span class="pl-c1">addnode!</span>(g, <span class="pl-c1">10</span>)     <span class="pl-c"><span class="pl-c">#</span> add 10 nodes</span>

<span class="pl-k">for</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">20</span>        <span class="pl-c"><span class="pl-c">#</span> add 20 random edges</span>
    <span class="pl-c1">addedge!</span>(g, <span class="pl-c1">rand</span>(<span class="pl-c1">nodes</span>(g), <span class="pl-c1">2</span>)<span class="pl-k">...</span>)
<span class="pl-k">end</span>

<span class="pl-c1">plot</span>(g)             <span class="pl-c"><span class="pl-c">#</span> layout and display the result</span></pre></div>
<ul>
<li>Arbitrary-typed node and edge attributes stored within network objects.</li>
</ul>
<div class="highlight highlight-source-julia"><pre>g[:, <span class="pl-c1">:size</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>     <span class="pl-c"><span class="pl-c">#</span> add a constant attribute to all nodes</span>

g[<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">4</span>, <span class="pl-c1">:size</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>   <span class="pl-c"><span class="pl-c">#</span> change value for particular nodes</span>

g[:, :, <span class="pl-c1">:weight</span>] <span class="pl-k">=</span> <span class="pl-c1">1</span>  <span class="pl-c"><span class="pl-c">#</span> add constant edge attribute</span>

g[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">:weight</span>] <span class="pl-k">=</span> <span class="pl-c1">3</span>  <span class="pl-c"><span class="pl-c">#</span> then change it for certain edge...</span>

g[<span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">6</span>, <span class="pl-c1">8</span><span class="pl-k">:</span><span class="pl-c1">10</span>, <span class="pl-c1">:weight</span>] <span class="pl-k">=</span> <span class="pl-c1">2</span>  <span class="pl-c"><span class="pl-c">#</span> ... or a whole range of edges</span></pre></div>
<p>What's better is that attributes are stored in sparse data structures,
which can greatly improve the memory consumption.</p>
<ul>
<li>Smaller data structures. By default, Junet uses <code>UInt32</code>s everywhere
and takes up to 2 times less space than libraries using <code>Int64</code>s.
Users can also strip off support for edge attributes, which gives
an additional 2x improvement in memory footprint.</li>
</ul>
<div class="highlight highlight-source-julia"><pre>g <span class="pl-k">=</span> <span class="pl-c1">Graph</span>(TNode<span class="pl-k">=</span>Int, TEdge<span class="pl-k">=</span>Int)  <span class="pl-c"><span class="pl-c">#</span> about the same size as igraph on 64-bit machines</span>

g <span class="pl-k">=</span> <span class="pl-c1">Graph</span>(TNode<span class="pl-k">=</span>UInt32, TEdge<span class="pl-k">=</span>UInt32)  <span class="pl-c"><span class="pl-c">#</span> 2 times smaller (default)</span>

g <span class="pl-k">=</span> <span class="pl-c1">Graph</span>(TNode<span class="pl-k">=</span>UInt32, TEdge<span class="pl-k">=</span>Nothing)    <span class="pl-c"><span class="pl-c">#</span> 4 times smaller</span>

g <span class="pl-k">=</span> <span class="pl-c1">Graph</span>(TNode<span class="pl-k">=</span>UInt8, TEdge<span class="pl-k">=</span>Nothing)     <span class="pl-c"><span class="pl-c">#</span> hardly usable, but ~16x smaller!</span></pre></div>
<ul>
<li>Zero-cost views on the networks, which don't copy the data.</li>
</ul>
<div class="highlight highlight-source-julia"><pre>ug <span class="pl-k">=</span> <span class="pl-c1">undirected</span>(g)  <span class="pl-c"><span class="pl-c">#</span> network data not copied</span>

rg <span class="pl-k">=</span> <span class="pl-c1">reverse</span>(g)     <span class="pl-c"><span class="pl-c">#</span> here too</span>

dg <span class="pl-k">=</span> <span class="pl-c1">directed</span>(<span class="pl-c1">undirected</span>(g))   <span class="pl-c"><span class="pl-c">#</span> another object, but indistinguishable from g</span></pre></div>
<h2><a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Performance</h2>
<p>Here's how Junet compares with other network analysis tools.
They all are tested on a <a href="https://snap.stanford.edu/data/soc-LiveJournal1.html" rel="nofollow">LiveJournal network</a>:
they had to load it into RAM and run 4 different algorithms on it.</p>
<table>
<thead>
<tr>
<th></th>
<th align="right">igraph</th>
<th align="right">graph-tool</th>
<th align="right">SNAP</th>
<th align="right"><em>Junet</em></th>
<th align="right"><em>Junet*</em></th>
<th align="right">NetworkX</th>
</tr>
</thead>
<tbody>
<tr>
<td>Memory</td>
<td align="right">2,285 MB</td>
<td align="right">3,457 MB</td>
<td align="right">5,120 MB</td>
<td align="right">2,247 MB</td>
<td align="right">591 MB</td>
<td align="right">43,343 MB</td>
</tr>
<tr>
<td>Conn. Components</td>
<td align="right">3.5 s</td>
<td align="right">3.4 s</td>
<td align="right">22.5 s</td>
<td align="right">3.6 s</td>
<td align="right">2.8 s</td>
<td align="right">35.5 s</td>
</tr>
<tr>
<td>K-cores</td>
<td align="right">6.2 s</td>
<td align="right">3.2 s</td>
<td align="right">39.4 s</td>
<td align="right">9.5 s</td>
<td align="right">8.5 s</td>
<td align="right">349.2 s</td>
</tr>
<tr>
<td>PageRank</td>
<td align="right">22.2 s</td>
<td align="right">50.6 s</td>
<td align="right">250.2 s</td>
<td align="right">24.3 s</td>
<td align="right">17.3 s</td>
<td align="right">625.9 s</td>
</tr>
<tr>
<td>Clustering Coef.</td>
<td align="right">22.2 s</td>
<td align="right">254.2 s</td>
<td align="right">266.9 s</td>
<td align="right">44.9 s</td>
<td align="right">35.2 s</td>
<td align="right">2804.4 s</td>
</tr>
</tbody>
</table>
<p>* Asterisk denotes the version with RAM optimizations enabled.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>You need Julia 0.5 to run Junet. It is also forward compatible with release candidate of Julia 0.6, but it will trigger some warnings.</p>
<p>Once you have Julia set up, you can check out Junet from this repository (it is't added to METADATA registry yet). For that, run the following line in REPL:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>git://github.com/inguar/Junet.jl.git<span class="pl-pds">"</span></span>)</pre></div>
<p>If you want to update the package, a simple <code>Pkg.update()</code> command should do that.</p>
<h2><a id="user-content-citing-junet" class="anchor" aria-hidden="true" href="#citing-junet"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Citing Junet</h2>
<p>If you're using Junet in scientific research, here is a way to cite it:</p>
<div class="highlight highlight-text-bibtex"><pre><span class="pl-k">@inbook</span>{
    Zakhlebin_2017,
    <span class="pl-s">author</span>=<span class="pl-s"><span class="pl-pds">{</span>Zakhlebin, Igor<span class="pl-pds">}</span></span>,
    <span class="pl-s">title</span>=<span class="pl-s"><span class="pl-pds">{</span>Junet: a Julia package for network research<span class="pl-pds">}</span></span>,
    <span class="pl-s">booktitle</span>=<span class="pl-s"><span class="pl-pds">{</span>Proceedings of 11th International AAAI Conference on Web and Social Media (ICWSM-17)<span class="pl-pds">}</span></span>,
    <span class="pl-s">year</span>=<span class="pl-s"><span class="pl-pds">{</span>2017<span class="pl-pds">}</span></span>,
    <span class="pl-s">place</span>=<span class="pl-s"><span class="pl-pds">{</span>Montreal, Canada<span class="pl-pds">}</span></span>,
    <span class="pl-s">pages</span>=<span class="pl-s"><span class="pl-pds">{</span>731â€“732<span class="pl-pds">}</span></span>
}</pre></div>
</article></div>