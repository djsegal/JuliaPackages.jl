<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-digital-linear-filter-library" class="anchor" aria-hidden="true" href="#digital-linear-filter-library"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Digital Linear Filter Library</h1>
<p dir="auto"><a href="https://doi.org/10.5281/zenodo.5172893" rel="nofollow"><img src="https://camo.githubusercontent.com/ef05125446d365e04523ed0b79a0f3aaf077cef753ca477fbf22f57241e69240/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e353137323839332e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.5172893.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Library for Digital Linear Filters (DLF) as used, for instance, in Geophysics
for electromagnetic modelling.</p>
<h2 dir="auto"><a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Table of contents</h2>
<ul dir="auto">
<li><a href="#digital-linear-filters">Digital Linear Filters</a></li>
<li><a href="#usage">Usage</a>
<ul dir="auto">
<li><a href="#python">Python</a></li>
<li><a href="#julia">Julia</a></li>
<li><a href="#matlab">Matlab</a></li>
<li><a href="#fortran">Fortran</a></li>
</ul>
</li>
<li><a href="#contributing">Contributing</a>
<ul dir="auto">
<li><a href="#new-filters">New filters</a></li>
</ul>
</li>
<li><a href="#what-is-libdlf">What is <code>libdlf</code></a>
<ul dir="auto">
<li><a href="#file-naming">File naming</a></li>
<li><a href="#file-format">File format</a></li>
<li><a href="#structure">Structure</a></li>
<li><a href="#json">json</a></li>
<li><a href="#versioning">versioning</a></li>
</ul>
</li>
<li><a href="#license">License</a></li>
</ul>
<h2 dir="auto"><a id="user-content-digital-linear-filters" class="anchor" aria-hidden="true" href="#digital-linear-filters"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Digital Linear Filters</h2>
<p dir="auto">This section is unfortunately still missing. However, in the meanwhile we refer
to the document
<a href="https://github.com/emsig/article-fdesign/raw/master/DLF-in-Geophysics.pdf">DLF-in-Geophysics.pdf</a>
in the repo <a href="https://github.com/emsig/article-fdesign">emsig/article-fdesign</a>,
and the references therein.</p>
<p dir="auto">TODO: brief theory and history, main references.</p>
<p dir="auto">TODO: Some examples and figures, particularly to show what happens when you
reach the limit of a filter (longer is not necessary better).</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">The examples here show how to use the filters for the standard filter method.
However, often you want to use the lagged convolution variant of DLF, in order
to reduce the required input values. Have a look at the example
<a href="https://empymod.emsig.xyz/en/stable/gallery/educational/dlf_standard_lagged_splined.html" rel="nofollow">educational/dlf_standard_lagged_splined.html</a>
in the <a href="https://empymod.emsig.xyz" rel="nofollow">empymod</a> documentation.</p>
<h3 dir="auto"><a id="user-content-python" class="anchor" aria-hidden="true" href="#python"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Python</h3>
<p dir="auto"><a href="https://pypi.python.org/pypi/libdlf/" rel="nofollow"><img src="https://camo.githubusercontent.com/7bbdf67452ba3edeb59ac2068dc04facfa6b1d6d19969cc8fe8bed92141b3753/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c6962646c66" alt="PyPI" data-canonical-src="https://img.shields.io/pypi/v/libdlf" style="max-width: 100%;"></a>
<a href="https://anaconda.org/conda-forge/libdlf/" rel="nofollow"><img src="https://camo.githubusercontent.com/a2575a10429409a0721899d43ad183dc805ecb19cc74a0aaacc30e847a49bc7c/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f6c6962646c66" alt="conda-forge" data-canonical-src="https://img.shields.io/conda/vn/conda-forge/libdlf" style="max-width: 100%;"></a>
<a href="https://www.python.org/downloads/" rel="nofollow"><img src="https://camo.githubusercontent.com/75b8738e1bdfe8a832711925abbc3bd449c1e7e9260c870153ec761cad8dde40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362b2d626c75652e737667" alt="py-versions" data-canonical-src="https://img.shields.io/badge/python-3.6+-blue.svg" style="max-width: 100%;"></a>
<a href="https://anaconda.org/conda-forge/libdlf/" rel="nofollow"><img src="https://camo.githubusercontent.com/5e1f1d874282d6deb179f4f2ae77f219fb6ec4b5c8b8446bdb8bffc023f57193/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d6c696e75782c77696e2c6f73782d626c7565" alt="platforms" data-canonical-src="https://img.shields.io/badge/platform-linux,win,osx-blue" style="max-width: 100%;"></a></p>
<p dir="auto">You can install <code>libdlf</code> for python via <code>pip</code> or <code>conda</code>:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pip install libdlf"><pre>pip install libdlf</pre></div>
<p dir="auto">or</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="conda install -c conda-forge libdlf"><pre>conda install -c conda-forge libdlf</pre></div>
<p dir="auto">The package is structured into transform types. Each filter returns its base
and corresponding values as numpy arrays.</p>
<div class="highlight highlight-source-python notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import libdlf
base, j0, j1 = libdlf.hankel.wer_201_2018()

# TODO: Do actual transform with the filter."><pre><span class="pl-k">import</span> <span class="pl-s1">libdlf</span>
<span class="pl-s1">base</span>, <span class="pl-s1">j0</span>, <span class="pl-s1">j1</span> <span class="pl-c1">=</span> <span class="pl-s1">libdlf</span>.<span class="pl-s1">hankel</span>.<span class="pl-en">wer_201_2018</span>()

<span class="pl-c"># TODO: Do actual transform with the filter.</span></pre></div>
<p dir="auto">Different filters return different values. You can inspect what a filter
returns via</p>
<div class="highlight highlight-source-python notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="libdlf.hankel.wer_201_2018.values"><pre><span class="pl-s1">libdlf</span>.<span class="pl-s1">hankel</span>.<span class="pl-s1">wer_201_2018</span>.<span class="pl-s1">values</span></pre></div>
<p dir="auto">which, in the above case, will return <code>['j0', 'j1']</code>.</p>
<h3 dir="auto"><a id="user-content-julia" class="anchor" aria-hidden="true" href="#julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Julia</h3>
<p dir="auto"><a href="https://github.com/emsig/libdlf/actions/workflows/package-julia.yml"><img src="https://github.com/emsig/libdlf/actions/workflows/package-julia.yml/badge.svg" alt="package-julia" style="max-width: 100%;"></a></p>
<p dir="auto">You can install <code>LibDLF</code> for Julia using:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import Pkg
Pkg.add(&quot;LibDLF&quot;)"><pre><span class="pl-k">import</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>LibDLF<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">or</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add LibDLF"><pre>pkg<span class="pl-k">&gt;</span> add LibDLF</pre></div>
<p dir="auto">The package is structured into transform types with each filter function nested beneath its type. Each filter returns its base
and corresponding values as arrays:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using LibDLF
base, fcos, fsin = LibDLF.Fourier.key_201_2012()

# TODO: Do actual transform with the filter."><pre><span class="pl-k">using</span> LibDLF
base, fcos, fsin <span class="pl-k">=</span> LibDLF<span class="pl-k">.</span>Fourier<span class="pl-k">.</span><span class="pl-c1">key_201_2012</span>()

<span class="pl-c"><span class="pl-c">#</span> TODO: Do actual transform with the filter.</span></pre></div>
<h3 dir="auto"><a id="user-content-matlab" class="anchor" aria-hidden="true" href="#matlab"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Matlab</h3>
<p dir="auto">ToDo</p>
<h3 dir="auto"><a id="user-content-fortran" class="anchor" aria-hidden="true" href="#fortran"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Fortran</h3>
<p dir="auto">ToDo</p>
<h2 dir="auto"><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing</h2>
<p dir="auto">We welcome contributions of any kind. New filters, better documentation,
cleverer or easier distribution, typos, you name it. Simply open an issue or
create a PR!</p>
<p dir="auto">If you would like to contribute a filter but do not use GitHub feel free to
email them to use, together with the permission to distribute them under the
CC-BY-4.0 license, and we'll add them to the library.</p>
<h3 dir="auto"><a id="user-content-new-filters" class="anchor" aria-hidden="true" href="#new-filters"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>New filters</h3>
<p dir="auto">We welcome any filter that has proven its merits! Simply create a pull request
adding your filter. Please make sure to</p>
<ol dir="auto">
<li>State in the PR explicitly that you give permission to distribute your
filter under the CC-BY license.</li>
<li>You followed the file naming and file format outlined below, and add it to
the <code>lib/filters.json</code> file.</li>
</ol>
<h2 dir="auto"><a id="user-content-what-is-libdlf" class="anchor" aria-hidden="true" href="#what-is-libdlf"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>What is <code>libdlf</code></h2>
<p dir="auto">A library for digital linear filters. Codes until now had to hard-code their
digital linear filters. This has several disadvantages:</p>
<ul dir="auto">
<li>It adds a lot of "numbers" to the code base which has nothing really to do
with the code.</li>
<li>Codes have therefore often only one or a few filters, and it is hard to try
other filters, as they are hard-coded.</li>
<li>It can be hard to find filters of published results or similar.</li>
</ul>
<p dir="auto">Having a common library that can be used by any code base in any language
should hopefully widen the adoption of linear filters, make their use more
reproducible, and might hopefully even spark the design of new, hopefully more
robust filters or filters for new applications.</p>
<h3 dir="auto"><a id="user-content-file-naming" class="anchor" aria-hidden="true" href="#file-naming"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>File naming</h3>
<p dir="auto">The convention for file-naming is given in the following, where the different
parts are separated by underscores (all lowercase, file ending is <code>.txt</code>):</p>
<ol dir="auto">
<li>Transform type. E.g. <code>hankel</code>.</li>
<li>3-8 characters of first author or first initials of authors. E.g., <code>wer</code>.</li>
<li>Number of points. E.g. <code>201</code>.</li>
<li>Year. E.g. <code>2018</code>.<br>
(This can be followed by an appendix, a lowercase letter if there are
several filters of the same type, author, number of points, and year.)</li>
<li>Values provided in the file, in the correct order. E.g. <code>j0j1</code>.<br>
Accepted values:
<ul dir="auto">
<li>Hankel: j0, j1, j2</li>
<li>Fourier: sin, cos</li>
</ul>
</li>
</ol>
<p dir="auto">The given examples yield the filter file name <code>hankel_wer_201_2018_j0j1.txt</code>.</p>
<h3 dir="auto"><a id="user-content-file-format" class="anchor" aria-hidden="true" href="#file-format"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>File format</h3>
<p dir="auto">Have a look at, e.g., <code>lib/Hankel/hankel_wer_201_2018_j0j1.txt</code> to see the
structure of a filter file.</p>
<ul dir="auto">
<li>The file format consists of a header of variable length. All header lines
start with <code>#</code>, with a max line-length of 80.</li>
<li>Leave two empty lines between description, reference, license, and the
filter.</li>
<li><strong>Title</strong>: The first line should be a short title, stating the length, filter
type, and values provided. E.g., <code>201 point Hankel filter, J0 and J1</code>. The
title line is followed by an line of equal length of <code>=</code> for underlining.</li>
<li><strong>Description</strong>: The title is followed by a description:
<ul dir="auto">
<li>What was the filter designed for?</li>
<li>Where did it work fine?</li>
<li>Are there known areas where it did not work fine?</li>
</ul>
</li>
<li><strong>Reference</strong>: After the description comes, ideally, a reference that can be
cited. The lines of the citation start with the characters <code># &gt; </code>.</li>
<li><strong>License</strong>:
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="# Copyright YEAR Your Name
#
# This work is licensed under a CC BY 4.0 license.
# &lt;http://creativecommons.org/licenses/by/4.0/&gt;.
#
# This file is part of libdlf."><pre class="notranslate"><code># Copyright YEAR Your Name
#
# This work is licensed under a CC BY 4.0 license.
# &lt;http://creativecommons.org/licenses/by/4.0/&gt;.
#
# This file is part of libdlf.
</code></pre></div>
</li>
<li><strong>Filter Header</strong>: The filter header is the last line to start with a <code>#</code>.
It always starts with <code># base</code>, followed by the values which are provided
below; e.g., <code># base  j0  j1</code>.</li>
<li><strong>Filter values</strong>: The values are provided as space-separated numbers. The
first column is always the base, followed by the values as provided in the
file name and in the file header.</li>
</ul>
<h3 dir="auto"><a id="user-content-structure" class="anchor" aria-hidden="true" href="#structure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Structure</h3>
<p dir="auto">The library folder has subfolders of the main transformations, e.g., Fourier
and Hankel. There is no distinction (on the folder level) in which direction
the transform is carried out (forward or inverse).</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="lib
├── Fourier
│   ├── fourier_key_81_2009_sincos.txt
│   ├── fourier_key_201_2012_sincos.txt
│   └── ...
├── Hankel
│   ├── hankel_key_201_2012_j0j1.txt
│   ├── hankel_wer_201_2018_j0j1.txt
│   └── ...
├── Laplace
│   └── ...
└── ..."><pre class="notranslate"><code>lib
├── Fourier
│   ├── fourier_key_81_2009_sincos.txt
│   ├── fourier_key_201_2012_sincos.txt
│   └── ...
├── Hankel
│   ├── hankel_key_201_2012_j0j1.txt
│   ├── hankel_wer_201_2018_j0j1.txt
│   └── ...
├── Laplace
│   └── ...
└── ...
</code></pre></div>
<h3 dir="auto"><a id="user-content-json" class="anchor" aria-hidden="true" href="#json"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>json</h3>
<p dir="auto">It might seem like a lot of duplication: File name, header info, and in
addition a json that maps meta-data to files.</p>
<p dir="auto">The advantage of this is that on one hand one can copy a single filter by
simply coping a file, which then contains all required info. The json file, on
the other hand, is good for machines, providing a rich way to choose filters
and load them. The json is, for instance, the ideal place for a script to
create a deployable package for a specific language.</p>
<p dir="auto">For the format of the json simply have a look at it. The top-level entries
depict the transform types (e.g., <code>"hankel"</code>), and the different filters are
then added as an array. Each filter has exactly the following entries:
<code>"name"</code>, <code>"author"</code>, <code>"year"</code>, <code>"appendix"</code>, <code>"points"</code>, <code>"values"</code>, and
<code>"file"</code>. Points is an integer, and all others are strings; values is a
comma-separated list. The file is the relative path to the corresponding
filter, starting at <code>lib/</code>. Appendix will be an empty string, <code>""</code>, in most
cases (see above under <em>File naming</em>).</p>
<h3 dir="auto"><a id="user-content-versioning" class="anchor" aria-hidden="true" href="#versioning"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Versioning</h3>
<p dir="auto"><code>libdlf</code> uses the <code>major.minor.point</code> scheme.</p>
<ul dir="auto">
<li>New filters added to the library will cause an increase of the minor number.</li>
<li>New language packages added to the library cause also an increase of the
minor number.</li>
<li>Changes to particular packages (e.g. Python or Julia) without changes to the
actual library will only result in point releases.</li>
</ul>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">This work is licensed under a CC BY 4.0 license.
<a href="http://creativecommons.org/licenses/by/4.0/" rel="nofollow">http://creativecommons.org/licenses/by/4.0/</a>.</p>
<p dir="auto">Note that the language-specific packages (e.g. Python and Julia) are licensed
under BSD-3 while the filter values remain CC-BY-4.0.</p>
</article></div>