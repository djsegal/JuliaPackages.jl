<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-fnvhash" class="anchor" aria-hidden="true" href="#fnvhash"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FNVHash</h1>
<p dir="auto"><a href="https://github.com/ancapdev/FNVHash.jl/actions"><img src="https://github.com/ancapdev/FNVHash.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto">Implementations of the Fowler–Noll–Vo hash functions.
See <a href="https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function" rel="nofollow">Wikipedia</a> for details.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">Two variants are implemented, <code>fnv1()</code> and <code>fnv1a()</code>, the latter is preferred for slightly better avalance characteristics</p>
<h3 dir="auto"><a id="user-content-hashing-strings" class="anchor" aria-hidden="true" href="#hashing-strings"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hashing strings</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="s = &quot;string to hash&quot;
fnv1a(UInt32, s)  # 0xf474bad3
fnv1a(UInt64, s)  # 0xff0f01f28783a2d3
fnv1a(UInt128, s) # 0xe676f50e87fe52607a2c13a4c192bca3"><pre>s <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>string to hash<span class="pl-pds">"</span></span>
<span class="pl-c1">fnv1a</span>(UInt32, s)  <span class="pl-c"><span class="pl-c">#</span> 0xf474bad3</span>
<span class="pl-c1">fnv1a</span>(UInt64, s)  <span class="pl-c"><span class="pl-c">#</span> 0xff0f01f28783a2d3</span>
<span class="pl-c1">fnv1a</span>(UInt128, s) <span class="pl-c"><span class="pl-c">#</span> 0xe676f50e87fe52607a2c13a4c192bca3</span></pre></div>
<h3 dir="auto"><a id="user-content-hashing-byte-vectors" class="anchor" aria-hidden="true" href="#hashing-byte-vectors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hashing byte vectors</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data = [0x0, 0x1, 0x2, 0x3]
fnv1a(UInt32, data)  # 0xc3aa51b1
fnv1a(UInt64, data)  # 0x4475327f98e05411
fnv1a(UInt128, data) # 0x66ad33ec62757277b806e89d2ca0ff79"><pre>data <span class="pl-k">=</span> [<span class="pl-c1">0x0</span>, <span class="pl-c1">0x1</span>, <span class="pl-c1">0x2</span>, <span class="pl-c1">0x3</span>]
<span class="pl-c1">fnv1a</span>(UInt32, data)  <span class="pl-c"><span class="pl-c">#</span> 0xc3aa51b1</span>
<span class="pl-c1">fnv1a</span>(UInt64, data)  <span class="pl-c"><span class="pl-c">#</span> 0x4475327f98e05411</span>
<span class="pl-c1">fnv1a</span>(UInt128, data) <span class="pl-c"><span class="pl-c">#</span> 0x66ad33ec62757277b806e89d2ca0ff79</span></pre></div>
<h3 dir="auto"><a id="user-content-hashing-raw-data" class="anchor" aria-hidden="true" href="#hashing-raw-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hashing raw data</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data = [0x0, 0x1, 0x2, 0x3]
GC.@preserve data begin
    raw = pointer(data)
    raw_len = sizeof(data)
    fnv1a(UInt32, raw, raw_len)  # 0xc3aa51b1
    fnv1a(UInt64, raw, raw_len)  # 0x4475327f98e05411
    fnv1a(UInt128, raw, raw_len) # 0x66ad33ec62757277b806e89d2ca0ff79
end"><pre>data <span class="pl-k">=</span> [<span class="pl-c1">0x0</span>, <span class="pl-c1">0x1</span>, <span class="pl-c1">0x2</span>, <span class="pl-c1">0x3</span>]
GC<span class="pl-k">.</span><span class="pl-c1">@preserve</span> data <span class="pl-k">begin</span>
    raw <span class="pl-k">=</span> <span class="pl-c1">pointer</span>(data)
    raw_len <span class="pl-k">=</span> <span class="pl-c1">sizeof</span>(data)
    <span class="pl-c1">fnv1a</span>(UInt32, raw, raw_len)  <span class="pl-c"><span class="pl-c">#</span> 0xc3aa51b1</span>
    <span class="pl-c1">fnv1a</span>(UInt64, raw, raw_len)  <span class="pl-c"><span class="pl-c">#</span> 0x4475327f98e05411</span>
    <span class="pl-c1">fnv1a</span>(UInt128, raw, raw_len) <span class="pl-c"><span class="pl-c">#</span> 0x66ad33ec62757277b806e89d2ca0ff79</span>
<span class="pl-k">end</span></pre></div>
</article></div>