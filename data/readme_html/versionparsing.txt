<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-versionparsing" class="anchor" aria-hidden="true" href="#versionparsing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>VersionParsing</h1>
<p dir="auto"><a href="https://github.com/JuliaInterop/VersionParsing.jl/actions"><img src="https://github.com/JuliaInterop/VersionParsing.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/JuliaInterop/VersionParsing.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/b512b464ca6e01abcf5ebbcf8ae2f11d4416a6d23950d7a56235f682eae1d4c9/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c6961496e7465726f702f56657273696f6e50617273696e672e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaInterop/VersionParsing.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">The <code>VersionParsing</code> package implements flexible parsing of
version-number strings into Julia's built-in <code>VersionNumber</code> type, via
the <code>vparse(string)</code> function.</p>
<p dir="auto">Unlike the <code>VersionNumber(string)</code> constructor, <code>vparse(string)</code> can
handle version-number strings in a much wider range of formats than
are encompassed by the <a href="https://semver.org/" rel="nofollow">semver standard</a>.  This
is useful in order to support <code>VersionNumber</code> comparisons applied
to "foreign" version numbers from external packages.</p>
<p dir="auto">For example,</p>
<ul dir="auto">
<li>Non-numeric prefixes are stripped along with any invalid version characters.
Commas are treated as decimal points, and underscores are treated as hyphens.</li>
<li>Text following whitespace or other invalid-version characters after the version number is ignored.</li>
<li><code>major.minor.patch.x.y.z</code> is supported, with <code>x.y.z</code> prepended to the
semver build identifier, i.e. it is parsed like <code>major.minor.patch+x.y.z</code>.</li>
<li>Multiple <code>+x+y</code> build identifiers are concatenated as if they were <code>+x.y</code>.</li>
<li>A leading <code>0</code> is prepended if needed, e.g. <code>.x</code> is treated as <code>0.x</code>.</li>
<li>When all else fails, everything except the first <code>major.minor.patch</code>
digits found are ignored.</li>
</ul>
</article></div>