<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-treesitterhighlightjl" class="anchor" aria-hidden="true" href="#treesitterhighlightjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TreeSitterHighlight.jl</h1>
<blockquote>
<p dir="auto"><a href="https://htmlview.glitch.me/?https://gist.github.com/Pangoraw/9ffaff45a2a0165dc9f10a6fdc116660" rel="nofollow"><g-emoji class="g-emoji" alias="stars" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f320.png">ðŸŒ </g-emoji> View this readme rendered using TreeSitterHighlight.jl!</a></p>
</blockquote>
<p dir="auto">A Julia package to export static HTML for highlighted code based on <a href="https://github.com/tree-sitter/tree-sitter/tree/master/highlight"><code>tree-sitter/highlight</code></a>.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">To highlight a source file, you will need:</p>
<ul dir="auto">
<li>A Tree-sitter language.</li>
<li>Highlights queries that return category for matches.</li>
<li>Injections queries that specify when the language should switch.</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TreeSitterHighlight, tree_sitter_javascript_jll

highlighter = Highlighter(Dict(
    &quot;keyword&quot; =&gt; &quot;class=keyword&quot;,
))

libts_js = tree_sitter_javascript_jll.libtreesitter_javascript_path

language = Language(
    :javascript,
    @ccall libts_js.tree_sitter_javascript()::Ptr{Nothing}
)

scope = &quot;source.js&quot;

add_language!(
    highlighter,
    language;
    scope,
    injection_regex,
    highlights_query,
    injections_query,
    locals_query,
)

function highlight_js_code(code::String)::String
    TreeSitterHighlight.highlight(highlighter, code; scope)
end

highlight_js_code(&quot;&quot;&quot;
function main(msg) {
    console.log(msg)
}
&quot;&quot;&quot;)"><pre><span class="pl-k">using</span> TreeSitterHighlight, tree_sitter_javascript_jll

highlighter <span class="pl-k">=</span> <span class="pl-c1">Highlighter</span>(<span class="pl-c1">Dict</span>(
    <span class="pl-s"><span class="pl-pds">"</span>keyword<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>class=keyword<span class="pl-pds">"</span></span>,
))

libts_js <span class="pl-k">=</span> tree_sitter_javascript_jll<span class="pl-k">.</span>libtreesitter_javascript_path

language <span class="pl-k">=</span> <span class="pl-c1">Language</span>(
    <span class="pl-c1">:javascript</span>,
    <span class="pl-c1">@ccall</span> libts_js<span class="pl-k">.</span><span class="pl-c1">tree_sitter_javascript</span>()<span class="pl-k">::</span><span class="pl-c1">Ptr{Nothing}</span>
)

scope <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>source.js<span class="pl-pds">"</span></span>

<span class="pl-c1">add_language!</span>(
    highlighter,
    language;
    scope,
    injection_regex,
    highlights_query,
    injections_query,
    locals_query,
)

<span class="pl-k">function</span> <span class="pl-en">highlight_js_code</span>(code<span class="pl-k">::</span><span class="pl-c1">String</span>)<span class="pl-k">::</span><span class="pl-c1">String</span>
    TreeSitterHighlight<span class="pl-k">.</span><span class="pl-c1">highlight</span>(highlighter, code; scope)
<span class="pl-k">end</span>

<span class="pl-c1">highlight_js_code</span>(<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">function main(msg) {</span>
<span class="pl-s">    console.log(msg)</span>
<span class="pl-s">}</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-gallery" class="anchor" aria-hidden="true" href="#gallery"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Gallery</h2>
<p dir="auto">This readme is using a <a href="https://github.com/JuliaPluto/Pluto.jl">Pluto</a> inspired theme and all the code highlighting is made using TreeSitterHighlight.jl!</p>
<h3 dir="auto"><a id="user-content-javascript" class="anchor" aria-hidden="true" href="#javascript"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Javascript</h3>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="/**
 * Prints an hello world message to the console
 **/
function main() {
    let world = &quot;world&quot;
    const message = `Hello, ${world} !`;
    console.log(message);
}

main();"><pre><span class="pl-c">/**</span>
<span class="pl-c"> * Prints an hello world message to the console</span>
<span class="pl-c"> **/</span>
<span class="pl-k">function</span> <span class="pl-en">main</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
    <span class="pl-k">let</span> <span class="pl-s1">world</span> <span class="pl-c1">=</span> <span class="pl-s">"world"</span>
    <span class="pl-k">const</span> <span class="pl-s1">message</span> <span class="pl-c1">=</span> <span class="pl-s">`Hello, <span class="pl-s1"><span class="pl-kos">${</span><span class="pl-s1">world</span><span class="pl-kos">}</span></span> !`</span><span class="pl-kos">;</span>
    <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">message</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span>

<span class="pl-en">main</span><span class="pl-kos">(</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
</article></div>