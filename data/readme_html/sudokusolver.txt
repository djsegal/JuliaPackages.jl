<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-sudokusolver" class="anchor" aria-hidden="true" href="#sudokusolver"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SudokuSolver</h1>
<p dir="auto"><a href="https://github.com/guo-yong-zhi/SudokuSolver.jl/actions/workflows/ci.yml"><img src="https://github.com/guo-yong-zhi/SudokuSolver.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a> <a href="https://github.com/guo-yong-zhi/SudokuSolver.jl/actions/workflows/ci-nightly.yml"><img src="https://github.com/guo-yong-zhi/SudokuSolver.jl/actions/workflows/ci-nightly.yml/badge.svg" alt="CI-nightly" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/guo-yong-zhi/SudokuSolver.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ed1283e84bc0d47fb45d3e61458e484f5c6bff6e607883905f348f07750b208b/68747470733a2f2f636f6465636f762e696f2f67682f67756f2d796f6e672d7a68692f5375646f6b75536f6c7665722e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d3433544f724c32355637" alt="codecov" data-canonical-src="https://codecov.io/gh/guo-yong-zhi/SudokuSolver.jl/branch/main/graph/badge.svg?token=43TOrL25V7" style="max-width: 100%;"></a><br>
This is a simple and pure sudoku puzzle solver with no other dependencies except the julia standard libraries. The package exports only one function, <code>solvesudoku</code>.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">The <code>solvesudoku</code> function takes a 9×9 integer matrix or a string as input. In the integer matrix, blank is represented by the number <code>0</code>. In the string, blank is represented by the character '<code>0</code>', '<code>-</code>', '<code>.</code>' or '<code>_</code>'. And invisible characters in the string, such as '\n', are ignored. Some sample puzzles can be found in <code>SudokuSolver.PuzzleExamples</code>. If the input is a valid puzzle, the function returns the solved sudoku puzzle as a 9×9 integer matrix; otherwise, it returns <code>nothing</code>. If the puzzle has more than one solution, only one of them will be returned.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SudokuSolver"><pre><span class="pl-k">using</span> SudokuSolver</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@show SudokuSolver.PuzzleExamples[9]
solvesudoku(SudokuSolver.PuzzleExamples[9])

SudokuSolver.PuzzleExamples[9] = [
    6 0 8 0 5 0 0 0 1; 
    5 0 4 9 3 0 0 0 6; 
    0 0 0 0 0 6 9 7 5; 
    7 4 9 8 2 0 0 0 3; 
    3 8 2 0 0 0 0 0 9; 
    0 0 5 0 9 0 0 0 0; 
    0 5 0 0 6 8 0 0 4; 
    8 3 0 0 0 0 0 5 7; 
    0 0 0 0 0 0 6 0 0]

9×9 Matrix{Int64}:
 6  9  8  7  5  2  4  3  1
 5  7  4  9  3  1  8  2  6
 2  1  3  4  8  6  9  7  5
 7  4  9  8  2  5  1  6  3
 3  8  2  6  1  7  5  4  9
 1  6  5  3  9  4  7  8  2
 9  5  7  2  6  8  3  1  4
 8  3  6  1  4  9  2  5  7
 4  2  1  5  7  3  6  9  8"><pre><span class="pl-c1">@show</span> SudokuSolver<span class="pl-k">.</span>PuzzleExamples[<span class="pl-c1">9</span>]
<span class="pl-c1">solvesudoku</span>(SudokuSolver<span class="pl-k">.</span>PuzzleExamples[<span class="pl-c1">9</span>])

SudokuSolver<span class="pl-k">.</span>PuzzleExamples[<span class="pl-c1">9</span>] <span class="pl-k">=</span> [
    <span class="pl-c1">6</span> <span class="pl-c1">0</span> <span class="pl-c1">8</span> <span class="pl-c1">0</span> <span class="pl-c1">5</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">1</span>; 
    <span class="pl-c1">5</span> <span class="pl-c1">0</span> <span class="pl-c1">4</span> <span class="pl-c1">9</span> <span class="pl-c1">3</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">6</span>; 
    <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">6</span> <span class="pl-c1">9</span> <span class="pl-c1">7</span> <span class="pl-c1">5</span>; 
    <span class="pl-c1">7</span> <span class="pl-c1">4</span> <span class="pl-c1">9</span> <span class="pl-c1">8</span> <span class="pl-c1">2</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">3</span>; 
    <span class="pl-c1">3</span> <span class="pl-c1">8</span> <span class="pl-c1">2</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">9</span>; 
    <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">5</span> <span class="pl-c1">0</span> <span class="pl-c1">9</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span>; 
    <span class="pl-c1">0</span> <span class="pl-c1">5</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">6</span> <span class="pl-c1">8</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">4</span>; 
    <span class="pl-c1">8</span> <span class="pl-c1">3</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">5</span> <span class="pl-c1">7</span>; 
    <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">6</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span>]

<span class="pl-c1">9</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">6</span>  <span class="pl-c1">9</span>  <span class="pl-c1">8</span>  <span class="pl-c1">7</span>  <span class="pl-c1">5</span>  <span class="pl-c1">2</span>  <span class="pl-c1">4</span>  <span class="pl-c1">3</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">7</span>  <span class="pl-c1">4</span>  <span class="pl-c1">9</span>  <span class="pl-c1">3</span>  <span class="pl-c1">1</span>  <span class="pl-c1">8</span>  <span class="pl-c1">2</span>  <span class="pl-c1">6</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">1</span>  <span class="pl-c1">3</span>  <span class="pl-c1">4</span>  <span class="pl-c1">8</span>  <span class="pl-c1">6</span>  <span class="pl-c1">9</span>  <span class="pl-c1">7</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">7</span>  <span class="pl-c1">4</span>  <span class="pl-c1">9</span>  <span class="pl-c1">8</span>  <span class="pl-c1">2</span>  <span class="pl-c1">5</span>  <span class="pl-c1">1</span>  <span class="pl-c1">6</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">8</span>  <span class="pl-c1">2</span>  <span class="pl-c1">6</span>  <span class="pl-c1">1</span>  <span class="pl-c1">7</span>  <span class="pl-c1">5</span>  <span class="pl-c1">4</span>  <span class="pl-c1">9</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">6</span>  <span class="pl-c1">5</span>  <span class="pl-c1">3</span>  <span class="pl-c1">9</span>  <span class="pl-c1">4</span>  <span class="pl-c1">7</span>  <span class="pl-c1">8</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">9</span>  <span class="pl-c1">5</span>  <span class="pl-c1">7</span>  <span class="pl-c1">2</span>  <span class="pl-c1">6</span>  <span class="pl-c1">8</span>  <span class="pl-c1">3</span>  <span class="pl-c1">1</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">8</span>  <span class="pl-c1">3</span>  <span class="pl-c1">6</span>  <span class="pl-c1">1</span>  <span class="pl-c1">4</span>  <span class="pl-c1">9</span>  <span class="pl-c1">2</span>  <span class="pl-c1">5</span>  <span class="pl-c1">7</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">2</span>  <span class="pl-c1">1</span>  <span class="pl-c1">5</span>  <span class="pl-c1">7</span>  <span class="pl-c1">3</span>  <span class="pl-c1">6</span>  <span class="pl-c1">9</span>  <span class="pl-c1">8</span></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@show SudokuSolver.PuzzleExamples[3]
solvesudoku(SudokuSolver.PuzzleExamples[3])

SudokuSolver.PuzzleExamples[3] = &quot;&quot;&quot;
    --53-----
    8------2-
    -7--1-5--
    4----53--
    -1--7---6
    --32---8-
    -6-5----9
    --4----3-
    -----97--&quot;&quot;&quot;

9×9 Matrix{Int64}:
 1  4  5  3  2  7  6  9  8
 8  3  9  6  5  4  1  2  7
 6  7  2  9  1  8  5  4  3
 4  9  6  1  8  5  3  7  2
 2  1  8  4  7  3  9  5  6
 7  5  3  2  9  6  4  8  1
 3  6  7  5  4  2  8  1  9
 9  8  4  7  6  1  2  3  5
 5  2  1  8  3  9  7  6  4"><pre><span class="pl-c1">@show</span> SudokuSolver<span class="pl-k">.</span>PuzzleExamples[<span class="pl-c1">3</span>]
<span class="pl-c1">solvesudoku</span>(SudokuSolver<span class="pl-k">.</span>PuzzleExamples[<span class="pl-c1">3</span>])

SudokuSolver<span class="pl-k">.</span>PuzzleExamples[<span class="pl-c1">3</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">    --53-----</span>
<span class="pl-s">    8------2-</span>
<span class="pl-s">    -7--1-5--</span>
<span class="pl-s">    4----53--</span>
<span class="pl-s">    -1--7---6</span>
<span class="pl-s">    --32---8-</span>
<span class="pl-s">    -6-5----9</span>
<span class="pl-s">    --4----3-</span>
<span class="pl-s">    -----97--<span class="pl-pds">"""</span></span>

<span class="pl-c1">9</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">4</span>  <span class="pl-c1">5</span>  <span class="pl-c1">3</span>  <span class="pl-c1">2</span>  <span class="pl-c1">7</span>  <span class="pl-c1">6</span>  <span class="pl-c1">9</span>  <span class="pl-c1">8</span>
 <span class="pl-c1">8</span>  <span class="pl-c1">3</span>  <span class="pl-c1">9</span>  <span class="pl-c1">6</span>  <span class="pl-c1">5</span>  <span class="pl-c1">4</span>  <span class="pl-c1">1</span>  <span class="pl-c1">2</span>  <span class="pl-c1">7</span>
 <span class="pl-c1">6</span>  <span class="pl-c1">7</span>  <span class="pl-c1">2</span>  <span class="pl-c1">9</span>  <span class="pl-c1">1</span>  <span class="pl-c1">8</span>  <span class="pl-c1">5</span>  <span class="pl-c1">4</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">9</span>  <span class="pl-c1">6</span>  <span class="pl-c1">1</span>  <span class="pl-c1">8</span>  <span class="pl-c1">5</span>  <span class="pl-c1">3</span>  <span class="pl-c1">7</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">1</span>  <span class="pl-c1">8</span>  <span class="pl-c1">4</span>  <span class="pl-c1">7</span>  <span class="pl-c1">3</span>  <span class="pl-c1">9</span>  <span class="pl-c1">5</span>  <span class="pl-c1">6</span>
 <span class="pl-c1">7</span>  <span class="pl-c1">5</span>  <span class="pl-c1">3</span>  <span class="pl-c1">2</span>  <span class="pl-c1">9</span>  <span class="pl-c1">6</span>  <span class="pl-c1">4</span>  <span class="pl-c1">8</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">6</span>  <span class="pl-c1">7</span>  <span class="pl-c1">5</span>  <span class="pl-c1">4</span>  <span class="pl-c1">2</span>  <span class="pl-c1">8</span>  <span class="pl-c1">1</span>  <span class="pl-c1">9</span>
 <span class="pl-c1">9</span>  <span class="pl-c1">8</span>  <span class="pl-c1">4</span>  <span class="pl-c1">7</span>  <span class="pl-c1">6</span>  <span class="pl-c1">1</span>  <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">2</span>  <span class="pl-c1">1</span>  <span class="pl-c1">8</span>  <span class="pl-c1">3</span>  <span class="pl-c1">9</span>  <span class="pl-c1">7</span>  <span class="pl-c1">6</span>  <span class="pl-c1">4</span></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@show SudokuSolver.PuzzleExamples[4]
solvesudoku(SudokuSolver.PuzzleExamples[4])

SudokuSolver.PuzzleExamples[4] = &quot;98.7..6..7......8...6.5....4....3..2..794..6.......4...1......3..95...7.....2.1..&quot;
9×9 Matrix{Int64}:
 9  8  5  7  3  2  6  4  1
 7  3  2  1  6  4  9  8  5
 1  4  6  8  5  9  2  3  7
 4  9  1  6  8  3  7  5  2
 2  5  7  9  4  1  3  6  8
 8  6  3  2  7  5  4  1  9
 6  1  8  4  9  7  5  2  3
 3  2  9  5  1  6  8  7  4
 5  7  4  3  2  8  1  9  6"><pre><span class="pl-c1">@show</span> SudokuSolver<span class="pl-k">.</span>PuzzleExamples[<span class="pl-c1">4</span>]
<span class="pl-c1">solvesudoku</span>(SudokuSolver<span class="pl-k">.</span>PuzzleExamples[<span class="pl-c1">4</span>])

SudokuSolver<span class="pl-k">.</span>PuzzleExamples[<span class="pl-c1">4</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>98.7..6..7......8...6.5....4....3..2..794..6.......4...1......3..95...7.....2.1..<span class="pl-pds">"</span></span>
<span class="pl-c1">9</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">9</span>  <span class="pl-c1">8</span>  <span class="pl-c1">5</span>  <span class="pl-c1">7</span>  <span class="pl-c1">3</span>  <span class="pl-c1">2</span>  <span class="pl-c1">6</span>  <span class="pl-c1">4</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">7</span>  <span class="pl-c1">3</span>  <span class="pl-c1">2</span>  <span class="pl-c1">1</span>  <span class="pl-c1">6</span>  <span class="pl-c1">4</span>  <span class="pl-c1">9</span>  <span class="pl-c1">8</span>  <span class="pl-c1">5</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">4</span>  <span class="pl-c1">6</span>  <span class="pl-c1">8</span>  <span class="pl-c1">5</span>  <span class="pl-c1">9</span>  <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">7</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">9</span>  <span class="pl-c1">1</span>  <span class="pl-c1">6</span>  <span class="pl-c1">8</span>  <span class="pl-c1">3</span>  <span class="pl-c1">7</span>  <span class="pl-c1">5</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">5</span>  <span class="pl-c1">7</span>  <span class="pl-c1">9</span>  <span class="pl-c1">4</span>  <span class="pl-c1">1</span>  <span class="pl-c1">3</span>  <span class="pl-c1">6</span>  <span class="pl-c1">8</span>
 <span class="pl-c1">8</span>  <span class="pl-c1">6</span>  <span class="pl-c1">3</span>  <span class="pl-c1">2</span>  <span class="pl-c1">7</span>  <span class="pl-c1">5</span>  <span class="pl-c1">4</span>  <span class="pl-c1">1</span>  <span class="pl-c1">9</span>
 <span class="pl-c1">6</span>  <span class="pl-c1">1</span>  <span class="pl-c1">8</span>  <span class="pl-c1">4</span>  <span class="pl-c1">9</span>  <span class="pl-c1">7</span>  <span class="pl-c1">5</span>  <span class="pl-c1">2</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">2</span>  <span class="pl-c1">9</span>  <span class="pl-c1">5</span>  <span class="pl-c1">1</span>  <span class="pl-c1">6</span>  <span class="pl-c1">8</span>  <span class="pl-c1">7</span>  <span class="pl-c1">4</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">7</span>  <span class="pl-c1">4</span>  <span class="pl-c1">3</span>  <span class="pl-c1">2</span>  <span class="pl-c1">8</span>  <span class="pl-c1">1</span>  <span class="pl-c1">9</span>  <span class="pl-c1">6</span></pre></div>
<h2 dir="auto"><a id="user-content-benchmark" class="anchor" aria-hidden="true" href="#benchmark"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Benchmark</h2>
<p dir="auto">A mini benchmark compared with package <a href="https://github.com/scheinerman/Sudoku.jl">Sudoku.jl</a> v0.1.1.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using BenchmarkTools
using SudokuSolver
using Sudoku

# Sudoku.jl
@btime begin
    sudoku(Sudoku.puzz1)
    sudoku(Sudoku.puzz2)
    sudoku(Sudoku.puzz3)
end
31.393 ms (93863 allocations: 8.48 MiB)
# our SudokuSolver.jl
@btime begin
    solvesudoku(Sudoku.puzz1)
    solvesudoku(Sudoku.puzz2)
    solvesudoku(Sudoku.puzz3)
end
1.100 ms (6 allocations: 2.58 KiB)

# Sudoku.jl
@btime for puzzle in SudokuSolver.PuzzleExamples
    p = SudokuSolver.loadpuzzle(puzzle)
    sudoku(p)
end
2.923 s (313555 allocations: 28.31 MiB)
# our SudokuSolver.jl
@btime for puzzle in SudokuSolver.PuzzleExamples
    p = SudokuSolver.loadpuzzle(puzzle)
    solvesudoku(p)
end
64.592 ms (80 allocations: 25.78 KiB)"><pre><span class="pl-k">using</span> BenchmarkTools
<span class="pl-k">using</span> SudokuSolver
<span class="pl-k">using</span> Sudoku

<span class="pl-c"><span class="pl-c">#</span> Sudoku.jl</span>
<span class="pl-c1">@btime</span> <span class="pl-k">begin</span>
    <span class="pl-c1">sudoku</span>(Sudoku<span class="pl-k">.</span>puzz1)
    <span class="pl-c1">sudoku</span>(Sudoku<span class="pl-k">.</span>puzz2)
    <span class="pl-c1">sudoku</span>(Sudoku<span class="pl-k">.</span>puzz3)
<span class="pl-k">end</span>
<span class="pl-c1">31.393</span> ms (<span class="pl-c1">93863</span> allocations<span class="pl-k">:</span> <span class="pl-c1">8.48</span> MiB)
<span class="pl-c"><span class="pl-c">#</span> our SudokuSolver.jl</span>
<span class="pl-c1">@btime</span> <span class="pl-k">begin</span>
    <span class="pl-c1">solvesudoku</span>(Sudoku<span class="pl-k">.</span>puzz1)
    <span class="pl-c1">solvesudoku</span>(Sudoku<span class="pl-k">.</span>puzz2)
    <span class="pl-c1">solvesudoku</span>(Sudoku<span class="pl-k">.</span>puzz3)
<span class="pl-k">end</span>
<span class="pl-c1">1.100</span> ms (<span class="pl-c1">6</span> allocations<span class="pl-k">:</span> <span class="pl-c1">2.58</span> KiB)

<span class="pl-c"><span class="pl-c">#</span> Sudoku.jl</span>
<span class="pl-c1">@btime</span> <span class="pl-k">for</span> puzzle <span class="pl-k">in</span> SudokuSolver<span class="pl-k">.</span>PuzzleExamples
    p <span class="pl-k">=</span> SudokuSolver<span class="pl-k">.</span><span class="pl-c1">loadpuzzle</span>(puzzle)
    <span class="pl-c1">sudoku</span>(p)
<span class="pl-k">end</span>
<span class="pl-c1">2.923</span> s (<span class="pl-c1">313555</span> allocations<span class="pl-k">:</span> <span class="pl-c1">28.31</span> MiB)
<span class="pl-c"><span class="pl-c">#</span> our SudokuSolver.jl</span>
<span class="pl-c1">@btime</span> <span class="pl-k">for</span> puzzle <span class="pl-k">in</span> SudokuSolver<span class="pl-k">.</span>PuzzleExamples
    p <span class="pl-k">=</span> SudokuSolver<span class="pl-k">.</span><span class="pl-c1">loadpuzzle</span>(puzzle)
    <span class="pl-c1">solvesudoku</span>(p)
<span class="pl-k">end</span>
<span class="pl-c1">64.592</span> ms (<span class="pl-c1">80</span> allocations<span class="pl-k">:</span> <span class="pl-c1">25.78</span> KiB)</pre></div>
</article></div>