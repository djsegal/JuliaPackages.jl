<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-samplinginterdictionjl" class="anchor" aria-hidden="true" href="#samplinginterdictionjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SamplingInterdiction.jl</h1>
<p dir="auto">Sampling for interdiction problems</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-0-1-knapsack-interdiction" class="anchor" aria-hidden="true" href="#0-1-knapsack-interdiction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>0-1 Knapsack interdiction</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="v = rand(1 : 100, 100)
vp = [rand(1 : x) for x in v]
lw = rand(1 : 100, 100)
fw = rand(1 : 100, 100)
lK = rand(100 : 200)
fK = rand(200 : 500)
report, opt = SamplingInterdiction.knapsack_interdiction_sampling(v, vp, lw, fw, fK, lK)"><pre>v <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">100</span>, <span class="pl-c1">100</span>)
vp <span class="pl-k">=</span> [<span class="pl-c1">rand</span>(<span class="pl-c1">1</span> <span class="pl-k">:</span> x) <span class="pl-k">for</span> x <span class="pl-k">in</span> v]
lw <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">100</span>, <span class="pl-c1">100</span>)
fw <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">100</span>, <span class="pl-c1">100</span>)
lK <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">100</span> <span class="pl-k">:</span> <span class="pl-c1">200</span>)
fK <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">200</span> <span class="pl-k">:</span> <span class="pl-c1">500</span>)
report, opt <span class="pl-k">=</span> SamplingInterdiction<span class="pl-k">.</span><span class="pl-c1">knapsack_interdiction_sampling</span>(v, vp, lw, fw, fK, lK)</pre></div>
<h3 dir="auto"><a id="user-content-shortest-path-interdiction" class="anchor" aria-hidden="true" href="#shortest-path-interdiction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Shortest path interdiction</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="tails = [1, 1, 2, 3, 3, 4, 4, 4, 5, 5]
heads = [2, 3, 3, 4, 2, 2, 3, 4, 3, 4]
cost = rand(1 : 5, 10)
dcost = rand(1 : 3, 10)
lw = rand(1 : 3, 10)
budget = 2
s, t = 1, 5
report, opt = SamplingInterdiction.sp_interdiction_sampling(tails, heads, cost, dcost, lw, budget, s, t)"><pre>tails <span class="pl-k">=</span> [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">4</span>, <span class="pl-c1">4</span>, <span class="pl-c1">5</span>, <span class="pl-c1">5</span>]
heads <span class="pl-k">=</span> [<span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>]
cost <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">5</span>, <span class="pl-c1">10</span>)
dcost <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">3</span>, <span class="pl-c1">10</span>)
lw <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">3</span>, <span class="pl-c1">10</span>)
budget <span class="pl-k">=</span> <span class="pl-c1">2</span>
s, t <span class="pl-k">=</span> <span class="pl-c1">1</span>, <span class="pl-c1">5</span>
report, opt <span class="pl-k">=</span> SamplingInterdiction<span class="pl-k">.</span><span class="pl-c1">sp_interdiction_sampling</span>(tails, heads, cost, dcost, lw, budget, s, t)</pre></div>
<h3 dir="auto"><a id="user-content-facility-location-interdiction" class="anchor" aria-hidden="true" href="#facility-location-interdiction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Facility location interdiction</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="nat = :uflp # use :sscflp for single-source facility location with interdiction
caps = rand(100 : 300, 10) # caps are ignored by the algorithm when :uflp is set
dems = rand(1 : 10, 100)
fcosts = rand(100 : 200, 10)
dfcosts = rand(20 : 50, 10)
asscosts = rand(5 : 10, 10, 100)
budget = 2
report, opt = SamplingInterdiction.cflp_interdiction_sampling(nat, caps, dems, fcosts, dfcosts, asscosts, budget)"><pre>nat <span class="pl-k">=</span> <span class="pl-c1">:uflp</span> <span class="pl-c"><span class="pl-c">#</span> use :sscflp for single-source facility location with interdiction</span>
caps <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">100</span> <span class="pl-k">:</span> <span class="pl-c1">300</span>, <span class="pl-c1">10</span>) <span class="pl-c"><span class="pl-c">#</span> caps are ignored by the algorithm when :uflp is set</span>
dems <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">10</span>, <span class="pl-c1">100</span>)
fcosts <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">100</span> <span class="pl-k">:</span> <span class="pl-c1">200</span>, <span class="pl-c1">10</span>)
dfcosts <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">20</span> <span class="pl-k">:</span> <span class="pl-c1">50</span>, <span class="pl-c1">10</span>)
asscosts <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">5</span> <span class="pl-k">:</span> <span class="pl-c1">10</span>, <span class="pl-c1">10</span>, <span class="pl-c1">100</span>)
budget <span class="pl-k">=</span> <span class="pl-c1">2</span>
report, opt <span class="pl-k">=</span> SamplingInterdiction<span class="pl-k">.</span><span class="pl-c1">cflp_interdiction_sampling</span>(nat, caps, dems, fcosts, dfcosts, asscosts, budget)</pre></div>
</article></div>