<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-sqlquery" class="anchor" aria-hidden="true" href="#sqlquery"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SQLQuery</h1>
<p>A package for representing sql queries, and converting them to valid SQL
statements. The generated SQL statements follow the specification in
<a href="https://www.sqlite.org/lang_select.html" rel="nofollow">https://www.sqlite.org/lang_select.html</a>, and should conform to
<a href="http://www.sqlstyle.guide/" rel="nofollow">http://www.sqlstyle.guide/</a> as far as possible.</p>
<p>This package is currently under development and is not registered.</p>
<p>It allows for user-defined verbs (e.g. to capture common SQL idioms) that composes well with the rest of the verbs provided here. It is the intention of this package to allow for further customizations (e.g. different string or identifier quotes, or to recognize <a href="http://www.gaia-gis.it/gaia-sins/spatialite-sql-4.3.0.html" rel="nofollow">additional functions</a> for different backends).</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="  | | |_| | | | (_| |  |  Version 0.5.0-rc1+1 (2016-08-05 15:23 UTC)
 _/ |\__'_|_|_|\__'_|  |  Commit acfd04c (9 days old release-0.5)
|__/                   |  x86_64-apple-darwin13.4.0

julia&gt; using SQLQuery

julia&gt; type NewNode{T} &lt;: SQLQuery.QueryNode
           input::T
           args
       end

julia&gt; SQLQuery.QUERYNODE[:newnode] = NewNode
NewNode{T}

julia&gt; SQLQuery.translatesql(nn::NewNode, offset::Int) = &quot;newnode, offset=$offset&quot;

julia&gt; @sqlquery source |&gt; newnode(are, you.serious) |&gt; select(*, some, columns)
SELECT *,
       some,
       columns
  FROM (newnode, offset=8)
"><pre>  <span class="pl-k">|</span> <span class="pl-k">|</span> <span class="pl-k">|</span>_<span class="pl-k">|</span> <span class="pl-k">|</span> <span class="pl-k">|</span> <span class="pl-k">|</span> (_<span class="pl-k">|</span> <span class="pl-k">|</span>  <span class="pl-k">|</span>  Version <span class="pl-c1">0.5</span>.<span class="pl-c1">0</span><span class="pl-k">-</span>rc1<span class="pl-k">+</span><span class="pl-c1">1</span> (<span class="pl-c1">2016</span><span class="pl-k">-</span><span class="pl-c1">08</span><span class="pl-k">-</span><span class="pl-c1">05</span> <span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">23</span> UTC)
 _<span class="pl-k">/</span> <span class="pl-k">|</span><span class="pl-k">\</span>__<span class="pl-k">'</span>_<span class="pl-k">|</span>_<span class="pl-k">|</span>_<span class="pl-k">|</span><span class="pl-k">\</span>__<span class="pl-k">'</span>_<span class="pl-k">|</span>  <span class="pl-k">|</span>  Commit acfd04c (<span class="pl-c1">9</span> days old release<span class="pl-k">-</span><span class="pl-c1">0.5</span>)
<span class="pl-k">|</span>__<span class="pl-k">/</span>                   <span class="pl-k">|</span>  x86_64<span class="pl-k">-</span>apple<span class="pl-k">-</span>darwin13.<span class="pl-c1">4.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SQLQuery

julia<span class="pl-k">&gt;</span> type NewNode{T} <span class="pl-k">&lt;:</span> <span class="pl-c1">SQLQuery.QueryNode</span>
           input<span class="pl-k">::</span><span class="pl-c1">T</span>
           args
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> SQLQuery<span class="pl-k">.</span>QUERYNODE[<span class="pl-c1">:newnode</span>] <span class="pl-k">=</span> NewNode
NewNode{T}

julia<span class="pl-k">&gt;</span> SQLQuery<span class="pl-k">.</span><span class="pl-en">translatesql</span>(nn<span class="pl-k">::</span><span class="pl-c1">NewNode</span>, offset<span class="pl-k">::</span><span class="pl-c1">Int</span>) <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>newnode, offset=<span class="pl-v">$offset</span><span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span> <span class="pl-c1">newnode</span>(are, you<span class="pl-k">.</span>serious) <span class="pl-k">|&gt;</span> <span class="pl-c1">select</span>(<span class="pl-k">*</span>, some, columns)
SELECT <span class="pl-k">*</span>,
       some,
       columns
  FROM (newnode, offset<span class="pl-k">=</span><span class="pl-c1">8</span>)</pre></div>
<p>Some other examples:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="  | | |_| | | | (_| |  |  Version 0.5.0-rc1+1 (2016-08-05 15:23 UTC)
 _/ |\__'_|_|_|\__'_|  |  Commit acfd04c (10 days old release-0.5)
|__/                   |  x86_64-apple-darwin13.4.0

julia&gt; using SQLQuery

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;)
SELECT *
  FROM source
 WHERE name == 3
   AND bar == &quot;whee&quot;

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       select(name = foo * 3, col)
SELECT foo * 3 AS name,
       col
  FROM (SELECT *
          FROM source
         WHERE name == 3
           AND bar == &quot;whee&quot;)

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       distinct(name = foo * 3, col)
SELECT DISTINCT foo * 3 AS name,
                col
  FROM (SELECT *
          FROM source
         WHERE name == 3
           AND bar == &quot;whee&quot;)

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       select(name = foo * 3, col)
SELECT foo * 3 AS name,
       col
  FROM (SELECT *
          FROM source
         WHERE name == 3
           AND bar == &quot;whee&quot;)

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       select(*)
SELECT *
  FROM (SELECT *
          FROM source
         WHERE name == 3
           AND bar == &quot;whee&quot;)

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       distinct(*)
SELECT DISTINCT *
  FROM (SELECT *
          FROM source
         WHERE name == 3
           AND bar == &quot;whee&quot;)

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       distinct(col)
SELECT DISTINCT col
  FROM (SELECT *
          FROM source
         WHERE name == 3
           AND bar == &quot;whee&quot;)

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       select(name = foo * 3, col) |&gt;
       orderby(name)
  SELECT *
    FROM (SELECT foo * 3 AS name,
                 col
            FROM (SELECT *
                    FROM source
                   WHERE name == 3
                     AND bar == &quot;whee&quot;))
ORDER BY name

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       select(name = foo * 3, col) |&gt;
       orderby(name, col)
  SELECT *
    FROM (SELECT foo * 3 AS name,
                 col
            FROM (SELECT *
                    FROM source
                   WHERE name == 3
                     AND bar == &quot;whee&quot;))
ORDER BY name,
         col

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       select(name = foo * 3, col) |&gt;
       orderby(desc(name))
  SELECT *
    FROM (SELECT foo * 3 AS name,
                 col
            FROM (SELECT *
                    FROM source
                   WHERE name == 3
                     AND bar == &quot;whee&quot;))
ORDER BY name DESC

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       select(name = foo * 3, col) |&gt;
       orderby(name, desc(col))
  SELECT *
    FROM (SELECT foo * 3 AS name,
                 col
            FROM (SELECT *
                    FROM source
                   WHERE name == 3
                     AND bar == &quot;whee&quot;))
ORDER BY name,
         col DESC

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       select(name = foo * 3, col) |&gt;
       orderby(desc(name), desc(col))
  SELECT *
    FROM (SELECT foo * 3 AS name,
                 col
            FROM (SELECT *
                    FROM source
                   WHERE name == 3
                     AND bar == &quot;whee&quot;))
ORDER BY name DESC,
         col DESC

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       select(name = foo * 3, col) |&gt;
       orderby(desc(name), asc(col))
  SELECT *
    FROM (SELECT foo * 3 AS name,
                 col
            FROM (SELECT *
                    FROM source
                   WHERE name == 3
                     AND bar == &quot;whee&quot;))
ORDER BY name DESC,
         col ASC

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       select(name = foo * 3, col) |&gt;
       orderby(asc(name), asc(col))
  SELECT *
    FROM (SELECT foo * 3 AS name,
                 col
            FROM (SELECT *
                    FROM source
                   WHERE name == 3
                     AND bar == &quot;whee&quot;))
ORDER BY name ASC,
         col ASC

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       select(name = foo * 3, col) |&gt;
       orderby(desc(name))
  SELECT *
    FROM (SELECT foo * 3 AS name,
                 col
            FROM (SELECT *
                    FROM source
                   WHERE name == 3
                     AND bar == &quot;whee&quot;))
ORDER BY name DESC

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       select(name = foo * 3, col) |&gt;
       orderby(desc(name)) |&gt;
       limit(10)
SELECT *
  FROM (  SELECT *
            FROM (SELECT foo * 3 AS name,
                         col
                    FROM (SELECT *
                            FROM source
                           WHERE name == 3
                             AND bar == &quot;whee&quot;))
        ORDER BY name DESC)
 LIMIT 10

julia&gt; @sqlquery source |&gt;
       filter(name == 3, bar == &quot;whee&quot;) |&gt;
       select(name = foo * 3, col) |&gt;
       orderby(desc(name)) |&gt;
       offset(7)
SELECT *
  FROM (  SELECT *
            FROM (SELECT foo * 3 AS name,
                         col
                    FROM (SELECT *
                            FROM source
                           WHERE name == 3
                             AND bar == &quot;whee&quot;))
        ORDER BY name DESC)
 LIMIT -1 OFFSET 7


julia&gt; @sqlquery Artists |&gt;
       leftjoin(Songs) |&gt;
       leftjoin(Albums) |&gt;
       select( song_id = Songs._id,
       song_name = Songs.name,
       Songs.length,
       artist_id = Songs.artist_id,
       artist_name = Artists.name,
       album_id = Songs.album_id,
       album_name = Albums.name)
SELECT Songs._id AS song_id,
       Songs.name AS song_name,
       Songs.length,
       Songs.artist_id AS artist_id,
       Artists.name AS artist_name,
       Songs.album_id AS album_id,
       Albums.name AS album_name
  FROM (SELECT *
          FROM (SELECT *
                  FROM Artists
                       LEFT JOIN Songs)
               LEFT JOIN Albums)

julia&gt; @sqlquery Artists |&gt;
       leftjoin(Songs) |&gt;
       leftjoin(Albums) |&gt;
       select( song_id = Songs._id,
       song_name = Songs.name,
       Songs.length,
       artist_id = Songs.artist_id,
       artist_name = Artists.name,
       album_id = Songs.album_id,
       album_name = Albums.name) |&gt;
       groupby(Songs.length, artist_id)
  SELECT *
    FROM (SELECT Songs._id AS song_id,
                 Songs.name AS song_name,
                 Songs.length,
                 Songs.artist_id AS artist_id,
                 Artists.name AS artist_name,
                 Songs.album_id AS album_id,
                 Albums.name AS album_name
            FROM (SELECT *
                    FROM (SELECT *
                            FROM Artists
                                 LEFT JOIN Songs)
                         LEFT JOIN Albums))
GROUP BY Songs.length, artist_id

julia&gt; @sqlquery Artists |&gt;
       leftjoin(Songs) |&gt;
       leftjoin(Albums) |&gt;
       select( song_id = Songs._id,
       song_name = Songs.name,
       Songs.length,
       artist_id = Songs.artist_id,
       artist_name = Artists.name,
       album_id = Songs.album_id,
       album_name = Albums.name) |&gt;
       groupby(Songs.length, artist_id) |&gt;
       orderby(asc(song_id), desc(Songs.length), desc(artist_id))
  SELECT *
    FROM (  SELECT *
              FROM (SELECT Songs._id AS song_id,
                           Songs.name AS song_name,
                           Songs.length,
                           Songs.artist_id AS artist_id,
                           Artists.name AS artist_name,
                           Songs.album_id AS album_id,
                           Albums.name AS album_name
                      FROM (SELECT *
                              FROM (SELECT *
                                      FROM Artists
                                           LEFT JOIN Songs)
                                   LEFT JOIN Albums))
          GROUP BY Songs.length, artist_id)
ORDER BY song_id ASC,
         Songs.length DESC,
         artist_id DESC
"><pre>  <span class="pl-k">|</span> <span class="pl-k">|</span> <span class="pl-k">|</span>_<span class="pl-k">|</span> <span class="pl-k">|</span> <span class="pl-k">|</span> <span class="pl-k">|</span> (_<span class="pl-k">|</span> <span class="pl-k">|</span>  <span class="pl-k">|</span>  Version <span class="pl-c1">0.5</span>.<span class="pl-c1">0</span><span class="pl-k">-</span>rc1<span class="pl-k">+</span><span class="pl-c1">1</span> (<span class="pl-c1">2016</span><span class="pl-k">-</span><span class="pl-c1">08</span><span class="pl-k">-</span><span class="pl-c1">05</span> <span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">23</span> UTC)
 _<span class="pl-k">/</span> <span class="pl-k">|</span><span class="pl-k">\</span>__<span class="pl-k">'</span>_<span class="pl-k">|</span>_<span class="pl-k">|</span>_<span class="pl-k">|</span><span class="pl-k">\</span>__<span class="pl-k">'</span>_<span class="pl-k">|</span>  <span class="pl-k">|</span>  Commit acfd04c (<span class="pl-c1">10</span> days old release<span class="pl-k">-</span><span class="pl-c1">0.5</span>)
<span class="pl-k">|</span>__<span class="pl-k">/</span>                   <span class="pl-k">|</span>  x86_64<span class="pl-k">-</span>apple<span class="pl-k">-</span>darwin13.<span class="pl-c1">4.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SQLQuery

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>)
SELECT <span class="pl-k">*</span>
  FROM source
 WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
   AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>(name <span class="pl-k">=</span> foo <span class="pl-k">*</span> <span class="pl-c1">3</span>, col)
SELECT foo <span class="pl-k">*</span> <span class="pl-c1">3</span> AS name,
       col
  FROM (SELECT <span class="pl-k">*</span>
          FROM source
         WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
           AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">distinct</span>(name <span class="pl-k">=</span> foo <span class="pl-k">*</span> <span class="pl-c1">3</span>, col)
SELECT DISTINCT foo <span class="pl-k">*</span> <span class="pl-c1">3</span> AS name,
                col
  FROM (SELECT <span class="pl-k">*</span>
          FROM source
         WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
           AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>(name <span class="pl-k">=</span> foo <span class="pl-k">*</span> <span class="pl-c1">3</span>, col)
SELECT foo <span class="pl-k">*</span> <span class="pl-c1">3</span> AS name,
       col
  FROM (SELECT <span class="pl-k">*</span>
          FROM source
         WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
           AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>(<span class="pl-k">*</span>)
SELECT <span class="pl-k">*</span>
  FROM (SELECT <span class="pl-k">*</span>
          FROM source
         WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
           AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">distinct</span>(<span class="pl-k">*</span>)
SELECT DISTINCT <span class="pl-k">*</span>
  FROM (SELECT <span class="pl-k">*</span>
          FROM source
         WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
           AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">distinct</span>(col)
SELECT DISTINCT col
  FROM (SELECT <span class="pl-k">*</span>
          FROM source
         WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
           AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>(name <span class="pl-k">=</span> foo <span class="pl-k">*</span> <span class="pl-c1">3</span>, col) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">orderby</span>(name)
  SELECT <span class="pl-k">*</span>
    FROM (SELECT foo <span class="pl-k">*</span> <span class="pl-c1">3</span> AS name,
                 col
            FROM (SELECT <span class="pl-k">*</span>
                    FROM source
                   WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
                     AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>))
ORDER BY name

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>(name <span class="pl-k">=</span> foo <span class="pl-k">*</span> <span class="pl-c1">3</span>, col) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">orderby</span>(name, col)
  SELECT <span class="pl-k">*</span>
    FROM (SELECT foo <span class="pl-k">*</span> <span class="pl-c1">3</span> AS name,
                 col
            FROM (SELECT <span class="pl-k">*</span>
                    FROM source
                   WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
                     AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>))
ORDER BY name,
         col

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>(name <span class="pl-k">=</span> foo <span class="pl-k">*</span> <span class="pl-c1">3</span>, col) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">orderby</span>(<span class="pl-c1">desc</span>(name))
  SELECT <span class="pl-k">*</span>
    FROM (SELECT foo <span class="pl-k">*</span> <span class="pl-c1">3</span> AS name,
                 col
            FROM (SELECT <span class="pl-k">*</span>
                    FROM source
                   WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
                     AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>))
ORDER BY name DESC

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>(name <span class="pl-k">=</span> foo <span class="pl-k">*</span> <span class="pl-c1">3</span>, col) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">orderby</span>(name, <span class="pl-c1">desc</span>(col))
  SELECT <span class="pl-k">*</span>
    FROM (SELECT foo <span class="pl-k">*</span> <span class="pl-c1">3</span> AS name,
                 col
            FROM (SELECT <span class="pl-k">*</span>
                    FROM source
                   WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
                     AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>))
ORDER BY name,
         col DESC

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>(name <span class="pl-k">=</span> foo <span class="pl-k">*</span> <span class="pl-c1">3</span>, col) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">orderby</span>(<span class="pl-c1">desc</span>(name), <span class="pl-c1">desc</span>(col))
  SELECT <span class="pl-k">*</span>
    FROM (SELECT foo <span class="pl-k">*</span> <span class="pl-c1">3</span> AS name,
                 col
            FROM (SELECT <span class="pl-k">*</span>
                    FROM source
                   WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
                     AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>))
ORDER BY name DESC,
         col DESC

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>(name <span class="pl-k">=</span> foo <span class="pl-k">*</span> <span class="pl-c1">3</span>, col) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">orderby</span>(<span class="pl-c1">desc</span>(name), <span class="pl-c1">asc</span>(col))
  SELECT <span class="pl-k">*</span>
    FROM (SELECT foo <span class="pl-k">*</span> <span class="pl-c1">3</span> AS name,
                 col
            FROM (SELECT <span class="pl-k">*</span>
                    FROM source
                   WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
                     AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>))
ORDER BY name DESC,
         col ASC

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>(name <span class="pl-k">=</span> foo <span class="pl-k">*</span> <span class="pl-c1">3</span>, col) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">orderby</span>(<span class="pl-c1">asc</span>(name), <span class="pl-c1">asc</span>(col))
  SELECT <span class="pl-k">*</span>
    FROM (SELECT foo <span class="pl-k">*</span> <span class="pl-c1">3</span> AS name,
                 col
            FROM (SELECT <span class="pl-k">*</span>
                    FROM source
                   WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
                     AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>))
ORDER BY name ASC,
         col ASC

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>(name <span class="pl-k">=</span> foo <span class="pl-k">*</span> <span class="pl-c1">3</span>, col) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">orderby</span>(<span class="pl-c1">desc</span>(name))
  SELECT <span class="pl-k">*</span>
    FROM (SELECT foo <span class="pl-k">*</span> <span class="pl-c1">3</span> AS name,
                 col
            FROM (SELECT <span class="pl-k">*</span>
                    FROM source
                   WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
                     AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>))
ORDER BY name DESC

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>(name <span class="pl-k">=</span> foo <span class="pl-k">*</span> <span class="pl-c1">3</span>, col) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">orderby</span>(<span class="pl-c1">desc</span>(name)) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">limit</span>(<span class="pl-c1">10</span>)
SELECT <span class="pl-k">*</span>
  FROM (  SELECT <span class="pl-k">*</span>
            FROM (SELECT foo <span class="pl-k">*</span> <span class="pl-c1">3</span> AS name,
                         col
                    FROM (SELECT <span class="pl-k">*</span>
                            FROM source
                           WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
                             AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>))
        ORDER BY name DESC)
 LIMIT <span class="pl-c1">10</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> source <span class="pl-k">|&gt;</span>
       <span class="pl-c1">filter</span>(name <span class="pl-k">==</span> <span class="pl-c1">3</span>, bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>(name <span class="pl-k">=</span> foo <span class="pl-k">*</span> <span class="pl-c1">3</span>, col) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">orderby</span>(<span class="pl-c1">desc</span>(name)) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">offset</span>(<span class="pl-c1">7</span>)
SELECT <span class="pl-k">*</span>
  FROM (  SELECT <span class="pl-k">*</span>
            FROM (SELECT foo <span class="pl-k">*</span> <span class="pl-c1">3</span> AS name,
                         col
                    FROM (SELECT <span class="pl-k">*</span>
                            FROM source
                           WHERE name <span class="pl-k">==</span> <span class="pl-c1">3</span>
                             AND bar <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>whee<span class="pl-pds">"</span></span>))
        ORDER BY name DESC)
 LIMIT <span class="pl-k">-</span><span class="pl-c1">1</span> OFFSET <span class="pl-c1">7</span>


julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> Artists <span class="pl-k">|&gt;</span>
       <span class="pl-c1">leftjoin</span>(Songs) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">leftjoin</span>(Albums) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>( song_id <span class="pl-k">=</span> Songs<span class="pl-k">.</span>_id,
       song_name <span class="pl-k">=</span> Songs<span class="pl-k">.</span>name,
       Songs<span class="pl-k">.</span>length,
       artist_id <span class="pl-k">=</span> Songs<span class="pl-k">.</span>artist_id,
       artist_name <span class="pl-k">=</span> Artists<span class="pl-k">.</span>name,
       album_id <span class="pl-k">=</span> Songs<span class="pl-k">.</span>album_id,
       album_name <span class="pl-k">=</span> Albums<span class="pl-k">.</span>name)
SELECT Songs<span class="pl-k">.</span>_id AS song_id,
       Songs<span class="pl-k">.</span>name AS song_name,
       Songs<span class="pl-k">.</span>length,
       Songs<span class="pl-k">.</span>artist_id AS artist_id,
       Artists<span class="pl-k">.</span>name AS artist_name,
       Songs<span class="pl-k">.</span>album_id AS album_id,
       Albums<span class="pl-k">.</span>name AS album_name
  FROM (SELECT <span class="pl-k">*</span>
          FROM (SELECT <span class="pl-k">*</span>
                  FROM Artists
                       LEFT JOIN Songs)
               LEFT JOIN Albums)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> Artists <span class="pl-k">|&gt;</span>
       <span class="pl-c1">leftjoin</span>(Songs) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">leftjoin</span>(Albums) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>( song_id <span class="pl-k">=</span> Songs<span class="pl-k">.</span>_id,
       song_name <span class="pl-k">=</span> Songs<span class="pl-k">.</span>name,
       Songs<span class="pl-k">.</span>length,
       artist_id <span class="pl-k">=</span> Songs<span class="pl-k">.</span>artist_id,
       artist_name <span class="pl-k">=</span> Artists<span class="pl-k">.</span>name,
       album_id <span class="pl-k">=</span> Songs<span class="pl-k">.</span>album_id,
       album_name <span class="pl-k">=</span> Albums<span class="pl-k">.</span>name) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">groupby</span>(Songs<span class="pl-k">.</span>length, artist_id)
  SELECT <span class="pl-k">*</span>
    FROM (SELECT Songs<span class="pl-k">.</span>_id AS song_id,
                 Songs<span class="pl-k">.</span>name AS song_name,
                 Songs<span class="pl-k">.</span>length,
                 Songs<span class="pl-k">.</span>artist_id AS artist_id,
                 Artists<span class="pl-k">.</span>name AS artist_name,
                 Songs<span class="pl-k">.</span>album_id AS album_id,
                 Albums<span class="pl-k">.</span>name AS album_name
            FROM (SELECT <span class="pl-k">*</span>
                    FROM (SELECT <span class="pl-k">*</span>
                            FROM Artists
                                 LEFT JOIN Songs)
                         LEFT JOIN Albums))
GROUP BY Songs<span class="pl-k">.</span>length, artist_id

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@sqlquery</span> Artists <span class="pl-k">|&gt;</span>
       <span class="pl-c1">leftjoin</span>(Songs) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">leftjoin</span>(Albums) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">select</span>( song_id <span class="pl-k">=</span> Songs<span class="pl-k">.</span>_id,
       song_name <span class="pl-k">=</span> Songs<span class="pl-k">.</span>name,
       Songs<span class="pl-k">.</span>length,
       artist_id <span class="pl-k">=</span> Songs<span class="pl-k">.</span>artist_id,
       artist_name <span class="pl-k">=</span> Artists<span class="pl-k">.</span>name,
       album_id <span class="pl-k">=</span> Songs<span class="pl-k">.</span>album_id,
       album_name <span class="pl-k">=</span> Albums<span class="pl-k">.</span>name) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">groupby</span>(Songs<span class="pl-k">.</span>length, artist_id) <span class="pl-k">|&gt;</span>
       <span class="pl-c1">orderby</span>(<span class="pl-c1">asc</span>(song_id), <span class="pl-c1">desc</span>(Songs<span class="pl-k">.</span>length), <span class="pl-c1">desc</span>(artist_id))
  SELECT <span class="pl-k">*</span>
    FROM (  SELECT <span class="pl-k">*</span>
              FROM (SELECT Songs<span class="pl-k">.</span>_id AS song_id,
                           Songs<span class="pl-k">.</span>name AS song_name,
                           Songs<span class="pl-k">.</span>length,
                           Songs<span class="pl-k">.</span>artist_id AS artist_id,
                           Artists<span class="pl-k">.</span>name AS artist_name,
                           Songs<span class="pl-k">.</span>album_id AS album_id,
                           Albums<span class="pl-k">.</span>name AS album_name
                      FROM (SELECT <span class="pl-k">*</span>
                              FROM (SELECT <span class="pl-k">*</span>
                                      FROM Artists
                                           LEFT JOIN Songs)
                                   LEFT JOIN Albums))
          GROUP BY Songs<span class="pl-k">.</span>length, artist_id)
ORDER BY song_id ASC,
         Songs<span class="pl-k">.</span>length DESC,
         artist_id DESC</pre></div>
</article></div>