<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-hodgejl" class="anchor" aria-hidden="true" href="#hodgejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Hodge.jl</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://iagoleal.github.io/Hodge.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable Docs" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a> <a href="https://iagoleal.github.io/Hodge.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Latest Docs" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://github.com/iagoleal/Hodge.jl/actions/workflows/ci.yml"><img src="https://github.com/iagoleal/Hodge.jl/actions/workflows/ci.yml/badge.svg?branch=master" alt="Build Status" style="max-width:100%;"></a>  <a href="https://codecov.io/github/iagoleal/Hodge.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a91b50e19519f533bf2803f829b08fbdf4a48b6f004ac99e02d9f4463ed47952/68747470733a2f2f636f6465636f762e696f2f6769746875622f6961676f6c65616c2f486f6467652e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Code Coverage" data-canonical-src="https://codecov.io/github/iagoleal/Hodge.jl/coverage.svg?branch=master" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>Library for manipulation of simplicial complexes
and cochains defined over them.</p>
<p>The focus of this package is on the formalism of
<strong>Discrete Exterior Calculus</strong>
and its applications to statistical rankings
and extraction of topological features from simplicial triangulations.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>To install this package, all you have to do is to enter <code>]</code> on the Julia REPL and write</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="pkg&gt; add Hodge
"><pre>pkg<span class="pl-k">&gt;</span> add Hodge</pre></div>
<h2><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic Usage</h2>
<p>To use this package,
one starts defining a simplicial complex</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Hodge
K = SimplicialComplex([(1,2,3), (1,2,4), [1], [1,5,9,6], (2,6)])
"><pre><span class="pl-k">using</span> Hodge
K <span class="pl-k">=</span> <span class="pl-c1">SimplicialComplex</span>([(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>), (<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>), [<span class="pl-c1">1</span>], [<span class="pl-c1">1</span>,<span class="pl-c1">5</span>,<span class="pl-c1">9</span>,<span class="pl-c1">6</span>], (<span class="pl-c1">2</span>,<span class="pl-c1">6</span>)])</pre></div>
<p>Then it is possible to retrieve topological information from the complex</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="euler_characteristic(K)
betti(K)
"><pre><span class="pl-c1">euler_characteristic</span>(K)
<span class="pl-c1">betti</span>(K)</pre></div>
<p>Or one can define Cochains over <code>K</code>,
which are skew-symmetric tensors over the simplices of <code>K</code>,
and work with them</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="f = Cochain{Float64, 2}(K)
f[1,2,3] = 3.0
f[1,2,4] = -5.9
f[4,3,2] = 13.2
f[1,4,3] = π

g = coboundary(f)
w = coboundary_adj(f)
h = laplacian(f)
c = cup(f, h)

a, b, c = hodge(f)
"><pre>f <span class="pl-k">=</span> <span class="pl-c1">Cochain</span><span class="pl-c1">{Float64, 2}</span>(K)
f[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>] <span class="pl-k">=</span> <span class="pl-c1">3.0</span>
f[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>] <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">5.9</span>
f[<span class="pl-c1">4</span>,<span class="pl-c1">3</span>,<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">13.2</span>
f[<span class="pl-c1">1</span>,<span class="pl-c1">4</span>,<span class="pl-c1">3</span>] <span class="pl-k">=</span> π

g <span class="pl-k">=</span> <span class="pl-c1">coboundary</span>(f)
w <span class="pl-k">=</span> <span class="pl-c1">coboundary_adj</span>(f)
h <span class="pl-k">=</span> <span class="pl-c1">laplacian</span>(f)
c <span class="pl-k">=</span> <span class="pl-c1">cup</span>(f, h)

a, b, c <span class="pl-k">=</span> <span class="pl-c1">hodge</span>(f)</pre></div>
<p>See the <a href="https://iagoleal.github.io/Hodge.jl/stable/" rel="nofollow">documentation</a> for a more comprehensive explanation.</p>
</article></div>