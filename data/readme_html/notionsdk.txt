<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-notionsdkjl" class="anchor" aria-hidden="true" href="#notionsdkjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>NotionSDK.jl</h1>
<p dir="auto">NotionSDK is a simple and easy to use client library for the official <a href="https://developers.notion.com/" rel="nofollow">Notion API</a>.(Havily inspired by <a href="https://github.com/ramnes/notion-sdk-py">notion-sdk-py</a>)</p>
<p dir="auto">What is worked:</p>
<ol dir="auto">
<li>each api in notion website is worked, except some was deprecated.</li>
<li>the <code>body</code> or <code>query</code> should be inputted as <code>Dictionary</code> or a <code>Config</code> from <code>EasyConfig.jl</code>.</li>
<li>The return is <code>JSON3.Object</code> or <code>JSON3.Array</code> depends on the function calls.</li>
</ol>
<p dir="auto">Should Improved (TO DO):</p>
<ol dir="auto">
<li>The <code>Base.show</code> for client should be dispatched.</li>
<li>simplify the Exception message.</li>
<li>add some explanation in the code.</li>
</ol>
<h2 dir="auto"><a id="user-content-basic-examples" class="anchor" aria-hidden="true" href="#basic-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic Examples</h2>
<h3 dir="auto"><a id="user-content-setups" class="anchor" aria-hidden="true" href="#setups"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SetUps</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DotEnv
using EasyConfig
DotEnv.config(&quot;test/.env&quot;);

NOTION_TOKEN = ENV[&quot;NOTION_TOKEN&quot;];
database_id = ENV[&quot;database_id&quot;];
page_id = ENV[&quot;database_id&quot;];
user_id = ENV[&quot;database_id&quot;];
notion = Client(NOTION_TOKEN)"><pre><span class="pl-k">using</span> DotEnv
<span class="pl-k">using</span> EasyConfig
DotEnv<span class="pl-k">.</span><span class="pl-c1">config</span>(<span class="pl-s"><span class="pl-pds">"</span>test/.env<span class="pl-pds">"</span></span>);

NOTION_TOKEN <span class="pl-k">=</span> <span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>NOTION_TOKEN<span class="pl-pds">"</span></span>];
database_id <span class="pl-k">=</span> <span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>database_id<span class="pl-pds">"</span></span>];
page_id <span class="pl-k">=</span> <span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>database_id<span class="pl-pds">"</span></span>];
user_id <span class="pl-k">=</span> <span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>database_id<span class="pl-pds">"</span></span>];
notion <span class="pl-k">=</span> <span class="pl-c1">Client</span>(NOTION_TOKEN)</pre></div>
<h3 dir="auto"><a id="user-content-the-api" class="anchor" aria-hidden="true" href="#the-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>The API</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="list_users(notion)
get_me(notion)
# check notion website for the usage
retrieve_user(notion, user_id)

retrive_block(notion, block_id)

retrieve_page(notion, page_id)

list_block_children(notion, page_id)

#query database
filter = Config()
filter.property = &quot;Name&quot;
filter.title.equals = some_name
print(filter)
sort_1 = Config()
sort_1.property = &quot;Name&quot;
sort_1.direction = &quot;ascending&quot;
query_databases(notion, database_id; filter=filter, sorts=[sort_1])

#equivalent to 
filter = Dict(:property =&gt; &quot;Name&quot;, :title =&gt; Dict(:equals =&gt; &quot;$name&quot;))
sorts = [Dict(:property=&gt;&quot;Name&quot;, :direction=&gt;&quot;ascending&quot;)]
print(filter)
query_databases(notion, database_id; filter=body, sorts=sorts)"><pre><span class="pl-c1">list_users</span>(notion)
<span class="pl-c1">get_me</span>(notion)
<span class="pl-c"><span class="pl-c">#</span> check notion website for the usage</span>
<span class="pl-c1">retrieve_user</span>(notion, user_id)

<span class="pl-c1">retrive_block</span>(notion, block_id)

<span class="pl-c1">retrieve_page</span>(notion, page_id)

<span class="pl-c1">list_block_children</span>(notion, page_id)

<span class="pl-c"><span class="pl-c">#</span>query database</span>
filter <span class="pl-k">=</span> <span class="pl-c1">Config</span>()
filter<span class="pl-k">.</span>property <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Name<span class="pl-pds">"</span></span>
filter<span class="pl-k">.</span>title<span class="pl-k">.</span>equals <span class="pl-k">=</span> some_name
<span class="pl-c1">print</span>(filter)
sort_1 <span class="pl-k">=</span> <span class="pl-c1">Config</span>()
sort_1<span class="pl-k">.</span>property <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Name<span class="pl-pds">"</span></span>
sort_1<span class="pl-k">.</span>direction <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>ascending<span class="pl-pds">"</span></span>
<span class="pl-c1">query_databases</span>(notion, database_id; filter<span class="pl-k">=</span>filter, sorts<span class="pl-k">=</span>[sort_1])

<span class="pl-c"><span class="pl-c">#</span>equivalent to </span>
filter <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:property</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Name<span class="pl-pds">"</span></span>, <span class="pl-c1">:title</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:equals</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$name</span><span class="pl-pds">"</span></span>))
sorts <span class="pl-k">=</span> [<span class="pl-c1">Dict</span>(<span class="pl-c1">:property</span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Name<span class="pl-pds">"</span></span>, <span class="pl-c1">:direction</span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>ascending<span class="pl-pds">"</span></span>)]
<span class="pl-c1">print</span>(filter)
<span class="pl-c1">query_databases</span>(notion, database_id; filter<span class="pl-k">=</span>body, sorts<span class="pl-k">=</span>sorts)</pre></div>
</article></div>