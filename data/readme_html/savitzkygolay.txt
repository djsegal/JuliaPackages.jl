<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-savitzkygolayjl" class="anchor" aria-hidden="true" href="#savitzkygolayjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SavitzkyGolay.jl</h1>
<p dir="auto">Implementation of the 1D Savitzky-Golay filter in <a href="https://julialang.org/" rel="nofollow">JuliaLang</a>.</p>
<p dir="auto">Simple-plain implementation of the Savitzky-Golay filter in Julia.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">This package is registered and can be installed in Julia with the following:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]
pkg&gt; add SavitzkyGolay"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> add SavitzkyGolay</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">After installation, we load the package:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SavitzkyGolay
using Plots # This is for visualization purposes, not required in the SG package itself"><pre><span class="pl-k">using</span> SavitzkyGolay
<span class="pl-k">using</span> Plots <span class="pl-c"><span class="pl-c">#</span> This is for visualization purposes, not required in the SG package itself</span></pre></div>
<p dir="auto">Suppose we have a signal with noise that want to smooth out. The function for this is <code>savitzky_golay</code>, that accepts the following arguments:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="sg = savitzky_golay(y::AbstractVector, window_size::Int, order::Int; deriv::Int=0, rate::Real=1.0)    "><pre>sg <span class="pl-k">=</span> <span class="pl-c1">savitzky_golay</span>(y<span class="pl-k">::</span><span class="pl-c1">AbstractVector</span>, window_size<span class="pl-k">::</span><span class="pl-c1">Int</span>, order<span class="pl-k">::</span><span class="pl-c1">Int</span>; deriv<span class="pl-k">::</span><span class="pl-c1">Int</span><span class="pl-k">=</span><span class="pl-c1">0</span>, rate<span class="pl-k">::</span><span class="pl-c1">Real</span><span class="pl-k">=</span><span class="pl-c1">1.0</span>)    </pre></div>
<ul dir="auto">
<li><code>y</code>: The data vector with noise to be filtered.</li>
<li><code>window_size</code>: The length of the filter window (i.e., the number of coefficients). Must be an odd number.</li>
<li><code>order</code>: The order of the polynomial used to fit the samples. Must be less than <code>window_size</code>.</li>
<li><code>deriv</code>: The order of the derivative to compute. This must be a nonnegative integer. The default is 0, which means to filter the data without differentiating. If <code>deriv &gt; 0</code> it may need scaling which can be achieved using the <code>rate</code> optional argument. (optional)</li>
<li><code>rate</code>: Scaling real number when using the derivative. (optional)</li>
</ul>
<p dir="auto">The solution <code>sg</code> is a <code>SGolayResults</code> type that contains four fields:</p>
<ul dir="auto">
<li><code>y</code> with the filtered signal,</li>
<li><code>params</code> type <code>SGolay</code> with the initial parameters</li>
<li><code>coeff</code> with the computed coefficients</li>
<li><code>Vdm</code> with the Vandermonde matrix</li>
</ul>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="t = LinRange(-4, 4, 500)
y = exp.(-t.^2) .+ 0.05 .* (1.0 .+ randn(length(t)))
sg = savitzky_golay(y, 21, 4)
plot(t, [y sg.y], label=[&quot;Original signal&quot; &quot;Filtered signal&quot;])"><pre>t <span class="pl-k">=</span> <span class="pl-c1">LinRange</span>(<span class="pl-k">-</span><span class="pl-c1">4</span>, <span class="pl-c1">4</span>, <span class="pl-c1">500</span>)
y <span class="pl-k">=</span> <span class="pl-c1">exp</span>.(<span class="pl-k">-</span>t<span class="pl-k">.^</span><span class="pl-c1">2</span>) <span class="pl-k">.+</span> <span class="pl-c1">0.05</span> <span class="pl-k">.*</span> (<span class="pl-c1">1.0</span> <span class="pl-k">.+</span> <span class="pl-c1">randn</span>(<span class="pl-c1">length</span>(t)))
sg <span class="pl-k">=</span> <span class="pl-c1">savitzky_golay</span>(y, <span class="pl-c1">21</span>, <span class="pl-c1">4</span>)
<span class="pl-c1">plot</span>(t, [y sg<span class="pl-k">.</span>y], label<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>Original signal<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>Filtered signal<span class="pl-pds">"</span></span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lnacquaroli/SavitzkyGolay.jl/blob/main/examples/output-sg-exp.png"><img src="https://github.com/lnacquaroli/SavitzkyGolay.jl/raw/main/examples/output-sg-exp.png" alt="Example 2: SG1" title="Example 1: SG1" style="max-width: 100%;"></a></p>
<p dir="auto">Another simpler example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="t = 0:20
y = collect(0:20)
sg = savitzky_golay(y, 11, 2)
plot(t, [y sg.y], label=[&quot;Original signal&quot; &quot;Filtered signal&quot;])"><pre>t <span class="pl-k">=</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">20</span>
y <span class="pl-k">=</span> <span class="pl-c1">collect</span>(<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">20</span>)
sg <span class="pl-k">=</span> <span class="pl-c1">savitzky_golay</span>(y, <span class="pl-c1">11</span>, <span class="pl-c1">2</span>)
<span class="pl-c1">plot</span>(t, [y sg<span class="pl-k">.</span>y], label<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>Original signal<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>Filtered signal<span class="pl-pds">"</span></span>])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lnacquaroli/SavitzkyGolay.jl/blob/main/examples/output-sg-line.png"><img src="https://github.com/lnacquaroli/SavitzkyGolay.jl/raw/main/examples/output-sg-line.png" alt="Example 2: SG2" title="Example 2: SG2" style="max-width: 100%;"></a></p>
<p dir="auto">Example with derivatives:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="x = LinRange(-5, 15, 200)
data = 0.15*x.^3 - 2*x.^2 + x  .+ randn(length(x))
data_derivative = 0.45*x.^2 - 4*x .+ 1
sg = savitzky_golay(data, 21, 3, deriv=1)
sg_rate = savitzky_golay(data, 21, 3, deriv=1, rate=200/(15-(-5)))"><pre>x <span class="pl-k">=</span> <span class="pl-c1">LinRange</span>(<span class="pl-k">-</span><span class="pl-c1">5</span>, <span class="pl-c1">15</span>, <span class="pl-c1">200</span>)
data <span class="pl-k">=</span> <span class="pl-c1">0.15</span><span class="pl-k">*</span>x<span class="pl-k">.^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> <span class="pl-c1">2</span><span class="pl-k">*</span>x<span class="pl-k">.^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x  <span class="pl-k">.+</span> <span class="pl-c1">randn</span>(<span class="pl-c1">length</span>(x))
data_derivative <span class="pl-k">=</span> <span class="pl-c1">0.45</span><span class="pl-k">*</span>x<span class="pl-k">.^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">4</span><span class="pl-k">*</span>x <span class="pl-k">.+</span> <span class="pl-c1">1</span>
sg <span class="pl-k">=</span> <span class="pl-c1">savitzky_golay</span>(data, <span class="pl-c1">21</span>, <span class="pl-c1">3</span>, deriv<span class="pl-k">=</span><span class="pl-c1">1</span>)
sg_rate <span class="pl-k">=</span> <span class="pl-c1">savitzky_golay</span>(data, <span class="pl-c1">21</span>, <span class="pl-c1">3</span>, deriv<span class="pl-k">=</span><span class="pl-c1">1</span>, rate<span class="pl-k">=</span><span class="pl-c1">200</span><span class="pl-k">/</span>(<span class="pl-c1">15</span><span class="pl-k">-</span>(<span class="pl-k">-</span><span class="pl-c1">5</span>)))</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lnacquaroli/SavitzkyGolay.jl/blob/main/examples/output-sg-deriv.png"><img src="https://github.com/lnacquaroli/SavitzkyGolay.jl/raw/main/examples/output-sg-deriv.png" alt="Example 3: SG3" title="Example 3: SG3 with derivative" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-constructor" class="anchor" aria-hidden="true" href="#constructor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Constructor</h2>
<p dir="auto">There is an option to call the constructor <code>SGolay</code> to build the filter and then use it in different places. To call the constructor you need to specify at least two parameters, the full window size and the polynomial order. The constructor accepts the following arguments:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="SGolay(window_size, polynomial_order, derivative, rate)"><pre><span class="pl-c1">SGolay</span>(window_size, polynomial_order, derivative, rate)</pre></div>
<p dir="auto">For instance:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="sgfilter = SGolay(11, 2)

sgfilter = SGolay(11, 2, 1)

sgfilter = SGolay(11, 2, 1, 0.1)"><pre>sgfilter <span class="pl-k">=</span> <span class="pl-c1">SGolay</span>(<span class="pl-c1">11</span>, <span class="pl-c1">2</span>)

sgfilter <span class="pl-k">=</span> <span class="pl-c1">SGolay</span>(<span class="pl-c1">11</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>)

sgfilter <span class="pl-k">=</span> <span class="pl-c1">SGolay</span>(<span class="pl-c1">11</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-c1">0.1</span>)</pre></div>
<p dir="auto">By default, if not specified, <code>deriv=0</code> and <code>rate=1.0</code>.</p>
<p dir="auto">The same examples above with constructors are as follow:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="t = 0:20
y = collect(0:20)
sgfilter1 = SGolay(11, 2)
y1 = sgfilter1(y)"><pre>t <span class="pl-k">=</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">20</span>
y <span class="pl-k">=</span> <span class="pl-c1">collect</span>(<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">20</span>)
sgfilter1 <span class="pl-k">=</span> <span class="pl-c1">SGolay</span>(<span class="pl-c1">11</span>, <span class="pl-c1">2</span>)
y1 <span class="pl-k">=</span> <span class="pl-c1">sgfilter1</span>(y)</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="t = LinRange(-4, 4, 500)
y = exp.(-t.^2) .+ 0.05 .* (1.0 .+ randn(length(t)))
sgfilter2 = SGolay(21, 4)
y2 = sgfilter2(y)"><pre>t <span class="pl-k">=</span> <span class="pl-c1">LinRange</span>(<span class="pl-k">-</span><span class="pl-c1">4</span>, <span class="pl-c1">4</span>, <span class="pl-c1">500</span>)
y <span class="pl-k">=</span> <span class="pl-c1">exp</span>.(<span class="pl-k">-</span>t<span class="pl-k">.^</span><span class="pl-c1">2</span>) <span class="pl-k">.+</span> <span class="pl-c1">0.05</span> <span class="pl-k">.*</span> (<span class="pl-c1">1.0</span> <span class="pl-k">.+</span> <span class="pl-c1">randn</span>(<span class="pl-c1">length</span>(t)))
sgfilter2 <span class="pl-k">=</span> <span class="pl-c1">SGolay</span>(<span class="pl-c1">21</span>, <span class="pl-c1">4</span>)
y2 <span class="pl-k">=</span> <span class="pl-c1">sgfilter2</span>(y)</pre></div>
<p dir="auto">The solutions <code>y1</code> and <code>y2</code> are the same type as the <code>SGolayResults</code>.</p>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ul dir="auto">
<li><a href="https://scipy-cookbook.readthedocs.io/items/SavitzkyGolay.html" rel="nofollow">SciPyCookbook</a></li>
<li><a href="https://stackoverflow.com/a/48421852" rel="nofollow">StackOverflow - 48421852</a></li>
<li><a href="https://gist.github.com/jiahao/b8b5ac328c18b7ae8a17">Gist - jiahao</a></li>
</ul>
</article></div>