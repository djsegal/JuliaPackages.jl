<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-continuousoptimization-wip" class="anchor" aria-hidden="true" href="#continuousoptimization-wip"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ContinuousOptimization (WIP)</h1>
<p>This is a playground for implementations of "Unconstrained Continuous Full-Batch Optimization" algorithms. (the name is due to a discussion on <a href="https://gitter.im/JuliaOpt/Optim.jl" rel="nofollow">Optim's gitter chat</a>)</p>
<p>The goal is to develop this using the <a href="https://github.com/JuliaML/LearningStrategies.jl">LearningStrategies</a> framework to implement Optim-style algorithms in a flexible, modular way.</p>
<p>This is experimental and a work in progress, and should only be used by collaborators.  This may not be good, or even correct.  However, if you have any expertise in this area, <strong>please chip in</strong> by implementing new algorithms!</p>
</article></div>