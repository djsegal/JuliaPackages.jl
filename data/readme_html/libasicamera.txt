<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content--libasicamerajl" class="anchor" aria-hidden="true" href="#-libasicamerajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><a target="_blank" rel="noopener noreferrer" href="/docs/LibASICamera_logo.svg?raw=true&amp;sanitize=true"><img src="/docs/LibASICamera_logo.svg?raw=true&amp;sanitize=true" width="5%" style="max-width:100%;"></a> LibASICamera.jl</h1>
<p><a href="https://alftetzlaff.github.io/LibASICamera.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/195382e11a40c4e935b3b33967f3c96c635ec075/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c7565" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue" style="max-width:100%;"></a>
<a href="https://astronomy-imaging-camera.com/" rel="nofollow"><img src="https://camo.githubusercontent.com/bfb1b530b991d0a14a948e56c122664a312ca47a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5a574f2d4153492d637269746963616c" alt="" data-canonical-src="https://img.shields.io/badge/ZWO-ASI-critical" style="max-width:100%;"></a></p>
<p>A julia wrapper for the ASI Camera interface.</p>
<p>Please note that this is my first julia project, so suggestions for improvements are welcome!</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>To install this package, spin up julia, hit the ']' key to enter the package manager, then type:</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add LibASICamera  <span class="pl-c"><span class="pl-c">#</span> works, as soon as this package is registered</span>
<span class="pl-c"><span class="pl-c">#</span>or</span>
pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>AlfTetzlaff<span class="pl-k">/</span>LibASICamera<span class="pl-k">.</span>jl</pre></div>
<h3><a id="user-content-linux-specific-steps" class="anchor" aria-hidden="true" href="#linux-specific-steps"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Linux specific steps</h3>
<p>The ZWO ASI SDK will be downloaded in the background. Please note that (on Linux) you have to install the udev rules for the cameras. Run</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> build <span class="pl-k">-</span>v LibASICamera</pre></div>
<p>to get the command to run in order to install the udev rules.</p>
<p>Or in your terminal, run:</p>
<pre><code>sudo install /path/to/asi.rules /lib/udev/rules.d
</code></pre>
<h3><a id="user-content-windows-specific-steps" class="anchor" aria-hidden="true" href="#windows-specific-steps"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Windows specific steps</h3>
<p>Download and install the camera driver from <a href="https://astronomy-imaging-camera.com/software-drivers" rel="nofollow">here</a>.</p>
<h3><a id="user-content-test" class="anchor" aria-hidden="true" href="#test"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Test</h3>
<p>The wrapper was written and tested on Linux. In principle it should work on Windows and Mac as well, but I couldn't test it so far.</p>
<p>You can then connect the camera and run partial tests on functionality by typing in the package manager:</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> test LibASICamera</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>Get the connected devices and open them:</p>
<div class="highlight highlight-source-julia"><pre>devices <span class="pl-k">=</span> <span class="pl-c1">get_connected_devices</span>()
cam <span class="pl-k">=</span> devices[<span class="pl-c1">1</span>]</pre></div>
<p>Query information about the camera, like resolution or pixel size:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">@show</span> <span class="pl-c1">get_camera_property</span>(cam)
<span class="pl-c"><span class="pl-c">#</span>or</span>
<span class="pl-c1">@show</span> cam<span class="pl-k">.</span>info</pre></div>
<p>Get the parameters, which can be controlled or queried by the user, like gain, exposure or temperature:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">@show</span> <span class="pl-c1">get_control_caps</span>(cam)
<span class="pl-c"><span class="pl-c">#</span> or</span>
<span class="pl-c1">@show</span> cam<span class="pl-k">.</span>control_caps</pre></div>
<p>Get and set a control value, for some, special shorthand functions exist:</p>
<div class="highlight highlight-source-julia"><pre>value, is_auto_controlled <span class="pl-k">=</span> <span class="pl-c1">get_control_value</span>(cam, ASI_GAIN)
<span class="pl-c1">set_control_value</span>(cam, ASI_GAIN, value, is_auto_controlled)
<span class="pl-c1">set_gain</span>(cam, value)
<span class="pl-c1">get_temperature</span>(cam)</pre></div>
<h2><a id="user-content-still-image" class="anchor" aria-hidden="true" href="#still-image"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Still image</h2>
<p>Take a still image:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">set_gain</span>(cam, <span class="pl-c1">30</span>)  <span class="pl-c"><span class="pl-c">#</span> example values</span>
<span class="pl-c1">set_exposure</span>(cam, <span class="pl-c1">500</span>)
img <span class="pl-k">=</span> <span class="pl-c1">capture_still</span>(cam)</pre></div>
<h2><a id="user-content-video" class="anchor" aria-hidden="true" href="#video"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Video</h2>
<p>Take a video using Makie:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> LibASICamera
<span class="pl-k">using</span> Makie

devices <span class="pl-k">=</span> <span class="pl-c1">get_connected_devices</span>()
cam <span class="pl-k">=</span> devices[<span class="pl-c1">1</span>]
<span class="pl-c1">set_gain</span>(cam, <span class="pl-c1">30</span>, <span class="pl-c1">true</span>)  <span class="pl-c"><span class="pl-c">#</span> example values</span>
<span class="pl-c1">set_exposure</span>(cam, <span class="pl-c1">500</span>, <span class="pl-c1">true</span>)


<span class="pl-k">function</span> <span class="pl-en">capture_video</span>(cam<span class="pl-k">::</span><span class="pl-c1">ASICamera</span>)
    <span class="pl-c"><span class="pl-c">#</span> Camera stuff setup</span>
    width, height, binning, img_type <span class="pl-k">=</span> <span class="pl-c1">get_roi_format</span>(cam)
    buffer <span class="pl-k">=</span> <span class="pl-c1">allocate_buffer</span>(width, height, img_type)

    <span class="pl-c"><span class="pl-c">#</span> Makie scene setup</span>
    colorrange <span class="pl-k">=</span> img_type <span class="pl-k">==</span> ASI_IMG_RAW16 ? <span class="pl-c1">2</span><span class="pl-k">^</span><span class="pl-c1">16</span><span class="pl-k">-</span><span class="pl-c1">1</span> : <span class="pl-c1">255</span>
    scene <span class="pl-k">=</span> <span class="pl-c1">Scene</span>()
    img <span class="pl-k">=</span> <span class="pl-c1">image!</span>(scene, buffer, show_axis <span class="pl-k">=</span> <span class="pl-c1">false</span>, scale_plot <span class="pl-k">=</span> <span class="pl-c1">false</span>, colorrange<span class="pl-k">=</span>(<span class="pl-c1">0</span>,colorrange))[<span class="pl-c1">end</span>]
    <span class="pl-c1">display</span>(scene)

    <span class="pl-k">function</span> <span class="pl-en">video_loop</span>()
        err <span class="pl-k">=</span> ASI_SUCCESS
        <span class="pl-k">while</span> <span class="pl-c1">isopen</span>(scene) <span class="pl-k">&amp;&amp;</span> err <span class="pl-k">==</span> ASI_SUCCESS
            err <span class="pl-k">=</span> <span class="pl-c1">get_video_data!</span>(cam, buffer, <span class="pl-c1">5000</span>)
            img[<span class="pl-c1">1</span>] <span class="pl-k">=</span> buffer[<span class="pl-c1">end</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>, :]  <span class="pl-c"><span class="pl-c">#</span> for some reason we have to flip x</span>
            <span class="pl-c1">yield</span>()
        <span class="pl-k">end</span>
        <span class="pl-c1">println</span>(err)
    <span class="pl-k">end</span>

    <span class="pl-c1">start_video</span>(cam)
    <span class="pl-c1">video_loop</span>()
    <span class="pl-c1">stop_video</span>(cam)
<span class="pl-k">end</span>

<span class="pl-c1">@async</span> t <span class="pl-k">=</span> <span class="pl-c1">capture_video</span>(cam)

<span class="pl-c1">stop_video</span>(cam)

<span class="pl-c"><span class="pl-c">#</span> Always close the camera at the end</span>
<span class="pl-c1">close_camera</span>(cam)</pre></div>
<p>The above example runs the video capturing asynchronously in the main <em>thread</em>. You might notice that the REPL input gets sluggish under certain circumstances (exposure times, bandwidth settings and depending on your hardware). This can be resolved by moving the video capturing to another <em>process</em> using Distributed.jl:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Distributed
<span class="pl-c1">addprocs</span>(<span class="pl-c1">1</span>)
<span class="pl-c1">nprocs</span>()

<span class="pl-c"><span class="pl-c">#</span>%%</span>
<span class="pl-c1">@everywhere</span> <span class="pl-k">using</span> LibASICamera
<span class="pl-c1">@everywhere</span> <span class="pl-k">using</span> Makie

<span class="pl-c"><span class="pl-c">#</span>%%</span>
<span class="pl-c1">@everywhere</span> <span class="pl-k">function</span> <span class="pl-en">main</span>()
    cam <span class="pl-k">=</span> <span class="pl-c1">get_connected_devices</span>()[<span class="pl-c1">1</span>]
    <span class="pl-c1">set_exposure</span>(cam, <span class="pl-c1">500</span>, <span class="pl-c1">true</span>)
    <span class="pl-c1">set_gain</span>(cam, <span class="pl-c1">30</span>)
    <span class="pl-c1">set_control_value</span>(cam, ASI_BANDWIDTHOVERLOAD, <span class="pl-c1">90</span>)
    <span class="pl-c1">set_control_value</span>(cam, ASI_HIGH_SPEED_MODE, <span class="pl-c1">false</span>)
    <span class="pl-c1">set_roi_format</span>(cam, <span class="pl-c1">1280</span>, <span class="pl-c1">960</span>, <span class="pl-c1">1</span>, ASI_IMG_RAW8)
    <span class="pl-c"><span class="pl-c">#</span> set_roi_format(cam, 640, 480, 2, ASI_IMG_RAW8)</span>
    <span class="pl-c"><span class="pl-c">#</span> set_roi_format(cam, 640, 480, 1, ASI_IMG_RAW8)</span>
    <span class="pl-c"><span class="pl-c">#</span> set_roi_format(cam, 320, 240, 1, ASI_IMG_RAW8)</span>
    <span class="pl-c"><span class="pl-c">#</span> set_roi_format(cam, 168, 128, 1, ASI_IMG_RAW8)</span>

    <span class="pl-k">function</span> <span class="pl-en">capture_video</span>(cam<span class="pl-k">::</span><span class="pl-c1">ASICamera</span>)
        <span class="pl-c"><span class="pl-c">#</span> Camera stuff setup</span>
        width, height, binning, img_type <span class="pl-k">=</span> <span class="pl-c1">get_roi_format</span>(cam)
        buffer <span class="pl-k">=</span> <span class="pl-c1">allocate_buffer</span>(width, height, img_type)

        <span class="pl-c"><span class="pl-c">#</span> Makie scene setup</span>
        colorrange <span class="pl-k">=</span> img_type <span class="pl-k">==</span> ASI_IMG_RAW16 ? <span class="pl-c1">2</span><span class="pl-k">^</span><span class="pl-c1">16</span><span class="pl-k">-</span><span class="pl-c1">1</span> : <span class="pl-c1">255</span>
        scene <span class="pl-k">=</span> <span class="pl-c1">Scene</span>()
        img <span class="pl-k">=</span> <span class="pl-c1">image!</span>(scene, buffer, show_axis <span class="pl-k">=</span> <span class="pl-c1">false</span>, scale_plot <span class="pl-k">=</span> <span class="pl-c1">false</span>, colorrange<span class="pl-k">=</span>(<span class="pl-c1">0</span>,colorrange))[<span class="pl-c1">end</span>]
        t <span class="pl-k">=</span> <span class="pl-c1">text!</span>(scene, <span class="pl-s"><span class="pl-pds">"</span>0 FPS<span class="pl-pds">"</span></span>, color<span class="pl-k">=</span><span class="pl-c1">:yellow</span>, position<span class="pl-k">=</span>(width, height), align<span class="pl-k">=</span>(<span class="pl-c1">:top</span>, <span class="pl-c1">:right</span>), textsize<span class="pl-k">=</span><span class="pl-c1">Int</span>(height<span class="pl-k">/</span><span class="pl-c1">16</span>))
        <span class="pl-c1">display</span>(scene)

        <span class="pl-k">function</span> <span class="pl-en">video_loop</span>(cam, buffer, img, t)
            err <span class="pl-k">=</span> ASI_SUCCESS
            <span class="pl-k">while</span> <span class="pl-c1">isopen</span>(scene) <span class="pl-k">&amp;&amp;</span> err <span class="pl-k">==</span> ASI_SUCCESS
                t0 <span class="pl-k">=</span> <span class="pl-c1">time_ns</span>()
                err <span class="pl-k">=</span> <span class="pl-c1">get_video_data!</span>(cam, buffer, <span class="pl-c1">5000</span>)
                img[<span class="pl-c1">1</span>] <span class="pl-k">=</span> buffer[<span class="pl-c1">end</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>, :]  <span class="pl-c"><span class="pl-c">#</span> for some reason we have to flip x</span>
                t1 <span class="pl-k">=</span> <span class="pl-c1">time_ns</span>()
                t[<span class="pl-c1">end</span>][<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">string</span>(<span class="pl-c1">round</span>(<span class="pl-c1">1.</span> <span class="pl-k">/</span>(<span class="pl-c1">Float64</span>(t1<span class="pl-k">-</span>t0)<span class="pl-k">/</span><span class="pl-c1">1E9</span>), digits<span class="pl-k">=</span><span class="pl-c1">1</span>), <span class="pl-s"><span class="pl-pds">"</span> FPS<span class="pl-pds">"</span></span>)
                <span class="pl-c1">yield</span>()
            <span class="pl-k">end</span>
            <span class="pl-c1">println</span>(err)
        <span class="pl-k">end</span>

        <span class="pl-c1">start_video</span>(cam)
        <span class="pl-c1">video_loop</span>(cam, buffer, img, t)
        <span class="pl-c1">stop_video</span>(cam)
    <span class="pl-k">end</span>

    <span class="pl-c1">capture_video</span>(cam)
    <span class="pl-c1">close_camera</span>(cam)
<span class="pl-k">end</span>

<span class="pl-c1">remotecall</span>(main, <span class="pl-c1">2</span>)</pre></div>
<p>If you encounter any issues, don't hesitate to ask!</p>
</article></div>