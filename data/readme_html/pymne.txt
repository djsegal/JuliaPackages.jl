<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-pymne" class="anchor" aria-hidden="true" href="#pymne"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PyMNE</h1>
<p dir="auto">Julia interface to MNE-Python via PythonCall</p>
<p dir="auto"><a href="https://github.com/beacon-biosignals/PyMNE.jl/actions"><img src="https://github.com/beacon-biosignals/PyMNE.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a> <a href="https://codecov.io/github/beacon-biosignals/PyMNE.jl?branch=main" rel="nofollow"><img src="https://camo.githubusercontent.com/ac2ff733256ddfac6566e0df337baa143d4c3143b778401e44c5ac0cc91c7756/68747470733a2f2f636f6465636f762e696f2f6769746875622f626561636f6e2d62696f7369676e616c732f50794d4e452e6a6c2f62616467652e7376673f6272616e63683d6d61696e" alt="CodeCov" data-canonical-src="https://codecov.io/github/beacon-biosignals/PyMNE.jl/badge.svg?branch=main" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">This package uses <a href="https://cjdoris.github.io/PythonCall.jl" rel="nofollow"><code>PythonCall</code></a> to make
<a href="https://mne.tools" rel="nofollow">MNE-Python</a> available from within Julia. Unsurprisingly,
MNE-Python and its dependencies need to be installed in order for this to work
and PyMNE will attempt to install when the package is built: this should happen
more or less automatically via <a href="https://github.com/cjdoris/CondaPkg.jl"><code>CondaPkg</code></a>.
You can configure various options via <code>CondaPkg</code>. MNE-Python is installed via
Conda, not via pip.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">In the same philosophy as PythonCall, this allows for the transparent use of
MNE-Python from within Julia.
The major things the package does are wrap the installation of MNE in the
package installation and load all the MNE functionality into the module
namespace.
After that, it's just a Python package accessible via <code>using PyMNE</code> in
Julia. The usual conversion rules and behaviors from PythonCall apply.
The <a href="test/runtests.jl">tests</a> test a few conversion gotchas, especially
compared to prior versions of this package, which were based on
<a href="https://github.com/JuliaPy/PyCall.jl">PyCall</a>.</p>
<h2 dir="auto"><a id="user-content-hint" class="anchor" aria-hidden="true" href="#hint"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hint:</h2>
<p dir="auto">You need to explicitly convert vectors of strings to a <code>PyList</code>. For instance</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data = raw.get_data(picks=[&quot;Oz&quot;,&quot;Cz&quot;])"><pre>data <span class="pl-k">=</span> raw<span class="pl-k">.</span><span class="pl-c1">get_data</span>(picks<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>Oz<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>Cz<span class="pl-pds">"</span></span>])</pre></div>
<p dir="auto">does not work, whereas</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data = raw.get_data(picks=pylist([&quot;Oz&quot;,&quot;Cz&quot;]))"><pre>data <span class="pl-k">=</span> raw<span class="pl-k">.</span><span class="pl-c1">get_data</span>(picks<span class="pl-k">=</span><span class="pl-c1">pylist</span>([<span class="pl-s"><span class="pl-pds">"</span>Oz<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>Cz<span class="pl-pds">"</span></span>]))</pre></div>
<p dir="auto">works. The underlying logic is, that the <a href="https://cjdoris.github.io/PythonCall.jl/dev/pycall/#Lossiness-of-conversion" rel="nofollow">automatic conversion</a> of  <code>["A","B"]</code>is to a <code>juliacall.VectorValue</code> which behaves similar to a <code>pyList</code> - but is apparently not recognized properly by MNE (a vector of int, surprisingly, works though).</p>
<h3 dir="auto"><a id="user-content-exposing-mne-python-in-julia" class="anchor" aria-hidden="true" href="#exposing-mne-python-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Exposing MNE-Python in Julia</h3>
<p dir="auto">For example, in Python you can access the MNE docs like this:</p>
<div class="highlight highlight-source-python notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import mne

mne.open_docs()"><pre><span class="pl-k">import</span> <span class="pl-s1">mne</span>

<span class="pl-s1">mne</span>.<span class="pl-en">open_docs</span>()</pre></div>
<p dir="auto">With PyMNE, you can do this from within Julia.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using PyMNE

PyMNE.open_docs()"><pre><span class="pl-k">using</span> PyMNE

PyMNE<span class="pl-k">.</span><span class="pl-c1">open_docs</span>()</pre></div>
<p dir="auto">The PythonCall infrastructure also means that Python docstrings are available
in Julia:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="help?&gt; PyMNE.open_docs
  Python function open_docs.

  Launch a new web browser tab with the MNE documentation.

  Parameters
  ----------
  kind : str | None
      Can be &quot;api&quot; (default), &quot;tutorials&quot;, or &quot;examples&quot;.
      The default can be changed by setting the configuration value
      MNE_DOCS_KIND.
  version : str | None
      Can be &quot;stable&quot; (default) or &quot;dev&quot;.
      The default can be changed by setting the configuration value
      MNE_DOCS_VERSION."><pre>help?<span class="pl-k">&gt;</span> PyMNE<span class="pl-k">.</span>open_docs
  Python <span class="pl-k">function</span> open_docs.

  Launch a new web browser tab with the MNE documentation.

  Parameters
  <span class="pl-k">----------</span>
  kind <span class="pl-k">:</span> str <span class="pl-k">|</span> None
      Can be <span class="pl-s"><span class="pl-pds">"</span>api<span class="pl-pds">"</span></span> (default), <span class="pl-s"><span class="pl-pds">"</span>tutorials<span class="pl-pds">"</span></span>, or <span class="pl-s"><span class="pl-pds">"</span>examples<span class="pl-pds">"</span></span>.
      The default can be changed by setting the configuration value
      MNE_DOCS_KIND.
  version <span class="pl-k">:</span> str <span class="pl-k">|</span> None
      Can be <span class="pl-s"><span class="pl-pds">"</span>stable<span class="pl-pds">"</span></span> (default) or <span class="pl-s"><span class="pl-pds">"</span>dev<span class="pl-pds">"</span></span>.
      The default can be changed by setting the configuration value
      MNE_DOCS_VERSION.</pre></div>
</article></div>