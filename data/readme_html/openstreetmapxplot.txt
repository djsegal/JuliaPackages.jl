<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-openstreetmapxplotjl" class="anchor" aria-hidden="true" href="#openstreetmapxplotjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>OpenStreetMapXPlot.jl</h1>
<p>Build status: <a href="https://travis-ci.org/pszufe/OpenStreetMapXPlot.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8bba82ac00fec00f867b8a1e97ef84f110d1780cfbbcab03beaf947bf3091317/68747470733a2f2f7472617669732d63692e6f72672f70737a7566652f4f70656e5374726565744d617058506c6f742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/pszufe/OpenStreetMapXPlot.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Test coverage: <a href="https://coveralls.io/github/pszufe/OpenStreetMapXPlot.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/62c958b6300a377db3cac68ab5d1ec6df68ebc6f7b733a8065a868098b7f61b8/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f70737a7566652f4f70656e5374726565744d617058506c6f742e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/pszufe/OpenStreetMapXPlot.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://pszufe.github.io/OpenStreetMapXPlot.jl/latest" rel="nofollow">Documentation <img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>This is a plotting companion for the <a href="https://github.com/pszufe/OpenStreetMapX.jl">OpenStreetMapX.jl</a> package.</p>
<p>The package provides to plotting mechanisms for map vizualization:</p>
<ul>
<li><code>Plots.jl</code> with GR as a back-end</li>
<li>plotting directly to <code>PyPlot.jl</code> (please note that due to slower painting speed this option is reasonable only for small maps up to few thousand nodes)</li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>The current version has been tested with Julia 1.3.1 and Julia 1.5.0</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg
pkg&quot;add OpenStreetMapX&quot;
pkg&quot;add OpenStreetMapXPlot&quot;
"><pre><span class="pl-k">using</span> Pkg
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add OpenStreetMapX<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add OpenStreetMapXPlot<span class="pl-pds">"</span></span></pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>We will show a full scenario including routing. Let us start by preparing the data and calculating a sample route.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using OpenStreetMapX

pth = joinpath(dirname(pathof(OpenStreetMapX)),&quot;..&quot;,&quot;test&quot;,&quot;data&quot;,&quot;reno_east3.osm&quot;)
m =  get_map_data(pth,use_cache = false);
import Random
Random.seed!(0);
pointA = point_to_nodes(generate_point_in_bounds(m), m)
pointB = point_to_nodes(generate_point_in_bounds(m), m)
sr = shortest_route(m, pointA, pointB)[1]
"><pre><span class="pl-k">using</span> OpenStreetMapX

pth <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">pathof</span>(OpenStreetMapX)),<span class="pl-s"><span class="pl-pds">"</span>..<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>reno_east3.osm<span class="pl-pds">"</span></span>)
m <span class="pl-k">=</span>  <span class="pl-c1">get_map_data</span>(pth,use_cache <span class="pl-k">=</span> <span class="pl-c1">false</span>);
<span class="pl-k">import</span> Random
Random<span class="pl-k">.</span><span class="pl-c1">seed!</span>(<span class="pl-c1">0</span>);
pointA <span class="pl-k">=</span> <span class="pl-c1">point_to_nodes</span>(<span class="pl-c1">generate_point_in_bounds</span>(m), m)
pointB <span class="pl-k">=</span> <span class="pl-c1">point_to_nodes</span>(<span class="pl-c1">generate_point_in_bounds</span>(m), m)
sr <span class="pl-k">=</span> <span class="pl-c1">shortest_route</span>(m, pointA, pointB)[<span class="pl-c1">1</span>]</pre></div>
<p>Once the map data is in the memory we can start plotting. Let us start with <code>Plots.jl</code> with a <code>GR</code> back-end (this is the recommended approach due to GR's plotting speed, however due to Julia compiling process <em>time-to-the-first-plot</em> is around one minute, while subsequent plots can be created within few seconds).</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using OpenStreetMapXPlot
import Plots
Plots.gr()
p = OpenStreetMapXPlot.plotmap(m,width=600,height=400);
addroute!(p,m,sr;route_color=&quot;red&quot;);
plot_nodes!(p,m,[sr[1],sr[end]],start_numbering_from=nothing,fontsize=13,color=&quot;pink&quot;);
p
"><pre><span class="pl-k">using</span> OpenStreetMapXPlot
<span class="pl-k">import</span> Plots
Plots<span class="pl-k">.</span><span class="pl-c1">gr</span>()
p <span class="pl-k">=</span> OpenStreetMapXPlot<span class="pl-k">.</span><span class="pl-c1">plotmap</span>(m,width<span class="pl-k">=</span><span class="pl-c1">600</span>,height<span class="pl-k">=</span><span class="pl-c1">400</span>);
<span class="pl-c1">addroute!</span>(p,m,sr;route_color<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>red<span class="pl-pds">"</span></span>);
<span class="pl-c1">plot_nodes!</span>(p,m,[sr[<span class="pl-c1">1</span>],sr[<span class="pl-c1">end</span>]],start_numbering_from<span class="pl-k">=</span><span class="pl-c1">nothing</span>,fontsize<span class="pl-k">=</span><span class="pl-c1">13</span>,color<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>pink<span class="pl-pds">"</span></span>);
p</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="plot_image.png"><img src="plot_image.png" alt="" style="max-width:100%;"></a></p>
<p>Now, let us paint the same route using the plain <code>PyPlot.jl</code> back-end.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using OpenStreetMapXPlot
import PyPlot
p=OpenStreetMapXPlot.plotmap(m,width=600,height=400,use_plain_pyplot=true);
addroute!(p,m,sr;route_color=&quot;red&quot;);
plot_nodes!(p,m,[sr[1],sr[end]],start_numbering_from=nothing,fontsize=13,color=&quot;pink&quot;);
"><pre><span class="pl-k">using</span> OpenStreetMapXPlot
<span class="pl-k">import</span> PyPlot
p<span class="pl-k">=</span>OpenStreetMapXPlot<span class="pl-k">.</span><span class="pl-c1">plotmap</span>(m,width<span class="pl-k">=</span><span class="pl-c1">600</span>,height<span class="pl-k">=</span><span class="pl-c1">400</span>,use_plain_pyplot<span class="pl-k">=</span><span class="pl-c1">true</span>);
<span class="pl-c1">addroute!</span>(p,m,sr;route_color<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>red<span class="pl-pds">"</span></span>);
<span class="pl-c1">plot_nodes!</span>(p,m,[sr[<span class="pl-c1">1</span>],sr[<span class="pl-c1">end</span>]],start_numbering_from<span class="pl-k">=</span><span class="pl-c1">nothing</span>,fontsize<span class="pl-k">=</span><span class="pl-c1">13</span>,color<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>pink<span class="pl-pds">"</span></span>);</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="plot_image_pyplot.png"><img src="plot_image_pyplot.png" alt="" style="max-width:100%;"></a></p>
<p>Note that when using <code>PyPlot.jl</code> in Atom, depending on your configuration you might need to add <code>PyPlot.display_figs()</code> to actually see the figure</p>
<h4><a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Acknowledgments</h4>
<p><sup>This code is a major re-write of plotting functionality of <a href="https://github.com/tedsteiner/OpenStreetMap.jl">https://github.com/tedsteiner/OpenStreetMap.jl</a> project.
The creation of this source code was partially financed by research project supported by the Ontario Centres of Excellence ("OCE") under Voucher for Innovation and Productivity (VIP) program, OCE Project Number: 30293, project name: "Agent-based simulation modelling of out-of-home advertising viewing opportunity conducted in cooperation with Environics Analytics of Toronto, Canada. </sup></p>
</article></div>