<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-plutosliderserverjl" class="anchor" aria-hidden="true" href="#plutosliderserverjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PlutoSliderServer.jl</h1>
<blockquote>
<p dir="auto"><em><strong>not just sliders!</strong></em></p>
</blockquote>
<p dir="auto">Web server to run just the @bind parts of a <a href="https://github.com/fonsp/Pluto.jl">Pluto.jl</a> notebook.</p>
<p dir="auto">See it in action at <a href="https://computationalthinking.mit.edu/" rel="nofollow">computationalthinking.mit.edu</a>! Sliders, buttons and camera inputs work <em>instantly</em>, without having to wait for a Julia process. Plutoplutopluto</p>
<p dir="auto"><a href="https://www.jsdelivr.com/package/gh/fonsp/Pluto.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/eb3ae3ee7cead8b5a6e9b060be659cbca5588220490265eed5da33e74dbc938d/68747470733a2f2f646174612e6a7364656c6976722e636f6d2f76312f7061636b6167652f67682f666f6e73702f506c75746f2e6a6c2f6261646765" alt="" data-canonical-src="https://data.jsdelivr.com/v1/package/gh/fonsp/Pluto.jl/badge" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-try-it-out" class="anchor" aria-hidden="true" href="#try-it-out"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Try it out</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using PlutoSliderServer
path_to_notebook = download(&quot;https://raw.githubusercontent.com/fonsp/Pluto.jl/v0.17.2/sample/Interactivity.jl&quot;) # fill in your own notebook path here!

PlutoSliderServer.run_notebook(path_to_notebook)"><pre><span class="pl-k">using</span> PlutoSliderServer
path_to_notebook <span class="pl-k">=</span> <span class="pl-c1">download</span>(<span class="pl-s"><span class="pl-pds">"</span>https://raw.githubusercontent.com/fonsp/Pluto.jl/v0.17.2/sample/Interactivity.jl<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> fill in your own notebook path here!</span>

PlutoSliderServer<span class="pl-k">.</span><span class="pl-c1">run_notebook</span>(path_to_notebook)</pre></div>
<p dir="auto">Now open a browser, and go to the address printed in your terminal!</p>
<h1 dir="auto"><a id="user-content-what-can-it-do" class="anchor" aria-hidden="true" href="#what-can-it-do"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>What can it do?</h1>
<h2 dir="auto"><a id="user-content-1-html-export" class="anchor" aria-hidden="true" href="#1-html-export"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>1. HTML export</h2>
<p dir="auto">PlutoSliderServer can <strong>run a notebook</strong> and generate the <strong>export HTML</strong> file. This will give you the same file as the export button inside Pluto (top right), but automatically, without opening a browser.</p>
<p dir="auto">One use case is to automatically create a <strong>GitHub Pages site from a repository with notebooks</strong>. For this, take a look at <a href="https://github.com/JuliaPluto/static-export-template">our template repository</a> that used GitHub Actions and PlutoSliderServer to generate a website on every commit.</p>
<h3 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="PlutoSliderServer.export_notebook(&quot;path/to/notebook.jl&quot;)
# will create a file `path/to/notebook.html`"><pre>PlutoSliderServer<span class="pl-k">.</span><span class="pl-c1">export_notebook</span>(<span class="pl-s"><span class="pl-pds">"</span>path/to/notebook.jl<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> will create a file `path/to/notebook.html`</span></pre></div>
<h2 dir="auto"><a id="user-content-2-run-a-slider-server" class="anchor" aria-hidden="true" href="#2-run-a-slider-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>2. Run a slider server</h2>
<p dir="auto">The main functionality of PlutoSliderServer is to run a <em><strong>slider server</strong></em>. This is a web server that <strong>runs a notebook using Pluto</strong>, and allows visitors to <strong>change the values of <code>@bind</code>-ed variables</strong>.</p>
<p dir="auto">The important <strong>differences</strong> between running a <em>slider server</em> and running Pluto with public access are:</p>
<ul dir="auto">
<li>A <em>slider server</em> can only set <code>@bind</code> values, it is not possible to change the notebook's code.</li>
<li>A <em>slider server</em> is <strong>stateless</strong>: it does not keep track of user sessions. Every request to a slider server is an isolated HTTP <code>GET</code> request, while Pluto maintains a WebSocket connection.</li>
<li>Pluto synchronizes everything between all connected clients in realtime. The <em>slider server</em> does the opposite: all 'clients' are <strong>disconnected</strong>, they don't see the <code>@bind</code> values or state of others.</li>
</ul>
<blockquote>
<p dir="auto"><strong>To learn more, watch the <a href="https://www.youtube.com/watch?v=QZ3xlKm92tk" rel="nofollow">PlutoCon 2020 presentation about how PlutoSliderServer works</a></strong>.</p>
</blockquote>
<h3 dir="auto"><a id="user-content-example-1" class="anchor" aria-hidden="true" href="#example-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="PlutoSliderServer.run_notebook(&quot;path/to/notebook.jl&quot;)
# will create a file `path/to/notebook.html`"><pre>PlutoSliderServer<span class="pl-k">.</span><span class="pl-c1">run_notebook</span>(<span class="pl-s"><span class="pl-pds">"</span>path/to/notebook.jl<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> will create a file `path/to/notebook.html`</span></pre></div>
<h2 dir="auto"><a id="user-content-3-wip-precomputed-slider-server" class="anchor" aria-hidden="true" href="#3-wip-precomputed-slider-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>3. <em>(WIP): Precomputed slider server</em></h2>
<p dir="auto">Many input elements only have a finite number of possible values, for example, <code>PlutoUI.Slider(5:15)</code> can only have 11 values. For finite inputs like the slider, PlutoSliderServer can run the slider server <strong>in advance</strong>, and precompute the results to all possible inputs (in other words: precompute the response to all possible requests).</p>
<p dir="auto">This will generate a directory of subdirectories and files, each corresponding to a possible request. You can host this directory along with the generated HTML file (e.g. on GitHub pages), and Pluto will be able to use these pregenerated files as if they are a slider server! <strong>You can get the interactivity of a slider server, without running a Julia server!</strong></p>
<h4 dir="auto"><a id="user-content-combinatorial-explosion" class="anchor" aria-hidden="true" href="#combinatorial-explosion"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Combinatorial explosion</h4>
<p dir="auto">We use the <em>bond connections graph</em> to understand which bound variables are co-dependent, and which are disconnected. For all groups of co-dependent variables, we precompute all possible combinations of their values. This allows us to <strong>tame the 'combinatorial explosion'</strong> that you would get when considering all possible combinations of all bound variables! If two variables are 'disconnected', then we don't need to consider possible <em>combinations</em> between them.</p>
<blockquote>
<p dir="auto">This part is still work-in-progress: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1036413052" data-permission-text="Title is private" data-url="https://github.com/JuliaPluto/PlutoSliderServer.jl/issues/29" data-hovercard-type="pull_request" data-hovercard-url="/JuliaPluto/PlutoSliderServer.jl/pull/29/hovercard" href="https://github.com/JuliaPluto/PlutoSliderServer.jl/pull/29">#29</a></p>
</blockquote>
<h2 dir="auto"><a id="user-content-directories" class="anchor" aria-hidden="true" href="#directories"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Directories</h2>
<p dir="auto">All of the functionality above can also be used on all notebooks in a directory. PlutoSliderServer will scan a directory recursively for notebook files.</p>
<p dir="auto">See <code>PlutoSliderServer.export_directory</code> and <code>PlutoSliderServer.run_directory</code>.</p>
<h3 dir="auto"><a id="user-content-watching-a-directory" class="anchor" aria-hidden="true" href="#watching-a-directory"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Watching a directory</h3>
<p dir="auto">After scanning a directory for notebook files, you can ask Pluto to continue watching the directory for changes. When notebook files are added/removed, they are also added/removed from the server. When a notebook file changes, the notebook session is restarted.</p>
<p dir="auto">This works especially well when this directory is a git-tracked directory. When running in a git directory, PlutoSliderServer can keep <code>git pull</code>ing the directory, updating from the repository automatically.</p>
<p dir="auto">See the <code>SliderServer_watch_dir</code> option and <code>PlutoSliderServer.run_git_directory</code>.</p>
<h4 dir="auto"><a id="user-content-continuous-deployment" class="anchor" aria-hidden="true" href="#continuous-deployment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Continuous Deployment</h4>
<p dir="auto">The result is a <em>Continuous Deployment</em> setup: you can set up your PlutoSliderServer on a dedicated server running online, synced with your repository on github. You can then update the repository, and the PlutoSliderServer will update automatically.</p>
<p dir="auto">The alternative is to redeploy the entire server every time a notebook changes. We found that this setup works fairly well, but causes long downtimes whenever a notebook changes, because all notebooks need to re-run. This can be a problem if your project consists of many notebooks, and they change frequently.</p>
<p dir="auto">See <code>PlutoSliderServer.run_git_directory</code>.</p>
<h1 dir="auto"><a id="user-content-how-does-it-work" class="anchor" aria-hidden="true" href="#how-does-it-work"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How does it work?</h1>
<blockquote>
<p dir="auto"><a href="https://www.youtube.com/watch?v=QZ3xlKm92tk" rel="nofollow">PlutoCon 2020 presentation about how PlutoSliderServer works</a></p>
</blockquote>
<h2 dir="auto"><a id="user-content-bond-connections-graph" class="anchor" aria-hidden="true" href="#bond-connections-graph"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bond connections graph</h2>
<p dir="auto">A crucial idea in the PlutoSliderServer is the <em>bond connections graph</em>. This is a bit of a mathematical adventure, I tried my best to explain it <strong>in the <a href="https://www.youtube.com/watch?v=QZ3xlKm92tk" rel="nofollow">PlutoCon 2020 presentation about how PlutoSliderServer works</a></strong>. Here is another explanation in text:</p>
<h3 dir="auto"><a id="user-content-example-notebook" class="anchor" aria-hidden="true" href="#example-notebook"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example notebook</h3>
<p dir="auto">Let's take a look at this simple notebook:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@bind x Slider(1:10)

@bind y Slider(1:5)

x + y

@bind z Slider(1:100)

&quot;Hello $(z)!&quot;"><pre><span class="pl-c1">@bind</span> x <span class="pl-c1">Slider</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>)

<span class="pl-c1">@bind</span> y <span class="pl-c1">Slider</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>)

x <span class="pl-k">+</span> y

<span class="pl-c1">@bind</span> z <span class="pl-c1">Slider</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>)

<span class="pl-s"><span class="pl-pds">"</span>Hello <span class="pl-v">$(z)</span>!<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">We have three <strong>bound variables</strong>: <code>x</code>, <code>y</code> and <code>z</code>. When analyzed by Pluto, we find the dependecies between cells: <code>1 -&gt; 3</code>, <code>2 -&gt; 3</code>, <code>4 -&gt; 5</code>. This means that, as a graph, the last two cells are completely disconnected from the rest of the graph. Our <em>bond connections graph</em> will capture this idea.</p>
<h3 dir="auto"><a id="user-content-procedure" class="anchor" aria-hidden="true" href="#procedure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Procedure</h3>
<p dir="auto">For each bound variable, we use Pluto's reactivity graph to know:</p>
<ol dir="auto">
<li>Which cells depend on the bound variable?</li>
<li>Which bound variables are (indirect) dependencies of any cell from (1)? These are called the co-dependencies of the bound variable.</li>
</ol>
<p dir="auto">In our example, <code>x</code> influences the result of <code>x + y</code>, which depends on <code>y</code>. So <code>x</code> and <code>y</code> are the co-dependencies of <code>x</code>. Variable <code>z</code> influences <code>"Hello $(z)!"</code>, which is does not have <code>x</code> or <code>y</code> as dependencies. So <code>z</code> is <em>not</em> codependent with <code>x</code> or with <code>y</code>.</p>
<p dir="auto">This forms a dictionary, which looks like:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Dict(
    :x =&gt; [:x, :y],
    :y =&gt; [:x, :y],
    :z =&gt; [:z],
)"><pre><span class="pl-c1">Dict</span>(
    <span class="pl-c1">:x</span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">:x</span>, <span class="pl-c1">:y</span>],
    <span class="pl-c1">:y</span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">:x</span>, <span class="pl-c1">:y</span>],
    <span class="pl-c1">:z</span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">:z</span>],
)</pre></div>
<p dir="auto">For more examples, take a look at <a href="https://github.com/JuliaPluto/PlutoSliderServer.jl/blob/v0.2.6/test/parallelpaths4.jl">this notebook</a>, which has <a href="https://github.com/JuliaPluto/PlutoSliderServer.jl/blob/v0.2.6/test/connections.jl#L28-L43">this bond connection graph</a>.</p>
<h3 dir="auto"><a id="user-content-application-in-the-slider-server" class="anchor" aria-hidden="true" href="#application-in-the-slider-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Application in the slider server</h3>
<p dir="auto">Now, whenever you send the value of a bound variable <code>x</code> to the slider server, you <em>also have to send the values of the co-dependencies of <code>x</code></em>, which are <code>x</code> and <code>y</code> in our example. By sending both, you are sending all the information that is needed to fully determine the dependent cells.</p>
<h3 dir="auto"><a id="user-content-application-in-the-precomputed-slider-server" class="anchor" aria-hidden="true" href="#application-in-the-precomputed-slider-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Application in the precomputed slider server</h3>
<p dir="auto">Like the regular slider server, we use the <em>bond connections graph</em>, which tells us which bound variables are co-dependent. This allows us to <strong>tame the 'combinatorical explosion'</strong> that you would get when considering all possible combinations of all bound variables! If two variables are 'disconnected', then we don't need to consider possible <em>combinations</em> between them.</p>
<p dir="auto">In our example notebook, there are <code>10 (x) * 5 (y)  +  100 (z) = 150</code> combinations to precompute. Without considering the connections graph, there would be <code>10 (x) * 5 (y) * 100 (z) = 5000</code> possible combinations.</p>
<h1 dir="auto"><a id="user-content-how-to-use-this-package" class="anchor" aria-hidden="true" href="#how-to-use-this-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to use this package</h1>
<p dir="auto">As PlutoSliderServer embeds so much functionality, it may be confusing to figure out how to approach your setting. Here is an overview of our most important functions:</p>
<ul dir="auto">
<li><code>export_directory</code> will find all notebooks in a directory, run them, and generate HTML files. <em>(<code>export_notebook</code> for a single file.)</em> One example use case is <a href="https://github.com/JuliaPluto/static-export-template">https://github.com/JuliaPluto/static-export-template</a></li>
<li><code>run_directory</code> does the same as <code>export_directory</code>, but it <strong>keeps the notebooks running</strong> and runs the slider server! It will also watch the given directory for changes to notebook files, and automatically update the slider server. <em>(<code>run_notebook</code> for a single file.)</em></li>
<li><code>run_git_directory</code> does the same as <code>run_directory</code>, but it will keep running <code>git pull</code> in the given directory. Any changes will get picked up by our directory watching!</li>
</ul>
<h2 dir="auto"><a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Configuration</h2>
<p dir="auto">PlutoSliderServer is very configurable, and we use <a href="https://github.com/Roger-luo/Configurations.jl">Configurations.jl</a> to configure the server. We try our best to be smart about the default settings, and we hope that most users do not need to configure anything.</p>
<p dir="auto">There are two ways to change configurations: using keywords arguments, and using a <code>PlutoDeployment.toml</code> file.</p>
<h3 dir="auto"><a id="user-content-1-keyword-arguments" class="anchor" aria-hidden="true" href="#1-keyword-arguments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>1. Keyword arguments</h3>
<p dir="auto">Our functions can take keyword arguments, for example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="run_directory(&quot;my_notebooks&quot;;
    SliderServer_port=8080,
    SliderServer_host=&quot;0.0.0.0&quot;,
    Export_baked_notebookfile=false,
)"><pre><span class="pl-c1">run_directory</span>(<span class="pl-s"><span class="pl-pds">"</span>my_notebooks<span class="pl-pds">"</span></span>;
    SliderServer_port<span class="pl-k">=</span><span class="pl-c1">8080</span>,
    SliderServer_host<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>0.0.0.0<span class="pl-pds">"</span></span>,
    Export_baked_notebookfile<span class="pl-k">=</span><span class="pl-c1">false</span>,
)</pre></div>
<blockquote>
<p dir="auto"><g-emoji class="g-emoji" alias="star2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png">🌟</g-emoji> For the full list of options, see the documentation for the function you are using. For example, in the Julia REPL, run <code>?run_directory</code>.</p>
</blockquote>
<h3 dir="auto"><a id="user-content-2-plutodeploymenttoml" class="anchor" aria-hidden="true" href="#2-plutodeploymenttoml"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>2. <code>PlutoDeployment.toml</code></h3>
<p dir="auto">If you are using a package environment for your slider server (if you are deploying it on a server, you probably should), then you can also use a TOML file to configure PlutoSliderServer.</p>
<p dir="auto">In the same folder where you have your <code>Project.toml</code> and <code>Manifest.toml</code> files, create a third file, called <code>PlutoDeployment.toml</code>. Its contents should look something like:</p>
<div class="highlight highlight-source-toml notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="[Export]
baked_notebookfile = true

[SliderServer]
port = 8080
host = &quot;0.0.0.0&quot;

# You can also set Pluto's configuration here:
[Pluto]
[Pluto.compiler]
threads = 2
# See documentation for `Pluto.Configuration` for the full list of options. You need specify the categories within `Pluto.Configuration.Options` (`compiler`, `evaluation`, etc)."><pre>[<span class="pl-en">Export</span>]
<span class="pl-smi">baked_notebookfile</span> = <span class="pl-c1">true</span>

[<span class="pl-en">SliderServer</span>]
<span class="pl-smi">port</span> = <span class="pl-c1">8080</span>
<span class="pl-smi">host</span> = <span class="pl-s"><span class="pl-pds">"</span>0.0.0.0<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> You can also set Pluto's configuration here:</span>
[<span class="pl-en">Pluto</span>]
[<span class="pl-en">Pluto</span>.<span class="pl-en">compiler</span>]
<span class="pl-smi">threads</span> = <span class="pl-c1">2</span>
<span class="pl-c"><span class="pl-c">#</span> See documentation for `Pluto.Configuration` for the full list of options. You need specify the categories within `Pluto.Configuration.Options` (`compiler`, `evaluation`, etc).</span></pre></div>
<blockquote>
<p dir="auto"><g-emoji class="g-emoji" alias="star2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png">🌟</g-emoji> For the full list of options, run <code>PlutoSliderServer.show_sample_config_toml_file()</code>.</p>
</blockquote>
<p dir="auto">Our functions will look for the existance of a file called <code>PlutoDeployment.toml</code> in the active package environment, and use it automatically.</p>
<p dir="auto">You can also combine the two configuration methods: keyword options and toml options will be merged, the former taking precedence.</p>
<h1 dir="auto"><a id="user-content-sample-setup-given-a-repository-start-a-plutosliderserver-to-serve-static-exports-with-live-preview" class="anchor" aria-hidden="true" href="#sample-setup-given-a-repository-start-a-plutosliderserver-to-serve-static-exports-with-live-preview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Sample setup: Given a repository, start a PlutoSliderServer to serve static exports with live preview</h1>
<p dir="auto">These instructions set up a slider server on a dedicated server, which automatically synchronises with a git repository, containing the notebook files. Make sure to create one before we start.</p>
<blockquote>
<p dir="auto"><em>Disclaimer: This is work in progress, there might be holes!</em></p>
</blockquote>
<h2 dir="auto"><a id="user-content-part-1-setup-and-running-locally" class="anchor" aria-hidden="true" href="#part-1-setup-and-running-locally"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Part 1: setup and running locally</h2>
<h3 dir="auto"><a id="user-content-1-initialize" class="anchor" aria-hidden="true" href="#1-initialize"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>1. Initialize</h3>
<p dir="auto">Create a folder called <code>pluto-slider-server-environment</code> with the <code>Project.toml</code> and <code>Manifest.toml</code> for the <code>PlutoSliderServer</code>: (Not the notebooks - the notebooks should contain their own package environment.)</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ cd &lt;your-repository-with-notebooks&gt;
$ mkdir pluto-slider-server-environment
$ julia --project=pluto-slider-server-environment
julia&gt; ]
pkg&gt; add Pluto PlutoSliderServer"><pre>$ <span class="pl-c1">cd</span> <span class="pl-k">&lt;</span>your-repository-with-notebooks<span class="pl-k">&gt;</span>
$ mkdir pluto-slider-server-environment
$ julia --project=pluto-slider-server-environment
julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> add Pluto PlutoSliderServer</pre></div>
<h3 dir="auto"><a id="user-content-2-configuration-file" class="anchor" aria-hidden="true" href="#2-configuration-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>2. Configuration file</h3>
<p dir="auto">Create a configuration file in the same folder as <code>Project.toml</code>, see the section about <code>PlutoDeployment.toml</code> above.</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="TEMPFILE=$(mktemp)
cat &gt; $TEMPFILE &lt;&lt; __EOF__
[SliderServer]
port = 8080
host = &quot;0.0.0.0&quot;

# more configuration can go here!
__EOF__

sudo mv $TEMPFILE pluto-slider-server-environment/PlutoDeployment.toml"><pre>TEMPFILE=<span class="pl-s"><span class="pl-pds">$(</span>mktemp<span class="pl-pds">)</span></span>
cat <span class="pl-k">&gt;</span> <span class="pl-smi">$TEMPFILE</span> <span class="pl-s"><span class="pl-k">&lt;&lt;</span> <span class="pl-k">__EOF__</span></span>
<span class="pl-s">[SliderServer]</span>
<span class="pl-s">port = 8080</span>
<span class="pl-s">host = "0.0.0.0"</span>
<span class="pl-s"></span>
<span class="pl-s"># more configuration can go here!</span>
<span class="pl-s"><span class="pl-k">__EOF__</span></span>

sudo mv <span class="pl-smi">$TEMPFILE</span> pluto-slider-server-environment/PlutoDeployment.toml</pre></div>
<p dir="auto">This configuration sets the port to <code>8080</code> (not <code>80</code>, this requires sudo), and the host to <code>"0.0.0.0"</code> (which allows traffic from outside the computer, unlike the default <code>"127.0.0.1"</code>).</p>
<h3 dir="auto"><a id="user-content-3-run-it" class="anchor" aria-hidden="true" href="#3-run-it"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>3. Run it</h3>
<p dir="auto">Let's try running it locally before setting up our server:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia --project=&quot;pluto-slider-server-environment&quot; -e &quot;import PlutoSliderServer; PlutoSliderServer.run_git_directory(\&quot;.\&quot;)&quot;"><pre>julia --project=<span class="pl-s"><span class="pl-pds">"</span>pluto-slider-server-environment<span class="pl-pds">"</span></span> -e <span class="pl-s"><span class="pl-pds">"</span>import PlutoSliderServer; PlutoSliderServer.run_git_directory(<span class="pl-cce">\"</span>.<span class="pl-cce">\"</span>)<span class="pl-pds">"</span></span></pre></div>
<p dir="auto"><code>run_git_directory</code> will periodically call <code>git pull</code>, which requires the <code>start_dir</code> to be a repository in which you can <code>git pull</code> without password (which means it's either public, or you have the required keys in <code>~/.ssh/</code> and your git's provider security page!)</p>
<blockquote>
<p dir="auto"><span class="color-fg-accent"><svg class="octicon octicon-info mr-2" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path></svg>Note</span>
Julia by default uses <code>libgit2</code> for git operations, <a href="https://github.com/JuliaLang/Pkg.jl/issues/2679" data-hovercard-type="issue" data-hovercard-url="/JuliaLang/Pkg.jl/issues/2679/hovercard">which can be problematic</a>. It is also known to cause issues  in cloud environments like AWS's CodeCommit
where re-authentication is required at regular intervals.</p>
<p dir="auto">A simple workaround is to set the <code>JULIA_PKG_USE_CLI_GIT</code> environment variable to <code>true</code>, which will fallback to the system git (the one on the shell).
Make sure that this is installed! (<code>sudo apt-get install git</code> does the trick in Ubuntu).</p>
</blockquote>
<p dir="auto">Also note that <code>git pull</code> may fail on the server if you force push the branch from your laptop, so handle history-rewriting commands, like <code>git push -f</code>, <code>git rebase</code> etc with care!</p>
<h2 dir="auto"><a id="user-content-part-2-setting-up-the-web-server" class="anchor" aria-hidden="true" href="#part-2-setting-up-the-web-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Part 2: setting up the web server</h2>
<p dir="auto">For this step, we'll assume a very specific but also common setup:</p>
<ul dir="auto">
<li>Ubuntu-based server with <code>apt-get</code>, <code>git</code>, <code>vim</code> and internet</li>
<li>access through SSH</li>
<li>root access</li>
<li>port 80 is open to the web</li>
</ul>
<p dir="auto">The easiest way to get this is to <strong>rent a server</strong> from digitalocean.com, AWS, Google Cloud, etc. This setup was tested with digitalocean.com, which has the easiest interface for beginners.</p>
<blockquote>
<h3 dir="auto"><a id="user-content-required-memory-disk-space-cpu-power" class="anchor" aria-hidden="true" href="#required-memory-disk-space-cpu-power"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Required memory, disk space, CPU power</h3>
<p dir="auto">When renting a server, you need to decide which "droplet size" you want. The bottleneck is memory – CPU power and disk space will always be sufficient. As minimum, you need <code>500MB + 300MB * length(notebooks)</code>. But if you use large packages, like Plots or DifferentialEquations, a notebook might need 1000MB memory.</p>
<p dir="auto">There is no minimum requirement on CPU power, but it does have a big impact on <em>launch time</em> and <em>responsiveness</em>. We found that DigitalOcean "dedicated CPU" is noticably faster (more than 2x) in both areas than "shared CPU".</p>
<p dir="auto">It is really important to make sure that you will be able to <strong>resize your server later</strong>, adding/removing memory as needed, to minimize your costs. For DigitalOcean, we have a specific tip: <em>always <strong>start</strong> with the smallest possible droplet (512MB or 1000MB), and then resize memory/CPU to fit your needs, without resizing the disk</em>. When resizing, DigitalOcean does not allow <em>shrinking</em> the disk size.</p>
</blockquote>
<h3 dir="auto"><a id="user-content-0-update-packages" class="anchor" aria-hidden="true" href="#0-update-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>0. Update packages</h3>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="sudo apt-get update
sudo apt-get upgrade"><pre>sudo apt-get update
sudo apt-get upgrade</pre></div>
<p dir="auto">You should run <code>systemd --version</code> to verify that we have version 230 or higher.</p>
<h3 dir="auto"><a id="user-content-1-install-julia-run-as-root" class="anchor" aria-hidden="true" href="#1-install-julia-run-as-root"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>1. Install Julia (run as root)</h3>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# You can edit me: The Julia version (1.8.0) split into three parts:
JULIA_MAJOR_VERSION=1
JULIA_MINOR_VERSION=8
JULIA_PATCH_VERSION=0

JULIA_VERSION=&quot;$(echo $JULIA_MAJOR_VERSION).$(echo $JULIA_MINOR_VERSION).$(echo $JULIA_PATCH_VERSION)&quot;

wget https://julialang-s3.julialang.org/bin/linux/x64/$(echo $JULIA_MAJOR_VERSION).$(echo $JULIA_MINOR_VERSION)/julia-$(echo $JULIA_VERSION)-linux-x86_64.tar.gz
tar -xvzf julia-$JULIA_VERSION-linux-x86_64.tar.gz
rm julia-$JULIA_VERSION-linux-x86_64.tar.gz
sudo ln -s `pwd`/julia-$JULIA_VERSION/bin/julia /usr/local/bin/julia"><pre><span class="pl-c"><span class="pl-c">#</span> You can edit me: The Julia version (1.8.0) split into three parts:</span>
JULIA_MAJOR_VERSION=1
JULIA_MINOR_VERSION=8
JULIA_PATCH_VERSION=0

JULIA_VERSION=<span class="pl-s"><span class="pl-pds">"</span><span class="pl-s"><span class="pl-pds">$(</span>echo <span class="pl-smi">$JULIA_MAJOR_VERSION</span><span class="pl-pds">)</span></span>.<span class="pl-s"><span class="pl-pds">$(</span>echo <span class="pl-smi">$JULIA_MINOR_VERSION</span><span class="pl-pds">)</span></span>.<span class="pl-s"><span class="pl-pds">$(</span>echo <span class="pl-smi">$JULIA_PATCH_VERSION</span><span class="pl-pds">)</span></span><span class="pl-pds">"</span></span>

wget https://julialang-s3.julialang.org/bin/linux/x64/<span class="pl-s"><span class="pl-pds">$(</span>echo <span class="pl-smi">$JULIA_MAJOR_VERSION</span><span class="pl-pds">)</span></span>.<span class="pl-s"><span class="pl-pds">$(</span>echo <span class="pl-smi">$JULIA_MINOR_VERSION</span><span class="pl-pds">)</span></span>/julia-<span class="pl-s"><span class="pl-pds">$(</span>echo <span class="pl-smi">$JULIA_VERSION</span><span class="pl-pds">)</span></span>-linux-x86_64.tar.gz
tar -xvzf julia-<span class="pl-smi">$JULIA_VERSION</span>-linux-x86_64.tar.gz
rm julia-<span class="pl-smi">$JULIA_VERSION</span>-linux-x86_64.tar.gz
sudo ln -s <span class="pl-s"><span class="pl-pds">`</span>pwd<span class="pl-pds">`</span></span>/julia-<span class="pl-smi">$JULIA_VERSION</span>/bin/julia /usr/local/bin/julia</pre></div>
<h3 dir="auto"><a id="user-content-2-get-your-repository" class="anchor" aria-hidden="true" href="#2-get-your-repository"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>2. get your repository</h3>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/&lt;user&gt;/&lt;repo-with-notebooks&gt;
cd &lt;repo-with-notebooks&gt;
git pull"><pre>git clone https://github.com/<span class="pl-k">&lt;</span>user<span class="pl-k">&gt;</span>/<span class="pl-k">&lt;</span>repo-with-notebooks<span class="pl-k">&gt;</span>
<span class="pl-c1">cd</span> <span class="pl-k">&lt;</span>repo-with-notebooks<span class="pl-k">&gt;</span>
git pull</pre></div>
<h3 dir="auto"><a id="user-content-3-create-a-service" class="anchor" aria-hidden="true" href="#3-create-a-service"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>3. Create a service</h3>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="TEMPFILE=$(mktemp)
cat &gt; $TEMPFILE &lt;&lt; __EOF__
[Unit]
After=network.service

StartLimitIntervalSec=500
StartLimitBurst=5

[Service]
ExecStart=/usr/local/bin/pluto-slider-server.sh
Restart=always
RestartSec=5
User=$(whoami)
Group=$(id -gn)

[Install]
WantedBy=default.target
__EOF__

sudo mv $TEMPFILE /etc/systemd/system/pluto-server.service"><pre>TEMPFILE=<span class="pl-s"><span class="pl-pds">$(</span>mktemp<span class="pl-pds">)</span></span>
cat <span class="pl-k">&gt;</span> <span class="pl-smi">$TEMPFILE</span> <span class="pl-s"><span class="pl-k">&lt;&lt;</span> <span class="pl-k">__EOF__</span></span>
<span class="pl-s">[Unit]</span>
<span class="pl-s">After=network.service</span>
<span class="pl-s"></span>
<span class="pl-s">StartLimitIntervalSec=500</span>
<span class="pl-s">StartLimitBurst=5</span>
<span class="pl-s"></span>
<span class="pl-s">[Service]</span>
<span class="pl-s">ExecStart=/usr/local/bin/pluto-slider-server.sh</span>
<span class="pl-s">Restart=always</span>
<span class="pl-s">RestartSec=5</span>
<span class="pl-s">User=<span class="pl-s"><span class="pl-pds">$(</span>whoami<span class="pl-pds">)</span></span></span>
<span class="pl-s">Group=<span class="pl-s"><span class="pl-pds">$(</span>id -gn<span class="pl-pds">)</span></span></span>
<span class="pl-s"></span>
<span class="pl-s">[Install]</span>
<span class="pl-s">WantedBy=default.target</span>
<span class="pl-s"><span class="pl-k">__EOF__</span></span>

sudo mv <span class="pl-smi">$TEMPFILE</span> /etc/systemd/system/pluto-server.service</pre></div>
<p dir="auto">This script uses <code>whoami</code> and <code>id -gn</code> to automatically insert your username an group name into the configuration file. We want to run the PlutoSliderServer as your user, not as root.</p>
<h3 dir="auto"><a id="user-content-4-create-the-startup-script" class="anchor" aria-hidden="true" href="#4-create-the-startup-script"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>4. Create the startup script</h3>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="TEMPFILE=$(mktemp)
cat &gt; $TEMPFILE &lt;&lt; __EOF__
#!/bin/bash

# this env var allows us to side step various issues with the Julia-bundled git
export JULIA_PKG_USE_CLI_GIT=true

cd /home/&lt;your-username&gt;/&lt;your-repo&gt;  # Make sure to change to the absolute path to your repository. Don't use ~.
julia --project=&quot;pluto-slider-server-environment&quot; -e &quot;import Pkg; Pkg.instantiate(); import PlutoSliderServer; PlutoSliderServer.run_git_directory(\&quot;.\&quot;)&quot;
__EOF__

sudo mv $TEMPFILE /usr/local/bin/pluto-slider-server.sh"><pre>TEMPFILE=<span class="pl-s"><span class="pl-pds">$(</span>mktemp<span class="pl-pds">)</span></span>
cat <span class="pl-k">&gt;</span> <span class="pl-smi">$TEMPFILE</span> <span class="pl-s"><span class="pl-k">&lt;&lt;</span> <span class="pl-k">__EOF__</span></span>
<span class="pl-s">#!/bin/bash</span>
<span class="pl-s"></span>
<span class="pl-s"># this env var allows us to side step various issues with the Julia-bundled git</span>
<span class="pl-s">export JULIA_PKG_USE_CLI_GIT=true</span>
<span class="pl-s"></span>
<span class="pl-s">cd /home/&lt;your-username&gt;/&lt;your-repo&gt;  # Make sure to change to the absolute path to your repository. Don't use ~.</span>
<span class="pl-s">julia --project="pluto-slider-server-environment" -e "import Pkg; Pkg.instantiate(); import PlutoSliderServer; PlutoSliderServer.run_git_directory(\".\")"</span>
<span class="pl-s"><span class="pl-k">__EOF__</span></span>

sudo mv <span class="pl-smi">$TEMPFILE</span> /usr/local/bin/pluto-slider-server.sh</pre></div>
<h3 dir="auto"><a id="user-content-5-permissions-stuff" class="anchor" aria-hidden="true" href="#5-permissions-stuff"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>5. Permissions stuff</h3>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="sudo chmod 744 /usr/local/bin/pluto-slider-server.sh
sudo chmod 664 /etc/systemd/system/pluto-server.service"><pre>sudo chmod 744 /usr/local/bin/pluto-slider-server.sh
sudo chmod 664 /etc/systemd/system/pluto-server.service</pre></div>
<h3 dir="auto"><a id="user-content-6-start--enable" class="anchor" aria-hidden="true" href="#6-start--enable"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>6. Start &amp; enable</h3>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="sudo systemctl daemon-reload
sudo systemctl start pluto-server
sudo systemctl enable pluto-server"><pre>sudo systemctl daemon-reload
sudo systemctl start pluto-server
sudo systemctl <span class="pl-c1">enable</span> pluto-server</pre></div>
<p dir="auto">Tip: If you need to change the service file or the startup script later, re-run this step to update the daemon.</p>
<h3 dir="auto"><a id="user-content-7-view-logs" class="anchor" aria-hidden="true" href="#7-view-logs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>7. View logs</h3>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# To see quick status (running/failed and memory):
systemctl -l status pluto-server

# To browse past logs:
sudo journalctl --pager-end -u pluto-server

# To see logs coming in live:
sudo journalctl --follow -u pluto-server"><pre><span class="pl-c"><span class="pl-c">#</span> To see quick status (running/failed and memory):</span>
systemctl -l status pluto-server

<span class="pl-c"><span class="pl-c">#</span> To browse past logs:</span>
sudo journalctl --pager-end -u pluto-server

<span class="pl-c"><span class="pl-c">#</span> To see logs coming in live:</span>
sudo journalctl --follow -u pluto-server</pre></div>
<h3 dir="auto"><a id="user-content-8-server-available" class="anchor" aria-hidden="true" href="#8-server-available"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>8. Server available</h3>
<p dir="auto">TODO</p>
<h3 dir="auto"><a id="user-content-9-live-updates" class="anchor" aria-hidden="true" href="#9-live-updates"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>9. Live updates</h3>
<p dir="auto">When you change the notebooks in the git repository, your server will automatically update (it keeps calling <code>git pull</code>)! Awesome!</p>
<p dir="auto">If the configuration file (<code>PlutoDeployment.toml</code>) changes, PlutoSliderServer will detect a change in configuration and shut down. Because we set up our service using <code>systemctl</code>, the server will automatically restart! (With the new settings)</p>
<h2 dir="auto"><a id="user-content-part-3-port-domain-name-https" class="anchor" aria-hidden="true" href="#part-3-port-domain-name-https"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Part 3: port, domain name, https</h2>
<p dir="auto">The default settings will serve Pluto on the IP address of your server, on <code>http</code> (not <code>https</code>), on port 8080 (not 80 or 443).</p>
<p dir="auto">Normally, websites are available on a domain name, on https, on the default port (80 for http, 443 for https) (e.g. <code>https://plutojl.org/</code>). Here's how you get there!</p>
<p dir="auto">If you use a server managed by your university/company, ask your system administrator how to achieve these steps.</p>
<h3 dir="auto"><a id="user-content-1-domain-name" class="anchor" aria-hidden="true" href="#1-domain-name"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>1. Domain name</h3>
<p dir="auto">You need to buy a domain name, and get access to the DNS settings. Set an "A record" that points to your IP address.</p>
<p dir="auto">You can now access your PlutoSliderServer at <code>http://mydomain.org:8080/</code>. Nice!</p>
<h3 dir="auto"><a id="user-content-2-port-80" class="anchor" aria-hidden="true" href="#2-port-80"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>2. Port 80</h3>
<p dir="auto">We don't want everyone to add <code>:8080</code> to the URL! The default port for http is 80, so we want our website to be available at port 80.</p>
<p dir="auto">The tricky thing is: we don't want to run PlutoSliderServer directly on port 80, because this requires <code>sudo</code> privileges for running <code>julia</code>. We want to avoid this because we don't want <code>julia</code> to read/write files as <code>root</code> (this would mess up your git directory).</p>
<p dir="auto">The solution is to run PlutoSliderServer on port 8080, and use a separate server (running as root) to redirect traffic from port 80 to port 8080. We use <code>nginx</code> for that!</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="sudo apt install nginx"><pre>sudo apt install nginx</pre></div>
<p dir="auto">nginx is now installed and it is configured to run at startup.</p>
<p dir="auto">Let's configure nginx as a redirect from port 80 to port 8080.</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="TEMPFILE=$(mktemp)
cat &gt; $TEMPFILE &lt;&lt; __EOF__
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	location / {
		proxy_pass http://localhost:8080;
	}
}
__EOF__

sudo mv $TEMPFILE /etc/nginx/sites-available/default"><pre>TEMPFILE=<span class="pl-s"><span class="pl-pds">$(</span>mktemp<span class="pl-pds">)</span></span>
cat <span class="pl-k">&gt;</span> <span class="pl-smi">$TEMPFILE</span> <span class="pl-s"><span class="pl-k">&lt;&lt;</span> <span class="pl-k">__EOF__</span></span>
<span class="pl-s">server {</span>
<span class="pl-s">	listen 80 default_server;</span>
<span class="pl-s">	listen [::]:80 default_server;</span>
<span class="pl-s"></span>
<span class="pl-s">	location / {</span>
<span class="pl-s">		proxy_pass http://localhost:8080;</span>
<span class="pl-s">	}</span>
<span class="pl-s">}</span>
<span class="pl-s"><span class="pl-k">__EOF__</span></span>

sudo mv <span class="pl-smi">$TEMPFILE</span> /etc/nginx/sites-available/default</pre></div>
<p dir="auto">After changing configuration, restart nginx:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="sudo systemctl restart nginx"><pre>sudo systemctl restart nginx</pre></div>
<h3 dir="auto"><a id="user-content-3-https" class="anchor" aria-hidden="true" href="#3-https"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>3. HTTPS</h3>
<p dir="auto">The easiest way to get https is to use cloudflare. Register an account, set up your domain, use their DNS, and enable the "Always HTTPS" service. (Cloudflare is also very useful for caching! This will make your PlutoSliderServer faster.)</p>
<p dir="auto">Alternatively, you can set up HTTPS yourself with <code>nginx</code> and Let's Encrypt, but this is beyond the scope of this tutorial. <g-emoji class="g-emoji" alias="yellow_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49b.png">💛</g-emoji></p>
<p dir="auto">Now, your service should be available at <code>https://yourdomain.org/</code>. Nice!</p>
<h1 dir="auto"><a id="user-content-similaralternative-packages" class="anchor" aria-hidden="true" href="#similaralternative-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Similar/alternative packages</h1>
<h2 dir="auto"><a id="user-content-generating-html-exports" class="anchor" aria-hidden="true" href="#generating-html-exports"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Generating HTML exports</h2>
<p dir="auto">There are many packages that <em>evaluate literate Julia documents to generate HTML or PDF output</em>!</p>
<p dir="auto">The most similar project is <a href="https://github.com/rikhuijzer/PlutoStaticHTML.jl">PlutoStaticHTML.jl</a>. This package generates <strong>static</strong> HTML files from Pluto notebooks, meaning that they do not require JavaScript to load: cell inputs and outputs are stored directly as HTML. (PlutoSliderServer.jl uses the same technique as the "Export to HTML" button inside Pluto: an HTML file is generated with no contents, but with an embedded data stream containing the <em>editor state</em>. This HTML file loads Pluto's JS assets and displays this state just like the editor would.)</p>
<p dir="auto">This means that the output of PlutoSliderServer.jl will look exactly the same as what you see while writing the notebook. Output from PlutoStaticHTML.jl is more minimal, which means that it loads faster, it can be styled with CSS, and it can more easily be embedded within other web pages (like Documenter.jl sections).</p>
<p dir="auto">Other Julia packages which export to HTML/PDF, but not necessarily with Pluto notebook files as input, include:</p>
<ul dir="auto">
<li>Documenter.jl</li>
<li>Franklin.jl</li>
<li>Books.jl</li>
<li>Weave.jl</li>
</ul>
<h2 dir="auto"><a id="user-content-slider-server" class="anchor" aria-hidden="true" href="#slider-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Slider server</h2>
<p dir="auto">PlutoSliderServer is the only package that lets you run a <em>slider server</em> for Pluto notebooks (an interactive site to interact with a Pluto notebook through <code>@bind</code>).</p>
<p dir="auto">There are alternatives for running a Julia-backed interactive site if your code is <em>not</em> a Pluto notebook, including <a href="https://github.com/SimonDanisch/JSServe.jl">JSServe.jl</a>, <a href="https://github.com/GenieFramework/Stipple.jl">Stipple.jl</a> and <a href="https://github.com/plotly/Dash.jl">Dash.jl</a>, each with their own philosophy and ideal use case. <em>(Feel free to suggest others!)</em></p>
<h2 dir="auto"><a id="user-content-precomputer-slider-server" class="anchor" aria-hidden="true" href="#precomputer-slider-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Precomputer slider server</h2>
<p dir="auto"><a href="https://github.com/rikhuijzer/PlutoStaticHTML.jl">PlutoStaticHTML.jl</a> should also have this feature in the future, after it is added to PlutoSliderServer (it is still <a href="https://github.com/JuliaPluto/PlutoSliderServer.jl/pull/29" data-hovercard-type="pull_request" data-hovercard-url="/JuliaPluto/PlutoSliderServer.jl/pull/29/hovercard">being worked on</a>).</p>
<p dir="auto">If you code is <em>not</em> a Pluto notebook, then <a href="https://github.com/SimonDanisch/JSServe.jl">JSServe.jl</a> also has precomputing abilities, with a different approach and philosophy.</p>
<h1 dir="auto"><a id="user-content-authentication-and-security" class="anchor" aria-hidden="true" href="#authentication-and-security"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Authentication and security</h1>
<p dir="auto">Since this server is a new and experimental concept, we highly recommend that you run it inside an isolated environment. While visitors are not able to change the notebook code, it is possible to manipulate the API to set bound values to arbitrary objects. For example, when your notebook uses <code>@bind x Slider(1:10)</code>, the API could be used to set the <code>x</code> to <code>9000</code>, <code>[10,20,30]</code> or <code>"👻"</code>.</p>
<p dir="auto">In the future, we are planning to implement a hook that allows widgets (such as <code>Slider</code>) to validate a value before it is run: <a href="https://docs.juliahub.com/AbstractPlutoDingetjes/UHbnu/1.1.1/#AbstractPlutoDingetjes.Bonds.validate_value-Tuple%7BAny,%20Any%7D" rel="nofollow"><code>AbstractPlutoDingetjes.Bonds.validate_value</code></a>.</p>
<p dir="auto">Of course, we are not security experts, and this software does not come with any kind of security guarantee. To be completely safe, assume that someone who can visit the server can execute arbitrary code in the notebook, despite our measures to prevent it. Run PlutoSliderServer in a containerized environment.</p>
</article></div>