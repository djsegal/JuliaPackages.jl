<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-dropboxsdk" class="anchor" aria-hidden="true" href="#dropboxsdk"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><a href="https://github.com/eschnett/DropboxSDK.jl">DropboxSDK</a></h1>
<p>A Julia package to access Dropbox via its
<a href="https://www.dropbox.com/developers/documentation/http" rel="nofollow">API</a>. This
package can either be used as library for other packages, or as
command line client <code>dbftp</code>.</p>
<p><a href="https://travis-ci.org/eschnett/DropboxSDK.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7e289527c4240a94ff5e30c054c989c2d1de0344/68747470733a2f2f7472617669732d63692e6f72672f657363686e6574742f44726f70626f7853444b2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status (Travis)" data-canonical-src="https://travis-ci.org/eschnett/DropboxSDK.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/eschnett/dropboxsdk-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f2b878292fca789673d2b8568bd30cd35b018b68/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f656f37616a636374773436363670786d3f7376673d74727565" alt="Build status (Appveyor)" data-canonical-src="https://ci.appveyor.com/api/projects/status/eo7ajcctw4666pxm?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/eschnett/DropboxSDK.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/4fc0609e6947517b3b42f605033576826337c0bd/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f657363686e6574742f44726f70626f7853444b2e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status (Coveralls)" data-canonical-src="https://coveralls.io/repos/github/eschnett/DropboxSDK.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://zenodo.org/badge/latestdoi/175658475" rel="nofollow"><img src="https://camo.githubusercontent.com/b24fa5eee1c63d953940f86edf46e25044b313cc/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3137353635383437352e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/175658475.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>You install this package in the usual way via</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>DropboxSDK<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Setup</h2>
<p>Before you can using this package to access your Dropbox account, you
need to obtain an <em>authorization token</em>. This is essentially a
password that allows an application to access your Dropbox account on
your behalf.</p>
<p><strong>Note:</strong> A token is like a password; treat it accordingly -- make
sure it never ends up in a repository, on a command line, in log file,
etc.</p>
<p>To obtain an authorization token, go to <a href="https://www.dropbox.com/developers/apps/create" rel="nofollow">this
page</a> and follow the
instructions there. You can call the app e.g. <code>Julia SDK</code>. You have
the option to "sandbox" the token by restricting it to an app-specific
subdirectory. This is a good idea for testing.</p>
<p>Save the token into a file <code>.dropboxsdk.http</code> in your home directory.
The file should look like</p>
<pre><code>access_token:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
</code></pre>
<p>where the <code>xxx</code> are replaced by the authorization token that looks
like a random string of letters and numbers.</p>
<p>Make sure the file is owned by you, and that no one else can read it
(<code>chmod go-rwx ~/.dropboxsdk.http</code>). As a security precaution,
<code>DropboxSDK</code> will refuse to read the file otherwise.</p>
<h2><a id="user-content-command-line-client" class="anchor" aria-hidden="true" href="#command-line-client"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Command line client</h2>
<div class="highlight highlight-source-shell"><pre>julia bin/dbftp.jl <span class="pl-c1">help</span></pre></div>
<p>The command line client works similar to <code>sftp</code>. (There is no REPL
yet.) These commands are implemented:</p>
<ul>
<li><code>account</code>: Display account information</li>
<li><code>cmp</code>: Compare local and remote files (compare content hashes)</li>
<li><code>du</code>: Display space usage</li>
<li><code>get</code>: Download files</li>
<li><code>help</code>: Get help</li>
<li><code>ls</code>: List files</li>
<li><code>mkdir</code>: Create directory</li>
<li><code>put</code>: Upload files</li>
<li><code>rm</code>: Delete file or directory</li>
<li><code>version</code>: Show version number</li>
</ul>
<p>Note that <code>rm</code> can delete non-empty directories. This is a convenient
way to delete large numbers of files in a very short time. Deleted
files can be restored (using e.g. the Dropbox web interface) for some
weeks or months.</p>
<h2><a id="user-content-programming-interface" class="anchor" aria-hidden="true" href="#programming-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Programming interface</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> DropboxSDK</pre></div>
<p>These API functions are currently supported; see their respective
documentation:</p>
<ul>
<li><code>files_create_folder</code>: Create a directory</li>
<li><code>files_delete</code>: Delete a file or directory (recursively)</li>
<li><code>files_download</code>: Get a file</li>
<li><code>files_get_metadata</code>: Get metadata (size etc.) for a file or directory</li>
<li><code>files_list_folder</code>: List directory content</li>
<li><code>files_upload</code>: Upload one or more files</li>
<li><code>users_get_current_account</code>: Get information about the current account</li>
<li><code>users_get_space_usage</code>: Get used and available space</li>
</ul>
<p>There are also a few local helper functions:</p>
<ul>
<li><code>calc_content_hash</code>: Calculate content hash (fingerprint) of a local
file</li>
<li><code>get_authorization</code>: Read credentials from a configuration file</li>
</ul>
<p>The command line interface and the test cases also contain good
pointers for how to use this API.</p>
<p>Given how the Dropbox API is designed, it seems that Dropbox considers
metadata write operations to be particularly expensive. (These are
operations that modify how a directory looks.) Metadata write
operations are thus strongly rate limited.</p>
<p>For example, running two instances of <code>dbftp</code> simultaneously will
almost certainly result in temporary errors and retries. (<code>DropboxSDK</code>
detects temporary errors, and retries automatically. However, this
still slows things down.) Dropbox offers special functions to e.g.
upload many files simultaneously. <code>DropboxSDK</code> uses these, although
not yet in parallel.</p>
<p>Conversely, metadata read operations (e.g. reading a directory or
downloading a file) seem efficient, and these operations can
presumably run in parallel.</p>
</article></div>