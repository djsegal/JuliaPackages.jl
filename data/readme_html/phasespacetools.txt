<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-phasespacetools" class="anchor" aria-hidden="true" href="#phasespacetools"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PhaseSpaceTools</h1>



<p dir="auto"><a href="https://AshtonSBradley.github.io/PhaseSpaceTools.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/AshtonSBradley/PhaseSpaceTools.jl/actions"><img src="https://github.com/AshtonSBradley/PhaseSpaceTools.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/AshtonSBradley/PhaseSpaceTools.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d2b24b84b91a68d444f02a4dc8959f64e6685357cb83a212ff45ba01e9d62d2a/68747470733a2f2f636f6465636f762e696f2f67682f417368746f6e53427261646c65792f50686173655370616365546f6f6c732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/AshtonSBradley/PhaseSpaceTools.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://zenodo.org/badge/latestdoi/115932136" rel="nofollow"><img src="https://camo.githubusercontent.com/1207086b64deea3b5a2ae5375ac67a70ecf31a4db8028a34041dcf57a269c1bd/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3131353933323133362e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/115932136.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Sample quantum initial states commonly encountered in quantum phase space simulations of Bose fields, including those encountered in quantum optics and Bose-Einstein condensates.</p>
<p dir="auto">Wigner and positive-P distributions are available, being the most useful for dynamical simulations.</p>
<p dir="auto">Available distributions are <code>glauberP</code>, <code>positiveP</code> <code>wigner</code>, <code>positiveW</code>, <code>husimiQ</code>.</p>
<h2 dir="auto"><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]add PhaseSpaceTools"><pre>julia<span class="pl-k">&gt;</span> ]add PhaseSpaceTools</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using PhaseSpaceTools

help?&gt; positiveP
search: positiveP positiveW

  α,α⁺ = positiveP(state &lt;: State,N)

  Generate N samples from the positive-P (+P) phase-space distribution for state.

  Moments of the +P distribution generate quantum operator averages that are normally ordered.

  In general the two random variates α,α⁺ are statistically independent for the +P distribution. "><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PhaseSpaceTools

help?<span class="pl-k">&gt;</span> positiveP
search<span class="pl-k">:</span> positiveP positiveW

  α,α⁺ <span class="pl-k">=</span> <span class="pl-c1">positiveP</span>(state <span class="pl-k">&lt;:</span> <span class="pl-c1">State</span>,N)

  Generate N samples from the positive<span class="pl-k">-</span>P (<span class="pl-k">+</span>P) phase<span class="pl-k">-</span>space distribution <span class="pl-k">for</span> state.

  Moments of the <span class="pl-k">+</span>P distribution generate quantum operator averages that are normally ordered.

  In general the two random variates α,α⁺ are statistically independent <span class="pl-k">for</span> the <span class="pl-k">+</span>P distribution. </pre></div>
<h2 dir="auto"><a id="user-content-implemented-states" class="anchor" aria-hidden="true" href="#implemented-states"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Implemented states</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="help?&gt; State
search: State state estimate InvalidStateException AbstractSet AbstractVector AbstractVecOrMat stacktrace StackTraces istaskstarted abstract type AbstractRange AbstractPattern

  State

  Abstract supertype for all sampled states: state &lt;: State.

  Examples
  ≡≡≡≡≡≡≡≡≡≡

  Find all states that may be sampled
  =====================================

  julia&gt; subtypes(State)
  
  6-element Vector{Any}:
  Bogoliubov
  Coherent
  Crescent
  Fock
  Squeezed
  Thermal

  Create and sample a particular state (vacuum)
  ===============================================

  julia&gt; s = Fock(0)
  Fock(0)
  julia&gt; wigner(s,100)
  ┌ Warning: Fock state sampling for W is only valid for n ≫ 1.

  Here a warning is generated since Fock sampling is not well defined for small n. 

  A simpler way to sample the vacuum is 

  julia&gt; s = Coherent(0) 
  Coherent(0.0 + 0.0im)  # type conversion to ComplexF64.
  
  julia&gt; wigner(s,100)
  (ComplexF64[0.33820868828162637 + 0.4407579103538181im, 0.057183146091823775 - 0.2772571883006981im, ...

  generating two vectors of sampled points α,α⁺ in the complex plane. In this case, α = conj(α⁺), as we are not working with a doubled phase space."><pre>help?<span class="pl-k">&gt;</span> State
search<span class="pl-k">:</span> State state estimate InvalidStateException AbstractSet AbstractVector AbstractVecOrMat stacktrace StackTraces istaskstarted <span class="pl-k">abstract type</span> AbstractRange AbstractPattern

  State

  Abstract supertype <span class="pl-k">for</span> all sampled states<span class="pl-k">:</span> state <span class="pl-k">&lt;:</span> <span class="pl-c1">State.</span>

  Examples
  <span class="pl-k">≡≡≡≡≡≡≡≡≡≡</span>

  Find all states that may be sampled
  <span class="pl-k">====================================</span><span class="pl-k">=</span>

  julia<span class="pl-k">&gt;</span> <span class="pl-c1">subtypes</span>(State)
  
  <span class="pl-c1">6</span><span class="pl-k">-</span>element Vector{Any}<span class="pl-k">:</span>
  Bogoliubov
  Coherent
  Crescent
  Fock
  Squeezed
  Thermal

  Create and sample a particular state (vacuum)
  <span class="pl-k">===============================================</span>

  julia<span class="pl-k">&gt;</span> s <span class="pl-k">=</span> <span class="pl-c1">Fock</span>(<span class="pl-c1">0</span>)
  <span class="pl-c1">Fock</span>(<span class="pl-c1">0</span>)
  julia<span class="pl-k">&gt;</span> <span class="pl-c1">wigner</span>(s,<span class="pl-c1">100</span>)
  ┌ Warning<span class="pl-k">:</span> Fock state sampling <span class="pl-k">for</span> W is only valid <span class="pl-k">for</span> n ≫ <span class="pl-c1">1.</span>

  Here a warning is generated since Fock sampling is not well defined <span class="pl-k">for</span> small n. 

  A simpler way to sample the vacuum is 

  julia<span class="pl-k">&gt;</span> s <span class="pl-k">=</span> <span class="pl-c1">Coherent</span>(<span class="pl-c1">0</span>) 
  <span class="pl-c1">Coherent</span>(<span class="pl-c1">0.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>)  <span class="pl-c"><span class="pl-c">#</span> type conversion to ComplexF64.</span>
  
  julia<span class="pl-k">&gt;</span> <span class="pl-c1">wigner</span>(s,<span class="pl-c1">100</span>)
  (ComplexF64[<span class="pl-c1">0.33820868828162637</span> <span class="pl-k">+</span> <span class="pl-c1">0.4407579103538181im</span>, <span class="pl-c1">0.057183146091823775</span> <span class="pl-k">-</span> <span class="pl-c1">0.2772571883006981im</span>, <span class="pl-k">...</span>

  generating two vectors of sampled points α,α⁺ <span class="pl-k">in</span> the complex plane. In this case, α <span class="pl-k">=</span> <span class="pl-c1">conj</span>(α⁺), as we are not working with a doubled phase space.</pre></div>
<h3 dir="auto"><a id="user-content-coherent-state" class="anchor" aria-hidden="true" href="#coherent-state"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Coherent state</h3>
<p dir="auto">A coherent state |α⟩ is sampled as</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="α = 1.0+im*2.0 # coherent amplitude
s = Coherent(α) # define state |α⟩
N = 1000 # number of samples
a,a⁺ = positiveP(s,N)"><pre>α <span class="pl-k">=</span> <span class="pl-c1">1.0</span><span class="pl-k">+</span>im<span class="pl-k">*</span><span class="pl-c1">2.0</span> <span class="pl-c"><span class="pl-c">#</span> coherent amplitude</span>
s <span class="pl-k">=</span> <span class="pl-c1">Coherent</span>(α) <span class="pl-c"><span class="pl-c">#</span> define state |α⟩</span>
N <span class="pl-k">=</span> <span class="pl-c1">1000</span> <span class="pl-c"><span class="pl-c">#</span> number of samples</span>
a,a⁺ <span class="pl-k">=</span> <span class="pl-c1">positiveP</span>(s,N)</pre></div>
<p dir="auto">This is a special case where the two phase space variables <code>a</code> and <code>a⁺</code> are complex conjugate, and non-stochastic in the <code>+P</code> representation.</p>
<h3 dir="auto"><a id="user-content-fock-state" class="anchor" aria-hidden="true" href="#fock-state"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Fock state</h3>
<p dir="auto">An approximate Fock state sampler in the Wigner representation:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="n = 100
s = Fock(n) # define number state |n⟩
N = 1000 # number of samples
a,a⁺ = wigner(s,N)"><pre>n <span class="pl-k">=</span> <span class="pl-c1">100</span>
s <span class="pl-k">=</span> <span class="pl-c1">Fock</span>(n) <span class="pl-c"><span class="pl-c">#</span> define number state |n⟩</span>
N <span class="pl-k">=</span> <span class="pl-c1">1000</span> <span class="pl-c"><span class="pl-c">#</span> number of samples</span>
a,a⁺ <span class="pl-k">=</span> <span class="pl-c1">wigner</span>(s,N)</pre></div>
<p dir="auto">Provides an approximate sampling of <code>W</code> that reproduces operator averages for large <code>n</code>.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">See  <code>/examples/PhaseSpaceTools.ipynb</code> for more usage.</p>
<h1 dir="auto"><a id="user-content-external-links" class="anchor" aria-hidden="true" href="#external-links"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>External links</h1>
<p dir="auto"><em><strong>Numerical representation of quantum states in the positive-P and Wigner representations,</strong></em> <br>
M K Olsen, A S Bradley, <br>
<a href="http://dx.doi.org/10.1016/j.optcom.2009.06.033" rel="nofollow">Optics Communications 282, 3924 (2009)</a></p>
<p dir="auto"><a href="https://scipost.org/commentaries/10.1016/j.optcom.2009.06.033/" rel="nofollow">Scipost Commentary with full erratum</a></p>
</article></div>