<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mixedmodelssim" class="anchor" aria-hidden="true" href="#mixedmodelssim"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MixedModelsSim</h1>
<p dir="auto"><a href="https://zenodo.org/badge/latestdoi/210783029" rel="nofollow"><img src="https://camo.githubusercontent.com/3087695897e7c4d22f185a5362b7b9c2cdb94e9c447fcafe34752388bfa398ab/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3231303738333032392e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/210783029.svg" style="max-width: 100%;"></a>
<a href="https://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/2261082c77808ea734741b12e535d02d23c4101f6b8dfec807f4ddc5ef2eeec0/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="Project Status: Active â€“ The project has reached a stable, usable state and is being actively developed." data-canonical-src="https://www.repostatus.org/badges/latest/active.svg" style="max-width: 100%;"></a>
<a href="https://RePsychLing.github.io/MixedModelsSim.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://RePsychLing.github.io/MixedModelsSim.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaStats/MixedModels.jl/workflows/Tier1/badge.svg"><img src="https://github.com/JuliaStats/MixedModels.jl/workflows/Tier1/badge.svg" alt="T1-url" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaStats/MixedModels.jl/workflows/Tier2/badge.svg"><img src="https://github.com/JuliaStats/MixedModels.jl/workflows/Tier2/badge.svg" alt="T2-url" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/RePsychLing/MixedModelsSim.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cb87ce596f4e241f1cd356d8e9419e20792d582f15b3abbd63178bfc2a8290e1/68747470733a2f2f636f6465636f762e696f2f67682f526550737963684c696e672f4d697865644d6f64656c7353696d2e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/RePsychLing/MixedModelsSim.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides some utility functions for generating experimental designs, especially those with crossed factors.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto"><code>MixedModelsSim</code> is registered in the Julia package registry and can be installed via the pkg REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="(@v1.5) pkg&gt; add MixedModelsSim"><pre>(<span class="pl-c1">@v1</span>.<span class="pl-c1">5</span>) pkg<span class="pl-k">&gt;</span> add MixedModelsSim</pre></div>
<h2 dir="auto"><a id="user-content-purpose" class="anchor" aria-hidden="true" href="#purpose"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Purpose</h2>
<p dir="auto">This package provides functions to facilitate generating experimental designs, especially designs with crossed grouping factors such as "Subject" and "Item" in addition to experimental factors.  The experimental factors can be within-subject or within-item or between-subject and between-item.</p>
<p dir="auto">This package uses structures from the <a href="https://github.com/JuliaData/Tables"><code>Tables</code> package</a>.  In particular, a data table can be viewed as a <code>rowtable</code>, which is a vector of <code>NamedTuple</code>s, or a <code>columntable</code> which is a <code>NamedTuple</code> of vectors (or something similar).</p>
<p dir="auto">For those with experience in <a href="https://www.r-project.org" rel="nofollow"><code>R</code></a> just think of a <code>NamedTuple</code> as being like R's <code>list</code> type.  It's an ordered, named collection.</p>
<h2 dir="auto"><a id="user-content-changes-in-v02" class="anchor" aria-hidden="true" href="#changes-in-v02"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Changes in v0.2</h2>
<p dir="auto">Version 0.2 brings extensive changes to the API, both to take better advantage of new features in
MixedModels.jl 3.0 and to eliminate the direct dependency on DataFrames.jl.</p>
<ul dir="auto">
<li>There is now extensive use of row tables instead of DataFrames.</li>
<li><code>simulate_waldtests</code> has been removed. This functionality is now provided by the <code>coefpvalues</code> property provided of <code>MixedModelBootstrap</code>.</li>
<li>Similarly, <code>sim_to_df</code> has been removed because <code>DataFrame(bootstrapsim.coefpvalues)</code> provides the same content.</li>
</ul>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">To create a design with each of five subjects, three old and two young, tested on each of three items, first create the subject table</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using MixedModelsSim, DataFrames, Tables
julia&gt; subject = (subj = [&quot;S1&quot;,&quot;S2&quot;,&quot;S3&quot;,&quot;S4&quot;,&quot;S5&quot;], age=[&quot;O&quot;,&quot;O&quot;,&quot;O&quot;,&quot;Y&quot;,&quot;Y&quot;]);
julia&gt; typeof(subject)
NamedTuple{(:subj, :age),Tuple{Array{String,1},Array{String,1}}}

julia&gt; rowtable(subject)
5-element Array{NamedTuple{(:subj, :age),Tuple{String,String}},1}:
 (subj = &quot;S1&quot;, age = &quot;O&quot;)
 (subj = &quot;S2&quot;, age = &quot;O&quot;)
 (subj = &quot;S3&quot;, age = &quot;O&quot;)
 (subj = &quot;S4&quot;, age = &quot;Y&quot;)
 (subj = &quot;S5&quot;, age = &quot;Y&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MixedModelsSim, DataFrames, Tables
julia<span class="pl-k">&gt;</span> subject <span class="pl-k">=</span> (subj <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>S1<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>S2<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>S3<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>S4<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>S5<span class="pl-pds">"</span></span>], age<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>Y<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>Y<span class="pl-pds">"</span></span>]);
julia<span class="pl-k">&gt;</span> <span class="pl-c1">typeof</span>(subject)
NamedTuple{(<span class="pl-c1">:subj</span>, <span class="pl-c1">:age</span>),Tuple{Array{String,<span class="pl-c1">1</span>},Array{String,<span class="pl-c1">1</span>}}}

julia<span class="pl-k">&gt;</span> <span class="pl-c1">rowtable</span>(subject)
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{NamedTuple{(<span class="pl-c1">:subj</span>, <span class="pl-c1">:age</span>),Tuple{String,String}},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 (subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S1<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>)
 (subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S2<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>)
 (subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S3<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>)
 (subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S4<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Y<span class="pl-pds">"</span></span>)
 (subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S5<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Y<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">then create the design as the product of an item table (defined inline here) and the <code>subject</code> table</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; design = factorproduct((item = [&quot;I1&quot;,&quot;I2&quot;,&quot;I3&quot;],), subject)
15-element Array{NamedTuple{(:item, :subj, :age),Tuple{String,String,String}},1}:
(item = &quot;I1&quot;, subj = &quot;S1&quot;, age = &quot;O&quot;)
(item = &quot;I2&quot;, subj = &quot;S1&quot;, age = &quot;O&quot;)
(item = &quot;I3&quot;, subj = &quot;S1&quot;, age = &quot;O&quot;)
(item = &quot;I1&quot;, subj = &quot;S2&quot;, age = &quot;O&quot;)
(item = &quot;I2&quot;, subj = &quot;S2&quot;, age = &quot;O&quot;)
(item = &quot;I3&quot;, subj = &quot;S2&quot;, age = &quot;O&quot;)
(item = &quot;I1&quot;, subj = &quot;S3&quot;, age = &quot;O&quot;)
(item = &quot;I2&quot;, subj = &quot;S3&quot;, age = &quot;O&quot;)
(item = &quot;I3&quot;, subj = &quot;S3&quot;, age = &quot;O&quot;)
(item = &quot;I1&quot;, subj = &quot;S4&quot;, age = &quot;Y&quot;)
(item = &quot;I2&quot;, subj = &quot;S4&quot;, age = &quot;Y&quot;)
(item = &quot;I3&quot;, subj = &quot;S4&quot;, age = &quot;Y&quot;)
(item = &quot;I1&quot;, subj = &quot;S5&quot;, age = &quot;Y&quot;)
(item = &quot;I2&quot;, subj = &quot;S5&quot;, age = &quot;Y&quot;)
(item = &quot;I3&quot;, subj = &quot;S5&quot;, age = &quot;Y&quot;)"><pre>julia<span class="pl-k">&gt;</span> design <span class="pl-k">=</span> <span class="pl-c1">factorproduct</span>((item <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>I1<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>I2<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>I3<span class="pl-pds">"</span></span>],), subject)
<span class="pl-c1">15</span><span class="pl-k">-</span>element Array{NamedTuple{(<span class="pl-c1">:item</span>, <span class="pl-c1">:subj</span>, <span class="pl-c1">:age</span>),Tuple{String,String,String}},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I1<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S1<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I2<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S1<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I3<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S1<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I1<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S2<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I2<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S2<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I3<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S2<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I1<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S3<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I2<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S3<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I3<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S3<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>O<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I1<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S4<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Y<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I2<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S4<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Y<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I3<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S4<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Y<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I1<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S5<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Y<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I2<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S5<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Y<span class="pl-pds">"</span></span>)
(item <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>I3<span class="pl-pds">"</span></span>, subj <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>S5<span class="pl-pds">"</span></span>, age <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Y<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The design can be converted to a <code>DataFrame</code> and the strings pooled to save storage.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; design |&gt; DataFrame |&gt; pooled!
15Ã—3 DataFrame
â”‚ Row â”‚ item   â”‚ subj   â”‚ age    â”‚
â”‚     â”‚ String â”‚ String â”‚ String â”‚
â”œâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¤
â”‚ 1   â”‚ I1     â”‚ S1     â”‚ O      â”‚
â”‚ 2   â”‚ I2     â”‚ S1     â”‚ O      â”‚
â”‚ 3   â”‚ I3     â”‚ S1     â”‚ O      â”‚
â”‚ 4   â”‚ I1     â”‚ S2     â”‚ O      â”‚
â”‚ 5   â”‚ I2     â”‚ S2     â”‚ O      â”‚
â”‚ 6   â”‚ I3     â”‚ S2     â”‚ O      â”‚
â”‚ 7   â”‚ I1     â”‚ S3     â”‚ O      â”‚
â”‚ 8   â”‚ I2     â”‚ S3     â”‚ O      â”‚
â”‚ 9   â”‚ I3     â”‚ S3     â”‚ O      â”‚
â”‚ 10  â”‚ I1     â”‚ S4     â”‚ Y      â”‚
â”‚ 11  â”‚ I2     â”‚ S4     â”‚ Y      â”‚
â”‚ 12  â”‚ I3     â”‚ S4     â”‚ Y      â”‚
â”‚ 13  â”‚ I1     â”‚ S5     â”‚ Y      â”‚
â”‚ 14  â”‚ I2     â”‚ S5     â”‚ Y      â”‚
â”‚ 15  â”‚ I3     â”‚ S5     â”‚ Y      â”‚

julia&gt; describe(ans)
3Ã—8 DataFrame
â”‚ Row â”‚ variable â”‚ mean    â”‚ min    â”‚ median  â”‚ max    â”‚ nunique â”‚ nmissing â”‚ eltype   â”‚
â”‚     â”‚ Symbol   â”‚ Nothing â”‚ String â”‚ Nothing â”‚ String â”‚ Int64   â”‚ Nothing  â”‚ DataType â”‚
â”œâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¤
â”‚ 1   â”‚ item     â”‚         â”‚ I1     â”‚         â”‚ I3     â”‚ 3       â”‚          â”‚ String   â”‚
â”‚ 2   â”‚ subj     â”‚         â”‚ S1     â”‚         â”‚ S5     â”‚ 5       â”‚          â”‚ String   â”‚
â”‚ 3   â”‚ age      â”‚         â”‚ O      â”‚         â”‚ Y      â”‚ 2       â”‚          â”‚ String   â”‚"><pre>julia<span class="pl-k">&gt;</span> design <span class="pl-k">|&gt;</span> DataFrame <span class="pl-k">|&gt;</span> pooled!
<span class="pl-c1">15</span><span class="pl-k">Ã—</span><span class="pl-c1">3</span> DataFrame
â”‚ Row â”‚ item   â”‚ subj   â”‚ age    â”‚
â”‚     â”‚ String â”‚ String â”‚ String â”‚
â”œâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¤
â”‚ <span class="pl-c1">1</span>   â”‚ I1     â”‚ S1     â”‚ O      â”‚
â”‚ <span class="pl-c1">2</span>   â”‚ I2     â”‚ S1     â”‚ O      â”‚
â”‚ <span class="pl-c1">3</span>   â”‚ I3     â”‚ S1     â”‚ O      â”‚
â”‚ <span class="pl-c1">4</span>   â”‚ I1     â”‚ S2     â”‚ O      â”‚
â”‚ <span class="pl-c1">5</span>   â”‚ I2     â”‚ S2     â”‚ O      â”‚
â”‚ <span class="pl-c1">6</span>   â”‚ I3     â”‚ S2     â”‚ O      â”‚
â”‚ <span class="pl-c1">7</span>   â”‚ I1     â”‚ S3     â”‚ O      â”‚
â”‚ <span class="pl-c1">8</span>   â”‚ I2     â”‚ S3     â”‚ O      â”‚
â”‚ <span class="pl-c1">9</span>   â”‚ I3     â”‚ S3     â”‚ O      â”‚
â”‚ <span class="pl-c1">10</span>  â”‚ I1     â”‚ S4     â”‚ Y      â”‚
â”‚ <span class="pl-c1">11</span>  â”‚ I2     â”‚ S4     â”‚ Y      â”‚
â”‚ <span class="pl-c1">12</span>  â”‚ I3     â”‚ S4     â”‚ Y      â”‚
â”‚ <span class="pl-c1">13</span>  â”‚ I1     â”‚ S5     â”‚ Y      â”‚
â”‚ <span class="pl-c1">14</span>  â”‚ I2     â”‚ S5     â”‚ Y      â”‚
â”‚ <span class="pl-c1">15</span>  â”‚ I3     â”‚ S5     â”‚ Y      â”‚

julia<span class="pl-k">&gt;</span> <span class="pl-c1">describe</span>(ans)
<span class="pl-c1">3</span><span class="pl-k">Ã—</span><span class="pl-c1">8</span> DataFrame
â”‚ Row â”‚ variable â”‚ mean    â”‚ min    â”‚ median  â”‚ max    â”‚ nunique â”‚ nmissing â”‚ eltype   â”‚
â”‚     â”‚ Symbol   â”‚ Nothing â”‚ String â”‚ Nothing â”‚ String â”‚ Int64   â”‚ Nothing  â”‚ DataType â”‚
â”œâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¤
â”‚ <span class="pl-c1">1</span>   â”‚ item     â”‚         â”‚ I1     â”‚         â”‚ I3     â”‚ <span class="pl-c1">3</span>       â”‚          â”‚ String   â”‚
â”‚ <span class="pl-c1">2</span>   â”‚ subj     â”‚         â”‚ S1     â”‚         â”‚ S5     â”‚ <span class="pl-c1">5</span>       â”‚          â”‚ String   â”‚
â”‚ <span class="pl-c1">3</span>   â”‚ age      â”‚         â”‚ O      â”‚         â”‚ Y      â”‚ <span class="pl-c1">2</span>       â”‚          â”‚ String   â”‚</pre></div>
<h2 dir="auto"><a id="user-content-background-on-tables-and-tuples" class="anchor" aria-hidden="true" href="#background-on-tables-and-tuples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Background on tables and tuples</h2>
<p dir="auto">In Julia tuples are created by listing the contents, surrounded by parentheses and separated by commas.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Tables.istable(subject)
true

julia&gt; Tables.schema(subject)
Tables.Schema:
 :subj  String
 :age   String

 julia&gt; DataFrame(subject)
 5Ã—2 DataFrame
 â”‚ Row â”‚ subj   â”‚ age    â”‚
 â”‚     â”‚ String â”‚ String â”‚
 â”œâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¤
 â”‚ 1   â”‚ S1     â”‚ Y      â”‚
 â”‚ 2   â”‚ S2     â”‚ Y      â”‚
 â”‚ 3   â”‚ S3     â”‚ Y      â”‚
 â”‚ 4   â”‚ S4     â”‚ O      â”‚
 â”‚ 5   â”‚ S5     â”‚ O      â”‚"><pre>julia<span class="pl-k">&gt;</span> Tables<span class="pl-k">.</span><span class="pl-c1">istable</span>(subject)
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> Tables<span class="pl-k">.</span><span class="pl-c1">schema</span>(subject)
Tables<span class="pl-k">.</span>Schema<span class="pl-k">:</span>
 <span class="pl-c1">:subj</span>  String
 <span class="pl-c1">:age</span>   String

 julia<span class="pl-k">&gt;</span> <span class="pl-c1">DataFrame</span>(subject)
 <span class="pl-c1">5</span><span class="pl-k">Ã—</span><span class="pl-c1">2</span> DataFrame
 â”‚ Row â”‚ subj   â”‚ age    â”‚
 â”‚     â”‚ String â”‚ String â”‚
 â”œâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¤
 â”‚ <span class="pl-c1">1</span>   â”‚ S1     â”‚ Y      â”‚
 â”‚ <span class="pl-c1">2</span>   â”‚ S2     â”‚ Y      â”‚
 â”‚ <span class="pl-c1">3</span>   â”‚ S3     â”‚ Y      â”‚
 â”‚ <span class="pl-c1">4</span>   â”‚ S4     â”‚ O      â”‚
 â”‚ <span class="pl-c1">5</span>   â”‚ S5     â”‚ O      â”‚</pre></div>
<h3 dir="auto"><a id="user-content-the-curiously-trailing-comma" class="anchor" aria-hidden="true" href="#the-curiously-trailing-comma"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>The curiously trailing comma</h3>
<p dir="auto">To distinguish creating a named tuple of length 1 from an assignment with parentheses around it a comma is required after the first named element.  To create an item table with only three item identifiers, the expression must be written</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; items = (item = [&quot;I1&quot;, &quot;I2&quot;, &quot;I3&quot;],)
(item = [&quot;I1&quot;, &quot;I2&quot;, &quot;I3&quot;],)"><pre>julia<span class="pl-k">&gt;</span> items <span class="pl-k">=</span> (item <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>I1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>I2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>I3<span class="pl-pds">"</span></span>],)
(item <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>I1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>I2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>I3<span class="pl-pds">"</span></span>],)</pre></div>
<p dir="auto">with that curiously trailing comma.  In general, trailing commas are allowed in the creation of tuples or in argument lists but in this case the trailing comma is mandatory.</p>
<h2 dir="auto"><a id="user-content-generating-factors-with-n-levels" class="anchor" aria-hidden="true" href="#generating-factors-with-n-levels"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Generating factors with n levels</h2>
<p dir="auto">The <code>nlevels</code> utility function can be used to generate a vector of length <code>n</code> with a given tag.  For example, the vector of subject levels can be generated as</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; show(nlevels(5, 'S'))
[&quot;S1&quot;, &quot;S2&quot;, &quot;S3&quot;, &quot;S4&quot;, &quot;S5&quot;]"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">show</span>(<span class="pl-c1">nlevels</span>(<span class="pl-c1">5</span>, <span class="pl-s"><span class="pl-pds">'</span>S<span class="pl-pds">'</span></span>))
[<span class="pl-s"><span class="pl-pds">"</span>S1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>S2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>S3<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>S4<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>S5<span class="pl-pds">"</span></span>]</pre></div>
<p dir="auto">The default tag is <code>S</code> so this sequence could be generated more simply as</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; show(nlevels(5))
[&quot;S1&quot;, &quot;S2&quot;, &quot;S3&quot;, &quot;S4&quot;, &quot;S5&quot;]"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">show</span>(<span class="pl-c1">nlevels</span>(<span class="pl-c1">5</span>))
[<span class="pl-s"><span class="pl-pds">"</span>S1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>S2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>S3<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>S4<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>S5<span class="pl-pds">"</span></span>]</pre></div>
<h2 dir="auto"><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgements</h2>
<p dir="auto">The development of this package was supported by the Center for Interdisciplinary Research, Bielefeld (ZiF) Cooperation Group "Statistical models for psychological and linguistic data".</p>
</article></div>