<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-astinterpreter2" class="anchor" aria-hidden="true" href="#astinterpreter2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ASTInterpreter2</h1>
<p dir="auto"><a href="https://travis-ci.org/JuliaDebug/ASTInterpreter2.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c7e8e9bba6937d2b88aaa6b2eaea9e2a88f9498cb6b46d02dc2703e862f2f823/68747470733a2f2f7472617669732d63692e6f72672f4a756c696144656275672f415354496e746572707265746572322e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaDebug/ASTInterpreter2.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/JuliaDebug/ASTInterpreter2.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/50630cb2ecdbf4d2d96185cf804eeb20b17bb0ec3e541168b87a1428385cd52f/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c696144656275672f415354496e746572707265746572322e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaDebug/ASTInterpreter2.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto"><strong>NOTE: this package is deprecated. Use <a href="https://github.com/JuliaDebug/Debugger.jl">Debugger.jl</a> or <a href="https://docs.junolab.org/latest/" rel="nofollow">Juno</a>, both of which use <a href="https://github.com/JuliaDebug/JuliaInterpreter.jl">JuliaInterpeter</a>.</strong></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
]add ASTInterpreter2#master
]add DebuggerFramework#master"><pre><span class="pl-k">using</span> Pkg
]add ASTInterpreter2<span class="pl-c"><span class="pl-c">#</span>master</span>
]add DebuggerFramework<span class="pl-c"><span class="pl-c">#</span>master</span></pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using ASTInterpreter2

function foo(n)
    x = n+1
    ((BigInt[1 1; 1 0])^x)[2,1]
end

@enter foo(20)"><pre class="notranslate"><code>using ASTInterpreter2

function foo(n)
    x = n+1
    ((BigInt[1 1; 1 0])^x)[2,1]
end

@enter foo(20)
</code></pre></div>
<p dir="auto">Basic Commands:</p>
<ul dir="auto">
<li><code>n</code> steps to the next line</li>
<li><code>s</code> steps into the next call</li>
<li><code>finish</code> runs to the end of the function</li>
<li><code>bt</code> shows a simple backtrace</li>
<li><code>`stuff</code> runs <code>stuff</code> in the current frame's context</li>
<li><code>fr v</code> will show all variables in the current frame</li>
<li><code>f n</code> where <code>n</code> is an integer, will go to the <code>n</code>-th frame.</li>
</ul>
<p dir="auto">Advanced commands:</p>
<ul dir="auto">
<li><code>nc</code> steps to the next call</li>
<li><code>ns</code> steps to the next statement</li>
<li><code>se</code> does one expression step</li>
<li><code>si</code> does the same but steps into a call if a call is the next expression</li>
<li><code>sg</code> steps into a generated function</li>
<li><code>shadow</code> shows the internal representation of the expression tree (for debugger debugging only)</li>
<li><code>loc</code> shows the column data for the current top frame, in the same format
as JuliaParsers's testshell.</li>
</ul>
<p dir="auto">This is a prototype, do not expect it to be correct or usable.</p>
</article></div>