<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-astinterpreter2" class="anchor" aria-hidden="true" href="#astinterpreter2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ASTInterpreter2</h1>
<p><a href="https://travis-ci.org/JuliaDebug/ASTInterpreter2.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/86609f41555e31c61075faa17d0b2e34fac31292/68747470733a2f2f7472617669732d63692e6f72672f4a756c696144656275672f415354496e746572707265746572322e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaDebug/ASTInterpreter2.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaDebug/ASTInterpreter2.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/4fe11466c98c7c9639da79d756709fc46d4d1a29/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c696144656275672f415354496e746572707265746572322e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaDebug/ASTInterpreter2.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p><strong>NOTE: this package is deprecated. Use <a href="https://github.com/JuliaDebug/Debugger.jl">Debugger.jl</a> or <a href="https://docs.junolab.org/latest/" rel="nofollow">Juno</a>, both of which use <a href="https://github.com/JuliaDebug/JuliaInterpreter.jl">JuliaInterpeter</a>.</strong></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg
]add ASTInterpreter2<span class="pl-c"><span class="pl-c">#</span>master</span>
]add DebuggerFramework<span class="pl-c"><span class="pl-c">#</span>master</span></pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<pre><code>using ASTInterpreter2

function foo(n)
    x = n+1
    ((BigInt[1 1; 1 0])^x)[2,1]
end

@enter foo(20)
</code></pre>
<p>Basic Commands:</p>
<ul>
<li><code>n</code> steps to the next line</li>
<li><code>s</code> steps into the next call</li>
<li><code>finish</code> runs to the end of the function</li>
<li><code>bt</code> shows a simple backtrace</li>
<li><code>`stuff</code> runs <code>stuff</code> in the current frame's context</li>
<li><code>fr v</code> will show all variables in the current frame</li>
<li><code>f n</code> where <code>n</code> is an integer, will go to the <code>n</code>-th frame.</li>
</ul>
<p>Advanced commands:</p>
<ul>
<li><code>nc</code> steps to the next call</li>
<li><code>ns</code> steps to the next statement</li>
<li><code>se</code> does one expression step</li>
<li><code>si</code> does the same but steps into a call if a call is the next expression</li>
<li><code>sg</code> steps into a generated function</li>
<li><code>shadow</code> shows the internal representation of the expression tree (for debugger debugging only)</li>
<li><code>loc</code> shows the column data for the current top frame, in the same format
as JuliaParsers's testshell.</li>
</ul>
<p>This is a prototype, do not expect it to be correct or usable.</p>
</article></div>