<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><blockquote>
<p dir="auto"><g-emoji class="g-emoji" alias="information_source" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2139.png">ℹ️</g-emoji> The repository name has changed to <code>SCPToolbox.jl</code> in
order to reflect the project's direction: to develop a general-purpose
trajectory optimization toolkit using sequential convex programming
algorithms.</p>
</blockquote>
<p align="center" dir="auto">
<a href="media/logo/about.md" title="About the logo">
<img alt="SCP Toolbox" title="SCP Toolbox" src="media/logo/logo.png" width="400px" style="max-width: 100%;">
</a>
</p>
<p align="center" dir="auto">
    <a href="http://www.gnu.org/licenses/gpl-3.0.txt" rel="nofollow"><img src="https://camo.githubusercontent.com/dae3491a361638a8c24569c64f8a20de21adb8bd50d9147e1fd44eb901a2433b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c5f332d677265656e2e737667" alt="License GPL 3" data-canonical-src="https://img.shields.io/badge/license-GPL_3-green.svg" style="max-width: 100%;"></a>
      
    <a href="https://mybinder.org/v2/gh/UW-ACL/SCPToolbox_tutorial/master?labpath=tutorial%2Fsrc%2Fp1_clp.ipynb" rel="nofollow"><img src="https://camo.githubusercontent.com/581c077bdbc6ca6899c86d0acc6145ae85e9d80e6f805a1071793dbe48917982/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667" alt="Launch Binder" data-canonical-src="https://mybinder.org/badge_logo.svg" style="max-width: 100%;"></a>
</p>
<p dir="auto">The <b>SCP Toolbox</b> provides the tools necessary to define and solve
nonconvex trajectory optimization problems. The user-facing part of the toolbox
provides a trajectory problem parser that allows one to define the system
dynamics, state and input constraints, and boundary conditions. Under the hood,
the problem is solved using any one of several <em>Sequential Convex Programming</em>
(SCP) algorithms. These algorithms have been successfully demonstrated on a
number of difficult aerospace, autonomous driving, robotics, and other
applications. A major goal of the SCP Toolbox is to provide working reference
implementations of the SCP algorithms. By placing the algorithms behind a
parser that transforms trajectory problems into their abstract mathematical
definitions, the algorithms can be generically tested on a suite of examples
without having to re-implement the underlying algorithms each time.</p>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting Started</h2>
<p dir="auto">Click on the <a href="https://mybinder.org/v2/gh/UW-ACL/SCPToolbox_tutorial/master?labpath=tutorial%2Fsrc%2Fp1_clp.ipynb" rel="nofollow"><img src="https://camo.githubusercontent.com/581c077bdbc6ca6899c86d0acc6145ae85e9d80e6f805a1071793dbe48917982/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667" alt="Binder" data-canonical-src="https://mybinder.org/badge_logo.svg" style="max-width: 100%;"></a> button to spin up a remote Jupyter environment. Follow the included notebooks to get a feel for the toolbox, and finish by solving a self-guided tutorial to land a rocket on the Moon! Check out the <a href="https://github.com/UW-ACL/SCPToolbox_tutorial">SCPToolbox_tutorial</a> repository for more details.</p>
<h2 dir="auto"><a id="user-content-implemented-scp-algorithms" class="anchor" aria-hidden="true" href="#implemented-scp-algorithms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Implemented SCP algorithms</h2>
<p dir="auto">The following algorithms are implemented, and can be found in the
<code>src/solvers/</code> directory:</p>
<ul dir="auto">
<li>Penalized trust region (<a href="https://arxiv.org/abs/1811.10803" rel="nofollow">PTR</a>)</li>
<li>Successive convexification (<a href="https://arxiv.org/abs/1804.06539" rel="nofollow">SCvx</a>)</li>
<li>Guaranteed Sequential Trajectory Optimization (<a href="http://asl.stanford.edu/wp-content/papercite-data/pdf/Bonalli.Cauligi.Bylard.Pavone.ICRA19.pdf" rel="nofollow">GuSTO</a>)</li>
<li>Lossless convexification (<a href="https://doi.org/10.2514/1.27553" rel="nofollow">LCvx</a>)</li>
</ul>
<h2 dir="auto"><a id="user-content-implemented-examples" class="anchor" aria-hidden="true" href="#implemented-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Implemented examples</h2>
<p dir="auto">Several example applications show how the algorithms can be used. These can all
be found in the <code>test/examples/</code> directory, and include:</p>
<ol dir="auto">
<li><a href="test/examples/double_integrator">Double integrator with friction</a></li>
<li><a href="test/examples/rocket_landing">Mars rocket landing</a></li>
<li><a href="test/examples/starship_flip">SpaceX Starship landing "flip" maneuver</a></li>
<li><a href="test/examples/oscillator">Mass-spring-damper with an actuator deadband or
"sticking"</a></li>
<li><a href="test/examples/quadrotor">Quadrotor flight around obstacles</a></li>
<li><a href="test/examples/freeflyer">Space station freeflyer robot</a></li>
<li><a href="test/examples/rendezvous_planar">Planar spacecraft rendezvous with discrete
logic</a></li>
<li><a href="test/examples/rendezvous_3d">Apollo transposition and docking maneuver with discrete
logic</a></li>
</ol>
<h2 dir="auto"><a id="user-content-citing" class="anchor" aria-hidden="true" href="#citing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citing</h2>
<p dir="auto">If you use the SCP Toolbox, kindly cite the following associated publication.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@article{SCPToolboxCSM2022,
  doi = {10.1109/mcs.2022.3187542},
  url = {https://doi.org/10.1109/mcs.2022.3187542},
  year = {2022},
  month = oct,
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
  volume = {42},
  number = {5},
  pages = {40--113},
  author = {Danylo Malyuta and Taylor P. Reynolds and Michael Szmuk and Thomas Lew
            and Riccardo Bonalli and Marco Pavone and Behçet Açıkmeşe},
  title = {Convex Optimization for Trajectory Generation: A Tutorial on Generating
           Dynamically Feasible Trajectories Reliably and Efficiently},
  journal = {{IEEE} Control Systems},
  note = {Free preprint available at https://arxiv.org/abs/2106.09125}
}"><pre class="notranslate"><code>@article{SCPToolboxCSM2022,
  doi = {10.1109/mcs.2022.3187542},
  url = {https://doi.org/10.1109/mcs.2022.3187542},
  year = {2022},
  month = oct,
  publisher = {Institute of Electrical and Electronics Engineers ({IEEE})},
  volume = {42},
  number = {5},
  pages = {40--113},
  author = {Danylo Malyuta and Taylor P. Reynolds and Michael Szmuk and Thomas Lew
            and Riccardo Bonalli and Marco Pavone and Behçet Açıkmeşe},
  title = {Convex Optimization for Trajectory Generation: A Tutorial on Generating
           Dynamically Feasible Trajectories Reliably and Efficiently},
  journal = {{IEEE} Control Systems},
  note = {Free preprint available at https://arxiv.org/abs/2106.09125}
}
</code></pre></div>
</article></div>