<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-alert" class="anchor" aria-hidden="true" href="#alert"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Alert</h1>
<p><a href="https://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/2261082c77808ea734741b12e535d02d23c4101f6b8dfec807f4ddc5ef2eeec0/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="Project Status: Active â€“ The project has reached a stable, usable state and is being actively developed." data-canonical-src="https://www.repostatus.org/badges/latest/active.svg" style="max-width:100%;"></a></p>
<p>Alert provides a cross-platform means of displaying a notification to the user in Julia. It
should work on MacOS, Windows 10 (even under WSL2) and many flavors of Linux. This is handy
for long-running scripts. You can also use an extension
(<a href="https://github.com/haberdashPI/AlertPushover.jl">AlertPushover</a>) to send notifications to
your phone or a webapp when working remotely.</p>
<p>There are three ways to use alert:</p>
<ol>
<li>Call <code>alert()</code> after a long-running piece of code.</li>
<li>Put long-running code inside the <code>@alert</code> macro.</li>
<li>Call <code>alertREPL</code> and any long-running code sent to the REPL will display a notification.</li>
</ol>
<p>Before using <code>alert()</code> at the end of a long-running script, it would be good to test that it
actually works on your system: some linux distros may not have an appropriate program
installed to display the notification. Loading <code>Alert</code> should warn you if it can't find an
appropriate executable to send the notification. Just read the error message that is
displayed to see what program you need to install.</p>
<p>Table of Contents:</p>

<ul>
<li><a href="#the-alert-function">The alert function</a></li>
<li><a href="#the-alert-macro">The @alert macro</a></li>
<li><a href="#the-repl-hook">The REPL hook</a></li>
<li><a href="#troubleshooting">Troubleshooting</a></li>
<li><a href="#extensions">Extensions</a></li>
</ul>

<h2><a id="user-content-the-alert-function" class="anchor" aria-hidden="true" href="#the-alert-function"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>The <code>alert()</code> function</h2>
<p>To use <code>alert()</code> just add it to some long-running code.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
using Alert

for i in 1:10_000
    long_running_function()
end

alert(&quot;Your julia script is finished!&quot;)
"><pre><span class="pl-k">using</span> Alert

<span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10_000</span>
    <span class="pl-c1">long_running_function</span>()
<span class="pl-k">end</span>

<span class="pl-c1">alert</span>(<span class="pl-s"><span class="pl-pds">"</span>Your julia script is finished!<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-the-alert-macro" class="anchor" aria-hidden="true" href="#the-alert-macro"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>The <code>@alert</code> macro</h2>
<p>The <code>@alert</code> macro displays a message if the code passed to it runs for longer
than 2 seconds (or a custom value). This is especially handy when using
<a href="https://github.com/timholy/ProgressMeter.jl"><code>ProgressMeter</code></a>, like so.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="@alert @showprogress for i in 1:10_000
    long_running_function()
end
"><pre><span class="pl-c1">@alert</span> <span class="pl-c1">@showprogress</span> <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10_000</span>
    <span class="pl-c1">long_running_function</span>()
<span class="pl-k">end</span></pre></div>
<h2><a id="user-content-the-repl-hook" class="anchor" aria-hidden="true" href="#the-repl-hook"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>The REPL hook</h2>
<p>In Julia 1.5 or greater, if you want any long-running command at the REPL to send a
notification, you can use <code>alertREPL</code>. It takes the same arguments as <code>@alert</code> and will wrap
any code passed to the Julia REPL in a call to <code>@alert</code>.</p>
<p>You can add the following to your <code>startup.jl</code> file to have it work in every Julia
session.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="try
    using Alert
    alertREPL()
catch e
    @warn e.msg
end
"><pre><span class="pl-k">try</span>
    <span class="pl-k">using</span> Alert
    <span class="pl-c1">alertREPL</span>()
<span class="pl-k">catch</span> e
    <span class="pl-c1">@warn</span> e<span class="pl-k">.</span>msg
<span class="pl-k">end</span></pre></div>
<h2><a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Troubleshooting</h2>
<ul>
<li><strong>Notification fails to display on Windows</strong>: check to make sure you have Notifications turned on in "Notifications &amp; actions" in your OS settings. <a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/54456da3d5fd49371d0f03afb57b01493de475151397be91d0557303ff15c749/68747470733a2f2f617773312e646973636f757273652d63646e2e636f6d2f627573696e657373352f75706c6f6164732f6a756c69616c616e672f6f7074696d697a65642f33582f622f352f623535373736663634666137646165393636613337373362636134306533363237613161343830625f325f393630783735302e706e67"><img src="https://camo.githubusercontent.com/54456da3d5fd49371d0f03afb57b01493de475151397be91d0557303ff15c749/68747470733a2f2f617773312e646973636f757273652d63646e2e636f6d2f627573696e657373352f75706c6f6164732f6a756c69616c616e672f6f7074696d697a65642f33582f622f352f623535373736663634666137646165393636613337373362636134306533363237613161343830625f325f393630783735302e706e67" alt="Window of the Windows 10 &quot;Notifications &amp; actions&quot;" data-canonical-src="https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/3X/b/5/b55776f64fa7dae966a3773bca40e3627a1a480b_2_960x750.png" style="max-width:100%;"></a></li>
</ul>
<h2><a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Extensions</h2>
<p>If you want to use <code>alert</code> remotely or in an online IDE, where you can't get local UX
notifications, you can use <a href="https://github.com/haberdashPI/AlertPushover.jl">AlertPushover</a>.</p>
</article></div>