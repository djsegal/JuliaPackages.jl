<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-alert" class="anchor" aria-hidden="true" href="#alert"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Alert</h1>
<p>Alert provides a cross-platform means of displaying a notification to the user
in Julia. It should work on MacOS, Windows 10 or Linux. This is handy for
long-running scripts; just add <code>alert()</code> to the end of the script, and go work
on something else until you see the notification. To use it just run <code>alert</code>,
like so.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Alert

<span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10_000</span>
    <span class="pl-c1">long_running_function</span>()
<span class="pl-k">end</span>

<span class="pl-c1">alert</span>(<span class="pl-s"><span class="pl-pds">"</span>Your julia script is finished!<span class="pl-pds">"</span></span>)</pre></div>
<p>Before using <code>alert()</code> at the end of a long-running script, it would be good to
test that it actually works on your system: e.g. some linux distros may not have
an appropriate program installed to display the notification. If it doesn't
work, just read the error message that is displayed to see what program you need
to install.</p>
<p>The package also provides <code>@alert</code>, which can be used to notify you when a block
of code has finished. It only displays a message if the code runs for longer
than 2 seconds (or a custom value). This is especially handy when using
<code>ProgressMeter</code>, like so.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">@alert</span> <span class="pl-c1">@showprogress</span> <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10_000</span>
    <span class="pl-c1">long_running_function</span>()
<span class="pl-k">end</span></pre></div>
</article></div>