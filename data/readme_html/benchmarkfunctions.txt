<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-benchmarkfunctionsjl" class="anchor" aria-hidden="true" href="#benchmarkfunctionsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>BenchmarkFunctions.jl</h1>
<p dir="auto">A set of common benchmark functions for testing optimization algorithms in Julia</p>
<p dir="auto"><a href="https://travis-ci.com/rbalexan/BenchmarkFunctions.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/eaf19123e24b7374e8b397f0d7a33c7e8f22daaeea529b2cb67f369a74a4089e/68747470733a2f2f7472617669732d63692e636f6d2f7262616c6578616e2f42656e63686d61726b46756e6374696f6e732e6a6c2e7376673f6272616e63683d6d6173746572266b696c6c5f63616368653d31" alt="Build Status" data-canonical-src="https://travis-ci.com/rbalexan/BenchmarkFunctions.jl.svg?branch=master&amp;kill_cache=1" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/rbalexan/BenchmarkFunctions.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/64baab0ab67f7ee40ffaec1c1fb8bbe1a41ff3830095025d0169ef73c98e0a30/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7262616c6578616e2f42656e63686d61726b46756e6374696f6e732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572266b696c6c5f63616368653d31" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/rbalexan/BenchmarkFunctions.jl/badge.svg?branch=master&amp;kill_cache=1" style="max-width: 100%;"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/rbalexan/BenchmarkFunctions.jl/blob/master/plots/2d_himmelblau.svg"><img src="https://github.com/rbalexan/BenchmarkFunctions.jl/raw/master/plots/2d_himmelblau.svg" alt="Surface and contour plots of the Himmelblau function" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting Started</h2>
<p dir="auto">To add the package, enter the following into the REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg
julia&gt; Pkg.add(&quot;BenchmarkFunctions&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg
julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>BenchmarkFunctions<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">A simple example for creating a grid and evaluating a benchmark function is:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using BenchmarkFunctions

X = ndgrid(-4:0.1:4,-4:0.1:4)
y = himmelblau(X)"><pre><span class="pl-k">using</span> BenchmarkFunctions

X <span class="pl-k">=</span> <span class="pl-c1">ndgrid</span>(<span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">4</span>,<span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">4</span>)
y <span class="pl-k">=</span> <span class="pl-c1">himmelblau</span>(X)</pre></div>
<p dir="auto">To recreate the above plot:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using BenchmarkFunctions

plot(&quot;himmelblau&quot;, -4:0.1:4, -4:0.1:4)"><pre><span class="pl-k">using</span> BenchmarkFunctions

<span class="pl-c1">plot</span>(<span class="pl-s"><span class="pl-pds">"</span>himmelblau<span class="pl-pds">"</span></span>, <span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">4</span>, <span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">4</span>)</pre></div>
<h2 dir="auto"><a id="user-content-complicated-benchmark-functions" class="anchor" aria-hidden="true" href="#complicated-benchmark-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Complicated Benchmark Functions</h2>
<p dir="auto">This package also include some complicated benchmark functions.</p>
<h3 dir="auto"><a id="user-content-real-world-multiobjective-constrained-optimization-problems" class="anchor" aria-hidden="true" href="#real-world-multiobjective-constrained-optimization-problems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Real-World Multiobjective Constrained Optimization Problems</h3>
<p dir="auto">The Competition on Real-World Multiobjective Constrained Optimization 2021
<a href="https://doi.org/10.1016/j.swevo.2021.100961" rel="nofollow">(RW-MOP-2021)</a> presented 50 benchmark functions
from real-world problems for testing multi-objective optimization algorithms.
Those problems are available here.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using BenchmarkFunctions

julia&gt; f, conf = get_RW_MOP_problem(2); # problem 2

julia&gt; conf
Dict{Symbol, Any} with 8 entries:
  :xmin     =&gt; [0.05, 0.2, 0.2, 0.35, 3.0]
  :xmax     =&gt; [0.5, 0.5, 0.6, 0.5, 6.0]
  :n        =&gt; 5
  :function =&gt; &quot;vibrating_platform&quot;
  :gn       =&gt; 5
  :hn       =&gt; 0
  :fn       =&gt; 2
  :nadir    =&gt; [-0.00127461, 318.255]"><pre class="notranslate"><code>julia&gt; using BenchmarkFunctions

julia&gt; f, conf = get_RW_MOP_problem(2); # problem 2

julia&gt; conf
Dict{Symbol, Any} with 8 entries:
  :xmin     =&gt; [0.05, 0.2, 0.2, 0.35, 3.0]
  :xmax     =&gt; [0.5, 0.5, 0.6, 0.5, 6.0]
  :n        =&gt; 5
  :function =&gt; "vibrating_platform"
  :gn       =&gt; 5
  :hn       =&gt; 0
  :fn       =&gt; 2
  :nadir    =&gt; [-0.00127461, 318.255]
</code></pre></div>
<p dir="auto">Use <code>BenchmarkFunctions.NAME_OF_PROBLEMS_RW_MOP_2021</code> for full list of problems.</p>
</article></div>