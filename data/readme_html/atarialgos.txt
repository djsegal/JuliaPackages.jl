<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h2><a id="user-content-atarialgos" class="anchor" aria-hidden="true" href="#atarialgos"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>AtariAlgos</h2>
<h4><a id="user-content-author-thomas-breloff" class="anchor" aria-hidden="true" href="#author-thomas-breloff"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Author: <a href="https://github.com/tbreloff">Thomas Breloff</a></h4>
<p><a href="https://travis-ci.org/JuliaML/AtariAlgos.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9f96eaa151217e9e73aa137dad243b810e9d2750/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614d4c2f4174617269416c676f732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaML/AtariAlgos.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>AtariAlgos wraps the <a href="https://github.com/nowozin/ArcadeLearningEnvironment.jl">ArcadeLearningEnvironment</a> as an implementation of an <code>AbstractEnvironment</code> from the <a href="https://github.com/JuliaML/Reinforce.jl">Reinforce interface</a>.  This allows it to be used as a plug-and-play module with general reinforcement learning agents.</p>
<p>Setup:</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/JuliaML/AtariAlgos.jl<span class="pl-pds">"</span></span>)</pre></div>
<p>(Optional) Download roms:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> AtariAlgos
AtariAlgos<span class="pl-k">.</span><span class="pl-c1">download_roms</span>()</pre></div>
<p>Games can also be "plotted" using <a href="https://juliaplots.github.io/" rel="nofollow">Plots.jl</a> through a simple definition of a <a href="https://juliaplots.github.io/recipes/" rel="nofollow">recipe</a> for <code>AtariEnv</code> objects, allowing it to be a component of more complex visualizations for tracking learning progress and more, as well as making it easy to create animations.</p>
<h3><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> AtariAlgos

<span class="pl-c"><span class="pl-c">#</span> construct a game of Breakout</span>
game <span class="pl-k">=</span> <span class="pl-c1">AtariEnv</span>(<span class="pl-s"><span class="pl-pds">"</span>breakout<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> set up for plotting</span>
<span class="pl-k">using</span> Plots
<span class="pl-c1">gr</span>(size<span class="pl-k">=</span>(<span class="pl-c1">200</span>,<span class="pl-c1">300</span>), leg<span class="pl-k">=</span><span class="pl-c1">false</span>)
rewards <span class="pl-k">=</span> Float64[]

<span class="pl-c"><span class="pl-c">#</span> run the episode using the Episode iterator, creating an animated gif in the process</span>
<span class="pl-c1">@gif</span> <span class="pl-k">for</span> sars <span class="pl-k">in</span> <span class="pl-c1">Episode</span>(game, <span class="pl-c1">RandomPolicy</span>())
	<span class="pl-c1">push!</span>(rewards, sars[<span class="pl-c1">3</span>])
	<span class="pl-c1">plot</span>(
		<span class="pl-c1">plot</span>(game),
		<span class="pl-c1">sticks</span>(rewards, yticks<span class="pl-k">=</span><span class="pl-c1">nothing</span>),
		layout<span class="pl-k">=</span><span class="pl-c1">@layout</span> [a;b{<span class="pl-c1">0.2</span>h}]
	)
<span class="pl-k">end</span> every <span class="pl-c1">10</span></pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/933338/17670982/8923a2f6-62e2-11e6-943f-bd0a2a7b5c1f.gif"><img src="https://cloud.githubusercontent.com/assets/933338/17670982/8923a2f6-62e2-11e6-943f-bd0a2a7b5c1f.gif" alt="" style="max-width:100%;"></a></p>
</article></div>