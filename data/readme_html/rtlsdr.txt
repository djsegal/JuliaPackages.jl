<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-rtlsdr" class="anchor" aria-hidden="true" href="#rtlsdr"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>RTLSDR</h1>
<p>A wrapper for the librtlsdr C libraries.
Currently, this only works on Linux (I think).
You need to download the librtlsdr libraries.</p>
<p>This code is heavily based off the
<a href="https://github.com/roger-/pyrtlsdr">pyrtlsdr libary</a> by github user <code>roger-</code>.</p>
<h2><a id="user-content-librtlsdr-c-libraries" class="anchor" aria-hidden="true" href="#librtlsdr-c-libraries"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>librtlsdr C libraries</h2>
<p>Julia needs to find <code>librtlsdr.so</code> somewhere on your system.
To see if Julia can find it, you can use <code>find_library</code>:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Libdl
<span class="pl-c1">find_library</span>(<span class="pl-s"><span class="pl-pds">"</span>librtlsdr<span class="pl-pds">"</span></span>)   <span class="pl-c"><span class="pl-c">#</span> returns empty string if library not found</span></pre></div>
<p>You can also type the following into an Ubuntu shell to help find it:</p>
<div class="highlight highlight-source-shell"><pre>ldconfig -p <span class="pl-k">|</span> grep librtlsdr</pre></div>
<h2><a id="user-content-quick-example" class="anchor" aria-hidden="true" href="#quick-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Quick Example</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> RTLSDR

r <span class="pl-k">=</span> <span class="pl-c1">RtlSdr</span>()

<span class="pl-c1">set_rate</span>(r, <span class="pl-c1">2.0e6</span>)
<span class="pl-c1">set_freq</span>(r, <span class="pl-c1">88.5e6</span>)		<span class="pl-c"><span class="pl-c">#</span> if we wanted the center freq on NPR</span>

samples <span class="pl-k">=</span> <span class="pl-c1">read_samples</span>(r, <span class="pl-c1">1024</span>)

<span class="pl-c"><span class="pl-c">#</span> plot power spectral density</span>
<span class="pl-k">using</span> PyPlot
<span class="pl-c1">psd</span>(samples)</pre></div>
<h2><a id="user-content-function-list" class="anchor" aria-hidden="true" href="#function-list"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Function list</h2>
<div class="highlight highlight-source-julia"><pre>r <span class="pl-k">=</span> <span class="pl-c1">RtlSdr</span>()            <span class="pl-c"><span class="pl-c">#</span> creates RtlSdr object with dongle pointer</span>

<span class="pl-c1">set_rate</span>(r, rate_Hz)      <span class="pl-c"><span class="pl-c">#</span> rtlsdr_set_sample_rate</span>
<span class="pl-c1">get_rate</span>(r)

<span class="pl-c1">set_freq</span>(r, freq_Hz)    <span class="pl-c"><span class="pl-c">#</span> rtlsdr_set_center_freq</span>
<span class="pl-c1">get_freq</span>(r)

<span class="pl-c1">set_agc_mode</span>(r, mode)               <span class="pl-c"><span class="pl-c">#</span> rtlsdr_set_agc_mode</span>
<span class="pl-c1">set_tuner_gain_mode</span>(r, manual)      <span class="pl-c"><span class="pl-c">#</span> rtlsdr_set_tuner_gain_mode</span>

<span class="pl-c1">close</span>(r)    <span class="pl-c"><span class="pl-c">#</span> rtlsdr_close. cannot read from r once this is called</span>

<span class="pl-c"><span class="pl-c">#</span> rtlsdr_read_sync</span>
<span class="pl-c"><span class="pl-c">#</span> returns vector of length num_bytes with Uint8 (bytes)</span>
<span class="pl-c"><span class="pl-c">#</span> num_bytes must be multiple of 512</span>
<span class="pl-c1">read_bytes</span>(r, num_bytes)

<span class="pl-c"><span class="pl-c">#</span> converts vector of Uint8 into a vector (half as long) of complex iq samples</span>
<span class="pl-c1">packed_bytes_to_iq</span>(bytes)

<span class="pl-c"><span class="pl-c">#</span> equivalent to read_bytes + packed_bytes_to_iq</span>
<span class="pl-c"><span class="pl-c">#</span> returns a vector of length num_samples with complex samples</span>
<span class="pl-c"><span class="pl-c">#</span> num_samples must be multiple of 256</span>
<span class="pl-c1">read_samples</span>(r, num_samples)</pre></div>
<p><a href="https://travis-ci.org/dressel/RTLSDR.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cf3dc040df8d2c816134d7132cdf4dd46e85b1f6/68747470733a2f2f7472617669732d63692e6f72672f6472657373656c2f52544c5344522e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dressel/RTLSDR.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://coveralls.io/github/dressel/RTLSDR.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/0521cdf116fd450fedb6b673166e267f987da950/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6472657373656c2f52544c5344522e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/dressel/RTLSDR.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/dressel/RTLSDR.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/f991eb88729945634ed2975946656c0f8037a327/687474703a2f2f636f6465636f762e696f2f6769746875622f6472657373656c2f52544c5344522e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/dressel/RTLSDR.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
</article></div>