<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-turingpatternsjl" class="anchor" aria-hidden="true" href="#turingpatternsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TuringPatterns.jl</h1>
<p dir="auto"><a href="https://github.com/JuliaEarth/TuringPatterns.jl/actions"><img src="https://camo.githubusercontent.com/0e9efdde8be2a083cc22598331c50d1afd6b51f15aae70a535fb71b1f0befab2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f4a756c696145617274682f547572696e675061747465726e732e6a6c2f43492e796d6c3f6272616e63683d6d6173746572267374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/github/actions/workflow/status/JuliaEarth/TuringPatterns.jl/CI.yml?branch=master&amp;style=flat-square" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/JuliaEarth/TuringPatterns.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2dcae7f71c5345282fb5361f23b37a60c50947ae7d62124b3db31a6012622910/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696145617274682f547572696e675061747465726e732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaEarth/TuringPatterns.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Multi-scale Turing pattern simulation solver for the
<a href="https://github.com/JuliaEarth/GeoStats.jl">GeoStats.jl</a> framework.</p>
<h2 dir="auto"><a id="user-content-low-level-api" class="anchor" aria-hidden="true" href="#low-level-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Low-level API</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TuringPatterns

sz = (200, 200)

patterns = [
    SimplePattern(Params(2,   4,   0.01), sz),
    SimplePattern(Params(5,   10,  0.02), sz),
    SimplePattern(Params(10,  20,  0.03), sz),
    SimplePattern(Params(20,  40,  0.04), sz),
    SimplePattern(Params(50,  100, 0.05), sz),
]

simulate(
    rand(sz...), # initial conditions
    patterns,    # patterns
    BoxBlur(sz), # blur
    100          # iterations
)"><pre><span class="pl-k">using</span> TuringPatterns

sz <span class="pl-k">=</span> (<span class="pl-c1">200</span>, <span class="pl-c1">200</span>)

patterns <span class="pl-k">=</span> [
    <span class="pl-c1">SimplePattern</span>(<span class="pl-c1">Params</span>(<span class="pl-c1">2</span>,   <span class="pl-c1">4</span>,   <span class="pl-c1">0.01</span>), sz),
    <span class="pl-c1">SimplePattern</span>(<span class="pl-c1">Params</span>(<span class="pl-c1">5</span>,   <span class="pl-c1">10</span>,  <span class="pl-c1">0.02</span>), sz),
    <span class="pl-c1">SimplePattern</span>(<span class="pl-c1">Params</span>(<span class="pl-c1">10</span>,  <span class="pl-c1">20</span>,  <span class="pl-c1">0.03</span>), sz),
    <span class="pl-c1">SimplePattern</span>(<span class="pl-c1">Params</span>(<span class="pl-c1">20</span>,  <span class="pl-c1">40</span>,  <span class="pl-c1">0.04</span>), sz),
    <span class="pl-c1">SimplePattern</span>(<span class="pl-c1">Params</span>(<span class="pl-c1">50</span>,  <span class="pl-c1">100</span>, <span class="pl-c1">0.05</span>), sz),
]

<span class="pl-c1">simulate</span>(
    <span class="pl-c1">rand</span>(sz<span class="pl-k">...</span>), <span class="pl-c"><span class="pl-c">#</span> initial conditions</span>
    patterns,    <span class="pl-c"><span class="pl-c">#</span> patterns</span>
    <span class="pl-c1">BoxBlur</span>(sz), <span class="pl-c"><span class="pl-c">#</span> blur</span>
    <span class="pl-c1">100</span>          <span class="pl-c"><span class="pl-c">#</span> iterations</span>
)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/picture.png"><img src="docs/picture.png" alt="docs/picture.png" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-high-level-api" class="anchor" aria-hidden="true" href="#high-level-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>High-level API</h2>
<p dir="auto">Multiple images can be generated using:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GeoStats
using TuringPatterns

using Plots, GeoStatsPlots

# define simulation problem for a variable &quot;z&quot;
# request 3 realizations (i.e. images)
problem = SimulationProblem(CartesianGrid(200,200), :z =&gt; Float64, 3)

# define Turing patterns solver
# see docstring for options
solver  = TPS()

# solve problem over any domain
# that has grid topology
solution = solve(problem, solver)

plot(solution)"><pre><span class="pl-k">using</span> GeoStats
<span class="pl-k">using</span> TuringPatterns

<span class="pl-k">using</span> Plots, GeoStatsPlots

<span class="pl-c"><span class="pl-c">#</span> define simulation problem for a variable "z"</span>
<span class="pl-c"><span class="pl-c">#</span> request 3 realizations (i.e. images)</span>
problem <span class="pl-k">=</span> <span class="pl-c1">SimulationProblem</span>(<span class="pl-c1">CartesianGrid</span>(<span class="pl-c1">200</span>,<span class="pl-c1">200</span>), <span class="pl-c1">:z</span> <span class="pl-k">=&gt;</span> Float64, <span class="pl-c1">3</span>)

<span class="pl-c"><span class="pl-c">#</span> define Turing patterns solver</span>
<span class="pl-c"><span class="pl-c">#</span> see docstring for options</span>
solver  <span class="pl-k">=</span> <span class="pl-c1">TPS</span>()

<span class="pl-c"><span class="pl-c">#</span> solve problem over any domain</span>
<span class="pl-c"><span class="pl-c">#</span> that has grid topology</span>
solution <span class="pl-k">=</span> <span class="pl-c1">solve</span>(problem, solver)

<span class="pl-c1">plot</span>(solution)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/geostats.png"><img src="docs/geostats.png" alt="docs/geostats.png" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ul dir="auto">
<li><a href="http://www.jonathanmccabe.com/Cyclic_Symmetric_Multi-Scale_Turing_Patterns.pdf" rel="nofollow">McCabe, J. Cyclic Symmetric Multi-Scale Turing Patterns</a></li>
<li><a href="https://www.flickr.com/photos/jonathanmccabe/sets/72157644907151060" rel="nofollow">Example gallery 1</a> and <a href="https://www.flickr.com/photos/jonathanmccabe/sets/72157673446623356" rel="nofollow">Example gallery 2</a></li>
</ul>
</article></div>