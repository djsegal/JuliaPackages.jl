<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-yasolsolverjl" class="anchor" aria-hidden="true" href="#yasolsolverjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>YasolSolver.jl</h1>
<p dir="auto"><a href="https://github.com/hendrikbecker99/YasolSolver.jl/actions/workflows/CI.yml"><img src="https://github.com/hendrikbecker99/YasolSolver.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://ci.appveyor.com/project/hendrikbecker99/yasolsolver-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f0e199b948f4a93b04abd9b57a072c6b3f6cfb476c9b0cd28cb1d9fedf1a4506/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f313133767661786e69746f68697069643f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/113vvaxnitohipid?svg=true" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/hendrikbecker99/YasolSolver.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a3cadf880835370c5812ea21bd41693280a0589bdc84b9d0b0c0688c69087b7d/68747470733a2f2f636f6465636f762e696f2f67682f68656e6472696b6265636b657239392f5961736f6c536f6c7665722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d3655574d6c5354503569" alt="codecov" data-canonical-src="https://codecov.io/gh/hendrikbecker99/YasolSolver.jl/branch/master/graph/badge.svg?token=6UWMlSTP5i" style="max-width: 100%;"></a></p>
<p dir="auto">YasolSolver.jl is an interface between <a href="https://github.com/jump-dev/MathOptInterface.jl">MathOptInterface.jl</a>
and <a href="http://tm-server-2.wiwi.uni-siegen.de/t3-q-mip/index.php?id=2" rel="nofollow">Yasol solver</a>.</p>
<p dir="auto">Please consult the <a href="http://tm-server-2.wiwi.uni-siegen.de/t3-q-mip/index.php?id=1" rel="nofollow">providing website</a> for further information about the solver and how to build models.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">First, download the Yasol solver from <a href="http://tm-server-2.wiwi.uni-siegen.de/t3-q-mip/index.php?id=4" rel="nofollow">here</a>.</p>
<p dir="auto">Second, install Yasol interface using <code>Pkg.add</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import Pkg
Pkg.add(&quot;YasolSolver&quot;)"><pre><span class="pl-k">import</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>YasolSolver<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-use-with-jump" class="anchor" aria-hidden="true" href="#use-with-jump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Use with JuMP</h2>
<p dir="auto">Models can be build using <a href="https://github.com/jump-dev/JuMP.jl">JuMP.jl</a> package and will be solved using Yasol interface and Yasol solver.</p>
<p dir="auto">This can be done using the <code>YasolSolver.Optimizer</code> object. Here is how to create a
<em>JuMP</em> model that uses Yasol as the solver.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JuMP, YasolSolver

cd(&quot;C:/Yasol&quot;) # change path to Yasol .exe directory

model = Model(() -&gt; YasolSolver.Optimizer()) # use the path to Yasol solver .exe

set_optimizer_attribute(model, &quot;solver path&quot;, &quot;C:/Yasol/Yasol_CLP&quot;)
set_optimizer_attribute(model, &quot;time limit&quot;, 60)
set_optimizer_attribute(model, &quot;output info&quot;, 1)
set_optimizer_attribute(model, &quot;problem file name&quot;, &quot;Example.qlp&quot;)"><pre><span class="pl-k">using</span> JuMP, YasolSolver

<span class="pl-c1">cd</span>(<span class="pl-s"><span class="pl-pds">"</span>C:/Yasol<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> change path to Yasol .exe directory</span>

model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(() <span class="pl-k">-&gt;</span> YasolSolver<span class="pl-k">.</span><span class="pl-c1">Optimizer</span>()) <span class="pl-c"><span class="pl-c">#</span> use the path to Yasol solver .exe</span>

<span class="pl-c1">set_optimizer_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>solver path<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>C:/Yasol/Yasol_CLP<span class="pl-pds">"</span></span>)
<span class="pl-c1">set_optimizer_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>time limit<span class="pl-pds">"</span></span>, <span class="pl-c1">60</span>)
<span class="pl-c1">set_optimizer_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>output info<span class="pl-pds">"</span></span>, <span class="pl-c1">1</span>)
<span class="pl-c1">set_optimizer_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>problem file name<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Example.qlp<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The solver supports 3 attributes that can be used with JuMP:</p>
<ul dir="auto">
<li>solver path -&gt; defines the path to the Yasol executable</li>
<li>time limit -&gt; defines the time limit in seconds</li>
<li>output info -&gt; defines output level (1 is recommended)</li>
<li>problem file name -&gt; defines filename of model; solution file will have the same name</li>
</ul>
<p dir="auto">Further, the solver specific parameter saved in <em>Yasol.ini</em> can be set and retrieved the following:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# change Yasol initial parameter
# format: solver directory, parameter name, value
YasolSolver.setInitialParameter(&quot;C:/Yasol&quot;, &quot;writeOutputFile&quot;, 1)
# get initial parameter
# format: solver directory
@show YasolSolver.getInitialParameter(&quot;C:/Yasol&quot;)"><pre><span class="pl-c"><span class="pl-c">#</span> change Yasol initial parameter</span>
<span class="pl-c"><span class="pl-c">#</span> format: solver directory, parameter name, value</span>
YasolSolver<span class="pl-k">.</span><span class="pl-c1">setInitialParameter</span>(<span class="pl-s"><span class="pl-pds">"</span>C:/Yasol<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>writeOutputFile<span class="pl-pds">"</span></span>, <span class="pl-c1">1</span>)
<span class="pl-c"><span class="pl-c">#</span> get initial parameter</span>
<span class="pl-c"><span class="pl-c">#</span> format: solver directory</span>
<span class="pl-c1">@show</span> YasolSolver<span class="pl-k">.</span><span class="pl-c1">getInitialParameter</span>(<span class="pl-s"><span class="pl-pds">"</span>C:/Yasol<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><strong>Note: Do not change the default parameter without knowing their purpose!</strong></p>
<h2 dir="auto"><a id="user-content-build-and-solve-a-jump-model" class="anchor" aria-hidden="true" href="#build-and-solve-a-jump-model"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Build and solve a JuMP model</h2>
<p dir="auto">Do the following to build and solve a JuMP model using Yasol solver:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@variable(model, x1, binary=true, lower_bound=0, upper_bound=1, YasolVariable, quantifier=&quot;exists&quot;, block=1)

@variable(model, x2, binary=true, lower_bound=0, upper_bound=1, YasolVariable, quantifier=&quot;exists&quot;, block=2)

@variable(model, x3, binary=true, lower_bound=0, upper_bound=1, YasolVariable, quantifier=&quot;all&quot;, block=3)

@variable(model, x4, binary=true, lower_bound=0, upper_bound=1, YasolVariable, quantifier=&quot;exists&quot;, block=4)

@constraint(model, con1, 1*x1 -2*x2 +1*x3 -1*x4 &lt;= 1, YasolConstraint, quantifier=&quot;exists&quot;)

@constraint(model, con2, 1*x1 + 1*x2 +1*x3 -1*x4 &lt;= 2, YasolConstraint, quantifier=&quot;exists&quot;)

@constraint(model, con3, 1*x1 + 1*x2 +1*x3 &lt;= 2, YasolConstraint, quantifier=&quot;all&quot;)

@objective(model, Min, -1*x1 -2*x2 +2*x3 +1x4)

optimize!(model)"><pre><span class="pl-c1">@variable</span>(model, x1, binary<span class="pl-k">=</span><span class="pl-c1">true</span>, lower_bound<span class="pl-k">=</span><span class="pl-c1">0</span>, upper_bound<span class="pl-k">=</span><span class="pl-c1">1</span>, YasolVariable, quantifier<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>exists<span class="pl-pds">"</span></span>, block<span class="pl-k">=</span><span class="pl-c1">1</span>)

<span class="pl-c1">@variable</span>(model, x2, binary<span class="pl-k">=</span><span class="pl-c1">true</span>, lower_bound<span class="pl-k">=</span><span class="pl-c1">0</span>, upper_bound<span class="pl-k">=</span><span class="pl-c1">1</span>, YasolVariable, quantifier<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>exists<span class="pl-pds">"</span></span>, block<span class="pl-k">=</span><span class="pl-c1">2</span>)

<span class="pl-c1">@variable</span>(model, x3, binary<span class="pl-k">=</span><span class="pl-c1">true</span>, lower_bound<span class="pl-k">=</span><span class="pl-c1">0</span>, upper_bound<span class="pl-k">=</span><span class="pl-c1">1</span>, YasolVariable, quantifier<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>all<span class="pl-pds">"</span></span>, block<span class="pl-k">=</span><span class="pl-c1">3</span>)

<span class="pl-c1">@variable</span>(model, x4, binary<span class="pl-k">=</span><span class="pl-c1">true</span>, lower_bound<span class="pl-k">=</span><span class="pl-c1">0</span>, upper_bound<span class="pl-k">=</span><span class="pl-c1">1</span>, YasolVariable, quantifier<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>exists<span class="pl-pds">"</span></span>, block<span class="pl-k">=</span><span class="pl-c1">4</span>)

<span class="pl-c1">@constraint</span>(model, con1, <span class="pl-c1">1</span><span class="pl-k">*</span>x1 <span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>x2 <span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">*</span>x3 <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">*</span>x4 <span class="pl-k">&lt;=</span> <span class="pl-c1">1</span>, YasolConstraint, quantifier<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>exists<span class="pl-pds">"</span></span>)

<span class="pl-c1">@constraint</span>(model, con2, <span class="pl-c1">1</span><span class="pl-k">*</span>x1 <span class="pl-k">+</span> <span class="pl-c1">1</span><span class="pl-k">*</span>x2 <span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">*</span>x3 <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">*</span>x4 <span class="pl-k">&lt;=</span> <span class="pl-c1">2</span>, YasolConstraint, quantifier<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>exists<span class="pl-pds">"</span></span>)

<span class="pl-c1">@constraint</span>(model, con3, <span class="pl-c1">1</span><span class="pl-k">*</span>x1 <span class="pl-k">+</span> <span class="pl-c1">1</span><span class="pl-k">*</span>x2 <span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">*</span>x3 <span class="pl-k">&lt;=</span> <span class="pl-c1">2</span>, YasolConstraint, quantifier<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>all<span class="pl-pds">"</span></span>)

<span class="pl-c1">@objective</span>(model, Min, <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">*</span>x1 <span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>x2 <span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>x3 <span class="pl-k">+</span><span class="pl-c1">1</span>x4)

<span class="pl-c1">optimize!</span>(model)</pre></div>
<h2 dir="auto"><a id="user-content-solver-specific-variable-and-constraint-extensions" class="anchor" aria-hidden="true" href="#solver-specific-variable-and-constraint-extensions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Solver specific variable and constraint extensions</h2>
<p dir="auto">The package provides two JuMP extensions that are used in the example above:</p>
<h5 dir="auto"><a id="user-content-yasolvariable" class="anchor" aria-hidden="true" href="#yasolvariable"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>YasolVariable</h5>
<p dir="auto">To use Yasol variables, the keyword <code>YasolVariable</code> needs to be used followed by the parameter
<code>quantifier</code>, that can have the values 'exists' or 'all' and the parameter <code>block</code> that needs to be an integer &gt;= 1.
Every variable can either be binary or an interger variable.</p>
<h5 dir="auto"><a id="user-content-yasolconstraint" class="anchor" aria-hidden="true" href="#yasolconstraint"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>YasolConstraint</h5>
<p dir="auto">To use Yasol constraints, the keyword <code>YasolConstraint</code> needs to be used followed by the parameter <code>quantifier</code>, that can have the values 'exists' or 'all'. Constraints can also be used without the constraint extension.</p>
<h2 dir="auto"><a id="user-content-read-solution" class="anchor" aria-hidden="true" href="#read-solution"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Read solution</h2>
<p dir="auto">After calling the optimize function, the solution will be available in the selected project directory. Additionally, the solution can be accessed using JuMP the following way:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@show termination_status(model)
@show value(x1)
@show objective_value(model)
@show solve_time(model)
"><pre><span class="pl-c1">@show</span> <span class="pl-c1">termination_status</span>(model)
<span class="pl-c1">@show</span> <span class="pl-c1">value</span>(x1)
<span class="pl-c1">@show</span> <span class="pl-c1">objective_value</span>(model)
<span class="pl-c1">@show</span> <span class="pl-c1">solve_time</span>(model)
</pre></div>
</article></div>