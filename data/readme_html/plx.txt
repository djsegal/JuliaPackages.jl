<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-plxjl" class="anchor" aria-hidden="true" href="#plxjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PLX.jl</h1>
<p dir="auto">PLX.jl reads Plexon PLX files in Julia. It is several times faster than the MATLAB SDK provided by Plexon Inc.</p>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick Start</h2>
<p dir="auto">Because PLX.jl loads the entire contents of a given Plexon file into memory, you will want at least as much RAM as your largest Plexon file.</p>
<p dir="auto">To read a Plexon file:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="load(&quot;PLX&quot;)
using PLX
plx = PLXFile(&quot;/path/to/plexon/file.plx&quot;)"><pre><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>PLX<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> PLX
plx <span class="pl-k">=</span> <span class="pl-c1">PLXFile</span>(<span class="pl-s"><span class="pl-pds">"</span>/path/to/plexon/file.plx<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">To read a Plexon file without LFPs:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="load(&quot;PLX&quot;)
using PLX
plx = PLXFile(&quot;/path/to/plexon/file.plx&quot;, lfps=false)"><pre><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>PLX<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> PLX
plx <span class="pl-k">=</span> <span class="pl-c1">PLXFile</span>(<span class="pl-s"><span class="pl-pds">"</span>/path/to/plexon/file.plx<span class="pl-pds">"</span></span>, lfps<span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<p dir="auto">To read a Plexon file including spike waveforms:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="load(&quot;PLX&quot;)
using PLX
plx = PLXFile(&quot;/path/to/plexon/file.plx&quot;, waveforms=true)"><pre><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>PLX<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> PLX
plx <span class="pl-k">=</span> <span class="pl-c1">PLXFile</span>(<span class="pl-s"><span class="pl-pds">"</span>/path/to/plexon/file.plx<span class="pl-pds">"</span></span>, waveforms<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<p dir="auto">To access spike times:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="plx.spike_channels[n].units[m].spike_times"><pre>plx<span class="pl-k">.</span>spike_channels[n]<span class="pl-k">.</span>units[m]<span class="pl-k">.</span>spike_times</pre></div>
<p dir="auto">To access encodes and encode times:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="plx.event_channels[257].times
plx.event_channels[257].codes"><pre>plx<span class="pl-k">.</span>event_channels[<span class="pl-c1">257</span>]<span class="pl-k">.</span>times
plx<span class="pl-k">.</span>event_channels[<span class="pl-c1">257</span>]<span class="pl-k">.</span>codes</pre></div>
<p dir="auto">To find samples around given time points in a continuous channel, use:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="channel = plx.continuous_channels[n]
channel.data[sample_index(channel.times, index_or_indices)]"><pre>channel <span class="pl-k">=</span> plx<span class="pl-k">.</span>continuous_channels[n]
channel<span class="pl-k">.</span>data[<span class="pl-c1">sample_index</span>(channel<span class="pl-k">.</span>times, index_or_indices)]</pre></div>
<p dir="auto">For further documentation of the PLXFile type, read the source or use <code>idump(PLXFile)</code>.</p>
<h2 dir="auto"><a id="user-content-implementation-notes" class="anchor" aria-hidden="true" href="#implementation-notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Implementation Notes</h2>
<p dir="auto">PLX.jl relies heavily on the functionality provided by <code>mmap_array</code> to read files. I'm not actually sure if this works on Windows. However, it provides a large (~2X) performance boost on Linux.</p>
<p dir="auto">PLX.jl implements its own object (<code>SampleTimes</code>) to handle the timestamps on continuous channels, both to save memory and to optimize searching for sample indices corresponding to specific time points.</p>
<p dir="auto">Documentation of the PLX format is available on Plexon's <a href="http://www.plexon.com/downloads.html" rel="nofollow">website</a>, or in PDF form <a href="http://hardcarve.com/wikipic/PlexonDataFileStructureDocumentation.pdf" rel="nofollow">here</a>.</p>
</article></div>