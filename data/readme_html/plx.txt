<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-plxjl" class="anchor" aria-hidden="true" href="#plxjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PLX.jl</h1>
<p>PLX.jl reads Plexon PLX files in Julia. It is several times faster than the MATLAB SDK provided by Plexon Inc.</p>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Quick Start</h2>
<p>Because PLX.jl loads the entire contents of a given Plexon file into memory, you will want at least as much RAM as your largest Plexon file.</p>
<p>To read a Plexon file:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>PLX<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> PLX
plx <span class="pl-k">=</span> <span class="pl-c1">PLXFile</span>(<span class="pl-s"><span class="pl-pds">"</span>/path/to/plexon/file.plx<span class="pl-pds">"</span></span>)</pre></div>
<p>To read a Plexon file without LFPs:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>PLX<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> PLX
plx <span class="pl-k">=</span> <span class="pl-c1">PLXFile</span>(<span class="pl-s"><span class="pl-pds">"</span>/path/to/plexon/file.plx<span class="pl-pds">"</span></span>, lfps<span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<p>To read a Plexon file including spike waveforms:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>PLX<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> PLX
plx <span class="pl-k">=</span> <span class="pl-c1">PLXFile</span>(<span class="pl-s"><span class="pl-pds">"</span>/path/to/plexon/file.plx<span class="pl-pds">"</span></span>, waveforms<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<p>To access spike times:</p>
<div class="highlight highlight-source-julia"><pre>plx<span class="pl-k">.</span>spike_channels[n]<span class="pl-k">.</span>units[m]<span class="pl-k">.</span>spike_times</pre></div>
<p>To access encodes and encode times:</p>
<div class="highlight highlight-source-julia"><pre>plx<span class="pl-k">.</span>event_channels[<span class="pl-c1">257</span>]<span class="pl-k">.</span>times
plx<span class="pl-k">.</span>event_channels[<span class="pl-c1">257</span>]<span class="pl-k">.</span>codes</pre></div>
<p>To find samples around given time points in a continuous channel, use:</p>
<div class="highlight highlight-source-julia"><pre>channel <span class="pl-k">=</span> plx<span class="pl-k">.</span>continuous_channels[n]
channel<span class="pl-k">.</span>data[<span class="pl-c1">sample_index</span>(channel<span class="pl-k">.</span>times, index_or_indices)]</pre></div>
<p>For further documentation of the PLXFile type, read the source or use <code>idump(PLXFile)</code>.</p>
<h2><a id="user-content-implementation-notes" class="anchor" aria-hidden="true" href="#implementation-notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Implementation Notes</h2>
<p>PLX.jl relies heavily on the functionality provided by <code>mmap_array</code> to read files. I'm not actually sure if this works on Windows. However, it provides a large (~2X) performance boost on Linux.</p>
<p>PLX.jl implements its own object (<code>SampleTimes</code>) to handle the timestamps on continuous channels, both to save memory and to optimize searching for sample indices corresponding to specific time points.</p>
<p>Documentation of the PLX format is available on Plexon's <a href="http://www.plexon.com/downloads.html" rel="nofollow">website</a>, or in PDF form <a href="http://hardcarve.com/wikipic/PlexonDataFileStructureDocumentation.pdf" rel="nofollow">here</a>.</p>
</article></div>