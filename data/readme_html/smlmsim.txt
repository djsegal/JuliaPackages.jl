<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-smlmsim" class="anchor" aria-hidden="true" href="#smlmsim"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SMLMSim</h1>
<p dir="auto"><a href="https://JuliaSMLM.github.io/SMLMSim.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://JuliaSMLM.github.io/SMLMSim.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaSMLM/SMLMSim.jl/actions"><img src="https://github.com/JuliaSMLM/SMLMSim.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaSMLM/SMLMSim.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b6a892d4d4b97835659c21ef4f06df637c5d2a4b075c40b8268e9a2af4edd11a/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961534d4c4d2f534d4c4d53696d2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaSMLM/SMLMSim.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Generate simulated SMLM coordinate data.  Patterns, Cameras, Fluorphores, and SMLD data organization can be configured.</p>
<p dir="auto">Simulation parameters use physical units. Resulting smld structures are in units of pixels and frames.</p>
<p dir="auto">The high level interface is the <code>SMLMSim.sim()</code> function.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using SMLMSim
using SMLMData
using PlotlyJS

smld_true, smld_model, smld_noisy=SMLMSim.sim(;
ρ=1.0, # pattern density (1/micron^2)
σ_PSF=.13, # (micron) 
minphotons=50,
ndatasets=10,
nframes=1000,
framerate=50.0, # (1/s)
pattern=SMLMSim.Nmer2D(),
molecule=SMLMSim.GenericFluor(;q=[0 50; 1e-2 0]), # (1/s) 
camera=SMLMSim.IdealCamera(;xpixels=256,ypixels=256,pixelsize=0.1) # pixelsize is microns
)

plt=PlotlyJS.plot(scattergl(x=smld_noisy.x, y=smld_noisy.y, mode=&quot;markers&quot;))
display(plt)"><pre class="notranslate"><code>using SMLMSim
using SMLMData
using PlotlyJS

smld_true, smld_model, smld_noisy=SMLMSim.sim(;
ρ=1.0, # pattern density (1/micron^2)
σ_PSF=.13, # (micron) 
minphotons=50,
ndatasets=10,
nframes=1000,
framerate=50.0, # (1/s)
pattern=SMLMSim.Nmer2D(),
molecule=SMLMSim.GenericFluor(;q=[0 50; 1e-2 0]), # (1/s) 
camera=SMLMSim.IdealCamera(;xpixels=256,ypixels=256,pixelsize=0.1) # pixelsize is microns
)

plt=PlotlyJS.plot(scattergl(x=smld_noisy.x, y=smld_noisy.y, mode="markers"))
display(plt)
</code></pre></div>
</article></div>