<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-semiringalgebrajl" class="anchor" aria-hidden="true" href="#semiringalgebrajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SemiringAlgebra.jl</h1>
<p dir="auto">The <code>doc/</code> directory includes a paper <a href="https://dspace.mit.edu/handle/1721.1/115964" rel="nofollow">Novel Algebras for Advanced Analytics in Julia</a>, which describes the motivation for this package and its design.</p>
<p dir="auto">Example usage, see the <a href="https://github.com/JuliaComputing/SemiringAlgebra.jl/blob/af67f6705bc531a85c61bc4e270be90fb8a54b24/src/SemiringAlgebra.jl#L37">bench()</a> function in <code>SemringAlgebra.jl</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg; Pkg.add(PackageSpec(url = pwd())); Pkg.build()

julia&gt; Pkg.test(&quot;SemiringAlgebra&quot;)

julia&gt; using SemiringAlgebra

julia&gt; SemiringAlgebra.bench(100)

100x100 Float64 array
  0.000345 seconds (2 allocations: 78.203 KiB)
100x100 MPNumber{Float64} array
  0.002951 seconds (8 allocations: 78.531 KiB)

100x100 Int64 array
  0.000643 seconds (8 allocations: 78.531 KiB)
100x100 MPNumber{Int64} array
  0.000465 seconds (8 allocations: 78.531 KiB)

100x100 sparse Float64 array (dense array in sparse format)
  0.116772 seconds (198.15 k allocations: 9.675 MiB)
100x100 sparse MPNumber{Float64} array (dense array in sparse format)
  0.102237 seconds (199.09 k allocations: 9.695 MiB)

100000x100000 sparse Float64 array (sprand(n,n,1/n))
  0.007495 seconds (20 allocations: 10.677 MiB)
100000x100000 sparse MPNumber{Float64} array (sprand(n,n,1/n))
  0.007558 seconds (20 allocations: 10.677 MiB)

100000x100000 sparse Float64 array (sprand(n,n,5/n))
  0.147927 seconds (22 allocations: 65.650 MiB, 4.86% gc time)
100000x100000 sparse MPNumber{Float64} array (sprand(n,n,5/n))
  0.146088 seconds (22 allocations: 65.650 MiB, 4.94% gc time)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-c1">PackageSpec</span>(url <span class="pl-k">=</span> <span class="pl-c1">pwd</span>())); Pkg<span class="pl-k">.</span><span class="pl-c1">build</span>()

julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">test</span>(<span class="pl-s"><span class="pl-pds">"</span>SemiringAlgebra<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SemiringAlgebra

julia<span class="pl-k">&gt;</span> SemiringAlgebra<span class="pl-k">.</span><span class="pl-c1">bench</span>(<span class="pl-c1">100</span>)

<span class="pl-c1">100</span>x100 Float64 array
  <span class="pl-c1">0.000345</span> seconds (<span class="pl-c1">2</span> allocations<span class="pl-k">:</span> <span class="pl-c1">78.203</span> KiB)
<span class="pl-c1">100</span>x100 MPNumber{Float64} array
  <span class="pl-c1">0.002951</span> seconds (<span class="pl-c1">8</span> allocations<span class="pl-k">:</span> <span class="pl-c1">78.531</span> KiB)

<span class="pl-c1">100</span>x100 Int64 array
  <span class="pl-c1">0.000643</span> seconds (<span class="pl-c1">8</span> allocations<span class="pl-k">:</span> <span class="pl-c1">78.531</span> KiB)
<span class="pl-c1">100</span>x100 MPNumber{Int64} array
  <span class="pl-c1">0.000465</span> seconds (<span class="pl-c1">8</span> allocations<span class="pl-k">:</span> <span class="pl-c1">78.531</span> KiB)

<span class="pl-c1">100</span>x100 sparse Float64 array (dense array <span class="pl-k">in</span> sparse format)
  <span class="pl-c1">0.116772</span> seconds (<span class="pl-c1">198.15</span> k allocations<span class="pl-k">:</span> <span class="pl-c1">9.675</span> MiB)
<span class="pl-c1">100</span>x100 sparse MPNumber{Float64} array (dense array <span class="pl-k">in</span> sparse format)
  <span class="pl-c1">0.102237</span> seconds (<span class="pl-c1">199.09</span> k allocations<span class="pl-k">:</span> <span class="pl-c1">9.695</span> MiB)

<span class="pl-c1">100000</span>x100000 sparse Float64 array (<span class="pl-c1">sprand</span>(n,n,<span class="pl-c1">1</span><span class="pl-k">/</span>n))
  <span class="pl-c1">0.007495</span> seconds (<span class="pl-c1">20</span> allocations<span class="pl-k">:</span> <span class="pl-c1">10.677</span> MiB)
<span class="pl-c1">100000</span>x100000 sparse MPNumber{Float64} array (<span class="pl-c1">sprand</span>(n,n,<span class="pl-c1">1</span><span class="pl-k">/</span>n))
  <span class="pl-c1">0.007558</span> seconds (<span class="pl-c1">20</span> allocations<span class="pl-k">:</span> <span class="pl-c1">10.677</span> MiB)

<span class="pl-c1">100000</span>x100000 sparse Float64 array (<span class="pl-c1">sprand</span>(n,n,<span class="pl-c1">5</span><span class="pl-k">/</span>n))
  <span class="pl-c1">0.147927</span> seconds (<span class="pl-c1">22</span> allocations<span class="pl-k">:</span> <span class="pl-c1">65.650</span> MiB, <span class="pl-c1">4.86</span><span class="pl-k">%</span> gc time)
<span class="pl-c1">100000</span>x100000 sparse MPNumber{Float64} array (<span class="pl-c1">sprand</span>(n,n,<span class="pl-c1">5</span><span class="pl-k">/</span>n))
  <span class="pl-c1">0.146088</span> seconds (<span class="pl-c1">22</span> allocations<span class="pl-k">:</span> <span class="pl-c1">65.650</span> MiB, <span class="pl-c1">4.94</span><span class="pl-k">%</span> gc time)</pre></div>
</article></div>