<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-live-server-for-julia" class="anchor" aria-hidden="true" href="#live-server-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Live Server for Julia</h1>
<p dir="auto"><a href="https://github.com/tlienart/LiveServer.jl/actions"><img src="https://github.com/tlienart/LiveServer.jl/workflows/CI/badge.svg" alt="CI Actions Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/tlienart/LiveServer.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/55e576e0521350fb3614381293ba956457569e3d11cc12a230acec7ab673960d/68747470733a2f2f636f6465636f762e696f2f67682f746c69656e6172742f4c6976655365727665722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d6d4e727936723261496e" alt="codecov" data-canonical-src="https://codecov.io/gh/tlienart/LiveServer.jl/branch/master/graph/badge.svg?token=mNry6r2aIn" style="max-width: 100%;"></a>
<a href="https://tlienart.github.io/LiveServer.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="dev-doc" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This is a simple and lightweight development web-server written in Julia,
based on <a href="https://github.com/JuliaWeb/HTTP.jl">HTTP.jl</a>.
It has live-reload capability, i.e. when modifying a file, every browser (tab)
currently displaying the corresponding page is automatically refreshed.</p>
<p dir="auto">LiveServer is inspired from Python's <a href="https://docs.python.org/3/library/http.server.html" rel="nofollow"><code>http.server</code></a>
and Node's <a href="https://www.browsersync.io/" rel="nofollow"><code>browsersync</code></a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">To install it in Julia ≥ 1.6, use the package manager with</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; add LiveServer"><pre lang="julia-repl" class="notranslate"><code>pkg&gt; add LiveServer
</code></pre></div>
<h3 dir="auto"><a id="user-content-legacy-notes" class="anchor" aria-hidden="true" href="#legacy-notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Legacy notes</h3>
<p dir="auto">For Julia <code>&lt; 1.6</code>, you can use LiveServer's version 0.9.2:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; add LiveServer@0.9.2"><pre lang="julia-repl" class="notranslate"><code>pkg&gt; add LiveServer@0.9.2
</code></pre></div>
<p dir="auto">For Julia <code>[1.0, 1.3)</code>, you can use LiveServer's version 0.7.4:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; add LiveServer@0.7.4"><pre lang="julia-repl" class="notranslate"><code>pkg&gt; add LiveServer@0.7.4
</code></pre></div>
<h3 dir="auto"><a id="user-content-make-it-a-shell-command" class="anchor" aria-hidden="true" href="#make-it-a-shell-command"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Make it a shell command</h3>
<p dir="auto">LiveServer is a small package and fast to load with one main functionality (<code>serve</code>),
it can be convenient to make it a shell command: (I'm using the name <code>lss</code> here but
you could use something else):</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="alias lss='julia -e &quot;import LiveServer as LS; LS.serve(launch_browser=true)&quot;'"><pre class="notranslate"><code>alias lss='julia -e "import LiveServer as LS; LS.serve(launch_browser=true)"'
</code></pre></div>
<p dir="auto">you can then use <code>lss</code> in any directory to show a directory listing in your browser,
and if the directory has an <code>index.html</code> then that will be rendered in your browser.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">The main function <code>LiveServer</code> exports is <code>serve</code> which starts listening to the current
folder and makes its content available to a browser.
The following code creates an example directory and serves it:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using LiveServer
julia&gt; LiveServer.example() # creates an &quot;example/&quot; folder with some files
julia&gt; cd(&quot;example&quot;)
julia&gt; serve() # starts the local server &amp; the file watching
✓ LiveServer listening on http://localhost:8000/ ...
  (use CTRL+C to shut down)"><pre lang="julia-repl" class="notranslate"><code>julia&gt; using LiveServer
julia&gt; LiveServer.example() # creates an "example/" folder with some files
julia&gt; cd("example")
julia&gt; serve() # starts the local server &amp; the file watching
✓ LiveServer listening on http://localhost:8000/ ...
  (use CTRL+C to shut down)
</code></pre></div>
<p dir="auto">Open a Browser and go to <code>http://localhost:8000/</code> to see the content being rendered;
try modifying files (e.g. <code>index.html</code>) and watch the changes being rendered immediately in the browser.</p>
<p dir="auto">In the REPL:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using LiveServer
julia&gt; serve(host=&quot;0.0.0.0&quot;, port=8001, dir=&quot;.&quot;) # starts the remote server &amp; the file watching
✓ LiveServer listening on http://0.0.0.0:8001...
  (use CTRL+C to shut down)"><pre lang="julia-repl" class="notranslate"><code>julia&gt; using LiveServer
julia&gt; serve(host="0.0.0.0", port=8001, dir=".") # starts the remote server &amp; the file watching
✓ LiveServer listening on http://0.0.0.0:8001...
  (use CTRL+C to shut down)
</code></pre></div>
<p dir="auto">In the terminal:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia -e 'using LiveServer; serve(host=&quot;0.0.0.0&quot;, port=8001, dir=&quot;.&quot;)'"><pre>julia -e <span class="pl-s"><span class="pl-pds">'</span>using LiveServer; serve(host="0.0.0.0", port=8001, dir=".")<span class="pl-pds">'</span></span></pre></div>
<p dir="auto">Open a browser and go to <a href="https://localhost:8001/" rel="nofollow">https://localhost:8001/</a> to see the rendered content of index.html or,
if it doesn't exist, the content of the directory.
You can set the port to a custom number.
This is similar to the <a href="https://docs.python.org/3/library/http.server.html" rel="nofollow"><code>http.server</code></a> in Python.</p>
<h3 dir="auto"><a id="user-content-serve-docs" class="anchor" aria-hidden="true" href="#serve-docs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Serve docs</h3>
<p dir="auto"><code>servedocs</code> is a convenience function that runs <code>Documenter</code> along with <code>LiveServer</code> to watch
your doc files for any changes and render them in your browser when modifications are detected.</p>
<p dir="auto">Assuming you are in <code>directory/to/YourPackage.jl</code>, that you have a <code>docs/</code> folder as
prescribed by <a href="https://github.com/JuliaDocs/Documenter.jl">Documenter.jl</a> and <code>LiveServer</code>
installed in your global environment, you can run:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="$ julia

pkg&gt; activate docs

julia&gt; using YourPackage, LiveServer

julia&gt; servedocs()
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: ExpandTemplates: expanding markdown templates.
...
└ Deploying: ✘
✓ LiveServer listening on http://localhost:8000/ ...
  (use CTRL+C to shut down)"><pre lang="julia-repl" class="notranslate"><code>$ julia

pkg&gt; activate docs

julia&gt; using YourPackage, LiveServer

julia&gt; servedocs()
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: ExpandTemplates: expanding markdown templates.
...
└ Deploying: ✘
✓ LiveServer listening on http://localhost:8000/ ...
  (use CTRL+C to shut down)
</code></pre></div>
<p dir="auto">Open a browser and go to <code>http://localhost:8000/</code> to see your docs being rendered;
try modifying files (e.g. <code>docs/index.md</code>) and watch the changes being rendered in the browser.</p>
<p dir="auto">To run the server with one line of code, run:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="$ julia --project=docs -ie 'using YourPackage, LiveServer; servedocs()'"><pre class="notranslate"><code>$ julia --project=docs -ie 'using YourPackage, LiveServer; servedocs()'
</code></pre></div>
<p dir="auto"><strong>Note</strong>: this works with <a href="https://github.com/fredrikekre/Literate.jl">Literate.jl</a> as well.
See <a href="https://tlienart.github.io/LiveServer.jl/dev/man/ls+lit/" rel="nofollow">the docs</a>.</p>
<h2 dir="auto"><a id="user-content-devpath-testing" class="anchor" aria-hidden="true" href="#devpath-testing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DEV/Path testing</h2>
<p dir="auto">See also issue #135 and related PRs.</p>
<ul dir="auto">
<li><code>servedocs()</code>, navigate to literate, images should show</li>
<li><code>serve()</code> navigate manually to <code>docs/build/</code> should show, remove trailing slash in URL <code>docs/build</code> should redirect to <code>docs/build/</code></li>
<li><code>serve(dir=...)</code> should work + when navigating to assets etc</li>
</ul>
</article></div>