<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-sgearraysjl" class="anchor" aria-hidden="true" href="#sgearraysjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SGEArrays.jl</h1>
<p dir="auto"><a href="https://travis-ci.org/davidavdav/SGEArrays.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c6d24d922f31c205a87753ac4f8af4985934261edbfd2f0643fee6fa5bd40f9e/68747470733a2f2f7472617669732d63692e6f72672f646176696461766461762f5347454172726179732e6a6c2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/davidavdav/SGEArrays.jl.svg" style="max-width: 100%;"></a></p>
<p dir="auto">SGEArray implements a simple iterator in Julia to efficiently handle Sun Grid Engine task arrays</p>
<h2 dir="auto"><a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Synopsis</h2>
<p dir="auto">Julia main:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SGEArrays

listfile = ARGS[1]
files = readdlm(listfile)

for file in SGEArray(files)
  ## process file $file 
end"><pre><span class="pl-k">using</span> SGEArrays

listfile <span class="pl-k">=</span> <span class="pl-c1">ARGS</span>[<span class="pl-c1">1</span>]
files <span class="pl-k">=</span> <span class="pl-c1">readdlm</span>(listfile)

<span class="pl-k">for</span> file <span class="pl-k">in</span> <span class="pl-c1">SGEArray</span>(files)
  <span class="pl-c"><span class="pl-c">#</span># process file $file </span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">bash call, submit an SGE array job as an array of size 80</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="find data/input/ -type f &gt; filelist
qsub -t 1-80 -b y -cwd bin/julia-script filelist"><pre>find data/input/ -type f <span class="pl-k">&gt;</span> filelist
qsub -t 1-80 -b y -cwd bin/julia-script filelist</pre></div>
<p dir="auto">The first job in the array processes files[1], files[81], etc, the second job processes files[2], files[82], etc.</p>
<p dir="auto">If the julia script is called outside the context of an SGE array, the iterator simply iterates over all elements.</p>
</article></div>