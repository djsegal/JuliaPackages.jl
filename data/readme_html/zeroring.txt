<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-the-zero-ring" class="anchor" aria-hidden="true" href="#the-zero-ring"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>The Zero ring</h1>
<p dir="auto">A number type that has only one value (zero) and needs no storage: see
<a href="https://en.wikipedia.org/wiki/Zero_ring" rel="nofollow">https://en.wikipedia.org/wiki/Zero_ring</a>.</p>
<ul dir="auto">
<li><a href="https://github.com/eschnett/ZeroRing.jl">GitHub</a>: Source code
repository</li>
<li><a href="https://github.com/eschnett/ZeroRing.jl/actions"><img src="https://github.com/eschnett/ZeroRing.jl/workflows/CI/badge.svg" alt="GitHub CI" style="max-width: 100%;"></a></li>
</ul>
<h2 dir="auto"><a id="user-content-why-would-i-need-this" class="anchor" aria-hidden="true" href="#why-would-i-need-this"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Why would I need this?</h2>
<p dir="auto">The <em>zero ring</em> is a very special type of number: There is only one
value (zero). Booleans, for example, have two values (<code>false</code> and
<code>true</code>), <code>Int8</code> have 256 values, etc. A <code>ZeroElem</code> has only one value
(<code>zeroelem</code>). This is similar to <code>Nothing</code>, except that <code>ZeroElem</code> is
a subtype of <code>Number</code> whereas <code>Nothing</code> isn't, and it doesn't indicate
that some information is missing (as <code>Missing</code> would).</p>
<p dir="auto">At times, you might have a data structure holding numbers, but one is
only interested in the "skeleton" of the data structure, and not into
the numbers it can hold. Examples are:</p>
<ul dir="auto">
<li>a graph with weighted edges, but the weights are not relevant</li>
<li>a sparse matrix, but only the sparsity structure is interesting</li>
</ul>
<h2 dir="auto"><a id="user-content-why-cant-i-use-nothing-or-missing-instead" class="anchor" aria-hidden="true" href="#why-cant-i-use-nothing-or-missing-instead"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Why can't I use <code>Nothing</code> or <code>Missing</code> instead?</h2>
<p dir="auto"><code>Nothing</code> is not a subtype of <code>Number</code>, which makes some linear
algebra operations fail. It would, of course, in principle be possible
to make <code>Nothing</code> be a subtype of <code>Number</code>, but this is not a good
idea as <code>Nothing</code> is a general concept that has nothing to do with
numbers, addition, multiplication, etc.</p>
<p dir="auto">In a similar manner, <code>Missing</code> indicates that certain information is
missing. This is not the case here; all the necessary information is
there. It makes sense to define <code>missing + zeroelem</code>, and the result
should be <code>missing</code>.</p>
<h2 dir="auto"><a id="user-content-what-is-the-advantage-of-zeroelem" class="anchor" aria-hidden="true" href="#what-is-the-advantage-of-zeroelem"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>What is the advantage of <code>ZeroElem</code>?</h2>
<p dir="auto">A <code>ZeroElem</code> number takes no storage:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; @allocated Array{ZeroElem}(undef, 1000)
80

julia&gt; @allocated Array{Nothing}(undef, 1000)
80

julia&gt; @allocated Array{Bool}(undef, 1000)
1088"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@allocated</span> <span class="pl-c1">Array</span><span class="pl-c1">{ZeroElem}</span>(undef, <span class="pl-c1">1000</span>)
<span class="pl-c1">80</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@allocated</span> <span class="pl-c1">Array</span><span class="pl-c1">{Nothing}</span>(undef, <span class="pl-c1">1000</span>)
<span class="pl-c1">80</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@allocated</span> <span class="pl-c1">Array</span><span class="pl-c1">{Bool}</span>(undef, <span class="pl-c1">1000</span>)
<span class="pl-c1">1088</span></pre></div>
<p dir="auto">The 80 bytes reported here are for the array metadata (its size and
shape etc.); there are no actual data allocated.</p>
</article></div>