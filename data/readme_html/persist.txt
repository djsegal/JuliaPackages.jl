<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-persist" class="anchor" aria-hidden="true" href="#persist"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Persist</h1>
<p><a href="https://travis-ci.org/eschnett/Persist.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/30dbcd93005b36184624b38ba6b45c90cdef6b10/68747470733a2f2f7472617669732d63692e6f72672f657363686e6574742f506572736973742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/eschnett/Persist.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/eschnett/persist-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/81da06081bc0fa93e3b7afc5c817927ff8e00fa3/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f797866666732763274623930766e66322f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/yxffg2v2tb90vnf2/branch/master?svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/github/eschnett/Persist.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/603cab94a2abb57037226e21db77fa5151ed2d70/68747470733a2f2f636f6465636f762e696f2f6769746875622f657363686e6574742f506572736973742e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/eschnett/Persist.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://dependencyci.com/github/eschnett/Persist.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2892476969dfc9f18297c5bfd388ca1b4c065298/68747470733a2f2f646570656e64656e637963692e636f6d2f6769746875622f657363686e6574742f506572736973742e6a6c2f6261646765" alt="Dependency Status" data-canonical-src="https://dependencyci.com/github/eschnett/Persist.jl/badge" style="max-width:100%;"></a></p>
<p>Persistent jobs for Julia.</p>
<h2><a id="user-content-what-does-it-do" class="anchor" aria-hidden="true" href="#what-does-it-do"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>What does it do?</h2>
<p>The package <code>Persist</code> allows running jobs independent of the Julia shell. The jobs are run in the background, either on the local machine or via Slurm, and are not interrupted when the Julia shell exits. This is a convenient and safe way to start long-running calculations, without having to write a Julia script.</p>
<h2><a id="user-content-why-is-this-a-good-idea" class="anchor" aria-hidden="true" href="#why-is-this-a-good-idea"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Why is this a good idea?</h2>
<p>Programming in Julia typically proceeds in two stages: First one writes some exploratory code in the shell (or via Jupyter). Later, when the code becomes more sophisticated, one converts part of the code to a Julia package that is developed in an editor outside the Julia shell. One still uses the Julia shell to test the package.</p>
<p>As code complexity increases, so do the run times. What takes a few seconds initially turns into minutes and then hours of run time. This then makes things inconvenient:</p>
<ul>
<li>While one long-running command is executing, the Julia shell is blocked</li>
<li>If the command is started in the background, one may accidentally overwrite or delete data that it is accessing</li>
<li>If the Julia shell exists, or the network connection is lost, the background process is aborted</li>
</ul>
<p>This package <code>Persist</code> circumvents these problems: It allows wrapping a Julia command in a shell script that is run in the background, independent of the Julia shell.</p>
<h2><a id="user-content-how-do-i-use-it" class="anchor" aria-hidden="true" href="#how-do-i-use-it"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>How do I use it?</h2>
<p>Here is an example:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Persist

<span class="pl-c"><span class="pl-c">#</span> Start a calculation in the background</span>
job <span class="pl-k">=</span> <span class="pl-c1">persist</span>(<span class="pl-s"><span class="pl-pds">"</span>hello<span class="pl-pds">"</span></span>, ProcessManager) <span class="pl-k">do</span>
    <span class="pl-c1">sleep</span>(<span class="pl-c1">10</span>)   <span class="pl-c"><span class="pl-c">#</span> Simulate a long-running task</span>
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello, World!<span class="pl-pds">"</span></span>)   <span class="pl-c"><span class="pl-c">#</span> Produce some output</span>
    <span class="pl-k">return</span> [<span class="pl-c1">42</span>]   <span class="pl-c"><span class="pl-c">#</span> Return a value</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Do something else</span>

<span class="pl-c"><span class="pl-c">#</span> Check on the background job</span>
<span class="pl-c1">status</span>(job)

<span class="pl-c"><span class="pl-c">#</span> Get the job's result</span>
<span class="pl-c1">fetch</span>(job)
<span class="pl-c1">getstdout</span>(job)
<span class="pl-c1">getstderr</span>(job)
<span class="pl-c1">wait</span>(job)
<span class="pl-c1">cleanup</span>(job)</pre></div>
<p>You can also use Slurm to submit a job:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Persist

<span class="pl-c1">persist</span>(<span class="pl-s"><span class="pl-pds">"</span>calcpi<span class="pl-pds">"</span></span>, SlurmManager) <span class="pl-k">do</span>
    <span class="pl-c1">sleep</span>(<span class="pl-c1">10</span>)
    <span class="pl-c1">big</span>(pi)
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Jobs are written to file, and can be read back in</span>
job <span class="pl-k">=</span> <span class="pl-c1">readmgr</span>(<span class="pl-s"><span class="pl-pds">"</span>calcpi<span class="pl-pds">"</span></span>)
<span class="pl-c1">jobinfo</span>(job)
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>pi = <span class="pl-v">$(<span class="pl-c1">fetch</span>(job))</span><span class="pl-pds">"</span></span>)
<span class="pl-c1">cleanup</span>(job)</pre></div>
<h2><a id="user-content-how-does-it-work" class="anchor" aria-hidden="true" href="#how-does-it-work"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>How does it work?</h2>
<p>Simple, really.</p>
<p>The Julia expression is serialized and written to a file. A shell script is generated that is executed in the background (or via Slurm). This script reads the expression, executes it, and serializes the result to another file. Various commands examine the status of the job. <code>fetch</code> deserializes the result once the job has finished.</p>
<p>This is very similar to the way in which <code>@spawn</code> or <code>@everywhere</code> works, except that the expression is evaluated independently of the Julia shell. The same caveats regarding defining functions and using modules apply.</p>
<h2><a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Reference</h2>
<h4><a id="user-content-create-a-new-job" class="anchor" aria-hidden="true" href="#create-a-new-job"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Create a new job</h4>
<div class="highlight highlight-source-julia"><pre>mgr <span class="pl-k">=</span> <span class="pl-c1">@persist</span> name manager expression
mgr <span class="pl-k">=</span> <span class="pl-c1">persist</span>(<span class="pl-k">function</span>, name, manager)</pre></div>
<ul>
<li><code>name::AbstractString</code>: Job name</li>
<li><code>manager::JobManager</code>: Either <code>ProcessManager</code> or <code>SlurmManager</code></li>
<li><code>expression::Any</code>, <code>function::Any</code>: Expression or function to evaluate</li>
<li><code>mgr::JobManager</code>: Job manager object</li>
</ul>
<h4><a id="user-content-read-a-job-descriptor-from-file" class="anchor" aria-hidden="true" href="#read-a-job-descriptor-from-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Read a job descriptor from file</h4>
<div class="highlight highlight-source-julia"><pre>mgr <span class="pl-k">=</span> <span class="pl-c1">readmgr</span>(name)</pre></div>
<ul>
<li><code>name::AbstractString</code>: Job name</li>
<li><code>mgr::JobManager</code>: Job manager object</li>
</ul>
<h4><a id="user-content-determine-job-status" class="anchor" aria-hidden="true" href="#determine-job-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Determine job status</h4>
<div class="highlight highlight-source-julia"><pre>st <span class="pl-k">=</span> <span class="pl-c1">status</span>(mgr)</pre></div>
<ul>
<li><code>mgr::JobManager</code>: Job manager object</li>
<li><code>st::JobStatus</code>: Job status; one of <code>job_empty</code>, <code>job_queued</code>, <code>job_runnig</code>, <code>job_done</code>, <code>job_failed</code></li>
</ul>
<h4><a id="user-content-describe-job-status" class="anchor" aria-hidden="true" href="#describe-job-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Describe job status</h4>
<div class="highlight highlight-source-julia"><pre>st <span class="pl-k">=</span> <span class="pl-c1">jobinfo</span>(mgr)</pre></div>
<ul>
<li><code>mgr::JobManager</code>: Job manager object</li>
<li><code>st::AbstractString</code>: Human-readable job status description, as e.g. output by <code>ps</code> or <code>squeue</code></li>
</ul>
<h4><a id="user-content-cancel-abort-job" class="anchor" aria-hidden="true" href="#cancel-abort-job"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Cancel (abort) job</h4>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">cancel</span>(mgr)</pre></div>
<ul>
<li><code>mgr::JobManager</code>: Job manager object</li>
</ul>
<h4><a id="user-content-determine-whether-job-is-done" class="anchor" aria-hidden="true" href="#determine-whether-job-is-done"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Determine whether job is done</h4>
<div class="highlight highlight-source-julia"><pre>st <span class="pl-k">=</span> <span class="pl-c1">isready</span>(mgr)</pre></div>
<ul>
<li><code>mgr::JobManager</code>: Job manager object</li>
<li><code>st::Bool</code>: Whether the job is done</li>
</ul>
<h4><a id="user-content-wait-for-a-job-to-complete" class="anchor" aria-hidden="true" href="#wait-for-a-job-to-complete"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Wait for a job to complete</h4>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">wait</span>(mgr)</pre></div>
<ul>
<li><code>mgr::JobManager</code>: Job manager object
After waiting, <code>isready(mgr) == true</code>.</li>
</ul>
<h4><a id="user-content-obtain-job-result" class="anchor" aria-hidden="true" href="#obtain-job-result"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Obtain job result</h4>
<div class="highlight highlight-source-julia"><pre>result <span class="pl-k">=</span> <span class="pl-c1">fetch</span>(mgr)</pre></div>
<ul>
<li><code>mgr::JobManager</code>: Job manager object</li>
<li><code>result::Any</code>: Job result (i.e. its return value)
Wait for the job to complete, then return the job's result.</li>
</ul>
<h4><a id="user-content-obtain-job-output" class="anchor" aria-hidden="true" href="#obtain-job-output"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Obtain job output</h4>
<div class="highlight highlight-source-julia"><pre>out <span class="pl-k">=</span> <span class="pl-c1">getstdout</span>(mgr)
err <span class="pl-k">=</span> <span class="pl-c1">getstderr</span>(mgr)</pre></div>
<ul>
<li><code>mgr::JobManager</code>: Job manager object</li>
<li><code>out::AbstractString</code>: Job output (what the job wrote to <code>stdout</code>)</li>
<li><code>err::AbstractString</code>: Job output (what the job wrote to <code>stderr</code>)
Partial job output may (or may not) be available while the job is running.</li>
</ul>
<h4><a id="user-content-clean-up-after-a-job" class="anchor" aria-hidden="true" href="#clean-up-after-a-job"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Clean up after a job</h4>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">cleanup</span>(mgr)</pre></div>
<ul>
<li><code>mgr::JobManager</code>: Job manager object
This deletes all information about the job, its result, and its output.</li>
</ul>
</article></div>