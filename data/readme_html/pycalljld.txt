<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-pycalljldjl" class="anchor" aria-hidden="true" href="#pycalljldjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PyCallJLD.jl</h1>
<p><a href="https://travis-ci.org/JuliaPy/PyCallJLD.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3067c4da1f1e45aebc660f205e73e134a8e0df0d/68747470733a2f2f7472617669732d63692e6f72672f4a756c696150792f507943616c6c4a4c442e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaPy/PyCallJLD.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://coveralls.io/github/JuliaPy/PyCallJLD.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/bdbfb0189674833f610033b713449bb500e4370f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c696150792f507943616c6c4a4c442e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaPy/PyCallJLD.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/JuliaPy/PyCallJLD.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/0c54c73cf55a1ee2003825f65390dcb8d61b27fd/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c696150792f507943616c6c4a4c442e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaPy/PyCallJLD.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>PyCallJLD enables saving and loading <a href="https://github.com/JuliaPy/PyCall.jl">PyCall's <code>PyObject</code>s</a> using <a href="https://github.com/JuliaIO/JLD.jl/">JLD.jl</a>. Example:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> PyCall, JLD, PyCallJLD

<span class="pl-c1">@pyimport</span> sklearn<span class="pl-k">.</span>linear_model as lm

<span class="pl-c"><span class="pl-c">#</span> Create some Python objects</span>
m1 <span class="pl-k">=</span> lm<span class="pl-k">.</span><span class="pl-c1">LinearRegression</span>()
m2 <span class="pl-k">=</span> lm<span class="pl-k">.</span><span class="pl-c1">ARDRegression</span>()

<span class="pl-c"><span class="pl-c">#</span> Save them to models.jld</span>
JLD<span class="pl-k">.</span><span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>models.jld<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>mods<span class="pl-pds">"</span></span>, [m1, m2])

<span class="pl-c"><span class="pl-c">#</span> Load them back</span>
models <span class="pl-k">=</span> JLD<span class="pl-k">.</span><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>models.jld<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>mods<span class="pl-pds">"</span></span>)</pre></div>
<p>The objects are serialized using <a href="https://docs.python.org/2/library/pickle.html#pickle.dumps" rel="nofollow"><code>cPickle.dumps</code></a></p>
<p>See <a href="https://github.com/JuliaPy/PyCall.jl">PyCall</a>'s and
<a href="https://github.com/JuliaIO/JLD.jl/">JLD</a>'s documentation for details.</p>
</article></div>