<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-lamemjl" class="anchor" aria-hidden="true" href="#lamemjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LaMEM.jl</h1>
<p dir="auto"><a href="https://github.com/JuliaGeodynamics/LaMEM.jl/actions"><img src="https://github.com/JuliaGeodynamics/LaMEM.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://juliageodynamics.github.io/LaMEM.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This is the Julia interface to <a href="https://github.com/UniMainzGeo/LaMEM/">LaMEM</a>) (Lithosphere and Mantle Evolution Model), which is the easiest way to install LaMEM on any system. It allows you to start a (parallel) LaMEM simulation, and read back the output files to julia for further processing.</p>
<h3 dir="auto"><a id="user-content-1-installation" class="anchor" aria-hidden="true" href="#1-installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>1. Installation</h3>
<p dir="auto">Go to the package manager &amp; install it with:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt;]
pkg&gt;add LaMEM"><pre>julia<span class="pl-k">&gt;</span>]
pkg<span class="pl-k">&gt;</span>add LaMEM</pre></div>
<p dir="auto">It will automatically download a binary version of LaMEM which runs in parallel (along with the correct PETSc version). This will work on linux, mac and windows.</p>
<h3 dir="auto"><a id="user-content-2-starting-a-simulation" class="anchor" aria-hidden="true" href="#2-starting-a-simulation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>2. Starting a simulation</h3>
<p dir="auto">As usual, you need a LaMEM (<code>*.dat</code>) input file, which you can run in parallel (here on 4 cores) with:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ParamFile=&quot;input_files/FallingBlock_Multigrid.dat&quot;;
julia&gt; run_lamem(ParamFile, 4,&quot;-time_end 1&quot;)
-------------------------------------------------------------------------- 
                   Lithosphere and Mantle Evolution Model                   
     Compiled: Date: Sep 10 2022 - Time: 06:21:30           
-------------------------------------------------------------------------- 
        STAGGERED-GRID FINITE DIFFERENCE CANONICAL IMPLEMENTATION           
-------------------------------------------------------------------------- 
Parsing input file : input_files/FallingBlock_Multigrid.dat 
   Adding PETSc option: -snes_type ksponly
   Adding PETSc option: -js_ksp_monitor
   Adding PETSc option: -crs_pc_type bjacobi
Finished parsing input file : input_files/FallingBlock_Multigrid.dat 
--------------------------------------------------------------------------
Time stepping parameters:
   Simulation end time          : 1. [ ] 
   Maximum number of steps      : 10 
   Time step                    : 10. [ ] 
   Minimum time step            : 1e-05 [ ] 
   Maximum time step            : 100. [ ] 
   Time step increase factor    : 0.1 
   CFL criterion                : 0.5 
   CFLMAX (fixed time steps)    : 0.5 
   Output time step             : 0.2 [ ] 
   Output every [n] steps       : 1 
   Output [n] initial steps     : 1 
--------------------------------------------------------------------------"><pre>julia<span class="pl-k">&gt;</span> ParamFile<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>input_files/FallingBlock_Multigrid.dat<span class="pl-pds">"</span></span>;
julia<span class="pl-k">&gt;</span> <span class="pl-c1">run_lamem</span>(ParamFile, <span class="pl-c1">4</span>,<span class="pl-s"><span class="pl-pds">"</span>-time_end 1<span class="pl-pds">"</span></span>)
<span class="pl-k">--------------------------------------------------------------------------</span> 
                   Lithosphere and Mantle Evolution Model                   
     Compiled<span class="pl-k">:</span> Date<span class="pl-k">:</span> Sep <span class="pl-c1">10</span> <span class="pl-c1">2022</span> <span class="pl-k">-</span> Time<span class="pl-k">:</span> <span class="pl-c1">06</span><span class="pl-k">:</span><span class="pl-c1">21</span><span class="pl-k">:</span><span class="pl-c1">30</span>           
<span class="pl-k">--------------------------------------------------------------------------</span> 
        STAGGERED<span class="pl-k">-</span>GRID FINITE DIFFERENCE CANONICAL IMPLEMENTATION           
<span class="pl-k">--------------------------------------------------------------------------</span> 
Parsing input file <span class="pl-k">:</span> input_files<span class="pl-k">/</span>FallingBlock_Multigrid<span class="pl-k">.</span>dat 
   Adding PETSc option<span class="pl-k">:</span> <span class="pl-k">-</span>snes_type ksponly
   Adding PETSc option<span class="pl-k">:</span> <span class="pl-k">-</span>js_ksp_monitor
   Adding PETSc option<span class="pl-k">:</span> <span class="pl-k">-</span>crs_pc_type bjacobi
Finished parsing input file <span class="pl-k">:</span> input_files<span class="pl-k">/</span>FallingBlock_Multigrid<span class="pl-k">.</span>dat 
<span class="pl-k">--------------------------------------------------------------------------</span>
Time stepping parameters<span class="pl-k">:</span>
   Simulation <span class="pl-k">end</span> time          <span class="pl-k">:</span> <span class="pl-c1">1.</span> [ ] 
   Maximum number of steps      <span class="pl-k">:</span> <span class="pl-c1">10</span> 
   Time step                    <span class="pl-k">:</span> <span class="pl-c1">10.</span> [ ] 
   Minimum time step            <span class="pl-k">:</span> <span class="pl-c1">1e-05</span> [ ] 
   Maximum time step            <span class="pl-k">:</span> <span class="pl-c1">100.</span> [ ] 
   Time step increase factor    <span class="pl-k">:</span> <span class="pl-c1">0.1</span> 
   CFL criterion                <span class="pl-k">:</span> <span class="pl-c1">0.5</span> 
   CFLMAX (fixed time steps)    <span class="pl-k">:</span> <span class="pl-c1">0.5</span> 
   Output time step             <span class="pl-k">:</span> <span class="pl-c1">0.2</span> [ ] 
   Output every [n] steps       <span class="pl-k">:</span> <span class="pl-c1">1</span> 
   Output [n] initial steps     <span class="pl-k">:</span> <span class="pl-c1">1</span> 
<span class="pl-k">--------------------------------------------------------------------------</span></pre></div>
<p dir="auto">The last parameter are optional PETSc command-line options. By default it runs on one processor.</p>
<p dir="auto">Please note that you will have to be in the correct directory or indicate where that directory is. If you are in a different directory, the easiest way to change to the correct one is by using the <code>changefolder</code> function (on Windows and Mac):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; changefolder()"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">changefolder</span>()</pre></div>
<p dir="auto">Alternatively, you can use the build-in terminal/shell in julia, which you can access with:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt;;
shell&gt;cd ~/LaMEM/input_models/BuildInSetups/"><pre>julia<span class="pl-k">&gt;</span>;
shell<span class="pl-k">&gt;</span>cd <span class="pl-k">~</span><span class="pl-k">/</span>LaMEM<span class="pl-k">/</span>input_models<span class="pl-k">/</span>BuildInSetups<span class="pl-k">/</span></pre></div>
<p dir="auto">use the Backspace key to return to the julia REPL.</p>
<p dir="auto">Once you have performed a simulation, you can look at the results by opening the <code>*.pvd</code> files with Paraview. In this example, that would be <code>FB_multigrid.pvd</code> and <code>FB_multigrid_phase.pvd</code>.</p>
<h3 dir="auto"><a id="user-content-3-reading-lamem-output-back-into-julia" class="anchor" aria-hidden="true" href="#3-reading-lamem-output-back-into-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>3. Reading LaMEM output back into julia</h3>
<p dir="auto">If you want to quantitatively do something with the results, there is an easy way to read the output of a LaMEM timestep back into julia. All routines related to that are part of the <code>LaMEM.IO</code> module.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using LaMEM"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> LaMEM</pre></div>
<p dir="auto">You can first read the <code>*.pvd</code> file in the directory to see which timesteps are available:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; FileName=&quot;FB_multigrid&quot;
julia&gt; DirName =&quot;test&quot;
julia&gt; Timestep, Filenames, Time = Read_LaMEM_simulation(FileName, DirName)
([0, 1], [&quot;Timestep_00000000_0.00000000e+00/FB_multigrid.pvtr&quot;, &quot;Timestep_00000001_6.72970343e+00/FB_multigrid.pvtr&quot;], [0.0, 6.729703])"><pre>julia<span class="pl-k">&gt;</span> FileName<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>FB_multigrid<span class="pl-pds">"</span></span>
julia<span class="pl-k">&gt;</span> DirName <span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>
julia<span class="pl-k">&gt;</span> Timestep, Filenames, Time <span class="pl-k">=</span> <span class="pl-c1">Read_LaMEM_simulation</span>(FileName, DirName)
([<span class="pl-c1">0</span>, <span class="pl-c1">1</span>], [<span class="pl-s"><span class="pl-pds">"</span>Timestep_00000000_0.00000000e+00/FB_multigrid.pvtr<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Timestep_00000001_6.72970343e+00/FB_multigrid.pvtr<span class="pl-pds">"</span></span>], [<span class="pl-c1">0.0</span>, <span class="pl-c1">6.729703</span>])</pre></div>
<p dir="auto">We can read a particular timestep (say 1) with:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; data, time = Read_LaMEM_timestep(FileName, 1, DirName)
(CartData 
    size    : (33, 33, 33)
    x       ϵ [ 0.0 : 1.0]
    y       ϵ [ 0.0 : 1.0]
    z       ϵ [ 0.0 : 1.0]
    fields  : (:phase, :visc_total, :visc_creep, :velocity, :pressure, :strain_rate, :j2_dev_stress, :j2_strain_rate)
  attributes: [&quot;note&quot;]
, [6.729703])"><pre>julia<span class="pl-k">&gt;</span> data, time <span class="pl-k">=</span> <span class="pl-c1">Read_LaMEM_timestep</span>(FileName, <span class="pl-c1">1</span>, DirName)
(CartData 
    size    <span class="pl-k">:</span> (<span class="pl-c1">33</span>, <span class="pl-c1">33</span>, <span class="pl-c1">33</span>)
    x       ϵ [ <span class="pl-c1">0.0</span> <span class="pl-k">:</span> <span class="pl-c1">1.0</span>]
    y       ϵ [ <span class="pl-c1">0.0</span> <span class="pl-k">:</span> <span class="pl-c1">1.0</span>]
    z       ϵ [ <span class="pl-c1">0.0</span> <span class="pl-k">:</span> <span class="pl-c1">1.0</span>]
    fields  <span class="pl-k">:</span> (<span class="pl-c1">:phase</span>, <span class="pl-c1">:visc_total</span>, <span class="pl-c1">:visc_creep</span>, <span class="pl-c1">:velocity</span>, <span class="pl-c1">:pressure</span>, <span class="pl-c1">:strain_rate</span>, <span class="pl-c1">:j2_dev_stress</span>, <span class="pl-c1">:j2_strain_rate</span>)
  attributes<span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">"</span>note<span class="pl-pds">"</span></span>]
, [<span class="pl-c1">6.729703</span>])</pre></div>
<p dir="auto">The output is in a <code>CartData</code> structure (as defined in GeophysicalModelGenerator).
More details are given in the documentation.</p>
<h3 dir="auto"><a id="user-content-4-dependencies" class="anchor" aria-hidden="true" href="#4-dependencies"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>4. Dependencies</h3>
<p dir="auto">We rely on the following packages:</p>
<ul dir="auto">
<li><a href="https://github.com/JuliaGeodynamics/GeophysicalModelGenerator.jl">GeophysicalModelGenerator</a> - Data structure in which we store the info of a LaMEM timestep. The package can also be used to generate setups for LaMEM.</li>
<li><a href="https://github.com/JuliaRegistries/General/tree/master/L/LaMEM_jll">LaMEM_jll</a> - this contains the LaMEM binaries, precompiled for most systems. Note that on windows, the MUMPS parallel direct solver is not available.</li>
<li><a href="https://github.com/JuliaVTK/ReadVTK.jl">ReadVTK</a> - This reads the LaMEM <code>*.vtk</code> files (or the rectilinear and structured grid versions of it)  baxck into julia.</li>
</ul>
</article></div>