<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-rootedtrees" class="anchor" aria-hidden="true" href="#rootedtrees"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RootedTrees</h1>
<p dir="auto"><a href="https://SciML.github.io/RootedTrees.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Docs-stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://SciML.github.io/RootedTrees.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Docs-dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/RootedTrees.jl/actions?query=workflow%3ACI"><img src="https://github.com/SciML/RootedTrees.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/SciML/RootedTrees.jl?branch=main" rel="nofollow"><img src="https://camo.githubusercontent.com/0b23ed3c56b46d283cff5bb4c57843db73636eaf3ba16ce67a9a2c7eb05eddd0/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f5363694d4c2f526f6f74656454726565732e6a6c2f62616467652e7376673f6272616e63683d6d61696e" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/SciML/RootedTrees.jl/badge.svg?branch=main" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/SciML/RootedTrees.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ed30377ec1fa6dd4444225cd04cf83ac8b35cb5855eec4024e766a5886315232/68747470733a2f2f636f6465636f762e696f2f67682f5363694d4c2f526f6f74656454726565732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/SciML/RootedTrees.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://opensource.org/licenses/MIT" rel="nofollow"><img src="https://camo.githubusercontent.com/2da4b47047416995ad40532496f4b028e9aeca4a9ad036ed17bee5d2fb753b32/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d737563636573732e737667" alt="License: MIT" data-canonical-src="https://img.shields.io/badge/License-MIT-success.svg" style="max-width: 100%;"></a>
<a href="https://doi.org/10.5281/zenodo.5534590" rel="nofollow"><img src="https://camo.githubusercontent.com/271d55f98a4a3ce5734a5996f702c2767d80eaba021c1e5da0e42ddea0e84e44/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e353533343539302e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.5534590.svg" style="max-width: 100%;"></a>
<a href="https://pkgs.genieframework.com?packages=RootedTrees" rel="nofollow"><img src="https://camo.githubusercontent.com/515ed618205242bf94c85b20d40708cbddba4c35f6769117d4c650b664f0868b/68747470733a2f2f736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f706b67732e67656e69656672616d65776f726b2e636f6d2f6170692f76312f62616467652f526f6f7465645472656573" alt="Downloads" data-canonical-src="https://shields.io/endpoint?url=https://pkgs.genieframework.com/api/v1/badge/RootedTrees" style="max-width: 100%;"></a></p>
<p dir="auto">A collection of functionality around rooted trees to generate order conditions
for Runge-Kutta methods in <a href="https://julialang.org/" rel="nofollow">Julia</a>.
This package also provides basic functionality for
<a href="https://github.com/ranocha/BSeries.jl">BSeries.jl</a>.</p>
<h2 dir="auto"><a id="user-content-api-documentation" class="anchor" aria-hidden="true" href="#api-documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>API Documentation</h2>
<p dir="auto">The API of RootedTrees.jl is documented in the following. Additional information
on each function is available in their docstrings and in the
<a href="https://SciML.github.io/RootedTrees.jl/stable" rel="nofollow">online documentation</a>.</p>
<h3 dir="auto"><a id="user-content-construction" class="anchor" aria-hidden="true" href="#construction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Construction</h3>
<p dir="auto"><code>RootedTree</code>s are represented using level sequences, i.e., <code>AbstractVector</code>s
containing the distances of the nodes from the root, see</p>
<ul dir="auto">
<li>Beyer, Terry, and Sandra Mitchell Hedetniemi.
"Constant time generation of rooted trees".
SIAM Journal on Computing 9.4 (1980): 706-712.
<a href="https://doi.org/10.1137/0209055" rel="nofollow">DOI: 10.1137/0209055</a></li>
</ul>
<p dir="auto"><code>RootedTree</code>s can be constructed from their level sequence using</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; t = rootedtree([1, 2, 3, 2])
RootedTree{Int64}: [1, 2, 3, 2]"><pre>julia<span class="pl-k">&gt;</span> t <span class="pl-k">=</span> <span class="pl-c1">rootedtree</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>])
RootedTree{Int64}<span class="pl-k">:</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>]</pre></div>
<p dir="auto">In the notation of <a href="https://doi.org/10.1002/9781119121534" rel="nofollow">Butcher (Numerical Methods for ODEs, 2016)</a>,
this tree can be written as <code>[[τ] τ]</code> or <code>(τ ∘ τ) ∘ (τ ∘ τ)</code>, where
<code>∘</code> is the non-associative Butcher product of <code>RootedTree</code>s, which is also
implemented.</p>
<p dir="auto">To get the representation of a <code>RootedTree</code> introduced by Butcher, use <code>butcher_representation</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; t = rootedtree([1, 2, 3, 4, 3, 3, 2, 2, 2, 2, 2])
RootedTree{Int64}: [1, 2, 3, 4, 3, 3, 2, 2, 2, 2, 2]

julia&gt; butcher_representation(t)
&quot;[[[τ]τ²]τ⁵]&quot;"><pre>julia<span class="pl-k">&gt;</span> t <span class="pl-k">=</span> <span class="pl-c1">rootedtree</span>([<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>])
RootedTree{Int64}<span class="pl-k">:</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">butcher_representation</span>(t)
<span class="pl-s"><span class="pl-pds">"</span>[[[τ]τ²]τ⁵]<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">There are also some simple plot recipes for <a href="https://github.com/JuliaPlots/Plots.jl">Plots.jl</a>.
Thus, you can visualize a rooted tree <code>t</code> using <code>plot(t)</code> when <code>using Plots</code>.</p>
<p dir="auto">Additionally, there is an un-exported function <code>RootedTrees.latexify</code> that can
generate LaTeX code for a rooted tree <code>t</code> based on the LaTeX package
<a href="https://ctan.org/pkg/forest" rel="nofollow">forest</a>. The relevant code that needs to be included
in the preamble can be obtained from the docstring of <code>RootedTrees.latexify</code>
(type <code>?</code> and <code>RootedTrees.latexify</code> in the Julia REPL). The same format is
used when you are <code>using Latexify</code> and their function <code>latexify</code>, see
<a href="https://github.com/korsbo/Latexify.jl">Latexify.jl</a>.</p>
<h3 dir="auto"><a id="user-content-iteration-over-rootedtrees" class="anchor" aria-hidden="true" href="#iteration-over-rootedtrees"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Iteration over <code>RootedTree</code>s</h3>
<p dir="auto">A <code>RootedTreeIterator(order::Integer)</code> can be used to iterate efficiently
over all <code>RootedTree</code>s of a given <code>order</code>.</p>
<p dir="auto">Be careful that the iterator is stateful for efficiency reasons, so you might
need to use <code>copy</code> appropriately, e.g.,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; map(identity, RootedTreeIterator(4))
4-element Array{RootedTrees.RootedTree{Int64,Array{Int64,1}},1}:
 RootedTree{Int64}: [1, 2, 2, 2]
 RootedTree{Int64}: [1, 2, 2, 2]
 RootedTree{Int64}: [1, 2, 2, 2]
 RootedTree{Int64}: [1, 2, 2, 2]

julia&gt; map(copy, RootedTreeIterator(4))
4-element Array{RootedTrees.RootedTree{Int64,Array{Int64,1}},1}:
 RootedTree{Int64}: [1, 2, 3, 4]
 RootedTree{Int64}: [1, 2, 3, 3]
 RootedTree{Int64}: [1, 2, 3, 2]
 RootedTree{Int64}: [1, 2, 2, 2]"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">map</span>(identity, <span class="pl-c1">RootedTreeIterator</span>(<span class="pl-c1">4</span>))
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{RootedTrees<span class="pl-k">.</span>RootedTree{Int64,Array{Int64,<span class="pl-c1">1</span>}},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 RootedTree{Int64}<span class="pl-k">:</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>]
 RootedTree{Int64}<span class="pl-k">:</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>]
 RootedTree{Int64}<span class="pl-k">:</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>]
 RootedTree{Int64}<span class="pl-k">:</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">map</span>(copy, <span class="pl-c1">RootedTreeIterator</span>(<span class="pl-c1">4</span>))
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{RootedTrees<span class="pl-k">.</span>RootedTree{Int64,Array{Int64,<span class="pl-c1">1</span>}},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 RootedTree{Int64}<span class="pl-k">:</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>]
 RootedTree{Int64}<span class="pl-k">:</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>]
 RootedTree{Int64}<span class="pl-k">:</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>]
 RootedTree{Int64}<span class="pl-k">:</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>]</pre></div>
<h3 dir="auto"><a id="user-content-functions-on-trees" class="anchor" aria-hidden="true" href="#functions-on-trees"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Functions on Trees</h3>
<p dir="auto">The usual functions on <code>RootedTree</code>s are implemented, cf.
<a href="https://doi.org/10.1002/9781119121534" rel="nofollow">Butcher (Numerical Methods for ODEs, 2016)</a>.</p>
<ul dir="auto">
<li><code>order(t::RootedTree)</code>: The order of a <code>RootedTree</code>, i.e., the length of its level sequence.</li>
<li><code>σ(t::RootedTree)</code> or <code>symmetry(t)</code>: The symmetry <code>σ</code> of a rooted tree, i.e., the order of the group of automorphisms on a particular labelling (of the vertices) of <code>t</code>.</li>
<li><code>γ(t::RootedTree)</code> or <code>density(t)</code>: The density <code>γ(t)</code> of a rooted tree, i.e., the product over all vertices of <code>t</code> of the order of the subtree rooted at that vertex.</li>
<li><code>α(t::RootedTree)</code>: The number of monotonic labelings of <code>t</code> not equivalent under the symmetry group.</li>
<li><code>β(t::RootedTree)</code>: The total number of labelings of <code>t</code> not equivalent under the symmetry group.</li>
</ul>
<p dir="auto">Additionally, functions on trees connected to Runge-Kutta methods are implemented.</p>
<ul dir="auto">
<li><code>elementary_weight(t, A, b, c)</code>: Compute the elementary weight Φ(<code>t</code>) of <code>t::RootedTree</code> for the Butcher coefficients <code>A, b, c</code> of a Runge-Kutta method.</li>
<li><code>derivative_weight(t, A, b, c)</code>: Compute the derivative weight (ΦᵢD)(<code>t</code>) of <code>t</code> for the Butcher coefficients <code>A, b, c</code> of a Runge-Kutta method.</li>
<li><code>residual_order_condition(t, A, b, c)</code>: The residual of the order condition
<code>(Φ(t) - 1/γ(t)) / σ(t)</code> with elementary weight <code>Φ(t)</code>, density <code>γ(t)</code>, and symmetry <code>σ(t)</code> of the rooted tree <code>t</code> for the Runge-Kutta method with Butcher coefficients <code>A, b, c</code>.</li>
</ul>
<h2 dir="auto"><a id="user-content-brief-changelog" class="anchor" aria-hidden="true" href="#brief-changelog"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Brief Changelog</h2>
<ul dir="auto">
<li>v2.16: The LaTeX printing of rooted trees changed to allow representing
colored rooted trees. Please update your LaTeX preamble as described in
the docstring of <code>RootedTrees.latexify</code>.</li>
<li>v2.0: Rooted trees are considered up to isomorphisms introduced by shifting
each coefficient of their level sequence by the same number.</li>
</ul>
<h2 dir="auto"><a id="user-content-referencing" class="anchor" aria-hidden="true" href="#referencing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Referencing</h2>
<p dir="auto">If you use
<a href="https://github.com/SciML/RootedTrees.jl">RootedTrees.jl</a>
for your research, please cite the paper</p>
<div class="highlight highlight-text-bibtex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@article{ketcheson2022computing,
  title={Computing with {B}-series},
  author={Ketcheson, David I and Ranocha, Hendrik},
  journal={ACM Transactions on Mathematical Software},
  year={2022},
  month={12},
  doi={10.1145/3573384},
  eprint={2111.11680},
  eprinttype={arXiv},
  eprintclass={math.NA}
}"><pre><span class="pl-k">@article</span>{<span class="pl-en">ketcheson2022computing</span>,
  <span class="pl-s">title</span>=<span class="pl-s"><span class="pl-pds">{</span>Computing with {B}-series<span class="pl-pds">}</span></span>,
  <span class="pl-s">author</span>=<span class="pl-s"><span class="pl-pds">{</span>Ketcheson, David I and Ranocha, Hendrik<span class="pl-pds">}</span></span>,
  <span class="pl-s">journal</span>=<span class="pl-s"><span class="pl-pds">{</span>ACM Transactions on Mathematical Software<span class="pl-pds">}</span></span>,
  <span class="pl-s">year</span>=<span class="pl-s"><span class="pl-pds">{</span>2022<span class="pl-pds">}</span></span>,
  <span class="pl-s">month</span>=<span class="pl-s"><span class="pl-pds">{</span>12<span class="pl-pds">}</span></span>,
  <span class="pl-s">doi</span>=<span class="pl-s"><span class="pl-pds">{</span>10.1145/3573384<span class="pl-pds">}</span></span>,
  <span class="pl-s">eprint</span>=<span class="pl-s"><span class="pl-pds">{</span>2111.11680<span class="pl-pds">}</span></span>,
  <span class="pl-s">eprinttype</span>=<span class="pl-s"><span class="pl-pds">{</span>arXiv<span class="pl-pds">}</span></span>,
  <span class="pl-s">eprintclass</span>=<span class="pl-s"><span class="pl-pds">{</span>math.NA<span class="pl-pds">}</span></span>
}</pre></div>
<p dir="auto">In addition, you can also refer to RootedTrees.jl directly as</p>
<div class="highlight highlight-text-bibtex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@misc{ranocha2019rootedtrees,
  title={{RootedTrees.jl}: {A} collection of functionality around rooted trees
         to generate order conditions for {R}unge-{K}utta methods in {J}ulia
         for differential equations and scientific machine learning ({SciM}L)},
  author={Ranocha, Hendrik and contributors},
  year={2019},
  month={05},
  howpublished={\url{https://github.com/SciML/RootedTrees.jl}},
  doi={10.5281/zenodo.5534590}
}"><pre><span class="pl-k">@misc</span>{<span class="pl-en">ranocha2019rootedtrees</span>,
  <span class="pl-s">title</span>=<span class="pl-s"><span class="pl-pds">{</span>{RootedTrees.jl}: {A} collection of functionality around rooted trees</span>
<span class="pl-s">         to generate order conditions for {R}unge-{K}utta methods in {J}ulia</span>
<span class="pl-s">         for differential equations and scientific machine learning ({SciM}L)<span class="pl-pds">}</span></span>,
  <span class="pl-s">author</span>=<span class="pl-s"><span class="pl-pds">{</span>Ranocha, Hendrik and contributors<span class="pl-pds">}</span></span>,
  <span class="pl-s">year</span>=<span class="pl-s"><span class="pl-pds">{</span>2019<span class="pl-pds">}</span></span>,
  <span class="pl-s">month</span>=<span class="pl-s"><span class="pl-pds">{</span>05<span class="pl-pds">}</span></span>,
  <span class="pl-s">howpublished</span>=<span class="pl-s"><span class="pl-pds">{</span>\url{https://github.com/SciML/RootedTrees.jl}<span class="pl-pds">}</span></span>,
  <span class="pl-s">doi</span>=<span class="pl-s"><span class="pl-pds">{</span>10.5281/zenodo.5534590<span class="pl-pds">}</span></span>
}</pre></div>
</article></div>