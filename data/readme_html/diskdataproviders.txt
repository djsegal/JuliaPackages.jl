<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a href="https://travis-ci.org/baggepinnen/DiskDataProviders.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a16b851368df0f41655c594c78bee314c908489f/68747470733a2f2f7472617669732d63692e6f72672f626167676570696e6e656e2f4469736b4461746150726f7669646572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/baggepinnen/DiskDataProviders.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/baggepinnen/DiskDataProviders.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8e58e61fe165697bb62955422697954b55004724/68747470733a2f2f636f6465636f762e696f2f67682f626167676570696e6e656e2f4469736b4461746150726f7669646572732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/baggepinnen/DiskDataProviders.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://baggepinnen.github.io/DiskDataProviders.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-diskdataprovidersjl" class="anchor" aria-hidden="true" href="#diskdataprovidersjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>DiskDataProviders.jl</h1>
<p>This package implements datastructures that are iterable and backed by a buffer that is fed by data from disk. The reading is done on a separate thread, so make sure Julia is started with at least two threads.</p>
<p>Intended usage: To buffer data reading from disk when training convolutional neural networks (1d or 2d) using <a href="https://github.com/FluxML/Flux.jl/">Flux.jl</a>. This allows the CPU to work with the disk and data while the GPU is working on the training. This package might be useful for other things as well.</p>
<p>For usage example, see <a href="https://baggepinnen.github.io/DiskDataProviders.jl/latest" rel="nofollow">the documentation</a><br>
For lower-level buffered iterators, see <a href="https://github.com/baggepinnen/LengthChannels.jl">LengthChannels.jl</a></p>
</article></div>