<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-acousticfeatures" class="anchor" aria-hidden="true" href="#acousticfeatures"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AcousticFeatures</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ymtoo/AcousticFeatures.jl/workflows/CI/badge.svg"><img src="https://github.com/ymtoo/AcousticFeatures.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/ymtoo/AcousticFeatures.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2b9efaa7b8397c9636649630845fc71ac31950c42f3a1f3bb1c73bb23d739d22/68747470733a2f2f636f6465636f762e696f2f67682f796d746f6f2f41636f757374696346656174757265732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/ymtoo/AcousticFeatures.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://ymtoo.github.io/AcousticFeatures.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package implements a set of methods to compute generic acoustic features in <a href="https://github.com/JuliaArrays/AxisArrays.jl.git">AxisArrays</a> for 1-D time series acoustic data.</p>
<p dir="auto">The acoustic features are:</p>
<ul dir="auto">
<li>Energy</li>
<li><a href="https://link.springer.com/article/10.1155/S1110865702000483" rel="nofollow">Myriad</a></li>
<li><a href="https://asa.scitation.org/doi/10.1121/1.3531926" rel="nofollow">Frequency Contours</a></li>
<li><a href="https://en.wikipedia.org/wiki/Sound_pressure#Sound_pressure_level" rel="nofollow">Sound Pressure Level</a></li>
<li>Impulse Statistics (number of impulses, mean and variance of inter-impulse intervals)</li>
<li><a href="https://en.wikipedia.org/wiki/Stable_distribution" rel="nofollow">Alpha Stable Statistics (Î± and scale)</a></li>
<li><a href="https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0004065" rel="nofollow">Entropy (temporal entropy, spectral entropy and entropy index)</a></li>
<li><a href="https://en.wikipedia.org/wiki/Zero-crossing_rate" rel="nofollow">Zero Crossing Rate</a></li>
<li><a href="https://en.wikipedia.org/wiki/Spectral_centroid" rel="nofollow">Spectral Centroid</a></li>
<li><a href="https://en.wikipedia.org/wiki/Spectral_flatness" rel="nofollow">Spectral Flatness</a></li>
<li><a href="http://materias.df.uba.ar/mta2019v/files/2019/06/permutation_entropy1.pdf" rel="nofollow">Permutation Entropy</a></li>
<li><a href="https://en.wikipedia.org/wiki/Spectral_density" rel="nofollow">PSD</a></li>
<li><a href="https://www.sciencedirect.com/science/article/abs/pii/S1470160X10002037" rel="nofollow">Acoustic Complexity Index</a></li>
<li><a href="https://arxiv.org/abs/nlin/0205033" rel="nofollow">Statistical Complexity</a></li>
</ul>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg; pkg&quot;add https://github.com/ymtoo/AcousticFeatures.jl.git&quot;"><pre><span class="pl-k">using</span> Pkg; <span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add https://github.com/ymtoo/AcousticFeatures.jl.git<span class="pl-pds">"</span></span></pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using AcousticFeatures, DSP, SignalAnalysis, Plots

function compare(sc1, sc2)
    plot(sc1.axes[1] ./ fs, vec(sc1.data),
         xlabel = &quot;Time (sec)&quot;,
         ylabel = &quot;Permutation Entropy&quot;,
         label  = &quot;without chirp&quot;,
         color  = :blue,
         dpi    = 150,
         thickness_scaling = 1.0,
         legend=:bottomleft
    )
    plot!(sc2.axes[1] ./ fs, vec(sc2.data),
          xlabel = &quot;Time (sec)&quot;,
          ylabel = &quot;Permutation Entropy&quot;,
          label  = &quot;with chirp&quot;,
          color  = :red,
          dpi    = 150,
          thickness_scaling = 1.0,
          legend=:bottomleft
    )
end

N  = 2400
fs = 2400
v  = randn(Float64, 3*N)
s  = real(chirp(500, 1000, 1.0, fs))
x  = copy(v); 
x[N:2*N-1] += s

specgram(signal(x,fs); fs=fs,nfft=128)"><pre><span class="pl-k">using</span> AcousticFeatures, DSP, SignalAnalysis, Plots

<span class="pl-k">function</span> <span class="pl-en">compare</span>(sc1, sc2)
    <span class="pl-c1">plot</span>(sc1<span class="pl-k">.</span>axes[<span class="pl-c1">1</span>] <span class="pl-k">./</span> fs, <span class="pl-c1">vec</span>(sc1<span class="pl-k">.</span>data),
         xlabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Time (sec)<span class="pl-pds">"</span></span>,
         ylabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Permutation Entropy<span class="pl-pds">"</span></span>,
         label  <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>without chirp<span class="pl-pds">"</span></span>,
         color  <span class="pl-k">=</span> <span class="pl-c1">:blue</span>,
         dpi    <span class="pl-k">=</span> <span class="pl-c1">150</span>,
         thickness_scaling <span class="pl-k">=</span> <span class="pl-c1">1.0</span>,
         legend<span class="pl-k">=</span><span class="pl-c1">:bottomleft</span>
    )
    <span class="pl-c1">plot!</span>(sc2<span class="pl-k">.</span>axes[<span class="pl-c1">1</span>] <span class="pl-k">./</span> fs, <span class="pl-c1">vec</span>(sc2<span class="pl-k">.</span>data),
          xlabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Time (sec)<span class="pl-pds">"</span></span>,
          ylabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Permutation Entropy<span class="pl-pds">"</span></span>,
          label  <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>with chirp<span class="pl-pds">"</span></span>,
          color  <span class="pl-k">=</span> <span class="pl-c1">:red</span>,
          dpi    <span class="pl-k">=</span> <span class="pl-c1">150</span>,
          thickness_scaling <span class="pl-k">=</span> <span class="pl-c1">1.0</span>,
          legend<span class="pl-k">=</span><span class="pl-c1">:bottomleft</span>
    )
<span class="pl-k">end</span>

N  <span class="pl-k">=</span> <span class="pl-c1">2400</span>
fs <span class="pl-k">=</span> <span class="pl-c1">2400</span>
v  <span class="pl-k">=</span> <span class="pl-c1">randn</span>(Float64, <span class="pl-c1">3</span><span class="pl-k">*</span>N)
s  <span class="pl-k">=</span> <span class="pl-c1">real</span>(<span class="pl-c1">chirp</span>(<span class="pl-c1">500</span>, <span class="pl-c1">1000</span>, <span class="pl-c1">1.0</span>, fs))
x  <span class="pl-k">=</span> <span class="pl-c1">copy</span>(v); 
x[N<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>N<span class="pl-k">-</span><span class="pl-c1">1</span>] <span class="pl-k">+=</span> s

<span class="pl-c1">specgram</span>(<span class="pl-c1">signal</span>(x,fs); fs<span class="pl-k">=</span>fs,nfft<span class="pl-k">=</span><span class="pl-c1">128</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="chirp1-spec.png"><img src="chirp1-spec.png" alt="window" style="max-width: 100%;"></a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="winlen = 2400
noverlap = 1200
pe = PermutationEntropy(5, 1, true, true)
sc1 = Score(
    pe,
    v;
    winlen = winlen,
    noverlap = noverlap
)
sc2 = Score(
    pe,
    x;
    winlen = winlen,
    noverlap = noverlap
)
compare(sc1, sc2)"><pre>winlen <span class="pl-k">=</span> <span class="pl-c1">2400</span>
noverlap <span class="pl-k">=</span> <span class="pl-c1">1200</span>
pe <span class="pl-k">=</span> <span class="pl-c1">PermutationEntropy</span>(<span class="pl-c1">5</span>, <span class="pl-c1">1</span>, <span class="pl-c1">true</span>, <span class="pl-c1">true</span>)
sc1 <span class="pl-k">=</span> <span class="pl-c1">Score</span>(
    pe,
    v;
    winlen <span class="pl-k">=</span> winlen,
    noverlap <span class="pl-k">=</span> noverlap
)
sc2 <span class="pl-k">=</span> <span class="pl-c1">Score</span>(
    pe,
    x;
    winlen <span class="pl-k">=</span> winlen,
    noverlap <span class="pl-k">=</span> noverlap
)
<span class="pl-c1">compare</span>(sc1, sc2)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="chirp1-permutationentropy.png"><img src="chirp1-permutationentropy.png" alt="window" style="max-width: 100%;"></a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="N  = 2400
fs = 2400
v  = randn(Float64, 3*N)
Ns = fs Ã· 100
bpf = fir(13, 500, 1000; fs=fs) 
s  = 10 .* filtfilt(bpf, randn(Float64, Ns)) #real(chirp(500, 1100, 0.1, fs))
x  = copy(v); 
Ngap = fs Ã· 10
x[N:N+Ns-1] += s
x[N+5Ngap:N+5Ngap+Ns-1] += s
x[N+9Ngap:N+9Ngap+Ns-1] += s

specgram(signal(x,fs); nfft=128, fs=fs)"><pre>N  <span class="pl-k">=</span> <span class="pl-c1">2400</span>
fs <span class="pl-k">=</span> <span class="pl-c1">2400</span>
v  <span class="pl-k">=</span> <span class="pl-c1">randn</span>(Float64, <span class="pl-c1">3</span><span class="pl-k">*</span>N)
Ns <span class="pl-k">=</span> fs <span class="pl-k">Ã·</span> <span class="pl-c1">100</span>
bpf <span class="pl-k">=</span> <span class="pl-c1">fir</span>(<span class="pl-c1">13</span>, <span class="pl-c1">500</span>, <span class="pl-c1">1000</span>; fs<span class="pl-k">=</span>fs) 
s  <span class="pl-k">=</span> <span class="pl-c1">10</span> <span class="pl-k">.*</span> <span class="pl-c1">filtfilt</span>(bpf, <span class="pl-c1">randn</span>(Float64, Ns)) <span class="pl-c"><span class="pl-c">#</span>real(chirp(500, 1100, 0.1, fs))</span>
x  <span class="pl-k">=</span> <span class="pl-c1">copy</span>(v); 
Ngap <span class="pl-k">=</span> fs <span class="pl-k">Ã·</span> <span class="pl-c1">10</span>
x[N<span class="pl-k">:</span>N<span class="pl-k">+</span>Ns<span class="pl-k">-</span><span class="pl-c1">1</span>] <span class="pl-k">+=</span> s
x[N<span class="pl-k">+</span><span class="pl-c1">5</span>Ngap<span class="pl-k">:</span>N<span class="pl-k">+</span><span class="pl-c1">5</span>Ngap<span class="pl-k">+</span>Ns<span class="pl-k">-</span><span class="pl-c1">1</span>] <span class="pl-k">+=</span> s
x[N<span class="pl-k">+</span><span class="pl-c1">9</span>Ngap<span class="pl-k">:</span>N<span class="pl-k">+</span><span class="pl-c1">9</span>Ngap<span class="pl-k">+</span>Ns<span class="pl-k">-</span><span class="pl-c1">1</span>] <span class="pl-k">+=</span> s

<span class="pl-c1">specgram</span>(<span class="pl-c1">signal</span>(x,fs); nfft<span class="pl-k">=</span><span class="pl-c1">128</span>, fs<span class="pl-k">=</span>fs)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="chirp3-spec.png"><img src="chirp3-spec.png" alt="window" style="max-width: 100%;"></a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="winlen = 2400
noverlap = 1200
pe = PermutationEntropy(5, 1, true, true)
sc1 = Score(
    pe,
    v;
    winlen = winlen,
    noverlap = noverlap,
)
sc2 = Score(
    pe,
    x;
    winlen = winlen,
    noverlap = noverlap,
)
compare(sc1, sc2)"><pre>winlen <span class="pl-k">=</span> <span class="pl-c1">2400</span>
noverlap <span class="pl-k">=</span> <span class="pl-c1">1200</span>
pe <span class="pl-k">=</span> <span class="pl-c1">PermutationEntropy</span>(<span class="pl-c1">5</span>, <span class="pl-c1">1</span>, <span class="pl-c1">true</span>, <span class="pl-c1">true</span>)
sc1 <span class="pl-k">=</span> <span class="pl-c1">Score</span>(
    pe,
    v;
    winlen <span class="pl-k">=</span> winlen,
    noverlap <span class="pl-k">=</span> noverlap,
)
sc2 <span class="pl-k">=</span> <span class="pl-c1">Score</span>(
    pe,
    x;
    winlen <span class="pl-k">=</span> winlen,
    noverlap <span class="pl-k">=</span> noverlap,
)
<span class="pl-c1">compare</span>(sc1, sc2)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="chirp3-permutationentropy.png"><img src="chirp3-permutationentropy.png" alt="window" style="max-width: 100%;"></a></p>
</article></div>