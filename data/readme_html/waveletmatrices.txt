<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-waveletmatrices" class="anchor" aria-hidden="true" href="#waveletmatrices"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>WaveletMatrices</h1>
<p><a href="https://travis-ci.org/BioJulia/WaveletMatrices.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cdcd42f4dfb5e19cde3bb9a14423364f121a2f4e/68747470733a2f2f7472617669732d63692e6f72672f42696f4a756c69612f576176656c65744d617472696365732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/BioJulia/WaveletMatrices.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://github.com/BioJulia/WaveletMatrices.jl"><img src="https://camo.githubusercontent.com/a72138261d258ede7a5ea029273f06800e17b773/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c61746573742d76302e322e302d626c7565" alt="GitHub latest release" data-canonical-src="https://img.shields.io/badge/latest-v0.2.0-blue" style="max-width:100%;"></a>
<a href="https://github.com/BioJulia/WaveletMatrices.jl/releases"><img src="https://camo.githubusercontent.com/5aef772220cfe7510675f58ab9f928ac02554022/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737461626c652d76302e322e302d677265656e" alt="GitHub latest release" data-canonical-src="https://img.shields.io/badge/stable-v0.2.0-green" style="max-width:100%;"></a>
<a href="https://julialang.org/" rel="nofollow"><img src="https://camo.githubusercontent.com/e2b53f5130cd1c53e09737fd2b89728e49d5d6bd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6a756c69612d312e302b2d626c7565" alt="Julia versions" data-canonical-src="https://img.shields.io/badge/julia-1.0+-blue" style="max-width:100%;"></a></p>
<p>An implementation of "The Wavelet Matrix" (Claude and Navarro) <a href="http://www.dcc.uchile.cl/~gnavarro/ps/spire12.4.pdf" rel="nofollow">http://www.dcc.uchile.cl/~gnavarro/ps/spire12.4.pdf</a>.</p>
<p>The wavelet matrix is a data structure to represent an immutable sequence of
unsigned integers that supports some queries efficiently.</p>
<p>The <code>WaveletMatrix</code> type is defined as follows:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">struct</span> WaveletMatrix{w,T<span class="pl-k">&lt;:</span><span class="pl-c1">Unsigned</span>,B<span class="pl-k">&lt;:</span><span class="pl-c1">AbstractBitVector</span>} <span class="pl-k">&lt;:</span> <span class="pl-c1">AbstractVector{T}</span></pre></div>
<p>where</p>
<ul>
<li><code>w</code>: the number of bits required to encode the unsigned integers (elements)</li>
<li><code>T</code>: the type of elements</li>
<li><code>B</code>: the type of bit vectors used to store elements.</li>
</ul>
<p>To efficiently pack a sequence of unsigned integers, <code>w</code> should be as small as possible but enough to encode those integers.
For example, if you want to store integers between 0x00 and 0x03 (i.e. four distinct integers), setting <code>w = 2 (= ceil(log2(4)))</code> is the best choice.</p>
<p>The basic operations available on the wavelet matrix are:</p>
<ul>
<li><code>getindex(wm::WaveletMatrix, i::Integer)</code>: Return <code>i</code>-th element of <code>wm</code>.</li>
<li><code>rank(a::Unsigned, wm::WaveletMatrix, i::Integer)</code>: Count the number of <code>a</code>'s occurrences in <code>wm</code> between <code>1:i</code>.</li>
<li><code>select(a::Unsigned, wm::WaveletMatrix, j::Integer)</code>: Return the position of the <code>j</code>-th occurrence of <code>a</code> in <code>wm</code>.</li>
</ul>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia"><pre>data <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">0x00</span><span class="pl-k">:</span><span class="pl-c1">0x03</span>, <span class="pl-c1">100_000</span>)
wm <span class="pl-k">=</span> <span class="pl-c1">WaveletMatrix</span><span class="pl-c1">{2}</span>(data)

wm[<span class="pl-c1">129</span>]
<span class="pl-c1">rank</span>(<span class="pl-c1">0x02</span>, wm, <span class="pl-c1">5555</span>)
<span class="pl-c1">partialsort</span>(<span class="pl-c1">0x01</span>, wm, <span class="pl-c1">9876</span>)</pre></div>
</article></div>