<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-openexrjl" class="anchor" aria-hidden="true" href="#openexrjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>OpenEXR.jl</h1>
<p>Saving and loading of OpenEXR files.</p>
<p>Basic usage:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using OpenEXR

# read an EXR file into an `Array{RGBA{Float16},2}`.
myimage = OpenEXR.load(File{DataFormat{:EXR}}(&quot;myimage.exr&quot;))

# save an image to an EXR file
OpenEXR.save(File{DataFormat{:EXR}}(&quot;myimage2.exr&quot;), myimage)
"><pre><span class="pl-k">using</span> OpenEXR

<span class="pl-c"><span class="pl-c">#</span> read an EXR file into an `Array{RGBA{Float16},2}`.</span>
myimage <span class="pl-k">=</span> OpenEXR<span class="pl-k">.</span><span class="pl-c1">load</span>(<span class="pl-c1">File</span><span class="pl-c1">{DataFormat{:EXR}}</span>(<span class="pl-s"><span class="pl-pds">"</span>myimage.exr<span class="pl-pds">"</span></span>))

<span class="pl-c"><span class="pl-c">#</span> save an image to an EXR file</span>
OpenEXR<span class="pl-k">.</span><span class="pl-c1">save</span>(<span class="pl-c1">File</span><span class="pl-c1">{DataFormat{:EXR}}</span>(<span class="pl-s"><span class="pl-pds">"</span>myimage2.exr<span class="pl-pds">"</span></span>), myimage)</pre></div>
<p>TODO: get this registered with <a href="https://github.com/JuliaIO/FileIO.jl">FileIO</a>.</p>
</article></div>