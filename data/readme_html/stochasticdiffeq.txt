<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-stochasticdiffeqjl" class="anchor" aria-hidden="true" href="#stochasticdiffeqjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>StochasticDiffEq.jl</h1>
<p><a href="https://gitter.im/JuliaDiffEq/Lobby?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge" rel="nofollow"><img src="https://camo.githubusercontent.com/063a520f1733d1b53d1e2fdb37b70a8016dd36f6/68747470733a2f2f6261646765732e6769747465722e696d2f4a756c69614469666645712f4c6f6262792e737667" alt="Join the chat at https://gitter.im/JuliaDiffEq/Lobby" data-canonical-src="https://badges.gitter.im/JuliaDiffEq/Lobby.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/JuliaDiffEq/StochasticDiffEq.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/df9ef3f2914def2b51833bd6983de5a8792bea83/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614469666645712f53746f636861737469634469666645712e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaDiffEq/StochasticDiffEq.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/ChrisRackauckas/stochasticdiffeq-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0646bb33d7a87e64480b62749ee05cbcd556e5a2/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6b30316b686e643877616b74736731713f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/k01khnd8waktsg1q?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaDiffEq/StochasticDiffEq.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/83866f5282484a438463699e0bf2f58822b04abb/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c69614469666645712f53746f636861737469634469666645712e6a6c2f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaDiffEq/StochasticDiffEq.jl/badge.svg" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/JuliaDiffEq/StochasticDiffEq.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/66d948ab0c7b4ba24f6901eff567482f4599067c/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614469666645712f53746f636861737469634469666645712e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaDiffEq/StochasticDiffEq.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>StochasticDiffEq.jl is a component package in the DifferentialEquations ecosystem. It holds the
stochastic differential equations solvers and utilities. While completely independent
and usable on its own, users interested in using this
functionality should check out <a href="https://github.com/JuliaDiffEq/DifferentialEquations.jl">DifferentialEquations.jl</a>.</p>
<h2><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>API</h2>
<p>StochasticDiffEq.jl is part of the JuliaDiffEq common interface, but can be used independently of DifferentialEquations.jl. The only requirement is that the user passes an StochasticDiffEq.jl algorithm to <code>solve</code>. For example, we can solve the <a href="http://docs.juliadiffeq.org/dev/tutorials/sde_example.html" rel="nofollow">ODE tutorial from the docs</a> using the <code>SRIW1()</code> algorithm:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> StochasticDiffEq
α<span class="pl-k">=</span><span class="pl-c1">1</span>
β<span class="pl-k">=</span><span class="pl-c1">1</span>
u₀<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>
<span class="pl-en">f</span>(u,p,t) <span class="pl-k">=</span> α<span class="pl-k">*</span>u
<span class="pl-en">g</span>(u,p,t) <span class="pl-k">=</span> β<span class="pl-k">*</span>u
dt <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">2</span><span class="pl-k">^</span>(<span class="pl-c1">4</span>)
tspan <span class="pl-k">=</span> (<span class="pl-c1">0.0</span>,<span class="pl-c1">1.0</span>)
prob <span class="pl-k">=</span> <span class="pl-c1">SDEProblem</span>(f,g,u₀,(<span class="pl-c1">0.0</span>,<span class="pl-c1">1.0</span>))
sol <span class="pl-k">=</span><span class="pl-c1">solve</span>(prob,<span class="pl-c1">SRIW1</span>())</pre></div>
<p>The options for <code>solve</code> are defined in the <a href="http://docs.juliadiffeq.org/dev/basics/common_solver_opts.html" rel="nofollow">common solver options page</a> and are thoroughly explained in <a href="http://docs.juliadiffeq.org/dev/tutorials/ode_example.html" rel="nofollow">the ODE tutorial</a>.</p>
<p>That example uses the out-of-place syntax <code>f(u,p,t)</code>, while the inplace syntax (more efficient for systems of equations) is shown in the Lorenz example:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> <span class="pl-en">lorenz</span>(du,u,p,t)
 du[<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">10.0</span>(u[<span class="pl-c1">2</span>]<span class="pl-k">-</span>u[<span class="pl-c1">1</span>])
 du[<span class="pl-c1">2</span>] <span class="pl-k">=</span> u[<span class="pl-c1">1</span>]<span class="pl-k">*</span>(<span class="pl-c1">28.0</span><span class="pl-k">-</span>u[<span class="pl-c1">3</span>]) <span class="pl-k">-</span> u[<span class="pl-c1">2</span>]
 du[<span class="pl-c1">3</span>] <span class="pl-k">=</span> u[<span class="pl-c1">1</span>]<span class="pl-k">*</span>u[<span class="pl-c1">2</span>] <span class="pl-k">-</span> (<span class="pl-c1">8</span><span class="pl-k">/</span><span class="pl-c1">3</span>)<span class="pl-k">*</span>u[<span class="pl-c1">3</span>]
<span class="pl-k">end</span>

<span class="pl-k">function</span> σ<span class="pl-c1">_lorenz</span>(du,u,p,t)
 du[<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">3.0</span>
 du[<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">3.0</span>
 du[<span class="pl-c1">3</span>] <span class="pl-k">=</span> <span class="pl-c1">3.0</span>
<span class="pl-k">end</span>

prob_sde_lorenz <span class="pl-k">=</span> <span class="pl-c1">SDEProblem</span>(lorenz,σ_lorenz,[<span class="pl-c1">1.0</span>,<span class="pl-c1">0.0</span>,<span class="pl-c1">0.0</span>],(<span class="pl-c1">0.0</span>,<span class="pl-c1">10.0</span>))
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob_sde_lorenz)
<span class="pl-c1">plot</span>(sol,vars<span class="pl-k">=</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>))</pre></div>
<p>The problems default to diagonal noise. Non-diagonal noise can be added by setting
the <code>noise_prototype</code>:</p>
<div class="highlight highlight-source-julia"><pre>f <span class="pl-k">=</span> (du,u,p,t) <span class="pl-k">-&gt;</span> du<span class="pl-k">.=</span><span class="pl-c1">1.01</span>u
g <span class="pl-k">=</span> <span class="pl-k">function</span> (du,u,p,t)
  du[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">0.3</span>u[<span class="pl-c1">1</span>]
  du[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">0.6</span>u[<span class="pl-c1">1</span>]
  du[<span class="pl-c1">1</span>,<span class="pl-c1">3</span>] <span class="pl-k">=</span> <span class="pl-c1">0.9</span>u[<span class="pl-c1">1</span>]
  du[<span class="pl-c1">1</span>,<span class="pl-c1">4</span>] <span class="pl-k">=</span> <span class="pl-c1">0.12</span>u[<span class="pl-c1">2</span>]
  du[<span class="pl-c1">2</span>,<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">1.2</span>u[<span class="pl-c1">1</span>]
  du[<span class="pl-c1">2</span>,<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">0.2</span>u[<span class="pl-c1">2</span>]
  du[<span class="pl-c1">2</span>,<span class="pl-c1">3</span>] <span class="pl-k">=</span> <span class="pl-c1">0.3</span>u[<span class="pl-c1">2</span>]
  du[<span class="pl-c1">2</span>,<span class="pl-c1">4</span>] <span class="pl-k">=</span> <span class="pl-c1">1.8</span>u[<span class="pl-c1">2</span>]
<span class="pl-k">end</span>
prob <span class="pl-k">=</span> <span class="pl-c1">SDEProblem</span>(f,g,<span class="pl-c1">ones</span>(<span class="pl-c1">2</span>),(<span class="pl-c1">0.0</span>,<span class="pl-c1">1.0</span>),noise_rate_prototype<span class="pl-k">=</span><span class="pl-c1">zeros</span>(<span class="pl-c1">2</span>,<span class="pl-c1">4</span>))</pre></div>
<p>Colored noise can be set using <a href="http://docs.juliadiffeq.org/dev/features/noise_process.html" rel="nofollow">an <code>AbstractNoiseProcess</code></a>. For example, we can set the underlying noise process to a <code>GeometricBrownian</code> via:</p>
<div class="highlight highlight-source-julia"><pre>μ <span class="pl-k">=</span> <span class="pl-c1">1.0</span>
σ <span class="pl-k">=</span> <span class="pl-c1">2.0</span>
W <span class="pl-k">=</span> <span class="pl-c1">GeometricBrownianMotionProcess</span>(μ,σ,<span class="pl-c1">0.0</span>,<span class="pl-c1">1.0</span>,<span class="pl-c1">1.0</span>)
<span class="pl-c"><span class="pl-c">#</span> ...</span>
<span class="pl-c"><span class="pl-c">#</span> Define f,g,u0,tspan for a SDEProblem</span>
<span class="pl-c"><span class="pl-c">#</span> ...</span>
prob <span class="pl-k">=</span> <span class="pl-c1">SDEProblem</span>(f,g,u0,tspan,noise<span class="pl-k">=</span>W)</pre></div>
<p>StochasticDiffEq.jl also handles solving random ordinary differential equations. This is shown <a href="http://docs.juliadiffeq.org/dev/tutorials/rode_example.html" rel="nofollow">in the RODE tutorial</a>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> StochasticDiffEq
<span class="pl-k">function</span> <span class="pl-en">f</span>(u,p,t,W)
  <span class="pl-c1">2</span>u<span class="pl-k">*</span><span class="pl-c1">sin</span>(W)
<span class="pl-k">end</span>
u0 <span class="pl-k">=</span> <span class="pl-c1">1.00</span>
tspan <span class="pl-k">=</span> (<span class="pl-c1">0.0</span>,<span class="pl-c1">5.0</span>)
prob <span class="pl-k">=</span> <span class="pl-c1">RODEProblem</span>(f,u0,tspan)
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob,<span class="pl-c1">RandomEM</span>(),dt<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">100</span>)</pre></div>
<h2><a id="user-content-available-solvers" class="anchor" aria-hidden="true" href="#available-solvers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Available Solvers</h2>
<p>For the list of available solvers, please refer to the <a href="http://docs.juliadiffeq.org/dev/solvers/sde_solve.html" rel="nofollow">DifferentialEquations.jl SDE Solvers page</a> and the <a href="http://docs.juliadiffeq.org/dev/solvers/rode_solve.html" rel="nofollow">RODE Solvers page</a>.</p>
</article></div>