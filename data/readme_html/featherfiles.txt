<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-featherfiles" class="anchor" aria-hidden="true" href="#featherfiles"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FeatherFiles</h1>
<p><a href="http://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/ed51270ad41e2b842f9423b165977ac42f8498581be7c17c78818d1a45b834d5/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="Project Status: Active - The project has reached a stable, usable state and is being actively developed." data-canonical-src="http://www.repostatus.org/badges/latest/active.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/queryverse/FeatherFiles.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/282b1fb3706cc10da35d3f7f3ca4e6264c9bbf1b6ef73319dce87ea3cb3f8a71/68747470733a2f2f7472617669732d63692e6f72672f717565727976657273652f4665617468657246696c65732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/queryverse/FeatherFiles.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/queryverse/featherfiles-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/a9ec5d335d413f8a2e64717641d93d0b865d17b870920e2fd6ae213f39a3cf2a/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3864626b6731766e65773270696874722f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/8dbkg1vnew2pihtr/branch/master?svg=true" style="max-width:100%;"></a>
<a href="http://codecov.io/github/queryverse/FeatherFiles.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/57ce531c10ba53433a04775f511294004b20eaddd4954fd9757961f8a616f718/687474703a2f2f636f6465636f762e696f2f6769746875622f717565727976657273652f4665617468657246696c65732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/queryverse/FeatherFiles.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Overview</h2>
<p>This package provides load and save support for <a href="https://github.com/wesm/feather">Feather files</a> under the <a href="https://github.com/JuliaIO/FileIO.jl">FileIO.jl</a> package.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Use Pkg.add("FeatherFiles") in Julia to install FeatherFiles and its dependencies.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<h3><a id="user-content-load-a-feather-file" class="anchor" aria-hidden="true" href="#load-a-feather-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Load a feather file</h3>
<p>To read a feather file into a <code>DataFrame</code>, use the following julia code:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using FeatherFiles, DataFrames

df = DataFrame(load(&quot;data.feather&quot;))
"><pre><span class="pl-k">using</span> FeatherFiles, DataFrames

df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(<span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>data.feather<span class="pl-pds">"</span></span>))</pre></div>
<p>The call to <code>load</code> returns a <code>struct</code> that is an <a href="https://github.com/queryverse/IterableTables.jl">IterableTable.jl</a>, so it can be passed to any function that can handle iterable tables, i.e. all the sinks in <a href="https://github.com/queryverse/IterableTables.jl">IterableTable.jl</a>. Here are some examples of materializing a feather file into data structures that are not a <code>DataFrame</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using FeatherFiles, DataTables, IndexedTables, TimeSeries, Temporal, Gadfly

# Load into a DataTable
dt = DataTable(load(&quot;data.feather&quot;))

# Load into an IndexedTable
it = IndexedTable(load(&quot;data.feather&quot;))

# Load into a TimeArray
ta = TimeArray(load(&quot;data.feather&quot;))

# Load into a TS
ts = TS(load(&quot;data.feather&quot;))

# Plot directly with Gadfly
plot(load(&quot;data.feather&quot;), x=:a, y=:b, Geom.line)
"><pre><span class="pl-k">using</span> FeatherFiles, DataTables, IndexedTables, TimeSeries, Temporal, Gadfly

<span class="pl-c"><span class="pl-c">#</span> Load into a DataTable</span>
dt <span class="pl-k">=</span> <span class="pl-c1">DataTable</span>(<span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>data.feather<span class="pl-pds">"</span></span>))

<span class="pl-c"><span class="pl-c">#</span> Load into an IndexedTable</span>
it <span class="pl-k">=</span> <span class="pl-c1">IndexedTable</span>(<span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>data.feather<span class="pl-pds">"</span></span>))

<span class="pl-c"><span class="pl-c">#</span> Load into a TimeArray</span>
ta <span class="pl-k">=</span> <span class="pl-c1">TimeArray</span>(<span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>data.feather<span class="pl-pds">"</span></span>))

<span class="pl-c"><span class="pl-c">#</span> Load into a TS</span>
ts <span class="pl-k">=</span> <span class="pl-c1">TS</span>(<span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>data.feather<span class="pl-pds">"</span></span>))

<span class="pl-c"><span class="pl-c">#</span> Plot directly with Gadfly</span>
<span class="pl-c1">plot</span>(<span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>data.feather<span class="pl-pds">"</span></span>), x<span class="pl-k">=</span><span class="pl-c1">:a</span>, y<span class="pl-k">=</span><span class="pl-c1">:b</span>, Geom<span class="pl-k">.</span>line)</pre></div>
<h3><a id="user-content-save-a-feather-file" class="anchor" aria-hidden="true" href="#save-a-feather-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Save a feather file</h3>
<p>The following code saves any iterable table as a feather file:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using FeatherFiles

save(&quot;output.feather&quot;, it)
"><pre><span class="pl-k">using</span> FeatherFiles

<span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>output.feather<span class="pl-pds">"</span></span>, it)</pre></div>
<p>This will work as long as <code>it</code> is any of the types supported as sources in <a href="https://github.com/queryverse/IterableTables.jl">IterableTables.jl</a>.</p>
<h3><a id="user-content-using-the-pipe-syntax" class="anchor" aria-hidden="true" href="#using-the-pipe-syntax"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Using the pipe syntax</h3>
<p>Both <code>load</code> and <code>save</code> also support the pipe syntax. For example, to load a feather file into a <code>DataFrame</code>, one can use the following code:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using FeatherFiles, DataFrame

df = load(&quot;data.feather&quot;) |&gt; DataFrame
"><pre><span class="pl-k">using</span> FeatherFiles, DataFrame

df <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>data.feather<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> DataFrame</pre></div>
<p>To save an iterable table, one can use the following form:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using FeatherFiles, DataFrame

df = # Aquire a DataFrame somehow

df |&gt; save(&quot;output.feather&quot;)
"><pre><span class="pl-k">using</span> FeatherFiles, DataFrame

df <span class="pl-k">=</span> <span class="pl-c"><span class="pl-c">#</span> Aquire a DataFrame somehow</span>

df <span class="pl-k">|&gt;</span> <span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>output.feather<span class="pl-pds">"</span></span>)</pre></div>
<p>The pipe syntax is especially useful when combining it with <a href="https://github.com/queryverse/Query.jl">Query.jl</a> queries, for example one can easily load a feather file, pipe it into a query, then pipe it to the <code>save</code> function to store the results in a new file.</p>
</article></div>