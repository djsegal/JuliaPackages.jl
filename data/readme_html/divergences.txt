<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-divergencesjl" class="anchor" aria-hidden="true" href="#divergencesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Divergences.jl</h1>
<p dir="auto"><a href="https://codecov.io/gh/gragusa/Divergences.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d1216086fde960c785d9f0c5ac9d1d4fa0bc7b68bbd61a6204a26c4da71b576d/68747470733a2f2f636f6465636f762e696f2f67682f677261677573612f446976657267656e6365732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/gragusa/Divergences.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><code>Divergences.jl</code> is a Julia package that makes it easy to evaluate divergence measures between two vectors. The package allows calculating the <em>gradient</em>  and the diagonal of the <em>Hessian</em> of several divergences. These divergences are used to good effect by the  <a href="http://github.com/gragusa/MomentBasedEstimators.jl/git">MomentBasedEstimators</a> package.</p>
<h2 dir="auto"><a id="user-content-supported-divergences" class="anchor" aria-hidden="true" href="#supported-divergences"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Supported divergences</h2>
<p dir="auto">The package defines an abstract <code>Divergence</code> type with the following suptypes:</p>
<ul dir="auto">
<li>Kullback-Leibler divergence <code>KullbackLeibler</code></li>
<li>Chi-square distance <code>ChiSquared</code></li>
<li>Reverse Kullback-Leibler divergence <code>ReverseKullbackLeibler</code></li>
<li>Cressie-Read divergences <code>CressieRead</code></li>
</ul>
<p dir="auto">These divergences differ from the equivalent ones defined in the <code>Distances</code> package because they are normalized. Also, the package provides methods for calculating their gradient and the (diagonal elements of the) Hessian matrix.</p>
<p dir="auto">The constructors for the types above are straightforward</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="KullbackLeibler()
ChiSqaured()
ReverseKullbackLeibler()"><pre><span class="pl-c1">KullbackLeibler</span>()
<span class="pl-c1">ChiSqaured</span>()
<span class="pl-c1">ReverseKullbackLeibler</span>()</pre></div>
<p dir="auto">The <code>CressieRead</code> type define a family of divergences indexed by a parameter <code>alpha</code>. The constructor for <code>CressieRead</code> is</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="CR(::Real)"><pre><span class="pl-c1">CR</span>(<span class="pl-k">::</span><span class="pl-c1">Real</span>)</pre></div>
<p dir="auto">The Hellinger divergence is obtained by <code>CR(-1/2)</code>. For a certain value of <code>alpha</code>, <code>CressieRead</code> correspond to a divergence that has a specific type defined. For instance <code>CR(1)</code> is equivalent to <code>ChiSquared</code> although the underlying code for evaluation and calculation of the gradient and Hessian are different.</p>
<p dir="auto">Three versions of each divergence in the above list are implemented currently. A <em>vanilla</em> version, a modified version, and a fully modified version. These modifications extend the domain of the divergence.</p>
<p dir="auto">The <strong>modified</strong> version takes an additional argument that specifies the point at which the divergence is modified by a convex extension.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ModifiedKullbackLeibler(theta::Real)
ModifiedReverseKullbackLeibler(theta::Real)
ModifiedCressieRead(alpha::Real, theta::Real)"><pre><span class="pl-c1">ModifiedKullbackLeibler</span>(theta<span class="pl-k">::</span><span class="pl-c1">Real</span>)
<span class="pl-c1">ModifiedReverseKullbackLeibler</span>(theta<span class="pl-k">::</span><span class="pl-c1">Real</span>)
<span class="pl-c1">ModifiedCressieRead</span>(alpha<span class="pl-k">::</span><span class="pl-c1">Real</span>, theta<span class="pl-k">::</span><span class="pl-c1">Real</span>)</pre></div>
<p dir="auto">Similarly, the <strong>fully modified</strong> version takes <strong>two</strong> additional arguments that specify the points at which the divergence is modified by a convex extensions.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="FullyModifiedKullbackLeibler(phi::Real, theta::Real)
FullyModifiedReverseKullbackLeibler(phi::Real, theta::Real)
FullyModifiedCressieRead(alpha::Real, phi::Real, theta::Real)"><pre><span class="pl-c1">FullyModifiedKullbackLeibler</span>(phi<span class="pl-k">::</span><span class="pl-c1">Real</span>, theta<span class="pl-k">::</span><span class="pl-c1">Real</span>)
<span class="pl-c1">FullyModifiedReverseKullbackLeibler</span>(phi<span class="pl-k">::</span><span class="pl-c1">Real</span>, theta<span class="pl-k">::</span><span class="pl-c1">Real</span>)
<span class="pl-c1">FullyModifiedCressieRead</span>(alpha<span class="pl-k">::</span><span class="pl-c1">Real</span>, phi<span class="pl-k">::</span><span class="pl-c1">Real</span>, theta<span class="pl-k">::</span><span class="pl-c1">Real</span>)</pre></div>
<h2 dir="auto"><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic usage</h2>
<h3 dir="auto"><a id="user-content-divergence-between-two-vectors" class="anchor" aria-hidden="true" href="#divergence-between-two-vectors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Divergence between two vectors</h3>
<p dir="auto">Each divergence corresponds to a <em>divergence type</em>. You can always compute a certain divergence between two vectors using the following syntax</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="d = evaluate(div, x, y)"><pre>d <span class="pl-k">=</span> <span class="pl-c1">evaluate</span>(div, x, y)</pre></div>
<p dir="auto">Here, <code>div</code> is an instance of a divergence type. For example, the type for Kullback Leibler divergence is <code>KullbackLeibler</code> (more divergence types are described in some details in what follows), then the Kullback Leibler divergence between <code>x</code> and <code>y</code> can be computed</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="d = evaluate(KullbackLeibler(), x, y)"><pre>d <span class="pl-k">=</span> <span class="pl-c1">evaluate</span>(<span class="pl-c1">KullbackLeibler</span>(), x, y)</pre></div>
<p dir="auto">We can also calculate the diverge between the vector <code>x</code> and the unit vector</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="r = evaluate(KullbackLeibler(), x)"><pre>r <span class="pl-k">=</span> <span class="pl-c1">evaluate</span>(<span class="pl-c1">KullbackLeibler</span>(), x)</pre></div>
<p dir="auto">The <code>Divergence</code> type is a subtype of <code>PreMetric</code> defined in the <code>Distances</code> package. As such, the divergences can be evaluated row-wise and column-wise for <code>X::Matrix</code> and <code>Y::Matrix</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="rowise(div, X, Y)"><pre><span class="pl-c1">rowise</span>(div, X, Y)</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="colwise(div, X, Y)"><pre><span class="pl-c1">colwise</span>(div, X, Y)</pre></div>
<h3 dir="auto"><a id="user-content-gradient-of-the-divergence" class="anchor" aria-hidden="true" href="#gradient-of-the-divergence"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Gradient of the divergence</h3>
<p dir="auto">To calculate the gradient of  <code>div::Divergence</code> with respect to <code>x::AbstractArray{Float64, 1}</code> the
<code>gradient</code> method can be used</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="g = gradient(div, x, y)"><pre>g <span class="pl-k">=</span> <span class="pl-c1">gradient</span>(div, x, y)</pre></div>
<p dir="auto">or through its in-place version</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="gradient!(Array(Float64, size(x)), div, x, y)"><pre><span class="pl-c1">gradient!</span>(<span class="pl-c1">Array</span>(Float64, <span class="pl-c1">size</span>(x)), div, x, y)</pre></div>
<h3 dir="auto"><a id="user-content-hessian-of-the-divergence" class="anchor" aria-hidden="true" href="#hessian-of-the-divergence"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hessian of the divergence</h3>
<p dir="auto">The <code>hessian</code> method calculate the Hessian of the divergence with respect to <code>x</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="h = hessian(div, x, y)"><pre>h <span class="pl-k">=</span> <span class="pl-c1">hessian</span>(div, x, y)</pre></div>
<p dir="auto">Its in-place variant is also defined</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="hessian!(Array(Float64, size(x)), div, x, y)"><pre><span class="pl-c1">hessian!</span>(<span class="pl-c1">Array</span>(Float64, <span class="pl-c1">size</span>(x)), div, x, y)</pre></div>
<p dir="auto">Notice that the Hessian of a divergence is sparse, where the diagonal entries are the only ones different from zero. For this reason, <code>hessian(div, x, y)</code> return an <code>Array{Float64,1}</code> with the diagonal entries of the hessian.</p>
<h2 dir="auto"><a id="user-content-list-of-divergences" class="anchor" aria-hidden="true" href="#list-of-divergences"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>List of divergences</h2>
<p dir="auto">[To be added]</p>
</article></div>