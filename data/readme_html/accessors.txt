<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-accessors" class="anchor" aria-hidden="true" href="#accessors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Accessors</h1>
<p dir="auto"><a href="https://juliaobjects.github.io/Accessors.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="DocStable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://juliaobjects.github.io/Accessors.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="DocDev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaObjects/Accessors.jl/workflows/CI/badge.svg"><img src="https://github.com/JuliaObjects/Accessors.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a></p>
<p dir="auto">The goal of <a href="https://github.com/JuliaObjects/Accessors.jl">Accessors.jl</a> is to make updating immutable data simple.
It is the successor of <a href="https://github.com/jw3126/Setfield.jl">Setfield.jl</a>.</p>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<p dir="auto">Say you have some immutable data structure, such as a <code>NamedTuple</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; nt = (a=1, b=2)
(a = 1, b = 2)
"><pre>julia<span class="pl-k">&gt;</span> nt <span class="pl-k">=</span> (a<span class="pl-k">=</span><span class="pl-c1">1</span>, b<span class="pl-k">=</span><span class="pl-c1">2</span>)
(a <span class="pl-k">=</span> <span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-c1">2</span>)
</pre></div>
<p dir="auto">If you try something like <code>nt.b=3</code>, it will throw an error. But
using Accessors, we can change it anyways:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Accessors

julia&gt; @set nt.b=3
(a = 1, b = 3)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Accessors

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@set</span> nt<span class="pl-k">.</span>b<span class="pl-k">=</span><span class="pl-c1">3</span>
(a <span class="pl-k">=</span> <span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-c1">3</span>)</pre></div>
<p dir="auto">Note that this only returns an updated copy of <code>nt</code>, and <em>does not overwrite or mutate</em> the
value bound to <code>nt</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; nt
(a = 1, b = 2)"><pre>julia<span class="pl-k">&gt;</span> nt
(a <span class="pl-k">=</span> <span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-c1">2</span>)</pre></div>
<p dir="auto">To overwrite the old definition, we can rebind <code>nt</code> to the new version:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; nt = @set nt.b=3
(a = 1, b = 3)

julia&gt; nt
(a = 1, b = 3)"><pre>julia<span class="pl-k">&gt;</span> nt <span class="pl-k">=</span> <span class="pl-c1">@set</span> nt<span class="pl-k">.</span>b<span class="pl-k">=</span><span class="pl-c1">3</span>
(a <span class="pl-k">=</span> <span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-c1">3</span>)

julia<span class="pl-k">&gt;</span> nt
(a <span class="pl-k">=</span> <span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-c1">3</span>)</pre></div>
<p dir="auto">As this is a common use case, the convenience macro <code>@reset</code> rebinds the variable (<code>nt</code>) to the updated version:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; @reset nt.b=4
(a = 1, b = 4)

julia&gt; nt
(a = 1, b = 4)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@reset</span> nt<span class="pl-k">.</span>b<span class="pl-k">=</span><span class="pl-c1">4</span>
(a <span class="pl-k">=</span> <span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-c1">4</span>)

julia<span class="pl-k">&gt;</span> nt
(a <span class="pl-k">=</span> <span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-c1">4</span>)</pre></div>
<p dir="auto">For more detail, see <a href="https://juliaobjects.github.io/Accessors.jl/stable/getting_started/" rel="nofollow">this tutorial</a> and/or watch this video:</p>
<p dir="auto"><a href="https://youtu.be/vkAOYeTpLg0" title="Changing the immutable" rel="nofollow"><img src="https://camo.githubusercontent.com/efd8c7016f544d622c29d107aa3fd9c56baecd883ec1f1ea01634e8990bc8b3d/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f766b414f596554704c67302f302e6a7067" alt="JuliaCon2020 Changing the immutable" data-canonical-src="https://img.youtube.com/vi/vkAOYeTpLg0/0.jpg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-featured-extensions" class="anchor" aria-hidden="true" href="#featured-extensions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Featured extensions</h1>
<ul dir="auto">
<li><a href="https://gitlab.com/aplavin/AccessorsExtra.jl" rel="nofollow">AccessorsExtra.jl</a> [<a href="https://aplavin.github.io/AccessorsExtra.jl/test/notebook.html" rel="nofollow">docs</a>] introduces additional optics and related functions, that are considered too experimental for inclusion in <code>Accessors</code>. For Julia 1.8 and older, <code>AccessorsExtra</code> also provides integrations with other packages; for Julia 1.9+, these are mostly included in <code>Accessors</code> itself.</li>
</ul>
</article></div>