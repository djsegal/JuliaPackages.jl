<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-pyvenvs-julian-interface-for-pythonic-virtual-environments" class="anchor" aria-hidden="true" href="#pyvenvs-julian-interface-for-pythonic-virtual-environments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PyVenvs: Julian interface for Pythonic virtual environments</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="module MyPackage

using PyVenvs

@pyvenv CLI_VENV requirements=&quot;&quot;&quot;
Pygments ==2.*
docutils ==0.16.*
&quot;&quot;&quot;

function __init__()
    PyVenvs.init(CLI_VENV)
end

pygmentize(args::Cmd) = Cmd(CLI_VENV, `pygmentize $args`)
rst2html(args::Cmd) = Cmd(CLI_VENV, `rst2html.py $args`)

end # module"><pre><span class="pl-k">module</span> MyPackage

<span class="pl-k">using</span> PyVenvs

<span class="pl-c1">@pyvenv</span> CLI_VENV requirements<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">Pygments ==2.*</span>
<span class="pl-s">docutils ==0.16.*</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>

<span class="pl-k">function</span> <span class="pl-en">__init__</span>()
    PyVenvs<span class="pl-k">.</span><span class="pl-c1">init</span>(CLI_VENV)
<span class="pl-k">end</span>

<span class="pl-en">pygmentize</span>(args<span class="pl-k">::</span><span class="pl-c1">Cmd</span>) <span class="pl-k">=</span> <span class="pl-c1">Cmd</span>(CLI_VENV, <span class="pl-s"><span class="pl-pds">`</span>pygmentize $args<span class="pl-pds">`</span></span>)
<span class="pl-en">rst2html</span>(args<span class="pl-k">::</span><span class="pl-c1">Cmd</span>) <span class="pl-k">=</span> <span class="pl-c1">Cmd</span>(CLI_VENV, <span class="pl-s"><span class="pl-pds">`</span>rst2html.py $args<span class="pl-pds">`</span></span>)

<span class="pl-k">end</span> <span class="pl-c"><span class="pl-c">#</span> module</span></pre></div>
<h2 dir="auto"><a id="user-content-pycall-integration" class="anchor" aria-hidden="true" href="#pycall-integration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PyCall integration</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using PyVenvs

julia&gt; PyVenvs.init_pycall()

julia&gt; using PyCall"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PyVenvs

julia<span class="pl-k">&gt;</span> PyVenvs<span class="pl-k">.</span><span class="pl-c1">init_pycall</span>()

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PyCall</pre></div>
<p dir="auto">Note that <code>PyVenvs.init_pycall</code> should <em>not</em> be called in packages.
Typically, it should be called at the beginning of a script or REPL
session as soon as possible.</p>
</article></div>