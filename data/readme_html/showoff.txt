<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-showoff" class="anchor" aria-hidden="true" href="#showoff"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Showoff</h1>
<p><a href="http://pkg.julialang.org/?pkg=Showoff" rel="nofollow"><img src="https://camo.githubusercontent.com/5989eb4dd6d12e73b26e75a96eaf16ac503bfa2e/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f53686f776f66665f302e362e737667" alt="Showoff" data-canonical-src="http://pkg.julialang.org/badges/Showoff_0.6.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=Showoff" rel="nofollow"><img src="https://camo.githubusercontent.com/4c6cd3ff5949216310d24ec8710e1a158fd303a5/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f53686f776f66665f302e372e737667" alt="Showoff" data-canonical-src="http://pkg.julialang.org/badges/Showoff_0.7.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/JuliaGraphics/Showoff.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/89b8f71c4dbf7462138f26f95323c1f7a0a070c4/68747470733a2f2f7472617669732d63692e6f72672f4a756c696147726170686963732f53686f776f66662e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaGraphics/Showoff.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaGraphics/Showoff.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/91077fa3086e60b2f7883668e213635d5009d2ca/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c696147726170686963732f53686f776f66662e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaGraphics/Showoff.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>Showoff provides an interface for consistently formatting an array of n things,
e.g. numbers, dates, unitful values. It's used in Gadfly to
label axes and keys.</p>
<p>It defines a function called <code>showoff</code> that takes an <code>AbstractArray</code> of some
type and returns an array of strings of the same length.</p>
<p>If you want your type to look nice when plotted, just define a <code>showoff</code>
function. Here's an example.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Showoff

<span class="pl-k">struct</span> Percent
    value<span class="pl-k">::</span><span class="pl-c1">Float64</span>
<span class="pl-k">end</span>

<span class="pl-k">function</span> Showoff<span class="pl-k">.</span><span class="pl-en">showoff</span>(xs<span class="pl-k">::</span><span class="pl-c1">AbstractArray{Percent}</span>)
    <span class="pl-k">return</span> [<span class="pl-c1">string</span>(x, <span class="pl-s"><span class="pl-pds">"</span>%<span class="pl-pds">"</span></span>) <span class="pl-k">for</span> x <span class="pl-k">in</span> <span class="pl-c1">showoff</span>([x<span class="pl-k">.</span>value <span class="pl-k">for</span> x <span class="pl-k">in</span> xs])]
<span class="pl-k">end</span></pre></div>
<p>Now we (and more importantly, Gadfly) can print percentages like:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">map</span>(println, <span class="pl-c1">showoff</span>([<span class="pl-c1">Percent</span>(<span class="pl-c1">100</span> <span class="pl-k">*</span> <span class="pl-c1">rand</span>()) <span class="pl-k">for</span> _ <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">20</span>]))</pre></div>
<pre><code>60.505943%
73.255897%
97.477079%
43.330976%
69.023165%
52.580184%
13.011683%
22.718034%
93.843776%
29.875979%
64.110999%
91.203653%
91.534161%
80.684188%
81.674362%
11.530227%
30.498260%
38.876922%
35.444115%
8.857208%
</code></pre>
<p>Notice, that compared to <code>show</code>, these all have the same number of digits
trailing the <code>.</code>, and look nice when right-aligned.</p>
<p>When no specialized <code>showoff</code> is defined, it falls back on the <code>show</code> function.</p>
<p>This package was originally written by <a href="https://github.com/dcjones">Daniel C. Jones</a>.</p>
</article></div>