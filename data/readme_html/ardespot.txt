<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-ardespot" class="anchor" aria-hidden="true" href="#ardespot"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ARDESPOT</h1>
<p dir="auto"><a href="https://github.com/JuliaPOMDP/ARDESPOT.jl/actions/workflows/CI.yml"><img src="https://github.com/JuliaPOMDP/ARDESPOT.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/JuliaPOMDP/ARDESPOT.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/0504dec935ffb5307c013fcb1eb5919885ef81f2842ebff2efb786b6aa030454/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c6961504f4d44502f4152444553504f542e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaPOMDP/ARDESPOT.jl/badge.svg?branch=master&amp;service=github" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/JuliaPOMDP/ARDESPOT.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/2f72c680800593541a0187ec7964982d14d7e45430edb6baa1136e17f0880558/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c6961504f4d44502f4152444553504f542e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaPOMDP/ARDESPOT.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">An implementation of the AR-DESPOT (Anytime Regularized DEterminized Sparse Partially Observable Tree) online POMDP Solver.</p>
<p dir="auto">Tried to match the pseudocode from this paper: <a href="http://bigbird.comp.nus.edu.sg/m2ap/wordpress/wp-content/uploads/2017/08/jair14.pdf" rel="nofollow">http://bigbird.comp.nus.edu.sg/m2ap/wordpress/wp-content/uploads/2017/08/jair14.pdf</a> as closely as possible. Look there for definitions of all symbols.</p>
<p dir="auto">Problems use the <a href="https://github.com/JuliaPOMDP/POMDPs.jl">POMDPs.jl generative interface</a>.</p>
<p dir="auto">If you are trying to use this package and require more documentation, please file an issue!</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">On Julia v1.0 or later, ARDESPOT is in the Julia General registry</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;POMDPs&quot;)
Pkg.add(&quot;ARDESPOT&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>POMDPs<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>ARDESPOT<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using POMDPs, POMDPModels, ARDESPOT
using POMDPTools

pomdp = TigerPOMDP()

solver = DESPOTSolver(bounds=(-20.0, 0.0))
planner = solve(solver, pomdp)

for (s, a, o) in stepthrough(pomdp, planner, &quot;s,a,o&quot;, max_steps=10)
    println(&quot;State was $s,&quot;)
    println(&quot;action $a was taken,&quot;)
    println(&quot;and observation $o was received.\n&quot;)
end"><pre><span class="pl-k">using</span> POMDPs, POMDPModels, ARDESPOT
<span class="pl-k">using</span> POMDPTools

pomdp <span class="pl-k">=</span> <span class="pl-c1">TigerPOMDP</span>()

solver <span class="pl-k">=</span> <span class="pl-c1">DESPOTSolver</span>(bounds<span class="pl-k">=</span>(<span class="pl-k">-</span><span class="pl-c1">20.0</span>, <span class="pl-c1">0.0</span>))
planner <span class="pl-k">=</span> <span class="pl-c1">solve</span>(solver, pomdp)

<span class="pl-k">for</span> (s, a, o) <span class="pl-k">in</span> <span class="pl-c1">stepthrough</span>(pomdp, planner, <span class="pl-s"><span class="pl-pds">"</span>s,a,o<span class="pl-pds">"</span></span>, max_steps<span class="pl-k">=</span><span class="pl-c1">10</span>)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>State was <span class="pl-v">$s</span>,<span class="pl-pds">"</span></span>)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>action <span class="pl-v">$a</span> was taken,<span class="pl-pds">"</span></span>)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>and observation <span class="pl-v">$o</span> was received.<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
<p dir="auto">For minimal examples of problem implementations, see <a href="https://github.com/JuliaPOMDP/BasicPOMCP.jl/blob/master/notebooks/Minimal_Example.ipynb">this notebook</a> and <a href="http://juliapomdp.github.io/POMDPs.jl/latest/generative/" rel="nofollow">the POMDPs.jl generative docs</a>.</p>
<h2 dir="auto"><a id="user-content-solver-options" class="anchor" aria-hidden="true" href="#solver-options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Solver Options</h2>
<p dir="auto">Solver options can be found in the <code>DESPOTSolver</code> docstring and accessed using <a href="https://docs.julialang.org/en/v1/manual/documentation/#Accessing-Documentation-1" rel="nofollow">Julia's built in documentation system</a> (or directly in the <a href="/src/ARDESPOT.jl">Solver source code</a>). Each option has its own docstring and can be set with a keyword argument in the <code>DESPOTSolver</code> constructor. The definitions of the parameters match as closely as possible to the corresponding definition in the pseudocode of <a href="http://bigbird.comp.nus.edu.sg/m2ap/wordpress/wp-content/uploads/2017/08/jair14.pdf" rel="nofollow">this paper</a>.</p>
<h3 dir="auto"><a id="user-content-bounds" class="anchor" aria-hidden="true" href="#bounds"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bounds</h3>
<h4 dir="auto"><a id="user-content-independent-bounds" class="anchor" aria-hidden="true" href="#independent-bounds"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Independent bounds</h4>
<p dir="auto">In most cases, the recommended way to specify bounds is with an <code>IndependentBounds</code> object, i.e.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="DESPOTSolver(bounds=IndependentBounds(lower, upper))"><pre><span class="pl-c1">DESPOTSolver</span>(bounds<span class="pl-k">=</span><span class="pl-c1">IndependentBounds</span>(lower, upper))</pre></div>
<p dir="auto">where <code>lower</code> and <code>upper</code> are either a number or a function (see below).</p>
<p dir="auto">Often, the lower bound is calculated with a default policy, this can be accomplished using a <code>DefaultPolicyLB</code> with any <code>Solver</code> or <code>Policy</code>.</p>
<p dir="auto">If <code>lower</code> or <code>upper</code> is a function, it should handle two arguments. The first is the <code>POMDP</code> object and the second is the <code>ScenarioBelief</code>. To access the state particles in a <code>ScenairoBelief</code> <code>b</code>, use <code>particles(b)</code> (or <code>collect(particles(b))</code> to get a vector).</p>
<p dir="auto">In most cases, the <code>check_terminal</code> and <code>consistency_fix_thresh</code> keyword arguments of <code>IndependentBounds</code> should be used to add robustness (see the <code>IndependentBounds</code> docstring for more info).</p>
<h5 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h5>
<p dir="auto">For the <code>BabyPOMDP</code> from <code>POMDPModels</code>, bounds setup might look like this:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using POMDPModels
using POMDPTools
always_feed = FunctionPolicy(b-&gt;true)
lower = DefaultPolicyLB(always_feed)

function upper(pomdp::BabyPOMDP, b::ScenarioBelief)
    if all(s==true for s in particles(b)) # all particles are hungry
        return pomdp.r_hungry # the baby is hungry this time, but then becomes full magically and stays that way forever
    else
        return 0.0 # the baby magically stays full forever
    end
end

solver = DESPOTSolver(bounds=IndependentBounds(lower, upper))"><pre><span class="pl-k">using</span> POMDPModels
<span class="pl-k">using</span> POMDPTools
always_feed <span class="pl-k">=</span> <span class="pl-c1">FunctionPolicy</span>(b<span class="pl-k">-&gt;</span><span class="pl-c1">true</span>)
lower <span class="pl-k">=</span> <span class="pl-c1">DefaultPolicyLB</span>(always_feed)

<span class="pl-k">function</span> <span class="pl-en">upper</span>(pomdp<span class="pl-k">::</span><span class="pl-c1">BabyPOMDP</span>, b<span class="pl-k">::</span><span class="pl-c1">ScenarioBelief</span>)
    <span class="pl-k">if</span> <span class="pl-c1">all</span>(s<span class="pl-k">==</span><span class="pl-c1">true</span> <span class="pl-k">for</span> s <span class="pl-k">in</span> <span class="pl-c1">particles</span>(b)) <span class="pl-c"><span class="pl-c">#</span> all particles are hungry</span>
        <span class="pl-k">return</span> pomdp<span class="pl-k">.</span>r_hungry <span class="pl-c"><span class="pl-c">#</span> the baby is hungry this time, but then becomes full magically and stays that way forever</span>
    <span class="pl-k">else</span>
        <span class="pl-k">return</span> <span class="pl-c1">0.0</span> <span class="pl-c"><span class="pl-c">#</span> the baby magically stays full forever</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

solver <span class="pl-k">=</span> <span class="pl-c1">DESPOTSolver</span>(bounds<span class="pl-k">=</span><span class="pl-c1">IndependentBounds</span>(lower, upper))</pre></div>
<h4 dir="auto"><a id="user-content-non-independent-bounds" class="anchor" aria-hidden="true" href="#non-independent-bounds"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Non-Independent bounds</h4>
<p dir="auto">Bounds need not be calculated independently; a single function that takes in the <code>POMDP</code> and <code>ScenarioBelief</code> and returns a tuple containing the lower and upper bounds can be passed to the <code>bounds</code> argument.</p>
<h2 dir="auto"><a id="user-content-visualization" class="anchor" aria-hidden="true" href="#visualization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Visualization</h2>
<p dir="auto"><a href="https://github.com/sisl/D3Trees.jl">D3Trees.jl</a> can be used to visualize the search tree, for example</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using POMDPs, POMDPModels, D3Trees, ARDESPOT
using POMDPTools

pomdp = TigerPOMDP()

solver = DESPOTSolver(bounds=(-20.0, 0.0), tree_in_info=true)
planner = solve(solver, pomdp)
b0 = initialstate_distribution(pomdp)

a, info = action_info(planner, b0)
inchrome(D3Tree(info[:tree], init_expand=5))"><pre><span class="pl-k">using</span> POMDPs, POMDPModels, D3Trees, ARDESPOT
<span class="pl-k">using</span> POMDPTools

pomdp <span class="pl-k">=</span> <span class="pl-c1">TigerPOMDP</span>()

solver <span class="pl-k">=</span> <span class="pl-c1">DESPOTSolver</span>(bounds<span class="pl-k">=</span>(<span class="pl-k">-</span><span class="pl-c1">20.0</span>, <span class="pl-c1">0.0</span>), tree_in_info<span class="pl-k">=</span><span class="pl-c1">true</span>)
planner <span class="pl-k">=</span> <span class="pl-c1">solve</span>(solver, pomdp)
b0 <span class="pl-k">=</span> <span class="pl-c1">initialstate_distribution</span>(pomdp)

a, info <span class="pl-k">=</span> <span class="pl-c1">action_info</span>(planner, b0)
<span class="pl-c1">inchrome</span>(<span class="pl-c1">D3Tree</span>(info[<span class="pl-c1">:tree</span>], init_expand<span class="pl-k">=</span><span class="pl-c1">5</span>))</pre></div>
<p dir="auto">will create an interactive tree that looks like this:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="img/tree.png"><img src="img/tree.png" alt="DESPOT tree" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-relationship-to-despotjl" class="anchor" aria-hidden="true" href="#relationship-to-despotjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Relationship to DESPOT.jl</h2>
<p dir="auto"><a href="https://github.com/JuliaPOMDP/DESPOT.jl">DESPOT.jl</a> was designed to exactly emulate the <a href="https://github.com/AdaCompNUS/despot">C++ code</a> released by the original DESPOT developers. This implementation was designed to be as close to the pseudocode from the journal paper as possible for the sake of readability. ARDESPOT has a few more features (for example DESPOT.jl does not implement regularization and pruning), and has more compatibility with a wider range of POMDPs.jl problems because it does not emulate the C++ code.</p>
</article></div>