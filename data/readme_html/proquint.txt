<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-proquint" class="anchor" aria-hidden="true" href="#proquint"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Proquint</h1>
<p dir="auto">Proquints: Identifiers that are readable, spellable, and pronounceable</p>
<p dir="auto"><a href="https://pbayer.github.io/Proquint.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://pbayer.github.io/Proquint.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/pbayer/Proquint.jl/actions"><img src="https://github.com/pbayer/Proquint.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/pbayer/Proquint.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ab1e0de150755bfa0a1b7bb5d3bc74915e0601559a4d076f61afc3e6e31c9e43/68747470733a2f2f636f6465636f762e696f2f67682f7062617965722f50726f7175696e742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/pbayer/Proquint.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This is a Julia implementation of Wilkerson's proquints
described in his article <a href="http://arXiv.org/html/0901.4016" rel="nofollow">http://arXiv.org/html/0901.4016</a>.</p>
<p dir="auto">In short 16 bits get represented in a "proquint" as alternating
consonants and vowels</p>
<p dir="auto">Four-bits as a consonant:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="0 1 2 3 4 5 6 7 8 9 A B C D E F
b d f g h j k l m n p r s t v z"><pre class="notranslate"><code>0 1 2 3 4 5 6 7 8 9 A B C D E F
b d f g h j k l m n p r s t v z
</code></pre></div>
<p dir="auto">Two-bits as a vowel:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="0 1 2 3
a i o u"><pre class="notranslate"><code>0 1 2 3
a i o u
</code></pre></div>
<p dir="auto">Whole 16-bit word, where "con" = consonant, "vo" = vowel:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content=" 0 1 2 3 4 5 6 7 8 9 A B C D E F
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|con    |vo |con    |vo |con    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"><pre class="notranslate"><code> 0 1 2 3 4 5 6 7 8 9 A B C D E F
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|con    |vo |con    |vo |con    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</code></pre></div>
<p dir="auto">Proquints are separated by dashes <code>-</code>.</p>
<h2 dir="auto"><a id="user-content-short-form-extension" class="anchor" aria-hidden="true" href="#short-form-extension"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Short Form (extension)</h2>
<p dir="auto">The short form does not encode leading zeros of 16-bit words and if an entire word is 0, it gets encoded as "x".</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">The <code>UInt32</code> <code>0x0a484904</code> is in bit representation:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="0000 10 1001 00 1000  0100 10 0100 00 0100
  b   o   n   a   m  -  h   o   h   a   h
      o   n   a   m  -  h   o   h   a   h   # short form"><pre class="notranslate"><code>0000 10 1001 00 1000  0100 10 0100 00 0100
  b   o   n   a   m  -  h   o   h   a   h
      o   n   a   m  -  h   o   h   a   h   # short form
</code></pre></div>
<p dir="auto">The IP address <code>127.0.0.1</code> is a <code>0x7f000001</code> <code>UInt32</code>:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="0111 11 1100 00 0000  0000 00 0000 00 0001
  l   u   s   a   b  -  b   a   b   a   d
  l   u   s   a   b  -                  d   # short form"><pre class="notranslate"><code>0111 11 1100 00 0000  0000 00 0000 00 0001
  l   u   s   a   b  -  b   a   b   a   d
  l   u   s   a   b  -                  d   # short form
</code></pre></div>
<p dir="auto">Proquints are unambiguous and can be generated from integers
and converted back to them.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Proquint

julia&gt; uint2quint(0x7f000001)
&quot;lusab-babad&quot;

julia&gt; uint2quint(0x7f000001, short=true) # this gives the short version
&quot;lusab-d&quot;

julia&gt; quint2uint(&quot;lusab-babad&quot;, UInt32)
0x7f000001

julia&gt; quint2uint(&quot;lusab-d&quot;, UInt32)
0x7f000001"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Proquint

julia<span class="pl-k">&gt;</span> <span class="pl-c1">uint2quint</span>(<span class="pl-c1">0x7f000001</span>)
<span class="pl-s"><span class="pl-pds">"</span>lusab-babad<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">uint2quint</span>(<span class="pl-c1">0x7f000001</span>, short<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> this gives the short version</span>
<span class="pl-s"><span class="pl-pds">"</span>lusab-d<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">quint2uint</span>(<span class="pl-s"><span class="pl-pds">"</span>lusab-babad<span class="pl-pds">"</span></span>, UInt32)
<span class="pl-c1">0x7f000001</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">quint2uint</span>(<span class="pl-s"><span class="pl-pds">"</span>lusab-d<span class="pl-pds">"</span></span>, UInt32)
<span class="pl-c1">0x7f000001</span></pre></div>
<h2 dir="auto"><a id="user-content-64-bit-words" class="anchor" aria-hidden="true" href="#64-bit-words"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>64-bit Words</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; a = [123]
1-element Array{Int64,1}:
 123

julia&gt; addr = convert(UInt, pointer_from_objref(a))
0x00000001150cf910

julia&gt; uint2quint(addr)
&quot;babab-babad-dihas-zohib&quot;

julia&gt; uint2quint(addr, short=true)
&quot;x-d-dihas-zohib&quot;

julia&gt; quint2uint(&quot;babab-babad-dihas-zohib&quot;)
0x00000001150cf910

julia&gt; quint2uint(&quot;x-d-dihas-zohib&quot;)
0x00000001150cf910

julia&gt; uint2quint(0x00000001150c0000, short=true)
&quot;x-d-dihas-x&quot;

julia&gt; quint2uint(&quot;x-d-dihas-x&quot;)
0x00000001150c0000"><pre>julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> [<span class="pl-c1">123</span>]
<span class="pl-c1">1</span><span class="pl-k">-</span>element Array{Int64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">123</span>

julia<span class="pl-k">&gt;</span> addr <span class="pl-k">=</span> <span class="pl-c1">convert</span>(UInt, <span class="pl-c1">pointer_from_objref</span>(a))
<span class="pl-c1">0x00000001150cf910</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">uint2quint</span>(addr)
<span class="pl-s"><span class="pl-pds">"</span>babab-babad-dihas-zohib<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">uint2quint</span>(addr, short<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-s"><span class="pl-pds">"</span>x-d-dihas-zohib<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">quint2uint</span>(<span class="pl-s"><span class="pl-pds">"</span>babab-babad-dihas-zohib<span class="pl-pds">"</span></span>)
<span class="pl-c1">0x00000001150cf910</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">quint2uint</span>(<span class="pl-s"><span class="pl-pds">"</span>x-d-dihas-zohib<span class="pl-pds">"</span></span>)
<span class="pl-c1">0x00000001150cf910</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">uint2quint</span>(<span class="pl-c1">0x00000001150c0000</span>, short<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-s"><span class="pl-pds">"</span>x-d-dihas-x<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">quint2uint</span>(<span class="pl-s"><span class="pl-pds">"</span>x-d-dihas-x<span class="pl-pds">"</span></span>)
<span class="pl-c1">0x00000001150c0000</span></pre></div>
<h2 dir="auto"><a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Benchmarks</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using BenchmarkTools

julia&gt; @btime uint2quint(0x7f000001)
  218.109 ns (9 allocations: 416 bytes)
&quot;lusab-babad&quot;

julia&gt; @btime uint2quint(0x7f000001, short=true)
  289.967 ns (11 allocations: 640 bytes)
&quot;lusab-d&quot;

julia&gt; @btime quint2uint(&quot;lusab-babad&quot;, UInt32)
  331.712 ns (3 allocations: 320 bytes)
0x7f000001

julia&gt; @btime quint2uint(&quot;lusab-d&quot;, UInt32)
  282.788 ns (3 allocations: 320 bytes)
0x7f000001

julia&gt; versioninfo()
Julia Version 1.5.3
Commit 788b2c77c1 (2020-11-09 13:37 UTC)
Platform Info:
  OS: macOS (x86_64-apple-darwin18.7.0)
  CPU: Intel(R) Core(TM) i9-9880H CPU @ 2.30GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> BenchmarkTools

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@btime</span> <span class="pl-c1">uint2quint</span>(<span class="pl-c1">0x7f000001</span>)
  <span class="pl-c1">218.109</span> ns (<span class="pl-c1">9</span> allocations<span class="pl-k">:</span> <span class="pl-c1">416</span> bytes)
<span class="pl-s"><span class="pl-pds">"</span>lusab-babad<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@btime</span> <span class="pl-c1">uint2quint</span>(<span class="pl-c1">0x7f000001</span>, short<span class="pl-k">=</span><span class="pl-c1">true</span>)
  <span class="pl-c1">289.967</span> ns (<span class="pl-c1">11</span> allocations<span class="pl-k">:</span> <span class="pl-c1">640</span> bytes)
<span class="pl-s"><span class="pl-pds">"</span>lusab-d<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@btime</span> <span class="pl-c1">quint2uint</span>(<span class="pl-s"><span class="pl-pds">"</span>lusab-babad<span class="pl-pds">"</span></span>, UInt32)
  <span class="pl-c1">331.712</span> ns (<span class="pl-c1">3</span> allocations<span class="pl-k">:</span> <span class="pl-c1">320</span> bytes)
<span class="pl-c1">0x7f000001</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@btime</span> <span class="pl-c1">quint2uint</span>(<span class="pl-s"><span class="pl-pds">"</span>lusab-d<span class="pl-pds">"</span></span>, UInt32)
  <span class="pl-c1">282.788</span> ns (<span class="pl-c1">3</span> allocations<span class="pl-k">:</span> <span class="pl-c1">320</span> bytes)
<span class="pl-c1">0x7f000001</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">versioninfo</span>()
Julia Version <span class="pl-c1">1.5</span>.<span class="pl-c1">3</span>
Commit <span class="pl-c1">788</span>b2c77c1 (<span class="pl-c1">2020</span><span class="pl-k">-</span><span class="pl-c1">11</span><span class="pl-k">-</span><span class="pl-c1">09</span> <span class="pl-c1">13</span><span class="pl-k">:</span><span class="pl-c1">37</span> UTC)
Platform Info<span class="pl-k">:</span>
  OS<span class="pl-k">:</span> macOS (x86_64<span class="pl-k">-</span>apple<span class="pl-k">-</span>darwin18.<span class="pl-c1">7.0</span>)
  CPU<span class="pl-k">:</span> <span class="pl-c1">Intel</span>(R) <span class="pl-c1">Core</span>(TM) i9<span class="pl-k">-</span><span class="pl-c1">9880</span>H CPU @ <span class="pl-c1">2.30</span>GHz
  WORD_SIZE<span class="pl-k">:</span> <span class="pl-c1">64</span>
  LIBM<span class="pl-k">:</span> libopenlibm
  LLVM<span class="pl-k">:</span> libLLVM<span class="pl-k">-</span><span class="pl-c1">9.0</span>.<span class="pl-c1">1</span> (ORCJIT, skylake)</pre></div>
</article></div>