<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4486578/59233116-77ec4a00-8c2a-11e9-87f3-012137752347.png"><img src="https://user-images.githubusercontent.com/4486578/59233116-77ec4a00-8c2a-11e9-87f3-012137752347.png" title="Solving a dual-valued linear system" align="center" width="100%" style="max-width:100%;"></a></p>
<h1><a id="user-content-dualmatrixtoolsjl" class="anchor" aria-hidden="true" href="#dualmatrixtoolsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>DualMatrixTools.jl</h1>
<p>
  <a href="https://briochemc.github.io/DualMatrixTools.jl/stable/" rel="nofollow">
    <img src="https://camo.githubusercontent.com/c25d562dac4dcdfd15963d642380f60946bfc506/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d696d706f7274616e742e7376673f7374796c653d666c61742d737175617265266c6162656c3d446f63756d656e746174696f6e266c6f676f3d52656164253230746865253230446f6373" data-canonical-src="https://img.shields.io/badge/docs-stable-important.svg?style=flat-square&amp;label=Documentation&amp;logo=Read%20the%20Docs" style="max-width:100%;">
  </a>
</p>
<p>
  <a href="https://doi.org/10.5281/zenodo.1493571" rel="nofollow">
    <img src="https://camo.githubusercontent.com/4d5fd553417d806534389957a275754fce56379f/687474703a2f2f696d672e736869656c64732e696f2f62616467652f444f492d31302e353238312532302532462532307a656e6f646f2e313439333537312d626c75652e7376673f267374796c653d666c61742d737175617265" data-canonical-src="http://img.shields.io/badge/DOI-10.5281%20%2F%20zenodo.1493571-blue.svg?&amp;style=flat-square" style="max-width:100%;">
  </a>
  <a href="https://github.com/briochemc/DualMatrixTools.jl/blob/master/LICENSE">
    <img alt="License: MIT" src="https://camo.githubusercontent.com/f629a26e7a7ef01ae078da5ea01ef05ada65ebfb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e7376673f267374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/License-MIT-blue.svg?&amp;style=flat-square" style="max-width:100%;">
  </a>
</p>
<p>
  <a href="https://github.com/briochemc/DualMatrixTools.jl/actions">
    <img src="https://camo.githubusercontent.com/1ff4d995d4a186fce76db40f0dfbaa016851ebf7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6272696f6368656d632f4475616c4d6174726978546f6f6c732e6a6c2f4d61632532304f53253230583f6c6162656c3d4f5358266c6f676f3d4170706c65266c6f676f436f6c6f723d7768697465267374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/github/workflow/status/briochemc/DualMatrixTools.jl/Mac%20OS%20X?label=OSX&amp;logo=Apple&amp;logoColor=white&amp;style=flat-square" style="max-width:100%;">
  </a>
  <a href="https://github.com/briochemc/DualMatrixTools.jl/actions">
    <img src="https://camo.githubusercontent.com/8d203f6aa476f8d0f2302cc3032942093d75b784/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6272696f6368656d632f4475616c4d6174726978546f6f6c732e6a6c2f4c696e75783f6c6162656c3d4c696e7578266c6f676f3d4c696e7578266c6f676f436f6c6f723d7768697465267374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/github/workflow/status/briochemc/DualMatrixTools.jl/Linux?label=Linux&amp;logo=Linux&amp;logoColor=white&amp;style=flat-square" style="max-width:100%;">
  </a>
  <a href="https://github.com/briochemc/DualMatrixTools.jl/actions">
    <img src="https://camo.githubusercontent.com/fac060db71175cfbd1f231f0067e8c69020fcaf1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6272696f6368656d632f4475616c4d6174726978546f6f6c732e6a6c2f57696e646f77733f6c6162656c3d57696e646f7773266c6f676f3d57696e646f7773266c6f676f436f6c6f723d7768697465267374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/github/workflow/status/briochemc/DualMatrixTools.jl/Windows?label=Windows&amp;logo=Windows&amp;logoColor=white&amp;style=flat-square" style="max-width:100%;">
  </a>
  <a href="https://codecov.io/gh/briochemc/DualMatrixTools.jl" rel="nofollow">
    <img src="https://camo.githubusercontent.com/34544eb6cb3fdca76d4e368c1661de6cc676a326/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6272696f6368656d632f4475616c4d6174726978546f6f6c732e6a6c2f6d61737465723f6c6162656c3d436f6465636f76266c6f676f3d636f6465636f76266c6f676f436f6c6f723d7768697465267374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/codecov/c/github/briochemc/DualMatrixTools.jl/master?label=Codecov&amp;logo=codecov&amp;logoColor=white&amp;style=flat-square" style="max-width:100%;">
  </a>
</p>
<p>This package provides an overloaded <code>factorize</code> and <code>\</code> that work with dual-valued arrays.</p>
<p>It uses the dual type defined by the <a href="https://github.com/JuliaDiff/DualNumbers.jl">DualNumbers.jl</a> package.
The idea is that for a dual-valued matrix</p>
<p><em>M</em> = <em>A</em> + <em>ε</em> <em>B</em></p>
<p>its inverse is</p>
<p><em>M</em><sup>-1</sup> = (<em>I</em> - <em>ε</em> <em>A</em><sup>-1</sup> <em>B</em>) <em>A</em><sup>-1</sup></p>
<p>Therefore, only the inverse of <em>A</em> is required to evaluate the inverse of <em>M</em>.
This package makes available a <code>DualFactors</code> type which containts (i) the factors of <em>A</em> and (ii) the non-real part, <em>B</em>.
It also overloads <code>factorize</code> to create an instance of <code>DualFactors</code> (when invoked with a dual-valued matrix), which can then be called with <code>\</code> to efficiently solve dual-valued linear systems of the type <em>M</em> <em>x</em> = <em>b</em>.</p>
<p>This package should be useful for autodifferentiation of functions that use <code>\</code>.
Note the same idea extends to hyper dual numbers (see the <a href="https://github.com/briochemc/HyperDualMatrixTools.jl">HyperDualMatrixTools.jl</a> package).</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<ol>
<li>
<p>Create your dual-valued matrix <code>M</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> M <span class="pl-k">=</span> A <span class="pl-k">+</span> ε <span class="pl-k">*</span> B</pre></div>
</li>
<li>
<p>Apply <code>\</code> to solve systems of the type <code>M * x = b</code></p>
<ul>
<li>
<p>without factorization:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> M <span class="pl-k">\</span> b</pre></div>
</li>
<li>
<p>or better, with prior factorization:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Mf <span class="pl-k">=</span> <span class="pl-c1">factorize</span>(M)

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> Mf <span class="pl-k">\</span> b</pre></div>
<p>(This is better in case you want to solve for another <code>b</code>!)</p>
</li>
</ul>
</li>
</ol>
<h2><a id="user-content-advanced-usage" class="anchor" aria-hidden="true" href="#advanced-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Advanced usage</h2>
<p>In the context of iterative processes with multiple factorizations and forward and back substitutions, you may want to propagate dual-valued numbers while leveraging (potentially) the fact the real part of the matrices to be factorized remains the same throughout.
This package provides an in-place <code>factorize</code>, with a flag to update (or not) the factors.
Usage is straightforward.
By default, <code>factorize</code> does <em>not</em> update the factors</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">factorize</span>(Mf, M) <span class="pl-c"><span class="pl-c">#</span> only Mf.B is updated</span></pre></div>
<p>If you want to update the real-valued factors too, use</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">factorize</span>(Mf, M, update_factors<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> Mf.B and Mf.Af are updated</span></pre></div>
<h2><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Citation</h2>
<p>If you use this package, please cite it!
You can either directly use the bibtex entry, <a href="CITATION.bib">CITATION.bib</a>, or go to the <a href="https://doi.org/10.5281/zenodo.1493571" rel="nofollow">Zenodo record of the package</a> and export the citation from there (the "Export" box at the bottom of that page).</p>
</article></div>