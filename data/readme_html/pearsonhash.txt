<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-pearsonhash" class="anchor" aria-hidden="true" href="#pearsonhash"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>PearsonHash</h1>
<p><a href="https://travis-ci.com/darsnack/PearsonHash.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5195f1a5eef60ca287b2a2195ca70b9fc3c272d0/68747470733a2f2f7472617669732d63692e636f6d2f646172736e61636b2f50656172736f6e486173682e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/darsnack/PearsonHash.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package provides utility functions for <a href="https://en.wikipedia.org/wiki/Pearson_hashing" rel="nofollow">Pearson hashing</a>. You can use the standard 8-bit hash function:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">hash8</span>(<span class="pl-s"><span class="pl-pds">"</span>Test<span class="pl-pds">"</span></span>)
<span class="pl-c1">77</span></pre></div>
<p>Or use <code>hashn</code> to get multiple of 8 bits (i.e. (<code>8*n</code>)-bit hash):</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">hashn</span>(<span class="pl-s"><span class="pl-pds">"</span>Test<span class="pl-pds">"</span></span>, <span class="pl-c1">2</span>)
<span class="pl-c1">0x0000000000000000000000000000424d</span></pre></div>
<p>Note that <code>hashn</code> always returns a <code>UInt128</code> integer, so you will need to convert this to a smaller data type if necessary.</p>
</article></div>