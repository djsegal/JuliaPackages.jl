<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-pearsonhash" class="anchor" aria-hidden="true" href="#pearsonhash"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PearsonHash</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/darsnack/PearsonHash.jl/workflows/CI/badge.svg"><img src="https://github.com/darsnack/PearsonHash.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides utility functions for <a href="https://en.wikipedia.org/wiki/Pearson_hashing" rel="nofollow">Pearson hashing</a>. You can use the standard 8-bit hash function:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; hash8(&quot;Test&quot;)
77"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">hash8</span>(<span class="pl-s"><span class="pl-pds">"</span>Test<span class="pl-pds">"</span></span>)
<span class="pl-c1">77</span></pre></div>
<p dir="auto">Or use <code>hashn</code> to get multiple of 8 bits (i.e. (<code>8*n</code>)-bit hash) where <code>n</code> is based on the return type specified):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; hashn(UInt16, &quot;Test&quot;)
0x424d"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">hashn</span>(UInt16, <span class="pl-s"><span class="pl-pds">"</span>Test<span class="pl-pds">"</span></span>)
<span class="pl-c1">0x424d</span></pre></div>
<p dir="auto">Note that <code>hashn</code> converts the data passed in using <code>Vector{UInt8}(data)</code>. This will result in extra allocations if <code>data</code> is mutable.</p>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<p dir="auto">For this simple package, just use the REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ?hash8
julia&gt; ?hashn!
julia&gt; ?hashn"><pre>julia<span class="pl-k">&gt;</span> ?hash8
julia<span class="pl-k">&gt;</span> ?hashn!
julia<span class="pl-k">&gt;</span> ?hashn</pre></div>
</article></div>