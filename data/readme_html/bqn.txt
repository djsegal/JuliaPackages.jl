<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-bqnjl" class="anchor" aria-hidden="true" href="#bqnjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>BQN.jl</h1>
<p dir="auto">An implementation of <a href="https://mlochbaum.github.io/BQN/index.html" rel="nofollow">BQN</a> in <a href="https://julialang.org" rel="nofollow">Julia</a>.</p>
<h2 dir="auto"><a id="user-content-development" class="anchor" aria-hidden="true" href="#development"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Development</h2>
<p dir="auto">Add the following to the environment (direnv is useful here):</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="export JULIA_ROOT=&quot;/path/to/julia-1.7.2&quot;
export JULIA_PROJECT=&quot;${PWD}&quot;
PATH_add &quot;${JULIA_ROOT}/bin&quot;
PATH_add &quot;${PWD}/bin&quot;"><pre class="notranslate"><code>export JULIA_ROOT="/path/to/julia-1.7.2"
export JULIA_PROJECT="${PWD}"
PATH_add "${JULIA_ROOT}/bin"
PATH_add "${PWD}/bin"
</code></pre></div>
<p dir="auto">Then:</p>
<ul dir="auto">
<li>Linux operating system is assumed</li>
<li>Clone the repo</li>
<li>Run <code>make init</code> to initialize submodules and build the CBQN (BQN
implementation used for bootstrap).</li>
<li>Run <code>julia</code> and eval <code>using BQN</code>
<ul dir="auto">
<li><code>BQN.bqn0</code> evals the BQN expression using CBQN for compilation</li>
<li><code>BQN.bqn</code> evals the BQN expression using the self hosted compiler</li>
</ul>
</li>
<li>There's BQN REPL mode:
<ul dir="auto">
<li>Start julia and after <code>using BQN</code> do <code>BQN.Repl.init()</code></li>
<li>Enter <code>)</code> and start typing BQN code</li>
</ul>
</li>
<li><code>make test0</code> runs the test suite for VM using CBQN hosted compiler</li>
<li><code>make test</code> runs the test suite for VM using self hosted compiler</li>
</ul>
<p dir="auto">TODO:</p>
<ul dir="auto">
<li>Implement fill elements</li>
<li>Implement headers</li>
<li>Implement namespaces</li>
<li>Runtime performance tuning</li>
<li>Compilation latency tuning</li>
</ul>
</article></div>