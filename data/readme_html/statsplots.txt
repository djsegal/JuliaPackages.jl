<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-statsplots" class="anchor" aria-hidden="true" href="#statsplots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>StatsPlots</h1>
<p><a href="https://travis-ci.org/JuliaPlots/StatsPlots.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a557a300bf11361348c98cd215ec9bc1cbf1f25bb1c051bca11d8c07e06310a7/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961506c6f74732f5374617473506c6f74732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaPlots/StatsPlots.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://julialang.zulipchat.com/#narrow/stream/236493-plots" rel="nofollow"><img src="https://camo.githubusercontent.com/11e6556bfe778e7cf7331cac9c44bd0616062722036cc0d9bb0b7909aaae8779/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7a756c69702d6a6f696e5f636861742d627269676874677265656e2e737667" alt="project chat" data-canonical-src="https://img.shields.io/badge/zulip-join_chat-brightgreen.svg" style="max-width:100%;"></a></p>
<h3><a id="user-content-original-author-thomas-breloff-tbreloff-maintained-by-the-juliaplots-members" class="anchor" aria-hidden="true" href="#original-author-thomas-breloff-tbreloff-maintained-by-the-juliaplots-members"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Original author: Thomas Breloff (@tbreloff), maintained by the JuliaPlots members</h3>
<p>This package is a drop-in replacement for Plots.jl that contains many statistical recipes for concepts and types introduced in the JuliaStats organization.</p>
<ul>
<li>Types:
<ul>
<li>DataFrames</li>
<li>Distributions</li>
</ul>
</li>
<li>Recipes:
<ul>
<li>histogram/histogram2d</li>
<li>groupedhist</li>
<li><a href="https://en.wikipedia.org/wiki/Box_plot" rel="nofollow">boxplot</a></li>
<li><a href="https://en.wikipedia.org/wiki/Dot_plot_(statistics)" rel="nofollow">dotplot</a></li>
<li><a href="https://en.wikipedia.org/wiki/Violin_plot" rel="nofollow">violin</a></li>
<li>marginalhist</li>
<li>corrplot/cornerplot</li>
<li><a href="https://en.wikipedia.org/wiki/Andrews_plot" rel="nofollow">andrewsplot</a></li>
<li>MDS plot</li>
<li><a href="https://en.wikipedia.org/wiki/Q%E2%80%93Q_plot" rel="nofollow">qq-plot</a></li>
</ul>
</li>
</ul>
<p>It is thus slightly less lightweight, but has more functionality. Main documentation is found in the Plots.jl documentation (<a href="https://juliaplots.github.io" rel="nofollow">https://juliaplots.github.io</a>).</p>
<p>Initialize:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="#]add StatsPlots # install the package if it isn't installed
using StatsPlots # no need for `using Plots` as that is reexported here
gr(size=(400,300))
"><pre><span class="pl-c"><span class="pl-c">#</span>]add StatsPlots # install the package if it isn't installed</span>
<span class="pl-k">using</span> StatsPlots <span class="pl-c"><span class="pl-c">#</span> no need for `using Plots` as that is reexported here</span>
<span class="pl-c1">gr</span>(size<span class="pl-k">=</span>(<span class="pl-c1">400</span>,<span class="pl-c1">300</span>))</pre></div>
<p>Table-like data structures, including <code>DataFrames</code>, <code>IndexedTables</code>, <code>DataStreams</code>, etc... (see <a href="https://github.com/davidanthoff/IterableTables.jl">here</a> for an exhaustive list), are supported thanks to the macro <code>@df</code> which allows passing columns as symbols. Those columns can then be manipulated inside the <code>plot</code> call, like normal <code>Arrays</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using DataFrames, IndexedTables
df = DataFrame(a = 1:10, b = 10 .* rand(10), c = 10 .* rand(10))
@df df plot(:a, [:b :c], colour = [:red :blue])
@df df scatter(:a, :b, markersize = 4 .* log.(:c .+ 0.1))
t = table(1:10, rand(10), names = [:a, :b]) # IndexedTable
@df t scatter(2 .* :b)
"><pre><span class="pl-k">using</span> DataFrames, IndexedTables
df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(a <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>, b <span class="pl-k">=</span> <span class="pl-c1">10</span> <span class="pl-k">.*</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10</span>), c <span class="pl-k">=</span> <span class="pl-c1">10</span> <span class="pl-k">.*</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10</span>))
<span class="pl-c1">@df</span> df <span class="pl-c1">plot</span>(<span class="pl-c1">:a</span>, [<span class="pl-c1">:b</span> <span class="pl-c1">:c</span>], colour <span class="pl-k">=</span> [<span class="pl-c1">:red</span> <span class="pl-c1">:blue</span>])
<span class="pl-c1">@df</span> df <span class="pl-c1">scatter</span>(<span class="pl-c1">:a</span>, <span class="pl-c1">:b</span>, markersize <span class="pl-k">=</span> <span class="pl-c1">4</span> <span class="pl-k">.*</span> <span class="pl-c1">log</span>.(<span class="pl-c1">:c</span> <span class="pl-k">.+</span> <span class="pl-c1">0.1</span>))
t <span class="pl-k">=</span> <span class="pl-c1">table</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>, <span class="pl-c1">rand</span>(<span class="pl-c1">10</span>), names <span class="pl-k">=</span> [<span class="pl-c1">:a</span>, <span class="pl-c1">:b</span>]) <span class="pl-c"><span class="pl-c">#</span> IndexedTable</span>
<span class="pl-c1">@df</span> t <span class="pl-c1">scatter</span>(<span class="pl-c1">2</span> <span class="pl-k">.*</span> <span class="pl-c1">:b</span>)</pre></div>
<p>Inside a <code>@df</code> macro call, the <code>cols</code> utility function can be used to refer to a range of columns:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="@df df plot(:a, cols(2:3), colour = [:red :blue])
"><pre><span class="pl-c1">@df</span> df <span class="pl-c1">plot</span>(<span class="pl-c1">:a</span>, <span class="pl-c1">cols</span>(<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">3</span>), colour <span class="pl-k">=</span> [<span class="pl-c1">:red</span> <span class="pl-c1">:blue</span>])</pre></div>
<p>or to refer to a column whose symbol is represented by a variable:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="s = :b
@df df plot(:a, cols(s))
"><pre>s <span class="pl-k">=</span> <span class="pl-c1">:b</span>
<span class="pl-c1">@df</span> df <span class="pl-c1">plot</span>(<span class="pl-c1">:a</span>, <span class="pl-c1">cols</span>(s))</pre></div>
<p><code>cols()</code> will refer to all columns of the data table.</p>
<p>In case of ambiguity, symbols not referring to <code>DataFrame</code> columns must be escaped by <code>^()</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="df[:red] = rand(10)
@df df plot(:a, [:b :c], colour = ^([:red :blue]))
"><pre>df[<span class="pl-c1">:red</span>] <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10</span>)
<span class="pl-c1">@df</span> df <span class="pl-c1">plot</span>(<span class="pl-c1">:a</span>, [<span class="pl-c1">:b</span> <span class="pl-c1">:c</span>], colour <span class="pl-k">=</span> <span class="pl-k">^</span>([<span class="pl-c1">:red</span> <span class="pl-c1">:blue</span>]))</pre></div>
<p>The <code>@df</code> macro plays nicely with the new syntax of the <a href="https://github.com/davidanthoff/Query.jl">Query.jl</a> data manipulation package (v0.8 and above), in that a plot command can be added at the end of a query pipeline, without having to explicitly collect the outcome of the query first:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Query, StatsPlots
df |&gt;
    @filter(_.a &gt; 5) |&gt;
    @map({_.b, d = _.c-10}) |&gt;
    @df scatter(:b, :d)
"><pre><span class="pl-k">using</span> Query, StatsPlots
df <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@filter</span>(_<span class="pl-k">.</span>a <span class="pl-k">&gt;</span> <span class="pl-c1">5</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@map</span>({_<span class="pl-k">.</span>b, d <span class="pl-k">=</span> _<span class="pl-k">.</span>c<span class="pl-k">-</span><span class="pl-c1">10</span>}) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@df</span> <span class="pl-c1">scatter</span>(<span class="pl-c1">:b</span>, <span class="pl-c1">:d</span>)</pre></div>
<p>The <code>@df</code> syntax is also compatible with the Plots.jl grouping machinery:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using RDatasets
school = RDatasets.dataset(&quot;mlmRev&quot;,&quot;Hsb82&quot;)
@df school density(:MAch, group = :Sx)
"><pre><span class="pl-k">using</span> RDatasets
school <span class="pl-k">=</span> RDatasets<span class="pl-k">.</span><span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>mlmRev<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>Hsb82<span class="pl-pds">"</span></span>)
<span class="pl-c1">@df</span> school <span class="pl-c1">density</span>(<span class="pl-c1">:MAch</span>, group <span class="pl-k">=</span> <span class="pl-c1">:Sx</span>)</pre></div>
<p>To group by more than one column, use a tuple of symbols:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="@df school density(:MAch, group = (:Sx, :Sector), legend = :topleft)
"><pre><span class="pl-c1">@df</span> school <span class="pl-c1">density</span>(<span class="pl-c1">:MAch</span>, group <span class="pl-k">=</span> (<span class="pl-c1">:Sx</span>, <span class="pl-c1">:Sector</span>), legend <span class="pl-k">=</span> <span class="pl-c1">:topleft</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/6333339/35101563-eacf9be4-fc57-11e7-88d3-db5bb47b08ac.png"><img src="https://user-images.githubusercontent.com/6333339/35101563-eacf9be4-fc57-11e7-88d3-db5bb47b08ac.png" alt="grouped" style="max-width:100%;"></a></p>
<p>To name the legend entries with custom or automatic names (i.e. <code>Sex = Male, Sector = Public</code>) use the curly bracket syntax <code>group = {Sex = :Sx, :Sector}</code>. Entries with <code>=</code> get the custom name you give, whereas entries without <code>=</code> take the name of the column.</p>
<hr>
<p>The old syntax, passing the <code>DataFrame</code> as the first argument to the <code>plot</code> call is no longer supported.</p>
<hr>
<h2><a id="user-content-visualizing-a-table-interactively" class="anchor" aria-hidden="true" href="#visualizing-a-table-interactively"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Visualizing a table interactively</h2>
<p>A GUI based on the Interact package is available to create plots from a table interactively, using any of the recipes defined below. This small app can be deployed in a Jupyter lab / notebook, Juno plot pane, a Blink window or in the browser, see <a href="http://juliagizmos.github.io/Interact.jl/latest/deploying/" rel="nofollow">here</a> for instructions.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="import RDatasets
iris = RDatasets.dataset(&quot;datasets&quot;, &quot;iris&quot;)
using StatsPlots, Interact
using Blink
w = Window()
body!(w, dataviewer(iris))
"><pre><span class="pl-k">import</span> RDatasets
iris <span class="pl-k">=</span> RDatasets<span class="pl-k">.</span><span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>datasets<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>iris<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> StatsPlots, Interact
<span class="pl-k">using</span> Blink
w <span class="pl-k">=</span> <span class="pl-c1">Window</span>()
<span class="pl-c1">body!</span>(w, <span class="pl-c1">dataviewer</span>(iris))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/6333339/43359702-abd82d74-929e-11e8-8fc9-b589287f1c23.png"><img src="https://user-images.githubusercontent.com/6333339/43359702-abd82d74-929e-11e8-8fc9-b589287f1c23.png" alt="dataviewer" style="max-width:100%;"></a></p>
<h2><a id="user-content-marginalhist-with-dataframes" class="anchor" aria-hidden="true" href="#marginalhist-with-dataframes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>marginalhist with DataFrames</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using RDatasets
iris = dataset(&quot;datasets&quot;,&quot;iris&quot;)
@df iris marginalhist(:PetalLength, :PetalWidth)
"><pre><span class="pl-k">using</span> RDatasets
iris <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>datasets<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>iris<span class="pl-pds">"</span></span>)
<span class="pl-c1">@df</span> iris <span class="pl-c1">marginalhist</span>(<span class="pl-c1">:PetalLength</span>, <span class="pl-c1">:PetalWidth</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/6333339/29869938-fbe08d02-8d7c-11e7-9409-ca47ee3aaf35.png"><img src="https://user-images.githubusercontent.com/6333339/29869938-fbe08d02-8d7c-11e7-9409-ca47ee3aaf35.png" alt="marginalhist" style="max-width:100%;"></a></p>
<hr>
<h2><a id="user-content-marginalscatter-with-dataframes" class="anchor" aria-hidden="true" href="#marginalscatter-with-dataframes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>marginalscatter with DataFrames</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using RDatasets
iris = dataset(&quot;datasets&quot;,&quot;iris&quot;)
@df iris marginalscatter(:PetalLength, :PetalWidth)
"><pre><span class="pl-k">using</span> RDatasets
iris <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>datasets<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>iris<span class="pl-pds">"</span></span>)
<span class="pl-c1">@df</span> iris <span class="pl-c1">marginalscatter</span>(<span class="pl-c1">:PetalLength</span>, <span class="pl-c1">:PetalWidth</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/12200202/92408723-3aa78e00-f0f3-11ea-8ddc-9517f0f58207.png"><img src="https://user-images.githubusercontent.com/12200202/92408723-3aa78e00-f0f3-11ea-8ddc-9517f0f58207.png" alt="marginalscatter" style="max-width:100%;"></a></p>
<hr>
<h2><a id="user-content-marginalkde" class="anchor" aria-hidden="true" href="#marginalkde"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>marginalkde</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="x = randn(1024)
y = randn(1024)
marginalkde(x, x+y)
"><pre>x <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">1024</span>)
y <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">1024</span>)
<span class="pl-c1">marginalkde</span>(x, x<span class="pl-k">+</span>y)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/90048/96789354-04804e00-13c3-11eb-82d3-6130e8c9d48a.png"><img src="https://user-images.githubusercontent.com/90048/96789354-04804e00-13c3-11eb-82d3-6130e8c9d48a.png" alt="correlated-marg" style="max-width:100%;"></a></p>
<ul>
<li><code>levels=N</code> can be used to set the number of contour levels (default 10); levels are evenly-spaced in the cumulative probability mass.</li>
<li><code>clip=((-xl, xh), (-yl, yh))</code> (default <code>((-3, 3), (-3, 3))</code>) can be used to adjust the bounds of the plot.  Clip values are expressed as multiples of the <code>[0.16-0.5]</code> and <code>[0.5,0.84]</code> percentiles of the underlying 1D distributions (these would be 1-sigma ranges for a Gaussian).</li>
</ul>
<h2><a id="user-content-corrplot-and-cornerplot" class="anchor" aria-hidden="true" href="#corrplot-and-cornerplot"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>corrplot and cornerplot</h2>
<p>This plot type shows the correlation among input variables. The marker color in scatter plots reveal the degree of correlation. Pass the desired colorgradient to <code>markercolor</code>. With the default gradient positive correlations are blue, neutral are yellow and negative are red. In the 2d-histograms the color gradient show the frequency of points in that bin (as usual controlled by <code>seriescolor</code>).</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="gr(size = (600, 500))
"><pre><span class="pl-c1">gr</span>(size <span class="pl-k">=</span> (<span class="pl-c1">600</span>, <span class="pl-c1">500</span>))</pre></div>
<p>then</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="@df iris corrplot([:SepalLength :SepalWidth :PetalLength :PetalWidth], grid = false)
"><pre><span class="pl-c1">@df</span> iris <span class="pl-c1">corrplot</span>([<span class="pl-c1">:SepalLength</span> <span class="pl-c1">:SepalWidth</span> <span class="pl-c1">:PetalLength</span> <span class="pl-c1">:PetalWidth</span>], grid <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
<p>or also:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="@df iris corrplot(cols(1:4), grid = false)
"><pre><span class="pl-c1">@df</span> iris <span class="pl-c1">corrplot</span>(<span class="pl-c1">cols</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">4</span>), grid <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8429802/51600111-8a771880-1f01-11e9-818f-6cbfc5efad74.png"><img src="https://user-images.githubusercontent.com/8429802/51600111-8a771880-1f01-11e9-818f-6cbfc5efad74.png" alt="corrplot" style="max-width:100%;"></a></p>
<p>A correlation plot may also be produced from a matrix:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="M = randn(1000,4)
M[:,2] .+= 0.8sqrt.(abs.(M[:,1])) .- 0.5M[:,3] .+ 5
M[:,3] .-= 0.7M[:,1].^2 .+ 2
corrplot(M, label = [&quot;x$i&quot; for i=1:4])
"><pre>M <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">1000</span>,<span class="pl-c1">4</span>)
M[:,<span class="pl-c1">2</span>] <span class="pl-k">.+</span><span class="pl-k">=</span> <span class="pl-c1">0.8</span><span class="pl-c1">sqrt</span>.(<span class="pl-c1">abs</span>.(M[:,<span class="pl-c1">1</span>])) <span class="pl-k">.-</span> <span class="pl-c1">0.5</span>M[:,<span class="pl-c1">3</span>] <span class="pl-k">.+</span> <span class="pl-c1">5</span>
M[:,<span class="pl-c1">3</span>] <span class="pl-k">.-</span><span class="pl-k">=</span> <span class="pl-c1">0.7</span>M[:,<span class="pl-c1">1</span>]<span class="pl-k">.</span><span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">.+</span> <span class="pl-c1">2</span>
<span class="pl-c1">corrplot</span>(M, label <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-v">$i</span><span class="pl-pds">"</span></span> <span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">4</span>])</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8429802/51600126-91059000-1f01-11e9-9d37-f49bee5ff534.png"><img src="https://user-images.githubusercontent.com/8429802/51600126-91059000-1f01-11e9-9d37-f49bee5ff534.png" alt="" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="cornerplot(M)
"><pre><span class="pl-c1">cornerplot</span>(M)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8429802/51600133-96fb7100-1f01-11e9-9943-4a10f1ad2907.png"><img src="https://user-images.githubusercontent.com/8429802/51600133-96fb7100-1f01-11e9-9943-4a10f1ad2907.png" alt="" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="cornerplot(M, compact=true)
"><pre><span class="pl-c1">cornerplot</span>(M, compact<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8429802/51600140-9bc02500-1f01-11e9-87e3-746ae4daccbb.png"><img src="https://user-images.githubusercontent.com/8429802/51600140-9bc02500-1f01-11e9-87e3-746ae4daccbb.png" alt="" style="max-width:100%;"></a></p>
<hr>
<h2><a id="user-content-boxplot-dotplot-and-violin" class="anchor" aria-hidden="true" href="#boxplot-dotplot-and-violin"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>boxplot, dotplot, and violin</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="import RDatasets
singers = RDatasets.dataset(&quot;lattice&quot;, &quot;singer&quot;)
@df singers violin(string.(:VoicePart), :Height, linewidth=0)
@df singers boxplot!(string.(:VoicePart), :Height, fillalpha=0.75, linewidth=2)
@df singers dotplot!(string.(:VoicePart), :Height, marker=(:black, stroke(0)))
"><pre><span class="pl-k">import</span> RDatasets
singers <span class="pl-k">=</span> RDatasets<span class="pl-k">.</span><span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>lattice<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>singer<span class="pl-pds">"</span></span>)
<span class="pl-c1">@df</span> singers <span class="pl-c1">violin</span>(<span class="pl-c1">string</span>.(<span class="pl-c1">:VoicePart</span>), <span class="pl-c1">:Height</span>, linewidth<span class="pl-k">=</span><span class="pl-c1">0</span>)
<span class="pl-c1">@df</span> singers <span class="pl-c1">boxplot!</span>(<span class="pl-c1">string</span>.(<span class="pl-c1">:VoicePart</span>), <span class="pl-c1">:Height</span>, fillalpha<span class="pl-k">=</span><span class="pl-c1">0.75</span>, linewidth<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">@df</span> singers <span class="pl-c1">dotplot!</span>(<span class="pl-c1">string</span>.(<span class="pl-c1">:VoicePart</span>), <span class="pl-c1">:Height</span>, marker<span class="pl-k">=</span>(<span class="pl-c1">:black</span>, <span class="pl-c1">stroke</span>(<span class="pl-c1">0</span>)))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/16589944/98538614-506c3780-228b-11eb-881c-158c2f781798.png"><img src="https://user-images.githubusercontent.com/16589944/98538614-506c3780-228b-11eb-881c-158c2f781798.png" alt="violin" style="max-width:100%;"></a></p>
<p>Asymmetric violin or dot plots can be created using the <code>side</code> keyword (<code>:both</code> - default,<code>:right</code> or <code>:left</code>), e.g.:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="singers_moscow = deepcopy(singers)
singers_moscow[:Height] = singers_moscow[:Height] .+ 5
@df singers violin(string.(:VoicePart), :Height, side=:right, linewidth=0, label=&quot;Scala&quot;)
@df singers_moscow violin!(string.(:VoicePart), :Height, side=:left, linewidth=0, label=&quot;Moscow&quot;)
@df singers dotplot!(string.(:VoicePart), :Height, side=:right, marker=(:black,stroke(0)), label=&quot;&quot;)
@df singers_moscow dotplot!(string.(:VoicePart), :Height, side=:left, marker=(:black,stroke(0)), label=&quot;&quot;)
"><pre>singers_moscow <span class="pl-k">=</span> <span class="pl-c1">deepcopy</span>(singers)
singers_moscow[<span class="pl-c1">:Height</span>] <span class="pl-k">=</span> singers_moscow[<span class="pl-c1">:Height</span>] <span class="pl-k">.+</span> <span class="pl-c1">5</span>
<span class="pl-c1">@df</span> singers <span class="pl-c1">violin</span>(<span class="pl-c1">string</span>.(<span class="pl-c1">:VoicePart</span>), <span class="pl-c1">:Height</span>, side<span class="pl-k">=</span><span class="pl-c1">:right</span>, linewidth<span class="pl-k">=</span><span class="pl-c1">0</span>, label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Scala<span class="pl-pds">"</span></span>)
<span class="pl-c1">@df</span> singers_moscow <span class="pl-c1">violin!</span>(<span class="pl-c1">string</span>.(<span class="pl-c1">:VoicePart</span>), <span class="pl-c1">:Height</span>, side<span class="pl-k">=</span><span class="pl-c1">:left</span>, linewidth<span class="pl-k">=</span><span class="pl-c1">0</span>, label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Moscow<span class="pl-pds">"</span></span>)
<span class="pl-c1">@df</span> singers <span class="pl-c1">dotplot!</span>(<span class="pl-c1">string</span>.(<span class="pl-c1">:VoicePart</span>), <span class="pl-c1">:Height</span>, side<span class="pl-k">=</span><span class="pl-c1">:right</span>, marker<span class="pl-k">=</span>(<span class="pl-c1">:black</span>,<span class="pl-c1">stroke</span>(<span class="pl-c1">0</span>)), label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>)
<span class="pl-c1">@df</span> singers_moscow <span class="pl-c1">dotplot!</span>(<span class="pl-c1">string</span>.(<span class="pl-c1">:VoicePart</span>), <span class="pl-c1">:Height</span>, side<span class="pl-k">=</span><span class="pl-c1">:left</span>, marker<span class="pl-k">=</span>(<span class="pl-c1">:black</span>,<span class="pl-c1">stroke</span>(<span class="pl-c1">0</span>)), label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>)</pre></div>
<p>Dot plots can spread their dots over the full width of their column <code>mode = :uniform</code>, or restricted to the kernel density
(i.e. width of violin plot) with <code>mode = :density</code> (default). Horizontal position is random, so dots are repositioned
each time the plot is recreated. <code>mode = :none</code> keeps the dots along the center.</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/16589944/98538618-52ce9180-228b-11eb-83d2-6d7b7c89fd52.png"><img src="https://user-images.githubusercontent.com/16589944/98538618-52ce9180-228b-11eb-83d2-6d7b7c89fd52.png" alt="violin2" style="max-width:100%;"></a></p>
<hr>
<h2><a id="user-content-equal-area-histograms" class="anchor" aria-hidden="true" href="#equal-area-histograms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Equal-area histograms</h2>
<p>The ea-histogram is an alternative histogram implementation, where every 'box' in
the histogram contains the same number of sample points and all boxes have the same
area. Areas with a higher density of points thus get higher boxes. This type of
histogram shows spikes well, but may oversmooth in the tails. The y axis is not
intuitively interpretable.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="a = [randn(100); randn(100) .+ 3; randn(100) ./ 2 .+ 3]
ea_histogram(a, bins = :scott, fillalpha = 0.4)
"><pre>a <span class="pl-k">=</span> [<span class="pl-c1">randn</span>(<span class="pl-c1">100</span>); <span class="pl-c1">randn</span>(<span class="pl-c1">100</span>) <span class="pl-k">.+</span> <span class="pl-c1">3</span>; <span class="pl-c1">randn</span>(<span class="pl-c1">100</span>) <span class="pl-k">./</span> <span class="pl-c1">2</span> <span class="pl-k">.+</span> <span class="pl-c1">3</span>]
<span class="pl-c1">ea_histogram</span>(a, bins <span class="pl-k">=</span> <span class="pl-c1">:scott</span>, fillalpha <span class="pl-k">=</span> <span class="pl-c1">0.4</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8429802/29754490-8d1b01f6-8b86-11e7-9f86-e1063a88dfd8.png"><img width="487" alt="equal area histogram" src="https://user-images.githubusercontent.com/8429802/29754490-8d1b01f6-8b86-11e7-9f86-e1063a88dfd8.png" style="max-width:100%;"></a></p>
<hr>
<h2><a id="user-content-andrewsplot" class="anchor" aria-hidden="true" href="#andrewsplot"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>AndrewsPlot</h2>
<p>AndrewsPlots are a way to visualize structure in high-dimensional data by depicting each
row of an array or table as a line that varies with the values in columns.
<a href="https://en.wikipedia.org/wiki/Andrews_plot" rel="nofollow">https://en.wikipedia.org/wiki/Andrews_plot</a></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using RDatasets
iris = dataset(&quot;datasets&quot;, &quot;iris&quot;)
@df iris andrewsplot(:Species, cols(1:4), legend = :topleft)
"><pre><span class="pl-k">using</span> RDatasets
iris <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>datasets<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>iris<span class="pl-pds">"</span></span>)
<span class="pl-c1">@df</span> iris <span class="pl-c1">andrewsplot</span>(<span class="pl-c1">:Species</span>, <span class="pl-c1">cols</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">4</span>), legend <span class="pl-k">=</span> <span class="pl-c1">:topleft</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1159782/46241166-c392e800-c368-11e8-93de-125c6eb38b52.png"><img width="575" alt="iris_andrews_curve" src="https://user-images.githubusercontent.com/1159782/46241166-c392e800-c368-11e8-93de-125c6eb38b52.png" style="max-width:100%;"></a></p>
<hr>
<h2><a id="user-content-distributions" class="anchor" aria-hidden="true" href="#distributions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Distributions</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Distributions
plot(Normal(3,5), fill=(0, .5,:orange))
"><pre><span class="pl-k">using</span> Distributions
<span class="pl-c1">plot</span>(<span class="pl-c1">Normal</span>(<span class="pl-c1">3</span>,<span class="pl-c1">5</span>), fill<span class="pl-k">=</span>(<span class="pl-c1">0</span>, <span class="pl-c1">.5</span>,<span class="pl-c1">:orange</span>))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/933338/16718702/561510f6-46f0-11e6-834a-3cf17a5b77d6.png"><img src="https://cloud.githubusercontent.com/assets/933338/16718702/561510f6-46f0-11e6-834a-3cf17a5b77d6.png" alt="" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="dist = Gamma(2)
scatter(dist, leg=false)
bar!(dist, func=cdf, alpha=0.3)
"><pre>dist <span class="pl-k">=</span> <span class="pl-c1">Gamma</span>(<span class="pl-c1">2</span>)
<span class="pl-c1">scatter</span>(dist, leg<span class="pl-k">=</span><span class="pl-c1">false</span>)
<span class="pl-c1">bar!</span>(dist, func<span class="pl-k">=</span>cdf, alpha<span class="pl-k">=</span><span class="pl-c1">0.3</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/933338/16718720/729b6fea-46f0-11e6-9bff-fdf2541ce305.png"><img src="https://cloud.githubusercontent.com/assets/933338/16718720/729b6fea-46f0-11e6-9bff-fdf2541ce305.png" alt="" style="max-width:100%;"></a></p>
<h3><a id="user-content-quantile-quantile-plots" class="anchor" aria-hidden="true" href="#quantile-quantile-plots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quantile-Quantile plots</h3>
<p>The <code>qqplot</code> function compares the quantiles of two distributions, and accepts either a vector of sample values or a <code>Distribution</code>. The <code>qqnorm</code> is a shorthand for comparing a distribution to the normal distribution. If the distributions are similar the points will be on a straight line.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="x = rand(Normal(), 100)
y = rand(Cauchy(), 100)

plot(
 qqplot(x, y, qqline = :fit), # qqplot of two samples, show a fitted regression line
 qqplot(Cauchy, y),           # compare with a Cauchy distribution fitted to y; pass an instance (e.g. Normal(0,1)) to compare with a specific distribution
 qqnorm(x, qqline = :R)       # the :R default line passes through the 1st and 3rd quartiles of the distribution
)
"><pre>x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">Normal</span>(), <span class="pl-c1">100</span>)
y <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">Cauchy</span>(), <span class="pl-c1">100</span>)

<span class="pl-c1">plot</span>(
 <span class="pl-c1">qqplot</span>(x, y, qqline <span class="pl-k">=</span> <span class="pl-c1">:fit</span>), <span class="pl-c"><span class="pl-c">#</span> qqplot of two samples, show a fitted regression line</span>
 <span class="pl-c1">qqplot</span>(Cauchy, y),           <span class="pl-c"><span class="pl-c">#</span> compare with a Cauchy distribution fitted to y; pass an instance (e.g. Normal(0,1)) to compare with a specific distribution</span>
 <span class="pl-c1">qqnorm</span>(x, qqline <span class="pl-k">=</span> <span class="pl-c1">:R</span>)       <span class="pl-c"><span class="pl-c">#</span> the :R default line passes through the 1st and 3rd quartiles of the distribution</span>
)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8429802/30989741-0c4f9dac-a49f-11e7-98ff-028192a8d5b1.png"><img width="1185" alt="skaermbillede 2017-09-28 kl 22 46 28" src="https://user-images.githubusercontent.com/8429802/30989741-0c4f9dac-a49f-11e7-98ff-028192a8d5b1.png" style="max-width:100%;"></a></p>
<h2><a id="user-content-grouped-bar-plots" class="anchor" aria-hidden="true" href="#grouped-bar-plots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Grouped Bar plots</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="groupedbar(rand(10,3), bar_position = :stack, bar_width=0.7)
"><pre><span class="pl-c1">groupedbar</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">10</span>,<span class="pl-c1">3</span>), bar_position <span class="pl-k">=</span> <span class="pl-c1">:stack</span>, bar_width<span class="pl-k">=</span><span class="pl-c1">0.7</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/933338/18962081/58a2a5e0-863d-11e6-8638-94f88ecc544d.png"><img src="https://cloud.githubusercontent.com/assets/933338/18962081/58a2a5e0-863d-11e6-8638-94f88ecc544d.png" alt="tmp" style="max-width:100%;"></a></p>
<p>This is the default:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="groupedbar(rand(10,3), bar_position = :dodge, bar_width=0.7)
"><pre><span class="pl-c1">groupedbar</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">10</span>,<span class="pl-c1">3</span>), bar_position <span class="pl-k">=</span> <span class="pl-c1">:dodge</span>, bar_width<span class="pl-k">=</span><span class="pl-c1">0.7</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/933338/18962092/673f6c78-863d-11e6-9ee9-8ca104e5d2a3.png"><img src="https://cloud.githubusercontent.com/assets/933338/18962092/673f6c78-863d-11e6-9ee9-8ca104e5d2a3.png" alt="tmp" style="max-width:100%;"></a></p>
<p>The <code>group</code> syntax is also possible in combination with <code>groupedbar</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="ctg = repeat([&quot;Category 1&quot;, &quot;Category 2&quot;], inner = 5)
nam = repeat(&quot;G&quot; .* string.(1:5), outer = 2)

groupedbar(nam, rand(5, 2), group = ctg, xlabel = &quot;Groups&quot;, ylabel = &quot;Scores&quot;,
        title = &quot;Scores by group and category&quot;, bar_width = 0.67,
        lw = 0, framestyle = :box)
"><pre>ctg <span class="pl-k">=</span> <span class="pl-c1">repeat</span>([<span class="pl-s"><span class="pl-pds">"</span>Category 1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Category 2<span class="pl-pds">"</span></span>], inner <span class="pl-k">=</span> <span class="pl-c1">5</span>)
nam <span class="pl-k">=</span> <span class="pl-c1">repeat</span>(<span class="pl-s"><span class="pl-pds">"</span>G<span class="pl-pds">"</span></span> <span class="pl-k">.*</span> <span class="pl-c1">string</span>.(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>), outer <span class="pl-k">=</span> <span class="pl-c1">2</span>)

<span class="pl-c1">groupedbar</span>(nam, <span class="pl-c1">rand</span>(<span class="pl-c1">5</span>, <span class="pl-c1">2</span>), group <span class="pl-k">=</span> ctg, xlabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Groups<span class="pl-pds">"</span></span>, ylabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Scores<span class="pl-pds">"</span></span>,
        title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Scores by group and category<span class="pl-pds">"</span></span>, bar_width <span class="pl-k">=</span> <span class="pl-c1">0.67</span>,
        lw <span class="pl-k">=</span> <span class="pl-c1">0</span>, framestyle <span class="pl-k">=</span> <span class="pl-c1">:box</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/6645258/32116755-b7018f02-bb2a-11e7-82c7-ca471ecaeecf.png"><img src="https://user-images.githubusercontent.com/6645258/32116755-b7018f02-bb2a-11e7-82c7-ca471ecaeecf.png" alt="" style="max-width:100%;"></a></p>
<h2><a id="user-content-grouped-histograms" class="anchor" aria-hidden="true" href="#grouped-histograms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Grouped Histograms</h2>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using RDatasets
iris = dataset(&quot;datasets&quot;, &quot;iris&quot;)
@df iris groupedhist(:SepalLength, group = :Species, bar_position = :dodge)
"><pre><code>using RDatasets
iris = dataset("datasets", "iris")
@df iris groupedhist(:SepalLength, group = :Species, bar_position = :dodge)
</code></pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/6033297/77240750-a11d0c00-6ba6-11ea-9715-81a8a7e20cd6.png"><img src="https://user-images.githubusercontent.com/6033297/77240750-a11d0c00-6ba6-11ea-9715-81a8a7e20cd6.png" alt="dodge" style="max-width:100%;"></a></p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="@df iris groupedhist(:SepalLength, group = :Species, bar_position = :stack)
"><pre><code>@df iris groupedhist(:SepalLength, group = :Species, bar_position = :stack)
</code></pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/6033297/77240749-9c585800-6ba6-11ea-85ea-e023341cb246.png"><img src="https://user-images.githubusercontent.com/6033297/77240749-9c585800-6ba6-11ea-85ea-e023341cb246.png" alt="stack" style="max-width:100%;"></a></p>
<h2><a id="user-content-dendrograms" class="anchor" aria-hidden="true" href="#dendrograms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Dendrograms</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Clustering
D = rand(10, 10)
D += D'
hc = hclust(D, linkage=:single)
plot(hc)
"><pre><span class="pl-k">using</span> Clustering
D <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10</span>, <span class="pl-c1">10</span>)
D <span class="pl-k">+=</span> D<span class="pl-k">'</span>
hc <span class="pl-k">=</span> <span class="pl-c1">hclust</span>(D, linkage<span class="pl-k">=</span><span class="pl-c1">:single</span>)
<span class="pl-c1">plot</span>(hc)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/381464/43355211-855d5aa2-920d-11e8-82d7-2bf1a7aeccb5.png"><img src="https://user-images.githubusercontent.com/381464/43355211-855d5aa2-920d-11e8-82d7-2bf1a7aeccb5.png" alt="dendrogram" style="max-width:100%;"></a></p>
<p>The <code>branchorder=:optimal</code> option in <code>hclust()</code> can be used to minimize
the distance between neighboring leaves:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Clustering
using Distances
using StatsPlots
using Random

n = 40

mat = zeros(Int, n, n)
# create banded matrix
for i in 1:n
    last = minimum([i+Int(floor(n/5)), n])
    for j in i:last
        mat[i,j] = 1
    end
end

# randomize order
mat = mat[:, randperm(n)]
dm = pairwise(Euclidean(), mat, dims=2)

# normal ordering
hcl1 = hclust(dm, linkage=:average)
plot(
    plot(hcl1, xticks=false),
    heatmap(mat[:, hcl1.order], colorbar=false, xticks=(1:n, [&quot;$i&quot; for i in hcl1.order])),
    layout=grid(2,1, heights=[0.2,0.8])
    )
"><pre><span class="pl-k">using</span> Clustering
<span class="pl-k">using</span> Distances
<span class="pl-k">using</span> StatsPlots
<span class="pl-k">using</span> Random

n <span class="pl-k">=</span> <span class="pl-c1">40</span>

mat <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(Int, n, n)
<span class="pl-c"><span class="pl-c">#</span> create banded matrix</span>
<span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>n
    last <span class="pl-k">=</span> <span class="pl-c1">minimum</span>([i<span class="pl-k">+</span><span class="pl-c1">Int</span>(<span class="pl-c1">floor</span>(n<span class="pl-k">/</span><span class="pl-c1">5</span>)), n])
    <span class="pl-k">for</span> j <span class="pl-k">in</span> i<span class="pl-k">:</span>last
        mat[i,j] <span class="pl-k">=</span> <span class="pl-c1">1</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> randomize order</span>
mat <span class="pl-k">=</span> mat[:, <span class="pl-c1">randperm</span>(n)]
dm <span class="pl-k">=</span> <span class="pl-c1">pairwise</span>(<span class="pl-c1">Euclidean</span>(), mat, dims<span class="pl-k">=</span><span class="pl-c1">2</span>)

<span class="pl-c"><span class="pl-c">#</span> normal ordering</span>
hcl1 <span class="pl-k">=</span> <span class="pl-c1">hclust</span>(dm, linkage<span class="pl-k">=</span><span class="pl-c1">:average</span>)
<span class="pl-c1">plot</span>(
    <span class="pl-c1">plot</span>(hcl1, xticks<span class="pl-k">=</span><span class="pl-c1">false</span>),
    <span class="pl-c1">heatmap</span>(mat[:, hcl1<span class="pl-k">.</span>order], colorbar<span class="pl-k">=</span><span class="pl-c1">false</span>, xticks<span class="pl-k">=</span>(<span class="pl-c1">1</span><span class="pl-k">:</span>n, [<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$i</span><span class="pl-pds">"</span></span> <span class="pl-k">for</span> i <span class="pl-k">in</span> hcl1<span class="pl-k">.</span>order])),
    layout<span class="pl-k">=</span><span class="pl-c1">grid</span>(<span class="pl-c1">2</span>,<span class="pl-c1">1</span>, heights<span class="pl-k">=</span>[<span class="pl-c1">0.2</span>,<span class="pl-c1">0.8</span>])
    )</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/3502975/59949267-a1824e00-9440-11e9-96dd-4628a8372ae2.png"><img src="https://user-images.githubusercontent.com/3502975/59949267-a1824e00-9440-11e9-96dd-4628a8372ae2.png" alt="heatmap dendrogram non-optimal" style="max-width:100%;"></a></p>
<p>Compare to:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# optimal ordering
hcl2 = hclust(dm, linkage=:average, branchorder=:optimal)
plot(
    plot(hcl2, xticks=false),
    heatmap(mat[:, hcl2.order], colorbar=false, xticks=(1:n, [&quot;$i&quot; for i in hcl2.order])),
    layout=grid(2,1, heights=[0.2,0.8])
    )
"><pre><span class="pl-c"><span class="pl-c">#</span> optimal ordering</span>
hcl2 <span class="pl-k">=</span> <span class="pl-c1">hclust</span>(dm, linkage<span class="pl-k">=</span><span class="pl-c1">:average</span>, branchorder<span class="pl-k">=</span><span class="pl-c1">:optimal</span>)
<span class="pl-c1">plot</span>(
    <span class="pl-c1">plot</span>(hcl2, xticks<span class="pl-k">=</span><span class="pl-c1">false</span>),
    <span class="pl-c1">heatmap</span>(mat[:, hcl2<span class="pl-k">.</span>order], colorbar<span class="pl-k">=</span><span class="pl-c1">false</span>, xticks<span class="pl-k">=</span>(<span class="pl-c1">1</span><span class="pl-k">:</span>n, [<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$i</span><span class="pl-pds">"</span></span> <span class="pl-k">for</span> i <span class="pl-k">in</span> hcl2<span class="pl-k">.</span>order])),
    layout<span class="pl-k">=</span><span class="pl-c1">grid</span>(<span class="pl-c1">2</span>,<span class="pl-c1">1</span>, heights<span class="pl-k">=</span>[<span class="pl-c1">0.2</span>,<span class="pl-c1">0.8</span>])
    )</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/3502975/59949464-20778680-9441-11e9-8ed7-9a639b50dfb2.png"><img src="https://user-images.githubusercontent.com/3502975/59949464-20778680-9441-11e9-8ed7-9a639b50dfb2.png" alt="heatmap dendrogram optimal" style="max-width:100%;"></a></p>
<h3><a id="user-content-dendrogram-on-the-right-side" class="anchor" aria-hidden="true" href="#dendrogram-on-the-right-side"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Dendrogram on the right side</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Distances
using Clustering
using StatsBase
using StatsPlots

pd=rand(Float64,16,7)

dist_col=pairwise(CorrDist(),pd,dims=2)
hc_col=hclust(dist_col, branchorder=:optimal)
dist_row=pairwise(CorrDist(),pd,dims=1)
hc_row=hclust(dist_row, branchorder=:optimal)

pdz=similar(pd)
for row in hc_row.order
	pdz[row,hc_col.order]=zscore(pd[row,hc_col.order])
end
nrows=length(hc_row.order)
rowlabels=(1:16)[hc_row.order]
ncols=length(hc_col.order)
collabels=(1:7)[hc_col.order]
l = grid(2,2,heights=[0.2,0.8,0.2,0.8],widths=[0.8,0.2,0.8,0.2])
plot(
	layout = l,
	plot(hc_col,xticks=false),
	plot(ticks=nothing,border=:none),
	plot(
		pdz[hc_row.order,hc_col.order],
		st=:heatmap,
		#yticks=(1:nrows,rowlabels),
		yticks=(1:nrows,rowlabels),
		xticks=(1:ncols,collabels),
		xrotation=90,
		colorbar=false
	),
	plot(hc_row,yticks=false,xrotation=90,orientation=:horizontal)
)

"><pre><span class="pl-k">using</span> Distances
<span class="pl-k">using</span> Clustering
<span class="pl-k">using</span> StatsBase
<span class="pl-k">using</span> StatsPlots

pd<span class="pl-k">=</span><span class="pl-c1">rand</span>(Float64,<span class="pl-c1">16</span>,<span class="pl-c1">7</span>)

dist_col<span class="pl-k">=</span><span class="pl-c1">pairwise</span>(<span class="pl-c1">CorrDist</span>(),pd,dims<span class="pl-k">=</span><span class="pl-c1">2</span>)
hc_col<span class="pl-k">=</span><span class="pl-c1">hclust</span>(dist_col, branchorder<span class="pl-k">=</span><span class="pl-c1">:optimal</span>)
dist_row<span class="pl-k">=</span><span class="pl-c1">pairwise</span>(<span class="pl-c1">CorrDist</span>(),pd,dims<span class="pl-k">=</span><span class="pl-c1">1</span>)
hc_row<span class="pl-k">=</span><span class="pl-c1">hclust</span>(dist_row, branchorder<span class="pl-k">=</span><span class="pl-c1">:optimal</span>)

pdz<span class="pl-k">=</span><span class="pl-c1">similar</span>(pd)
<span class="pl-k">for</span> row <span class="pl-k">in</span> hc_row<span class="pl-k">.</span>order
	pdz[row,hc_col<span class="pl-k">.</span>order]<span class="pl-k">=</span><span class="pl-c1">zscore</span>(pd[row,hc_col<span class="pl-k">.</span>order])
<span class="pl-k">end</span>
nrows<span class="pl-k">=</span><span class="pl-c1">length</span>(hc_row<span class="pl-k">.</span>order)
rowlabels<span class="pl-k">=</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">16</span>)[hc_row<span class="pl-k">.</span>order]
ncols<span class="pl-k">=</span><span class="pl-c1">length</span>(hc_col<span class="pl-k">.</span>order)
collabels<span class="pl-k">=</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">7</span>)[hc_col<span class="pl-k">.</span>order]
l <span class="pl-k">=</span> <span class="pl-c1">grid</span>(<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,heights<span class="pl-k">=</span>[<span class="pl-c1">0.2</span>,<span class="pl-c1">0.8</span>,<span class="pl-c1">0.2</span>,<span class="pl-c1">0.8</span>],widths<span class="pl-k">=</span>[<span class="pl-c1">0.8</span>,<span class="pl-c1">0.2</span>,<span class="pl-c1">0.8</span>,<span class="pl-c1">0.2</span>])
<span class="pl-c1">plot</span>(
	layout <span class="pl-k">=</span> l,
	<span class="pl-c1">plot</span>(hc_col,xticks<span class="pl-k">=</span><span class="pl-c1">false</span>),
	<span class="pl-c1">plot</span>(ticks<span class="pl-k">=</span><span class="pl-c1">nothing</span>,border<span class="pl-k">=</span><span class="pl-c1">:none</span>),
	<span class="pl-c1">plot</span>(
		pdz[hc_row<span class="pl-k">.</span>order,hc_col<span class="pl-k">.</span>order],
		st<span class="pl-k">=</span><span class="pl-c1">:heatmap</span>,
		<span class="pl-c"><span class="pl-c">#</span>yticks=(1:nrows,rowlabels),</span>
		yticks<span class="pl-k">=</span>(<span class="pl-c1">1</span><span class="pl-k">:</span>nrows,rowlabels),
		xticks<span class="pl-k">=</span>(<span class="pl-c1">1</span><span class="pl-k">:</span>ncols,collabels),
		xrotation<span class="pl-k">=</span><span class="pl-c1">90</span>,
		colorbar<span class="pl-k">=</span><span class="pl-c1">false</span>
	),
	<span class="pl-c1">plot</span>(hc_row,yticks<span class="pl-k">=</span><span class="pl-c1">false</span>,xrotation<span class="pl-k">=</span><span class="pl-c1">90</span>,orientation<span class="pl-k">=</span><span class="pl-c1">:horizontal</span>)
)
</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/oheil/StatsPlots.jl/oh/screenshots/heatmapWithDendroOnRight.jpg"><img src="https://raw.githubusercontent.com/oheil/StatsPlots.jl/oh/screenshots/heatmapWithDendroOnRight.jpg" alt="heatmap with dendrograms on top and on the right" style="max-width:100%;"></a></p>
<h2><a id="user-content-groupederrorsjl-for-population-analysis" class="anchor" aria-hidden="true" href="#groupederrorsjl-for-population-analysis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GroupedErrors.jl for population analysis</h2>
<p>Population analysis on a table-like data structures can be done using the highly recommended <a href="https://github.com/piever/GroupedErrors.jl">GroupedErrors</a> package.</p>
<p>This external package, in combination with StatsPlots, greatly simplifies the creation of two types of plots:</p>
<h3><a id="user-content-1-subject-by-subject-plot-generally-a-scatter-plot" class="anchor" aria-hidden="true" href="#1-subject-by-subject-plot-generally-a-scatter-plot"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>1. Subject by subject plot (generally a scatter plot)</h3>
<p>Some simple summary statistics are computed for each experimental subject (mean is default but any scalar valued function would do) and then plotted against some other summary statistics, potentially splitting by some categorical experimental variable.</p>
<h3><a id="user-content-2-population-plot-generally-a-ribbon-plot-in-continuous-case-or-bar-plot-in-discrete-case" class="anchor" aria-hidden="true" href="#2-population-plot-generally-a-ribbon-plot-in-continuous-case-or-bar-plot-in-discrete-case"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>2. Population plot (generally a ribbon plot in continuous case, or bar plot in discrete case)</h3>
<p>Some statistical analysis is computed at the single subject level (for example the density/hazard/cumulative of some variable, or the expected value of a variable given another) and the analysis is summarized across subjects (taking for example mean and s.e.m), potentially splitting by some categorical experimental variable.</p>
<p>For more information please refer to the <a href="https://github.com/piever/GroupedErrors.jl/blob/master/README.md">README</a>.</p>
<p>A GUI based on QML and the GR Plots.jl backend to simplify the use of StatsPlots.jl and GroupedErrors.jl even further can be found <a href="https://github.com/piever/PlugAndPlot.jl">here</a> (usable but still in alpha stage).</p>
<h2><a id="user-content-ordinations" class="anchor" aria-hidden="true" href="#ordinations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Ordinations</h2>
<p>MDS from <a href="https://github.com/JuliaStats/MultivariateStats.jl"><code>MultivariateStats.jl</code></a>
can be plotted as scatter plots.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using MultivariateStats, RDatasets, StatsPlots

iris = dataset(&quot;datasets&quot;, &quot;iris&quot;)
X = convert(Matrix, iris[:, 1:4])
M = fit(MDS, X'; maxoutdim=2)

plot(M, group=iris.Species)
"><pre><span class="pl-k">using</span> MultivariateStats, RDatasets, StatsPlots

iris <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>datasets<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>iris<span class="pl-pds">"</span></span>)
X <span class="pl-k">=</span> <span class="pl-c1">convert</span>(Matrix, iris[:, <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">4</span>])
M <span class="pl-k">=</span> <span class="pl-c1">fit</span>(MDS, X<span class="pl-k">'</span>; maxoutdim<span class="pl-k">=</span><span class="pl-c1">2</span>)

<span class="pl-c1">plot</span>(M, group<span class="pl-k">=</span>iris<span class="pl-k">.</span>Species)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/3502975/64883550-a6186600-d62d-11e9-8f6b-c5094abf5573.png"><img src="https://user-images.githubusercontent.com/3502975/64883550-a6186600-d62d-11e9-8f6b-c5094abf5573.png" alt="MDS plot" style="max-width:100%;"></a></p>
<p>PCA will be added once the API in MultivariateStats is changed.
See <a href="https://github.com/JuliaStats/MultivariateStats.jl/issues/109">https://github.com/JuliaStats/MultivariateStats.jl/issues/109</a> and <a href="https://github.com/JuliaStats/MultivariateStats.jl/issues/95">https://github.com/JuliaStats/MultivariateStats.jl/issues/95</a>.</p>
<h2><a id="user-content-covariance-ellipses" class="anchor" aria-hidden="true" href="#covariance-ellipses"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Covariance ellipses</h2>
<p>A 2×2 covariance matrix <code>Σ</code> can be plotted as an ellipse, which is a contour line of a Gaussian density function with variance <code>Σ</code>.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="covellipse([0,2], [2 1; 1 4], n_std=2, aspect_ratio=1, label=&quot;cov1&quot;)
covellipse!([1,0], [1 -0.5; -0.5 3], showaxes=true, label=&quot;cov2&quot;)
"><pre><code>covellipse([0,2], [2 1; 1 4], n_std=2, aspect_ratio=1, label="cov1")
covellipse!([1,0], [1 -0.5; -0.5 3], showaxes=true, label="cov2")
</code></pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4170948/84170978-f0c2f380-aa82-11ea-95de-ce2fe14e16ec.png"><img src="https://user-images.githubusercontent.com/4170948/84170978-f0c2f380-aa82-11ea-95de-ce2fe14e16ec.png" alt="covariance ellipses" style="max-width:100%;"></a></p>
</article></div>