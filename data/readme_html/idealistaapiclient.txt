<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-idealistaapiclient" class="anchor" aria-hidden="true" href="#idealistaapiclient"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>IdealistaAPIClient</h1>
<p dir="auto"><a href="https://github.com/rogersamso/IdealistaAPIClient.jl/actions"><img src="https://github.com/rogersamso/IdealistaAPIClient.jl/workflows/CI/badge.svg" alt="Build status (Github Actions)" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/rogersamso/IdealistaAPIClient.jl?branch=main" rel="nofollow"><img src="https://camo.githubusercontent.com/4cef718c64cf0564f5dd8d2557dab6c98634b7f6b1c21cc679e25ef0fbb90177/687474703a2f2f636f6465636f762e696f2f6769746875622f726f67657273616d736f2f496465616c69737461415049436c69656e742e6a6c2f636f7665726167652e7376673f6272616e63683d6d61696e" alt="codecov.io" data-canonical-src="http://codecov.io/github/rogersamso/IdealistaAPIClient.jl/coverage.svg?branch=main" style="max-width: 100%;"></a>
<a href="https://rogersamso.github.io/IdealistaAPIClient.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://rogersamso.github.io/IdealistaAPIClient.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Simple Julia client for the <a href="https://idealista.com" rel="nofollow">Idealista</a> <a href="https://developers.idealista.com/access-request" rel="nofollow">Search API</a>.</p>
<p dir="auto">It was tested with v3.5 of the Search API.</p>
<h2 dir="auto"><a id="user-content-warning" class="anchor" aria-hidden="true" href="#warning"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Warning</h2>
<p dir="auto">This package is under development, so use it with caution.</p>
<h2 dir="auto"><a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Requirements</h2>
<p dir="auto">The idealista APIKEY and SECRET must be defined as environmental variables in the startup.jl file.</p>
<p dir="auto">Use <a href="https://developers.idealista.com/access-request" rel="nofollow">this link</a> to request an APIKEY and SECRET.</p>
<h2 dir="auto"><a id="user-content-installation-instructions" class="anchor" aria-hidden="true" href="#installation-instructions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation instructions</h2>
<p dir="auto">At the Julia REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg

Pkg.add(&quot;IdealistaAPIClient&quot;)
"><pre><span class="pl-k">using</span> Pkg

Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>IdealistaAPIClient<span class="pl-pds">"</span></span>)
</pre></div>
<h2 dir="auto"><a id="user-content-utilization-example" class="anchor" aria-hidden="true" href="#utilization-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Utilization example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using IdealistaAPIClient

# see list of valid fields for each property type
# note that only some of the Search type fields must be passed, while the rest are optional (see the Valid search fields section below)
valid_fields()

# define search fields
search_fields = (country=&quot;es&quot;, center=&quot;40.430,-3.702&quot;, propertyType=&quot;homes&quot;, distance=15000, operation=&quot;sale&quot;, bedrooms=&quot;1,2,3,4&quot;, swimmingPool=true)

search(;search_fields...) |&gt; process_response
"><pre><span class="pl-k">using</span> IdealistaAPIClient

<span class="pl-c"><span class="pl-c">#</span> see list of valid fields for each property type</span>
<span class="pl-c"><span class="pl-c">#</span> note that only some of the Search type fields must be passed, while the rest are optional (see the Valid search fields section below)</span>
<span class="pl-c1">valid_fields</span>()

<span class="pl-c"><span class="pl-c">#</span> define search fields</span>
search_fields <span class="pl-k">=</span> (country<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>es<span class="pl-pds">"</span></span>, center<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>40.430,-3.702<span class="pl-pds">"</span></span>, propertyType<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>homes<span class="pl-pds">"</span></span>, distance<span class="pl-k">=</span><span class="pl-c1">15000</span>, operation<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>sale<span class="pl-pds">"</span></span>, bedrooms<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>1,2,3,4<span class="pl-pds">"</span></span>, swimmingPool<span class="pl-k">=</span><span class="pl-c1">true</span>)

<span class="pl-c1">search</span>(;search_fields<span class="pl-k">...</span>) <span class="pl-k">|&gt;</span> process_response
</pre></div>
<h2 dir="auto"><a id="user-content-valid-search-fields" class="anchor" aria-hidden="true" href="#valid-search-fields"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Valid search fields</h2>
<p dir="auto">This is the list of basic search fields (non property-type-specific).</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Data type</th>
<th>Description</th>
<th>Extra info</th>
</tr>
</thead>
<tbody>
<tr>
<td>country (required)</td>
<td>string</td>
<td>es/it/pt</td>
<td>values: es, it, pt</td>
</tr>
<tr>
<td>operation (required)</td>
<td>string</td>
<td></td>
<td>values: sale, rent</td>
</tr>
<tr>
<td>propertyType (required)</td>
<td>string</td>
<td></td>
<td>values: homes, offices, premises, garages, bedrooms</td>
</tr>
<tr>
<td>center</td>
<td>string</td>
<td>geographic coordinates (WGS84) (latitude,longitude)</td>
<td>example: “40.123,-3.242”</td>
</tr>
<tr>
<td>locale</td>
<td>string</td>
<td>search language for summary</td>
<td>values: es, it, pt, en, ca</td>
</tr>
<tr>
<td>distance</td>
<td>double</td>
<td>distance to center, in metres (ratio)</td>
<td></td>
</tr>
<tr>
<td>locationId</td>
<td>string</td>
<td>idealista location code</td>
<td></td>
</tr>
<tr>
<td>maxItems</td>
<td>integer</td>
<td>items per page</td>
<td>50 as maximum</td>
</tr>
<tr>
<td>numPage</td>
<td>integer</td>
<td>page number (for pagination)</td>
<td>(1,2,3..n)</td>
</tr>
<tr>
<td>maxPrice</td>
<td>double</td>
<td>maximun price in response</td>
<td></td>
</tr>
<tr>
<td>minPrice</td>
<td>double</td>
<td>minimun price in response</td>
<td></td>
</tr>
<tr>
<td>sinceDate</td>
<td>sinceDate</td>
<td></td>
<td>W:last week, M: last month, T:last day (for rent except rooms), Y: last 2 days (sale and rooms)</td>
</tr>
<tr>
<td>order</td>
<td>string</td>
<td></td>
<td>allowed values by property type: garages, premises, offices, homes, rooms</td>
</tr>
<tr>
<td>sort</td>
<td>string</td>
<td></td>
<td>values: asc, desc</td>
</tr>
<tr>
<td>adIds</td>
<td>integer</td>
<td>filter by adid</td>
<td>multivalued field</td>
</tr>
<tr>
<td>hasMultimedia</td>
<td>Boolean</td>
<td>retrieve properties with pictures or video or virtual tour</td>
<td></td>
</tr>
</tbody>
</table>
<p dir="auto">You must specify a center + distance or locationId in each request.</p>
<p dir="auto">Specific filters exist for garages, premises, offices, homes and rooms. Check the documentation you get when requesting the API key for details.</p>
</article></div>