<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-xpressjl" class="anchor" aria-hidden="true" href="#xpressjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Xpress.jl</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Social</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://github.com/jump-dev/Xpress.jl/actions?query=workflow%3ACI"><img src="https://github.com/jump-dev/Xpress.jl/workflows/CI/badge.svg?branch=master" alt="Build Status" style="max-width:100%;"></a> <a href="http://codecov.io/github/jump-dev/Xpress.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/66381ffb391cc1af7c83d395b8a5a4bd520fab0ff2059ccbbeded4d077e3b616/687474703a2f2f636f6465636f762e696f2f6769746875622f6a756d702d6465762f5870726573732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Codecov branch" data-canonical-src="http://codecov.io/github/jump-dev/Xpress.jl/coverage.svg?branch=master" style="max-width:100%;"></a></td>
<td align="center"><a href="https://gitter.im/JuliaOpt/JuMP-dev?utm_source=share-link&amp;utm_medium=link&amp;utm_campaign=share-link" rel="nofollow"><img src="https://camo.githubusercontent.com/5d051ccd113f87e787590cadd1441e0d1a2dc2bec69ccadd59398285555cfa5e/68747470733a2f2f6261646765732e6769747465722e696d2f4a756c69614f70742f4a754d502d6465762e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/JuliaOpt/JuMP-dev.svg" style="max-width:100%;"></a> <a href="https://discourse.julialang.org/c/domain/opt" rel="nofollow"><img src="https://camo.githubusercontent.com/f8462892b313c50a43156c23b37fd7e732af7b406ad01b816528b3d2dc776d48/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f612f61662f446973636f757273655f6c6f676f2e706e672f37393970782d446973636f757273655f6c6f676f2e706e67" width="64" data-canonical-src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Discourse_logo.png/799px-Discourse_logo.png" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>Xpress.jl is a wrapper for the <a href="www.fico.com/products/fico-xpress-solver">FICO Xpress Solver</a>.</p>
<p>It has two components:</p>
<ul>
<li>a thin wrapper around the complete C API</li>
<li>an interface to <a href="https://github.com/jump-dev/MathOptInterface.jl">MathOptInterface</a></li>
</ul>
<p>The C API can be accessed via <code>Xpress.Lib.XPRSxx</code> functions, where the names and
arguments are identical to the C API. See the <a href="https://www.fico.com/fico-xpress-optimization/docs/latest/solver/optimizer/HTML" rel="nofollow">Xpress documentation</a>
for details.</p>
<p><em>The Xpress wrapper for Julia is community driven and not officially supported
by FICO Xpress. If you are a commercial customer interested in official support for
Julia from FICO Xpress, let them know!</em></p>
<h2><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Install:</h2>
<p>Here is the procedure to setup this package:</p>
<ol>
<li>
<p>Obtain a license of Xpress and install Xpress solver, following the instructions on FICO's website.</p>
</li>
<li>
<p>Install this package using <code>Pkg.add("Xpress")</code>.</p>
</li>
<li>
<p>Make sure the XPRESSDIR environmental variable is set to the path of the Xpress directory. This is part of a standard installation. The Xpress library will be searched for in XPRESSDIR/lib on unix platforms and XPRESSDIR/bin on Windows.</p>
</li>
<li>
<p>Now, you can start using it.</p>
</li>
</ol>
<p>You should use the xpress version matching to your julia installation and vice-versa.</p>
<p>By default, <code>build</code>ing <em>Xpress.jl</em> will fail if the Xpress library is not found.
This may not be desirable in certain cases, for example when part of a package's
test suite uses Xpress as an optional test dependency, but Xpress cannot be
installed on a CI server running the test suite. To support this use case, the
<code>XPRESS_JL_SKIP_LIB_CHECK</code> environment variable may be set (to any value) to
make <em>Xpress.jl</em> installable (but not usable).</p>
<h2><a id="user-content-use-other-packages" class="anchor" aria-hidden="true" href="#use-other-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Use Other Packages</h2>
<p>We highly recommend that you use the <em>Xpress.jl</em> package with higher level
packages such as <a href="https://github.com/jump-dev/JuMP.jl">JuMP.jl</a> or
<a href="https://github.com/jump-dev/MathOptInterface.jl">MathOptInterface.jl</a>.</p>
<p>This can be done using the <code>Xpress.Optimizer</code> object. Here is how to create a
<em>JuMP</em> model that uses Xpress as the solver. Parameters are passed as keyword
arguments:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using JuMP, Xpress

model = Model(()-&gt;Xpress.Optimizer(DEFAULTALG=2, PRESOLVE=0, logfile = &quot;output.log&quot;))
"><pre><span class="pl-k">using</span> JuMP, Xpress

model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(()<span class="pl-k">-&gt;</span>Xpress<span class="pl-k">.</span><span class="pl-c1">Optimizer</span>(DEFAULTALG<span class="pl-k">=</span><span class="pl-c1">2</span>, PRESOLVE<span class="pl-k">=</span><span class="pl-c1">0</span>, logfile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>output.log<span class="pl-pds">"</span></span>))</pre></div>
<p>In order to initialize an optimizer without console printing run
<code>Xpress.Optimizer(OUTPUTLOG = 0)</code>. Setting <code>OUTPUTLOG</code> to zero will also disable
printing to the log file in all systems.</p>
<p>For other parameters use <a href="https://www.fico.com/fico-xpress-optimization/docs/latest/solver/optimizer/HTML/" rel="nofollow">Xpress Optimizer manual</a>
or type <code>julia -e "using Xpress; println(keys(Xpress.XPRS_ATTRIBUTES))"</code>.</p>
<p>If logfile is set to <code>""</code>, log file is disabled and output is printed to the
console (<a href="https://www.fico.com/fico-xpress-optimization/docs/latest/solver/optimizer/HTML/OUTPUTLOG.html" rel="nofollow">there might be issues with console output on windows (it is manually implemented with callbacks)</a>).
If logfile is set to a filepath, output is printed to the file.
By default, logfile is set to <code>""</code> (console).</p>
<p>Parameters in a JuMP model can be directly modified:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Xpress, JuMP;

julia&gt; model = Model(()-&gt;Xpress.Optimizer());

julia&gt; get_optimizer_attribute(model, &quot;logfile&quot;)

julia&gt; set_optimizer_attribute(model, &quot;logfile&quot;, &quot;output.log&quot;)

julia&gt; get_optimizer_attribute(model, &quot;logfile&quot;)
&quot;output.log&quot;
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Xpress, JuMP;

julia<span class="pl-k">&gt;</span> model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(()<span class="pl-k">-&gt;</span>Xpress<span class="pl-k">.</span><span class="pl-c1">Optimizer</span>());

julia<span class="pl-k">&gt;</span> <span class="pl-c1">get_optimizer_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>logfile<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_optimizer_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>logfile<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>output.log<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">get_optimizer_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>logfile<span class="pl-pds">"</span></span>)
<span class="pl-s"><span class="pl-pds">"</span>output.log<span class="pl-pds">"</span></span></pre></div>
<p>If you've already created an instance of an MOI <code>Optimizer</code>, you can use
<code>MOI.RawParameter</code> to get and set the location of the current logfile.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Xpress, MathOptInterface; const MOI = MathOptInterface;

julia&gt; OPTIMIZER = Xpress.Optimizer();

julia&gt; MOI.get(OPTIMIZER, MOI.RawParameter(&quot;logfile&quot;))
&quot;&quot;

julia&gt; MOI.set(OPTIMIZER, MOI.RawParameter(&quot;logfile&quot;), &quot;output.log&quot;)

julia&gt; MOI.get(OPTIMIZER, MOI.RawParameter(&quot;logfile&quot;))
&quot;output.log&quot;
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Xpress, MathOptInterface; <span class="pl-k">const</span> MOI <span class="pl-k">=</span> MathOptInterface;

julia<span class="pl-k">&gt;</span> OPTIMIZER <span class="pl-k">=</span> Xpress<span class="pl-k">.</span><span class="pl-c1">Optimizer</span>();

julia<span class="pl-k">&gt;</span> MOI<span class="pl-k">.</span><span class="pl-c1">get</span>(OPTIMIZER, MOI<span class="pl-k">.</span><span class="pl-c1">RawParameter</span>(<span class="pl-s"><span class="pl-pds">"</span>logfile<span class="pl-pds">"</span></span>))
<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> MOI<span class="pl-k">.</span><span class="pl-c1">set</span>(OPTIMIZER, MOI<span class="pl-k">.</span><span class="pl-c1">RawParameter</span>(<span class="pl-s"><span class="pl-pds">"</span>logfile<span class="pl-pds">"</span></span>), <span class="pl-s"><span class="pl-pds">"</span>output.log<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> MOI<span class="pl-k">.</span><span class="pl-c1">get</span>(OPTIMIZER, MOI<span class="pl-k">.</span><span class="pl-c1">RawParameter</span>(<span class="pl-s"><span class="pl-pds">"</span>logfile<span class="pl-pds">"</span></span>))
<span class="pl-s"><span class="pl-pds">"</span>output.log<span class="pl-pds">"</span></span></pre></div>
<h2><a id="user-content-callbacks" class="anchor" aria-hidden="true" href="#callbacks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Callbacks</h2>
<p>Solver specific and solver independent callbacks are working in
<a href="https://github.com/jump-dev/MathOptInterface.jl">MathOptInterface</a> and,
consequently, in <a href="https://github.com/jump-dev/JuMP.jl">JuMP</a>. However, the
current implementation should be considered experimental.</p>
<h2><a id="user-content-environement-variables" class="anchor" aria-hidden="true" href="#environement-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Environement variables</h2>
<ul>
<li>
<p><code>XPRESS_JL_SKIP_LIB_CHECK</code> - Used to skip build lib check as previsouly described.</p>
</li>
<li>
<p><code>XPRESS_JL_NO_INFO</code> - Disable license info log.</p>
</li>
<li>
<p><code>XPRESS_JL_NO_DEPS_ERROR</code> - Disable error when do deps.jl file is found.</p>
</li>
<li>
<p><code>XPRESS_JL_NO_AUTO_INIT</code> - Disable automatic run of <code>Xpress.initialize()</code>.
Specially useful for explicitly loading the dynamic library.</p>
</li>
</ul>
<h2><a id="user-content-julia-version-warning" class="anchor" aria-hidden="true" href="#julia-version-warning"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Julia version warning</h2>
<p>The Julia versions 1.1.x do not work properly with MOI dues to Julia bugs. Hence, these versions are not supported.</p>
<h2><a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Reference:</h2>
<p><a href="https://www.fico.com/fico-xpress-optimization/docs/latest/solver/optimizer/HTML" rel="nofollow">FICO optimizer manual</a></p>
</article></div>