<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-fastsphericalharmonicsjl" class="anchor" aria-hidden="true" href="#fastsphericalharmonicsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FastSphericalHarmonics.jl</h1>
<p>East-to-use Spherical Harmonics, based on
<a href="https://github.com/JuliaApproximation/FastTransforms.jl"><code>FastTransforms.jl</code></a></p>
<ul>
<li><a href="https://eschnett.github.io/FastSphericalHarmonics.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Documenter" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></li>
<li><a href="https://github.com/eschnett/FastSphericalHarmonics.jl/actions"><img src="https://github.com/eschnett/FastSphericalHarmonics.jl/workflows/CI/badge.svg" alt="GitHub CI" style="max-width:100%;"></a></li>
<li><a href="https://codecov.io/gh/eschnett/FastSphericalHarmonics.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2923bdb3ce2335c9c5a3bfceb947287366f275ff2618ea6e03f1c1c5a3dd4c2d/68747470733a2f2f636f6465636f762e696f2f67682f657363686e6574742f4661737453706865726963616c4861726d6f6e6963732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/eschnett/FastSphericalHarmonics.jl/branch/main/graph/badge.svg" style="max-width:100%;"></a></li>
</ul>
<p>The
<a href="https://github.com/eschnett/FastSphericalHarmonics.jl"><code>FastSphericalHarmonics.jl</code></a>
package wraps the
<a href="https://github.com/JuliaApproximation/FastTransforms.jl"><code>FastTransforms.jl</code></a>
Julia package to calculate spherical harmonics.</p>
<p><code>FastTransforms.jl</code> is a powerful, efficient, and well thought
out package. Unfortunately, its user interface is difficult to use for
beginners, and its documentation is very technical.
<code>FastSphericalHarmonics.jl</code> provides functions and documentation that
are easier to use. It would be worthwhile to fold
<code>FastSphericalHarmonics.jl</code> into <code>FastTransforms.jl</code> at some point.</p>
<h2><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h2>
<p>This package provides scalar and spin spherical harmonic
transforms for real and complex fields. The normalizations and
conventions are chosen to be convenient for real fields, and are
different from those usually used for complex spherical harmonics.
This is documented by
<a href="https://juliaapproximation.github.io/FastTransforms.jl/stable/" rel="nofollow">FastTransforms.jl</a>,
its underlying C implementation
<a href="https://mikaelslevinsky.github.io/FastTransforms/" rel="nofollow">FastTransforms</a>,
and in the references listed there (see bottom of the page there).</p>
<p>The
<a href="https://eschnett.github.io/FastSphericalHarmonics.jl/dev" rel="nofollow">documentation</a>
lists the implemented functions as well as their Julia signatures.
Most functions come in two versions, one that mutates its arguments
and one that allocates its output. See also the test cases for more
examples.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<h3><a id="user-content-example-1-transform-modify-coefficients-and-transform-back" class="anchor" aria-hidden="true" href="#example-1-transform-modify-coefficients-and-transform-back"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example 1: Transform, modify coefficients, and transform back</h3>
<p>Make the example reproducible by choosing a particular random number
seed:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Random

julia&gt; Random.seed!(42);
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Random

julia<span class="pl-k">&gt;</span> Random<span class="pl-k">.</span><span class="pl-c1">seed!</span>(<span class="pl-c1">42</span>);</pre></div>
<p>Load the package and create a random scalar field on the sphere:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using FastSphericalHarmonics

julia&gt; lmax = 4;

julia&gt; F = randn(lmax+1, 2lmax+1)
5×9 Matrix{Float64}:
 -0.556027   -1.1449    1.08238   -0.886205  -1.05099    0.168341   0.36901      0.681085  -0.145211
 -0.444383   -0.468606  0.187028   0.684565   0.502079   0.284259  -0.00761298  -1.33913    0.642896
  0.0271553   0.156143  0.518149  -1.59058   -0.216248   0.569829   0.562669    -0.238284   1.81935
 -0.299484   -2.64199   1.49138    0.410653  -0.706424  -1.42206    0.106869     1.01936   -0.36726
  1.77786     1.00331   0.367563  -0.85635   -3.86593   -0.372401   0.569458     0.701771   0.756569
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FastSphericalHarmonics

julia<span class="pl-k">&gt;</span> lmax <span class="pl-k">=</span> <span class="pl-c1">4</span>;

julia<span class="pl-k">&gt;</span> F <span class="pl-k">=</span> <span class="pl-c1">randn</span>(lmax<span class="pl-k">+</span><span class="pl-c1">1</span>, <span class="pl-c1">2</span>lmax<span class="pl-k">+</span><span class="pl-c1">1</span>)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Float64}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">0.556027</span>   <span class="pl-k">-</span><span class="pl-c1">1.1449</span>    <span class="pl-c1">1.08238</span>   <span class="pl-k">-</span><span class="pl-c1">0.886205</span>  <span class="pl-k">-</span><span class="pl-c1">1.05099</span>    <span class="pl-c1">0.168341</span>   <span class="pl-c1">0.36901</span>      <span class="pl-c1">0.681085</span>  <span class="pl-k">-</span><span class="pl-c1">0.145211</span>
 <span class="pl-k">-</span><span class="pl-c1">0.444383</span>   <span class="pl-k">-</span><span class="pl-c1">0.468606</span>  <span class="pl-c1">0.187028</span>   <span class="pl-c1">0.684565</span>   <span class="pl-c1">0.502079</span>   <span class="pl-c1">0.284259</span>  <span class="pl-k">-</span><span class="pl-c1">0.00761298</span>  <span class="pl-k">-</span><span class="pl-c1">1.33913</span>    <span class="pl-c1">0.642896</span>
  <span class="pl-c1">0.0271553</span>   <span class="pl-c1">0.156143</span>  <span class="pl-c1">0.518149</span>  <span class="pl-k">-</span><span class="pl-c1">1.59058</span>   <span class="pl-k">-</span><span class="pl-c1">0.216248</span>   <span class="pl-c1">0.569829</span>   <span class="pl-c1">0.562669</span>    <span class="pl-k">-</span><span class="pl-c1">0.238284</span>   <span class="pl-c1">1.81935</span>
 <span class="pl-k">-</span><span class="pl-c1">0.299484</span>   <span class="pl-k">-</span><span class="pl-c1">2.64199</span>   <span class="pl-c1">1.49138</span>    <span class="pl-c1">0.410653</span>  <span class="pl-k">-</span><span class="pl-c1">0.706424</span>  <span class="pl-k">-</span><span class="pl-c1">1.42206</span>    <span class="pl-c1">0.106869</span>     <span class="pl-c1">1.01936</span>   <span class="pl-k">-</span><span class="pl-c1">0.36726</span>
  <span class="pl-c1">1.77786</span>     <span class="pl-c1">1.00331</span>   <span class="pl-c1">0.367563</span>  <span class="pl-k">-</span><span class="pl-c1">0.85635</span>   <span class="pl-k">-</span><span class="pl-c1">3.86593</span>   <span class="pl-k">-</span><span class="pl-c1">0.372401</span>   <span class="pl-c1">0.569458</span>     <span class="pl-c1">0.701771</span>   <span class="pl-c1">0.756569</span></pre></div>
<p>Transform to spherical harmonics:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; C = sph_transform(F)
5×9 Matrix{Float64}:
 -0.0971079  -0.480385    0.250188   -0.237836  -0.344185  -1.15475    -0.390183  -0.828615     -0.0736505
  0.173019    0.399055   -0.601621    0.235944   1.15235   -0.0698683  -0.222073   0.0436882    -1.03784
 -0.35473     0.28504    -0.0294237  -0.492649  -0.931321  -0.478315    0.684783  -0.000600234   0.577805
 -0.309621   -0.0516482  -0.99214    -0.318465  -0.243649   0.0434071  -0.452602  -0.338297      0.332204
  0.296832   -1.16363     1.65583     0.606001  -0.281404  -0.555203   -0.424356   0.21506       0.123637
"><pre><code>julia&gt; C = sph_transform(F)
5×9 Matrix{Float64}:
 -0.0971079  -0.480385    0.250188   -0.237836  -0.344185  -1.15475    -0.390183  -0.828615     -0.0736505
  0.173019    0.399055   -0.601621    0.235944   1.15235   -0.0698683  -0.222073   0.0436882    -1.03784
 -0.35473     0.28504    -0.0294237  -0.492649  -0.931321  -0.478315    0.684783  -0.000600234   0.577805
 -0.309621   -0.0516482  -0.99214    -0.318465  -0.243649   0.0434071  -0.452602  -0.338297      0.332204
  0.296832   -1.16363     1.65583     0.606001  -0.281404  -0.555203   -0.424356   0.21506       0.123637
</code></pre></div>
<p>Note that the coefficient array <code>C</code> contains <code>(lmax+1) * (2lmax+1) = 45</code> coefficients, more than the <code>(lmax+1)^2 = 25</code> coefficients we
expected. There are some higher modes (with <code>l &gt; lmax</code>) present as
well. This makes the spherical harmonic transform invertible:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; F′ = sph_evaluate(C)
5×9 Matrix{Float64}:
 -0.556027   -1.1449    1.08238   -0.886205  -1.05099    0.168341   0.36901      0.681085  -0.145211
 -0.444383   -0.468606  0.187028   0.684565   0.502079   0.284259  -0.00761298  -1.33913    0.642896
  0.0271553   0.156143  0.518149  -1.59058   -0.216248   0.569829   0.562669    -0.238284   1.81935
 -0.299484   -2.64199   1.49138    0.410653  -0.706424  -1.42206    0.106869     1.01936   -0.36726
  1.77786     1.00331   0.367563  -0.85635   -3.86593   -0.372401   0.569458     0.701771   0.756569
"><pre>julia<span class="pl-k">&gt;</span> F′ <span class="pl-k">=</span> <span class="pl-c1">sph_evaluate</span>(C)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Float64}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">0.556027</span>   <span class="pl-k">-</span><span class="pl-c1">1.1449</span>    <span class="pl-c1">1.08238</span>   <span class="pl-k">-</span><span class="pl-c1">0.886205</span>  <span class="pl-k">-</span><span class="pl-c1">1.05099</span>    <span class="pl-c1">0.168341</span>   <span class="pl-c1">0.36901</span>      <span class="pl-c1">0.681085</span>  <span class="pl-k">-</span><span class="pl-c1">0.145211</span>
 <span class="pl-k">-</span><span class="pl-c1">0.444383</span>   <span class="pl-k">-</span><span class="pl-c1">0.468606</span>  <span class="pl-c1">0.187028</span>   <span class="pl-c1">0.684565</span>   <span class="pl-c1">0.502079</span>   <span class="pl-c1">0.284259</span>  <span class="pl-k">-</span><span class="pl-c1">0.00761298</span>  <span class="pl-k">-</span><span class="pl-c1">1.33913</span>    <span class="pl-c1">0.642896</span>
  <span class="pl-c1">0.0271553</span>   <span class="pl-c1">0.156143</span>  <span class="pl-c1">0.518149</span>  <span class="pl-k">-</span><span class="pl-c1">1.59058</span>   <span class="pl-k">-</span><span class="pl-c1">0.216248</span>   <span class="pl-c1">0.569829</span>   <span class="pl-c1">0.562669</span>    <span class="pl-k">-</span><span class="pl-c1">0.238284</span>   <span class="pl-c1">1.81935</span>
 <span class="pl-k">-</span><span class="pl-c1">0.299484</span>   <span class="pl-k">-</span><span class="pl-c1">2.64199</span>   <span class="pl-c1">1.49138</span>    <span class="pl-c1">0.410653</span>  <span class="pl-k">-</span><span class="pl-c1">0.706424</span>  <span class="pl-k">-</span><span class="pl-c1">1.42206</span>    <span class="pl-c1">0.106869</span>     <span class="pl-c1">1.01936</span>   <span class="pl-k">-</span><span class="pl-c1">0.36726</span>
  <span class="pl-c1">1.77786</span>     <span class="pl-c1">1.00331</span>   <span class="pl-c1">0.367563</span>  <span class="pl-k">-</span><span class="pl-c1">0.85635</span>   <span class="pl-k">-</span><span class="pl-c1">3.86593</span>   <span class="pl-k">-</span><span class="pl-c1">0.372401</span>   <span class="pl-c1">0.569458</span>     <span class="pl-c1">0.701771</span>   <span class="pl-c1">0.756569</span></pre></div>
<p>Evaluating the modes at the grid points gives the same values back.</p>
<p>Let's create a new coefficient array <code>C′</code> that contains only some of
the modes, and leaves all other modes set to zero:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; C′ = zeros(size(C));

julia&gt; for l in 0:lmax, m in -l:l
           C′[sph_mode(l,m)] = C[sph_mode(l,m)]
       end

julia&gt; C′
5×9 Matrix{Float64}:
 -0.0971079  -0.480385    0.250188   -0.237836  -0.344185  -1.15475    -0.390183  -0.828615  -0.0736505
  0.173019    0.399055   -0.601621    0.235944   1.15235   -0.0698683  -0.222073   0.0        0.0
 -0.35473     0.28504    -0.0294237  -0.492649  -0.931321   0.0         0.0        0.0        0.0
 -0.309621   -0.0516482  -0.99214     0.0        0.0        0.0         0.0        0.0        0.0
  0.296832    0.0         0.0         0.0        0.0        0.0         0.0        0.0        0.0
"><pre>julia<span class="pl-k">&gt;</span> C′ <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(<span class="pl-c1">size</span>(C));

julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> l <span class="pl-k">in</span> <span class="pl-c1">0</span><span class="pl-k">:</span>lmax, m <span class="pl-k">in</span> <span class="pl-k">-</span>l<span class="pl-k">:</span>l
           C′[<span class="pl-c1">sph_mode</span>(l,m)] <span class="pl-k">=</span> C[<span class="pl-c1">sph_mode</span>(l,m)]
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> C′
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Float64}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">0.0971079</span>  <span class="pl-k">-</span><span class="pl-c1">0.480385</span>    <span class="pl-c1">0.250188</span>   <span class="pl-k">-</span><span class="pl-c1">0.237836</span>  <span class="pl-k">-</span><span class="pl-c1">0.344185</span>  <span class="pl-k">-</span><span class="pl-c1">1.15475</span>    <span class="pl-k">-</span><span class="pl-c1">0.390183</span>  <span class="pl-k">-</span><span class="pl-c1">0.828615</span>  <span class="pl-k">-</span><span class="pl-c1">0.0736505</span>
  <span class="pl-c1">0.173019</span>    <span class="pl-c1">0.399055</span>   <span class="pl-k">-</span><span class="pl-c1">0.601621</span>    <span class="pl-c1">0.235944</span>   <span class="pl-c1">1.15235</span>   <span class="pl-k">-</span><span class="pl-c1">0.0698683</span>  <span class="pl-k">-</span><span class="pl-c1">0.222073</span>   <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>
 <span class="pl-k">-</span><span class="pl-c1">0.35473</span>     <span class="pl-c1">0.28504</span>    <span class="pl-k">-</span><span class="pl-c1">0.0294237</span>  <span class="pl-k">-</span><span class="pl-c1">0.492649</span>  <span class="pl-k">-</span><span class="pl-c1">0.931321</span>   <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>
 <span class="pl-k">-</span><span class="pl-c1">0.309621</span>   <span class="pl-k">-</span><span class="pl-c1">0.0516482</span>  <span class="pl-k">-</span><span class="pl-c1">0.99214</span>     <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>
  <span class="pl-c1">0.296832</span>    <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>         <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span>        <span class="pl-c1">0.0</span></pre></div>
<p>We can examine which of the coefficient array elements contains what
mode, and which are unused (or rather, used by the supernumerary
higher modes):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; lm = similar(C, Any);

julia&gt; for l in 0:lmax, m in -l:l
           lm[sph_mode(l,m)] = (l,m)
       end

julia&gt; lm
5×9 Matrix{Any}:
 (0, 0)     (1, -1)     (1, 1)     (2, -2)     (2, 2)     (3, -3)     (3, 3)     (4, -4)     (4, 4)
 (1, 0)     (2, -1)     (2, 1)     (3, -2)     (3, 2)     (4, -3)     (4, 3)  #undef      #undef
 (2, 0)     (3, -1)     (3, 1)     (4, -2)     (4, 2)  #undef      #undef     #undef      #undef
 (3, 0)     (4, -1)     (4, 1)  #undef      #undef     #undef      #undef     #undef      #undef
 (4, 0)  #undef      #undef     #undef      #undef     #undef      #undef     #undef      #undef
"><pre>julia<span class="pl-k">&gt;</span> lm <span class="pl-k">=</span> <span class="pl-c1">similar</span>(C, Any);

julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> l <span class="pl-k">in</span> <span class="pl-c1">0</span><span class="pl-k">:</span>lmax, m <span class="pl-k">in</span> <span class="pl-k">-</span>l<span class="pl-k">:</span>l
           lm[<span class="pl-c1">sph_mode</span>(l,m)] <span class="pl-k">=</span> (l,m)
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> lm
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Any}<span class="pl-k">:</span>
 (<span class="pl-c1">0</span>, <span class="pl-c1">0</span>)     (<span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>)     (<span class="pl-c1">1</span>, <span class="pl-c1">1</span>)     (<span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">2</span>)     (<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)     (<span class="pl-c1">3</span>, <span class="pl-k">-</span><span class="pl-c1">3</span>)     (<span class="pl-c1">3</span>, <span class="pl-c1">3</span>)     (<span class="pl-c1">4</span>, <span class="pl-k">-</span><span class="pl-c1">4</span>)     (<span class="pl-c1">4</span>, <span class="pl-c1">4</span>)
 (<span class="pl-c1">1</span>, <span class="pl-c1">0</span>)     (<span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>)     (<span class="pl-c1">2</span>, <span class="pl-c1">1</span>)     (<span class="pl-c1">3</span>, <span class="pl-k">-</span><span class="pl-c1">2</span>)     (<span class="pl-c1">3</span>, <span class="pl-c1">2</span>)     (<span class="pl-c1">4</span>, <span class="pl-k">-</span><span class="pl-c1">3</span>)     (<span class="pl-c1">4</span>, <span class="pl-c1">3</span>)  <span class="pl-c"><span class="pl-c">#</span>undef      #undef</span>
 (<span class="pl-c1">2</span>, <span class="pl-c1">0</span>)     (<span class="pl-c1">3</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>)     (<span class="pl-c1">3</span>, <span class="pl-c1">1</span>)     (<span class="pl-c1">4</span>, <span class="pl-k">-</span><span class="pl-c1">2</span>)     (<span class="pl-c1">4</span>, <span class="pl-c1">2</span>)  <span class="pl-c"><span class="pl-c">#</span>undef      #undef     #undef      #undef</span>
 (<span class="pl-c1">3</span>, <span class="pl-c1">0</span>)     (<span class="pl-c1">4</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>)     (<span class="pl-c1">4</span>, <span class="pl-c1">1</span>)  <span class="pl-c"><span class="pl-c">#</span>undef      #undef     #undef      #undef     #undef      #undef</span>
 (<span class="pl-c1">4</span>, <span class="pl-c1">0</span>)  <span class="pl-c"><span class="pl-c">#</span>undef      #undef     #undef      #undef     #undef      #undef     #undef      #undef</span></pre></div>
<p>Evaluating these modes gives us scalar field values <code>F″</code> that contain
only these modes, which are now different from the original values in
<code>F</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; F″ = sph_evaluate(C′)
5×9 Matrix{Float64}:
 -1.09395   -0.814816  -0.0626794   0.497403   0.649439    0.440388   0.0488995  -0.36331   -0.783888
 -0.188812  -0.38777    0.535328   -0.220322   0.260065    0.224342  -0.309924   -0.529559   0.657753
  0.290636  -0.415552   0.643938   -1.07714    0.0812705   0.622275   0.631893   -0.554523   1.38539
 -1.23983   -1.27778    0.806158    0.115463  -1.27163    -1.4813     0.322699    0.908434   0.708826
  0.485627   0.410934   0.464254   -0.108253  -1.02271    -1.1944    -0.337374    0.589485   0.794295
"><pre>julia<span class="pl-k">&gt;</span> F″ <span class="pl-k">=</span> <span class="pl-c1">sph_evaluate</span>(C′)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Float64}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">1.09395</span>   <span class="pl-k">-</span><span class="pl-c1">0.814816</span>  <span class="pl-k">-</span><span class="pl-c1">0.0626794</span>   <span class="pl-c1">0.497403</span>   <span class="pl-c1">0.649439</span>    <span class="pl-c1">0.440388</span>   <span class="pl-c1">0.0488995</span>  <span class="pl-k">-</span><span class="pl-c1">0.36331</span>   <span class="pl-k">-</span><span class="pl-c1">0.783888</span>
 <span class="pl-k">-</span><span class="pl-c1">0.188812</span>  <span class="pl-k">-</span><span class="pl-c1">0.38777</span>    <span class="pl-c1">0.535328</span>   <span class="pl-k">-</span><span class="pl-c1">0.220322</span>   <span class="pl-c1">0.260065</span>    <span class="pl-c1">0.224342</span>  <span class="pl-k">-</span><span class="pl-c1">0.309924</span>   <span class="pl-k">-</span><span class="pl-c1">0.529559</span>   <span class="pl-c1">0.657753</span>
  <span class="pl-c1">0.290636</span>  <span class="pl-k">-</span><span class="pl-c1">0.415552</span>   <span class="pl-c1">0.643938</span>   <span class="pl-k">-</span><span class="pl-c1">1.07714</span>    <span class="pl-c1">0.0812705</span>   <span class="pl-c1">0.622275</span>   <span class="pl-c1">0.631893</span>   <span class="pl-k">-</span><span class="pl-c1">0.554523</span>   <span class="pl-c1">1.38539</span>
 <span class="pl-k">-</span><span class="pl-c1">1.23983</span>   <span class="pl-k">-</span><span class="pl-c1">1.27778</span>    <span class="pl-c1">0.806158</span>    <span class="pl-c1">0.115463</span>  <span class="pl-k">-</span><span class="pl-c1">1.27163</span>    <span class="pl-k">-</span><span class="pl-c1">1.4813</span>     <span class="pl-c1">0.322699</span>    <span class="pl-c1">0.908434</span>   <span class="pl-c1">0.708826</span>
  <span class="pl-c1">0.485627</span>   <span class="pl-c1">0.410934</span>   <span class="pl-c1">0.464254</span>   <span class="pl-k">-</span><span class="pl-c1">0.108253</span>  <span class="pl-k">-</span><span class="pl-c1">1.02271</span>    <span class="pl-k">-</span><span class="pl-c1">1.1944</span>    <span class="pl-k">-</span><span class="pl-c1">0.337374</span>    <span class="pl-c1">0.589485</span>   <span class="pl-c1">0.794295</span></pre></div>
<h3><a id="user-content-example-2-visualize-some-modes" class="anchor" aria-hidden="true" href="#example-2-visualize-some-modes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example 2: Visualize some modes</h3>
<p>Load the library and define the resolution of the images:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using FastSphericalHarmonics

julia&gt; lmax = 40;

julia&gt; Θ, Φ = sph_points(lmax+1);
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FastSphericalHarmonics

julia<span class="pl-k">&gt;</span> lmax <span class="pl-k">=</span> <span class="pl-c1">40</span>;

julia<span class="pl-k">&gt;</span> Θ, Φ <span class="pl-k">=</span> <span class="pl-c1">sph_points</span>(lmax<span class="pl-k">+</span><span class="pl-c1">1</span>);</pre></div>
<p>Load <a href="http://makie.juliaplots.org/stable/" rel="nofollow">Makie</a> to create the images:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using CairoMakie

julia&gt; ticks = (xticks=MultiplesTicks(4, π, &quot;π&quot;), yticks=MultiplesTicks(4, π, &quot;π&quot;));
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> CairoMakie

julia<span class="pl-k">&gt;</span> ticks <span class="pl-k">=</span> (xticks<span class="pl-k">=</span><span class="pl-c1">MultiplesTicks</span>(<span class="pl-c1">4</span>, π, <span class="pl-s"><span class="pl-pds">"</span>π<span class="pl-pds">"</span></span>), yticks<span class="pl-k">=</span><span class="pl-c1">MultiplesTicks</span>(<span class="pl-c1">4</span>, π, <span class="pl-s"><span class="pl-pds">"</span>π<span class="pl-pds">"</span></span>));</pre></div>
<p>Create images of some modes:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; for l in 4:4, m in 0:l
           C = zeros(lmax+1, 2lmax+1)
           C[sph_mode(l,m)] = 1
           F = sph_evaluate(C)

           scene, layout = layoutscene(; resolution=(400, 200))
           axis = layout[1, 1] = Axis(scene; xticks=MultiplesTicks(4, π, &quot;π&quot;), yticks=MultiplesTicks(4, π, &quot;π&quot;))
           heatmap!(axis, Φ, Θ, F')
           scale!(scene, 1, 1)
           save(&quot;mode$l$m.png&quot;, scene)
       end
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> l <span class="pl-k">in</span> <span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">4</span>, m <span class="pl-k">in</span> <span class="pl-c1">0</span><span class="pl-k">:</span>l
           C <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(lmax<span class="pl-k">+</span><span class="pl-c1">1</span>, <span class="pl-c1">2</span>lmax<span class="pl-k">+</span><span class="pl-c1">1</span>)
           C[<span class="pl-c1">sph_mode</span>(l,m)] <span class="pl-k">=</span> <span class="pl-c1">1</span>
           F <span class="pl-k">=</span> <span class="pl-c1">sph_evaluate</span>(C)

           scene, layout <span class="pl-k">=</span> <span class="pl-c1">layoutscene</span>(; resolution<span class="pl-k">=</span>(<span class="pl-c1">400</span>, <span class="pl-c1">200</span>))
           axis <span class="pl-k">=</span> layout[<span class="pl-c1">1</span>, <span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">Axis</span>(scene; xticks<span class="pl-k">=</span><span class="pl-c1">MultiplesTicks</span>(<span class="pl-c1">4</span>, π, <span class="pl-s"><span class="pl-pds">"</span>π<span class="pl-pds">"</span></span>), yticks<span class="pl-k">=</span><span class="pl-c1">MultiplesTicks</span>(<span class="pl-c1">4</span>, π, <span class="pl-s"><span class="pl-pds">"</span>π<span class="pl-pds">"</span></span>))
           <span class="pl-c1">heatmap!</span>(axis, Φ, Θ, F<span class="pl-k">'</span>)
           <span class="pl-c1">scale!</span>(scene, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>)
           <span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>mode<span class="pl-v">$l$m</span>.png<span class="pl-pds">"</span></span>, scene)
       <span class="pl-k">end</span></pre></div>
<p>The <code>l=0</code>, <code>m≥0</code> modes of the spherical harmonics look like this:</p>
<ul>
<li><code>l=0</code>, <code>m=0</code>: <a target="_blank" rel="noopener noreferrer" href="https://github.com/eschnett/FastSphericalHarmonics.jl/blob/main/figures/mode40.png"><img src="https://github.com/eschnett/FastSphericalHarmonics.jl/raw/main/figures/mode40.png" alt="l=4, m=0 mode" style="max-width:100%;"></a></li>
<li><code>l=0</code>, <code>m=1</code>: <a target="_blank" rel="noopener noreferrer" href="https://github.com/eschnett/FastSphericalHarmonics.jl/blob/main/figures/mode41.png"><img src="https://github.com/eschnett/FastSphericalHarmonics.jl/raw/main/figures/mode41.png" alt="l=4, m=1 mode" style="max-width:100%;"></a></li>
<li><code>l=0</code>, <code>m=2</code>: <a target="_blank" rel="noopener noreferrer" href="https://github.com/eschnett/FastSphericalHarmonics.jl/blob/main/figures/mode42.png"><img src="https://github.com/eschnett/FastSphericalHarmonics.jl/raw/main/figures/mode42.png" alt="l=4, m=2 mode" style="max-width:100%;"></a></li>
<li><code>l=0</code>, <code>m=3</code>: <a target="_blank" rel="noopener noreferrer" href="https://github.com/eschnett/FastSphericalHarmonics.jl/blob/main/figures/mode43.png"><img src="https://github.com/eschnett/FastSphericalHarmonics.jl/raw/main/figures/mode43.png" alt="l=4, m=3 mode" style="max-width:100%;"></a></li>
<li><code>l=0</code>, <code>m=4</code>: <a target="_blank" rel="noopener noreferrer" href="https://github.com/eschnett/FastSphericalHarmonics.jl/blob/main/figures/mode44.png"><img src="https://github.com/eschnett/FastSphericalHarmonics.jl/raw/main/figures/mode44.png" alt="l=4, m=4 mode" style="max-width:100%;"></a></li>
</ul>
<h3><a id="user-content-example-3-laplacian-of-spherical-harmonics" class="anchor" aria-hidden="true" href="#example-3-laplacian-of-spherical-harmonics"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example 3: Laplacian of Spherical Harmonics</h3>
<p>We use both scalar and spin-weighted spherical harmonics to calculate
derivatives. Spin-weighted spherical harmonics with spin-weight 0 are
the same as scalar spherical harmonics, except with a different
normalization.</p>
<p>Some preliminaries:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using FastSphericalHarmonics

julia&gt; chop(x) = abs2(x) &lt; 100eps(x) ? zero(x) : x;

julia&gt; chop(x::Complex) = Complex(chop(real(x)), chop(imag(x)));
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FastSphericalHarmonics

julia<span class="pl-k">&gt;</span> <span class="pl-en">chop</span>(x) <span class="pl-k">=</span> <span class="pl-c1">abs2</span>(x) <span class="pl-k">&lt;</span> <span class="pl-c1">100</span><span class="pl-c1">eps</span>(x) <span class="pl-k">?</span> <span class="pl-c1">zero</span>(x) <span class="pl-k">:</span> x;

julia<span class="pl-k">&gt;</span> <span class="pl-en">chop</span>(x<span class="pl-k">::</span><span class="pl-c1">Complex</span>) <span class="pl-k">=</span> <span class="pl-c1">Complex</span>(<span class="pl-c1">chop</span>(<span class="pl-c1">real</span>(x)), <span class="pl-c1">chop</span>(<span class="pl-c1">imag</span>(x)));</pre></div>
<p>Choose a function (here <code>z + 2x</code> with <code>z = cos θ</code> and <code>x = sin θ cos ϕ</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; lmax = 4;

julia&gt; Θ, Φ = sph_points(lmax+1);

julia&gt; F = [cos(θ) + sin(θ)*cos(ϕ) for θ in Θ, ϕ in Φ]
5×9 Matrix{Float64}:
  1.26007    1.18778     1.00472   …   0.796548   1.00472    1.18778
  1.3968     1.20753     0.72827       0.183277   0.72827    1.20753
  1.0        0.766044    0.173648     -0.5        0.173648   0.766044
  0.221232   0.0319577  -0.447301     -0.992294  -0.447301   0.0319577
 -0.64204   -0.714336   -0.897396     -1.10557   -0.897396  -0.714336
"><pre>julia<span class="pl-k">&gt;</span> lmax <span class="pl-k">=</span> <span class="pl-c1">4</span>;

julia<span class="pl-k">&gt;</span> Θ, Φ <span class="pl-k">=</span> <span class="pl-c1">sph_points</span>(lmax<span class="pl-k">+</span><span class="pl-c1">1</span>);

julia<span class="pl-k">&gt;</span> F <span class="pl-k">=</span> [<span class="pl-c1">cos</span>(θ) <span class="pl-k">+</span> <span class="pl-c1">sin</span>(θ)<span class="pl-k">*</span><span class="pl-c1">cos</span>(ϕ) <span class="pl-k">for</span> θ <span class="pl-k">in</span> Θ, ϕ <span class="pl-k">in</span> Φ]
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Float64}<span class="pl-k">:</span>
  <span class="pl-c1">1.26007</span>    <span class="pl-c1">1.18778</span>     <span class="pl-c1">1.00472</span>   …   <span class="pl-c1">0.796548</span>   <span class="pl-c1">1.00472</span>    <span class="pl-c1">1.18778</span>
  <span class="pl-c1">1.3968</span>     <span class="pl-c1">1.20753</span>     <span class="pl-c1">0.72827</span>       <span class="pl-c1">0.183277</span>   <span class="pl-c1">0.72827</span>    <span class="pl-c1">1.20753</span>
  <span class="pl-c1">1.0</span>        <span class="pl-c1">0.766044</span>    <span class="pl-c1">0.173648</span>     <span class="pl-k">-</span><span class="pl-c1">0.5</span>        <span class="pl-c1">0.173648</span>   <span class="pl-c1">0.766044</span>
  <span class="pl-c1">0.221232</span>   <span class="pl-c1">0.0319577</span>  <span class="pl-k">-</span><span class="pl-c1">0.447301</span>     <span class="pl-k">-</span><span class="pl-c1">0.992294</span>  <span class="pl-k">-</span><span class="pl-c1">0.447301</span>   <span class="pl-c1">0.0319577</span>
 <span class="pl-k">-</span><span class="pl-c1">0.64204</span>   <span class="pl-k">-</span><span class="pl-c1">0.714336</span>   <span class="pl-k">-</span><span class="pl-c1">0.897396</span>     <span class="pl-k">-</span><span class="pl-c1">1.10557</span>   <span class="pl-k">-</span><span class="pl-c1">0.897396</span>  <span class="pl-k">-</span><span class="pl-c1">0.714336</span></pre></div>
<p>We transform to scalar spherical harmonics, calculate the Laplacian
(which is efficient in spectral space), and convert back to point
values:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; C = sph_transform(F); chop.(C)
5×9 Matrix{Float64}:
 0.0      0.0  2.04665  0.0  0.0  0.0  0.0  0.0  0.0
 2.04665  0.0  0.0      0.0  0.0  0.0  0.0  0.0  0.0
 0.0      0.0  0.0      0.0  0.0  0.0  0.0  0.0  0.0
 0.0      0.0  0.0      0.0  0.0  0.0  0.0  0.0  0.0
 0.0      0.0  0.0      0.0  0.0  0.0  0.0  0.0  0.0

julia&gt; ΔC = sph_laplace(C); chop.(ΔC)
5×9 Matrix{Float64}:
  0.0      0.0  -4.09331  0.0  0.0  0.0  0.0  0.0  0.0
 -4.09331  0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0
  0.0      0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0
  0.0      0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0
  0.0      0.0   0.0      0.0  0.0  0.0  0.0  0.0  0.0

julia&gt; ΔF = sph_evaluate(ΔC)
5×9 Matrix{Float64}:
 -2.52015   -2.37555    -2.00943   …  -1.5931    -2.00943   -2.37555
 -2.7936    -2.41506    -1.45654      -0.366554  -1.45654   -2.41506
 -2.0       -1.53209    -0.347296      1.0       -0.347296  -1.53209
 -0.442463  -0.0639154   0.894602      1.98459    0.894602  -0.0639154
  1.28408    1.42867     1.79479       2.21113    1.79479    1.42867
"><pre>julia<span class="pl-k">&gt;</span> C <span class="pl-k">=</span> <span class="pl-c1">sph_transform</span>(F); <span class="pl-c1">chop</span>.(C)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Float64}<span class="pl-k">:</span>
 <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>  <span class="pl-c1">2.04665</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>
 <span class="pl-c1">2.04665</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>
 <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>
 <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>
 <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> ΔC <span class="pl-k">=</span> <span class="pl-c1">sph_laplace</span>(C); <span class="pl-c1">chop</span>.(ΔC)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Float64}<span class="pl-k">:</span>
  <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>  <span class="pl-k">-</span><span class="pl-c1">4.09331</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>
 <span class="pl-k">-</span><span class="pl-c1">4.09331</span>  <span class="pl-c1">0.0</span>   <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>
  <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>   <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>
  <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>   <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>
  <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>   <span class="pl-c1">0.0</span>      <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> ΔF <span class="pl-k">=</span> <span class="pl-c1">sph_evaluate</span>(ΔC)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Float64}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">2.52015</span>   <span class="pl-k">-</span><span class="pl-c1">2.37555</span>    <span class="pl-k">-</span><span class="pl-c1">2.00943</span>   …  <span class="pl-k">-</span><span class="pl-c1">1.5931</span>    <span class="pl-k">-</span><span class="pl-c1">2.00943</span>   <span class="pl-k">-</span><span class="pl-c1">2.37555</span>
 <span class="pl-k">-</span><span class="pl-c1">2.7936</span>    <span class="pl-k">-</span><span class="pl-c1">2.41506</span>    <span class="pl-k">-</span><span class="pl-c1">1.45654</span>      <span class="pl-k">-</span><span class="pl-c1">0.366554</span>  <span class="pl-k">-</span><span class="pl-c1">1.45654</span>   <span class="pl-k">-</span><span class="pl-c1">2.41506</span>
 <span class="pl-k">-</span><span class="pl-c1">2.0</span>       <span class="pl-k">-</span><span class="pl-c1">1.53209</span>    <span class="pl-k">-</span><span class="pl-c1">0.347296</span>      <span class="pl-c1">1.0</span>       <span class="pl-k">-</span><span class="pl-c1">0.347296</span>  <span class="pl-k">-</span><span class="pl-c1">1.53209</span>
 <span class="pl-k">-</span><span class="pl-c1">0.442463</span>  <span class="pl-k">-</span><span class="pl-c1">0.0639154</span>   <span class="pl-c1">0.894602</span>      <span class="pl-c1">1.98459</span>    <span class="pl-c1">0.894602</span>  <span class="pl-k">-</span><span class="pl-c1">0.0639154</span>
  <span class="pl-c1">1.28408</span>    <span class="pl-c1">1.42867</span>     <span class="pl-c1">1.79479</span>       <span class="pl-c1">2.21113</span>    <span class="pl-c1">1.79479</span>    <span class="pl-c1">1.42867</span></pre></div>
<p>Since we chose <code>F</code> to consist of two <code>l=1</code> modes, we know its
Laplacian: <code>ΔF = -l(l+1) F</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ΔF ≈ -2F
true
"><pre>julia<span class="pl-k">&gt;</span> ΔF <span class="pl-k">≈</span> <span class="pl-k">-</span><span class="pl-c1">2</span>F
<span class="pl-c1">true</span></pre></div>
<p>Now let's do the same calculation with spin-weighted spherical
harmonics. These are defined for complex functions, so we first
convert the real array to a complex array, and then transform to
spin-weighted spherical harmonics (of spin-weight <code>0</code>).</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; F⁰ = Complex.(F);

julia&gt; C⁰ = spinsph_transform(F⁰, 0); chop.(C⁰)
5×9 Matrix{ComplexF64}:
     0.0+0.0im  1.4472+0.0im  …  0.0+0.0im  0.0+0.0im  0.0+0.0im
 2.04665+0.0im     0.0+0.0im     0.0+0.0im  0.0+0.0im  0.0+0.0im
     0.0+0.0im     0.0+0.0im     0.0+0.0im  0.0+0.0im  0.0+0.0im
     0.0+0.0im     0.0+0.0im     0.0+0.0im  0.0+0.0im  0.0+0.0im
     0.0+0.0im     0.0+0.0im     0.0+0.0im  0.0+0.0im  0.0+0.0im
"><pre>julia<span class="pl-k">&gt;</span> F⁰ <span class="pl-k">=</span> <span class="pl-c1">Complex</span>.(F);

julia<span class="pl-k">&gt;</span> C⁰ <span class="pl-k">=</span> <span class="pl-c1">spinsph_transform</span>(F⁰, <span class="pl-c1">0</span>); <span class="pl-c1">chop</span>.(C⁰)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{ComplexF64}<span class="pl-k">:</span>
     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">1.4472</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  …  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
 <span class="pl-c1">2.04665</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span></pre></div>
<p>Due to the way in which <code>FastTransforms.jl</code> defines spherical
harmonics, and because we started with a real function <code>F</code>, the
imaginary part of <code>C⁰</code> is actually zero.</p>
<p>We test that evaluating the spin-weighted spherical harmonics gives us
back the original function <code>F</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; spinsph_evaluate(C⁰, 0) ≈ F
true
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">spinsph_evaluate</span>(C⁰, <span class="pl-c1">0</span>) <span class="pl-k">≈</span> F
<span class="pl-c1">true</span></pre></div>
<p>We then apply the ð (<a href="https://en.wikipedia.org/wiki/Eth" rel="nofollow">"eth"</a>)
operator, which is the gradient when applied to a spin-0 function,
yielding a spin-1 function.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ðC¹ = spinsph_eth(C⁰, 0); chop.(ðC¹)
5×9 Matrix{ComplexF64}:
     0.0+0.0im  -2.04665+0.0im  …  0.0+0.0im  0.0+0.0im  0.0+0.0im
 2.89441+0.0im       0.0+0.0im     0.0+0.0im  0.0+0.0im  0.0+0.0im
     0.0+0.0im       0.0+0.0im     0.0+0.0im  0.0+0.0im  0.0+0.0im
     0.0+0.0im       0.0+0.0im     0.0+0.0im  0.0+0.0im  0.0+0.0im
     0.0+0.0im       0.0+0.0im     0.0+0.0im  0.0+0.0im  0.0+0.0im
"><pre>julia<span class="pl-k">&gt;</span> ðC¹ <span class="pl-k">=</span> <span class="pl-c1">spinsph_eth</span>(C⁰, <span class="pl-c1">0</span>); <span class="pl-c1">chop</span>.(ðC¹)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{ComplexF64}<span class="pl-k">:</span>
     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-k">-</span><span class="pl-c1">2.04665</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  …  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
 <span class="pl-c1">2.89441</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>       <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>       <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>       <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>       <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span></pre></div>
<p>We can evaluate this spin-1 function on the points on the sphere and
thus read off the gradient of <code>F</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ðF¹ = spinsph_evaluate(ðC¹, 1);

julia&gt; ∂θF = real(ðF¹)
5×9 Matrix{Float64}:
  0.657164      0.28605    0.0885849  …   1.15716    1.22574     1.02828
  1.06331       0.6922     0.494734       1.56331    1.63189     1.43443
  1.37051e-16  -0.371114  -0.568579       0.5        0.568579    0.371114
 -1.06331      -1.43443   -1.63189       -0.563314  -0.494734   -0.6922
 -0.657164     -1.02828   -1.22574       -0.157164  -0.0885849  -0.28605

julia&gt; cscθ∂ϕF = imag(ðF¹)
5×9 Matrix{Float64}:
  8.66754e-16  0.642788  0.984808  …  -0.866025  -0.984808  -0.642788
 -5.4187e-17   0.642788  0.984808     -0.866025  -0.984808  -0.642788
 -2.88227e-16  0.642788  0.984808     -0.866025  -0.984808  -0.642788
  1.87818e-16  0.642788  0.984808     -0.866025  -0.984808  -0.642788
 -4.87207e-16  0.642788  0.984808     -0.866025  -0.984808  -0.642788
"><pre>julia<span class="pl-k">&gt;</span> ðF¹ <span class="pl-k">=</span> <span class="pl-c1">spinsph_evaluate</span>(ðC¹, <span class="pl-c1">1</span>);

julia<span class="pl-k">&gt;</span> ∂θF <span class="pl-k">=</span> <span class="pl-c1">real</span>(ðF¹)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Float64}<span class="pl-k">:</span>
  <span class="pl-c1">0.657164</span>      <span class="pl-c1">0.28605</span>    <span class="pl-c1">0.0885849</span>  …   <span class="pl-c1">1.15716</span>    <span class="pl-c1">1.22574</span>     <span class="pl-c1">1.02828</span>
  <span class="pl-c1">1.06331</span>       <span class="pl-c1">0.6922</span>     <span class="pl-c1">0.494734</span>       <span class="pl-c1">1.56331</span>    <span class="pl-c1">1.63189</span>     <span class="pl-c1">1.43443</span>
  <span class="pl-c1">1.37051e-16</span>  <span class="pl-k">-</span><span class="pl-c1">0.371114</span>  <span class="pl-k">-</span><span class="pl-c1">0.568579</span>       <span class="pl-c1">0.5</span>        <span class="pl-c1">0.568579</span>    <span class="pl-c1">0.371114</span>
 <span class="pl-k">-</span><span class="pl-c1">1.06331</span>      <span class="pl-k">-</span><span class="pl-c1">1.43443</span>   <span class="pl-k">-</span><span class="pl-c1">1.63189</span>       <span class="pl-k">-</span><span class="pl-c1">0.563314</span>  <span class="pl-k">-</span><span class="pl-c1">0.494734</span>   <span class="pl-k">-</span><span class="pl-c1">0.6922</span>
 <span class="pl-k">-</span><span class="pl-c1">0.657164</span>     <span class="pl-k">-</span><span class="pl-c1">1.02828</span>   <span class="pl-k">-</span><span class="pl-c1">1.22574</span>       <span class="pl-k">-</span><span class="pl-c1">0.157164</span>  <span class="pl-k">-</span><span class="pl-c1">0.0885849</span>  <span class="pl-k">-</span><span class="pl-c1">0.28605</span>

julia<span class="pl-k">&gt;</span> cscθ∂ϕF <span class="pl-k">=</span> <span class="pl-c1">imag</span>(ðF¹)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{Float64}<span class="pl-k">:</span>
  <span class="pl-c1">8.66754e-16</span>  <span class="pl-c1">0.642788</span>  <span class="pl-c1">0.984808</span>  …  <span class="pl-k">-</span><span class="pl-c1">0.866025</span>  <span class="pl-k">-</span><span class="pl-c1">0.984808</span>  <span class="pl-k">-</span><span class="pl-c1">0.642788</span>
 <span class="pl-k">-</span><span class="pl-c1">5.4187e-17</span>   <span class="pl-c1">0.642788</span>  <span class="pl-c1">0.984808</span>     <span class="pl-k">-</span><span class="pl-c1">0.866025</span>  <span class="pl-k">-</span><span class="pl-c1">0.984808</span>  <span class="pl-k">-</span><span class="pl-c1">0.642788</span>
 <span class="pl-k">-</span><span class="pl-c1">2.88227e-16</span>  <span class="pl-c1">0.642788</span>  <span class="pl-c1">0.984808</span>     <span class="pl-k">-</span><span class="pl-c1">0.866025</span>  <span class="pl-k">-</span><span class="pl-c1">0.984808</span>  <span class="pl-k">-</span><span class="pl-c1">0.642788</span>
  <span class="pl-c1">1.87818e-16</span>  <span class="pl-c1">0.642788</span>  <span class="pl-c1">0.984808</span>     <span class="pl-k">-</span><span class="pl-c1">0.866025</span>  <span class="pl-k">-</span><span class="pl-c1">0.984808</span>  <span class="pl-k">-</span><span class="pl-c1">0.642788</span>
 <span class="pl-k">-</span><span class="pl-c1">4.87207e-16</span>  <span class="pl-c1">0.642788</span>  <span class="pl-c1">0.984808</span>     <span class="pl-k">-</span><span class="pl-c1">0.866025</span>  <span class="pl-k">-</span><span class="pl-c1">0.984808</span>  <span class="pl-k">-</span><span class="pl-c1">0.642788</span></pre></div>
<p>We thus have <code>julia&gt; ∇F = (∂θF, sin(θ) * cscθ∂ϕF)</code>. However, since
<code>sin(θ)</code> has a coordinate singularity at the pole, it's best not to
actually perform this multiplication.</p>
<p>Next we apply the ð̄ ("eth-bar") operator, which is the divergence when
applied to a spin-1 function, yielding a spin-0 function again, which
we evaluate on the grid points.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ð̄ðC⁰ = spinsph_ethbar(ðC¹, 1); chop.(ð̄ðC⁰)
5×9 Matrix{ComplexF64}:
      0.0+0.0im  -2.89441+0.0im  …  0.0+0.0im  0.0+0.0im  0.0+0.0im
 -4.09331+0.0im       0.0+0.0im     0.0+0.0im  0.0+0.0im  0.0+0.0im
      0.0+0.0im       0.0+0.0im     0.0+0.0im  0.0+0.0im  0.0+0.0im
      0.0+0.0im       0.0+0.0im     0.0+0.0im  0.0+0.0im  0.0+0.0im
      0.0+0.0im       0.0+0.0im     0.0+0.0im  0.0+0.0im  0.0+0.0im

julia&gt; ð̄ðF⁰ = spinsph_evaluate(ð̄ðC⁰, 0); chop.(ð̄ðF⁰)
5×9 Matrix{ComplexF64}:
  -2.52015+0.0im    -2.37555+0.0im  …   -2.00943+0.0im    -2.37555+0.0im
   -2.7936+0.0im    -2.41506+0.0im      -1.45654+0.0im    -2.41506+0.0im
      -2.0+0.0im    -1.53209+0.0im     -0.347296+0.0im    -1.53209+0.0im
 -0.442463+0.0im  -0.0639154+0.0im      0.894602+0.0im  -0.0639154+0.0im
   1.28408+0.0im     1.42867+0.0im       1.79479+0.0im     1.42867+0.0im
"><pre>julia<span class="pl-k">&gt;</span> ð̄ðC⁰ <span class="pl-k">=</span> <span class="pl-c1">spinsph_ethbar</span>(ðC¹, <span class="pl-c1">1</span>); <span class="pl-c1">chop</span>.(ð̄ðC⁰)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{ComplexF64}<span class="pl-k">:</span>
      <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-k">-</span><span class="pl-c1">2.89441</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  …  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
 <span class="pl-k">-</span><span class="pl-c1">4.09331</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>       <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
      <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>       <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
      <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>       <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
      <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>       <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>

julia<span class="pl-k">&gt;</span> ð̄ðF⁰ <span class="pl-k">=</span> <span class="pl-c1">spinsph_evaluate</span>(ð̄ðC⁰, <span class="pl-c1">0</span>); <span class="pl-c1">chop</span>.(ð̄ðF⁰)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">9</span> Matrix{ComplexF64}<span class="pl-k">:</span>
  <span class="pl-k">-</span><span class="pl-c1">2.52015</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>    <span class="pl-k">-</span><span class="pl-c1">2.37555</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  …   <span class="pl-k">-</span><span class="pl-c1">2.00943</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>    <span class="pl-k">-</span><span class="pl-c1">2.37555</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
   <span class="pl-k">-</span><span class="pl-c1">2.7936</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>    <span class="pl-k">-</span><span class="pl-c1">2.41506</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>      <span class="pl-k">-</span><span class="pl-c1">1.45654</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>    <span class="pl-k">-</span><span class="pl-c1">2.41506</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
      <span class="pl-k">-</span><span class="pl-c1">2.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>    <span class="pl-k">-</span><span class="pl-c1">1.53209</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-k">-</span><span class="pl-c1">0.347296</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>    <span class="pl-k">-</span><span class="pl-c1">1.53209</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
 <span class="pl-k">-</span><span class="pl-c1">0.442463</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-k">-</span><span class="pl-c1">0.0639154</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>      <span class="pl-c1">0.894602</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>  <span class="pl-k">-</span><span class="pl-c1">0.0639154</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
   <span class="pl-c1">1.28408</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">1.42867</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>       <span class="pl-c1">1.79479</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>     <span class="pl-c1">1.42867</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span></pre></div>
<p>This function <code>ð̄ðF⁰</code> is the Laplacian of our original function <code>F</code>
above. It is complex, but since we started with a real function <code>F</code>,
<code>ð̄ðF⁰</code> has a zero imaginay part (up to round-off):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; maximum(abs.(imag.(ð̄ðF⁰)))
1.1102230246251565e-16
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">maximum</span>(<span class="pl-c1">abs</span>.(<span class="pl-c1">imag</span>.(ð̄ðF⁰)))
<span class="pl-c1">1.1102230246251565e-16</span></pre></div>
<p>Of course, both ways of evaluating the Laplacian give the same result:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; real.(ð̄ðF⁰) ≈ ΔF
true
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">real</span>.(ð̄ðF⁰) <span class="pl-k">≈</span> ΔF
<span class="pl-c1">true</span></pre></div>
<p>We can also apply the ð̄ operator first, and then the ð operator:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ð̄C⁻¹ = spinsph_ethbar(C⁰, 0);

julia&gt; ðð̄C⁰ = spinsph_eth(ð̄C⁻¹, -1);

julia&gt; ðð̄F⁰ = spinsph_evaluate(ðð̄C⁰, 0);

julia&gt; ðð̄F⁰ ≈ ΔF
true
"><pre>julia<span class="pl-k">&gt;</span> ð̄C⁻¹ <span class="pl-k">=</span> <span class="pl-c1">spinsph_ethbar</span>(C⁰, <span class="pl-c1">0</span>);

julia<span class="pl-k">&gt;</span> ðð̄C⁰ <span class="pl-k">=</span> <span class="pl-c1">spinsph_eth</span>(ð̄C⁻¹, <span class="pl-k">-</span><span class="pl-c1">1</span>);

julia<span class="pl-k">&gt;</span> ðð̄F⁰ <span class="pl-k">=</span> <span class="pl-c1">spinsph_evaluate</span>(ðð̄C⁰, <span class="pl-c1">0</span>);

julia<span class="pl-k">&gt;</span> ðð̄F⁰ <span class="pl-k">≈</span> ΔF
<span class="pl-c1">true</span></pre></div>
</article></div>