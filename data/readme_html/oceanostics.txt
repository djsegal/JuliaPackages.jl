<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-oceanostics" class="anchor" aria-hidden="true" href="#oceanostics"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Oceanostics</h1>
<p dir="auto">Useful diagnostics to use with <a href="https://github.com/CliMA/Oceananigans.jl">Oceananigans</a>. Mostly <code>AbstractOperations</code>s and a few useful progress messengers.</p>
<p dir="auto">To install the latest registered tagged version from Julia:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]
(@v1.8) pkg&gt; add Oceanostics"><pre>julia<span class="pl-k">&gt;</span> ]
(<span class="pl-c1">@v1</span>.<span class="pl-c1">8</span>) pkg<span class="pl-k">&gt;</span> add Oceanostics</pre></div>
<p dir="auto">If you want the latest developments (which may or may not be unstable) you can add the latest version from github in the <code>main</code> branch:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg

julia&gt; Pkg.add(url=&quot;https://github.com/tomchor/Oceanostics.jl.git&quot;, rev=&quot;main&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg

julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/tomchor/Oceanostics.jl.git<span class="pl-pds">"</span></span>, rev<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>main<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The keyword <code>rev</code> let's you pick which github branch you want.</p>
<h2 dir="auto"><a id="user-content-simple-example" class="anchor" aria-hidden="true" href="#simple-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Simple example</h2>
<p dir="auto">The example below is a simple illustration of how to use a few of Oceanostics features:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Oceananigans
using Oceanostics

grid = RectilinearGrid(size=(4, 5, 6), extent=(1, 1, 1))
model = NonhydrostaticModel(grid=grid, closure=SmagorinskyLilly())
simulation = Simulation(model, Δt=1, stop_time=20)
simulation.callbacks[:progress] = Callback(TimedProgressMessenger(LES=false), IterationInterval(5))

ke = Field(KineticEnergy(model))
ε = Field(KineticEnergyDissipationRate(model))
simulation.output_writers[:netcdf_writer] = NetCDFOutputWriter(model, (; ke, ε), filename=&quot;out.nc&quot;, schedule=TimeInterval(2))
run!(simulation)"><pre><span class="pl-k">using</span> Oceananigans
<span class="pl-k">using</span> Oceanostics

grid <span class="pl-k">=</span> <span class="pl-c1">RectilinearGrid</span>(size<span class="pl-k">=</span>(<span class="pl-c1">4</span>, <span class="pl-c1">5</span>, <span class="pl-c1">6</span>), extent<span class="pl-k">=</span>(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>))
model <span class="pl-k">=</span> <span class="pl-c1">NonhydrostaticModel</span>(grid<span class="pl-k">=</span>grid, closure<span class="pl-k">=</span><span class="pl-c1">SmagorinskyLilly</span>())
simulation <span class="pl-k">=</span> <span class="pl-c1">Simulation</span>(model, Δt<span class="pl-k">=</span><span class="pl-c1">1</span>, stop_time<span class="pl-k">=</span><span class="pl-c1">20</span>)
simulation<span class="pl-k">.</span>callbacks[<span class="pl-c1">:progress</span>] <span class="pl-k">=</span> <span class="pl-c1">Callback</span>(<span class="pl-c1">TimedProgressMessenger</span>(LES<span class="pl-k">=</span><span class="pl-c1">false</span>), <span class="pl-c1">IterationInterval</span>(<span class="pl-c1">5</span>))

ke <span class="pl-k">=</span> <span class="pl-c1">Field</span>(<span class="pl-c1">KineticEnergy</span>(model))
ε <span class="pl-k">=</span> <span class="pl-c1">Field</span>(<span class="pl-c1">KineticEnergyDissipationRate</span>(model))
simulation<span class="pl-k">.</span>output_writers[<span class="pl-c1">:netcdf_writer</span>] <span class="pl-k">=</span> <span class="pl-c1">NetCDFOutputWriter</span>(model, (; ke, ε), filename<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>out.nc<span class="pl-pds">"</span></span>, schedule<span class="pl-k">=</span><span class="pl-c1">TimeInterval</span>(<span class="pl-c1">2</span>))
<span class="pl-c1">run!</span>(simulation)</pre></div>
<p dir="auto">(Note that <code>(; tke, ε)</code> is a shorthand for <code>(tke=tke, ε=ε)</code>.)</p>
<h2 dir="auto"><a id="user-content-caveats" class="anchor" aria-hidden="true" href="#caveats"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Caveats</h2>
<ul dir="auto">
<li>Not every diagnostic has been thoroughly tested (we're still working on testing everything with CI).</li>
<li>Most diagnostics are written very generally since most uses of averages, etc. Do not assume any
specific kind of averaging procedure. Chances are it "wastes" computations for a given specific application.</li>
</ul>

</article></div>