<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-imageshow" class="anchor" aria-hidden="true" href="#imageshow"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ImageShow</h1>
<p dir="auto"><a href="https://travis-ci.org/JuliaImages/ImageShow.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/785aab48af67a6e5b7514bd7cfb687b501aad6c220434d1f62212c200b7a0f48/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961496d616765732f496d61676553686f772e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.org/JuliaImages/ImageShow.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/d848a3ee831fdff7fcabcd7188c306ed52f1ab56d5d3e921dcbd1e4df1380421/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f492f496d61676553686f772e737667" alt="" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/I/ImageShow.svg" style="max-width: 100%;"></a>
<a href="https://codecov.io/github/JuliaImages/ImageShow.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/b8e244f6205f76af9da99d8131f3864d5b9e3e59daa1644446f1b9bffc89900a/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c6961496d616765732f496d61676553686f772e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://codecov.io/github/JuliaImages/ImageShow.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">This small package implements image <code>show</code> methods suitable for
graphical platforms such as <a href="https://github.com/JuliaLang/IJulia.jl">IJulia</a>,
<a href="https://github.com/julia-vscode/julia-vscode">VS Code</a> and <a href="https://junolab.org/" rel="nofollow">Juno</a>.
It is intended to provide convenient
inline presentation of greyscale or color images.</p>
<p dir="auto">Things that users of <code>ImageShow</code> need to know:</p>
<ul dir="auto">
<li>Without <code>ImageShow</code>, 2d image <code>AbstractMatrix{&lt;:Colorant}</code> will be encoded and displayed as a SVG image, which is not performant
for generic image.</li>
<li>Once you load this package, 2d image will be encoded and displayed as a PNG image. To encode the
data as PNG image, either <code>ImageIO</code> or <code>ImageMagick</code> should be installed.</li>
<li><code>using Images</code> automatically loads <code>ImageShow</code> for you.</li>
</ul>
<h2 dir="auto"><a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Functions</h2>
<p dir="auto">This package provides three non-exported functions <code>play</code>/<code>explore</code> and <code>gif</code> to interpret your 3D
image or 2d images as either a video sequence or a gif.</p>
<ul dir="auto">
<li>(Experimental) <code>play</code>/<code>explore</code> are interactive tools; it show images frame by frame as video sequence.</li>
<li><code>gif</code> is non-interactive; it encodes the image as gif.</li>
<li><code>simshow</code> is a simple image viewer to display arrays/images within Pluto or Jupyter. Works with complex numbers too. See <code>?simshow</code> for more.</li>
</ul>
<p dir="auto">Feel free to replace <code>gif</code> with <code>play</code>/<code>explore</code> and see how it works:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ImageShow, TestImages, ImageTransformations

# 3d image
img3d = testimage(&quot;mri-stack&quot;) |&gt; collect
ImageShow.gif(img3d)

# 2d images
toucan = testimage(&quot;toucan&quot;) # 150×162 RGBA image
moon = testimage(&quot;moon&quot;) # 256×256 Gray image
framestack = [toucan, moon];
ImageShow.gif(framestack)

# a do-function version
img = testimage(&quot;cameraman&quot;)
ImageShow.gif(-π/4:π/64:π/4; fps=10) do θ
    imrotate(img, θ, axes(img))
end"><pre><span class="pl-k">using</span> ImageShow, TestImages, ImageTransformations

<span class="pl-c"><span class="pl-c">#</span> 3d image</span>
img3d <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>mri-stack<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> collect
ImageShow<span class="pl-k">.</span><span class="pl-c1">gif</span>(img3d)

<span class="pl-c"><span class="pl-c">#</span> 2d images</span>
toucan <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>toucan<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> 150×162 RGBA image</span>
moon <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>moon<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> 256×256 Gray image</span>
framestack <span class="pl-k">=</span> [toucan, moon];
ImageShow<span class="pl-k">.</span><span class="pl-c1">gif</span>(framestack)

<span class="pl-c"><span class="pl-c">#</span> a do-function version</span>
img <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>cameraman<span class="pl-pds">"</span></span>)
ImageShow<span class="pl-k">.</span><span class="pl-c1">gif</span>(<span class="pl-k">-</span>π<span class="pl-k">/</span><span class="pl-c1">4</span><span class="pl-k">:</span>π<span class="pl-k">/</span><span class="pl-c1">64</span><span class="pl-k">:</span>π<span class="pl-k">/</span><span class="pl-c1">4</span>; fps<span class="pl-k">=</span><span class="pl-c1">10</span>) <span class="pl-k">do</span> θ
    <span class="pl-c1">imrotate</span>(img, θ, <span class="pl-c1">axes</span>(img))
<span class="pl-k">end</span></pre></div>
<p dir="auto">See also <code>mosaic</code>, provided by <code>MosaicViews</code>/<code>ImageCore</code>, for a 2d alternative of <code>gif</code>.</p>
<h1 dir="auto"><a id="user-content-acknowledgement" class="anchor" aria-hidden="true" href="#acknowledgement"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgement</h1>
<p dir="auto">The functionality of ImageShow has historically been included in the
Images umbrella package.</p>

</article></div>