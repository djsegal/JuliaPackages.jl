<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-nlsolversbasejl" class="anchor" aria-hidden="true" href="#nlsolversbasejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>NLSolversBase.jl</h1>
<p>Base functionality for optimization and solving systems of equations in Julia.</p>
<p>NLSolversBase.jl is the core, common dependency of several packages in the <a href="https://github.com/JuliaNLSolvers/">JuliaNLSolvers</a> family.</p>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://travis-ci.org/JuliaNLSolvers/NLSolversBase.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d5bfd366ebc2bc09a6badac5dd0c1bf5a7459d0c/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614e4c536f6c766572732f4e4c536f6c76657273426173652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaNLSolvers/NLSolversBase.jl.svg?branch=master" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="center"><a href="http://codecov.io/github/JuliaNLSolvers/NLSolversBase.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/e2a05f6616506082a13bcf6b2183c542df63eacd/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614e4c536f6c766572732f4e4c536f6c76657273426173652e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Codecov branch" data-canonical-src="http://codecov.io/github/JuliaNLSolvers/NLSolversBase.jl/coverage.svg?branch=master" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="center"><a href="https://coveralls.io/github/JuliaNLSolvers/NLSolversBase.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a05733abe36c4e8a5b89a747c529d1fad2e90d71/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c69614e4c536f6c766572732f4e4c536f6c76657273426173652e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaNLSolvers/NLSolversBase.jl/badge.svg?branch=master" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h1><a id="user-content-purpose" class="anchor" aria-hidden="true" href="#purpose"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Purpose</h1>
<p>The package aims at establishing common ground for <a href="https://github.com/JuliaNLSolvers/Optim.jl">Optim.jl</a>, <a href="https://github.com/JuliaNLSolvers/LineSearches.jl">LineSearches.jl</a>, and <a href="https://github.com/JuliaNLSolvers/NLsolve.jl">NLsolve.jl</a>. The common ground is mainly the types used to hold objective related callables, information about the objectives, and an interface to interact with these types.</p>
<h2><a id="user-content-ndifferentiable" class="anchor" aria-hidden="true" href="#ndifferentiable"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>NDifferentiable</h2>
<p>There are currently three main types: <code>NonDifferentiable</code>, <code>OnceDifferentiable</code>, and <code>TwiceDifferentiable</code>. There's also a more experimental <code>TwiceDifferentiableHV</code> for optimization algorithms that use Hessian-vector products. An <code>NDifferentiable</code> instance can be used to hold relevant functions for</p>
<ul>
<li>Optimization: <a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8431156/33996090-6224581c-e0e0-11e7-8737-5dd659745dcb.gif"><img src="https://user-images.githubusercontent.com/8431156/33996090-6224581c-e0e0-11e7-8737-5dd659745dcb.gif" alt="Objective for optimization" style="max-width:100%;"></a></li>
<li>Solving systems of equations: <a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8431156/33996088-60760c4a-e0e0-11e7-96ca-470f2731f1c7.gif"><img src="https://user-images.githubusercontent.com/8431156/33996088-60760c4a-e0e0-11e7-96ca-470f2731f1c7.gif" alt="Objective for systems of equations" style="max-width:100%;"></a></li>
</ul>
<p>The words in front of <code>Differentiable</code> in the type names (<code>Non</code>, <code>Once</code>, <code>Twice</code>) are not meant to indicate a specific classification of the function as such (a <code>OnceDifferentiable</code> might be constructed for an infinitely differentiable function), but signals to an algorithm if the correct functions have been constructed or if automatic differentiation should be used to further differentiate the function.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<h4><a id="user-content-optimization" class="anchor" aria-hidden="true" href="#optimization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Optimization</h4>
<p>Say we want to minimize the Hosaki test function</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8431156/33995927-c5b9f950-e0df-11e7-8760-9ba792c2b331.gif"><img src="https://user-images.githubusercontent.com/8431156/33995927-c5b9f950-e0df-11e7-8760-9ba792c2b331.gif" alt="Himmelblau test function" style="max-width:100%;"></a></p>
<p>The relevant functions are coded in Julia as</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> <span class="pl-en">f</span>(x)
    a <span class="pl-k">=</span> (<span class="pl-c1">1.0</span> <span class="pl-k">-</span> <span class="pl-c1">8.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> (<span class="pl-c1">7.0</span> <span class="pl-k">/</span> <span class="pl-c1">3.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> (<span class="pl-c1">1.0</span> <span class="pl-k">/</span> <span class="pl-c1">4.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">4</span>)
    <span class="pl-k">return</span> a <span class="pl-k">*</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">g!</span>(G, x)
    G[<span class="pl-c1">1</span>] <span class="pl-k">=</span> (x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">14.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">8</span>)<span class="pl-k">*</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])
    G[<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">2.0</span> <span class="pl-k">*</span> (<span class="pl-c1">1.0</span> <span class="pl-k">-</span> <span class="pl-c1">8.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> (<span class="pl-c1">7.0</span> <span class="pl-k">/</span> <span class="pl-c1">3.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> (<span class="pl-c1">1.0</span> <span class="pl-k">/</span> <span class="pl-c1">4.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">4</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>] <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>]) <span class="pl-k">-</span> (<span class="pl-c1">1.0</span> <span class="pl-k">-</span> <span class="pl-c1">8.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> (<span class="pl-c1">7.0</span> <span class="pl-k">/</span> <span class="pl-c1">3.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> (<span class="pl-c1">1.0</span> <span class="pl-k">/</span> <span class="pl-c1">4.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">4</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">fg!</span>(G, x)
    <span class="pl-c1">g!</span>(G, x)
    <span class="pl-c1">f</span>(x)
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">h!</span>(H, x)
    H[<span class="pl-c1">1</span>, <span class="pl-c1">1</span>] <span class="pl-k">=</span> (<span class="pl-c1">3.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">14.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">14.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])
    H[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">2.0</span> <span class="pl-k">*</span> (x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">14.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">8.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>] <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])  <span class="pl-k">-</span> (x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">14.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">8.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])
    H[<span class="pl-c1">2</span>, <span class="pl-c1">1</span>] <span class="pl-k">=</span>  <span class="pl-c1">2.0</span> <span class="pl-k">*</span> (x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">14.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">8.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>] <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])  <span class="pl-k">-</span> (x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">14.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">8.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])
    H[<span class="pl-c1">2</span>, <span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">2.0</span> <span class="pl-k">*</span> (<span class="pl-c1">1.0</span> <span class="pl-k">-</span> <span class="pl-c1">8.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> (<span class="pl-c1">7.0</span> <span class="pl-k">/</span> <span class="pl-c1">3.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> (<span class="pl-c1">1.0</span> <span class="pl-k">/</span> <span class="pl-c1">4.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">4</span>) <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>]) <span class="pl-k">-</span> <span class="pl-c1">4.0</span> <span class="pl-k">*</span> ( <span class="pl-c1">1.0</span> <span class="pl-k">-</span> <span class="pl-c1">8.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span>  x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> (<span class="pl-c1">7.0</span> <span class="pl-k">/</span> <span class="pl-c1">3.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> (<span class="pl-c1">1.0</span> <span class="pl-k">/</span> <span class="pl-c1">4.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">4</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>] <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>]) <span class="pl-k">+</span> (<span class="pl-c1">1.0</span> <span class="pl-k">-</span> <span class="pl-c1">8.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> (<span class="pl-c1">7.0</span> <span class="pl-k">/</span> <span class="pl-c1">3.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> (<span class="pl-c1">1.0</span> <span class="pl-k">/</span> <span class="pl-c1">4.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">4</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])
<span class="pl-k">end</span></pre></div>
<p>The <code>NDifferentiable</code> interface can be used as shown below to create various objectives:</p>
<div class="highlight highlight-source-julia"><pre>x <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(<span class="pl-c1">2</span>)
nd   <span class="pl-k">=</span> <span class="pl-c1">NonDifferentiable</span>(f, x)
od   <span class="pl-k">=</span> <span class="pl-c1">OnceDifferentiable</span>(f, g!, x)
odfg <span class="pl-k">=</span> <span class="pl-c1">OnceDifferentiable</span>(f, g!, fg!, x)
td1  <span class="pl-k">=</span> <span class="pl-c1">TwiceDifferentiable</span>(f, g!, h!, x)
tdfg <span class="pl-k">=</span> <span class="pl-c1">TwiceDifferentiable</span>(f, g!, fg!, h!, x)</pre></div>
<h4><a id="user-content-multivalued-objective" class="anchor" aria-hidden="true" href="#multivalued-objective"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Multivalued objective</h4>
<p>If we consider the gradient of the Himmelblau function above, we can try to solve <a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8431156/34005673-f7bc5b52-e0fb-11e7-8bd9-86efad17cb95.gif"><img src="https://user-images.githubusercontent.com/8431156/34005673-f7bc5b52-e0fb-11e7-8bd9-86efad17cb95.gif" alt="FOCs" style="max-width:100%;"></a> without caring about the objective value. Then we can still create <code>NDifferentiable</code>s, but we need to specify the cache to hold the value of <a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8431156/34006586-2de39a3a-e0ff-11e7-8453-48aad94c6b5e.gif"><img src="https://user-images.githubusercontent.com/8431156/34006586-2de39a3a-e0ff-11e7-8453-48aad94c6b5e.gif" alt="Multivalued objective" style="max-width:100%;"></a>. Currently, the only relevant ones are <code>NonDifferentiable</code> and <code>OnceDifferentiable</code>. <code>TwiceDifferentiable</code> could be used for higher order (tensor) methods, though they are rarely worth the cost. The relevant functions coded in Julia are:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> <span class="pl-en">f!</span>(F, x)
    F[<span class="pl-c1">1</span>] <span class="pl-k">=</span> (x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">14.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">8</span>)<span class="pl-k">*</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])
    F[<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">2.0</span> <span class="pl-k">*</span> (<span class="pl-c1">1.0</span> <span class="pl-k">-</span> <span class="pl-c1">8.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> (<span class="pl-c1">7.0</span> <span class="pl-k">/</span> <span class="pl-c1">3.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> (<span class="pl-c1">1.0</span> <span class="pl-k">/</span> <span class="pl-c1">4.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">4</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>] <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>]) <span class="pl-k">-</span> (<span class="pl-c1">1.0</span> <span class="pl-k">-</span> <span class="pl-c1">8.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> (<span class="pl-c1">7.0</span> <span class="pl-k">/</span> <span class="pl-c1">3.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> (<span class="pl-c1">1.0</span> <span class="pl-k">/</span> <span class="pl-c1">4.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">4</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">j!</span>(J, x)
    J[<span class="pl-c1">1</span>, <span class="pl-c1">1</span>] <span class="pl-k">=</span> (<span class="pl-c1">3.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">14.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">14.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])
    J[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">2.0</span> <span class="pl-k">*</span> (x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">14.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">8.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>] <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])  <span class="pl-k">-</span> (x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">14.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">8.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])
    J[<span class="pl-c1">2</span>, <span class="pl-c1">1</span>] <span class="pl-k">=</span>  <span class="pl-c1">2.0</span> <span class="pl-k">*</span> (x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">14.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">8.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>] <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])  <span class="pl-k">-</span> (x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">14.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">8.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])
    J[<span class="pl-c1">2</span>, <span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">2.0</span> <span class="pl-k">*</span> (<span class="pl-c1">1.0</span> <span class="pl-k">-</span> <span class="pl-c1">8.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> (<span class="pl-c1">7.0</span> <span class="pl-k">/</span> <span class="pl-c1">3.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> (<span class="pl-c1">1.0</span> <span class="pl-k">/</span> <span class="pl-c1">4.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">4</span>) <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>]) <span class="pl-k">-</span> <span class="pl-c1">4.0</span> <span class="pl-k">*</span> ( <span class="pl-c1">1.0</span> <span class="pl-k">-</span> <span class="pl-c1">8.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span>  x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> (<span class="pl-c1">7.0</span> <span class="pl-k">/</span> <span class="pl-c1">3.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> (<span class="pl-c1">1.0</span> <span class="pl-k">/</span> <span class="pl-c1">4.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">4</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>] <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>]) <span class="pl-k">+</span> (<span class="pl-c1">1.0</span> <span class="pl-k">-</span> <span class="pl-c1">8.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">7.0</span> <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> (<span class="pl-c1">7.0</span> <span class="pl-k">/</span> <span class="pl-c1">3.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> (<span class="pl-c1">1.0</span> <span class="pl-k">/</span> <span class="pl-c1">4.0</span>) <span class="pl-k">*</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">4</span>) <span class="pl-k">*</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>x[<span class="pl-c1">2</span>])
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">fj!</span>(F, G, x)
    <span class="pl-c1">g!</span>(G, x)
    <span class="pl-c1">f!</span>(F, x)
<span class="pl-k">end</span></pre></div>
<p>The <code>NDifferentiable</code> interface can be used as shown below to create various objectives:</p>
<div class="highlight highlight-source-julia"><pre>x <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(<span class="pl-c1">2</span>)
F <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(<span class="pl-c1">2</span>)
nd   <span class="pl-k">=</span> <span class="pl-c1">NonDifferentiable</span>(f!, x, F)
od   <span class="pl-k">=</span> <span class="pl-c1">OnceDifferentiable</span>(f!, j!, x, F)
odfj <span class="pl-k">=</span> <span class="pl-c1">OnceDifferentiable</span>(f!, j!, fj! x, F)</pre></div>
<h2><a id="user-content-interface" class="anchor" aria-hidden="true" href="#interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Interface</h2>
<p>To extract information about the objective, and to update given some input, we provide a function based interface. For all purposes it should be possible to use a function to extract/update information, and no field access should be necessary. Actually, we proactively discourage it, as it makes it much more difficult to make changes in the future.</p>
<h3><a id="user-content-single-valued-objectives" class="anchor" aria-hidden="true" href="#single-valued-objectives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Single-valued objectives</h3>
<p>To retrieve relevant information about single-valued functions, the following functions are available where applicable:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> obj is the objective function defined as shown above</span>
<span class="pl-c1">value</span>(df)       <span class="pl-c"><span class="pl-c">#</span> return the objective evaluated at df.x_f</span>
<span class="pl-c1">gradient</span>(df)    <span class="pl-c"><span class="pl-c">#</span> return the gradient evaluated at df.x_df</span>
<span class="pl-c1">gradient</span>(df, i) <span class="pl-c"><span class="pl-c">#</span> return the gradient evaluated at df.x_df</span>
<span class="pl-c1">hessian</span>(df)     <span class="pl-c"><span class="pl-c">#</span> return the hessian evaluated at df.x_h</span></pre></div>
<p>To update the various quantities, use:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> obj is the objective function defined as shown above</span>
<span class="pl-c1">value!</span>(df, x)     <span class="pl-c"><span class="pl-c">#</span> update the objective if !(df.x_f==x) and set df.x_f to x</span>
<span class="pl-c1">value!!</span>(df, x)    <span class="pl-c"><span class="pl-c">#</span> update the objective and set df.x_f to x</span>
<span class="pl-c1">gradient!</span>(df, x)  <span class="pl-c"><span class="pl-c">#</span> update the gradient if !(df.x_df==x) and set df.x_df to x</span>
<span class="pl-c1">gradient!!</span>(df, x) <span class="pl-c"><span class="pl-c">#</span> update the gradient and set df.x_df to x</span>
<span class="pl-c1">hessian!</span>(df,x)    <span class="pl-c"><span class="pl-c">#</span> update the hessian if !(df.x_df==x) and set df.x_h to x</span>
<span class="pl-c1">hessian!!</span>(df,x)   <span class="pl-c"><span class="pl-c">#</span> update the hessian and set df.x_h to x</span></pre></div>
<h3><a id="user-content-multivalued" class="anchor" aria-hidden="true" href="#multivalued"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Multivalued</h3>
<p>To retrieve relevant information about multivalued functions, the following functions are available where applicable:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> obj is the objective function defined as shown above</span>
<span class="pl-c1">value</span>(df)    <span class="pl-c"><span class="pl-c">#</span> return the objective evaluated at df.x_f</span>
<span class="pl-c1">jacobian</span>(df) <span class="pl-c"><span class="pl-c">#</span> return the jacobian evaluated at df.x_df</span>
<span class="pl-c1">jacobian</span>(df) <span class="pl-c"><span class="pl-c">#</span> return the jacobian evaluated at df.x_df</span></pre></div>
<p>To update the various quantities, use:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> obj is the objective function defined as shown above</span>
<span class="pl-c1">value!</span>(df, x)     <span class="pl-c"><span class="pl-c">#</span> update the objective if !(df.x_f==x) and set df.x_f to x</span>
<span class="pl-c1">value!!</span>(df, x)    <span class="pl-c"><span class="pl-c">#</span> update the objective and set df.x_f to x</span>
<span class="pl-c1">jacobian!</span>(df, x)  <span class="pl-c"><span class="pl-c">#</span> update the jacobian if !(df.x_df==x) and set df.x_df to x</span>
<span class="pl-c1">jacobian!!</span>(df, x) <span class="pl-c"><span class="pl-c">#</span> update the jacobian and set df.x_df to x</span></pre></div>
<h2><a id="user-content-special-single-function-interface" class="anchor" aria-hidden="true" href="#special-single-function-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Special single-function interface</h2>
<p>In some cases the objective and partial derivaties share
common terms that are expensive to calculate. One such case is if
the underlying problem requires solution of a model or simulation
of a some system. In that case the <code>only_fg!</code>/<code>only_fj!</code> and <code>only_fgh!</code>
interfaces can be used.</p>
<h3><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h3>
<p>Say we have some common functionality in <code>common_calc(...)</code> that is used
in both the objective and partial derivative. Then we might construct a
OnceDifferentiable instance as</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> <span class="pl-en">f</span>(x)
    <span class="pl-c1">common_calc</span>(<span class="pl-k">...</span>)
    <span class="pl-c"><span class="pl-c">#</span> calculations specific to f</span>
    <span class="pl-k">return</span> f
<span class="pl-k">end</span>
<span class="pl-k">function</span> <span class="pl-en">g!</span>(G, x)
    <span class="pl-c1">common_calc</span>(<span class="pl-k">...</span>)
    <span class="pl-c"><span class="pl-c">#</span> mutating calculations specific to g!</span>
<span class="pl-k">end</span>
<span class="pl-c1">OnceDifferentiable</span>(f, g!, x0)</pre></div>
<p>However, in many algorithms <code>f</code> and <code>g!</code> are evaluated together, so the
common calculations are done twice instead of once. We can use the special
interface as shown below.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> <span class="pl-en">fg!</span>(F, G, x)
    <span class="pl-c1">common_calc</span>(<span class="pl-k">...</span>)
    <span class="pl-k">if</span> <span class="pl-k">!</span>(G <span class="pl-k">==</span> <span class="pl-c1">nothing</span>)
        <span class="pl-c"><span class="pl-c">#</span> mutating calculations specific to g!</span>
    <span class="pl-k">end</span>
    <span class="pl-k">if</span> <span class="pl-k">!</span>(F <span class="pl-k">==</span> <span class="pl-c1">nothing</span>)
        <span class="pl-c"><span class="pl-c">#</span> calculations specific to f</span>
        <span class="pl-k">return</span> f
    <span class="pl-k">end</span>
<span class="pl-k">end</span>
<span class="pl-c1">OnceDifferentiable</span>(<span class="pl-c1">only_fg!</span>(fg!), x0)</pre></div>
<p>Notice the important check in the <code>if</code> statements. This makes sure that <code>G</code> is only
updated when we want to, and, if only <code>G</code> is to be updated, that we don't calculate
the objective.</p>
</article></div>