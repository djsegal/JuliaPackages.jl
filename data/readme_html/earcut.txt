<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-earcut" class="anchor" aria-hidden="true" href="#earcut"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>EarCut</h1>
<p><a href="https://travis-ci.org/JuliaGeometry/EarCut.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/134278616eb2c03d320c9475564e929e0b658741/68747470733a2f2f7472617669732d63692e6f72672f4a756c696147656f6d657472792f4561724375742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaGeometry/EarCut.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/SimonDanisch/earcut-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3c94871e64f8873f0aaed18d90016eab855f9670/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f706f306c71723573673177706465646a3f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/po0lqr5sg1wpdedj?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaGeometry/EarCut.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ec5ab16b8ff2af1e3eb69b8e61b5e8dcfd83475b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c696147656f6d657472792f4561724375742e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaGeometry/EarCut.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaGeometry/EarCut.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a59d8cf873c22c8a81d2526fee15c5e803f0545c/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c696147656f6d657472792f4561724375742e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaGeometry/EarCut.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Wrapper for <a href="https://github.com/mapbox/earcut.hpp">earcut.hpp</a>, a header only library for triangulating polygons.</p>
<p>License of wrapper: MIT</p>
<p>License of earcut.hpp: <a href="https://github.com/JuliaGeometry/EarCut.jl.git/deps/earcut/LICENSE">ISC</a></p>
<p>Install with:</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>EarCut<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">test</span>(<span class="pl-s"><span class="pl-pds">"</span>EarCut<span class="pl-pds">"</span></span>)</pre></div>
<p>Usage:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> EarCut
<span class="pl-k">using</span> GeometryTypes
a <span class="pl-k">=</span> <span class="pl-c1">Circle</span>(<span class="pl-c1">Point2f0</span>(<span class="pl-c1">0</span>), <span class="pl-c1">0.5</span>f0)
b <span class="pl-k">=</span> <span class="pl-c1">Circle</span>(<span class="pl-c1">Point2f0</span>(<span class="pl-c1">0</span>), <span class="pl-c1">1</span>f0)
polygon <span class="pl-k">=</span> [<span class="pl-c1">decompose</span>(Point2f0, b), <span class="pl-c1">decompose</span>(Point2f0, a)] <span class="pl-c"><span class="pl-c">#</span> some points defining a polygon. Must be a Vector{Vector{Point}}</span>
triangle_faces <span class="pl-k">=</span> <span class="pl-c1">triangulate</span>(polygon)
<span class="pl-c"><span class="pl-c">#</span> then display with e.g. GLVisualize like this:</span>
<span class="pl-k">using</span> GLVisualize, Colors; w <span class="pl-k">=</span> <span class="pl-c1">glscreen</span>(); <span class="pl-c1">@async</span> <span class="pl-c1">renderloop</span>(w)
v <span class="pl-k">=</span> <span class="pl-c1">map</span>(x<span class="pl-k">-&gt;</span> <span class="pl-c1">Point3f0</span>(x[<span class="pl-c1">1</span>], x[<span class="pl-c1">2</span>], <span class="pl-c1">0</span>), <span class="pl-c1">vcat</span>(polygon<span class="pl-k">...</span>))
mesh <span class="pl-k">=</span> <span class="pl-c1">GLNormalMesh</span>(vertices<span class="pl-k">=</span>v, faces<span class="pl-k">=</span>triangle_faces)
<span class="pl-c1">_view</span>(<span class="pl-c1">visualize</span>(mesh), camera <span class="pl-k">=</span> <span class="pl-c1">:orthographic_pixel</span>)
GLAbstraction<span class="pl-k">.</span><span class="pl-c1">center!</span>(w, <span class="pl-c1">:orthographic_pixel</span>)</pre></div>
<p>resulting in:</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1010467/34985721-569dc228-fab5-11e7-8557-66962cbc7a70.png"><img src="https://user-images.githubusercontent.com/1010467/34985721-569dc228-fab5-11e7-8557-66962cbc7a70.png" alt="image" style="max-width:100%;"></a></p>
</article></div>