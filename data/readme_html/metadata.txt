<div id="readme" class="md" data-path=".github/README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-metadata" class="anchor" aria-hidden="true" href="#metadata"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>METADATA</h1>
<p>This used to be the official METADATA repo for the Julia package manager, upto and including Julia <code>v0.6</code>. From Julia <code>v0.7</code> (July 2018) onwards, the package registry has moved to the <a href="https://github.com/JuliaRegistries/General">https://github.com/JuliaRegistries/General</a>. This repo is therefore frozen and no longer maintained. All users are urged to migrate to Julia 1.0 or later. There is no support for earlier versions.</p>
<h1><a id="user-content-historical-readme" class="anchor" aria-hidden="true" href="#historical-readme"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Historical README</h1>
<p>See <a href="https://docs.julialang.org/en/latest/stdlib/Pkg/" rel="nofollow">manual section</a> on packages for how to use the package manager to install and develop packages.</p>
<p>Please note our current policies for accepting entries into METADATA.jl:</p>
<ol>
<li>
<p>Registered packages must have an <a href="http://opensource.org/licenses" rel="nofollow">Open Source Initiative approved license</a>, clearly marked via a <code>LICENSE.md</code>, <code>LICENSE</code>, <code>COPYING</code> or similarly named file in the package repository. Packages that wrap proprietary libraries are acceptable if the licenses of those libraries permit open source distribution of the Julia wrapper code.</p>
</li>
<li>
<p>New packages submitted for registration must have at least one tagged version.</p>
</li>
<li>
<p>The lowest package version that will be accepted is v0.0.1. v0.0.0 is no longer permitted.</p>
</li>
<li>
<p>All new tagged versions of packages must have a <code>REQUIRE</code> file, which must at a minimum contain a single line like</p>
<pre><code>julia 0.6
</code></pre>
<p>specifying a minimum version of Julia the package is expected to run on. Running <code>Pkg.tag</code> copies the contents of a package's <code>REQUIRE</code> file into <code>METADATA.jl/PkgName/versions/1.2.3/requires</code>.</p>
<p>A common mistake is to have an entry of the form</p>
<pre><code>julia 0.6-
</code></pre>
<p>with the intention of specifying "version 0.4 and up." On the contrary, this line means "at least a 0.4 pre-release julia."</p>
</li>
<li>
<p>New package version tags must have a minimum Julia version of <code>0.5</code> or newer. <code>0.5-</code> (0.5 pre-releases) is no longer allowed.
Exceptions may be granted for <code>julia 0.4</code> if package authors are willing to vouch that they still test that their packages work on 0.4.</p>
</li>
<li>
<p>If your package works with Julia 0.6 but not 0.5, then specify <code>julia 0.6</code> in your <code>REQUIRE</code> file. If the package has had any previous   tags which supported <code>julia 0.5</code>, then be sure to change the minor or major version number of the package via <code>Pkg.tag("PkgName", :minor)</code> for the first tag that no longer supports <code>julia 0.5</code>. This makes it possible to create a separate branch for any future bugfix releases that may be needed for the package on Julia 0.5.</p>
</li>
<li>
<p>We strongly encourage everyone to update METADATA.jl through pull requests, which can be generated for you automatically when you tag a package using Github's UI, provided you have <a href="https://github.com/integration/attobot">attobot</a> enabled on your repository. Alternatively, you can use the <a href="https://github.com/JuliaLang/PkgDev.jl">PkgDev</a> package, and its <code>PkgDev.publish()</code> function to create PRs. GitHub's pull requests allow us to run basic checks on the metadata entries. METADATA.jl should not be edited directly unless absolutely necessary in an emergency.</p>
</li>
<li>
<p>Do not modify the <code>sha1</code> files of existing tags after they have been published by merging to the <code>JuliaLang/metadata-v2</code> branch. Bounds can be modified in the <code>requires</code> files after the fact, but the code content should remain unchanged for reproducibility of past results.</p>
</li>
</ol>
<p>These policies have been the result of many months of discussion to improve the quality of registered packages and the overall user experience with Julia packages.</p>
</article></div>