<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-fromdigits" class="anchor" aria-hidden="true" href="#fromdigits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FromDigits</h1>

<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667"><img src="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-maturing-blue.svg" style="max-width:100%;"></a>
<a href="https://FedericoStra.github.io/FromDigits.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://FedericoStra.github.io/FromDigits.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/FedericoStra/FromDigits.jl/actions"><img src="https://github.com/FedericoStra/FromDigits.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width:100%;"></a>
<a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using FromDigits

julia&gt; digits(739)
3-element Vector{Int64}:
 9
 3
 7

julia&gt; fromdigits([9, 3, 7])
739

julia&gt; fromdigits(fill(1, 19))
1111111111111111111

julia&gt; fromdigits(fill(1, 20))
ERROR: OverflowError: 10 * 1111111111111111111 overflowed for type Int64
Stacktrace:
[...]

julia&gt; fromdigits_unchecked(fill(1, 20))
-7335632962598440505

julia&gt; fromdigits(BigInt, fill(1, 20))
11111111111111111111

julia&gt; fromdigits(digits(UInt32, 12345))
0x00003039

julia&gt; fromdigits(UInt16[0x1, 0x2, 0x3]; base=0x0010)
0x0321
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FromDigits

julia<span class="pl-k">&gt;</span> <span class="pl-c1">digits</span>(<span class="pl-c1">739</span>)
<span class="pl-c1">3</span><span class="pl-k">-</span>element Vector{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">9</span>
 <span class="pl-c1">3</span>
 <span class="pl-c1">7</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">fromdigits</span>([<span class="pl-c1">9</span>, <span class="pl-c1">3</span>, <span class="pl-c1">7</span>])
<span class="pl-c1">739</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">fromdigits</span>(<span class="pl-c1">fill</span>(<span class="pl-c1">1</span>, <span class="pl-c1">19</span>))
<span class="pl-c1">1111111111111111111</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">fromdigits</span>(<span class="pl-c1">fill</span>(<span class="pl-c1">1</span>, <span class="pl-c1">20</span>))
ERROR<span class="pl-k">:</span> OverflowError<span class="pl-k">:</span> <span class="pl-c1">10</span> <span class="pl-k">*</span> <span class="pl-c1">1111111111111111111</span> overflowed <span class="pl-k">for</span> type Int64
Stacktrace<span class="pl-k">:</span>
[<span class="pl-k">...</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">fromdigits_unchecked</span>(<span class="pl-c1">fill</span>(<span class="pl-c1">1</span>, <span class="pl-c1">20</span>))
<span class="pl-k">-</span><span class="pl-c1">7335632962598440505</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">fromdigits</span>(BigInt, <span class="pl-c1">fill</span>(<span class="pl-c1">1</span>, <span class="pl-c1">20</span>))
<span class="pl-c1">11111111111111111111</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">fromdigits</span>(<span class="pl-c1">digits</span>(UInt32, <span class="pl-c1">12345</span>))
<span class="pl-c1">0x00003039</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">fromdigits</span>(UInt16[<span class="pl-c1">0x1</span>, <span class="pl-c1">0x2</span>, <span class="pl-c1">0x3</span>]; base<span class="pl-k">=</span><span class="pl-c1">0x0010</span>)
<span class="pl-c1">0x0321</span></pre></div>
</article></div>