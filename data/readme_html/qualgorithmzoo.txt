<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-qualgorithmzoo" class="anchor" aria-hidden="true" href="#qualgorithmzoo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>QuAlgorithmZoo</h1>
<p dir="auto">A curated implementation of quantum algorithms with <a href="https://github.com/QuantumBFS/Yao.jl">Yao.jl</a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto"><code>QuAlgorithmZoo.jl</code> is not registered, please use the following command to download the examples:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ git clone https://github.com/QuantumBFS/QuAlgorithmZoo.jl.git"><pre>$ git clone https://github.com/QuantumBFS/QuAlgorithmZoo.jl.git</pre></div>
<p dir="auto">Then open directory <code>.julia/dev/QuAlgorithmZoo/examples</code> to find algorithms.</p>
<h2 dir="auto"><a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contents</h2>
<ul dir="auto">
<li>QFT (<code>Yao.EasyBuild.qft_circuit</code>)</li>
<li>Phase Estimation (<code>Yao.EasyBuild.phase_estimation_circuit</code>)</li>
<li>Hadamard Test (<code>Yao.EasyBuild.hadamard_test_circuit</code>)</li>
<li>State Overlap Algorithms (<code>Yao.EasyBuild.swap_test_circuit</code>)</li>
</ul>
<p dir="auto">In examples folder, you will find</p>
<ul dir="auto">
<li><a href="examples/VQE_openfermion">Variational Quantum Eigensolver (with OpenFermion)</a></li>
<li><a href="examples/QSVD">Quantum SVD</a></li>
<li><a href="examples/GroundStateSolvers">Imaginary Time Evolution Quantum Eigensolver</a></li>
<li><a href="examples/HHL">HHL algorithm</a></li>
<li><a href="examples/QAOA">QAOA</a></li>
<li><a href="examples/QCBM">Quantum Circuit Born Machine</a></li>
<li><a href="examples/QuGAN">Quantum GAN</a></li>
<li><a href="examples/Shor">Shor</a></li>
<li><a href="examples/Grover">Grover search</a></li>
<li><a href="examples/GateLearning">Learning a general two qubit unitary gate</a></li>
<li><a href="examples/BernsteinVazirani">Bernstein-Vazirani algorithm</a></li>
<li><a href="examples/MerminMagic">Mermin Magic Square</a></li>
</ul>
<p dir="auto">Examples of using Yao in other projects</p>
<ul dir="auto">
<li><a href="https://github.com/QuantumBFS/QuDiffEq.jl">QuODE</a></li>
<li><a href="https://github.com/GiggleLiu/QuantumPEPS.jl">TensorNetwork Inspired Circuits</a></li>
<li><a href="https://github.com/wangleiphy/BetaVQE.jl">Beta-VQE</a></li>
<li><a href="https://github.com/LWKJJONAK/Quantum_Neural_Network_Classifiers">Quantum Neural Network Classifier</a></li>
</ul>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">QuAlgorithmZoo.jl is released under Apache License 2.0.</p>
</article></div>