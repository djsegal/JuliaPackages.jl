<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-cvxoptjl--julia-interface-to-cvxopt" class="anchor" aria-hidden="true" href="#cvxoptjl--julia-interface-to-cvxopt"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CVXOPT.jl â€” Julia interface to CVXOPT</h1>
<p>The package provides Julia wrappers for the following <a href="http://cvxopt.org" rel="nofollow">CVXOPT</a> solvers:</p>
<ul>
<li><a href="http://cvxopt.org/userguide/coneprog.html?#linear-cone-programs" rel="nofollow">cvxopt.solvers.conelp</a></li>
<li><a href="http://cvxopt.org/userguide/coneprog.html?#quadratic-cone-programs" rel="nofollow">cvxopt.solvers.coneqp</a></li>
<li><a href="http://cvxopt.org/userguide/coneprog.html?#linear-programming" rel="nofollow">cvxopt.solvers.lp</a></li>
<li><a href="http://cvxopt.org/userguide/coneprog.html?#quadratic-programming" rel="nofollow">cvxopt.solvers.qp</a></li>
<li><a href="http://cvxopt.org/userguide/coneprog.html?#second-order-cone-programming" rel="nofollow">cvxopt.solvers.socp</a></li>
<li><a href="http://cvxopt.org/userguide/coneprog.html?#semidefinite-programming" rel="nofollow">cvxopt.solvers.sdp</a></li>
</ul>
<h2><a id="user-content-installation-and-test-linuxmacos" class="anchor" aria-hidden="true" href="#installation-and-test-linuxmacos"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation and test (Linux/macOS)</h2>
<p>CVXOPT.jl requires <a href="https://github.com/JuliaPy/PyCall.jl">PyCall</a> to
call functions from the CVXOPT Python extension from Julia. If you
already have a Python executable in your path, then PyCall will use
that version of Python. Alternatively, you can force PyCall to use
<a href="https://github.com/JuliaPy/Conda.jl">Conda.jl</a> to install a minimal Python distribution that is private to
Julia by setting <code>PYTHON=""</code>:</p>
<div class="highlight highlight-source-julia"><pre>ENV[<span class="pl-s"><span class="pl-pds">"</span>PYTHON<span class="pl-pds">"</span></span>]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>  <span class="pl-c"><span class="pl-c">#</span> Optional: force PyCall to use Conda.jl</span>
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CVXOPT<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">test</span>(<span class="pl-s"><span class="pl-pds">"</span>CVXOPT<span class="pl-pds">"</span></span>)</pre></div>
<p>This will automatically install CVXOPT from the conda-forge channel.</p>
<h2><a id="user-content-build-status" class="anchor" aria-hidden="true" href="#build-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Build status</h2>
<p><a href="https://travis-ci.org/cvxopt/CVXOPT.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7bc6653ee96ba91ff3af949aaa5a0db316ab6215/68747470733a2f2f7472617669732d63692e6f72672f6376786f70742f4356584f50542e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/cvxopt/CVXOPT.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/cvxopt/CVXOPT.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/0d2c7c2d14231a02bf815a1e3116db0fa3288370/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6376786f70742f4356584f50542e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/cvxopt/CVXOPT.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
</article></div>