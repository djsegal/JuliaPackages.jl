<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-yaml" class="anchor" aria-hidden="true" href="#yaml"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>YAML</h1>
<p><a href="http://pkg.julialang.org/?pkg=YAML" rel="nofollow"><img src="https://camo.githubusercontent.com/0e95e4e635cc40bb348b2c489a77e20129bbfc81/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f59414d4c5f302e342e737667" alt="" data-canonical-src="http://pkg.julialang.org/badges/YAML_0.4.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=YAML" rel="nofollow"><img src="https://camo.githubusercontent.com/9a459040d45f91d20b3d4fe6d252dfeaab210d9e/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f59414d4c5f302e352e737667" alt="" data-canonical-src="http://pkg.julialang.org/badges/YAML_0.5.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=YAML" rel="nofollow"><img src="https://camo.githubusercontent.com/2d558ce7dbded4b4cb10505e626956d8b359e5ce/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f59414d4c5f302e362e737667" alt="" data-canonical-src="http://pkg.julialang.org/badges/YAML_0.6.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=YAML" rel="nofollow"><img src="https://camo.githubusercontent.com/d7f78ba38fd222318c0ee991c2c3f31cedf76a36/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f59414d4c5f302e372e737667" alt="" data-canonical-src="http://pkg.julialang.org/badges/YAML_0.7.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=YAML" rel="nofollow"><img src="https://camo.githubusercontent.com/9a2bd8862b4f1540b1ac3078dda274be18d67c4e/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f59414d4c5f312e302e737667" alt="" data-canonical-src="http://pkg.julialang.org/badges/YAML_1.0.svg" style="max-width:100%;"></a></p>
<p><a href="https://travis-ci.org/JuliaData/YAML.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/20975920c0db861bdbcc74085d8c155a3671c91e/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961446174612f59414d4c2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaData/YAML.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/JuliaData/YAML.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ad6fba1d35fdaecc84814224788952505d7a5f95/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961446174612f59414d4c2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaData/YAML.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p><a href="http://yaml.org/" rel="nofollow">YAML</a> is a flexible data serialization format that is
designed to be easily read and written by human beings.</p>
<p>This library parses YAML documents into native Julia types. (Dumping Julia
objects to YAML has not yet been implemented.)</p>
<h2><a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Synopsis</h2>
<p>For most purposes there is one important function: <code>YAML.load</code>, which takes a
string and parses it the first YAML document it finds.</p>
<p>To parse a file use <code>YAML.load_file</code>, and to parse every document in a file
use <code>YAML.load_all</code> or <code>YAML.load_all_file</code>.</p>
<p>Given a YAML document like the following</p>
<div class="highlight highlight-source-yaml"><pre><span class="pl-ent">receipt</span>:     <span class="pl-s">Oz-Ware Purchase Invoice</span>
<span class="pl-ent">date</span>:        <span class="pl-c1">2012-08-06</span>
<span class="pl-ent">customer</span>:
    <span class="pl-ent">given</span>:   <span class="pl-s">Dorothy</span>
    <span class="pl-ent">family</span>:  <span class="pl-s">Gale</span>

<span class="pl-ent">items</span>:
    - <span class="pl-ent">part_no</span>:   <span class="pl-c1">A4786</span>
      <span class="pl-ent">descrip</span>:   <span class="pl-s">Water Bucket (Filled)</span>
      <span class="pl-ent">price</span>:     <span class="pl-c1">1.47</span>
      <span class="pl-ent">quantity</span>:  <span class="pl-c1">4</span>

    - <span class="pl-ent">part_no</span>:   <span class="pl-c1">E1628</span>
      <span class="pl-ent">descrip</span>:   <span class="pl-s">High Heeled "Ruby" Slippers</span>
      <span class="pl-ent">size</span>:      <span class="pl-c1">8</span>
      <span class="pl-ent">price</span>:     <span class="pl-c1">100.27</span>
      <span class="pl-ent">quantity</span>:  <span class="pl-c1">1</span>

<span class="pl-ent">bill-to</span>:  <span class="pl-s">&amp;id001</span>
    <span class="pl-ent">street</span>: <span class="pl-s">|</span>
<span class="pl-s">            123 Tornado Alley</span>
<span class="pl-s">            Suite 16</span>
<span class="pl-s"></span>    <span class="pl-ent">city</span>:   <span class="pl-s">East Centerville</span>
    <span class="pl-ent">state</span>:  <span class="pl-s">KS</span>

<span class="pl-ent">ship-to</span>:  <span class="pl-s">*id001</span>

<span class="pl-ent">specialDelivery</span>:  <span class="pl-s">&gt;</span>
<span class="pl-s">    Follow the Yellow Brick</span>
<span class="pl-s">    Road to the Emerald City.</span>
<span class="pl-s">    Pay no attention to the</span>
<span class="pl-s">    man behind the curtain.</span></pre></div>
<p>It can be loaded with</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">import</span> YAML

data <span class="pl-k">=</span> YAML<span class="pl-k">.</span><span class="pl-c1">load</span>(<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>test.yml<span class="pl-pds">"</span></span>))

<span class="pl-c1">println</span>(data)</pre></div>
<p>Which will show you something like this.</p>
<pre><code>{"date"=&gt;Aug 6, 2012 12:00:00 AM PDT,"ship-to"=&gt;{"street"=&gt;"123 Tornado Alley\nSuite 16\n","state"=&gt;"KS","city"=&gt;"East Centerville"},"customer"=&gt;{"given"=&gt;"Dorothy","family"=&gt;"Gale"},"specialDelivery"=&gt;"Follow the Yellow Brick\nRoad to the Emerald City.\nPay no attention to the\nman behind the curtain.\n","items"=&gt;{{"price"=&gt;1.47,"descrip"=&gt;"Water Bucket (Filled)","part_no"=&gt;"A4786","quantity"=&gt;4}  â€¦  {"price"=&gt;100.27,"size"=&gt;8,"descrip"=&gt;"High Heeled \"Ruby\" Slippers","part_no"=&gt;"E1628","quantity"=&gt;1}},"bill-to"=&gt;{"street"=&gt;"123 Tornado Alley\nSuite 16\n","state"=&gt;"KS","city"=&gt;"East Centerville"},"receipt"=&gt;"Oz-Ware Purchase Invoice"}
</code></pre>
<p>Note that ints and floats are recognized, as well as timestamps which are parsed
into CalendarTime objects. Also, anchors and references work as expected,
without making a copy.</p>
<h2><a id="user-content-writing-to-yaml" class="anchor" aria-hidden="true" href="#writing-to-yaml"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Writing to YAML</h2>
<p>Similar to reading files, you can emit Julia objects to YAML files by calling
<code>write_file</code>, or to a string object by calling <code>write</code>.</p>
<p>For example, you can reproduce the above file from the variable <code>data</code></p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">import</span> YAML
YAML<span class="pl-k">.</span><span class="pl-c1">write_file</span>(<span class="pl-s"><span class="pl-pds">"</span>test-output.yml<span class="pl-pds">"</span></span>, data)</pre></div>
<p>which gives you (omitting the precise format but maintaining the content)</p>
<div class="highlight highlight-source-yaml"><pre><span class="pl-ent">receipt</span>: <span class="pl-s"><span class="pl-pds">"</span>Oz-Ware Purchase Invoice<span class="pl-pds">"</span></span>
<span class="pl-ent">items</span>:
  - <span class="pl-ent">part_no</span>: <span class="pl-s"><span class="pl-pds">"</span>A4786<span class="pl-pds">"</span></span>
    <span class="pl-ent">price</span>: <span class="pl-c1">1.47</span>
    <span class="pl-ent">descrip</span>: <span class="pl-s"><span class="pl-pds">"</span>Water Bucket (Filled)<span class="pl-pds">"</span></span>
    <span class="pl-ent">quantity</span>: <span class="pl-c1">4</span>
  - <span class="pl-ent">part_no</span>: <span class="pl-s"><span class="pl-pds">"</span>E1628<span class="pl-pds">"</span></span>
    <span class="pl-ent">price</span>: <span class="pl-c1">100.27</span>
    <span class="pl-ent">size</span>: <span class="pl-c1">8</span>
    <span class="pl-ent">descrip</span>: <span class="pl-s"><span class="pl-pds">"</span>High Heeled <span class="pl-pds">"</span></span><span class="pl-s">Ruby" Slippers"</span>
    <span class="pl-ent">quantity</span>: <span class="pl-c1">1</span>
<span class="pl-ent">customer</span>:
  <span class="pl-ent">given</span>: <span class="pl-s"><span class="pl-pds">"</span>Dorothy<span class="pl-pds">"</span></span>
  <span class="pl-ent">family</span>: <span class="pl-s"><span class="pl-pds">"</span>Gale<span class="pl-pds">"</span></span>
<span class="pl-ent">ship-to</span>:
  <span class="pl-ent">city</span>: <span class="pl-s"><span class="pl-pds">"</span>East Centerville<span class="pl-pds">"</span></span>
  <span class="pl-ent">street</span>: <span class="pl-s">|</span>
<span class="pl-s">      123 Tornado Alley</span>
<span class="pl-s">      Suite 16</span>
<span class="pl-s"></span>
<span class="pl-s"></span>  <span class="pl-ent">state</span>: <span class="pl-s"><span class="pl-pds">"</span>KS<span class="pl-pds">"</span></span>
<span class="pl-ent">bill-to</span>:
  <span class="pl-ent">city</span>: <span class="pl-s"><span class="pl-pds">"</span>East Centerville<span class="pl-pds">"</span></span>
  <span class="pl-ent">street</span>: <span class="pl-s">|</span>
<span class="pl-s">      123 Tornado Alley</span>
<span class="pl-s">      Suite 16</span>
<span class="pl-s"></span>
<span class="pl-s"></span>  <span class="pl-ent">state</span>: <span class="pl-s"><span class="pl-pds">"</span>KS<span class="pl-pds">"</span></span>
<span class="pl-ent">specialDelivery</span>: <span class="pl-s">|</span>
<span class="pl-s">    Follow the Yellow Brick Road to the Emerald City. Pay no attention to the man behind the curtain.</span>
<span class="pl-s"></span>
<span class="pl-s"></span><span class="pl-ent">date</span>: <span class="pl-c1">2012-08-06</span></pre></div>
<h2><a id="user-content-not-yet-implemented" class="anchor" aria-hidden="true" href="#not-yet-implemented"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Not yet implemented</h2>
<ul>
<li>When writing YAML files, you cannot use additional constructors like you can when reading.</li>
<li>Parsing sexigesimal numbers.</li>
<li>Fractions of seconds in timestamps.</li>
<li>Specific time-zone offsets in timestamps.</li>
<li>Application specific tags.</li>
</ul>
</article></div>