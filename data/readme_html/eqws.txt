<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-eqws" class="anchor" aria-hidden="true" href="#eqws"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>EqWS</h1>
<p dir="auto">These are temporary docs. Full versions will be available once a more stable version is established (said every developer ever). Due to active development, we recommend forking the repository to prevent changes in syntax from confounding users. EqWS was previously called DHC and is currently actively developed at <a href="https://github.com/andrew-saydjari/DHC">https://github.com/andrew-saydjari/DHC</a>, stable versions appearing here.</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">Please find an example notebook that runs DHC on image slices loaded from FITS files in examples/2021_02_05. This is an example of the parallelized code suitable for computation across many cores on a single node (here 30). In this example, we calculated 2542 coeff per image on 800230 images in &lt;2.5h.</p>
<h2 dir="auto"><a id="user-content-workflow" class="anchor" aria-hidden="true" href="#workflow"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Workflow</h2>
<p dir="auto">The main workflow (as of 2021/04/13) is to compute the filterbank using DHC.fink_filter_hash and then call DHC_compute(image,filterbank).</p>
<p dir="auto">The DHC currently computes second-order convolutions in direct analogy with WST, but always sums power (abs^2) over images rather than just summing the abs. Other second-order couplings are under development and are experimental. Passing the filterbank twice allows the user to specify a different filterbank for the first and second convolutions. This has not yielded particularly compelling results but can be accessed with the <code>filter_hash2</code> implicit arg.</p>
<h2 dir="auto"><a id="user-content-method-parameters" class="anchor" aria-hidden="true" href="#method-parameters"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Method Parameters</h2>
<p dir="auto">Most of the parameters users will want to adjust are found in the compilation of the filterbank. A standard call looks like</p>
<p dir="auto"><code>filter_hash = fink_filter_hash(1,8,nx=256,wd=2)</code></p>
<p dir="auto">The first argument (c) specifies the step size of scale (J) for the wavelets. For c=1, there are J = log_2(N_pixels)-2 radial bins. One bin near the origin of Fourier space is excluded because it is not well sampled (and it is compensated for by a catch all filter phi) and one bin near the edges of the Fourier plane is also excluded because it is not well sampled in real space. For c = 2, there are 2xJ radial bins, a half-dyadic spacing (higher c are implemented for those interested, but generally does seem to significantly improve the statistics at least for small images ~256^2 pixels).</p>
<p dir="auto">The second argument is L, the number of angular bins. Default should be L=8. We do sometimes run with L=16.</p>
<p dir="auto">The size of the image is assumed 256, but can be changed by passing nx=N_pix.</p>
<p dir="auto">By default, our wavelets only have nearest neighbor overlap (wd=1), but we often find wavelets more extended in the angular direction improve performance (wd=2). This will be discussed in a forthcoming publication which should release the code and improve the docs.</p>
<p dir="auto">Currently, pc=1 by default meaning that the L angular bins only tile 0 to \pi. However, pc=2 allows a full tiling 0 to 2\pi with L bins.</p>
<p dir="auto">Other experimental features are generally breifly described under the function definition but should be viewed as highly experimental.</p>
<h2 dir="auto"><a id="user-content-development" class="anchor" aria-hidden="true" href="#development"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Development</h2>
<p dir="auto">Please feel free to post issues and questions about the package or contact <a href="mailto:andrew.saydjari@cfa.harvard.edu">andrew.saydjari@cfa.harvard.edu</a> directly. Your contributions are welcome. Just fork the repository and submit a pull request.</p>
<h2 dir="auto"><a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FAQ</h2>
<p dir="auto">We are actively developing GPU capabilities but they are not yet implemented. Sparse 3D wavelets are also in process.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/a19a24a6398857a57717bcbc2a6d179937835a53e998a0c2fd8e4a3801f1ffdc/68747470733a2f2f76697369746f722d62616467652e676c697463682e6d652f62616467653f706167655f69643d616e647265772d736179646a6172692e457157532e6a6c"><img width="0" src="https://camo.githubusercontent.com/a19a24a6398857a57717bcbc2a6d179937835a53e998a0c2fd8e4a3801f1ffdc/68747470733a2f2f76697369746f722d62616467652e676c697463682e6d652f62616467653f706167655f69643d616e647265772d736179646a6172692e457157532e6a6c" data-canonical-src="https://visitor-badge.glitch.me/badge?page_id=andrew-saydjari.EqWS.jl" style="max-width: 100%;"></a></p>
</article></div>