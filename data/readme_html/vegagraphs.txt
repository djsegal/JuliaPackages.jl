<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><div align="center" dir="auto"> <a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaGraphs/VegaGraphs.jl/blob/master/images/VegaGraphs_logo.svg"><img src="https://github.com/JuliaGraphs/VegaGraphs.jl/raw/master/images/VegaGraphs_logo.svg" alt="VegaGraphs Logo" width="310" style="max-width: 100%;"></a> </div>

<p dir="auto"><a href="https://codecov.io/gh/JuliaGraphs/VegaGraphs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/dae1dcd1d487aa2d26c2de9a1c2e4c41f36bc7d4a027d26c2bace0025e5d6c36/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614772617068732f566567614772617068732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaGraphs/VegaGraphs.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaGraphs/VegaGraphs.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaGraphs/VegaGraphs.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://juliagraphs.org/VegaGraphs.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://juliagraphs.org/VegaGraphs.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><strong>VegaGraphs</strong> implements graph visualization with <a href="https://github.com/queryverse/VegaLite.jl">Vega-Lite</a>.</p>
<p dir="auto">This library is built on top of the <a href="https://github.com/JuliaGraphs">JuliaGraphs</a> project.</p>
<h2 dir="auto"><a id="user-content-example-of-usage" class="anchor" aria-hidden="true" href="#example-of-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example of Usage</h2>
<p dir="auto">The use of VegaGraphs is very straightforward. At the moment, the package has one main function called
<code>graphplot()</code> that is shipped with all the possible modifications one can the do the graph visualization.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Creating a Random Graph with SimpleWeightedGraphs
incidence = rand([0,1],10,20)
m = incidence'*incidence
m[diagind(m)] .= 0.0
g = SimpleWeightedGraph(m)
random_nodecolor = rand([1,2,3],20)
random_nodesize  = rand(20)
# Using VegaGraphs to create the Plot
p = VegaGraphs.graphplot(g,
    tooltip=true,  # Iteractive tooltips
    ew=true,       # VegaGraphs calculate the edge weights based on the number of time the pair appears in the graph
    node_label=false,
    node_colorfield=random_nodecolor,
    node_sizefield=random_nodesize,
    node_sizefieldtype=&quot;q&quot;,
    node_colorfieldtype=&quot;o&quot;
)"><pre><span class="pl-c"><span class="pl-c">#</span> Creating a Random Graph with SimpleWeightedGraphs</span>
incidence <span class="pl-k">=</span> <span class="pl-c1">rand</span>([<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],<span class="pl-c1">10</span>,<span class="pl-c1">20</span>)
m <span class="pl-k">=</span> incidence<span class="pl-k">'</span><span class="pl-k">*</span>incidence
m[<span class="pl-c1">diagind</span>(m)] <span class="pl-k">.=</span> <span class="pl-c1">0.0</span>
g <span class="pl-k">=</span> <span class="pl-c1">SimpleWeightedGraph</span>(m)
random_nodecolor <span class="pl-k">=</span> <span class="pl-c1">rand</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>],<span class="pl-c1">20</span>)
random_nodesize  <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">20</span>)
<span class="pl-c"><span class="pl-c">#</span> Using VegaGraphs to create the Plot</span>
p <span class="pl-k">=</span> VegaGraphs<span class="pl-k">.</span><span class="pl-c1">graphplot</span>(g,
    tooltip<span class="pl-k">=</span><span class="pl-c1">true</span>,  <span class="pl-c"><span class="pl-c">#</span> Iteractive tooltips</span>
    ew<span class="pl-k">=</span><span class="pl-c1">true</span>,       <span class="pl-c"><span class="pl-c">#</span> VegaGraphs calculate the edge weights based on the number of time the pair appears in the graph</span>
    node_label<span class="pl-k">=</span><span class="pl-c1">false</span>,
    node_colorfield<span class="pl-k">=</span>random_nodecolor,
    node_sizefield<span class="pl-k">=</span>random_nodesize,
    node_sizefieldtype<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>q<span class="pl-pds">"</span></span>,
    node_colorfieldtype<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>o<span class="pl-pds">"</span></span>
)</pre></div>
<div align="center" dir="auto"> <a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaGraphs/VegaGraphs.jl/blob/master/images/Example_Plot.svg"><img src="https://github.com/JuliaGraphs/VegaGraphs.jl/raw/master/images/Example_Plot.svg" alt="Graph Plot" style="max-width: 100%;"></a> </div>
<h2 dir="auto"><a id="user-content-desired-features" class="anchor" aria-hidden="true" href="#desired-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Desired Features</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Graph visulization with interactivity;</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Generate graph from DataFrame and generate graph from provided nodes and edges;</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Allow to tweak node size, node color, node shape, edge size;</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Plot degree distribution;</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Interactivity between related graphs (e.g. papers vs authors networks);</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Interactivity between Plot and Graph (e.g. Degree distribution and Graph);</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> <strong>IMPLEMENT DIRECTED GRAPHS AFTER UNDIRECTED</strong></li>
</ul>
</article></div>