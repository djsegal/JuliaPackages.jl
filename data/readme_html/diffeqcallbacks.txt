<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-diffeqcallbacksjl-prebuilt-callbacks-for-extending-the-solvers-of-differentialequationsjl" class="anchor" aria-hidden="true" href="#diffeqcallbacksjl-prebuilt-callbacks-for-extending-the-solvers-of-differentialequationsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DiffEqCallbacks.jl: Prebuilt Callbacks for extending the solvers of DifferentialEquations.jl</h1>
<p dir="auto"><a href="https://julialang.zulipchat.com/#narrow/stream/279055-sciml-bridged" rel="nofollow"><img src="https://camo.githubusercontent.com/667867fc71b8b3c9ed350ce154a04d38adca002ecfa38edf519284e0365ee553/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d5a756c6970266d6573736167653d6368617426636f6c6f723d393535386232266c6162656c436f6c6f723d333839383236" alt="Join the chat at https://julialang.zulipchat.com #sciml-bridged" data-canonical-src="https://img.shields.io/static/v1?label=Zulip&amp;message=chat&amp;color=9558b2&amp;labelColor=389826" style="max-width: 100%;"></a>
<a href="https://docs.sciml.ai/DiffEqCallbacks/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/88037a523f970520933771e764f5abff55de9382efc91cd89dd43ef0bb49a85f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d5363694d4c2d626c75652e737667" alt="Global Docs" data-canonical-src="https://img.shields.io/badge/docs-SciML-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://codecov.io/gh/SciML/DiffEqCallbacks.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1ace3958b0699deabda6d2e97bb3847f087bcc67ecdb7109bc49213e10fd1cf9/68747470733a2f2f636f6465636f762e696f2f67682f5363694d4c2f44696666457143616c6c6261636b732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/SciML/DiffEqCallbacks.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/DiffEqCallbacks.jl/actions?query=workflow%3ACI"><img src="https://github.com/SciML/DiffEqCallbacks.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/SciMLStyle"><img src="https://camo.githubusercontent.com/3e16f03bad047817fbc07f49307817ed7919ef79c339dc75ad4ce813012c3e0b/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d636f64652532307374796c65266d6573736167653d5363694d4c26636f6c6f723d393535386232266c6162656c436f6c6f723d333839383236" alt="SciML Code Style" data-canonical-src="https://img.shields.io/static/v1?label=code%20style&amp;message=SciML&amp;color=9558b2&amp;labelColor=389826" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://docs.sciml.ai/DiffEqDocs/stable/" rel="nofollow">DifferentialEquations.jl</a> has an expressive callback system
which allows for customizable transformations of te solver behavior. DiffEqCallbacks.jl
is a library of pre-built callbacks which makes it easy to transform the solver into a
domain-specific simulation tool.</p>
<h2 dir="auto"><a id="user-content-tutorials-and-documentation" class="anchor" aria-hidden="true" href="#tutorials-and-documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tutorials and Documentation</h2>
<p dir="auto">For information on using the package,
<a href="https://docs.sciml.ai/DiffEqCallbacks/stable/" rel="nofollow">see the stable documentation</a>. Use the
<a href="https://docs.sciml.ai/DiffEqCallbacks/dev/" rel="nofollow">in-development documentation</a> for the version of
the documentation, which contains the unreleased features.</p>
<h2 dir="auto"><a id="user-content-manifold-projection-example" class="anchor" aria-hidden="true" href="#manifold-projection-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Manifold Projection Example</h2>
<p dir="auto">Here we solve the harmonic oscillator:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="u0 = ones(2)
function f(du,u,p,t)
  du[1] = u[2]
  du[2] = -u[1]
end
prob = ODEProblem(f,u0,(0.0,100.0))"><pre>u0 <span class="pl-k">=</span> <span class="pl-c1">ones</span>(<span class="pl-c1">2</span>)
<span class="pl-k">function</span> <span class="pl-en">f</span>(du,u,p,t)
  du[<span class="pl-c1">1</span>] <span class="pl-k">=</span> u[<span class="pl-c1">2</span>]
  du[<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-k">-</span>u[<span class="pl-c1">1</span>]
<span class="pl-k">end</span>
prob <span class="pl-k">=</span> <span class="pl-c1">ODEProblem</span>(f,u0,(<span class="pl-c1">0.0</span>,<span class="pl-c1">100.0</span>))</pre></div>
<p dir="auto">However, this problem is supposed to conserve energy, and thus we define our manifold
to conserve the sum of squares:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function g(resid,u,p,t)
  resid[1] = u[2]^2 + u[1]^2 - 2
  resid[2] = 0
end"><pre><span class="pl-k">function</span> <span class="pl-en">g</span>(resid,u,p,t)
  resid[<span class="pl-c1">1</span>] <span class="pl-k">=</span> u[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> u[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">2</span>
  resid[<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">0</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">To build the callback, we just call</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="cb = ManifoldProjection(g)"><pre>cb <span class="pl-k">=</span> <span class="pl-c1">ManifoldProjection</span>(g)</pre></div>
<p dir="auto">Using this callback, the Runge-Kutta method <code>Vern7</code> conserves energy. Note that the
standard saving occurs after the step and before the callback, and thus we set
<code>save_everystep=false</code> to turn off all standard saving and let the callback
save after the projection is applied.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="sol = solve(prob,Vern7(),save_everystep=false,callback=cb)
@test sol[end][1]^2 + sol[end][2]^2 ≈ 2"><pre>sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob,<span class="pl-c1">Vern7</span>(),save_everystep<span class="pl-k">=</span><span class="pl-c1">false</span>,callback<span class="pl-k">=</span>cb)
<span class="pl-c1">@test</span> sol[<span class="pl-c1">end</span>][<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> sol[<span class="pl-c1">end</span>][<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">≈</span> <span class="pl-c1">2</span></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/1814174/184501895-38f081b6-3d7a-434c-adca-63b6b36a315c.png"><img src="https://user-images.githubusercontent.com/1814174/184501895-38f081b6-3d7a-434c-adca-63b6b36a315c.png" alt="manifold_projection" style="max-width: 100%;"></a></p>
</article></div>