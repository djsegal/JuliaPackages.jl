<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-typographicunits" class="anchor" aria-hidden="true" href="#typographicunits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TypographicUnits</h1>
<p>A supplemental units package for
<a href="https://github.com/ajkeller34/Unitful.jl">Unitful</a>, for dealing with
typographic units. For example:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">1</span>pt <span class="pl-k">+</span> <span class="pl-c1">1</span>pc <span class="pl-k">|&gt;</span> bp
<span class="pl-c1">10400</span><span class="pl-k">//</span><span class="pl-c1">803</span> bp</pre></div>
<p>The preferred length dimension is set to <code>pt</code>, so as not to end up with meters
if you mix in <code>cm</code> or <code>mm</code> (from <code>Unitful.DefaultSymbols</code>):</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">1</span>cm <span class="pl-k">+</span> <span class="pl-c1">1</span>pt
<span class="pl-c1">7481</span><span class="pl-k">//</span><span class="pl-c1">254</span> pt</pre></div>
<p>For absolute units like <code>pt</code>, <code>dd</code>, etc., that's basically all there is to it.
Relative units like the <code>em</code> provide more of a challenge, as their definition
depends on the current font, wherever a given measurement is to be used.
<code>TypographicUnits</code> makes no assumptions here, and rather treats
incommensurable relative units as separate “length-like” dimensions.</p>
<p>Thus, where <code>1pc - 6pt</code> yields <code>6pt</code>, for example, the relative units don't
mix:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">1</span>pt <span class="pl-k">+</span> <span class="pl-c1">1</span>em
<span class="pl-c1">1</span> pt <span class="pl-k">+</span> <span class="pl-c1">1</span> em</pre></div>
<p>Constructing such a mixed length will promote the values to the same
underlying scalar type:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">1.0</span>pt <span class="pl-k">+</span> <span class="pl-c1">1</span>em
<span class="pl-c1">1.0</span> pt <span class="pl-k">+</span> <span class="pl-c1">1.0</span> em</pre></div>
<p>They can also be multiplied by (or divided by) real numbers:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> (<span class="pl-c1">6</span>pt <span class="pl-k">+</span> <span class="pl-c1">12</span>em)<span class="pl-k">/</span><span class="pl-c1">2</span>
<span class="pl-c1">3.0</span> pt <span class="pl-k">+</span> <span class="pl-c1">6.0</span> em</pre></div>
<p>There are currently separate length-like dimensions defined for the units
<code>em</code>, <code>ex</code> and <code>px</code>. (The last relative unit defined, the <code>en</code>, is set to half
an <code>em</code>, and thus shares its dimension.)</p>
<p>If you want to do advanced calculations, you should probably do so before
combining values into a mixed length. Many computations don't really make
sense for the combinations. For example, what is <code>abs(1em - 10pt)</code>? If <code>1em ≥ 10pt</code>, then it's simply <code>1em - 10pt</code>; otherwise, it's <code>10pt - 1em</code>. Since we
don't know their relative sizes, we can't meaningfully give an answer. Other
functions (such as <code>sqrt</code> or <code>sin</code>) aren't distributive, for one, and change
the units so they no longer fall within the purview of the mixed length type.
For convenience, however, the <code>float</code> function is available, in case one wants
to get rid of rationals:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">3</span>cm <span class="pl-k">+</span> <span class="pl-c1">4</span>pt <span class="pl-k">+</span> <span class="pl-c1">4</span>em
<span class="pl-c1">22697</span><span class="pl-k">//</span><span class="pl-c1">254</span> pt <span class="pl-k">+</span> <span class="pl-c1">4</span><span class="pl-k">//</span><span class="pl-c1">1</span> em
julia<span class="pl-k">&gt;</span> <span class="pl-c1">float</span>(<span class="pl-c1">3</span>cm <span class="pl-k">+</span> <span class="pl-c1">4</span>pt <span class="pl-k">+</span> <span class="pl-c1">4</span>em)
<span class="pl-c1">89.35826771653544</span> pt <span class="pl-k">+</span> <span class="pl-c1">4.0</span> em</pre></div>
</article></div>