<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-geodataframes" class="anchor" aria-hidden="true" href="#geodataframes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GeoDataFrames</h1>
<p dir="auto"><a href="https://evetion.github.io/GeoDataFrames.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://evetion.github.io/GeoDataFrames.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/evetion/GeoDataFrames.jl/actions/workflows/ci.yml"><img src="https://github.com/evetion/GeoDataFrames.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/evetion/GeoDataFrames.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8f0f275fd2d16c583d969ba1b220f7c1acdb0e54ef4353e258a098a378f586b0/68747470733a2f2f636f6465636f762e696f2f67682f65766574696f6e2f47656f446174614672616d65732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d3338514a415837483949" alt="codecov" data-canonical-src="https://codecov.io/gh/evetion/GeoDataFrames.jl/branch/master/graph/badge.svg?token=38QJAX7H9I" style="max-width: 100%;"></a></p>
<p dir="auto">Simple geographical vector interaction built on top of <a href="https://github.com/yeesian/ArchGDAL.jl/">ArchGDAL</a>. Inspiration from <a href="https://geopandas.org/en/stable/" rel="nofollow">geopandas</a>.</p>
<p dir="auto">Some basic examples without explanation follow here, for a complete overview, please check the <a href="https://evetion.github.io/GeoDataFrames.jl/stable" rel="nofollow">documentation</a>.</p>
<h1 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="]add GeoDataFrames"><pre>]add GeoDataFrames</pre></div>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<p dir="auto">There's no special type here. You just use normal <code>DataFrame</code>s with a <code>Vector</code> of ArchGDAL geometries as a column.</p>
<h2 dir="auto"><a id="user-content-reading" class="anchor" aria-hidden="true" href="#reading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reading</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import GeoDataFrames as GDF
df = GDF.read(&quot;test_points.shp&quot;)
10×2 DataFrame
 Row │ geometry            name
     │ IGeometr…           String
─────┼────────────────────────────
   1 │ Geometry: wkbPoint  test
   2 │ Geometry: wkbPoint  test
   3 │ Geometry: wkbPoint  test
   4 │ Geometry: wkbPoint  test
   5 │ Geometry: wkbPoint  test
   6 │ Geometry: wkbPoint  test
   7 │ Geometry: wkbPoint  test
   8 │ Geometry: wkbPoint  test
   9 │ Geometry: wkbPoint  test
  10 │ Geometry: wkbPoint  test"><pre><span class="pl-k">import</span> GeoDataFrames <span class="pl-k">as</span> GDF
df <span class="pl-k">=</span> GDF<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>test_points.shp<span class="pl-pds">"</span></span>)
<span class="pl-c1">10</span><span class="pl-k">×</span><span class="pl-c1">2</span> DataFrame
 Row │ geometry            name
     │ IGeometr…           String
─────┼────────────────────────────
   <span class="pl-c1">1</span> │ Geometry<span class="pl-k">:</span> wkbPoint  test
   <span class="pl-c1">2</span> │ Geometry<span class="pl-k">:</span> wkbPoint  test
   <span class="pl-c1">3</span> │ Geometry<span class="pl-k">:</span> wkbPoint  test
   <span class="pl-c1">4</span> │ Geometry<span class="pl-k">:</span> wkbPoint  test
   <span class="pl-c1">5</span> │ Geometry<span class="pl-k">:</span> wkbPoint  test
   <span class="pl-c1">6</span> │ Geometry<span class="pl-k">:</span> wkbPoint  test
   <span class="pl-c1">7</span> │ Geometry<span class="pl-k">:</span> wkbPoint  test
   <span class="pl-c1">8</span> │ Geometry<span class="pl-k">:</span> wkbPoint  test
   <span class="pl-c1">9</span> │ Geometry<span class="pl-k">:</span> wkbPoint  test
  <span class="pl-c1">10</span> │ Geometry<span class="pl-k">:</span> wkbPoint  test</pre></div>
<p dir="auto">You can also specify the layer index or layer name in opening, useful if there are multiple layers:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="GDF.read(&quot;test_points.shp&quot;, 0)
GDF.read(&quot;test_points.shp&quot;, &quot;test_points&quot;)"><pre>GDF<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>test_points.shp<span class="pl-pds">"</span></span>, <span class="pl-c1">0</span>)
GDF<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>test_points.shp<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>test_points<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Any keywords arguments are passed on to the underlying ArchGDAL <a href="https://yeesian.com/ArchGDAL.jl/dev/reference/#ArchGDAL.read-Tuple%7BAbstractString%7D" rel="nofollow"><code>read</code></a> function:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="GDF.read(&quot;test.csv&quot;, options=[&quot;GEOM_POSSIBLE_NAMES=point,linestring&quot;, &quot;KEEP_GEOM_COLUMNS=NO&quot;])"><pre>GDF<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>test.csv<span class="pl-pds">"</span></span>, options<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>GEOM_POSSIBLE_NAMES=point,linestring<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>KEEP_GEOM_COLUMNS=NO<span class="pl-pds">"</span></span>])</pre></div>
<h2 dir="auto"><a id="user-content-writing" class="anchor" aria-hidden="true" href="#writing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Writing</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DataFrames

coords = zip(rand(10), rand(10))
df = DataFrame(geometry=createpoint.(coords), name=&quot;test&quot;);
GDF.write(&quot;test_points.shp&quot;, df)"><pre><span class="pl-k">using</span> DataFrames

coords <span class="pl-k">=</span> <span class="pl-c1">zip</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">10</span>), <span class="pl-c1">rand</span>(<span class="pl-c1">10</span>))
df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(geometry<span class="pl-k">=</span><span class="pl-c1">createpoint</span>.(coords), name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>);
GDF<span class="pl-k">.</span><span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">"</span>test_points.shp<span class="pl-pds">"</span></span>, df)</pre></div>
<p dir="auto">You can also set options such as the layer_name, coordinate reference system, the <a href="https://gdal.org/drivers/vector/" rel="nofollow">driver</a> and its options:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import GeoFormatTypes as GFT
GDF.write(&quot;test_points.shp&quot;, df; layer_name=&quot;data&quot;, crs=GFT.EPSG(4326), driver=&quot;FlatGeoBuf&quot;, options=Dict(&quot;SPATIAL_INDEX&quot;=&gt;&quot;YES&quot;))"><pre><span class="pl-k">import</span> GeoFormatTypes <span class="pl-k">as</span> GFT
GDF<span class="pl-k">.</span><span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">"</span>test_points.shp<span class="pl-pds">"</span></span>, df; layer_name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span>, crs<span class="pl-k">=</span>GFT<span class="pl-k">.</span><span class="pl-c1">EPSG</span>(<span class="pl-c1">4326</span>), driver<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>FlatGeoBuf<span class="pl-pds">"</span></span>, options<span class="pl-k">=</span><span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>SPATIAL_INDEX<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>YES<span class="pl-pds">"</span></span>))</pre></div>
<p dir="auto">Note that any Tables.jl compatible table with GeoInterface.jl compatible geometries can be written by GeoDataFrames. You might want
to pass which column(s) contain geometries, or by defining <code>GeoInterface.geometrycolumns</code> on your table. Multiple geometry columns,
when enabled by the driver, can be provided in this way.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="table = [(; geom=AG.createpoint(1.0, 2.0), name=&quot;test&quot;)]
GDF.write(tfn, table; geom_columns=(:geom,),)"><pre>table <span class="pl-k">=</span> [(; geom<span class="pl-k">=</span>AG<span class="pl-k">.</span><span class="pl-c1">createpoint</span>(<span class="pl-c1">1.0</span>, <span class="pl-c1">2.0</span>), name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>)]
GDF<span class="pl-k">.</span><span class="pl-c1">write</span>(tfn, table; geom_columns<span class="pl-k">=</span>(<span class="pl-c1">:geom</span>,),)</pre></div>
<h2 dir="auto"><a id="user-content-operations" class="anchor" aria-hidden="true" href="#operations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Operations</h2>
<p dir="auto">The supported operations are the ArchGDAL operations that are exported again to work on Vectors of geometries as well.
Hence, if you can apply all the <a href="https://yeesian.com/ArchGDAL.jl/stable/geometries/" rel="nofollow">ArchGDAL operations</a> yourself.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="df.geom = buffer(df.geom, 10);  # points turn into polygons
df
10×2 DataFrame
 Row │ geometry              name
     │ IGeometr…             String
─────┼──────────────────────────────
   1 │ Geometry: wkbPolygon  test
   2 │ Geometry: wkbPolygon  test
   3 │ Geometry: wkbPolygon  test
   4 │ Geometry: wkbPolygon  test
   5 │ Geometry: wkbPolygon  test
   6 │ Geometry: wkbPolygon  test
   7 │ Geometry: wkbPolygon  test
   8 │ Geometry: wkbPolygon  test
   9 │ Geometry: wkbPolygon  test
  10 │ Geometry: wkbPolygon  test"><pre>df<span class="pl-k">.</span>geom <span class="pl-k">=</span> <span class="pl-c1">buffer</span>(df<span class="pl-k">.</span>geom, <span class="pl-c1">10</span>);  <span class="pl-c"><span class="pl-c">#</span> points turn into polygons</span>
df
<span class="pl-c1">10</span><span class="pl-k">×</span><span class="pl-c1">2</span> DataFrame
 Row │ geometry              name
     │ IGeometr…             String
─────┼──────────────────────────────
   <span class="pl-c1">1</span> │ Geometry<span class="pl-k">:</span> wkbPolygon  test
   <span class="pl-c1">2</span> │ Geometry<span class="pl-k">:</span> wkbPolygon  test
   <span class="pl-c1">3</span> │ Geometry<span class="pl-k">:</span> wkbPolygon  test
   <span class="pl-c1">4</span> │ Geometry<span class="pl-k">:</span> wkbPolygon  test
   <span class="pl-c1">5</span> │ Geometry<span class="pl-k">:</span> wkbPolygon  test
   <span class="pl-c1">6</span> │ Geometry<span class="pl-k">:</span> wkbPolygon  test
   <span class="pl-c1">7</span> │ Geometry<span class="pl-k">:</span> wkbPolygon  test
   <span class="pl-c1">8</span> │ Geometry<span class="pl-k">:</span> wkbPolygon  test
   <span class="pl-c1">9</span> │ Geometry<span class="pl-k">:</span> wkbPolygon  test
  <span class="pl-c1">10</span> │ Geometry<span class="pl-k">:</span> wkbPolygon  test</pre></div>
<h3 dir="auto"><a id="user-content-reprojection" class="anchor" aria-hidden="true" href="#reprojection"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reprojection</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import GeoFormatTypes as GFT
df.geometry = reproject(df.geometry, GFT.EPSG(4326), GFT.EPSG(28992))
10-element Vector{ArchGDAL.IGeometry{ArchGDAL.wkbPolygon}}:
 Geometry: POLYGON ((-472026.042542408 -4406233.59953401,-537 ... 401))
 Geometry: POLYGON ((-417143.506054105 -4395423.99277048,-482 ... 048))
 Geometry: POLYGON ((-450303.142569437 -4301418.89063867,-515 ... 867))
 Geometry: POLYGON ((-434522.645535154 -4351075.81124634,-500 ... 634))
 Geometry: POLYGON ((-443909.665585927 -4412565.43193349,-509 ... 349))
 Geometry: POLYGON ((-438405.666500747 -4299366.23767677,-503 ... 677))
 Geometry: POLYGON ((-400588.951193713 -4365333.532287,-46626 ... 287))
 Geometry: POLYGON ((-409160.489179734 -4388484.98554538,-474 ... 538))
 Geometry: POLYGON ((-453963.150526169 -4408927.89965336,-519 ... 336))
 Geometry: POLYGON ((-498317.413693272 -4321687.31588764,-563 ... 764))"><pre><span class="pl-k">import</span> GeoFormatTypes <span class="pl-k">as</span> GFT
df<span class="pl-k">.</span>geometry <span class="pl-k">=</span> <span class="pl-c1">reproject</span>(df<span class="pl-k">.</span>geometry, GFT<span class="pl-k">.</span><span class="pl-c1">EPSG</span>(<span class="pl-c1">4326</span>), GFT<span class="pl-k">.</span><span class="pl-c1">EPSG</span>(<span class="pl-c1">28992</span>))
<span class="pl-c1">10</span><span class="pl-k">-</span>element Vector{ArchGDAL<span class="pl-k">.</span>IGeometry{ArchGDAL<span class="pl-k">.</span>wkbPolygon}}<span class="pl-k">:</span>
 Geometry<span class="pl-k">:</span> POLYGON ((<span class="pl-k">-</span><span class="pl-c1">472026.042542408</span> <span class="pl-k">-</span><span class="pl-c1">4406233.59953401</span>,<span class="pl-k">-</span><span class="pl-c1">537</span> <span class="pl-k">...</span> <span class="pl-c1">401</span>))
 Geometry<span class="pl-k">:</span> POLYGON ((<span class="pl-k">-</span><span class="pl-c1">417143.506054105</span> <span class="pl-k">-</span><span class="pl-c1">4395423.99277048</span>,<span class="pl-k">-</span><span class="pl-c1">482</span> <span class="pl-k">...</span> <span class="pl-c1">048</span>))
 Geometry<span class="pl-k">:</span> POLYGON ((<span class="pl-k">-</span><span class="pl-c1">450303.142569437</span> <span class="pl-k">-</span><span class="pl-c1">4301418.89063867</span>,<span class="pl-k">-</span><span class="pl-c1">515</span> <span class="pl-k">...</span> <span class="pl-c1">867</span>))
 Geometry<span class="pl-k">:</span> POLYGON ((<span class="pl-k">-</span><span class="pl-c1">434522.645535154</span> <span class="pl-k">-</span><span class="pl-c1">4351075.81124634</span>,<span class="pl-k">-</span><span class="pl-c1">500</span> <span class="pl-k">...</span> <span class="pl-c1">634</span>))
 Geometry<span class="pl-k">:</span> POLYGON ((<span class="pl-k">-</span><span class="pl-c1">443909.665585927</span> <span class="pl-k">-</span><span class="pl-c1">4412565.43193349</span>,<span class="pl-k">-</span><span class="pl-c1">509</span> <span class="pl-k">...</span> <span class="pl-c1">349</span>))
 Geometry<span class="pl-k">:</span> POLYGON ((<span class="pl-k">-</span><span class="pl-c1">438405.666500747</span> <span class="pl-k">-</span><span class="pl-c1">4299366.23767677</span>,<span class="pl-k">-</span><span class="pl-c1">503</span> <span class="pl-k">...</span> <span class="pl-c1">677</span>))
 Geometry<span class="pl-k">:</span> POLYGON ((<span class="pl-k">-</span><span class="pl-c1">400588.951193713</span> <span class="pl-k">-</span><span class="pl-c1">4365333.532287</span>,<span class="pl-k">-</span><span class="pl-c1">46626</span> <span class="pl-k">...</span> <span class="pl-c1">287</span>))
 Geometry<span class="pl-k">:</span> POLYGON ((<span class="pl-k">-</span><span class="pl-c1">409160.489179734</span> <span class="pl-k">-</span><span class="pl-c1">4388484.98554538</span>,<span class="pl-k">-</span><span class="pl-c1">474</span> <span class="pl-k">...</span> <span class="pl-c1">538</span>))
 Geometry<span class="pl-k">:</span> POLYGON ((<span class="pl-k">-</span><span class="pl-c1">453963.150526169</span> <span class="pl-k">-</span><span class="pl-c1">4408927.89965336</span>,<span class="pl-k">-</span><span class="pl-c1">519</span> <span class="pl-k">...</span> <span class="pl-c1">336</span>))
 Geometry<span class="pl-k">:</span> POLYGON ((<span class="pl-k">-</span><span class="pl-c1">498317.413693272</span> <span class="pl-k">-</span><span class="pl-c1">4321687.31588764</span>,<span class="pl-k">-</span><span class="pl-c1">563</span> <span class="pl-k">...</span> <span class="pl-c1">764</span>))</pre></div>
<h2 dir="auto"><a id="user-content-plotting" class="anchor" aria-hidden="true" href="#plotting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plotting</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Plots
plot(df.geometry)"><pre><span class="pl-k">using</span> Plots
<span class="pl-c1">plot</span>(df<span class="pl-k">.</span>geometry)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="img/plot_points.png"><img src="img/plot_points.png" alt="image" style="max-width: 100%;"></a></p>
</article></div>