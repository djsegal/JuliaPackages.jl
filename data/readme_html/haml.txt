<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-hamljl" class="anchor" aria-hidden="true" href="#hamljl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>HAML.jl</h1>
<p dir="auto"><a href="https://tkluck.github.io/HAML.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">HTML Abstract Markup Language for Julia. Inspired by <a href="http://haml.info/" rel="nofollow">Ruby's HAML</a>.</p>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Test coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://github.com/tkluck/HAML.jl/actions?query=workflow%3ACI"><img src="https://github.com/tkluck/HAML.jl/workflows/CI/badge.svg" alt="" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/tkluck/HAML.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e4091ab0f30684d186becce46469d76caf88fc7af184d48f3ebf6113e108ffe7/68747470733a2f2f636f6465636f762e696f2f67682f746b6c75636b2f48414d4c2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage Status" data-canonical-src="https://codecov.io/gh/tkluck/HAML.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Synopsis</h2>
<p dir="auto">The easiest way to use HAML in Julia is in the form of the <code>haml""</code> macro.
Just write your HAML code in-line and it will expand to a string:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using HAML

julia&gt; link = &quot;https://youtu.be/dQw4w9WgXcQ&quot;

julia&gt; haml&quot;&quot;&quot;
       %html
         %body
           %a(href=link) Hello, world!
       &quot;&quot;&quot; |&gt; print
&lt;html&gt;
  &lt;body&gt;
    &lt;a href='https://youtu.be/dQw4w9WgXcQ'&gt;Hello, world!&lt;/a&gt;
  &lt;/body&gt;
&lt;/html&gt;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> HAML

julia<span class="pl-k">&gt;</span> link <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>https://youtu.be/dQw4w9WgXcQ<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">haml</span>"""</span></span>
<span class="pl-s">       %html</span>
<span class="pl-s">         %body</span>
<span class="pl-s">           %a(href=link) Hello, world!</span>
<span class="pl-s">       <span class="pl-pds">"""</span></span> <span class="pl-k">|&gt;</span> print
<span class="pl-k">&lt;</span>html<span class="pl-k">&gt;</span>
  <span class="pl-k">&lt;</span>body<span class="pl-k">&gt;</span>
    <span class="pl-k">&lt;</span>a href<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>https://youtu.be/dQw4w9WgXcQ<span class="pl-pds">'</span></span><span class="pl-k">&gt;</span>Hello, world!<span class="pl-k">&lt;</span><span class="pl-k">/</span>a<span class="pl-k">&gt;</span>
  <span class="pl-k">&lt;</span><span class="pl-k">/</span>body<span class="pl-k">&gt;</span>
<span class="pl-k">&lt;</span><span class="pl-k">/</span>html<span class="pl-k">&gt;</span></pre></div>
<p dir="auto">It is also possible to store HAML in a file and execute it from there:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; write(&quot;/tmp/test.hamljl&quot;, &quot;&quot;&quot;
       %html
          %body
             %a(href=\$link)= \$greeting
       &quot;&quot;&quot;)
47

julia&gt; render(stdout, &quot;/tmp/test.hamljl&quot;, variables=(link=link, greeting=&quot;Hello, world!&quot;,))
&lt;html&gt;
   &lt;body&gt;
      &lt;a href='https://youtu.be/dQw4w9WgXcQ'&gt;Hello, world&amp;#33;&lt;/a&gt;
   &lt;/body&gt;
&lt;/html&gt;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">"</span>/tmp/test.hamljl<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">       %html</span>
<span class="pl-s">          %body</span>
<span class="pl-s">             %a(href=<span class="pl-cce">\$</span>link)= <span class="pl-cce">\$</span>greeting</span>
<span class="pl-s">       <span class="pl-pds">"""</span></span>)
<span class="pl-c1">47</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">render</span>(<span class="pl-c1">stdout</span>, <span class="pl-s"><span class="pl-pds">"</span>/tmp/test.hamljl<span class="pl-pds">"</span></span>, variables<span class="pl-k">=</span>(link<span class="pl-k">=</span>link, greeting<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Hello, world!<span class="pl-pds">"</span></span>,))
<span class="pl-k">&lt;</span>html<span class="pl-k">&gt;</span>
   <span class="pl-k">&lt;</span>body<span class="pl-k">&gt;</span>
      <span class="pl-k">&lt;</span>a href<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>https://youtu.be/dQw4w9WgXcQ<span class="pl-pds">'</span></span><span class="pl-k">&gt;</span>Hello, world<span class="pl-k">&amp;</span><span class="pl-c"><span class="pl-c">#</span>33;&lt;/a&gt;</span>
   <span class="pl-k">&lt;</span><span class="pl-k">/</span>body<span class="pl-k">&gt;</span>
<span class="pl-k">&lt;</span><span class="pl-k">/</span>html<span class="pl-k">&gt;</span></pre></div>
<p dir="auto">In this case, note that input variables need to be quoted with a dollar sign <code>$</code>.
This distinguishes them from file-local variables.</p>
<h2 dir="auto"><a id="user-content-syntax" class="anchor" aria-hidden="true" href="#syntax"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Syntax</h2>
<p dir="auto">If you are already familiar with Ruby-flavoured HAML, <a href="https://tkluck.github.io/HAML.jl/stable/fromruby/" rel="nofollow">read about the
differences here</a>. If not, either use read the <a href="https://tkluck.github.io/HAML.jl/stable/getting-started/" rel="nofollow">getting started guide</a>
or the <a href="https://tkluck.github.io/HAML.jl/stable/syntax/" rel="nofollow">syntax reference</a>.</p>
</article></div>