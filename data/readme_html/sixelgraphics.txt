<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-sixelgraphics" class="anchor" aria-hidden="true" href="#sixelgraphics"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>SixelGraphics</h1>
<p>A module for Julia implementing simple Sixel graphics using XTerm
(or another terminal capable of displaying Sixel graphics).
XTerm needs to be compiled with --enable-sixel-graphics, run
with the "-ti 340" option, and with sixelScrolling enabled.</p>
<p>The module exports (some inspiration was drawn from R's plot()):</p>
<p>function sixelplot(x=[], y=[]; title="", xlab="x", ylab="f(x)",
xsize=384, ysize=288,
xlim=[0,0], ylim=[0,0],
typ='l', pch=1, clr=2, dclr=[-1,-1,-1],
showframe=true, showlogo=false, showsixels=true)</p>
<p>which returns a screen, which may be used for adding another plot:</p>
<p>function sixelplot(s::Screen, x=[], y=[]; typ='l', pch=2,
clr=3, dclr=[-1,-1,-1], showsixels=true)</p>
<p>where the showsixels option may be used to show only a final plot.</p>
<p>Sixel graphics do six lines at a time and therefore ysize is best a
multiple of six. The console font used is eight bits heigh.</p>
<p>Just a few plotting characters are currently defined. pch=0 is a pixel,
and pch&lt;0 plots ASCII characters starting from 'a'.</p>
<p>The (emulated) VT340 has a palette of 16 colors. Color 1 is used for
the frame. Parameter clr is used for the plot. The color may be
defined with parameter dclr, which are the RGB colors in the range 0..100.</p>
<p>The file in the "test" directory provides a few examples; the output
of the first one was converted to file "logo.png".</p>
<p>Disclaimer: The author was just beginning to learn Julia while writing
this module.</p>
</article></div>