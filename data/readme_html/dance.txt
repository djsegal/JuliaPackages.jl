<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-dance" class="anchor" aria-hidden="true" href="#dance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Dance</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://travis-ci.com/DanceJL/Dance.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/62bb8f48b10973a33d39074b9255f402961e2e3d/68747470733a2f2f7472617669732d63692e636f6d2f44616e63654a4c2f44616e63652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/DanceJL/Dance.jl.svg?branch=master" style="max-width:100%;"></a>  <a href="https://codecov.io/gh/DanceJL/Dance.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/de43155194241ec6b1edcb15362ba396c36ae745/68747470733a2f2f636f6465636f762e696f2f67682f44616e63654a4c2f44616e63652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/DanceJL/Dance.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-1---introduction" class="anchor" aria-hidden="true" href="#1---introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>1 - Introduction</h2>
<p>Julia is an excellent backend language (<a href="https://cloud4scieng.org/2018/12/13/julia-distributed-computing-in-the-cloud/" rel="nofollow">read more</a>), powering numerous Artificial Intelligence and Big Data applications.
However integrating these results into web output is not job of a data scientist, nor should it be complicated.</p>
<p>That said, aim of Dance is to facilitate process by allowing output/reception of:</p>
<ul>
<li>Dict {Symbol, Any}</li>
<li>DataFrame</li>
</ul>
<p>to/from:</p>
<ul>
<li>JSON API</li>
<li>Javascript string in HTML page</li>
</ul>
<p>simply by adding rendering function as a parameter, when building route list.</p>
<p>That way you can take advantage of powerful frontend JavaScript frameworks, through easy collaboration with frontend developers.</p>
<p>Dance can be used as starting base of new project, as well as web layer addition to existing project.</p>
<hr>
<h2><a id="user-content-2---installation" class="anchor" aria-hidden="true" href="#2---installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>2 - Installation</h2>
<p>Package can be installed with Julia's package manager, either by using Pkg REPL mode (<em>press ]</em>):</p>
<pre><code>pkg&gt; add https://github.com/DanceJL/Dance.jl
</code></pre>
<p>or by using Pkg functions</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/DanceJL/Dance.jl<span class="pl-pds">"</span></span>)</pre></div>
<p>Compatibility is with Julia 1.1 upward.</p>
<h2><a id="user-content-3---setup" class="anchor" aria-hidden="true" href="#3---setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>3 - Setup</h2>
<p>Invoke terminal in working directory and:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Dance
<span class="pl-c1">start_project</span>(<span class="pl-s"><span class="pl-pds">"</span>project name<span class="pl-pds">"</span></span>)</pre></div>
<p>This will create a new directory specified by <code>project name</code> parameter and copy necessary files over.</p>
<p>Files include:</p>
<ul>
<li><code>dance.jl</code> : main entry point of Dance to be always called from terminal</li>
<li><code>routes.jl</code> : main routes list file</li>
<li><code>settings/Global.jl</code> : main project settings</li>
<li><code>html/base.html</code> : for HTML outputs this is default template</li>
</ul>
<p>Depending on environment, other files can be included under <code>settings</code> directory to overwrite those under <code>Global.jl</code>:</p>
<ul>
<li>
<p>One can add other parameters under these settings files, that will be accessible in project by reading <code>Dance.Configuration.Settings</code> dict.</p>
</li>
<li>
<p>As this has to be done from same <code>import Dance</code> as launch of project, best to do under <code>dance.jl</code> file as follows:</p>
<div class="highlight highlight-source-julia"><pre> <span class="pl-c"><span class="pl-c">#</span># Add custom scripts here that need be run before launching Dance ##</span>
 <span class="pl-k">function</span> <span class="pl-en">populate</span>(dict<span class="pl-k">::</span><span class="pl-c1">Dict</span>)
 <span class="pl-k">for</span> (key, value) <span class="pl-k">in</span> dict
     ENV[<span class="pl-c1">String</span>(key)] <span class="pl-k">=</span> value
 <span class="pl-k">end</span>
 <span class="pl-k">end</span>

 <span class="pl-c1">populate</span>(Dance<span class="pl-k">.</span>Configuration<span class="pl-k">.</span>Settings)</pre></div>
</li>
<li>
<p><strong>Is recommended to use <code>secrets.jl</code> file included under <code>Global.jl</code> that will not be stored in version control, for sensitive authentication data.</strong></p>
</li>
</ul>
<p>Can be overwritten/moved:</p>
<ul>
<li><code>routes.jl</code>: move/rename and update <code>Settings[:routes_filename]</code> accordingly</li>
<li><code>html/base.html</code>: move/rename and update <code>Settings[:html_base_filename]</code> accordingly</li>
</ul>
<h2><a id="user-content-4---routes" class="anchor" aria-hidden="true" href="#4---routes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>4 - Routes</h2>
<p>Routes can be included in main routes file (<code>routes.jl</code> by default), as follows:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">route</span>(path<span class="pl-k">::</span><span class="pl-c1">Union{Regex, String}</span>, action<span class="pl-k">::</span><span class="pl-c1">Function</span>; method<span class="pl-k">::</span><span class="pl-c1">String</span><span class="pl-k">=</span>POST, endpoint<span class="pl-k">=</span>JSON, html_file<span class="pl-k">::</span><span class="pl-c1">String</span><span class="pl-k">=</span>Configuration<span class="pl-k">.</span>Settings[<span class="pl-c1">:html_base_filename</span>]<span class="pl-k">*</span><span class="pl-s"><span class="pl-pds">"</span>.html<span class="pl-pds">"</span></span>, name<span class="pl-k">::</span><span class="pl-c1">Union{Symbol,Nothing}</span><span class="pl-k">=</span><span class="pl-c1">nothing</span>)</pre></div>
<ul>
<li>Just <code>path</code>and <code>function</code> are mandatory, <em>kwargs</em> can overwrite default values as necessary.</li>
</ul>
<p>That said, note that:</p>
<ul>
<li><code>path</code> can either be fixed string or contain PCRE regex containing parameter names.</li>
<li>Adding an ending slash (<code>/</code>) tp <code>path</code> is optional, as incoming requests will have pending slash stripped.</li>
<li>Named urls are possible by specifying <code>name</code>, though including them in static HTML output is a pending feature.</li>
</ul>
<p>Please see:</p>
<ul>
<li><a href="docs/routes/common_parameters.md">Common Parameters</a></li>
<li><a href="docs/routes/endoints_json.md">JSON Endpoints</a></li>
<li><a href="docs/routes/endpoints_html.md">HTML Endpoints</a></li>
</ul>
<p>for all cases.</p>
<h2><a id="user-content-5---launching" class="anchor" aria-hidden="true" href="#5---launching"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>5 - Launching</h2>
<p>Calling:</p>
<pre><code>julia dance.jl
</code></pre>
<p>will start Dance as web server.
Press <code>ctrl</code> + <code>c</code> to stop.</p>
<p>By calling:</p>
<pre><code>julia dance.jl repl
</code></pre>
<p>one can enter REPL mode after project environment has been loaded.
Press <code>ctrl</code> + <code>d</code> to exit.</p>
<h2><a id="user-content-6---module-loading--custom-startup-script" class="anchor" aria-hidden="true" href="#6---module-loading--custom-startup-script"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>6 - Module loading &amp; custom startup script</h2>
<p>Note that when launching, Dance will add current dir as module import path.</p>
<p>Should you require to load modules from other locations or run a custom startup script, once can add that by editing <code>dance.jl</code> as specified within file.</p>
</article></div>