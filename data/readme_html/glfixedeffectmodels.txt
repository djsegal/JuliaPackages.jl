<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-glfixedeffectmodelsjl" class="anchor" aria-hidden="true" href="#glfixedeffectmodelsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GLFixedEffectModels.jl</h1>

<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/jmboehm/GLFixedEffectModels.jl/actions/workflows/ci.yml/badge.svg?branch=master"><img src="https://github.com/jmboehm/GLFixedEffectModels.jl/actions/workflows/ci.yml/badge.svg?branch=master" alt="example branch parameter" style="max-width: 100%;"></a> <a href="http://codecov.io/github/jmboehm/GLFixedEffectModels.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/49e59ae1541407630d1dcac316e1db720c1d815b55c85f2aba5dd4c4a1f85fc4/687474703a2f2f636f6465636f762e696f2f6769746875622f6a6d626f65686d2f474c46697865644566666563744d6f64656c732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/jmboehm/GLFixedEffectModels.jl/coverage.svg?branch=master" style="max-width: 100%;"></a> <a href="https://zenodo.org/badge/latestdoi/164128032" rel="nofollow"><img src="https://camo.githubusercontent.com/ba391e1f6c3864effa77b7d9efcf3f779bbb2a28e874a93960b0050ab482df54/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3136343132383033322e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/164128032.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package estimates generalized linear models with high dimensional categorical variables. It builds on Matthieu Gomez's <a href="https://github.com/FixedEffects/FixedEffects.jl">FixedEffects.jl</a>, Amrei Stammann's <a href="https://github.com/amrei-stammann/alpaca">Alpaca</a>, and Sergio Correia's <a href="https://github.com/sergiocorreia/ppmlhdfe">ppmlhdfe</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="] add GLFixedEffectModels"><pre class="notranslate"><code>] add GLFixedEffectModels
</code></pre></div>
<h2 dir="auto"><a id="user-content-example-use" class="anchor" aria-hidden="true" href="#example-use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example use</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GLFixedEffectModels, GLM, Distributions
using RDatasets

df = dataset(&quot;datasets&quot;, &quot;iris&quot;)
df.binary = zeros(Float64, size(df,1))
df[df.SepalLength .&gt; 5.0,:binary] .= 1.0
df.SpeciesStr = string.(df.Species)
idx = rand(1:3,size(df,1),1)
a = [&quot;A&quot;,&quot;B&quot;,&quot;C&quot;]
df.Random = vec([a[i] for i in idx])

m = @formula binary ~ SepalWidth + fe(Species)
x = nlreg(df, m, Binomial(), LogitLink(), start = [0.2] )

m = @formula binary ~ SepalWidth + PetalLength + fe(Species)
nlreg(df, m, Binomial(), LogitLink(), Vcov.cluster(:SpeciesStr,:Random) , start = [0.2, 0.2] )"><pre><span class="pl-k">using</span> GLFixedEffectModels, GLM, Distributions
<span class="pl-k">using</span> RDatasets

df <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>datasets<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>iris<span class="pl-pds">"</span></span>)
df<span class="pl-k">.</span>binary <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(Float64, <span class="pl-c1">size</span>(df,<span class="pl-c1">1</span>))
df[df<span class="pl-k">.</span>SepalLength <span class="pl-k">.&gt;</span> <span class="pl-c1">5.0</span>,<span class="pl-c1">:binary</span>] <span class="pl-k">.=</span> <span class="pl-c1">1.0</span>
df<span class="pl-k">.</span>SpeciesStr <span class="pl-k">=</span> <span class="pl-c1">string</span>.(df<span class="pl-k">.</span>Species)
idx <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>,<span class="pl-c1">size</span>(df,<span class="pl-c1">1</span>),<span class="pl-c1">1</span>)
a <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>B<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>C<span class="pl-pds">"</span></span>]
df<span class="pl-k">.</span>Random <span class="pl-k">=</span> <span class="pl-c1">vec</span>([a[i] <span class="pl-k">for</span> i <span class="pl-k">in</span> idx])

m <span class="pl-k">=</span> <span class="pl-c1">@formula</span> binary <span class="pl-k">~</span> SepalWidth <span class="pl-k">+</span> <span class="pl-c1">fe</span>(Species)
x <span class="pl-k">=</span> <span class="pl-c1">nlreg</span>(df, m, <span class="pl-c1">Binomial</span>(), <span class="pl-c1">LogitLink</span>(), start <span class="pl-k">=</span> [<span class="pl-c1">0.2</span>] )

m <span class="pl-k">=</span> <span class="pl-c1">@formula</span> binary <span class="pl-k">~</span> SepalWidth <span class="pl-k">+</span> PetalLength <span class="pl-k">+</span> <span class="pl-c1">fe</span>(Species)
<span class="pl-c1">nlreg</span>(df, m, <span class="pl-c1">Binomial</span>(), <span class="pl-c1">LogitLink</span>(), Vcov<span class="pl-k">.</span><span class="pl-c1">cluster</span>(<span class="pl-c1">:SpeciesStr</span>,<span class="pl-c1">:Random</span>) , start <span class="pl-k">=</span> [<span class="pl-c1">0.2</span>, <span class="pl-c1">0.2</span>] )</pre></div>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<p dir="auto">The main function is <code>nlreg()</code>, which returns a <code>GLFixedEffectModel &lt;: RegressionModel</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="nlreg(df, formula::FormulaTerm,
    distribution::Distribution,
    link::GLM.Link,
    vcov::CovarianceEstimator; ...)"><pre><span class="pl-c1">nlreg</span>(df, formula<span class="pl-k">::</span><span class="pl-c1">FormulaTerm</span>,
    distribution<span class="pl-k">::</span><span class="pl-c1">Distribution</span>,
    link<span class="pl-k">::</span><span class="pl-c1">GLM.Link</span>,
    vcov<span class="pl-k">::</span><span class="pl-c1">CovarianceEstimator</span>; <span class="pl-k">...</span>)</pre></div>
<p dir="auto">The required arguments are:</p>
<ul dir="auto">
<li><code>df</code>: a Table</li>
<li><code>formula</code>: A formula created using <code>@formula</code>.</li>
<li><code>distribution</code>: A <code>Distribution</code>. See the documentation of <a href="https://juliastats.org/GLM.jl/stable/manual/#Fitting-GLM-models-1" rel="nofollow">GLM.jl</a> for valid distributions.</li>
<li><code>link</code>: A <code>GLM.Link</code> function. See the documentation of <a href="https://juliastats.org/GLM.jl/stable/manual/#Fitting-GLM-models-1" rel="nofollow">GLM.jl</a> for valid link functions.</li>
<li><code>vcov</code>: A <code>CovarianceEstimator</code> to compute the variance-covariance matrix.</li>
</ul>
<p dir="auto">The optional arguments are:</p>
<ul dir="auto">
<li><code>save::Union{Bool, Symbol} = false</code>: Should residuals and eventual estimated fixed effects saved in a dataframe? Use <code>save = :residuals</code> to only save residuals. Use <code>save = :fe</code> to only save fixed effects.</li>
<li><code>method::Symbol</code>: A symbol for the method. Default is <code>:cpu</code>. Alternatively, <code>:gpu</code> requires <code>CuArrays</code>. In this case, use the option <code>double_precision = false</code> to use <code>Float32</code>. This option is the same as for the <a href="https://github.com/FixedEffects/FixedEffectModels.jl">FixedEffectModels.jl</a> package.</li>
<li><code>double_precision::Bool = true</code>: Uses 64-bit floats if <code>true</code>, otherwise 32-bit.</li>
<li><code>drop_singletons = true</code> : drop observations that are perfectly classified.</li>
<li><code>contrasts::Dict = Dict()</code> An optional Dict of contrast codings for each categorical variable in the <code>formula</code>.  Any unspecified variables will have <code>DummyCoding</code>.</li>
<li><code>maxiter::Integer = 1000</code>: Maximum number of iterations in the Newton-Raphson routine.</li>
<li><code>maxiter_center::Integer = 10000</code>: Maximum number of iterations for centering procedure.</li>
<li><code>double_precision::Bool</code>: Should the demeaning operation use Float64 rather than Float32? Default to true.</li>
<li><code>dev_tol::Real</code> : Tolerance level for the first stopping condition of the maximization routine.</li>
<li><code>rho_tol::Real</code> : Tolerance level for the stephalving in the maximization routine.</li>
<li><code>step_tol::Real</code> : Tolerance level that accounts for rounding errors inside the stephalving routine</li>
<li><code>center_tol::Real</code> : Tolerance level for the stopping condition of the centering algorithm. Default to 1e-8 if <code>double_precision = true</code>, 1e-6 otherwise.</li>
<li><code>separation::Vector{Symbol} = Symbol[]</code> : Method to detect/deal with <a href="https://github.com/sergiocorreia/ppmlhdfe/blob/master/guides/separation_primer.md">separation</a>. Supported elements are <code>:mu</code>, <code>:fe</code>, <code>:ReLU</code>, and in the future, <code>:simplex</code>. <code>:mu</code> truncates mu at <code>separation_mu_lbound</code> or <code>separation_mu_ubound</code>. <code>:fe</code> finds categories of the fixed effects that only exist when y is at the separation point. <code>ReLU</code> detects separation using ReLU, with the maxiter being <code>separation_ReLU_maxiter</code> and tolerance being <code>separation_ReLU_tol</code>.</li>
<li><code>separation_mu_lbound::Real = -Inf</code> : Lower bound for the separation detection/correction heuristic (on mu). What a reasonable value would be depends on the model that you're trying to fit.</li>
<li><code>separation_mu_ubound::Real = Inf</code> : Upper bound for the separation detection/correction heuristic.</li>
<li><code>separation_ReLU_tol::Real = 1e-4</code> : Tolerance level for the ReLU algorithm.</li>
<li><code>separation_ReLU_maxiter::Integer = 1000</code> : Maximal number of iterations for the ReLU algorithm.</li>
<li><code>verbose::Bool = false</code> : If <code>true</code>, prints output on each iteration.</li>
</ul>
<p dir="auto">The function returns a <code>GLFixedEffectModel</code> object which supports the <code>StatsBase.RegressionModel</code> abstraction. It can be displayed in table form by using <a href="https://github.com/jmboehm/RegressionTables.jl">RegressionTables.jl</a>.</p>
<h2 dir="auto"><a id="user-content-bias-correction-methods" class="anchor" aria-hidden="true" href="#bias-correction-methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bias correction methods</h2>
<p dir="auto">The package experimentally supports bias correction methods for the following models:</p>
<ul dir="auto">
<li>Binomial regression, Logit link, Two-way, Classic (Fernández-Val and Weidner (2016, 2018))</li>
<li>Binomial regression, Probit link, Two-way, Classic (Fernández-Val and Weidner (2016, 2018))</li>
<li>Binomial regression, Logit link, Two-way, Network (Hinz, Stammann and Wanner (2020) &amp; Fernández-Val and Weidner (2016))</li>
<li>Binomial regression, Probit link, Two-way, Network (Hinz, Stammann and Wanner (2020) &amp; Fernández-Val and Weidner (2016))</li>
<li>Binomial regression, Logit link, Three-way, Network (Hinz, Stammann and Wanner (2020))</li>
<li>Binomial regression, Probit link, Three-way, Network (Hinz, Stammann and Wanner (2020))</li>
<li>Poisson regression, Log link, Three-way, Network (Weidner and Zylkin (2021))</li>
<li>Poisson regression, Log link, Two-way, Network (Weidner and Zylkin (2021))</li>
</ul>
<h2 dir="auto"><a id="user-content-things-that-still-need-to-be-implemented" class="anchor" aria-hidden="true" href="#things-that-still-need-to-be-implemented"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Things that still need to be implemented</h2>
<ul dir="auto">
<li>Better default starting values</li>
<li>Weights</li>
<li>Better StatsBase interface &amp; prediction</li>
<li>Better benchmarking</li>
</ul>
<h2 dir="auto"><a id="user-content-related-julia-packages" class="anchor" aria-hidden="true" href="#related-julia-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related Julia packages</h2>
<ul dir="auto">
<li><a href="https://github.com/FixedEffects/FixedEffectModels.jl">FixedEffectModels.jl</a> estimates linear models with high dimensional categorical variables (and with or without endogeneous regressors).</li>
<li><a href="https://github.com/FixedEffects/FixedEffects.jl">FixedEffects.jl</a> is a package for fast pseudo-demeaning operations using LSMR. Both this package and <a href="https://github.com/FixedEffects/FixedEffectModels.jl">FixedEffectModels.jl</a> build on this.</li>
<li><a href="https://github.com/jmboehm/Alpaca.jl">Alpaca.jl</a> is a wrapper to the <a href="https://github.com/amrei-stammann/alpaca">Alpaca R package</a>, which solves the same tasks as this package.</li>
<li><a href="https://github.com/JuliaStats/GLM.jl">GLM.jl</a> estimates generalized linear models, but without explicit support for categorical regressors.</li>
<li><a href="https://github.com/Nosferican/Econometrics.jl">Econometrics.jl</a> provides routines to estimate multinomial logit and other models.</li>
<li><a href="https://github.com/jmboehm/RegressionTables.jl">RegressionTables.jl</a> supports pretty printing of results from this package.</li>
</ul>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<p dir="auto">Correia, S. and Guimarães, P, and Zylkin, T., 2019. Verifying the existence of maximum likelihood estimates for generalized linear models. Working paper, <a href="https://arxiv.org/abs/1903.01633" rel="nofollow">https://arxiv.org/abs/1903.01633</a></p>
<p dir="auto">Fernández-Val, I. and Weidner, M., 2016. Individual and time effects in nonlinear panel models with large N, T. Journal of Econometrics, 192(1), pp.291-312.</p>
<p dir="auto">Fernández-Val, I. and Weidner, M., 2018. Fixed effects estimation of large-T panel data models. Annual Review of Economics, 10, pp.109-138.</p>
<p dir="auto">Fong, DC. and Saunders, M. (2011) <em>LSMR: An Iterative Algorithm for Sparse Least-Squares Problems</em>.  SIAM Journal on Scientific Computing</p>
<p dir="auto">Hinz, J., Stammann, A. and Wanner, J., 2021. State dependence and unobserved heterogeneity in the extensive margin of trade.</p>
<p dir="auto">Stammann, A. (2018) <em>Fast and Feasible Estimation of Generalized Linear Models with High-Dimensional k-way Fixed Effects</em>. Mimeo, Heinrich-Heine University Düsseldorf</p>
<p dir="auto">Weidner, M. and Zylkin, T., 2021. Bias and consistency in three-way gravity models. Journal of International Economics, 132, p.103513.</p>
</article></div>