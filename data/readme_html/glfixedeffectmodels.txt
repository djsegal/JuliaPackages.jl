<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-glfixedeffectmodelsjl" class="anchor" aria-hidden="true" href="#glfixedeffectmodelsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GLFixedEffectModels.jl</h1>

<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/646b448bd38200d1c7f3cd622b3cb9aa79d5abe0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667"><img src="https://camo.githubusercontent.com/646b448bd38200d1c7f3cd622b3cb9aa79d5abe0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-maturing-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/jmboehm/GLFixedEffectModels.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cb64d0f6773131b303d6f8a6482fdfc042efbc37/68747470733a2f2f7472617669732d63692e6f72672f6a6d626f65686d2f474c46697865644566666563744d6f64656c732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/jmboehm/GLFixedEffectModels.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://coveralls.io/github/jmboehm/GLFixedEffectModels.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/78751ba7bd2a74809372e9ab37ea746b864b1082/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6a6d626f65686d2f474c46697865644566666563744d6f64656c732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/jmboehm/GLFixedEffectModels.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package estimates generalized linear models with high dimensional categorical variables. It builds on Matthieu Gomez's <a href="https://github.com/FixedEffects/FixedEffects.jl">FixedEffects.jl</a> and Amrei Stammann's <a href="https://github.com/amrei-stammann/alpaca">Alpaca</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<pre><code>] add https://github.com/jmboehm/GLFixedEffectModels.jl.git
</code></pre>
<h2><a id="user-content-example-use" class="anchor" aria-hidden="true" href="#example-use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example use</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> GLFixedEffectModels, GLM, Distributions
<span class="pl-k">using</span> RDatasets

df <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>datasets<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>iris<span class="pl-pds">"</span></span>)
df<span class="pl-k">.</span>binary <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(Float64, <span class="pl-c1">size</span>(df,<span class="pl-c1">1</span>))
df[df<span class="pl-k">.</span>SepalLength <span class="pl-k">.&gt;</span> <span class="pl-c1">5.0</span>,<span class="pl-c1">:binary</span>] <span class="pl-k">.=</span> <span class="pl-c1">1.0</span>
df<span class="pl-k">.</span>SpeciesDummy <span class="pl-k">=</span> <span class="pl-c1">categorical</span>(df<span class="pl-k">.</span>Species)
idx <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>,<span class="pl-c1">size</span>(df,<span class="pl-c1">1</span>),<span class="pl-c1">1</span>)
a <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>B<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>C<span class="pl-pds">"</span></span>]
df<span class="pl-k">.</span>Random <span class="pl-k">=</span> <span class="pl-c1">vec</span>([a[i] <span class="pl-k">for</span> i <span class="pl-k">in</span> idx])
df<span class="pl-k">.</span>RandomCategorical <span class="pl-k">=</span> <span class="pl-c1">categorical</span>(df<span class="pl-k">.</span>Random)

m <span class="pl-k">=</span> <span class="pl-c1">@formula</span> binary <span class="pl-k">~</span> SepalWidth <span class="pl-k">+</span> <span class="pl-c1">fe</span>(SpeciesDummy)
x <span class="pl-k">=</span> <span class="pl-c1">nlreg</span>(df, m, <span class="pl-c1">Binomial</span>(), <span class="pl-c1">LogitLink</span>(), start <span class="pl-k">=</span> [<span class="pl-c1">0.2</span>] )

m <span class="pl-k">=</span> <span class="pl-c1">@formula</span> binary <span class="pl-k">~</span> SepalWidth <span class="pl-k">+</span> PetalLength <span class="pl-k">+</span> <span class="pl-c1">fe</span>(SpeciesDummy)
<span class="pl-c1">nlreg</span>(df, m, <span class="pl-c1">Binomial</span>(), <span class="pl-c1">LogitLink</span>(), Vcov<span class="pl-k">.</span><span class="pl-c1">cluster</span>(<span class="pl-c1">:SpeciesDummy</span>,<span class="pl-c1">:RandomCategorical</span>) , start <span class="pl-k">=</span> [<span class="pl-c1">0.2</span>, <span class="pl-c1">0.2</span>] )</pre></div>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<p>The main function is <code>nlreg()</code>, which returns a <code>GLFixedEffectModel &lt;: RegressionModel</code>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">nlreg</span>(df, formula<span class="pl-k">::</span><span class="pl-c1">FormulaTerm</span>,
    distribution<span class="pl-k">::</span><span class="pl-c1">Distribution</span>,
    link<span class="pl-k">::</span><span class="pl-c1">GLM.Link</span>,
    vcov<span class="pl-k">::</span><span class="pl-c1">CovarianceEstimator</span>; <span class="pl-k">...</span>)</pre></div>
<p>The required arguments are:</p>
<ul>
<li><code>df</code>: a Table</li>
<li><code>formula</code>: A formula created using <code>@formula</code>.</li>
<li><code>distribution</code>: A <code>Distribution</code>. See the documentation of <a href="https://juliastats.org/GLM.jl/stable/manual/#Fitting-GLM-models-1" rel="nofollow">GLM.jl</a> for valid distributions.</li>
<li><code>link</code>: A <code>Link</code> function. See the documentation of <a href="https://juliastats.org/GLM.jl/stable/manual/#Fitting-GLM-models-1" rel="nofollow">GLM.jl</a> for valid link functions.</li>
<li><code>vcov</code>: A <code>CovarianceEstimator</code> to compute the variance-covariance matrix.</li>
</ul>
<p>The optional arguments are:</p>
<ul>
<li><code>save::Union{Bool, Symbol} = false</code>: Should residuals and eventual estimated fixed effects saved in a dataframe? Use <code>save = :residuals</code> to only save residuals. Use <code>save = :fe</code> to only save fixed effects.</li>
<li><code>method::Symbol</code>: A symbol for the method. Default is <code>:cpu</code>. Alternatively, <code>:gpu</code> requires <code>CuArrays</code>. In this case, use the option <code>double_precision = false</code> to use <code>Float32</code>. This option is the same as for the <a href="https://github.com/FixedEffects/FixedEffectModels.jl">FixedEffectModels.jl</a> package.</li>
<li><code>contrasts::Dict = Dict()</code> An optional Dict of contrast codings for each categorical variable in the <code>formula</code>.  Any unspecified variables will have <code>DummyCoding</code>.</li>
<li><code>maxiter::Integer = 1000</code>: Maximum number of iterations in the Newton-Raphson routine.</li>
<li><code>maxiter_center::Integer = 10000</code>: Maximum number of iterations for centering procedure.</li>
<li><code>double_precision::Bool</code>: Should the demeaning operation use Float64 rather than Float32? Default to true.</li>
<li><code>dev_tol::Real</code> : Tolerance level for the first stopping condition of the maximization routine.</li>
<li><code>rho_tol::Real</code> : Tolerance level for the stephalving in the maximization routine.</li>
<li><code>step_tol::Real</code> : Tolerance level that accounts for rounding errors inside the stephalving routine</li>
<li><code>center_tol::Real</code> : Tolerance level for the stopping condition of the centering algorithm. Default to 1e-8 if <code>double_precision = true</code>, 1e-6 otherwise.</li>
</ul>
<h2><a id="user-content-things-that-still-need-to-be-implemented" class="anchor" aria-hidden="true" href="#things-that-still-need-to-be-implemented"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Things that still need to be implemented</h2>
<ul>
<li>Better default starting values</li>
<li>Bias correction</li>
<li>Weights</li>
<li>Better StatsBase interface &amp; prediction</li>
<li>Better benchmarking</li>
<li>Integration with <a href="https://github.com/jmboehm/RegressionTables.jl">RegressionTables.jl</a></li>
</ul>
<h2><a id="user-content-related-julia-packages" class="anchor" aria-hidden="true" href="#related-julia-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Related Julia packages</h2>
<ul>
<li><a href="https://github.com/FixedEffects/FixedEffectModels.jl">FixedEffectModels.jl</a> estimates linear models with high dimensional categorical variables (and with or without endogeneous regressors).</li>
<li><a href="https://github.com/FixedEffects/FixedEffects.jl">FixedEffects.jl</a> is a package for fast pseudo-demeaning operations using LSMR. Both this package and <a href="https://github.com/FixedEffects/FixedEffectModels.jl">FixedEffectModels.jl</a> build on this.</li>
<li><a href="https://github.com/jmboehm/Alpaca.jl">Alpaca.jl</a> is a wrapper to the <a href="https://github.com/amrei-stammann/alpaca">Alpaca R package</a>, which solves the same tasks as this package.</li>
<li><a href="https://github.com/JuliaStats/GLM.jl">GLM.jl</a> estimates generalized linear models, but without explicit support for categorical regressors.</li>
<li><a href="https://github.com/Nosferican/Econometrics.jl">Econometrics.jl</a> provides routines to estimate multinomial logit and other models.</li>
<li><a href="https://github.com/jmboehm/RegressionTables.jl">RegressionTables.jl</a> will, in the future, support pretty printing of results from this package.</li>
</ul>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h2>
<p>Fong, DC. and Saunders, M. (2011) <em>LSMR: An Iterative Algorithm for Sparse Least-Squares Problems</em>.  SIAM Journal on Scientific Computing</p>
<p>Stammann, A. (2018) <em>Fast and Feasible Estimation of Generalized Linear Models with High-Dimensional k-way Fixed Effects</em>. Mimeo, Heinrich-Heine University Düsseldorf</p>
</article></div>