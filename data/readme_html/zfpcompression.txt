<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-zfpcompressionjl" class="anchor" aria-hidden="true" href="#zfpcompressionjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ZfpCompression.jl</h1>
<p dir="auto"><a href="https://github.com/milankl/ZfpCompression.jl/actions/workflows/CI.yml"><img src="https://github.com/milankl/ZfpCompression.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a></p>
<p dir="auto">Julia bindings for the data compression library <a href="https://github.com/LLNL/zfp">zfp</a> v0.5.5,
written by P Lindstrom (<a href="https://github.com/lindstro">@lindstro</a>).
From the <a href="https://zfp.readthedocs.io/en/release0.5.5/" rel="nofollow">zfp documentation</a>:</p>
<p dir="auto"><em>zfp is an open source library for compressed numerical arrays that support high
throughput read and write random access. To achieve high compression ratios, zfp
generally uses lossy but optionally error-bounded compression. Bit-for-bit lossless
compression is also possible through one of zfp’s compression modes.</em></p>
<p dir="auto"><em>zfp works best for 2-4D arrays that exhibit spatial correlation, such as
continuous fields from physics simulations, images, regularly sampled terrain
surfaces, etc. Although zfp also provides a 1D array class that can be used for
1D signals such as audio, or even unstructured floating-point streams, the
compression scheme has not been well optimized for this use case, and rate and
quality may not be competitive with floating-point compressors designed
specifically for 1D streams.</em></p>
<p dir="auto">See the documentation, or <a href="https://computing.llnl.gov/projects/floating-point-compression" rel="nofollow">zfp's website</a>
for more information.</p>
<p dir="auto">Requires Julia v1.3 or newer</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="figures/zfp_precision3d_o3_85.png?raw=true"><img src="figures/zfp_precision3d_o3_85.png?raw=true" alt="OzoneCompression" title="OzoneZfpCompression" style="max-width: 100%;"></a><br>
<em>Compression of ozone (O₃) from the <a href="https://ads.atmosphere.copernicus.eu/about-cams" rel="nofollow">CAMS data set</a> with zfp at various levels of precision.
Compression factors are relative to 64-bit floats regarding including the vertical dimension, shown is only one vertical level.</em></p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-lossless-compression" class="anchor" aria-hidden="true" href="#lossless-compression"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Lossless compression</h3>
<p dir="auto">1 to 4-D arrays of eltype <code>Int32,Int64,Float32,Float64</code> can be compressed calling
the <code>zfp_compress</code> function.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using ZfpCompression

julia&gt; A = rand(Float32,100,50);

julia&gt; Ac = zfp_compress(A)
16952-element Array{UInt8,1}:
 0xfd
 0xe1
 0x80
 0x8d
    ⋮"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ZfpCompression

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Float32,<span class="pl-c1">100</span>,<span class="pl-c1">50</span>);

julia<span class="pl-k">&gt;</span> Ac <span class="pl-k">=</span> <span class="pl-c1">zfp_compress</span>(A)
<span class="pl-c1">16952</span><span class="pl-k">-</span>element Array{UInt8,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0xfd</span>
 <span class="pl-c1">0xe1</span>
 <span class="pl-c1">0x80</span>
 <span class="pl-c1">0x8d</span>
    ⋮</pre></div>
<p dir="auto">which initializes the zfp compression, preallocates the bitstream used for
the compressed array and performs the compression. The compressed array is returned
as <code>Array{UInt8,1}</code>. By default, the compressed array includes a header with the required
information about the type, size and shape of the uncompressed array as well
as lossy compression parameters (see below). This header can be deactivated with</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Ac = zfp_compress(A,write_header=false)"><pre>julia<span class="pl-k">&gt;</span> Ac <span class="pl-k">=</span> <span class="pl-c1">zfp_compress</span>(A,write_header<span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<p dir="auto">A compressed array (with header) can be decompressed as</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Ad = zfp_decompress(Ac)"><pre>julia<span class="pl-k">&gt;</span> Ad <span class="pl-k">=</span> <span class="pl-c1">zfp_decompress</span>(Ac)</pre></div>
<p dir="auto">Alternatively, the decompression of header-less compressed arrays can be performed
into an existing array (with same type, size and dimensions as the uncompressed array)</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Ad = similar(A)
julia&gt; zfp_decompress!(Ad,Ac)"><pre>julia<span class="pl-k">&gt;</span> Ad <span class="pl-k">=</span> <span class="pl-c1">similar</span>(A)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">zfp_decompress!</span>(Ad,Ac)</pre></div>
<p dir="auto">In this lossless example the compression is reversible</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; A == Ad
true"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">==</span> Ad
<span class="pl-c1">true</span></pre></div>
<h3 dir="auto"><a id="user-content-lossy-compression" class="anchor" aria-hidden="true" href="#lossy-compression"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Lossy compression</h3>
<p dir="auto">Lossy compression is achieved by specifying additional keyword arguments
for <code>zfp_compress</code>, which are <code>tol::Real</code>, <code>precision::Int</code>, and <code>rate::Real</code>.
If none are specified (as in the example above) the compression is lossless
(i.e. reversible). Lossy compression parameters are</p>
<ul dir="auto">
<li><a href="https://zfp.readthedocs.io/en/release0.5.5/modes.html#fixed-accuracy-mode" rel="nofollow"><code>tol</code> defines the maximum absolute error that is tolerated.</a></li>
<li><a href="https://zfp.readthedocs.io/en/release0.5.5/modes.html#fixed-precision-mode" rel="nofollow"><code>precision</code> controls the precision, bounding a weak relative error</a>, see this <a href="https://zfp.readthedocs.io/en/develop/faq.html#q-relerr" rel="nofollow">FAQ</a></li>
<li><a href="https://zfp.readthedocs.io/en/release0.5.5/modes.html#fixed-rate-mode" rel="nofollow"><code>rate</code> fixes the bits used per value.</a></li>
</ul>
<p dir="auto">Only <strong>one</strong> of <code>tol, precision</code> or <code>rate</code> should be specified. For further details
see the <a href="https://zfp.readthedocs.io/en/release0.5.5/modes.html#compression-modes" rel="nofollow">zfp documentation</a>.</p>
<p dir="auto">If we can tolerate a maximum absolute error of 1e-3, we may do</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Ac = zfp_compress(A,tol=1e-3)
9048-element Array{UInt8,1}:
 0xff
 0x2c
 0x01
 0x1a
 0xf3
 0xbc
 0xea
 0xbb
 0xc6
 0xd4
    ⋮"><pre>julia<span class="pl-k">&gt;</span> Ac <span class="pl-k">=</span> <span class="pl-c1">zfp_compress</span>(A,tol<span class="pl-k">=</span><span class="pl-c1">1e-3</span>)
<span class="pl-c1">9048</span><span class="pl-k">-</span>element Array{UInt8,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0xff</span>
 <span class="pl-c1">0x2c</span>
 <span class="pl-c1">0x01</span>
 <span class="pl-c1">0x1a</span>
 <span class="pl-c1">0xf3</span>
 <span class="pl-c1">0xbc</span>
 <span class="pl-c1">0xea</span>
 <span class="pl-c1">0xbb</span>
 <span class="pl-c1">0xc6</span>
 <span class="pl-c1">0xd4</span>
    ⋮</pre></div>
<p dir="auto">which clearly reduces the size of the compressed array. In this case the maximum
absolute error is limited to about 3e-4.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; A2 = zfp_decompress(Ac)
julia&gt; maximum(abs.(A2 - A))
0.00030493736f0"><pre>julia<span class="pl-k">&gt;</span> A2 <span class="pl-k">=</span> <span class="pl-c1">zfp_decompress</span>(Ac)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">maximum</span>(<span class="pl-c1">abs</span>.(A2 <span class="pl-k">-</span> A))
<span class="pl-c1">0.00030493736f0</span></pre></div>
<p dir="auto">For header-less compression, it is <strong>essential</strong> to provide the same compression
parameters also for <code>zfp_decompress!</code>. Otherwise the decompressed array is flawed. E.g.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; A2 = similar(A)
julia&gt; zfp_decompress!(A2,Ac,tol=1e-3)"><pre>julia<span class="pl-k">&gt;</span> A2 <span class="pl-k">=</span> <span class="pl-c1">similar</span>(A)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">zfp_decompress!</span>(A2,Ac,tol<span class="pl-k">=</span><span class="pl-c1">1e-3</span>)</pre></div>
<h2 dir="auto"><a id="user-content-openmp-multi-threading" class="anchor" aria-hidden="true" href="#openmp-multi-threading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>OpenMP multi-threading</h2>
<p dir="auto">You can use compress in parallel using the <code>nthreads</code> argument of <code>zfp_compress</code> to trigger multi-threading via OpenMP.
No parallel decompression is currently (zfp v0.5.5) provided in the underlying C library.
On linux, <code>zfp_jll</code> is automatically built with OpenMP enabled,
<a href="https://zfp.readthedocs.io/en/release0.5.5/execution.html#using-openmp" rel="nofollow">on macOS this is not supported by default</a>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; zfp_compress(temp,nthreads=8)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">zfp_compress</span>(temp,nthreads<span class="pl-k">=</span><span class="pl-c1">8</span>)</pre></div>
<p dir="auto">Compressing a 590MB array <code>A</code> with <code>precision=10</code> is benchmarked (<code>@btime</code>) as</p>
<table>
<thead>
<tr>
<th>Number of threads</th>
<th align="right">1</th>
<th align="right">2</th>
<th align="right">4</th>
<th align="right">8</th>
<th align="right">16</th>
<th align="right">32</th>
</tr>
</thead>
<tbody>
<tr>
<td>Time</td>
<td align="right">2.45s</td>
<td align="right">1.46s</td>
<td align="right">0.73s</td>
<td align="right">0.38s</td>
<td align="right">0.25s</td>
<td align="right">0.20s</td>
</tr>
<tr>
<td>Speed-up</td>
<td align="right">1x</td>
<td align="right">1.7x</td>
<td align="right">3.4x</td>
<td align="right">6.4x</td>
<td align="right">9.8x</td>
<td align="right">12.3x</td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">ZfpCompression.jl is registered in the Julia Registry, so simply do</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt;] add ZfpCompression"><pre>julia<span class="pl-k">&gt;</span>] add ZfpCompression</pre></div>
<p dir="auto">and the C library is installed and built automatically.</p>
</article></div>