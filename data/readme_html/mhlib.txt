<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-mhlibjl---a-toolbox-for-metaheuristics-and-hybrid-optimization-methods" class="anchor" aria-hidden="true" href="#mhlibjl---a-toolbox-for-metaheuristics-and-hybrid-optimization-methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>MHLib.jl</code> - A Toolbox for Metaheuristics and Hybrid Optimization Methods</h1>
<p><a href="https://github.com/ac-tuwien/MHLib.jl/actions?query=workflow%3ACI+branch%3Amaster"><img src="https://github.com/ac-tuwien/MHLib.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="http://codecov.io/github/ac-tuwien/MHLib.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a0d1fe096c37726f3470ef44b47109ad6e379630b068009d432a9ceee8b54fd2/687474703a2f2f636f6465636f762e696f2f6769746875622f61632d74757769656e2f4d484c69622e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/ac-tuwien/MHLib.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p><em>This project is still in early development, any feedback is much appreciated!</em></p>
<p><code>MHLib.jl</code> is a collection of modules, types, and functions  in Julia 1.5+ supporting
the effective implementation of metaheuristics and certain hybrid optimization approaches
for solving primarily  combinatorial optimization problems.</p>
<p><a target="_blank" rel="noopener noreferrer" href="mh.png"><img src="mh.png" alt=" " style="max-width:100%;"></a></p>
<p>Julia <code>MHLib.jl</code> emerged from the
<a href="https://github.com/ac-tuwien/pymhlib">Python <code>mhlib</code></a> and the older
<a href="https://bitbucket.org/ads-tuwien/mhlib" rel="nofollow">C++ <code>mhlib</code></a> to which it has certain similarities
but also many differences.</p>
<p>The main purpose of the library is to support rapid prototyping and teaching as well
as efficient implementations due to Julia's highly effective just-in-time-compilation.</p>
<p><code>MHLib.jl</code> is developed primarily by the
<a href="https://www.ac.tuwien.ac.at" rel="nofollow">Algorithms and Complexity Group of TU Wien</a>,
Vienna, Austria, since 2020.</p>
<h3><a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributors:</h3>
<ul>
<li><a href="https://www.ac.tuwien.ac.at/raidl" rel="nofollow">GÃ¼nther Raidl</a> (primarily responsible)</li>
<li>Nikolaus Frohner</li>
<li>Thomas Jatschka</li>
<li>Fabio Oberweger</li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Major versions of <code>pymhlib</code> can be installed from the Julia REPL via</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="] add MHLib
"><pre><code>] add MHLib
</code></pre></div>
<p>Development versions are available at <a href="https://github.com/ac-tuwien/MHLib.jl">https://github.com/ac-tuwien/MHLib.jl</a> and can be
installed via</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="] add https://github.com/ac-tuwien/MHLib.jl.git
"><pre><code>] add https://github.com/ac-tuwien/MHLib.jl.git
</code></pre></div>
<h2><a id="user-content-major-components" class="anchor" aria-hidden="true" href="#major-components"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Major Components</h2>
<p>Note that <code>MHLib.jl</code> is still far behind the capabilities of the Python <code>pymhlib</code>.</p>
<p>The main module provides the following types for candidate solutions and various
functions for them:</p>
<ul>
<li><code>Solution</code>:
An abstract type that represents a candidate solution to an optimization problem.</li>
<li><code>VectorSolution</code>:
An abstract solution encoded by a vector of some user-provided type.</li>
<li><code>BoolVectorSolution</code>:
An abstract solution encoded by a boolean vector.</li>
<li><code>PermutationSolution</code>:
An abstract solution representing permutations of a fixed number of elements.
_ <code>SubsetVectorSolution</code>:
A solution that is an arbitrary cardinality subset of a given set
represented in vector form. The front part represents the selected
elements, the back part optionally the unselected ones.</li>
</ul>
<p>Moreover, the main module provides:</p>
<ul>
<li><code>git_version()</code>:
Function returning the abbreviated git version string of the current project.</li>
<li><code>settings</code>:
Global settings that can be defined independently per module in a distributed
way, while values for these parameters can be provided as program arguments or in
configuration files. Most <code>pymhlib</code> modules rely on this mechanism for their external
parameters.</li>
</ul>
<p>Further modules:</p>
<ul>
<li><code>Schedulers</code>, type <code>Scheduler</code>:
A an abstract framework for single trajectory metaheuristics that rely on iteratively
applying certain methods to a current solution.
Modules like <code>GVNSs</code> and <code>ALNSs</code> extend this type towards
more specific metaheuristics.</li>
<li><code>GVNSs</code>, type <code>GVNSs</code>:
A framework for local search, iterated local search, (general) variable neighborhood
search, GRASP, etc.</li>
<li><code>ALNSs</code>, type <code>ALNS</code>:
A framework for adaptive large neighborhood search (ALNS).</li>
</ul>
<h2><a id="user-content-demos" class="anchor" aria-hidden="true" href="#demos"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Demos</h2>
<p>For demonstration purposes, simple metaheuristic approaches are provided in the <code>test</code>
subdirectory for the following well-known combinatorial optimization problems.
They can be started as shown in the respective sections of <code>runtests.jl</code>.</p>
<p>It is recommended to take such a demo as template for solving your own problem.</p>
<ul>
<li><code>OneMax</code>: basic test problem in which the goal is to set all digits in a binary
string to <code>true</code></li>
<li><code>GraphColoring</code>: graph coloring problem based on <code>VectorSolution</code></li>
<li><code>MAXSAT</code>: maximum satisfiability problem based on <code>BinaryVectorSolution</code></li>
<li><code>TSP</code>: traveling salesperson problem based on <code>PermutationSolution</code></li>
<li><code>MKP</code>: multi-constrained knapsack problem based on <code>SubsetVectorSolution</code></li>
<li><code>MISP</code>: maximum independent set problem based on <code>SubsetVectorSolution</code></li>
</ul>
<h2><a id="user-content-news" class="anchor" aria-hidden="true" href="#news"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>News</h2>
<p>See <a href="CHANGELOG.md">CHANGELOG.md</a></p>
</article></div>