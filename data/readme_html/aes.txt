<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-aesjl" class="anchor" aria-hidden="true" href="#aesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>AES.jl</h1>
<p><a href="https://travis-ci.org/kanav99/AES.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2afccb79640818620fbc995115cc1fb9b3065a48/68747470733a2f2f7472617669732d63692e6f72672f6b616e617639392f4145532e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/kanav99/AES.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>AES On-the-Fly mode in Julia</p>
<h2><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>API</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> AES

<span class="pl-c"><span class="pl-c">#</span> make a new key</span>
k <span class="pl-k">=</span> [<span class="pl-c1">0x2b</span>, <span class="pl-c1">0x7e</span>, <span class="pl-c1">0x15</span>, <span class="pl-c1">0x16</span>, <span class="pl-c1">0x28</span>, <span class="pl-c1">0xae</span>, <span class="pl-c1">0xd2</span>, <span class="pl-c1">0xa6</span>, <span class="pl-c1">0xab</span>, <span class="pl-c1">0xf7</span>, <span class="pl-c1">0x15</span>, <span class="pl-c1">0x88</span>, <span class="pl-c1">0x09</span>, <span class="pl-c1">0xcf</span>, <span class="pl-c1">0x4f</span>, <span class="pl-c1">0x3c</span>]
key <span class="pl-k">=</span> <span class="pl-c1">AES128Key</span>(k)

<span class="pl-c"><span class="pl-c">#</span> make a cipher object</span>
cipher <span class="pl-k">=</span> <span class="pl-c1">AESCipher</span>(;key_length<span class="pl-k">=</span><span class="pl-c1">128</span>, mode<span class="pl-k">=</span>AES<span class="pl-k">.</span>CBC, key<span class="pl-k">=</span>key)

<span class="pl-c"><span class="pl-c">#</span> encrypt!</span>
plaintext <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>The quick brown fox jumps over the lazy dog.<span class="pl-pds">"</span></span>
ct <span class="pl-k">=</span> <span class="pl-c1">encrypt</span>(plaintext, cipher)
pt <span class="pl-k">=</span> <span class="pl-c1">decrypt</span>(ct, cipher)
<span class="pl-c1">@assert</span> pt <span class="pl-k">===</span> plaintext

<span class="pl-c"><span class="pl-c">#</span> you can set custom initialization vector</span>
iv <span class="pl-k">=</span> [<span class="pl-c1">0x00</span>, <span class="pl-c1">0x01</span>, <span class="pl-c1">0x02</span>, <span class="pl-c1">0x03</span>, <span class="pl-c1">0x04</span>, <span class="pl-c1">0x05</span>, <span class="pl-c1">0x06</span>, <span class="pl-c1">0x07</span>, <span class="pl-c1">0x08</span>, <span class="pl-c1">0x09</span>, <span class="pl-c1">0x0a</span>, <span class="pl-c1">0x0b</span>, <span class="pl-c1">0x0c</span>, <span class="pl-c1">0x0d</span>, <span class="pl-c1">0x0e</span>, <span class="pl-c1">0x0f</span>]
ct <span class="pl-k">=</span> <span class="pl-c1">encrypt</span>(plaintext, cipher; iv<span class="pl-k">=</span>iv)
pt <span class="pl-k">=</span> <span class="pl-c1">decrypt</span>(ct, cipher)
<span class="pl-c1">@assert</span> pt <span class="pl-k">===</span> plaintext
</pre></div>
</article></div>