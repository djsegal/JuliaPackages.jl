<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2><a id="user-content-this-package-is-deprecated" class="anchor" aria-hidden="true" href="#this-package-is-deprecated"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>This package is deprecated.</h2>
<p>CUSOLVER integration is available directly in <a href="https://github.com/JuliaGPU/CuArrays.jl">CuArrays.jl</a>.</p>
<h1><a id="user-content-cusolver" class="anchor" aria-hidden="true" href="#cusolver"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CUSOLVER</h1>
<p><strong>Build status</strong>: <a href="http://ci.maleadt.net/shields/url.php?builder=CUSOLVER-julia05-x86-64bit" rel="nofollow"><img src="https://camo.githubusercontent.com/eb59b43480693d5b2936b0a1dc5b987146fb0eae/687474703a2f2f63692e6d616c656164742e6e65742f736869656c64732f6275696c642e7068703f6275696c6465723d4355534f4c5645522d6a756c696130352d7838362d3634626974266e616d653d6a756c6961253230302e35" alt="" data-canonical-src="http://ci.maleadt.net/shields/build.php?builder=CUSOLVER-julia05-x86-64bit&amp;name=julia%200.5" style="max-width:100%;"></a> <a href="http://ci.maleadt.net/shields/url.php?builder=CUSOLVER-julia06-x86-64bit" rel="nofollow"><img src="https://camo.githubusercontent.com/fd323909b2d94194781ceb85ffef3952b079c734/687474703a2f2f63692e6d616c656164742e6e65742f736869656c64732f6275696c642e7068703f6275696c6465723d4355534f4c5645522d6a756c696130362d7838362d3634626974266e616d653d6a756c6961253230302e36" alt="" data-canonical-src="http://ci.maleadt.net/shields/build.php?builder=CUSOLVER-julia06-x86-64bit&amp;name=julia%200.6" style="max-width:100%;"></a></p>
<p><strong>Code coverage</strong>: <a href="https://codecov.io/gh/JuliaGPU/CUSOLVER.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6623c69e0f29ccb1748ea2d89c2a1b293920d163/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614750552f4355534f4c5645522e6a6c2f636f7665726167652e737667" alt="Coverage Status" data-canonical-src="https://codecov.io/gh/JuliaGPU/CUSOLVER.jl/coverage.svg" style="max-width:100%;"></a></p>
<p>Julia bindings for the <a href="http://docs.nvidia.com/cuda/cusolver" rel="nofollow">NVIDIA CUSOLVER</a> library. CUSOLVER is a high-performance direct-solver matrix linear algebra library.</p>
<h2><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Introduction</h2>
<p><code>CUSOLVER.jl</code> provides bindings to a subset of the CUSOLVER library. It's built on top of <code>CUBLAS.jl</code>, <code>CUSPARSE.jl</code> and <code>CUDArt.jl</code>. <code>CUSOLVER.jl</code> currently wraps all the dense solvers and the sparse solvers are in progress.</p>
<p>The dense CUSOLVER API is designed to mimic the LAPACK API. I've tried to achieve consistency with the Julia base LAPACK bindings so that you can use CUSOLVER as a drop-in replacement. <code>CUSOLVER.jl</code> will use the <code>CUSPARSE.jl</code> custom types for ease-of-use.</p>
<h2><a id="user-content-current-features" class="anchor" aria-hidden="true" href="#current-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Current Features</h2>
<p><code>CUSOLVER.jl</code> currently supports a subset of all the CUSOLVER functionality. What is implemented right now:</p>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Dense API
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Dense Linear Solvers
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> potrf!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> potrs!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> getrf!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> getrs!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> geqrf!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> ormqr!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> sytrf!</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Dense Eigensolvers
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> gebrd!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> gesvd!</li>
</ul>
</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Sparse API
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> High level API
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> csrlsvlu!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> csrlsvqr!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> csrlsvchol!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> csrlsqvqr!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> csreigvsi!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> csreigs!</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Low level API
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> csrsymrcm!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> csrsymmdq!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> csrsymamd!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> csrperm!</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> csrqrBatched!</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing</h2>
<p>Contributions are very welcome! If you write wrappers for one of the <code>CUSOLVER.jl</code> functions, please include some tests in <code>test/runtests.jl</code> for your wrapper. Ideally test each of the types the function you wrap can accept, e.g. <code>Float32</code>, <code>Float64</code>, and possibly <code>Complex64</code>, <code>Complex128</code>.</p>
</article></div>