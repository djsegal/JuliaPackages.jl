<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-mmtfjl" class="anchor" aria-hidden="true" href="#mmtfjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MMTF.jl</h1>
<p><strong>Latest Release:</strong></p>
<p><a href="https://github.com/BioJulia/MMTF.jl/releases/latest"><img src="https://camo.githubusercontent.com/963010268bc837848e1419b38c39ebc850052e8fc37bcf517b51e7ed0a6dc873/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f42696f4a756c69612f4d4d54462e6a6c2e737667" alt="Latest Release" data-canonical-src="https://img.shields.io/github/release/BioJulia/MMTF.jl.svg" style="max-width:100%;"></a>
<a href="https://github.com/BioJulia/MMTF.jl/blob/master/LICENSE"><img src="https://camo.githubusercontent.com/45b4ffbd594af47fe09a3432f9f8e122c6518aa6352b4ce453a1a2563da2905c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d677265656e2e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-MIT-green.svg" style="max-width:100%;"></a>
<a href="https://github.com/joels94"><img src="https://camo.githubusercontent.com/d7c71fad95706b041969c91f0c192d00ddb7aabaf1cb02c0698bf29604c33517/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f42696f4a756c69612532304d61696e7461696e65722d6a6f656c7339342d6f72616e67652e737667" alt="BioJulia Maintainer : joels94" data-canonical-src="https://img.shields.io/badge/BioJulia%20Maintainer-joels94-orange.svg" style="max-width:100%;"></a></p>
<p><strong>Development Status:</strong></p>
<p><a href="https://github.com/BioJulia/MMTF.jl/actions"><img src="https://github.com/BioJulia/MMTF.jl/workflows/CI/badge.svg" alt="Build status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/BioJulia/MMTF.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2220a8f182fbfa2073b24fb157d9cb6d937434230637b8378316b08a372e982f/68747470733a2f2f636f6465636f762e696f2f67682f42696f4a756c69612f4d4d54462e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/BioJulia/MMTF.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-description" class="anchor" aria-hidden="true" href="#description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Description</h2>
<p>The Macromolecular Transmission Format (MMTF) is a new compact binary format to transmit and store biomolecular structures for fast 3D visualization and analysis.
MMTF.jl lets you encode and decode MMTF files.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Install MMTF.jl from the Julia REPL:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Pkg
julia&gt; Pkg.add(&quot;MMTF&quot;)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg
julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>MMTF<span class="pl-pds">"</span></span>)</pre></div>
<p>To start using the package:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using MMTF
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MMTF</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p><strong>To download and parse a MMTF file as Julia Dict from RCSB database.</strong></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; MMTFdict = fetchmmtf(&quot;4HHB&quot;)
Dict{String,Any} with 39 entries:
  &quot;chainNameList&quot; =&gt; String[&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;A&quot;, &quot;B&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;D&quot;, &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;]
  &quot;bondAtomList&quot;  =&gt; Int32[7, 2, 15, 9, 21, 17, 28, 23, 33, 30  …  4337, 4331, 4342, 4339, 4352, 4344, 4361, 4354, 4373, 4363]
  &quot;numGroups&quot;     =&gt; 801
  &quot;bFactorList&quot;   =&gt; Float32[49.05, 43.14, 24.8, 37.68, 72.12, 61.79, 80.12, 26.44, 26.32, 32.96  …  43.37, 43.46, 41.77, 43.68, 45.36, 41.53, 36.25, …
  &quot;groupIdList&quot;   =&gt; Int32[1, 2, 3, 4, 5, 6, 7, 8, 9, 10  …  188, 189, 190, 191, 192, 193, 194, 195, 196, 197]
  &quot;structureId&quot;   =&gt; &quot;4HHB&quot;
  &quot;unitCell&quot;      =&gt; Any[63.15, 83.59, 53.8, 90.0, 99.34, 90.0]
  &quot;numAtoms&quot;      =&gt; 4779
  &quot;groupList&quot;     =&gt; Any[Dict{Any,Any}(Pair{Any,Any}(&quot;groupName&quot;, &quot;VAL&quot;),Pair{Any,Any}(&quot;bondAtomList&quot;, Any[1, 0, 2, 1, 3, 2, 4, 1, 5, 4, 6, 4]),Pair{A…
  &quot;numChains&quot;     =&gt; 14
  &quot;groupTypeList&quot; =&gt; Int32[0, 11, 22, 13, 9, 7, 1, 21, 10, 0  …  3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
  ⋮               =&gt; ⋮
"><pre>julia<span class="pl-k">&gt;</span> MMTFdict <span class="pl-k">=</span> <span class="pl-c1">fetchmmtf</span>(<span class="pl-s"><span class="pl-pds">"</span>4HHB<span class="pl-pds">"</span></span>)
Dict{String,Any} with <span class="pl-c1">39</span> entries<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>chainNameList<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> String[<span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>B<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>C<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>D<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>B<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>B<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>C<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>D<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>D<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>B<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>C<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>D<span class="pl-pds">"</span></span>]
  <span class="pl-s"><span class="pl-pds">"</span>bondAtomList<span class="pl-pds">"</span></span>  <span class="pl-k">=&gt;</span> Int32[<span class="pl-c1">7</span>, <span class="pl-c1">2</span>, <span class="pl-c1">15</span>, <span class="pl-c1">9</span>, <span class="pl-c1">21</span>, <span class="pl-c1">17</span>, <span class="pl-c1">28</span>, <span class="pl-c1">23</span>, <span class="pl-c1">33</span>, <span class="pl-c1">30</span>  …  <span class="pl-c1">4337</span>, <span class="pl-c1">4331</span>, <span class="pl-c1">4342</span>, <span class="pl-c1">4339</span>, <span class="pl-c1">4352</span>, <span class="pl-c1">4344</span>, <span class="pl-c1">4361</span>, <span class="pl-c1">4354</span>, <span class="pl-c1">4373</span>, <span class="pl-c1">4363</span>]
  <span class="pl-s"><span class="pl-pds">"</span>numGroups<span class="pl-pds">"</span></span>     <span class="pl-k">=&gt;</span> <span class="pl-c1">801</span>
  <span class="pl-s"><span class="pl-pds">"</span>bFactorList<span class="pl-pds">"</span></span>   <span class="pl-k">=&gt;</span> Float32[<span class="pl-c1">49.05</span>, <span class="pl-c1">43.14</span>, <span class="pl-c1">24.8</span>, <span class="pl-c1">37.68</span>, <span class="pl-c1">72.12</span>, <span class="pl-c1">61.79</span>, <span class="pl-c1">80.12</span>, <span class="pl-c1">26.44</span>, <span class="pl-c1">26.32</span>, <span class="pl-c1">32.96</span>  …  <span class="pl-c1">43.37</span>, <span class="pl-c1">43.46</span>, <span class="pl-c1">41.77</span>, <span class="pl-c1">43.68</span>, <span class="pl-c1">45.36</span>, <span class="pl-c1">41.53</span>, <span class="pl-c1">36.25</span>, …
  <span class="pl-s"><span class="pl-pds">"</span>groupIdList<span class="pl-pds">"</span></span>   <span class="pl-k">=&gt;</span> Int32[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">5</span>, <span class="pl-c1">6</span>, <span class="pl-c1">7</span>, <span class="pl-c1">8</span>, <span class="pl-c1">9</span>, <span class="pl-c1">10</span>  …  <span class="pl-c1">188</span>, <span class="pl-c1">189</span>, <span class="pl-c1">190</span>, <span class="pl-c1">191</span>, <span class="pl-c1">192</span>, <span class="pl-c1">193</span>, <span class="pl-c1">194</span>, <span class="pl-c1">195</span>, <span class="pl-c1">196</span>, <span class="pl-c1">197</span>]
  <span class="pl-s"><span class="pl-pds">"</span>structureId<span class="pl-pds">"</span></span>   <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>4HHB<span class="pl-pds">"</span></span>
  <span class="pl-s"><span class="pl-pds">"</span>unitCell<span class="pl-pds">"</span></span>      <span class="pl-k">=&gt;</span> Any[<span class="pl-c1">63.15</span>, <span class="pl-c1">83.59</span>, <span class="pl-c1">53.8</span>, <span class="pl-c1">90.0</span>, <span class="pl-c1">99.34</span>, <span class="pl-c1">90.0</span>]
  <span class="pl-s"><span class="pl-pds">"</span>numAtoms<span class="pl-pds">"</span></span>      <span class="pl-k">=&gt;</span> <span class="pl-c1">4779</span>
  <span class="pl-s"><span class="pl-pds">"</span>groupList<span class="pl-pds">"</span></span>     <span class="pl-k">=&gt;</span> Any[<span class="pl-c1">Dict</span><span class="pl-c1">{Any,Any}</span>(<span class="pl-c1">Pair</span><span class="pl-c1">{Any,Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>groupName<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>VAL<span class="pl-pds">"</span></span>),<span class="pl-c1">Pair</span><span class="pl-c1">{Any,Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>bondAtomList<span class="pl-pds">"</span></span>, Any[<span class="pl-c1">1</span>, <span class="pl-c1">0</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>, <span class="pl-c1">4</span>, <span class="pl-c1">1</span>, <span class="pl-c1">5</span>, <span class="pl-c1">4</span>, <span class="pl-c1">6</span>, <span class="pl-c1">4</span>]),Pair{A…
  <span class="pl-s"><span class="pl-pds">"</span>numChains<span class="pl-pds">"</span></span>     <span class="pl-k">=&gt;</span> <span class="pl-c1">14</span>
  <span class="pl-s"><span class="pl-pds">"</span>groupTypeList<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> Int32[<span class="pl-c1">0</span>, <span class="pl-c1">11</span>, <span class="pl-c1">22</span>, <span class="pl-c1">13</span>, <span class="pl-c1">9</span>, <span class="pl-c1">7</span>, <span class="pl-c1">1</span>, <span class="pl-c1">21</span>, <span class="pl-c1">10</span>, <span class="pl-c1">0</span>  …  <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>]
  ⋮               <span class="pl-k">=&gt;</span> ⋮</pre></div>
<p><code>pdbid::AbstractString</code> - PDB ID of the structure.</p>
<p><strong>To parse an existing MMTF file as Julia Dict.</strong></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; MMTFDict = parsemmtf(&quot;path/to/MMTF/file&quot;, gzip=false)
"><pre>julia<span class="pl-k">&gt;</span> MMTFDict <span class="pl-k">=</span> <span class="pl-c1">parsemmtf</span>(<span class="pl-s"><span class="pl-pds">"</span>path/to/MMTF/file<span class="pl-pds">"</span></span>, gzip<span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<p><code>gzip::Bool</code> - if set to <code>true</code>, parses a compressed MMTF file.</p>
<p><strong>To write a valid MMTF Julia Dict as MMTF file</strong></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; writemmtf(MMTFdict, &quot;path/to/write/MMTF/file&quot;, gzip=false)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">writemmtf</span>(MMTFdict, <span class="pl-s"><span class="pl-pds">"</span>path/to/write/MMTF/file<span class="pl-pds">"</span></span>, gzip<span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<p><code>gzip::Bool</code> - if set to <code>true</code>, writes a compressed MMTF file.</p>
<p>See <a href="https://github.com/BioJulia/BioStructures.jl">BioStructures.jl</a> for how to read MMTF files into a hierarchical data structure and convert them to PDB/mmCIF files.</p>
<h2><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Citation</h2>
<p>If you use MMTF.jl, please cite the BioStructures.jl paper where it is mentioned:</p>
<p>Greener JG, Selvaraj J and Ward BJ. BioStructures.jl: read, write and manipulate macromolecular structures in Julia, <em>Bioinformatics</em> 36(14):4206-4207 (2020) - <a href="https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/btaa502/5837108?guestAccessKey=aec90643-1d43-4521-9883-4a4a669187da" rel="nofollow">link</a> - <a href="https://github.com/BioJulia/BioStructures.jl/blob/master/paper.pdf">PDF</a></p>
<h2><a id="user-content-contributing-and-questions" class="anchor" aria-hidden="true" href="#contributing-and-questions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing and Questions</h2>
<p>We appreciate contributions from users including reporting bugs, fixing issues,
improving performance and adding new features.</p>
<p>If you have a question about
contributing or using this package, our <a href="https://gitter.im/BioJulia/General" rel="nofollow">Gitter chat room</a> would be
the best starting place to communicate with other users and developers.
You are encouraged to use the <a href="https://discourse.julialang.org/c/domain/bio" rel="nofollow">Bio category of the Julia discourse
site</a> for technical questions.</p>
</article></div>