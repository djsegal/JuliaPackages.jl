<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-evaluationcfjl" class="anchor" aria-hidden="true" href="#evaluationcfjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>EvaluationCF.jl</h1>
<p><em>Package for evaluation of predictive algorithms. It contains metrics, data partitioning and more.</em></p>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://travis-ci.org/JuliaRecsys/EvaluationCF.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7847b0adbb8e5779473513c1e237114d8e88e062/68747470733a2f2f7472617669732d63692e6f72672f4a756c69615265637379732f4576616c756174696f6e43462e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.org/JuliaRecsys/EvaluationCF.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://coveralls.io/github/JuliaRecsys/EvaluationCF.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/8fde66f3383062ab248726c40b44e41414a4981c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c69615265637379732f4576616c756174696f6e43462e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="" data-canonical-src="https://coveralls.io/repos/JuliaRecsys/EvaluationCF.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a> <a href="https://codecov.io/gh/JuliaRecsys/EvaluationCF.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e800fbc6975a2e6463a154cb7033068d6afb6e53/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69615265637379732f4576616c756174696f6e43462e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaRecsys/EvaluationCF.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>The package can be installed with the Julia package manager.
From the Julia REPL, type <code>]</code> to enter the Pkg REPL mode and run:</p>
<pre><code>pkg&gt; add EvaluationCF
</code></pre>
<p>Or, equivalently, via the <code>Pkg</code> API:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>EvaluationCF<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<pre><code>julia&gt; using Persa

julia&gt; using DatasetsCF

julia&gt; using ModelBasedCF

julia&gt; using EvaluationCF

julia&gt; dataset = DatasetsCF.MovieLens()
Collaborative Filtering Dataset
- # users: 943
- # items: 1682
- # ratings: 100000
- Ratings Preference: [1, 2, 3, 4, 5]

julia&gt; sample = EvaluationCF.HoldOut(dataset)

julia&gt; for (ds_train, ds_test) in sample
           model = ModelBasedCF.RandomModel(ds_train)
           mae = EvaluationCF.mae(model, ds_test)
           rmse = EvaluationCF.rmse(model, ds_test)
           coverage = EvaluationCF.coverage(model, ds_test)
           text =
           """ Experiment:
               MAE: $(mae)
               RMSE: $(rmse)
               Coverage: $(coverage)
           """

           print(text)
       end
 Experiment:
    MAE: 1.5095490450954905
    RMSE: 1.9079140406216837
    Coverage: 1.0
</code></pre>
</article></div>