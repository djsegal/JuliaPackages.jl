<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><div align="center"> <a target="_blank" rel="noopener noreferrer" href="images/transformerslogo.png"><img src="images/transformerslogo.png" alt="Transformers.jl" width="512" style="max-width:100%;"></a></div>
<p><a href="https://travis-ci.com/chengchingwen/Transformers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/86dfedb8d826db6e1b6aa36a99f73dd349508240/68747470733a2f2f7472617669732d63692e636f6d2f6368656e676368696e6777656e2f5472616e73666f726d6572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/chengchingwen/Transformers.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/chengchingwen/Transformers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c662404306e3e275f1183c95706d4e557b678500/68747470733a2f2f636f6465636f762e696f2f67682f6368656e676368696e6777656e2f5472616e73666f726d6572732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/chengchingwen/Transformers.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://chengchingwen.github.io/Transformers.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<p>Julia implementation of <a href="https://arxiv.org/abs/1706.03762" rel="nofollow">transformer</a>-based models, with <a href="https://github.com/FluxML/Flux.jl">Flux.jl</a>.</p>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h1>
<p>In the Julia REPL:</p>
<pre><code>]add Transformers
</code></pre>
<p>For using GPU, install &amp; build:</p>
<pre><code>]add CuArrays

]build 

julia&gt; using CuArrays

julia&gt; using Transformers

#run the model below
.
.
.
</code></pre>
<h1><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example</h1>
<p>Using pretrained Bert with <code>Transformers.jl</code>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Transformers
<span class="pl-k">using</span> Transformers<span class="pl-k">.</span>Basic
<span class="pl-k">using</span> Transformers<span class="pl-k">.</span>Pretrain

ENV[<span class="pl-s"><span class="pl-pds">"</span>DATADEPS_ALWAYS_ACCEPT<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-c1">true</span>

bert_model, wordpiece, tokenizer <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">pretrain</span>"</span>bert-uncased_L-12_H-768_A-12<span class="pl-pds">"</span></span>
vocab <span class="pl-k">=</span> <span class="pl-c1">Vocabulary</span>(wordpiece)

text1 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Peter Piper picked a peck of pickled peppers<span class="pl-pds">"</span></span> <span class="pl-k">|&gt;</span> tokenizer <span class="pl-k">|&gt;</span> wordpiece
text2 <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Fuzzy Wuzzy was a bear<span class="pl-pds">"</span></span> <span class="pl-k">|&gt;</span> tokenizer <span class="pl-k">|&gt;</span> wordpiece

text <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>[CLS]<span class="pl-pds">"</span></span>; text1; <span class="pl-s"><span class="pl-pds">"</span>[SEP]<span class="pl-pds">"</span></span>; text2; <span class="pl-s"><span class="pl-pds">"</span>[SEP]<span class="pl-pds">"</span></span>]
<span class="pl-c1">@assert</span> text <span class="pl-k">==</span> [
    <span class="pl-s"><span class="pl-pds">"</span>[CLS]<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>peter<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>piper<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>picked<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>peck<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>of<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>pick<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>##led<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>peppers<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>[SEP]<span class="pl-pds">"</span></span>, 
    <span class="pl-s"><span class="pl-pds">"</span>fuzzy<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>wu<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>##zzy<span class="pl-pds">"</span></span>,  <span class="pl-s"><span class="pl-pds">"</span>was<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>bear<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>[SEP]<span class="pl-pds">"</span></span>
]

token_indices <span class="pl-k">=</span> <span class="pl-c1">vocab</span>(text)
segment_indices <span class="pl-k">=</span> [<span class="pl-c1">fill</span>(<span class="pl-c1">1</span>, <span class="pl-c1">length</span>(text1)<span class="pl-k">+</span><span class="pl-c1">2</span>); <span class="pl-c1">fill</span>(<span class="pl-c1">2</span>, <span class="pl-c1">length</span>(text2)<span class="pl-k">+</span><span class="pl-c1">1</span>)]

sample <span class="pl-k">=</span> (tok <span class="pl-k">=</span> token_indices, segment <span class="pl-k">=</span> segment_indices)

bert_embedding <span class="pl-k">=</span> sample <span class="pl-k">|&gt;</span> bert_model<span class="pl-k">.</span>embed
feature_tensors <span class="pl-k">=</span> bert_embedding <span class="pl-k">|&gt;</span> bert_model<span class="pl-k">.</span>transformers</pre></div>
<p>See <code>example</code> folder for the complete example.</p>
<h1><a id="user-content-roadmap" class="anchor" aria-hidden="true" href="#roadmap"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Roadmap</h1>
<h2><a id="user-content-what-we-have-in-v010" class="anchor" aria-hidden="true" href="#what-we-have-in-v010"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>What we have in v0.1.0</h2>
<ul>
<li><code>Transformer</code> and <code>TransformerDecoder</code> support for both 2d &amp; 3d data.</li>
<li><code>PositionEmbedding</code> implementation.</li>
<li><code>Positionwise</code> for handling 2d &amp; 3d input.</li>
<li>docstring for most of the functions.</li>
<li>runable examples (see <code>example</code> folder)</li>
</ul>
<h2><a id="user-content-what-we-will-have-in-v020" class="anchor" aria-hidden="true" href="#what-we-will-have-in-v020"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>What we will have in v0.2.0</h2>
<ul>
<li>The BERT model (<a href="https://nextjournal.com/chengchingwen" rel="nofollow">JSoC 2019</a>)</li>
<li>tutorials</li>
<li>complete GPT APIs</li>
<li>GPT-2 model</li>
<li>docs site for this project</li>
<li>benchmarks</li>
<li>more examples</li>
</ul>
<h2><a id="user-content-what-we-might-have-in-v020-if-we-are-lucky" class="anchor" aria-hidden="true" href="#what-we-might-have-in-v020-if-we-are-lucky"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>What we might have in v0.2.0 (If we are lucky)</h2>
<ul>
<li>TPU support with XLA.jl</li>
<li>complete docs for datasets</li>
<li>more datasets support</li>
</ul>
<h2><a id="user-content-messy-checklist" class="anchor" aria-hidden="true" href="#messy-checklist"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Messy checklist</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> refactor code</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> optimize performance</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> better dataset API</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> more datasets</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> openai gpt model</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> google bert model</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> openai gpt-2 model</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> TPU support</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> openai sparse transformer</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> benchmarks</li>
</ul>
</article></div>