<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-mdinclude" class="anchor" aria-hidden="true" href="#mdinclude"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MDInclude</h1>
<p><a href="https://travis-ci.org/MichaelHatherly/MDInclude.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/10a7135546a4e3dbd59226142a687d369270d3947961cc00b6d916eca9ca4e48/68747470733a2f2f7472617669732d63692e6f72672f4d69636861656c4861746865726c792f4d44496e636c7564652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/MichaelHatherly/MDInclude.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/MichaelHatherly/MDInclude.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/311825d1dcc25f0f909308b75ad4787daadbab7918a36e722f56deaf69eea810/68747470733a2f2f636f6465636f762e696f2f67682f4d69636861656c4861746865726c792f4d44496e636c7564652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/MichaelHatherly/MDInclude.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p><code>include</code> your markdown files as if they were Julia source files. This package
was inspired by the similar package for Jupyter notebooks called
<a href="https://github.com/stevengj/NBInclude.jl">NBInclude.jl</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="pkg&gt; add https://github.com/MichaelHatherly/MDInclude.jl
"><pre><code>pkg&gt; add https://github.com/MichaelHatherly/MDInclude.jl
</code></pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Why not turn your README into the package source! What could go wrong...</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="module MyPackage

using MDInclude

@mdinclude(&quot;../README.md&quot;)

end
"><pre><span class="pl-k">module</span> MyPackage

<span class="pl-k">using</span> MDInclude

<span class="pl-c1">@mdinclude</span>(<span class="pl-s"><span class="pl-pds">"</span>../README.md<span class="pl-pds">"</span></span>)

<span class="pl-k">end</span></pre></div>
<p>More seriously though, you can use the macro <code>@mdinclude</code> as you would
<code>include</code> from <code>Base</code> or <code>@nbinclude</code> from NBInclude.jl to write your package,
or just for writing a once-off script.</p>
<p>Additionally, a <code>mdinclude</code> function is provided so that you can set the
<code>Module</code> into which you want to evaluate the code in your markdown file.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="mdinclude(MyModule, &quot;file.md&quot;)
"><pre><span class="pl-c1">mdinclude</span>(MyModule, <span class="pl-s"><span class="pl-pds">"</span>file.md<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-custom-evaluation" class="anchor" aria-hidden="true" href="#custom-evaluation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Custom Evaluation</h2>
<p>The parsing and evaluation of markdown files can be customised by providing a
"configuration" object as the final argument to either <code>@mdinclude</code> or
<code>mdinclude</code>. This can be used to change what is done during each step of
parsing and evaluating the file. The following functions provide access points
within the parsing and evaluation steps for customisation:</p>
<ul>
<li><code>markdown(config, path)</code></li>
<li><code>isvalid(config, node)</code></li>
<li><code>source(config, node)</code></li>
<li><code>expression(config, ex)</code></li>
<li><code>setmodule(config, node, default)</code></li>
<li><code>capture(f, config)</code></li>
</ul>
<p>Read the docstrings for details regarding their use.</p>
</article></div>