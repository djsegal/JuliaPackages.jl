<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-bsplinekitjl" class="anchor" aria-hidden="true" href="#bsplinekitjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>BSplineKit.jl</h1>
<p><a href="https://jipolanco.github.io/BSplineKit.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://jipolanco.github.io/BSplineKit.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/jipolanco/BSplineKit.jl/actions"><img src="https://github.com/jipolanco/BSplineKit.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/jipolanco/BSplineKit.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5b673c38e72c4b5982168328647c458e3f9570a658220459134b041eafbc06e4/68747470733a2f2f636f6465636f762e696f2f67682f6a69706f6c616e636f2f4253706c696e654b69742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/jipolanco/BSplineKit.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Tools for B-spline based Galerkin and collocation methods in Julia.</p>
<h2><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h2>
<p>This package provides:</p>
<ul>
<li>
<p>B-spline bases of arbitrary order on uniform and non-uniform grids;</p>
</li>
<li>
<p>evaluation of splines and their derivatives and integrals;</p>
</li>
<li>
<p>spline interpolations;</p>
</li>
<li>
<p>basis recombination, for generating bases satisfying homogeneous boundary
conditions using linear combinations of B-splines.
Supported boundary conditions include Dirichlet, Neumann, Robin, and more
complex variants;</p>
</li>
<li>
<p>banded Galerkin and collocation matrices for solving differential equations,
using B-spline and recombined bases;</p>
</li>
<li>
<p>efficient "banded" 3D arrays as an extension of banded matrices.
These can store 3D tensors associated to quadratic terms in Galerkin methods.</p>
</li>
</ul>
<h2><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example usage</h2>
<p>The following is a very brief overview of some of the functionality provided
by this package.</p>
<ul>
<li>
<p>Create B-spline basis of order <code>k = 4</code> (polynomial degree 3) from a given
set of breakpoints:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="breaks = -1:0.1:1
B = BSplineBasis(4, breaks)
"><pre>breaks <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0.1</span><span class="pl-k">:</span><span class="pl-c1">1</span>
B <span class="pl-k">=</span> <span class="pl-c1">BSplineBasis</span>(<span class="pl-c1">4</span>, breaks)</pre></div>
</li>
<li>
<p>Create derived basis satisfying homogeneous <a href="https://en.wikipedia.org/wiki/Robin_boundary_condition" rel="nofollow">Robin boundary
conditions</a> on the
two boundaries:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="bc = Derivative(0) + 3Derivative(1)
R = RecombinedBSplineBasis(bc, B)  # satisfies u ∓ 3u' = 0 on the left/right boundary
"><pre>bc <span class="pl-k">=</span> <span class="pl-c1">Derivative</span>(<span class="pl-c1">0</span>) <span class="pl-k">+</span> <span class="pl-c1">3</span><span class="pl-c1">Derivative</span>(<span class="pl-c1">1</span>)
R <span class="pl-k">=</span> <span class="pl-c1">RecombinedBSplineBasis</span>(bc, B)  <span class="pl-c"><span class="pl-c">#</span> satisfies u ∓ 3u' = 0 on the left/right boundary</span></pre></div>
</li>
<li>
<p>Construct <a href="https://en.wikipedia.org/wiki/Mass_matrix" rel="nofollow">mass matrix</a> and
<a href="https://en.wikipedia.org/wiki/Stiffness_matrix" rel="nofollow">stiffness matrix</a> for
the Galerkin method in the recombined basis:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# By default, M and L are Hermitian banded matrices
M = galerkin_matrix(R)
L = galerkin_matrix(R, (Derivative(1), Derivative(1)))
"><pre><span class="pl-c"><span class="pl-c">#</span> By default, M and L are Hermitian banded matrices</span>
M <span class="pl-k">=</span> <span class="pl-c1">galerkin_matrix</span>(R)
L <span class="pl-k">=</span> <span class="pl-c1">galerkin_matrix</span>(R, (<span class="pl-c1">Derivative</span>(<span class="pl-c1">1</span>), <span class="pl-c1">Derivative</span>(<span class="pl-c1">1</span>)))</pre></div>
</li>
<li>
<p>Construct banded 3D tensor associated to non-linear term of the <a href="https://en.wikipedia.org/wiki/Burgers%27_equation" rel="nofollow">Burgers
equation</a>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="T = galerkin_tensor(R, (Derivative(0), Derivative(1), Derivative(0)))
"><pre>T <span class="pl-k">=</span> <span class="pl-c1">galerkin_tensor</span>(R, (<span class="pl-c1">Derivative</span>(<span class="pl-c1">0</span>), <span class="pl-c1">Derivative</span>(<span class="pl-c1">1</span>), <span class="pl-c1">Derivative</span>(<span class="pl-c1">0</span>)))</pre></div>
</li>
</ul>
<p>A tutorial showcasing this and much more functionality is coming in the
future.</p>
<h2><a id="user-content-comparison-with-similar-packages" class="anchor" aria-hidden="true" href="#comparison-with-similar-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Comparison with similar packages</h2>
<p>This project presents several similarities with the excellent
<a href="https://github.com/sostock/BSplines.jl">BSplines</a> package.
This includes various types and functions which have the same names (e.g.
<code>BSplineBasis</code>, <code>Spline</code>, <code>knots</code>, <code>order</code>).
In most cases this is pure coincidence, as I wasn't aware of BSplines when
development of BSplineKit started.
Some inspiration was later taken from that package (including, for instance,
the idea of a <code>Derivative</code> type).</p>
<p>Some design differences with the BSplines package include:</p>
<ul>
<li>
<p>in BSplineKit, the B-spline order <code>k</code> is considered a compile-time
constant, as it is encoded in the <code>BSplineBasis</code> type.
This leads to important performance gains when evaluating splines.
It also enables the construction of efficient 3D banded structures based on
stack-allocated
<a href="https://github.com/JuliaArrays/StaticArrays.jl">StaticArrays</a>;</p>
</li>
<li>
<p>we do not assume that knots are repeated <code>k</code> times at the boundaries, even
though this is still the default when creating a B-spline basis.
This is to allow the possibility of imposing periodic boundary conditions
on the basis.</p>
</li>
</ul>
<p>In addition to the common functionality,
BSplineKit provides easy to use tools for solving
<a href="https://en.wikipedia.org/wiki/Boundary_value_problem" rel="nofollow">boundary-value problems</a>
using B-splines.
This includes the generation of bases satisfying a chosen set of boundary
conditions (<em>basis recombination</em>), as well as the construction of
arrays for solving such problems using collocation and Galerkin methods.</p>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h2>
<ul>
<li>
<p>C. de Boor, <em>A Practical Guide to Splines</em>. New York: Springer-Verlag, 1978.</p>
</li>
<li>
<p>J. P. Boyd, <em>Chebyshev and Fourier Spectral Methods</em>, Second Edition.
Mineola, N.Y: Dover Publications, 2001.</p>
</li>
<li>
<p>O. Botella and K. Shariff, <em>B-spline Methods in Fluid Dynamics</em>, Int. J. Comput.
Fluid Dyn. 17, 133 (2003).</p>
</li>
</ul>
</article></div>