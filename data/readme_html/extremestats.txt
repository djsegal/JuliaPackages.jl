<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p align="center">
  <a target="_blank" rel="noopener noreferrer" href="docs/ExtremeStats.png"><img src="docs/ExtremeStats.png" height="200" style="max-width:100%;"></a><br>
  <a href="https://github.com/JuliaEarth/ExtremeStats.jl/actions">
    <img src="https://camo.githubusercontent.com/babd2f178042495e2d8625f9ed888eee972cfd2357d8e98d78cb65056783856b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f4a756c696145617274682f45787472656d6553746174732e6a6c2f43493f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/github/workflow/status/JuliaEarth/ExtremeStats.jl/CI?style=flat-square" style="max-width:100%;">
  </a>
  <a href="https://codecov.io/gh/JuliaEarth/ExtremeStats.jl" rel="nofollow">
    <img src="https://camo.githubusercontent.com/8761f37d1baef469d3657c5544e20b56749152d68909f05f087ef5ddfb917c65/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f4a756c696145617274682f45787472656d6553746174732e6a6c3f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/codecov/c/github/JuliaEarth/ExtremeStats.jl?style=flat-square" style="max-width:100%;">
  </a>
  <a href="LICENSE">
    <img src="https://camo.githubusercontent.com/6ae43f07818e28c456bc0e4f35a61ebb4f08677499bf4eaa31c508107ccec75f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square" style="max-width:100%;">
  </a>
</p>
<p>This package provides a set of tools for analysing and estimating extreme value distributions.
It defines two types, <code>BlockMaxima</code> and <code>PeakOverThreshold</code>, which can be used to filter a
collection of values into a collection of maxima.</p>
<p>Given a collection of maxima produced by either model above, one can start estimating heavy-tail
distributions and plotting classical extreme value statistics.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Get the latest stable release with Julia's package manager:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="] add ExtremeStats
"><pre>] add ExtremeStats</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Given a collection of values <code>xs</code> (e.g. time series), one can retrieve its maxima:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using ExtremeStats

# find maxima with blocks of size 50
bm = BlockMaxima(xs, 50)

# get values above a threshold of 100.
pm = PeakOverThreshold(xs, 100.)
"><pre><span class="pl-k">using</span> ExtremeStats

<span class="pl-c"><span class="pl-c">#</span> find maxima with blocks of size 50</span>
bm <span class="pl-k">=</span> <span class="pl-c1">BlockMaxima</span>(xs, <span class="pl-c1">50</span>)

<span class="pl-c"><span class="pl-c">#</span> get values above a threshold of 100.</span>
pm <span class="pl-k">=</span> <span class="pl-c1">PeakOverThreshold</span>(xs, <span class="pl-c1">100.</span>)</pre></div>
<p>For the block maxima model, the values <code>xs</code> need to represent a measurement over time,
whereas the peak over threshold model does not assume any ordering in the data. Both
models are lazy, and the maxima are only returned via a <code>collect</code> call.</p>
<h3><a id="user-content-plotting" class="anchor" aria-hidden="true" href="#plotting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Plotting</h3>
<p>A few plot recipes are defined for maxima as well as for the original values <code>xs</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Plots

# mean excess plot
excessplot(xs)

# Pareto quantile plot
paretoplot(xs)

# return level plot
returnplot(xs)
"><pre><span class="pl-k">using</span> Plots

<span class="pl-c"><span class="pl-c">#</span> mean excess plot</span>
<span class="pl-c1">excessplot</span>(xs)

<span class="pl-c"><span class="pl-c">#</span> Pareto quantile plot</span>
<span class="pl-c1">paretoplot</span>(xs)

<span class="pl-c"><span class="pl-c">#</span> return level plot</span>
<span class="pl-c1">returnplot</span>(xs)</pre></div>
<h3><a id="user-content-fitting" class="anchor" aria-hidden="true" href="#fitting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Fitting</h3>
<p>Generalized extreme value (GEV) and generalized Pareto (GP) distributions from the <code>Distributions.jl</code> package can be fit
to maxima via constrained optimization (maximum likelihood + extreme value index constraints):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Distributions

# fit GEV to block maxima
fit(GeneralizedExtremeValue, bm)

# fit GP to peak over threshold
fit(GeneralizedPareto, pm)
"><pre><span class="pl-k">using</span> Distributions

<span class="pl-c"><span class="pl-c">#</span> fit GEV to block maxima</span>
<span class="pl-c1">fit</span>(GeneralizedExtremeValue, bm)

<span class="pl-c"><span class="pl-c">#</span> fit GP to peak over threshold</span>
<span class="pl-c1">fit</span>(GeneralizedPareto, pm)</pre></div>
<h3><a id="user-content-statistics" class="anchor" aria-hidden="true" href="#statistics"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Statistics</h3>
<p>A few statistics are defined:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# return statistics
returnlevels(xs)

# mean excess with previous k values
meanexcess(xs, k)
"><pre><span class="pl-c"><span class="pl-c">#</span> return statistics</span>
<span class="pl-c1">returnlevels</span>(xs)

<span class="pl-c"><span class="pl-c">#</span> mean excess with previous k values</span>
<span class="pl-c1">meanexcess</span>(xs, k)</pre></div>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h2>
<p>The book <a href="http://www.springer.com/us/book/9781852334598" rel="nofollow">An Introduction to Statistical Modeling of Extreme Values</a>
by Stuart Coles gives a practical introduction to the theory. Most other books I've encountered are too theoretical
or expose topics that are somewhat disconnected.</p>
</article></div>