<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-minlptestsjl" class="anchor" aria-hidden="true" href="#minlptestsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>MINLPTests.jl</h1>
<p><strong>master:</strong> <a href="https://travis-ci.org/JuliaOpt/MINLPTests.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2f26c1e1b9c222b11ec8090fbe03b78b0bfe9583/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614f70742f4d494e4c5054657374732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaOpt/MINLPTests.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>This is a collection of JuMP models for testing nonlinear/polynomial solvers with and without discrete variables in JuMP.</p>
<p>This version is compatible with the current release of JuMP (using MathOptInterface).  Past versions are compatable with previous releases of JuMP (using MathProgBase).</p>
<h2><a id="user-content-test-design-guidelines" class="anchor" aria-hidden="true" href="#test-design-guidelines"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Test Design Guidelines</h2>
<ul>
<li>The tests are organized into broad categories based on the scope of typical solvers (e.g. continuous, convex functions, polynomial, ...)</li>
<li>Unit tests for JuMP integration testing should be "easy" models.  For example, it should be possible for a non-global solver to find the global solution in these tests</li>
<li>Mathematical property tests can be more difficult but should strive to be as simple as possible</li>
</ul>
<h2><a id="user-content-test-naming-conventions" class="anchor" aria-hidden="true" href="#test-naming-conventions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Test Naming Conventions</h2>
<p>Directories:</p>
<ul>
<li>nlp - nonconvex NLP models</li>
<li>nlp-cvx - convex NLP models</li>
<li>nlp-mi - nonconvex MINLP models</li>
<li>nlp-mi-cvx - convex MINLP models</li>
<li>poly - nonconvex polynomial models</li>
<li>poly-cvx - convex polynomial models</li>
<li>poly-mi - nonconvex polynomial models</li>
<li>poly-mi-cvx - convex polynomial models</li>
</ul>
<p>File Names:</p>
<ul>
<li>0xx_yyz - unit tests</li>
<li>1xx_yyz - 2D mathematical properties</li>
<li>2xx_yyz - 3D mathematical properties</li>
<li>5xx_yyz - nD mathematical properties</li>
<li>9xx_yyz - integration tests</li>
</ul>
<p>z indicates a variant of a base problem</p>
<h2><a id="user-content-test-coverage-overview" class="anchor" aria-hidden="true" href="#test-coverage-overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Test Coverage Overview</h2>
<h3><a id="user-content-nlp" class="anchor" aria-hidden="true" href="#nlp"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>NLP</h3>
<ul>
<li>
<p>non-linear model without stating values (nlp/003_010)</p>
</li>
<li>
<p>non-linear model with stating values (nlp/002_010)</p>
</li>
<li>
<p>non-linear model partial stating values (nlp/001_010)</p>
</li>
<li>
<p>non-linear objective only (nlp/001_010)</p>
</li>
<li>
<p>non-linear constraints only (nlp/002_010)</p>
</li>
<li>
<p>non-linear objective and constraints (nlp/003_010)</p>
</li>
<li>
<p>non-linear objective + linear constraints (nlp/004_010)</p>
</li>
<li>
<p>non-linear objective + linear constraints (as NL) (nlp/004_011)</p>
</li>
<li>
<p>non-linear objective + quard constraints (nlp/004_010)</p>
</li>
<li>
<p>non-linear objective + quard constraints (as NL) (nlp/004_011)</p>
</li>
<li>
<p>minimization objective (nlp/001_010)</p>
</li>
<li>
<p>maximization objective (nlp/003_010)</p>
</li>
<li>
<p>linear objective + non-linear constraints (nlp/003_012)</p>
</li>
<li>
<p>linear objective (as NL) + non-linear constraints (nlp/003_013)</p>
</li>
<li>
<p>quad objective + non-linear constraints (nlp/003_014)</p>
</li>
<li>
<p>quad objective (as NL) + non-linear constraints (nlp/003_015)</p>
</li>
<li>
<p>non-linear objective (with offset const) + non-linear constraints (nlp/003_011)</p>
</li>
<li>
<p>objective (with offset const) + non-linear constraints (nlp/003_016)</p>
</li>
<li>
<p>status infeasible (nlp/007_010)</p>
</li>
<li>
<p>get duals (nlp/008_010, 008_011)</p>
</li>
<li>
<p>non-linear functions</p>
<ul>
<li>* (nlp/004_010)</li>
<li>/ (nlp/005_010)</li>
<li>\ (nlp/005_011)</li>
<li>^ (nlp/001_010)</li>
<li>sqrt (nlp/003_010)</li>
<li>abs (nlp/004_010)</li>
<li>exp (nlp/001_010)</li>
<li>log (nlp/002_010)</li>
<li>sin (nlp/003_010)</li>
<li>cos (nlp/001_010)</li>
<li>tan (nlp/004_010)</li>
<li>user defined (nlp/006_010)</li>
</ul>
</li>
</ul>
<h3><a id="user-content-minlp" class="anchor" aria-hidden="true" href="#minlp"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>MINLP</h3>
<ul>
<li>
<p>non-linear integer variable (nlp-mi/001_010)</p>
</li>
<li>
<p>non-linear binary variable (nlp-mi/002_010)</p>
</li>
<li>
<p>mix of continuous and discrete variables (nlp-mi/001_010)</p>
</li>
<li>
<p>non-linear model without stating values (nlp-mi/003_010)</p>
</li>
<li>
<p>non-linear model with stating values (nlp-mi/002_010)</p>
</li>
<li>
<p>non-linear model partial stating values (nlp-mi/001_010)</p>
</li>
<li>
<p>non-linear objective only (nlp-mi/001_010)</p>
</li>
<li>
<p>non-linear constraints only (nlp-mi/002_010)</p>
</li>
<li>
<p>non-linear objective and constraints (nlp-mi/003_010)</p>
</li>
<li>
<p>non-linear objective + linear constraints (nlp-mi/004_010)</p>
</li>
<li>
<p>non-linear objective + linear constraints (as NL) (nlp-mi/004_011)</p>
</li>
<li>
<p>non-linear objective + quard constraints (nlp-mi/004_010)</p>
</li>
<li>
<p>non-linear objective + quard constraints (as NL) (nlp-mi/004_011)</p>
</li>
<li>
<p>minimization objective (nlp-mi/001_010)</p>
</li>
<li>
<p>maximization objective (nlp-mi/003_010)</p>
</li>
<li>
<p>linear objective + non-linear constraints (nlp-mi/003_012)</p>
</li>
<li>
<p>linear objective (as NL) + non-linear constraints (nlp-mi/003_013)</p>
</li>
<li>
<p>quad objective + non-linear constraints (nlp-mi/003_014)</p>
</li>
<li>
<p>quad objective (as NL) + non-linear constraints (nlp-mi/003_015)</p>
</li>
<li>
<p>non-linear objective (with offset const) + non-linear constraints (nlp-mi/003_011)</p>
</li>
<li>
<p>objective (with offset const) + non-linear constraints (nlp-mi/003_016)</p>
</li>
<li>
<p>status infeasible (nlp-mi/007_010, nlp-mi/070_020)</p>
</li>
<li>
<p>non-linear functions</p>
<ul>
<li>* (nlp-mi/004_010)</li>
<li>/ (nlp-mi/005_010)</li>
<li>\ (nlp-mi/005_011)</li>
<li>^ (nlp-mi/001_010)</li>
<li>sqrt (nlp-mi/003_010)</li>
<li>abs (nlp-mi/004_010)</li>
<li>exp (nlp-mi/001_010)</li>
<li>log (nlp-mi/002_010)</li>
<li>sin (nlp-mi/003_010)</li>
<li>cos (nlp-mi/001_010)</li>
<li>tan (nlp-mi/004_010)</li>
<li>user defined (nlp-mi/006_010)</li>
</ul>
</li>
</ul>
<h3><a id="user-content-untested-julia-functions" class="anchor" aria-hidden="true" href="#untested-julia-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Untested Julia Functions</h3>
<p>A complete list is available <a href="https://docs.julialang.org/en/v1/base/math/" rel="nofollow">here</a></p>
<ul>
<li>roots
<ul>
<li>cbrt</li>
<li>hypot</li>
</ul>
</li>
<li>exponentials
<ul>
<li>log2</li>
<li>log10</li>
<li>exp2</li>
<li>exp10</li>
</ul>
</li>
<li>transcendentals
<ul>
<li>sincos</li>
<li>sind, cosd, tand</li>
<li>sinh, cosh, tanh</li>
<li>asin, acos, atan (x and x,y)</li>
<li>sec, csc, cot</li>
<li>asec, acsc, acot</li>
<li>sech, csch, coth</li>
<li>asinh, acosh, atanh</li>
<li>asech, acsch, acoth</li>
</ul>
</li>
<li>discontinuous
<ul>
<li>rem</li>
<li>mod</li>
<li>ceil</li>
<li>floor</li>
<li>min</li>
<li>max</li>
</ul>
</li>
</ul>
</article></div>