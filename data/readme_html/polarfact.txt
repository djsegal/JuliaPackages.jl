<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-polarfact" class="anchor" aria-hidden="true" href="#polarfact"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PolarFact</h1>
<p><a href="https://travis-ci.org/weijianzhang/PolarFact.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5a6dd682b2050a6741e93558cee77d8cbbba957b/68747470733a2f2f7472617669732d63692e6f72672f7765696a69616e7a68616e672f506f6c6172466163742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/weijianzhang/PolarFact.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>A Julia package for the matrix polar decomposition.</p>
<h2><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Install</h2>
<p>To install the release version, type</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>PolarFact<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Overview</h2>
<p>Every <code>m-by-n</code> matrix <code>A</code> has a polar decomposition <code>A=UH</code>,
where the <code>m-by-n</code> matrix <code>U</code> has orthonormal columns if <code>m&gt;n</code>
or orthonormal rows if <code>m&lt;n</code> and the <code>n-by-n</code> matrix <code>H</code> is
Hermitian positive semidefinite. For a square matrix <code>A</code>, <code>H</code> is
unique. If in addition, <code>A</code> is nonsingular, then <code>H</code> is positive
definite and <code>U</code> is unique.</p>
<p>The polar decomposition is closely related to the singular value
decomposition (SVD). In particular, if <code>A = P*S*Q'</code> is a singular
value decomposition of A, then <code>U = P*Q'</code> and <code>H = Q*S*Q'</code> are the
corresponding polar factors. The orthonormal polar factor <code>U</code> is the
nearest orthonormal matrix to <code>A</code> in the Frobenius norm [1, Sec. 8.1].</p>
<p>[1] Nicholas J. Higham, Functions of Matrices: Theory and Computation,
SIAM, Philadelphia, PA, USA, 2008.</p>
<p>This package provides the following algorithms for computing matrix
polar decomposition:</p>
<ul>
<li>
<p>(Scaled) Newton's method</p>
<p>Reference:
[2] Nicholas J. Higham, Computing the Polar Decomposition ---with Applications,
SIAM J. Sci. Statist. Comput. Vol. 7, Num 4 (1986) pp. 1160-1174.</p>
</li>
<li>
<p>the Newton Schulz method</p>
<p>This method can only apply to matrix <code>A</code> such that <code>norm(A) &lt; sqrt(3)</code>.</p>
<p>Reference:
[3] GÃ¼nther Schulz, Iterative Berechnung der reziproken Matrix, Z. Angew.
Math. Mech.,13:57-59, (1933) pp. 114, 181.</p>
</li>
<li>
<p>a hybrid Newton method</p>
<p>Start with (scaled) Newton's method and switch to Newton-Schulz method
when convergence is guaranteed.</p>
<p>Reference:
[4] Nicholas J. Higham and Robert S. Schreiber, Fast Polar
Decomposition of an arbitrary matrix, SIAM, J. Sci. Statist. Comput.
Vol. 11, No. 4 (1990) pp. 648-655</p>
</li>
<li>
<p>Halley's method</p>
<p>Reference:
[5] Y. Nakatsukasa, Z. Bai and F. Gygi, Optimizing Halley's iteration
for computing the matrix polar decomposition, SIAM, J. Mat. Anal.
Vol. 31, Num 5 (2010) pp. 2700-2720.</p>
</li>
<li>
<p>the QR-based Dynamically weighted Halley (QDWH) method [5]</p>
</li>
<li>
<p>the SVD method</p>
</li>
</ul>
<h3><a id="user-content-comments-on-usage" class="anchor" aria-hidden="true" href="#comments-on-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Comments on Usage</h3>
<p>The scaled Newton iteration is a well known and effective method for
computing the polar decomposition. It converges quadratically and is
backward stable under the assumption that the matrix inverses are
computed in a mixed backward forward stable way [6]. The QDWH is a
cubic-rate convergent method.  It is backward stable under the
assumption that column pivoting and either row pivoting or row sorting
are used in the QR factorization [6].  Without scaling, both type of
methods can be slow when the matrix is ill-conditioned.</p>
<p>On many modern computers, matrix multiplication can be performed
very efficiently. The Newton Schulz method requires two matrix
multiplication while the (scaled) Newton method requires one matrix
inversion. Thus the hybrid Newton is more efficient if matrix
multiplication is 2 times faster than the matrix inversion [4].</p>
<p>Comparing to the SVD approach, the iterative algorithms are much more
efficient when the matrix is nearly unitary (as in applications, for
example, where a time-dependent matrix drifts from orthogonality due
to rounding errors or other errors).</p>
<p>[6] Yuji Nakatsukasa and Nicholas J. Higham, Backward stability of
iterations for computing the polar decomposition, SIAM, J.
Matrix Anal. Appl. Vol. 33, No. 2, pp. 460-479.</p>
<h2><a id="user-content-interface" class="anchor" aria-hidden="true" href="#interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Interface</h2>
<p>The package provides a high-level function <code>polarfact</code>:</p>
<div class="highlight highlight-source-julia"><pre>	<span class="pl-c1">polarfact</span>(A; alg, maxiter, tol, verbose)</pre></div>
<p>The meaning of the arguments:</p>
<ul>
<li>
<p><code>A</code> : the input matrix of type <code>Matrix{T}</code>, where <code>T</code> could be
<code>Float16</code>, <code>Float32</code>, <code>Float64</code>, <code>BigFloat</code>.</p>
</li>
<li>
<p><code>alg</code>: a symbol that indicates the factorization algorithm (default = <code>:newton</code>).</p>
<p>This argument accepts the following values:</p>
<ul>
<li><code>:newton</code>: scaled Newton's method</li>
<li><code>:qdwh</code>: the QR-based Dynamically weighted Halley (QDWH) method</li>
<li><code>:halley</code>: Halley's method</li>
<li><code>:schulz</code>: the Newton Schulz method</li>
<li><code>:hybrid</code>: a hybrid Newton method</li>
<li><code>:svd</code>: the SVD method</li>
</ul>
</li>
<li>
<p><code>maxiter</code>: maximum number of iterations (default = <code>100</code>).</p>
</li>
<li>
<p><code>tol</code> :  tolerance (default = <code>cbrt(eps(T))</code>).</p>
</li>
<li>
<p><code>verbose</code> : whether to show procedural information (default = <code>false</code>), where
<code>Iter</code> is the number of iterations, <code>Rel. err.</code> is equal to
<code>norm(preU - U, Inf) / norm(preU, Inf)</code> and <code>Obj.</code> is equal to
<code>norm(I - U'*U, Inf)</code>.</p>
</li>
</ul>
<p><em>Note:</em> <code>maxiter</code>, <code>tol</code> and <code>verbose</code> are not used for the
SVD method.</p>
<p>The output has type <code>PolarFact.Result</code>, which is defined as</p>
<pre><code>	immutable Result{T}
		U::Matrix{T}               # unitary factor
		H::Matrix{T}               # Hermitian positive semidefinite factor
		niters::Union(Int, Nothing)      # number of iterations or Nothing
		converged::Union(Bool, Nothing)  # whether the algorithm converges or Nothing
	end
</code></pre>
<p><em>Note:</em> <code>niters</code> and <code>converged</code> are of type <code>Nothing</code> for the
SVD method.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PolarFact

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">6</span>,<span class="pl-c1">6</span>);

julia<span class="pl-k">&gt;</span> r <span class="pl-k">=</span> <span class="pl-c1">polarfact</span>(A);

julia<span class="pl-k">&gt;</span> r<span class="pl-k">.</span>U
<span class="pl-c1">6</span>x6 Array{Float64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
  <span class="pl-c1">0.78067</span>    <span class="pl-k">-</span><span class="pl-c1">0.0694445</span>   <span class="pl-c1">0.470076</span>    <span class="pl-k">-</span><span class="pl-c1">0.292781</span>   <span class="pl-k">-</span><span class="pl-c1">0.0423338</span>   <span class="pl-c1">0.277934</span> 
 <span class="pl-k">-</span><span class="pl-c1">0.0984991</span>   <span class="pl-c1">0.200495</span>   <span class="pl-k">-</span><span class="pl-c1">0.350106</span>    <span class="pl-k">-</span><span class="pl-c1">0.167351</span>    <span class="pl-c1">0.394071</span>    <span class="pl-c1">0.802638</span> 
  <span class="pl-c1">0.235931</span>    <span class="pl-c1">0.376468</span>    <span class="pl-c1">0.00966701</span>   <span class="pl-c1">0.0259734</span>   <span class="pl-c1">0.78062</span>    <span class="pl-k">-</span><span class="pl-c1">0.438716</span> 
  <span class="pl-c1">0.38059</span>    <span class="pl-k">-</span><span class="pl-c1">0.347928</span>   <span class="pl-k">-</span><span class="pl-c1">0.256805</span>     <span class="pl-c1">0.79899</span>     <span class="pl-c1">0.105905</span>    <span class="pl-c1">0.136195</span> 
  <span class="pl-c1">0.21592</span>     <span class="pl-c1">0.816347</span>   <span class="pl-k">-</span><span class="pl-c1">0.136636</span>     <span class="pl-c1">0.261595</span>   <span class="pl-k">-</span><span class="pl-c1">0.445576</span>    <span class="pl-c1">0.0362852</span>
 <span class="pl-k">-</span><span class="pl-c1">0.365675</span>    <span class="pl-c1">0.160542</span>    <span class="pl-c1">0.756137</span>     <span class="pl-c1">0.422827</span>    <span class="pl-c1">0.154252</span>    <span class="pl-c1">0.257271</span> 

julia<span class="pl-k">&gt;</span> r<span class="pl-k">.</span>niters
<span class="pl-c1">6</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MatrixDepot  <span class="pl-c"><span class="pl-c">#</span> a test matrix collection</span>

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">matrixdepot</span>(<span class="pl-s"><span class="pl-pds">"</span>randsvd<span class="pl-pds">"</span></span>, <span class="pl-c1">20</span>, <span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">15</span>);  <span class="pl-c"><span class="pl-c">#</span> test a very ill conditioned random matrix </span>

julia<span class="pl-k">&gt;</span> r <span class="pl-k">=</span> <span class="pl-c1">polarfact</span>(A, alg <span class="pl-k">=</span> <span class="pl-c1">:newton</span>, verbose <span class="pl-k">=</span> <span class="pl-c1">true</span>);
Iter.    Rel. err.        Obj.         
    <span class="pl-c1">1</span>     <span class="pl-c1">1.548278e+07</span>     <span class="pl-c1">4.804543e+14</span>
    <span class="pl-c1">2</span>     <span class="pl-c1">9.999002e-01</span>     <span class="pl-c1">5.902800e+06</span>
    <span class="pl-c1">3</span>     <span class="pl-c1">9.925194e-01</span>     <span class="pl-c1">7.247316e+02</span>
    <span class="pl-c1">4</span>     <span class="pl-c1">9.317962e-01</span>     <span class="pl-c1">9.261149e+00</span>
    <span class="pl-c1">5</span>     <span class="pl-c1">7.226745e-01</span>     <span class="pl-c1">3.409441e-01</span>
    <span class="pl-c1">6</span>     <span class="pl-c1">1.392861e-01</span>     <span class="pl-c1">2.550612e-03</span>
    <span class="pl-c1">7</span>     <span class="pl-c1">1.272341e-03</span>     <span class="pl-c1">2.760504e-07</span>
    <span class="pl-c1">8</span>     <span class="pl-c1">1.378506e-07</span>     <span class="pl-c1">1.062337e-14</span>

julia<span class="pl-k">&gt;</span> r <span class="pl-k">=</span> <span class="pl-c1">polarfact</span>(A, alg <span class="pl-k">=</span> <span class="pl-c1">:qdwh</span>, verbose <span class="pl-k">=</span> <span class="pl-c1">true</span>);
Iter.    Rel. err.        Obj.         
    <span class="pl-c1">1</span>     <span class="pl-c1">1.018823e+00</span>     <span class="pl-c1">2.294023e+00</span>
    <span class="pl-c1">2</span>     <span class="pl-c1">9.492166e-01</span>     <span class="pl-c1">2.113416e+00</span>
    <span class="pl-c1">3</span>     <span class="pl-c1">6.766440e-01</span>     <span class="pl-c1">7.363896e-01</span>
    <span class="pl-c1">4</span>     <span class="pl-c1">1.337401e-01</span>     <span class="pl-c1">8.038009e-04</span>
    <span class="pl-c1">5</span>     <span class="pl-c1">1.208881e-04</span>     <span class="pl-c1">4.126278e-13</span>
    <span class="pl-c1">6</span>     <span class="pl-c1">6.184049e-14</span>     <span class="pl-c1">2.242130e-15</span>

julia<span class="pl-k">&gt;</span> r <span class="pl-k">=</span> <span class="pl-c1">polarfact</span>(A, alg <span class="pl-k">=</span> <span class="pl-c1">:halley</span>);

julia<span class="pl-k">&gt;</span> r<span class="pl-k">.</span>niters
<span class="pl-c1">34</span>

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">matrixdepot</span>(<span class="pl-s"><span class="pl-pds">"</span>hadamard<span class="pl-pds">"</span></span>, Float32, <span class="pl-c1">8</span>) <span class="pl-c"><span class="pl-c">#</span> test Float32 Hadamard matrix</span>
<span class="pl-c1">8</span>x8 Array{Float32,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>
 <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>
 <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>
 <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>
 <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>
 <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>
 <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>
 <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>   <span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>

julia<span class="pl-k">&gt;</span> r <span class="pl-k">=</span> <span class="pl-c1">polarfact</span>(A)
<span class="pl-c1">Result</span><span class="pl-c1">{Float32}</span>(<span class="pl-c1">8</span>x8 Array{Float32,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>  â¦   <span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>
 <span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>     <span class="pl-k">-</span><span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>
 <span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>      <span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>
 <span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>     <span class="pl-k">-</span><span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>
 <span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>     <span class="pl-k">-</span><span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>
 <span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>  â¦   <span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>
 <span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>     <span class="pl-k">-</span><span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>
 <span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>      <span class="pl-c1">0.353553</span>   <span class="pl-c1">0.353553</span>  <span class="pl-k">-</span><span class="pl-c1">0.353553</span>,<span class="pl-c1">8</span>x8 Array{Float32,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
  <span class="pl-c1">2.82843</span>     <span class="pl-k">-</span><span class="pl-c1">1.49012e-8</span>  <span class="pl-k">-</span><span class="pl-c1">5.96046e-8</span>  â¦  <span class="pl-k">-</span><span class="pl-c1">1.49012e-8</span>  <span class="pl-k">-</span><span class="pl-c1">1.19209e-7</span>  <span class="pl-k">-</span><span class="pl-c1">1.49012e-8</span>
 <span class="pl-k">-</span><span class="pl-c1">1.49012e-8</span>   <span class="pl-c1">2.82843</span>      <span class="pl-c1">5.96046e-8</span>      <span class="pl-c1">5.96046e-8</span>  <span class="pl-k">-</span><span class="pl-c1">4.47035e-8</span>  <span class="pl-k">-</span><span class="pl-c1">7.45058e-8</span>
 <span class="pl-k">-</span><span class="pl-c1">5.96046e-8</span>   <span class="pl-c1">5.96046e-8</span>   <span class="pl-c1">2.82843</span>         <span class="pl-c1">0.0</span>          <span class="pl-c1">8.9407e-8</span>   <span class="pl-k">-</span><span class="pl-c1">8.9407e-8</span> 
 <span class="pl-k">-</span><span class="pl-c1">7.45058e-8</span>   <span class="pl-c1">1.49012e-8</span>   <span class="pl-c1">2.98023e-8</span>      <span class="pl-c1">1.3411e-7</span>    <span class="pl-c1">1.3411e-7</span>    <span class="pl-c1">1.49012e-7</span>
 <span class="pl-k">-</span><span class="pl-c1">2.98023e-8</span>   <span class="pl-c1">4.47035e-8</span>   <span class="pl-c1">0.0</span>             <span class="pl-c1">1.49012e-8</span>   <span class="pl-c1">2.98023e-8</span>  <span class="pl-k">-</span><span class="pl-c1">7.45058e-8</span>
 <span class="pl-k">-</span><span class="pl-c1">1.49012e-8</span>   <span class="pl-c1">5.96046e-8</span>   <span class="pl-c1">0.0</span>         â¦   <span class="pl-c1">2.82843</span>      <span class="pl-c1">1.63913e-7</span>   <span class="pl-c1">7.45058e-8</span>
 <span class="pl-k">-</span><span class="pl-c1">1.19209e-7</span>  <span class="pl-k">-</span><span class="pl-c1">4.47035e-8</span>   <span class="pl-c1">8.9407e-8</span>       <span class="pl-c1">1.63913e-7</span>   <span class="pl-c1">2.82843</span>      <span class="pl-c1">7.45058e-8</span>
 <span class="pl-k">-</span><span class="pl-c1">1.49012e-8</span>  <span class="pl-k">-</span><span class="pl-c1">7.45058e-8</span>  <span class="pl-k">-</span><span class="pl-c1">8.9407e-8</span>       <span class="pl-c1">7.45058e-8</span>   <span class="pl-c1">7.45058e-8</span>   <span class="pl-c1">2.82843</span>   ,<span class="pl-c1">2</span>,<span class="pl-c1">true</span>)
</pre></div>
<h2><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Acknowledgements</h2>
<p>The design of the package is inspired by <a href="https://github.com/JuliaStats/NMF.jl">NMF.jl</a>.</p>
</article></div>