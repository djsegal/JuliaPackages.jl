<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-optionaldata" class="anchor" aria-hidden="true" href="#optionaldata"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>OptionalData</h1>
<p dir="auto"><em>Work with global data that might not be available.</em></p>
<p dir="auto"><a href="https://github.com/helgee/OptionalData.jl/actions"><img src="https://github.com/helgee/OptionalData.jl/workflows/CI/badge.svg?branch=master" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/helgee/OptionalData.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b36cd09e79db296003f2ac4644160bb7bf43dd40a42f94ecdb4651a8f9b08579/68747470733a2f2f636f6465636f762e696f2f67682f68656c6765652f4f7074696f6e616c446174612e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/helgee/OptionalData.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides the <code>@OptionalData</code> macro and the corresponding <code>OptData</code>
type which is a thin wrapper around a nullable value (of type <code>Union{T, Nothing} where T</code>).
It allows you to load and access globally available data at runtime in a type-stable way.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The package can be installed through Julia's package manager:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;OptionalData&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>OptionalData<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto"><em>OptionalData</em> has the following use cases:</p>
<ol dir="auto">
<li>Parts of your package depend on data from the internet while other parts do not.
In the case of a network outage the package should offer a degraded experience but
the independent parts should still function.</li>
<li>Your package requires manual initialisation steps, e.g. loading data from a
user-supplied file, and you do not want to repeat yourself writing code that
checks for the availability of the data.</li>
</ol>
<p dir="auto">You declare optional global data with the <code>@OptionalData</code> macro:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using OptionalData

# @OptionalData name type [error_msg]
@OptionalData OPT_FLOAT Float64 &quot;Forgot to load it?&quot;

# this expands to
const OPT_FLOAT = OptData{Float64}(string(:OPT_FLOAT), &quot;Forgot to load it?&quot;)"><pre><span class="pl-k">using</span> OptionalData

<span class="pl-c"><span class="pl-c">#</span> @OptionalData name type [error_msg]</span>
<span class="pl-c1">@OptionalData</span> OPT_FLOAT Float64 <span class="pl-s"><span class="pl-pds">"</span>Forgot to load it?<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> this expands to</span>
<span class="pl-k">const</span> OPT_FLOAT <span class="pl-k">=</span> <span class="pl-c1">OptData</span><span class="pl-c1">{Float64}</span>(<span class="pl-c1">string</span>(<span class="pl-c1">:OPT_FLOAT</span>), <span class="pl-s"><span class="pl-pds">"</span>Forgot to load it?<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">You access its value with <code>get</code> and check whether it is available with <code>isavailable</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# This will throw a `NoDataError` because OPT_FLOAT does not contain a value, yet.
get(OPT_FLOAT)
# ERROR: OPT_FLOAT is not available. Forgot to load it?
isavailable(OPT_FLOAT) == false"><pre><span class="pl-c"><span class="pl-c">#</span> This will throw a `NoDataError` because OPT_FLOAT does not contain a value, yet.</span>
<span class="pl-c1">get</span>(OPT_FLOAT)
<span class="pl-c"><span class="pl-c">#</span> ERROR: OPT_FLOAT is not available. Forgot to load it?</span>
<span class="pl-c1">isavailable</span>(OPT_FLOAT) <span class="pl-k">==</span> <span class="pl-c1">false</span></pre></div>
<p dir="auto">Use <code>push!</code> to load the data:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="push!(OPT_FLOAT, 3.0)
isavailable(OPT_FLOAT) == true
get(OPT_FLOAT) == 3.0"><pre><span class="pl-c1">push!</span>(OPT_FLOAT, <span class="pl-c1">3.0</span>)
<span class="pl-c1">isavailable</span>(OPT_FLOAT) <span class="pl-k">==</span> <span class="pl-c1">true</span>
<span class="pl-c1">get</span>(OPT_FLOAT) <span class="pl-k">==</span> <span class="pl-c1">3.0</span></pre></div>
</article></div>