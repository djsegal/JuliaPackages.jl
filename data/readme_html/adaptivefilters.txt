<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-adaptivefilters" class="anchor" aria-hidden="true" href="#adaptivefilters"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>AdaptiveFilters</h1>
<p><a href="https://travis-ci.org/baggepinnen/AdaptiveFilters.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/eb351d16cf5dabe34452834b46365e9829dc8c36/68747470733a2f2f7472617669732d63692e6f72672f626167676570696e6e656e2f416461707469766546696c746572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/baggepinnen/AdaptiveFilters.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/baggepinnen/AdaptiveFilters.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f1ea791de5ae8a8a4580efc1f2fb3718991b3798/68747470733a2f2f636f6465636f762e696f2f67682f626167676570696e6e656e2f416461707469766546696c746572732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/baggepinnen/AdaptiveFilters.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Simple adaptive AR filters. We export two functions:</p>
<div class="highlight highlight-source-julia"><pre>yh <span class="pl-k">=</span> <span class="pl-c1">adaptive_filter</span>(y, alg<span class="pl-k">=</span>MSPI; order<span class="pl-k">=</span><span class="pl-c1">4</span>, lr<span class="pl-k">=</span><span class="pl-c1">0.1</span>)</pre></div>
<p>This filters <code>y</code> with an adaptive AR (only poles) filter with specified order and returns <code>yh</code> which is the predicted output from an adaptive line enhancer (ALE). If your noise is wideband and signal narrowband, <code>yh</code> is your desired filtered signal. If the noise is narrowband and the signal is wideband, then <code>y-yh</code> is your desired filtered signal.</p>
<p>Arguments:</p>
<ul>
<li><code>alg</code>: Stochastic approximation algorithm or weight function. Examples: <code>OMAP, MSPI, OMAS, ADAM, ExponentialWeight, EqualWeight</code>. <code>ExponentialWeight</code> corresponds to the recursive least-squares algorithm (RLS). <code>ADAM</code> corresponds <em>roughly</em> to the normalized least-mean squares (NLMS) algorithm. More options exist if OnlineStats is loaded.</li>
<li><code>y</code>: Input signal</li>
<li><code>order</code>: Filter order</li>
<li><code>lr</code>: Learning rate or weight depending on <code>alg</code></li>
</ul>
<p>The function</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">focused_adaptive_filter</span>(y, band, fs, args<span class="pl-k">...</span>; kwargs<span class="pl-k">...</span>)</pre></div>
<p>allows you to specify a frequency band (tuple) in which to focus the attention of the adaptive filter. <code>fs</code> here denotes the sample rate, e.g., 44100Hz.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>AdaptiveFilters<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-demo-app" class="anchor" aria-hidden="true" href="#demo-app"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Demo app</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> AdaptiveFilters, Plots, Interact
<span class="pl-c1">inspectdr</span>() <span class="pl-c"><span class="pl-c">#</span> Preferred plotting backend for waveforms</span>

y <span class="pl-k">=</span> [<span class="pl-c1">sin</span>.(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>) <span class="pl-k">.+</span> <span class="pl-c1">0.1</span><span class="pl-k">.*</span><span class="pl-c1">randn</span>(<span class="pl-c1">100</span>);
         <span class="pl-c1">sin</span>.(<span class="pl-c1">0.2</span> <span class="pl-k">.*</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>)) <span class="pl-k">.+</span> <span class="pl-c1">0.1</span><span class="pl-k">.*</span><span class="pl-c1">randn</span>(<span class="pl-c1">100</span>)]

<span class="pl-k">function</span> <span class="pl-en">app</span>(req<span class="pl-k">=</span><span class="pl-c1">nothing</span>)
    <span class="pl-c1">@manipulate</span> <span class="pl-k">for</span> order <span class="pl-k">=</span> <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">10</span>,
                    lr <span class="pl-k">=</span> <span class="pl-c1">LinRange</span>(<span class="pl-c1">0.01</span>, <span class="pl-c1">0.99</span>, <span class="pl-c1">100</span>),
                    alg <span class="pl-k">=</span> [ExponentialWeight, MSPI, OMAP, OMAS, ADAM]
        yh <span class="pl-k">=</span> <span class="pl-c1">adaptive_filter</span>(y, alg, order<span class="pl-k">=</span>order, lr<span class="pl-k">=</span>lr)
        e <span class="pl-k">=</span> y<span class="pl-k">.-</span>yh
        <span class="pl-c1">plot</span>([y yh], lab<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>Measured signal<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>Prediction<span class="pl-pds">"</span></span>], layout<span class="pl-k">=</span>(<span class="pl-c1">2</span>,<span class="pl-c1">1</span>), show<span class="pl-k">=</span><span class="pl-c1">false</span>, sp<span class="pl-k">=</span><span class="pl-c1">1</span>)
        <span class="pl-c1">plot!</span>(e, lab<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Error<span class="pl-pds">"</span></span>, sp<span class="pl-k">=</span><span class="pl-c1">2</span>, title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>RMS: <span class="pl-v">$(<span class="pl-k">âˆš</span><span class="pl-c1">mean</span>(abs2, e))</span><span class="pl-pds">"</span></span>)
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-c1">app</span>()

<span class="pl-c"><span class="pl-c">#</span> Save filtered sound to disk</span>
<span class="pl-k">using</span> WAV
yh <span class="pl-k">=</span> <span class="pl-c1">adaptive_filter</span>(y, <span class="pl-c1">4</span>, <span class="pl-c1">0.25</span>, OMAP)
e <span class="pl-k">=</span> y<span class="pl-k">.-</span>yh
<span class="pl-c1">wavwrite</span>(e, <span class="pl-s"><span class="pl-pds">"</span>filtered.wav<span class="pl-pds">"</span></span>), Fs<span class="pl-k">=</span>fs)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="figs/demo.svg"><img src="figs/demo.svg" alt="window" style="max-width:100%;"></a></p>
<h2><a id="user-content-internals" class="anchor" aria-hidden="true" href="#internals"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Internals</h2>
<p>This is a lightweight wrapper around functionality in <a href="https://github.com/joshday/OnlineStats.jl">OnlineStats.jl</a> which does all the heavy lifting.</p>
<h2><a id="user-content-usage-from-python" class="anchor" aria-hidden="true" href="#usage-from-python"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage from python</h2>
<ol>
<li>First install Julia and install this package in Julia.</li>
<li>Install <a href="https://github.com/JuliaPy/pyjulia">pyjulia</a> using their instructions.</li>
<li>Now the following should work</li>
</ol>
<div class="highlight highlight-source-python"><pre><span class="pl-ii">$</span> python3
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">import</span> julia
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">from</span> julia <span class="pl-k">import</span> AdaptiveFilters <span class="pl-k">as</span> af
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> yh <span class="pl-k">=</span> af.adaptive_filter(y)</pre></div>
<p>if that fails, try replacing the first line with</p>
<div class="highlight highlight-source-python"><pre><span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> <span class="pl-k">from</span> julia.api <span class="pl-k">import</span> Julia
<span class="pl-k">&gt;&gt;</span><span class="pl-k">&gt;</span> jl <span class="pl-k">=</span> Julia(<span class="pl-v">compiled_modules</span><span class="pl-k">=</span><span class="pl-c1">False</span>)</pre></div>
<p>Keyword args etc. work as normal</p>
<div class="highlight highlight-source-python"><pre>af.adaptive_filter(y, af.<span class="pl-c1">ADAM</span>, <span class="pl-v">order</span><span class="pl-k">=</span><span class="pl-c1">2</span>)</pre></div>
<h2><a id="user-content-example-adaptive-cicada-filtering" class="anchor" aria-hidden="true" href="#example-adaptive-cicada-filtering"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example: Adaptive cicada filtering</h2>
<p>The following function does a reasonable job at filtering out the sound of cicadas from an audio recording</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-en">cicada_filter</span>(y,fs,args<span class="pl-k">...</span>; kwargs<span class="pl-k">...</span>) <span class="pl-k">=</span> y<span class="pl-k">-</span><span class="pl-c1">focused_adaptive_filter</span>(data,(<span class="pl-c1">4200</span>,<span class="pl-c1">11000</span>),fs,args<span class="pl-k">...</span>; kwargs<span class="pl-k">...</span>)</pre></div>
</article></div>