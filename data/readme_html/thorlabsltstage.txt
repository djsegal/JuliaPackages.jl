<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-thorlabsltstage" class="anchor" aria-hidden="true" href="#thorlabsltstage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ThorlabsLTStage</h1>
<p dir="auto"><a href="https://orchard-ultrasound-innovation.github.io/ThorlabsLTStage.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://orchard-ultrasound-innovation.github.io/ThorlabsLTStage.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/orchard-ultrasound-innovation/ThorlabsLTStage.jl/actions"><img src="https://github.com/orchard-ultrasound-innovation/ThorlabsLTStage.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://app.travis-ci.com/Orchard-Ultrasound-Innovation/ThorlabsLTStage.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/134eb0e8a9b296471e6fef7bd174c979de57f4959fd7d60832b7329b6350fc21/68747470733a2f2f6170702e7472617669732d63692e636f6d2f4f7263686172642d556c747261736f756e642d496e6e6f766174696f6e2f54686f726c6162734c5453746167652e6a6c2e7376673f6272616e63683d6d61696e" alt="Build Status" data-canonical-src="https://app.travis-ci.com/Orchard-Ultrasound-Innovation/ThorlabsLTStage.jl.svg?branch=main" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/Orchard-Ultrasound-Innovation/ThorlabsLTStage.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5dad89b40b64a1881cf3f8bc9ee37fc0a4495d0a5e1eb926a21eb460fbb63635/68747470733a2f2f636f6465636f762e696f2f67682f4f7263686172642d556c747261736f756e642d496e6e6f766174696f6e2f54686f726c6162734c5453746167652e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d3431737445496635765a" alt="codecov" data-canonical-src="https://codecov.io/gh/Orchard-Ultrasound-Innovation/ThorlabsLTStage.jl/branch/main/graph/badge.svg?token=41stEIf5vZ" style="max-width: 100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width: 100%;"></a></p>
<p dir="auto">We currently use the Kinesis Windows DLL to control the XYZ Stage.</p>
<p dir="auto">As such this code will only work on a Windows machine that has
been properly configured. (A Linux interface will hopefully be released by Thorlabs soon)</p>
<p dir="auto">There are two different backends to this package.</p>
<p dir="auto">One is a Julia implementation that directly calls the C API to the device.</p>
<p dir="auto">The other uses Pycall to call the Dot Net API.</p>
<p dir="auto">The C API is preferred however at the moment it may be a bit buggier.</p>
<h2 dir="auto"><a id="user-content-using-the-c-backend-default-behavior" class="anchor" aria-hidden="true" href="#using-the-c-backend-default-behavior"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using the C Backend (default behavior)</h2>
<p dir="auto">As of right now the only supported device are Thorlabs LTS150 or LTS300 stages</p>
<p dir="auto">To connect to them:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using ThorlabsLTStage
julia&gt; ps = initialize(PositionerSystem)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ThorlabsLTStage
julia<span class="pl-k">&gt;</span> ps <span class="pl-k">=</span> <span class="pl-c1">initialize</span>(PositionerSystem)</pre></div>
<p dir="auto">This will print the serial numbers of all the LTS150 and LTS300 stages connected to the computer and then connect to them.
The first stage detected will be initialized
as the X stage followed by Y and Z.</p>
<p dir="auto">Lets say for your setup you want to change which stage is considered X, Y and Z.</p>
<p dir="auto">Create/edit a <code>.positioner_system_config.yml</code> file in the local directory to look like the
following:</p>
<div class="highlight highlight-source-yaml notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ThorlabsLTS:
  alias: bigStage # This is an optional alias
  x:  
    serial: 45140764 # or whatever your desired serial number is
    min_position: 0       # [mm]
    max_position: 150     # [mm]
    max_velocity: 20      # [mm s^-1]
    max_acceleration: 20  # [mm s^-2]
  y:
    serial: 45146974
    max_velocity: 3       # [mm s^-1]
    max_acceleration: 5   # [mm s^-2]
  z:
    serial: 45141924

    # If no limits specified physical device limits will be used"><pre><span class="pl-ent">ThorlabsLTS</span>:
  <span class="pl-ent">alias</span>: <span class="pl-s">bigStage </span><span class="pl-c"><span class="pl-c">#</span> This is an optional alias</span>
  <span class="pl-ent">x</span>:  
    <span class="pl-ent">serial</span>: <span class="pl-c1">45140764</span> <span class="pl-c"><span class="pl-c">#</span> or whatever your desired serial number is</span>
    <span class="pl-ent">min_position</span>: <span class="pl-c1">0</span>       <span class="pl-c"><span class="pl-c">#</span> [mm]</span>
    <span class="pl-ent">max_position</span>: <span class="pl-c1">150</span>     <span class="pl-c"><span class="pl-c">#</span> [mm]</span>
    <span class="pl-ent">max_velocity</span>: <span class="pl-c1">20</span>      <span class="pl-c"><span class="pl-c">#</span> [mm s^-1]</span>
    <span class="pl-ent">max_acceleration</span>: <span class="pl-c1">20</span>  <span class="pl-c"><span class="pl-c">#</span> [mm s^-2]</span>
  <span class="pl-ent">y</span>:
    <span class="pl-ent">serial</span>: <span class="pl-c1">45146974</span>
    <span class="pl-ent">max_velocity</span>: <span class="pl-c1">3</span>       <span class="pl-c"><span class="pl-c">#</span> [mm s^-1]</span>
    <span class="pl-ent">max_acceleration</span>: <span class="pl-c1">5</span>   <span class="pl-c"><span class="pl-c">#</span> [mm s^-2]</span>
  <span class="pl-ent">z</span>:
    <span class="pl-ent">serial</span>: <span class="pl-c1">45141924</span>

    <span class="pl-c"><span class="pl-c">#</span> If no limits specified physical device limits will be used</span></pre></div>
<p dir="auto">Now when you run</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ps = initialize(PositionerSystem)"><pre>julia<span class="pl-k">&gt;</span> ps <span class="pl-k">=</span> <span class="pl-c1">initialize</span>(PositionerSystem)</pre></div>
<p dir="auto">the current stages will be configured as X, Y and Z</p>
<h2 dir="auto"><a id="user-content-controlling-the-xyz-stage" class="anchor" aria-hidden="true" href="#controlling-the-xyz-stage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Controlling the XYZ Stage</h2>
<p dir="auto">Move a single axis to a certain position:
<code>move_x_abs(ps, .54u"m")</code></p>
<p dir="auto">Get position of a single axis:
<code>get_pos_y(ps)</code></p>
<p dir="auto">Get position of all stages:
<code>get_pos(ps)</code></p>
<p dir="auto">If you ask a stage to move further than its available length
this package will throw an error. You can however set limits
that will prevent a stage from moving past a particular point.</p>
<p dir="auto">For all the available commands use:</p>
<p dir="auto"><code>help&gt; PS_3D</code></p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Unitful

ps = initialize(PositionerSystem)

get_pos(ps)
move_xyz(ps, 5u&quot;mm&quot;, 10u&quot;mm&quot;, 10u&quot;mm&quot;)
get_pos(ps)
move_x_rel(ps, 5u&quot;mm&quot;)
get_pos(ps)

# set a new origin location for all stages
get_origin(ps)
set_origin(ps) # sets the current position as origin (0mm, 0mm, 0mm)

# absolute positions are relative to the origin
move_x_abs(ps, 5u&quot;mm&quot;)
get_pos_x(ps)

# set the current position to be the upper limit
set_upper_limit(ps.x, get_pos(ps.x))

# this will work
move_to_origin(ps)
move_x_abs(ps, 5u&quot;mm&quot;)

# this will error because the upper limit was set to 5 mm
move_x_abs(ps, 6u&quot;mm&quot;)

# set a new upper limit
set_upper_limit(ps.x, get_upper_limit(ps.x)+5u&quot;mm&quot;)

# this will now work
move_x_abs(ps, 6u&quot;mm&quot;)"><pre><span class="pl-k">using</span> Unitful

ps <span class="pl-k">=</span> <span class="pl-c1">initialize</span>(PositionerSystem)

<span class="pl-c1">get_pos</span>(ps)
<span class="pl-c1">move_xyz</span>(ps, <span class="pl-c1">5</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>mm<span class="pl-pds">"</span></span>, <span class="pl-c1">10</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>mm<span class="pl-pds">"</span></span>, <span class="pl-c1">10</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>mm<span class="pl-pds">"</span></span>)
<span class="pl-c1">get_pos</span>(ps)
<span class="pl-c1">move_x_rel</span>(ps, <span class="pl-c1">5</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>mm<span class="pl-pds">"</span></span>)
<span class="pl-c1">get_pos</span>(ps)

<span class="pl-c"><span class="pl-c">#</span> set a new origin location for all stages</span>
<span class="pl-c1">get_origin</span>(ps)
<span class="pl-c1">set_origin</span>(ps) <span class="pl-c"><span class="pl-c">#</span> sets the current position as origin (0mm, 0mm, 0mm)</span>

<span class="pl-c"><span class="pl-c">#</span> absolute positions are relative to the origin</span>
<span class="pl-c1">move_x_abs</span>(ps, <span class="pl-c1">5</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>mm<span class="pl-pds">"</span></span>)
<span class="pl-c1">get_pos_x</span>(ps)

<span class="pl-c"><span class="pl-c">#</span> set the current position to be the upper limit</span>
<span class="pl-c1">set_upper_limit</span>(ps<span class="pl-k">.</span>x, <span class="pl-c1">get_pos</span>(ps<span class="pl-k">.</span>x))

<span class="pl-c"><span class="pl-c">#</span> this will work</span>
<span class="pl-c1">move_to_origin</span>(ps)
<span class="pl-c1">move_x_abs</span>(ps, <span class="pl-c1">5</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>mm<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> this will error because the upper limit was set to 5 mm</span>
<span class="pl-c1">move_x_abs</span>(ps, <span class="pl-c1">6</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>mm<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> set a new upper limit</span>
<span class="pl-c1">set_upper_limit</span>(ps<span class="pl-k">.</span>x, <span class="pl-c1">get_upper_limit</span>(ps<span class="pl-k">.</span>x)<span class="pl-k">+</span><span class="pl-c1">5</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>mm<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> this will now work</span>
<span class="pl-c1">move_x_abs</span>(ps, <span class="pl-c1">6</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>mm<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-using-the-python-backend" class="anchor" aria-hidden="true" href="#using-the-python-backend"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using the Python Backend</h2>
<details>
<summary>If you are having trouble with the C backend you can use the Python Backend. However, it may be deprecated in the future.</summary>
<h2 dir="auto"><a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Prerequisites</h2>
<p dir="auto">This guide explains how to setup a clean Windows 10 install.</p>
<h3 dir="auto"><a id="user-content-install-choco" class="anchor" aria-hidden="true" href="#install-choco"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install choco</h3>
<p dir="auto">Start a new powershell as administrator.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Set-ExecutionPolicy -Scope CurrentUser

Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))"><pre class="notranslate"><code>Set-ExecutionPolicy -Scope CurrentUser

Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
</code></pre></div>
<h3 dir="auto"><a id="user-content-install-git" class="anchor" aria-hidden="true" href="#install-git"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install git</h3>
<p dir="auto"><code>choco install git</code></p>
<h3 dir="auto"><a id="user-content-install-python" class="anchor" aria-hidden="true" href="#install-python"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install python</h3>
<p dir="auto"><code>choco install python --version=3.6.3</code></p>
<p dir="auto">As of this document any version of python above 3.6.3 will not work</p>
<p dir="auto"><code>pip install --upgrade pip</code></p>
<p dir="auto"><code>pip install wheel</code></p>
<p dir="auto"><code>pip install pythonnet</code></p>
<h3 dir="auto"><a id="user-content-install-julia" class="anchor" aria-hidden="true" href="#install-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install julia</h3>
<p dir="auto"><code>choco install julia</code></p>
<h3 dir="auto"><a id="user-content-install-kinesis" class="anchor" aria-hidden="true" href="#install-kinesis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install kinesis</h3>
<p dir="auto">Download &amp; Install <a href="https://www.thorlabs.com/software_pages/ViewSoftwarePage.cfm?Code=Motion_Control&amp;viewtab=0" rel="nofollow">Kinesis</a></p>
<h3 dir="auto"><a id="user-content-install-thorlabsltsstage" class="anchor" aria-hidden="true" href="#install-thorlabsltsstage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install ThorlabsLTSStage</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add ThorlabsLTStage"><pre>pkg<span class="pl-k">&gt;</span> add ThorlabsLTStage</pre></div>
<p dir="auto">This project uses <a href="https://github.com/Orchard-Ultrasound-Innovation/InstrumentConfig.jl">InstrumentConfig.jl</a>
for configuration. Check out the package for more information.</p>
<h3 dir="auto"><a id="user-content-specify-python-location-in-your-config-file" class="anchor" aria-hidden="true" href="#specify-python-location-in-your-config-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Specify python location in your config file</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia
julia&gt; using ThorlabsLTStage;
julia&gt; ThorlabsLTStage.create_config()"><pre>julia
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ThorlabsLTStage;
julia<span class="pl-k">&gt;</span> ThorlabsLTStage<span class="pl-k">.</span><span class="pl-c1">create_config</span>()</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; load_python()"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">load_python</span>()</pre></div>
<p dir="auto">The important line in the config is "backend: python"</p>
<p dir="auto">If you wanted to add this line but the rest of the config doesn't fit your
use case you can also manually create this config file instead.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="echo &quot;backend: python&quot; &gt; .positioner_system_config.yml
julia
julia&gt; using ThorlabsLTStage; ThorlabsLTStage.create_config()
julia&gt; load_python()"><pre>echo <span class="pl-s"><span class="pl-pds">"</span>backend: python<span class="pl-pds">"</span></span> <span class="pl-k">&gt;</span> <span class="pl-k">.</span>positioner_system_config<span class="pl-k">.</span>yml
julia
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ThorlabsLTStage; ThorlabsLTStage<span class="pl-k">.</span><span class="pl-c1">create_config</span>()
julia<span class="pl-k">&gt;</span> <span class="pl-c1">load_python</span>()</pre></div>
<h2 dir="auto"><a id="user-content-using-this-package" class="anchor" aria-hidden="true" href="#using-this-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using this package</h2>
<p dir="auto">As of right now the only supported device is the Thorlabs LTS150</p>
<p dir="auto">To connect to it:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia
julia&gt; using ThorlabsLTStage; ThorlabsLTStage.load_config()
ps = initialize(ThorlabsLTS150)"><pre>julia
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ThorlabsLTStage; ThorlabsLTStage<span class="pl-k">.</span><span class="pl-c1">load_config</span>()
ps <span class="pl-k">=</span> <span class="pl-c1">initialize</span>(ThorlabsLTS150)</pre></div>
<p dir="auto">This will print the serial numbers of all the LTS150 stages connected to the
computer and then connect to them. The first stage detected will be initialized
as the X stage followed by Y and Z.</p>
<p dir="auto">Lets say for your setup you want to change which stage is considered X, Y and Z.</p>
<p dir="auto">Edit your config file with your text editor or:
<code>ThorlabsLTStage.edit_config()</code>
to look like the following:</p>
<div class="highlight highlight-source-yaml notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Inside .positioner_system_config.yml
backend: python

ThorlabsLTS:
  alias: positioner_system_default
  x:  
    serial: 45140764 # or whatever your desired serial number is
    min_position: 0
    max_position: .15 # in meters
    max_velocity: 20
    max_acceleration: 20
  y:
    serial: 45146974
    max_velocity: 3
    max_acceleration: 5
  z:
    serial: 45141924
    # If no limits specified physical device limits will be used"><pre><span class="pl-c"><span class="pl-c">#</span> Inside .positioner_system_config.yml</span>
<span class="pl-ent">backend</span>: <span class="pl-s">python</span>

<span class="pl-ent">ThorlabsLTS</span>:
  <span class="pl-ent">alias</span>: <span class="pl-s">positioner_system_default</span>
  <span class="pl-ent">x</span>:  
    <span class="pl-ent">serial</span>: <span class="pl-c1">45140764</span> <span class="pl-c"><span class="pl-c">#</span> or whatever your desired serial number is</span>
    <span class="pl-ent">min_position</span>: <span class="pl-c1">0</span>
    <span class="pl-ent">max_position</span>: <span class="pl-c1">.15</span> <span class="pl-c"><span class="pl-c">#</span> in meters</span>
    <span class="pl-ent">max_velocity</span>: <span class="pl-c1">20</span>
    <span class="pl-ent">max_acceleration</span>: <span class="pl-c1">20</span>
  <span class="pl-ent">y</span>:
    <span class="pl-ent">serial</span>: <span class="pl-c1">45146974</span>
    <span class="pl-ent">max_velocity</span>: <span class="pl-c1">3</span>
    <span class="pl-ent">max_acceleration</span>: <span class="pl-c1">5</span>
  <span class="pl-ent">z</span>:
    <span class="pl-ent">serial</span>: <span class="pl-c1">45141924</span>
    <span class="pl-c"><span class="pl-c">#</span> If no limits specified physical device limits will be used</span></pre></div>
<p dir="auto">Now when you run</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ps = initialize(ThorlabsLTS150)"><pre>ps <span class="pl-k">=</span> <span class="pl-c1">initialize</span>(ThorlabsLTS150)</pre></div>
<p dir="auto">the correct stages will be configured as X, Y and Z</p>
<h2 dir="auto"><a id="user-content-controlling-the-xyz-stage-1" class="anchor" aria-hidden="true" href="#controlling-the-xyz-stage-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Controlling the XYZ Stage</h2>
<p dir="auto">Move a single axis to a certain position:
<code>move_x_abs(ps, .54)</code></p>
<p dir="auto">Get position of a single axis:
<code>get_pos_y(ps)</code></p>
<p dir="auto">Get position of all stages:
<code>get_pos(ps)</code></p>
<p dir="auto">If you ask a stage to move further than its available length
this package will throw an error. You can however set limits
that will prevent a stage from moving past a particular point.</p>
<p dir="auto">Note: All positions are in meters</p>
<p dir="auto">For all the available commands use:</p>
<p dir="auto"><code>help&gt; ThorlabsLTS150</code></p>
<h2 dir="auto"><a id="user-content-example-1" class="anchor" aria-hidden="true" href="#example-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ps = initialize(ThorlabsLTS150)

move_xyz(ps, 0.1, 0.1, 0.1)

# Move 0.05 meters forwards
move_x_rel(ps, 0.05)

# Get position of x stage (0.05 here)
get_pos_x(ps)

# Move 0.05 meters backwards
move_x_rel(ps, -0.05)

# Moves device to home position
home(ps)

# Returns x,y,z positions
get_pos(ps)

# First tuple contains lower limits, second contains upper limits
# (x_low_lim, y_low_lim, z_low_lim), (x_up_lim, y_up_lim, z_up_lim)
# Arrays can be used instead of tuples as well []
set_limits(ps, (0.01, 0.01, 0.01), (0.1, 0.1, 0.1))

# Will return a pair of tuples with limits you just set
get_limits(ps)

# Will return lower and upper limit for x stage
lower_x, upper_x = get_limits_x(ps)

# Will stay at 0.1 (upper limit)
move_x_abs(ps, 0.2)

# Beyond device limit but will stay at 0.1 (upper limit)
move_x_abs(ps, 5)

# Will move to 0.01 (lower limit)
move_x_abs(ps, 0)

# Clear limits
clear_limits(ps)

# Moving beyond your physical device with no limits will throw an error
# Don't do this
move_x_abs(ps, 5)"><pre>ps <span class="pl-k">=</span> <span class="pl-c1">initialize</span>(ThorlabsLTS150)

<span class="pl-c1">move_xyz</span>(ps, <span class="pl-c1">0.1</span>, <span class="pl-c1">0.1</span>, <span class="pl-c1">0.1</span>)

<span class="pl-c"><span class="pl-c">#</span> Move 0.05 meters forwards</span>
<span class="pl-c1">move_x_rel</span>(ps, <span class="pl-c1">0.05</span>)

<span class="pl-c"><span class="pl-c">#</span> Get position of x stage (0.05 here)</span>
<span class="pl-c1">get_pos_x</span>(ps)

<span class="pl-c"><span class="pl-c">#</span> Move 0.05 meters backwards</span>
<span class="pl-c1">move_x_rel</span>(ps, <span class="pl-k">-</span><span class="pl-c1">0.05</span>)

<span class="pl-c"><span class="pl-c">#</span> Moves device to home position</span>
<span class="pl-c1">home</span>(ps)

<span class="pl-c"><span class="pl-c">#</span> Returns x,y,z positions</span>
<span class="pl-c1">get_pos</span>(ps)

<span class="pl-c"><span class="pl-c">#</span> First tuple contains lower limits, second contains upper limits</span>
<span class="pl-c"><span class="pl-c">#</span> (x_low_lim, y_low_lim, z_low_lim), (x_up_lim, y_up_lim, z_up_lim)</span>
<span class="pl-c"><span class="pl-c">#</span> Arrays can be used instead of tuples as well []</span>
<span class="pl-c1">set_limits</span>(ps, (<span class="pl-c1">0.01</span>, <span class="pl-c1">0.01</span>, <span class="pl-c1">0.01</span>), (<span class="pl-c1">0.1</span>, <span class="pl-c1">0.1</span>, <span class="pl-c1">0.1</span>))

<span class="pl-c"><span class="pl-c">#</span> Will return a pair of tuples with limits you just set</span>
<span class="pl-c1">get_limits</span>(ps)

<span class="pl-c"><span class="pl-c">#</span> Will return lower and upper limit for x stage</span>
lower_x, upper_x <span class="pl-k">=</span> <span class="pl-c1">get_limits_x</span>(ps)

<span class="pl-c"><span class="pl-c">#</span> Will stay at 0.1 (upper limit)</span>
<span class="pl-c1">move_x_abs</span>(ps, <span class="pl-c1">0.2</span>)

<span class="pl-c"><span class="pl-c">#</span> Beyond device limit but will stay at 0.1 (upper limit)</span>
<span class="pl-c1">move_x_abs</span>(ps, <span class="pl-c1">5</span>)

<span class="pl-c"><span class="pl-c">#</span> Will move to 0.01 (lower limit)</span>
<span class="pl-c1">move_x_abs</span>(ps, <span class="pl-c1">0</span>)

<span class="pl-c"><span class="pl-c">#</span> Clear limits</span>
<span class="pl-c1">clear_limits</span>(ps)

<span class="pl-c"><span class="pl-c">#</span> Moving beyond your physical device with no limits will throw an error</span>
<span class="pl-c"><span class="pl-c">#</span> Don't do this</span>
<span class="pl-c1">move_x_abs</span>(ps, <span class="pl-c1">5</span>)</pre></div>
</details>
</article></div>