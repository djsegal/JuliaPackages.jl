<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-h5sparsejl" class="anchor" aria-hidden="true" href="#h5sparsejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>H5Sparse.jl</h1>
<p>This package provides <code>H5SparseMatrixCSC</code>, an an out-of-core <code>AbstractSparseMatrixCSC</code> backed by a HDF5 dataset stored on disk. The main purpose of this package is to provide support for iteratively constructing large sparse matrices that do not fit in memory and for querying a subset of the columns of that matrix.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Conversion from SparseMatrixCSC; writes B to a dataset &quot;A&quot; in the file &quot;foo.h5&quot;
using SparseArrays
B = sprand(10, 10, 0.5)
A = H5SparseMatrixCSC(&quot;foo.h5&quot;, &quot;A&quot;, B)

# or, equivalently
using HDF5
fid = h5open(&quot;foo.h5&quot;, &quot;cw&quot;)
A = H5SparseMatrixCSC(fid, &quot;A&quot;, B)

# kwargs are passed on to h5writecsc
A = H5SparseMatrixCSC(&quot;foo.h5&quot;, &quot;A&quot;, B, overwrite=true) # Overwrites any existing dataset with name A

# Construct from an existing file
A = H5SparseMatrixCSC(&quot;foo.h5&quot;, &quot;A&quot;)
A = H5SparseMatrixCSC(fid, &quot;A&quot;)

# Construct a view into a subset of the rows and/or columns stored in a file
A = H5SparseMatrixCSC(&quot;foo.h5&quot;, &quot;A&quot;, :, 2:5)

# Colon or UnitRange indexing returns a new H5SparseMatrixCSC that is a view into the specified subset of rows and/or columns
A[:, 1:10]
A[1:4, :]

# Integer indexing returns the requested element
A[1, 1]

# Concatenate with a SparseMatrixCSC to the right; useful for constructing large matrices in an iterative fashion
# Returns a new H5SparseMatrixCSC spanning all columns of the resulting matrix
C = sprand(10, 5, 0.5)
A = hcat(A, C)      # A is now of size (10, 15)

# Use sparse or Matrix to load H5SparseMatrixCSC matrix into memory
sparse(A)           # SparseMatrixCSC
Matrix(A)           # Matrix
"><pre><span class="pl-c"><span class="pl-c">#</span> Conversion from SparseMatrixCSC; writes B to a dataset "A" in the file "foo.h5"</span>
<span class="pl-k">using</span> SparseArrays
B <span class="pl-k">=</span> <span class="pl-c1">sprand</span>(<span class="pl-c1">10</span>, <span class="pl-c1">10</span>, <span class="pl-c1">0.5</span>)
A <span class="pl-k">=</span> <span class="pl-c1">H5SparseMatrixCSC</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.h5<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>, B)

<span class="pl-c"><span class="pl-c">#</span> or, equivalently</span>
<span class="pl-k">using</span> HDF5
fid <span class="pl-k">=</span> <span class="pl-c1">h5open</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.h5<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>cw<span class="pl-pds">"</span></span>)
A <span class="pl-k">=</span> <span class="pl-c1">H5SparseMatrixCSC</span>(fid, <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>, B)

<span class="pl-c"><span class="pl-c">#</span> kwargs are passed on to h5writecsc</span>
A <span class="pl-k">=</span> <span class="pl-c1">H5SparseMatrixCSC</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.h5<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>, B, overwrite<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> Overwrites any existing dataset with name A</span>

<span class="pl-c"><span class="pl-c">#</span> Construct from an existing file</span>
A <span class="pl-k">=</span> <span class="pl-c1">H5SparseMatrixCSC</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.h5<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>)
A <span class="pl-k">=</span> <span class="pl-c1">H5SparseMatrixCSC</span>(fid, <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Construct a view into a subset of the rows and/or columns stored in a file</span>
A <span class="pl-k">=</span> <span class="pl-c1">H5SparseMatrixCSC</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.h5<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>, :, <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">5</span>)

<span class="pl-c"><span class="pl-c">#</span> Colon or UnitRange indexing returns a new H5SparseMatrixCSC that is a view into the specified subset of rows and/or columns</span>
A[:, <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>]
A[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">4</span>, :]

<span class="pl-c"><span class="pl-c">#</span> Integer indexing returns the requested element</span>
A[<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]

<span class="pl-c"><span class="pl-c">#</span> Concatenate with a SparseMatrixCSC to the right; useful for constructing large matrices in an iterative fashion</span>
<span class="pl-c"><span class="pl-c">#</span> Returns a new H5SparseMatrixCSC spanning all columns of the resulting matrix</span>
C <span class="pl-k">=</span> <span class="pl-c1">sprand</span>(<span class="pl-c1">10</span>, <span class="pl-c1">5</span>, <span class="pl-c1">0.5</span>)
A <span class="pl-k">=</span> <span class="pl-c1">hcat</span>(A, C)      <span class="pl-c"><span class="pl-c">#</span> A is now of size (10, 15)</span>

<span class="pl-c"><span class="pl-c">#</span> Use sparse or Matrix to load H5SparseMatrixCSC matrix into memory</span>
<span class="pl-c1">sparse</span>(A)           <span class="pl-c"><span class="pl-c">#</span> SparseMatrixCSC</span>
<span class="pl-c1">Matrix</span>(A)           <span class="pl-c"><span class="pl-c">#</span> Matrix</span></pre></div>
</article></div>