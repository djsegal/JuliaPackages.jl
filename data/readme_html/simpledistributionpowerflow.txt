<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-simpledistributionpowerflowjl" class="anchor" aria-hidden="true" href="#simpledistributionpowerflowjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SimpleDistributionPowerFlow.jl</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/blob/main/images/SimpleDistributionPowerFlow_logo.png"><img src="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/raw/main/images/SimpleDistributionPowerFlow_logo.png" align="left" width="250" alt="SimpleDistributionPowerFlow.jl logo" style="max-width: 100%;"></a></p>
<p dir="auto">SimpleDistributionPowerFlow.jl is a Julia language package for steady-state unbalanced radial distribution systems powerflow analysis focused on usage simplicity with reliable and fast results.</p>
<p dir="auto">The simplicity of the package is based on the data entry and package usage:</p>
<p dir="auto">The data entry is made with standard definition csv files. It identifies some input situations such as distributed loads, isolated segments, open/closed switches and works automatically according to such situations, per example adding auxiliar buses, purging segments and/or reordering buses. It accept some types of distributed generation also.</p>
<p dir="auto">Two commands are provided: <code>gridtopology()</code> for topology verification only, and <code>powerflow()</code> for voltages, currents, power and losses evaluation.</p>
<p dir="auto">Grid topology is discovered based on input line segments, transformers and the switches states information, and the graph is plotting even without bus_coords file or with missing bus location information. Power flow evaluation takes in account the discovered topology, spot and distributed loads and distributed generation if any.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]
pkg&gt; add SimpleDistributionPowerFlow"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> add SimpleDistributionPowerFlow</pre></div>
<h2 dir="auto"><a id="user-content-configuration-files" class="anchor" aria-hidden="true" href="#configuration-files"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Configuration files</h2>
<table>
<thead>
<tr>
<th>filename</th>
<th>required</th>
<th>column names</th>
<th>comments</th>
</tr>
</thead>
<tbody>
<tr>
<td>line_segments.csv</td>
<td>yes</td>
<td>bus1,bus2,length,unit,config</td>
<td>bus1 and bus 2: Int, unit: String <br>(ft, mi, m, km only accepted)</td>
</tr>
<tr>
<td>line_configurations.csv</td>
<td>yes</td>
<td>config,unit,<br>raa,xaa,rab,xab,rac,xac,<br>rbb,xbb,rbc,xbc,<br>rcc,xcc,<br>baa,bab,bac,bbb,bbc,bcc</td>
<td>unit: String <br>represents ohm/unit or micro-siemens/unit <br>(ft, mi, m, km only accepted)</td>
</tr>
<tr>
<td>substation.csv</td>
<td>yes</td>
<td>bus,kva,kv</td>
<td>kv: line-to-line voltage in kilovolts</td>
</tr>
<tr>
<td>spot_loads.csv</td>
<td>yes</td>
<td>bus,conn,type,<br>kw_ph1,kvar_ph1,<br>kw_ph2,kvar_ph2,<br>kw_ph3,kvar_ph3</td>
<td>conn: Y/D,<br>type: PQ/Z/I, <br>ph1/2/3 represents A/B/C for Y connection, <br>and A-B/B-C/C-A for D connection</td>
</tr>
<tr>
<td>distributed_loads.csv</td>
<td>optional</td>
<td>bus1,bus2,conn,type,<br>kw_ph1,kvar_ph1,<br>kw_ph2,kvar_ph2,<br>kw_ph3,kvar_ph3</td>
<td></td>
</tr>
<tr>
<td>capacitors.csv</td>
<td>optional</td>
<td>bus,kvar_ph1,kvar_ph2,kvar_ph3</td>
<td></td>
</tr>
<tr>
<td>transformers.csv</td>
<td>optional</td>
<td>config,kva,phases,<br>conn_high,conn_low,<br>kv_high,kv_low,<br>rpu,xpu</td>
<td>currently only grY-grY, Y-D, D-grY and D-D three-phase step-down transformer configurations are accepted</td>
</tr>
<tr>
<td>switches.csv</td>
<td>optional</td>
<td>config,phases,state,resistance</td>
<td>phases: abc, resistance in ohms</td>
</tr>
<tr>
<td>bus_coords.csv</td>
<td>optional</td>
<td>bus,x_pos,y_pos</td>
<td></td>
</tr>
<tr>
<td>regulators.csv</td>
<td>optional</td>
<td>config,phases,mode,tap_1,tap_2,tap_3</td>
<td>mode: manual only</td>
</tr>
<tr>
<td>distributed_generation.csv</td>
<td>optional</td>
<td>bus,conn,mode,kw_set,<br>kvar_set,kv_set,amp_set,<br>kvar_min,kvar_max,xd</td>
<td>bus, conn, mode and kw_set are mandatories, others params depends on distributed generation mode</td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto"><em><strong>To load the package</strong></em>: <code>using SimpleDistributionPowerFlow</code></p>
<p dir="auto"><em><strong>For grid's topology discovery only</strong></em>: <code>gridtopology()</code></p>
<table>
<thead>
<tr>
<th>options</th>
<th>type</th>
<th align="center">default</th>
<th>purpose/example</th>
</tr>
</thead>
<tbody>
<tr>
<td>input</td>
<td>String</td>
<td align="center">"" <br>(pwd)</td>
<td>input files location <br> <em>gridtopology(input = "examples/ieee-34")</em></td>
</tr>
<tr>
<td>output</td>
<td>String</td>
<td align="center">"" <br>(pwd)</td>
<td>results files location<br> <em>gridtopology(output = "results")</em></td>
</tr>
<tr>
<td>save_topology</td>
<td>Bool</td>
<td align="center">true</td>
<td>save in output directory a png file with the identified grid topology <br> <em>powerflow(display_topology = false)</em></td>
</tr>
<tr>
<td>display_topology</td>
<td>Bool</td>
<td align="center">false</td>
<td>display in screen the identified grid topology<br> <em>gridtopology(display_topology = true)</em></td>
</tr>
<tr>
<td>timestamp</td>
<td>Bool</td>
<td align="center">false</td>
<td>add a timestamp to results file names <br>  <em>gridtopology(timestamp = true)</em></td>
</tr>
<tr>
<td>graph_title</td>
<td>String</td>
<td align="center">"" <br>(nothing)</td>
<td>set a title in topology graph <br> <em>gridtopology(graph_title = "modified ieee-34 test feeder")</em></td>
</tr>
<tr>
<td>marker_size</td>
<td>Float</td>
<td align="center">1.5</td>
<td>set the size of bus identifier in graph<br>  <em>gridtopology(marker_size = 10)</em></td>
</tr>
<tr>
<td>verbose</td>
<td>Int</td>
<td align="center">0</td>
<td>set the level of program verbosity (only 0 or 1 are available) <br> <em>powerflow(verbose = 1)</em></td>
</tr>
</tbody>
</table>
<p dir="auto"><em><strong>For powerflow analysis</strong></em>: <code>powerflow()</code></p>
<table>
<thead>
<tr>
<th>options</th>
<th>type</th>
<th align="center">default</th>
<th>purpose/example</th>
</tr>
</thead>
<tbody>
<tr>
<td>input</td>
<td>String</td>
<td align="center">"" <br>(pwd)</td>
<td>input files location <br> <em>powerflow(input = "examples/ieee-34")</em></td>
</tr>
<tr>
<td>output</td>
<td>String</td>
<td align="center">"" <br>(pwd)</td>
<td>results files location <br> <em>powerflow(output = "results")</em></td>
</tr>
<tr>
<td>tolerance</td>
<td>Float</td>
<td align="center">1e-6</td>
<td>maximum porcentual difference between calculated and nominal substation bus voltage <br> <em>powerflow(tolerance = 0.001)</em></td>
</tr>
<tr>
<td>max_iteration</td>
<td>Int</td>
<td align="center">30</td>
<td>maximum number of iteration before procedure halt <br><em>powerflow(max_iteration = 100)</em></td>
</tr>
<tr>
<td>display_summary</td>
<td>Bool</td>
<td align="center">true</td>
<td>display in terminal screen a results summary <br> <em>powerflow(display_results = false)</em></td>
</tr>
<tr>
<td>save_topology</td>
<td>Bool</td>
<td align="center">false</td>
<td>save in output directory a png file with the identified grid topology <br> <em>powerflow(display_topology = true)</em></td>
</tr>
<tr>
<td>display_topology</td>
<td>Bool</td>
<td align="center">false</td>
<td>display in terminal screen the identified grid topology <br> <em>powerflow(display_topology = true)</em></td>
</tr>
<tr>
<td>timestamp</td>
<td>Bool</td>
<td align="center">false</td>
<td>add a timestamp to results file names <br> <em>powerflow(timestamp = true)</em></td>
</tr>
<tr>
<td>graph_title</td>
<td>String</td>
<td align="center">"" (nothing)</td>
<td>set a title in topology graph <br> <em>powerflow(graph_title = "modified ieee-34 test feeder")</em></td>
</tr>
<tr>
<td>marker_size</td>
<td>Float</td>
<td align="center">1.5</td>
<td>set the size of bus identifier in graph <br> <em>powerflow(marker_size = 10)</em></td>
</tr>
<tr>
<td>verbose</td>
<td>Int</td>
<td align="center">0</td>
<td>set the level of program verbosity (only 0 or 1 are available) <br> <em>powerflow(verbose = 1)</em></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-special-features" class="anchor" aria-hidden="true" href="#special-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Special features</h2>
<p dir="auto"><strong>Distributed Loads</strong><br>
If there are distributed loads, auxiliar buses are automatically added in the middle of segments (50% of segment lenght) with 100% of the load applied as spot load on them. These buses are retired and segments are restored after powerflow execution and before results are printed.</p>
<table>
  <tbody><tr>
    <td><a target="_blank" rel="noopener noreferrer" href="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/blob/main/images/modified_ieee_34_ex_1_input.png"><img src="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/raw/main/images/modified_ieee_34_ex_1_input.png" style="max-width: 100%;"></a>
    </td><td><a target="_blank" rel="noopener noreferrer" href="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/blob/main/images/modified_ieee_34_ex_1_working.png"><img src="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/raw/main/images/modified_ieee_34_ex_1_working.png" style="max-width: 100%;"></a>
  </td></tr>
</tbody></table>
<p dir="auto"><strong>Distributed Generation</strong><br>
To include DG in power flow analysis <em>distributed_generation.csv</em> file is needed. Currently following modes of DG in balanced three-phase operation are modeled: <strong>PQ</strong> (constant active and reactive power), <strong>PQV</strong> (constant active power, voltage dependant reactive power), and <strong>PI</strong> (constant active power and current). PQV is modeled as a synchronous generator.</p>
<p dir="auto">Format of <em>distributed_generation.csv</em> file and required (req) values are shown in following table.</p>
<table>
<thead>
<tr>
<th>bus</th>
<th>conn</th>
<th>mode</th>
<th>kw_set</th>
<th>kvar_set</th>
<th>kv_set</th>
<th>amp_set</th>
<th>kvar_min</th>
<th>kvar_max</th>
<th>xd</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>req</em></td>
<td><em>req</em></td>
<td>PQ</td>
<td><em>req</em></td>
<td><em>req</em></td>
<td>---</td>
<td>---</td>
<td>---</td>
<td>---</td>
<td>---</td>
</tr>
<tr>
<td><em>req</em></td>
<td><em>req</em></td>
<td>PQV</td>
<td><em>req</em></td>
<td>---</td>
<td><em>req</em></td>
<td>---</td>
<td><em>req</em></td>
<td><em>req</em></td>
<td><em>req</em></td>
</tr>
<tr>
<td><em>req</em></td>
<td><em>req</em></td>
<td>PI</td>
<td><em>req</em></td>
<td>---</td>
<td>---</td>
<td><em>req</em></td>
<td><em>req</em></td>
<td><em>req</em></td>
<td>---</td>
</tr>
</tbody>
</table>
<p dir="auto"><strong>Topology graph</strong><br>
This package graphs the grid topology even if there is no <code>bus_coords.csv</code> file, it also calculates the graph in case of missing or duplicate bus information:</p>
<table>
  <tbody><tr>
    <td><a target="_blank" rel="noopener noreferrer" href="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/blob/main/images/ieee_4_without_bus_coords_example.png"><img src="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/raw/main/images/ieee_4_without_bus_coords_example.png" style="max-width: 100%;"></a>
    </td><td><a target="_blank" rel="noopener noreferrer" href="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/blob/main/images/modified_ieee_13_without_bus_coords.png"><img src="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/raw/main/images/modified_ieee_13_without_bus_coords.png" style="max-width: 100%;"></a>
  </td></tr>
</tbody></table>
<p dir="auto"><strong>Topology changes</strong><br>
If grid's topology is changed by opening and closing switches, the from-to buses relation in affected segments are adjusted before powerflow analysis. If a loop is detected, the procedure is halted (for now the package only works with radial topology).</p>
<table>
  <tbody><tr>
    <td><a target="_blank" rel="noopener noreferrer" href="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/blob/main/images/modified_ieee_13_ex_2.png"><img src="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/raw/main/images/modified_ieee_13_ex_2.png" style="max-width: 100%;"></a>
    </td><td><a target="_blank" rel="noopener noreferrer" href="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/blob/main/images/modified_ieee_13_ex_3.png"><img src="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/raw/main/images/modified_ieee_13_ex_3.png" style="max-width: 100%;"></a>
  </td></tr>
</tbody></table>
<p dir="auto">If <code>line_segments.csv</code> file has isolated segments by open switch or by error, they are pruned before powerflow analysis. Two graph are generated: <em>input topology</em> is the detected topology from input files, and <em>working topology</em> is the corrected one):</p>
<table>
  <tbody><tr>
    <td><a target="_blank" rel="noopener noreferrer" href="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/blob/main/images/modified_ieee_13_ex_1_input.png"><img src="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/raw/main/images/modified_ieee_13_ex_1_input.png" style="max-width: 100%;"></a>
    </td><td><a target="_blank" rel="noopener noreferrer" href="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/blob/main/images/modified_ieee_13_ex_1_working.png"><img src="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/raw/main/images/modified_ieee_13_ex_1_working.png" style="max-width: 100%;"></a>
  </td></tr>
</tbody></table>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">Full configuration files for selected IEEE test feeders are in <a href="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/blob/main/examples/">examples</a> section.</p>
<h2 dir="auto"><a id="user-content-minimun-dependency" class="anchor" aria-hidden="true" href="#minimun-dependency"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Minimun Dependency</h2>
<p dir="auto">Simplicity of <a href="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl">SimpleDistributionPowerFlow.jl</a> is based also on its low dependency of other packages.
It only relies in <a href="https://github.com/JuliaData/DataFrames.jl">DataFrames</a>, <a href="https://github.com/JuliaPlots/Plots.jl">Plots</a>, <a href="https://github.com/JuliaPlots/GraphRecipes.jl">GraphRecipes</a> and <a href="https://github.com/JuliaData/CSV.jl">CSV</a></p>
<h2 dir="auto"><a id="user-content-future-updates" class="anchor" aria-hidden="true" href="#future-updates"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Future Updates</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Regulators: different configurations and automatic tap operation (for now only works with 3-phase wye connection in manual mode).</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> DERs: add more Distributed Generation modes, for now only works with PQ, PI and PQV (synchronous) DG.</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Transformers: add single-phase and open-delta transformers (for now only three-phase transformers are accepted)</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Isolated segments: for now isolated segments are pruned before powerflow analysis, in future releases they would be treated as islands</li>
</ul>
<h2 dir="auto"><a id="user-content-support" class="anchor" aria-hidden="true" href="#support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Support</h2>
<p dir="auto">Contributions, issues, and feature requests are welcome!</p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">See <a href="https://github.com/gisel-uninorte/SimpleDistributionPowerFlow.jl/blob/main/LICENSE">license</a></p>
</article></div>