<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mendelimpute" class="anchor" aria-hidden="true" href="#mendelimpute"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MendelImpute</h1>
<table>
<thead>
<tr>
<th><strong>Documentation</strong></th>
<th><strong>Build Status</strong></th>
<th><strong>Code Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://OpenMendel.github.io/MendelImpute.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a> <a href="https://OpenMendel.github.io/MendelImpute.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></td>
<td><a href="https://github.com/OpenMendel/MendelImpute.jl/actions"><img src="https://github.com/OpenMendel/MendelImpute.jl/workflows/CI/badge.svg" alt="build Actions Status" style="max-width: 100%;"></a> <a href="https://github.com/OpenMendel/MendelImpute.jl/actions/workflows/JuliaNightly.yml"><img src="https://github.com/openmendel/mendelimpute.jl/workflows/JuliaNightly/badge.svg" alt="CI (Julia nightly)" style="max-width: 100%;"></a></td>
<td><a href="https://codecov.io/gh/OpenMendel/MendelImpute.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/39d84bbb026e893e6d4051c7d6f56070b5260066ec20fe0bd2eaadd2894daf18/68747470733a2f2f636f6465636f762e696f2f67682f4f70656e4d656e64656c2f4d656e64656c496d707574652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d59795071694670494d31" alt="codecov" data-canonical-src="https://codecov.io/gh/OpenMendel/MendelImpute.jl/branch/master/graph/badge.svg?token=YyPqiFpIM1" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Download and install <a href="https://julialang.org/downloads/" rel="nofollow">Julia</a>. Within Julia, copy and paste the following:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
pkg&quot;add MendelImpute&quot;"><pre><span class="pl-k">using</span> Pkg
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add MendelImpute<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">This package supports Julia <code>v1.6</code>+.</p>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<ul dir="auto">
<li><a href="https://OpenMendel.github.io/MendelImpute.jl/dev/" rel="nofollow"><strong>Latest</strong></a></li>
<li><a href="https://OpenMendel.github.io/MendelImpute.jl/stable/" rel="nofollow"><strong>Stable</strong></a></li>
</ul>
<h2 dir="auto"><a id="user-content-example-run" class="anchor" aria-hidden="true" href="#example-run"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example run:</h2>
<p dir="auto">The following uses data under the <code>data/</code> directory.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# load package &amp; cd to data directory
using MendelImpute
cd(normpath(MendelImpute.datadir()))

# compress reference haplotypes from .vcf.gz to .jlso format
reffile = &quot;ref.excludeTarget.vcf.gz&quot;       # reference VCF file
tgtfile = &quot;target.typedOnly.masked.vcf.gz&quot; # target VCF file (GWAS file)
outfile = &quot;ref.excludeTarget.jlso&quot;         # output file name (end in .jlso)
@time compress_haplotypes(reffile, tgtfile, outfile)

# phase &amp; impute (note: 2nd run will be much faster because code is compiled)
tgtfile = &quot;target.typedOnly.masked.vcf.gz&quot; # target VCF file (GWAS file)
reffile = &quot;ref.excludeTarget.jlso&quot;         # compressed reference file
outfile = &quot;imputed.vcf.gz&quot;                 # output file name
@time phase(tgtfile, reffile, outfile);

# check error rate (since data was simulated)
using VCFTools
Ximputed = convert_gt(Float64, &quot;imputed.vcf.gz&quot;)  # imputed genotypes
Xtrue = convert_gt(Float64, &quot;target.full.vcf.gz&quot;) # true genotypes
m, n = size(Xtrue) # matrix dimensions
error_rate = sum(Xtrue .!= Ximputed) / m / n"><pre><span class="pl-c"><span class="pl-c">#</span> load package &amp; cd to data directory</span>
<span class="pl-k">using</span> MendelImpute
<span class="pl-c1">cd</span>(<span class="pl-c1">normpath</span>(MendelImpute<span class="pl-k">.</span><span class="pl-c1">datadir</span>()))

<span class="pl-c"><span class="pl-c">#</span> compress reference haplotypes from .vcf.gz to .jlso format</span>
reffile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>ref.excludeTarget.vcf.gz<span class="pl-pds">"</span></span>       <span class="pl-c"><span class="pl-c">#</span> reference VCF file</span>
tgtfile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>target.typedOnly.masked.vcf.gz<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> target VCF file (GWAS file)</span>
outfile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>ref.excludeTarget.jlso<span class="pl-pds">"</span></span>         <span class="pl-c"><span class="pl-c">#</span> output file name (end in .jlso)</span>
<span class="pl-c1">@time</span> <span class="pl-c1">compress_haplotypes</span>(reffile, tgtfile, outfile)

<span class="pl-c"><span class="pl-c">#</span> phase &amp; impute (note: 2nd run will be much faster because code is compiled)</span>
tgtfile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>target.typedOnly.masked.vcf.gz<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> target VCF file (GWAS file)</span>
reffile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>ref.excludeTarget.jlso<span class="pl-pds">"</span></span>         <span class="pl-c"><span class="pl-c">#</span> compressed reference file</span>
outfile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>imputed.vcf.gz<span class="pl-pds">"</span></span>                 <span class="pl-c"><span class="pl-c">#</span> output file name</span>
<span class="pl-c1">@time</span> <span class="pl-c1">phase</span>(tgtfile, reffile, outfile);

<span class="pl-c"><span class="pl-c">#</span> check error rate (since data was simulated)</span>
<span class="pl-k">using</span> VCFTools
Ximputed <span class="pl-k">=</span> <span class="pl-c1">convert_gt</span>(Float64, <span class="pl-s"><span class="pl-pds">"</span>imputed.vcf.gz<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> imputed genotypes</span>
Xtrue <span class="pl-k">=</span> <span class="pl-c1">convert_gt</span>(Float64, <span class="pl-s"><span class="pl-pds">"</span>target.full.vcf.gz<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> true genotypes</span>
m, n <span class="pl-k">=</span> <span class="pl-c1">size</span>(Xtrue) <span class="pl-c"><span class="pl-c">#</span> matrix dimensions</span>
error_rate <span class="pl-k">=</span> <span class="pl-c1">sum</span>(Xtrue <span class="pl-k">.!=</span> Ximputed) <span class="pl-k">/</span> m <span class="pl-k">/</span> n</pre></div>
<p dir="auto">We also support PLINK binary files (<code>.bed/.bim/.fam</code>) via <a href="https://github.com/OpenMendel/SnpArrays.jl">SnpArrays.jl</a> and BGEN files <code>.bgen</code> via <a href="https://github.com/OpenMendel/BGEN.jl">BGEN.jl</a>.</p>
<p dir="auto">For more realistic example, see <a href="https://openmendel.github.io/MendelImpute.jl/dev/man/Phasing_and_Imputation/#Detailed-Example" rel="nofollow">detailed example in documentation</a></p>
<h2 dir="auto"><a id="user-content-bug-fixes-and-user-support" class="anchor" aria-hidden="true" href="#bug-fixes-and-user-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bug Fixes and User support</h2>
<p dir="auto">If you encounter a bug or need user support, please open a new issue on Github. Please provide as much detail as possible for bug reports, ideally a sequence of reproducible code that lead to the error.</p>
<p dir="auto">PRs and feature requests are welcomed!</p>
<h2 dir="auto"><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citation</h2>
<p dir="auto">If you use this analysis package in your research, please cite the following references in resulting publications:</p>
<p dir="auto"><em>Chu BB, Sobel EM, Wasiolek R, Ko S, Sinsheimer JS, Zhou H, Lange K. A fast Data-Driven method for genotype imputation, phasing, and local ancestry inference: MendelImpute.jl. Bioinformatics. 2021 Jul 21;37(24):4756–63. doi: 10.1093/bioinformatics/btab489. Epub ahead of print. PMID: 34289008; PMCID: <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8665755/" rel="nofollow">PMC8665755</a>.</em></p>
<p dir="auto"><em>Zhou H, Sinsheimer JS, Bates DM, Chu BB, German CA, Ji SS, Keys KL, Kim J, Ko S, Mosher GD, Papp JC, Sobel EM, Zhai J, Zhou JJ, Lange K. OPENMENDEL: a cooperative programming project for statistical genetics. Hum Genet. 2020 Jan;139(1):61-71. doi: 10.1007/s00439-019-02001-z. Epub 2019 Mar 26. PMID: 30915546; PMCID: <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6763373/" rel="nofollow">PMC6763373</a>.</em></p>
<h2 dir="auto"><a id="user-content-acknowledgement" class="anchor" aria-hidden="true" href="#acknowledgement"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgement</h2>
<p dir="auto">This project has been supported by the National Institutes of Health under awards R01GM053275, R01HG006139, R25GM103774, and 1R25HG011845.</p>
</article></div>