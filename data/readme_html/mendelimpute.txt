<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-mendelimpute" class="anchor" aria-hidden="true" href="#mendelimpute"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MendelImpute</h1>
<table>
<thead>
<tr>
<th><strong>Documentation</strong></th>
<th><strong>Build Status</strong></th>
<th><strong>Code Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://OpenMendel.github.io/MendelImpute.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a> <a href="https://OpenMendel.github.io/MendelImpute.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a></td>
<td><a href="https://github.com/OpenMendel/MendelImpute.jl/actions"><img src="https://github.com/OpenMendel/MendelImpute.jl/workflows/CI/badge.svg" alt="build Actions Status" style="max-width:100%;"></a> <a href="https://github.com/OpenMendel/MendelImpute.jl/actions/workflows/JuliaNightly.yml"><img src="https://github.com/openmendel/mendelimpute.jl/workflows/JuliaNightly/badge.svg" alt="CI (Julia nightly)" style="max-width:100%;"></a></td>
<td><a href="https://codecov.io/gh/OpenMendel/MendelImpute.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/39d84bbb026e893e6d4051c7d6f56070b5260066ec20fe0bd2eaadd2894daf18/68747470733a2f2f636f6465636f762e696f2f67682f4f70656e4d656e64656c2f4d656e64656c496d707574652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d59795071694670494d31" alt="codecov" data-canonical-src="https://codecov.io/gh/OpenMendel/MendelImpute.jl/branch/master/graph/badge.svg?token=YyPqiFpIM1" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Download and install <a href="https://julialang.org/downloads/" rel="nofollow">Julia</a>. Within Julia, copy and paste the following:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg
pkg&quot;add https://github.com/OpenMendel/SnpArrays.jl&quot;
pkg&quot;add https://github.com/OpenMendel/VCFTools.jl&quot;
pkg&quot;add https://github.com/OpenMendel/BGEN.jl&quot;
pkg&quot;add https://github.com/OpenMendel/MendelImpute.jl&quot;
"><pre><span class="pl-k">using</span> Pkg
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add https://github.com/OpenMendel/SnpArrays.jl<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add https://github.com/OpenMendel/VCFTools.jl<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add https://github.com/OpenMendel/BGEN.jl<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add https://github.com/OpenMendel/MendelImpute.jl<span class="pl-pds">"</span></span></pre></div>
<p>This package supports Julia <code>v1.6</code>+.</p>
<p><strong>Note:</strong> BGEN format is currrently experimental and is not guaranteed to work properly.</p>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<ul>
<li><a href="https://OpenMendel.github.io/MendelImpute.jl/dev/" rel="nofollow"><strong>Latest</strong></a></li>
<li><a href="https://OpenMendel.github.io/MendelImpute.jl/stable/" rel="nofollow"><strong>Stable</strong></a></li>
</ul>
<h2><a id="user-content-example-run" class="anchor" aria-hidden="true" href="#example-run"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example run:</h2>
<p>The following uses data under the <code>data/</code> directory.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# load package &amp; cd to data directory
using MendelImpute
cd(normpath(MendelImpute.datadir()))

# compress reference haplotypes from .vcf.gz to .jlso format
reffile = &quot;ref.excludeTarget.vcf.gz&quot;       # reference VCF file
tgtfile = &quot;target.typedOnly.masked.vcf.gz&quot; # target VCF file (GWAS file)
outfile = &quot;ref.excludeTarget.jlso&quot;         # output file name (end in .jlso)
compress_haplotypes(reffile, tgtfile, outfile)

# phase &amp; impute
tgtfile = &quot;target.typedOnly.masked.vcf.gz&quot; # target VCF file (GWAS file)
reffile = &quot;ref.excludeTarget.jlso&quot;         # compressed reference file
outfile = &quot;imputed.vcf.gz&quot;                 # output file name
phase(tgtfile, reffile, outfile);

# check error rate (since data was simulated)
using VCFTools
Ximputed = convert_gt(Float64, &quot;imputed.vcf.gz&quot;)  # imputed genotypes
Xtrue = convert_gt(Float64, &quot;target.full.vcf.gz&quot;) # true genotypes
m, n = size(Xtrue) # matrix dimensions
error_rate = sum(Xtrue .!= Ximputed) / m / n
"><pre><span class="pl-c"><span class="pl-c">#</span> load package &amp; cd to data directory</span>
<span class="pl-k">using</span> MendelImpute
<span class="pl-c1">cd</span>(<span class="pl-c1">normpath</span>(MendelImpute<span class="pl-k">.</span><span class="pl-c1">datadir</span>()))

<span class="pl-c"><span class="pl-c">#</span> compress reference haplotypes from .vcf.gz to .jlso format</span>
reffile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>ref.excludeTarget.vcf.gz<span class="pl-pds">"</span></span>       <span class="pl-c"><span class="pl-c">#</span> reference VCF file</span>
tgtfile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>target.typedOnly.masked.vcf.gz<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> target VCF file (GWAS file)</span>
outfile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>ref.excludeTarget.jlso<span class="pl-pds">"</span></span>         <span class="pl-c"><span class="pl-c">#</span> output file name (end in .jlso)</span>
<span class="pl-c1">compress_haplotypes</span>(reffile, tgtfile, outfile)

<span class="pl-c"><span class="pl-c">#</span> phase &amp; impute</span>
tgtfile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>target.typedOnly.masked.vcf.gz<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> target VCF file (GWAS file)</span>
reffile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>ref.excludeTarget.jlso<span class="pl-pds">"</span></span>         <span class="pl-c"><span class="pl-c">#</span> compressed reference file</span>
outfile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>imputed.vcf.gz<span class="pl-pds">"</span></span>                 <span class="pl-c"><span class="pl-c">#</span> output file name</span>
<span class="pl-c1">phase</span>(tgtfile, reffile, outfile);

<span class="pl-c"><span class="pl-c">#</span> check error rate (since data was simulated)</span>
<span class="pl-k">using</span> VCFTools
Ximputed <span class="pl-k">=</span> <span class="pl-c1">convert_gt</span>(Float64, <span class="pl-s"><span class="pl-pds">"</span>imputed.vcf.gz<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> imputed genotypes</span>
Xtrue <span class="pl-k">=</span> <span class="pl-c1">convert_gt</span>(Float64, <span class="pl-s"><span class="pl-pds">"</span>target.full.vcf.gz<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> true genotypes</span>
m, n <span class="pl-k">=</span> <span class="pl-c1">size</span>(Xtrue) <span class="pl-c"><span class="pl-c">#</span> matrix dimensions</span>
error_rate <span class="pl-k">=</span> <span class="pl-c1">sum</span>(Xtrue <span class="pl-k">.!=</span> Ximputed) <span class="pl-k">/</span> m <span class="pl-k">/</span> n</pre></div>
<p>For more realistic example, see <a href="https://openmendel.github.io/MendelImpute.jl/dev/man/Phasing_and_Imputation/#Detailed-Example" rel="nofollow">detailed example in documentation</a></p>
<h2><a id="user-content-bug-fixes-and-user-support" class="anchor" aria-hidden="true" href="#bug-fixes-and-user-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Bug Fixes and User support</h2>
<p>If you encounter a bug or need user support, please open a new issue on Github. Please provide as much detail as possible for bug reports, ideally a sequence of reproducible code that lead to the error.</p>
<p>PRs and feature requests are welcomed!</p>
<h2><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Citation</h2>
<p>Our paper is on <a href="https://www.biorxiv.org/content/10.1101/2020.10.24.353755v2" rel="nofollow">bioRxiv</a>. If you want to cite <code>MendelImpute.jl</code>, please cite</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="@article{mendelimpute,
    title = {{A Fast Data-Driven Method for Genotype Imputation, Phasing, and Local Ancestry Inference: MendelImpute.jl}},
    author = {Chu, Benjamin B and Sobel, Eric M and Wasiolek, Rory and Sinsheimer, Janet S and Zhou, Hua and Lange, Kenneth},
    year = {2020},
    journal={arXiv preprint DOI:10.1101/2020.10.24.353755}
}
"><pre><code>@article{mendelimpute,
    title = {{A Fast Data-Driven Method for Genotype Imputation, Phasing, and Local Ancestry Inference: MendelImpute.jl}},
    author = {Chu, Benjamin B and Sobel, Eric M and Wasiolek, Rory and Sinsheimer, Janet S and Zhou, Hua and Lange, Kenneth},
    year = {2020},
    journal={arXiv preprint DOI:10.1101/2020.10.24.353755}
}
</code></pre></div>
<h2><a id="user-content-acknowledgement" class="anchor" aria-hidden="true" href="#acknowledgement"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Acknowledgement</h2>
<p>This project is supported by the National Institutes of Health under NIGMS awards R01GM053275 and R25GM103774 and NHGRI award R01HG006139.</p>
</article></div>