<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-ansicolor" class="anchor" aria-hidden="true" href="#ansicolor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>AnsiColor</h1>
<p>Full support for ANSI colored strings in Julia. Allows formatted output in REPL/Shell
environment for both Unix and Mac.</p>
<p>##Install</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>AnsiColor<span class="pl-pds">"</span></span>)</pre></div>
<p>##Using AnsiColor</p>
<p>AnsiColor wraps a string in the ANSI escape sequences used for colorized
text. The style, foreground and backround colors of a string can be set.</p>
<p><strong>A simple example:</strong></p>
<p>Usage is similar to <code>Base.print_with_color</code> but additional arguments are
supported.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> AnsiColor

<span class="pl-c1">println</span>(<span class="pl-c1">colorize</span>(<span class="pl-c1">:red</span>, <span class="pl-s"><span class="pl-pds">"</span>Hello World!<span class="pl-pds">"</span></span>, background<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>light_yellow<span class="pl-pds">"</span></span>, mode<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>underline<span class="pl-pds">"</span></span>))</pre></div>
<p>There are also convenience methods with a simpler syntax:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> AnsiColor

<span class="pl-c1">red</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello World!<span class="pl-pds">"</span></span>)</pre></div>
<p><strong>Supported colors available in most environments:</strong></p>
<ul>
<li><code>black</code></li>
<li><code>red</code></li>
<li><code>green</code></li>
<li><code>yellow</code></li>
<li><code>blue</code></li>
<li><code>magenta</code></li>
<li><code>cyan</code></li>
<li><code>white</code></li>
<li><code>default</code></li>
<li><code>light_black</code></li>
<li><code>light_red</code></li>
<li><code>light_green</code></li>
<li><code>light_yellow</code></li>
<li><code>light_blue</code></li>
<li><code>light_magenta</code></li>
<li><code>light_cyan</code></li>
<li><code>light_white</code></li>
</ul>
<p><strong>Supported text modes:</strong></p>
<ul>
<li><code>default</code></li>
<li><code>bold</code></li>
<li><code>underline</code></li>
<li><code>blink</code></li>
<li><code>swap</code></li>
<li><code>hide</code></li>
</ul>
<h4><a id="user-content-why-use-ansicolor-instead-of-baseprint_with_color" class="anchor" aria-hidden="true" href="#why-use-ansicolor-instead-of-baseprint_with_color"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Why use AnsiColor instead of Base.print_with_color()?</h4>
<p>There are more colors and text modes supported in AnsiColor than the
native print_with_color method. Also, you have direct access to the
formatted string for more flexibility, such as printing multiple colors
per line.</p>
<p><em>TODO:</em> Windows Support</p>
</article></div>