<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-transducersjl-efficient-transducers-for-julia" class="anchor" aria-hidden="true" href="#transducersjl-efficient-transducers-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Transducers.jl: Efficient transducers for Julia</h1>
<p><a href="https://tkf.github.io/Transducers.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable documentation" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://tkf.github.io/Transducers.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Latest documentation" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/tkf/Transducers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d751133faa0e8a4dd702eb45f0c3b977040bb45d/68747470733a2f2f7472617669732d63692e636f6d2f746b662f5472616e736475636572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Travis Status" data-canonical-src="https://travis-ci.com/tkf/Transducers.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/tkf/Transducers.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/f8518d51ffc892252b2c7be298dac4f5a08a3b4a/687474703a2f2f636f6465636f762e696f2f6769746875622f746b662f5472616e736475636572732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/tkf/Transducers.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/tkf/Transducers.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/41071da3d358027487173f4ed182432c71f6bfca/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f746b662f5472616e736475636572732e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/tkf/Transducers.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="https://github.com/tkf/Aqua.jl"><img src="https://camo.githubusercontent.com/6100188045368e759fea6ce8c4df2e322ea75b3d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417175612e6a6c2d2546302539462538432541322d617175612e737667" alt="Aqua QA" data-canonical-src="https://img.shields.io/badge/Aqua.jl-%F0%9F%8C%A2-aqua.svg" style="max-width:100%;"></a></p>
<p>Transducers.jl provides composable algorithms on "sequence" of inputs.
They are called <em><a href="https://clojure.org/reference/transducers" rel="nofollow">transducers</a></em>, first introduced in Clojure language
by Rich Hickey.</p>
<p>Using transducers is quite straightforward, especially if you already
know similar concepts in iterator libraries:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Transducers
xf <span class="pl-k">=</span> <span class="pl-c1">Partition</span>(<span class="pl-c1">7</span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">Filter</span>(x <span class="pl-k">-&gt;</span> <span class="pl-c1">prod</span>(x) <span class="pl-k">%</span> <span class="pl-c1">11</span> <span class="pl-k">==</span> <span class="pl-c1">0</span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">Cat</span>() <span class="pl-k">|&gt;</span> <span class="pl-c1">Scan</span>(<span class="pl-k">+</span>)
<span class="pl-c1">foldl</span>(<span class="pl-k">+</span>, xf, <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">40</span>)</pre></div>
<p>However, the protocol used for the transducers is quite different from
iterators and results in a better performance for complex
compositions.  Furthermore, some transducers support parallel
execution.  If a transducer is composed of such transducers, it can be
automatically re-used both in sequential (<code>foldl</code> etc.) and parallel
(<code>reduce</code> etc.) contexts.</p>
<p>See more in the <a href="https://tkf.github.io/Transducers.jl/dev" rel="nofollow">documentation</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<pre><code>]add Transducers
</code></pre>
</article></div>