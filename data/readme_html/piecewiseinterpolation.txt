<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-piecewiseinterpolation" class="anchor" aria-hidden="true" href="#piecewiseinterpolation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PiecewiseInterpolation</h1>
<p>A simple interface for interpolations on timeseries with first order discontinuities (using <a href="https://github.com/kbarbary/Dierckx.jl">Dierckx.jl</a>).</p>
<p>The module exports one new type, <code>PiecewiseSpline1D</code>, and extends one function, <code>append!()</code>.</p>
<pre><code>PiecewiseSpline1D(times::Vector, values::Vector, jumps::Vector)
</code></pre>
<p>Construct a spline interpolation which takes into account discontinuties listed in <code>jumps</code>.
Any <code>PiecewiseSpline1D</code> object <code>p</code> can be called as a function, i.e. <code>p(t)</code>.</p>
<pre><code>append!(p::PiecewiseSpline1D, new_times, new_values, new_jumps)
</code></pre>
<p>Extend an existing spline <code>p</code> with new data.</p>
<p><strong>A practical example can be found in our <a href="demo.ipynb">demo notebook</a>.</strong></p>
</article></div>