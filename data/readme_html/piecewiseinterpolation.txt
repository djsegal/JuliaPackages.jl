<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-piecewiseinterpolation" class="anchor" aria-hidden="true" href="#piecewiseinterpolation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>PiecewiseInterpolation</h1>
<p>A simple interface for interpolations on timeseries with first order discontinuities (using <a href="https://github.com/kbarbary/Dierckx.jl">Dierckx.jl</a>).</p>
<p>The module exports one new type, <code>PiecewiseSpline1D</code>, and extends one function, <code>append!()</code>.</p>
<pre><code>PiecewiseSpline1D(times::Vector, values::Vector, jumps::Vector)
</code></pre>
<p>Construct a spline interpolation which takes into account discontinuties listed in <code>jumps</code>.
Any <code>PiecewiseSpline1D</code> object <code>p</code> can be called as a function, i.e. <code>p(t)</code>.</p>
<pre><code>append!(p::PiecewiseSpline1D, new_times, new_values, new_jumps)
</code></pre>
<p>Extend an existing spline <code>p</code> with new data.</p>
<p><strong>A practical example can be found in our <a href="demo.ipynb">demo notebook</a>.</strong></p>
</article></div>