<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><sub><strong>Release</strong>/<strong>Master</strong></sub><br>
<a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/77322be5bdafdb6cbd8381a1a3abf57a036f6e7f/68747470733a2f2f7472617669732d63692e6f72672f66636172642f45787072657373696f6e5061747465726e732e6a6c2e7376673f6272616e63683d6d6173746572"><img src="https://camo.githubusercontent.com/77322be5bdafdb6cbd8381a1a3abf57a036f6e7f/68747470733a2f2f7472617669732d63692e6f72672f66636172642f45787072657373696f6e5061747465726e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build (Release &amp; Master)" data-canonical-src="https://travis-ci.org/fcard/ExpressionPatterns.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/fcard/ExpressionPatterns.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a8cfc589069ae4ece532f42a4d23f7ca6255f6b2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f66636172642f45787072657373696f6e5061747465726e732e6a6c2f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/fcard/ExpressionPatterns.jl/badge.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installing</h2>
<p>julia 0.6:</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>ExpressionPatterns<span class="pl-pds">"</span></span>)</pre></div>
<hr>
<p>Otherwise:</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/fcard/ExpressionPatterns.jl<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> julia 0.5</span>
Pkg<span class="pl-k">.</span><span class="pl-c1">checkout</span>(<span class="pl-s"><span class="pl-pds">"</span>ExpressionPatterns<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>julia-v0.5<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> julia 0.4</span>
Pkg<span class="pl-k">.</span><span class="pl-c1">checkout</span>(<span class="pl-s"><span class="pl-pds">"</span>ExpressionPatterns<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>julia-v0.4<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-matching" class="anchor" aria-hidden="true" href="#matching"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Matching</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ExpressionPatterns<span class="pl-k">.</span>Matching

m1 <span class="pl-k">=</span> <span class="pl-c1">matcher</span>(:(x<span class="pl-k">+</span>y))

<span class="pl-c1">m1</span>(:(<span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span>)) <span class="pl-k">==</span> <span class="pl-c1">true</span>
<span class="pl-c1">m1</span>(:(<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">2</span>)) <span class="pl-k">==</span> <span class="pl-c1">false</span>

m2 <span class="pl-k">=</span> <span class="pl-c1">matcher</span>(:(<span class="pl-c1">f</span>(<span class="pl-k">*</span>{args})))

<span class="pl-c1">m2</span>(:(<span class="pl-c1">g</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>))) <span class="pl-k">==</span> <span class="pl-c1">true</span>
<span class="pl-c1">m2</span>(:(<span class="pl-c1">h</span>()))    <span class="pl-k">==</span> <span class="pl-c1">true</span>
<span class="pl-c1">m2</span>(:(x<span class="pl-k">+</span>y))    <span class="pl-k">==</span> <span class="pl-c1">true</span>
<span class="pl-c1">m2</span>(:(A{T}))   <span class="pl-k">==</span> <span class="pl-c1">false</span>
</pre></div>
<h2><a id="user-content-destructuring" class="anchor" aria-hidden="true" href="#destructuring"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Destructuring</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ExpressionPatterns<span class="pl-k">.</span>Destructuring

<span class="pl-c1">@letds</span> (x<span class="pl-k">+</span>y)<span class="pl-k">=</span>:(<span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span>) <span class="pl-k">begin</span>
  x,y <span class="pl-k">==</span> (<span class="pl-c1">1</span>,<span class="pl-c1">2</span>)
<span class="pl-k">end</span>


<span class="pl-c1">@macrods</span> <span class="pl-c1">first_arg</span>(<span class="pl-c1">f</span>(first,<span class="pl-k">*</span>{rest})) first

<span class="pl-c1">@first_arg</span>(<span class="pl-c1">f</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>)) <span class="pl-k">==</span> <span class="pl-c1">1</span>


gettype <span class="pl-k">=</span> <span class="pl-c1">@anonds</span> (a<span class="pl-k">::</span><span class="pl-c1">T</span>) <span class="pl-k">-&gt;</span> T
<span class="pl-c1">gettype</span>(:(x<span class="pl-k">::</span><span class="pl-c1">Integer</span>)) <span class="pl-k">==</span> <span class="pl-c1">:Integer</span>

<span class="pl-c1">@funds</span> <span class="pl-en">getvalue</span>(a<span class="pl-k">::</span><span class="pl-c1">T</span>) <span class="pl-k">=</span> a
<span class="pl-c1">getvalue</span>(:(x<span class="pl-k">::</span><span class="pl-c1">Integer</span>)) <span class="pl-k">==</span> <span class="pl-c1">:x</span>

</pre></div>
<h2><a id="user-content-dispatch" class="anchor" aria-hidden="true" href="#dispatch"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Dispatch</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ExpressionPatterns<span class="pl-k">.</span>Dispatch

<span class="pl-c1">@metafunction</span> <span class="pl-en">getpath</span>(M<span class="pl-k">.</span>m) <span class="pl-k">=</span> [<span class="pl-c1">getpath</span>(M); m] <span class="pl-c"><span class="pl-c">#</span> this defines the getpath(args...) method</span>
<span class="pl-en">getpath</span>(M<span class="pl-k">::</span><span class="pl-c1">Symbol</span>) <span class="pl-k">=</span> [M]

<span class="pl-c1">getpath</span>(:(M1<span class="pl-k">.</span>M2<span class="pl-k">.</span>m)) <span class="pl-k">==</span> [<span class="pl-c1">:M1</span>, <span class="pl-c1">:M2</span>, <span class="pl-c1">:m</span>]


<span class="pl-c1">@macromethod</span> <span class="pl-c1">inverse_op</span>(x<span class="pl-k">+</span>y) :(<span class="pl-k">$</span>x<span class="pl-k">-</span><span class="pl-k">$</span>y)
<span class="pl-c1">@macromethod</span> <span class="pl-c1">inverse_op</span>(x<span class="pl-k">-</span>y) :(<span class="pl-k">$</span>x<span class="pl-k">+</span><span class="pl-k">$</span>y)
<span class="pl-c1">@macromethod</span> <span class="pl-c1">inverse_op</span>(x<span class="pl-k">*</span>y) :(<span class="pl-k">$</span>x<span class="pl-k">/</span><span class="pl-k">$</span>y)
<span class="pl-c1">@macromethod</span> <span class="pl-c1">inverse_op</span>(x<span class="pl-k">/</span>y) :(<span class="pl-k">$</span>x<span class="pl-k">*</span><span class="pl-k">$</span>y)

<span class="pl-c1">@inverse_op</span>(<span class="pl-c1">10</span><span class="pl-k">+</span><span class="pl-c1">20</span>) <span class="pl-k">==</span> <span class="pl-k">-</span><span class="pl-c1">10</span>
<span class="pl-c1">@inverse_op</span>(<span class="pl-c1">10</span><span class="pl-k">-</span><span class="pl-c1">20</span>) <span class="pl-k">==</span>  <span class="pl-c1">30</span>
<span class="pl-c1">@inverse_op</span>(<span class="pl-c1">10</span><span class="pl-k">*</span><span class="pl-c1">20</span>) <span class="pl-k">==</span>  <span class="pl-c1">.5</span>
<span class="pl-c1">@inverse_op</span>(<span class="pl-c1">10</span><span class="pl-k">/</span><span class="pl-c1">20</span>) <span class="pl-k">==</span> <span class="pl-c1">200</span>


<span class="pl-c"><span class="pl-c">#</span> macros created with @macromethod can be extended in other modules</span>

<span class="pl-k">module</span> M1
<span class="pl-k">using</span> ExpressionPatterns<span class="pl-k">.</span>Dispatch
<span class="pl-c1">@macromethod</span> <span class="pl-c1">f</span>(x<span class="pl-k">+</span>y) <span class="pl-c1">1</span>
<span class="pl-k">end</span>

<span class="pl-k">module</span> M2
<span class="pl-k">using</span> ExpressionPatterns<span class="pl-k">.</span>Dispatch
<span class="pl-c1">@metamodule</span> <span class="pl-k">import</span> <span class="pl-k">..</span>M1<span class="pl-k">.</span><span class="pl-c1">@f</span>
<span class="pl-c1">@macromethod</span> <span class="pl-c1">f</span>(x<span class="pl-k">-</span>y) <span class="pl-c1">2</span>
<span class="pl-k">end</span>

M1<span class="pl-k">.</span><span class="pl-c1">@f</span>(<span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span>) <span class="pl-k">==</span> <span class="pl-c1">1</span>
M1<span class="pl-k">.</span><span class="pl-c1">@f</span>(<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">2</span>) <span class="pl-k">==</span> <span class="pl-c1">2</span>

</pre></div>
<h2><a id="user-content-dispatch-reflection" class="anchor" aria-hidden="true" href="#dispatch-reflection"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Dispatch Reflection</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ExpressionPatterns<span class="pl-k">.</span>Dispatch
<span class="pl-k">using</span> ExpressionPatterns<span class="pl-k">.</span>Dispatch<span class="pl-k">.</span>Reflection

<span class="pl-c1">@macromethod</span> <span class="pl-c1">f</span>(x<span class="pl-k">+</span>y, z)[method1] <span class="pl-k">=</span> [x,y]
<span class="pl-c1">@macromethod</span> <span class="pl-c1">f</span>(z, x<span class="pl-k">+</span>y)[method2] <span class="pl-k">=</span> [x,y]

<span class="pl-c1">@whichmeta</span> <span class="pl-c1">@f</span>(x<span class="pl-k">+</span>y,y<span class="pl-k">+</span>x) <span class="pl-c"><span class="pl-c">#</span>&gt; f(x+y, z)</span>


<span class="pl-c1">@prefer</span> <span class="pl-c1">@f</span>(z, x<span class="pl-k">+</span>y) over <span class="pl-c1">@f</span>(x<span class="pl-k">+</span>y, z)

<span class="pl-c1">@whichmeta</span> <span class="pl-c1">@f</span>(x<span class="pl-k">+</span>y,y<span class="pl-k">+</span>x) <span class="pl-c"><span class="pl-c">#</span>&gt; f(z, x+y)</span>


<span class="pl-c1">@prefer</span> method1 over method2 <span class="pl-k">in</span> <span class="pl-c1">@f</span>

<span class="pl-c1">@whichmeta</span> <span class="pl-c1">@f</span>(x<span class="pl-k">+</span>y,y<span class="pl-k">+</span>x) <span class="pl-c"><span class="pl-c">#</span>&gt; f(x+y, z)</span>


<span class="pl-c1">@metaconflicts</span> <span class="pl-c1">@f</span> <span class="pl-c"><span class="pl-c">#</span>&gt; &lt;&lt;z&gt; &lt;x+y&gt;&gt; | &lt;&lt;x+y&gt; &lt;z&gt;&gt;</span>

<span class="pl-c1">@remove</span> <span class="pl-c1">@f</span>(z,x<span class="pl-k">+</span>y)

<span class="pl-c1">@metaconflicts</span> <span class="pl-c1">@f</span> <span class="pl-c"><span class="pl-c">#</span>&gt; nothing</span>
</pre></div>
<p>See <a href="./docs/Language.md">Language.md</a> for information on the pattern language.</p>
<p>See <a href="./examples/">the examples</a> or <a href="./test/">the tests</a> for more uses.</p>
<p>Y'all should also check <a href="https://github.com/MikeInnes/MacroTools.jl">MacroTools</a>, which inspired me to remake and publish this in the first place!</p>
</article></div>