<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-localpackageserver" class="anchor" aria-hidden="true" href="#localpackageserver"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LocalPackageServer</h1>
<p>Implementation of a Julia Storage Server for a single registry, where
the registry and the registered packages are dynamically retrieved
from their git repositories. For creation of a registry, see the
companion package
<a href="https://github.com/GunnarFarneback/LocalRegistry.jl">LocalRegistry</a>.</p>
<p>This package is a simplified fork of the
<a href="https://github.com/JuliaPackaging/PkgServer.jl">PkgServer</a> package,
to which the dynamic storage server has been added. It can also be
configured as a low-feature Julia Package Server with a built in
storage server.</p>
<p>For terminology and background, see
<a href="https://github.com/JuliaLang/Pkg.jl/issues/1377">https://github.com/JuliaLang/Pkg.jl/issues/1377</a>.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="# Enter package directory
$ cd LocalPackageServer
# Launch server to run in foreground
$ julia --project bin/run_server.jl CONFIG_FILE
"><pre><span class="pl-c"><span class="pl-c">#</span> Enter package directory</span>
$ <span class="pl-c1">cd</span> LocalPackageServer
<span class="pl-c"><span class="pl-c">#</span> Launch server to run in foreground</span>
$ julia --project bin/run_server.jl CONFIG_FILE</pre></div>
<p>where <code>CONFIG_FILE</code> is a configuration file in TOML format. The
content is explained below.</p>
<h2><a id="user-content-package-server-configuration" class="anchor" aria-hidden="true" href="#package-server-configuration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Package Server Configuration</h2>
<p>An example configuration file for running as a package server with
a builtin storage server:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="host = &quot;localhost&quot;
port = &quot;8000&quot;
local_registry = REGISTRY_URL
pkg_server = &quot;https://pkg.julialang.org&quot;
cache_dir = &quot;/tmp/cache&quot;
git_clones_dir = &quot;/tmp/data&quot;
min_time_between_registry_updates = 60
"><pre><code>host = "localhost"
port = "8000"
local_registry = REGISTRY_URL
pkg_server = "https://pkg.julialang.org"
cache_dir = "/tmp/cache"
git_clones_dir = "/tmp/data"
min_time_between_registry_updates = 60
</code></pre></div>
<p>Replace <code>REGISTRY_URL</code> with the URL to your local registry (the same
that you would use in a <code>registry add</code> command). If you want to use
the package server from other computers you need to replace
<code>localhost</code> with a public address.</p>
<h3><a id="user-content-using-the-package-server" class="anchor" aria-hidden="true" href="#using-the-package-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Using the Package Server</h3>
<p>Start a 1.4 or newer version of Julia, referring all Pkg operations to
this package server:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ JULIA_PKG_SERVER=http://localhost:8000 julia
"><pre><code>$ JULIA_PKG_SERVER=http://localhost:8000 julia
</code></pre></div>
<p>In order to add your registry through the package server, you need to do</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using Pkg
pkg&quot;registry add UUID&quot;
"><pre><code>using Pkg
pkg"registry add UUID"
</code></pre></div>
<p>where <code>UUID</code> is the UUID of your local registry.</p>
<p>For Julia 1.5 you won't need to specify the UUID;</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using Pkg
pkg&quot;registry add&quot;
"><pre><code>using Pkg
pkg"registry add"
</code></pre></div>
<p>without arguments suffices. For new Julia installations (when no
registry has been previously added) it will be added automatically.</p>
<h2><a id="user-content-storage-server-configuration" class="anchor" aria-hidden="true" href="#storage-server-configuration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Storage Server Configuration</h2>
<p>The major difference to configuration as a Package Server is that
<code>pkg_server</code> is omitted.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="host = &quot;localhost&quot;
port = &quot;8080&quot;
local_registry = REGISTRY_URL
cache_dir = &quot;/tmp/cache&quot;
git_clones_dir = &quot;/tmp/data&quot;
min_time_between_registry_updates = 60
"><pre><code>host = "localhost"
port = "8080"
local_registry = REGISTRY_URL
cache_dir = "/tmp/cache"
git_clones_dir = "/tmp/data"
min_time_between_registry_updates = 60
</code></pre></div>
<p>Then you configure this as a storage server for
<a href="https://github.com/JuliaPackaging/PkgServer.jl">PkgServer</a>. Adding
your local registry is done as above after you have pointed
<code>JULIA_PKG_SERVER</code> to your PkgServer instance.</p>
<h2><a id="user-content-configuration-variables" class="anchor" aria-hidden="true" href="#configuration-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Configuration Variables</h2>
<ul>
<li><code>host</code>: The host name the server will listen to.</li>
<li><code>port</code>: The port number the server will listen to.</li>
<li><code>local_registry</code>: URL from which your local registry can be cloned.</li>
<li><code>pkg_server</code>: The package server to forward requests for non-local
packages to.</li>
<li><code>cache_dir</code>: A directory where package and registry revisions will
be stored. This cache is used for both local and non-local
packages and registries.</li>
<li><code>git_clones_dir</code>: A directory where clones of your local registry
and local packages will be stored.</li>
<li><code>min_time_between_registry_updates</code>: Minimum time in seconds before
checking registries for updates. Updates are only triggered when
either a package or a repository is requested.</li>
<li><code>gitconfig</code>: Extra configuration for git when cloning or pulling
local registries and packages. This is specified as a key/value
mapping, e.g.</li>
</ul>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="[gitconfig]
&quot;user.name&quot; = &quot;Jane Doe&quot;
&quot;user.email&quot; = &quot;unknown@example.com&quot;
"><pre><code>[gitconfig]
"user.name" = "Jane Doe"
"user.email" = "unknown@example.com"
</code></pre></div>
</article></div>