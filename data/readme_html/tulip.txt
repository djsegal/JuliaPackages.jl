<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-tulip" class="anchor" aria-hidden="true" href="#tulip"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tulip</h1>
<p dir="auto"><a href="https://zenodo.org/badge/latestdoi/131298750" rel="nofollow"><img src="https://camo.githubusercontent.com/102bf352c7a3d5a3faa40d731fd33066d8ec13007bc0808052e6db2429c3c8d7/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3133313239383735302e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/131298750.svg" style="max-width: 100%;"></a></p>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://ds4dm.github.io/Tulip.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Docs" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://ds4dm.github.io/Tulip.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/ef2963f072da1a61a3df68686ccef86709fad9d7007c9ae6d734e85ef0a6ba7c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d707572706c652e737667" alt="Docs-dev" data-canonical-src="https://img.shields.io/badge/docs-dev-purple.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/ds4dm/Tulip.jl/actions?query=workflow%3ACI"><img src="https://github.com/ds4dm/Tulip.jl/workflows/CI/badge.svg?branch=master" alt="Build" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://codecov.io/github/ds4dm/Tulip.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/16e8d056086ea443a35856e4e557f370b4bcf50f03b86a052b429b38019c3b0b/68747470733a2f2f636f6465636f762e696f2f6769746875622f647334646d2f54756c69702e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Codecov" data-canonical-src="https://codecov.io/github/ds4dm/Tulip.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h2>
<p dir="auto">Tulip is an open-source interior-point solver for linear optimization, written in pure Julia.
It implements the homogeneous primal-dual interior-point algorithm with multiple centrality corrections, and therefore handles unbounded and infeasible problems.
Tulipâ€™s main feature is that its algorithmic framework is disentangled from linear algebra implementations.
This allows to seamlessly integrate specialized routines for structured problems.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Just install like any Julia package</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add Tulip"><pre>] add Tulip</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">The recommended way of using Tulip is through <a href="https://github.com/jump-dev/JuMP.jl">JuMP</a> and/or <a href="https://github.com/jump-dev/MathOptInterface.jl">MathOptInterface</a> (MOI).</p>
<p dir="auto">The low-level interface is still under development and is likely change in the future.
The MOI interface is more stable.</p>
<h3 dir="auto"><a id="user-content-using-with-jump" class="anchor" aria-hidden="true" href="#using-with-jump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using with JuMP</h3>
<p dir="auto">Tulip follows the syntax convention <code>PackageName.Optimizer</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JuMP
import Tulip

model = Model(Tulip.Optimizer)"><pre><span class="pl-k">using</span> JuMP
<span class="pl-k">import</span> Tulip

model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(Tulip<span class="pl-k">.</span>Optimizer)</pre></div>
<p dir="auto">Linear objectives, linear constraints and lower/upper bounds on variables are supported.</p>
<h3 dir="auto"><a id="user-content-using-with-moi" class="anchor" aria-hidden="true" href="#using-with-moi"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using with MOI</h3>
<p dir="auto">The type <code>Tulip.Optimizer</code> is parametrized by the model's arithmetic, e.g., <code>Float64</code> or <code>BigFloat</code>.
This allows to solve problem in higher numerical precision.
See the documentation for more details.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import MathOptInterface
MOI = MathOptInterface
import Tulip

model = Tulip.Optimizer{Float64}()   # Create a model in Float64 precision
model = Tulip.Optimizer()            # Defaults to the above call
model = Tulip.Optimizer{BigFloat}()  # Create a model in BigFloat precision"><pre><span class="pl-k">import</span> MathOptInterface
MOI <span class="pl-k">=</span> MathOptInterface
<span class="pl-k">import</span> Tulip

model <span class="pl-k">=</span> Tulip<span class="pl-k">.</span><span class="pl-c1">Optimizer</span><span class="pl-c1">{Float64}</span>()   <span class="pl-c"><span class="pl-c">#</span> Create a model in Float64 precision</span>
model <span class="pl-k">=</span> Tulip<span class="pl-k">.</span><span class="pl-c1">Optimizer</span>()            <span class="pl-c"><span class="pl-c">#</span> Defaults to the above call</span>
model <span class="pl-k">=</span> Tulip<span class="pl-k">.</span><span class="pl-c1">Optimizer</span><span class="pl-c1">{BigFloat}</span>()  <span class="pl-c"><span class="pl-c">#</span> Create a model in BigFloat precision</span></pre></div>
<h2 dir="auto"><a id="user-content-solver-parameters" class="anchor" aria-hidden="true" href="#solver-parameters"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Solver parameters</h2>
<h3 dir="auto"><a id="user-content-setting-parameters" class="anchor" aria-hidden="true" href="#setting-parameters"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Setting parameters</h3>
<p dir="auto">When using Tulip through JuMP/MOI, parameters can be set either through MOI's generic <code>OptimizerAttribute</code>s, e.g., <code>MOI.TimeLimitSec</code> and <code>MOI.Silent</code>, or by name.</p>
<ul dir="auto">
<li>
<p dir="auto">Through JuMP</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="jump_model = JuMP.Model(Tulip.Optimizer)

JuMP.set_optimizer_attribute(jump_model, &quot;IPM_IterationsLimit&quot;, 200)"><pre>jump_model <span class="pl-k">=</span> JuMP<span class="pl-k">.</span><span class="pl-c1">Model</span>(Tulip<span class="pl-k">.</span>Optimizer)

JuMP<span class="pl-k">.</span><span class="pl-c1">set_optimizer_attribute</span>(jump_model, <span class="pl-s"><span class="pl-pds">"</span>IPM_IterationsLimit<span class="pl-pds">"</span></span>, <span class="pl-c1">200</span>)</pre></div>
</li>
<li>
<p dir="auto">Through MOI</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="moi_model = Tulip.Optimizer{Float64}()

MOI.set(moi_model, MOI.RawOptimizerAttribute(&quot;IPM_IterationsLimit&quot;), 200)"><pre>moi_model <span class="pl-k">=</span> Tulip<span class="pl-k">.</span><span class="pl-c1">Optimizer</span><span class="pl-c1">{Float64}</span>()

MOI<span class="pl-k">.</span><span class="pl-c1">set</span>(moi_model, MOI<span class="pl-k">.</span><span class="pl-c1">RawOptimizerAttribute</span>(<span class="pl-s"><span class="pl-pds">"</span>IPM_IterationsLimit<span class="pl-pds">"</span></span>), <span class="pl-c1">200</span>)</pre></div>
</li>
<li>
<p dir="auto">Through Tulip's API</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="model = Tulip.Model{Float64}()

Tulip.set_parameter(model, &quot;IPM_IterationsLimit&quot;, 200)"><pre>model <span class="pl-k">=</span> Tulip<span class="pl-k">.</span><span class="pl-c1">Model</span><span class="pl-c1">{Float64}</span>()

Tulip<span class="pl-k">.</span><span class="pl-c1">set_parameter</span>(model, <span class="pl-s"><span class="pl-pds">"</span>IPM_IterationsLimit<span class="pl-pds">"</span></span>, <span class="pl-c1">200</span>)</pre></div>
</li>
</ul>
<h3 dir="auto"><a id="user-content-parameters-description" class="anchor" aria-hidden="true" href="#parameters-description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Parameters description</h3>
<p dir="auto">See the <a href="https://ds4dm.github.io/Tulip.jl/stable/reference/options/" rel="nofollow">documentation</a>.</p>
<h2 dir="auto"><a id="user-content-command-line-executable" class="anchor" aria-hidden="true" href="#command-line-executable"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Command-line executable</h2>
<p dir="auto">See <a href="app/README.md">app building instructions</a>.</p>
<h2 dir="auto"><a id="user-content-citing-tulipjl" class="anchor" aria-hidden="true" href="#citing-tulipjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citing <code>Tulip.jl</code></h2>
<p dir="auto">If you use Tulip in your work, we kindly ask that you cite the following <a href="https://doi.org/10.1007/s12532-020-00200-8" rel="nofollow">reference</a> (preprint available <a href="https://arxiv.org/abs/2006.08814" rel="nofollow">here</a>).</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@Article{Tulip.jl,
  author   = {Tanneau, Mathieu and Anjos, Miguel F. and Lodi, Andrea},
  journal  = {Mathematical Programming Computation},
  title    = {Design and implementation of a modular interior-point solver for linear optimization},
  year     = {2021},
  issn     = {1867-2957},
  month    = feb,
  doi      = {10.1007/s12532-020-00200-8},
  language = {en},
  url      = {https://doi.org/10.1007/s12532-020-00200-8},
  urldate  = {2021-03-07},
}"><pre class="notranslate"><code>@Article{Tulip.jl,
  author   = {Tanneau, Mathieu and Anjos, Miguel F. and Lodi, Andrea},
  journal  = {Mathematical Programming Computation},
  title    = {Design and implementation of a modular interior-point solver for linear optimization},
  year     = {2021},
  issn     = {1867-2957},
  month    = feb,
  doi      = {10.1007/s12532-020-00200-8},
  language = {en},
  url      = {https://doi.org/10.1007/s12532-020-00200-8},
  urldate  = {2021-03-07},
}
</code></pre></div>
</article></div>