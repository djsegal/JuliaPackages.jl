<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-kahansummationjl" class="anchor" aria-hidden="true" href="#kahansummationjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>KahanSummation.jl</h1>
<p><a href="https://travis-ci.org/JuliaMath/KahanSummation.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/303ba66b201cb034930850309e8aaf03cd2361ab907784a842dbd00ed7fdfba3/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614d6174682f4b6168616e53756d6d6174696f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Travis" data-canonical-src="https://travis-ci.org/JuliaMath/KahanSummation.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaMath/KahanSummation.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a805b40f0184609e4c8af6139744c75408aef7fc9bda98e5adda788776f6d6e8/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c69614d6174682f4b6168616e53756d6d6174696f6e2e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/JuliaMath/KahanSummation.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://JuliaMath.github.io/KahanSummation.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>This package provides variants of <code>sum</code> and <code>cumsum</code>, called <code>sum_kbn</code> and <code>cumsum_kbn</code>
respectively, using the Kahan-Babuska-Neumaier (KBN) algorithm for additional precision.
These functions are typically slower and less memory efficient than <code>sum</code> and <code>cumsum</code>.</p>
<p>These functions were formerly part of Julia's Base library.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using KahanSummation

julia&gt; vec = [1.0, 1.0e16, -1.0e16, -0.5];

julia&gt; sum(vec), sum_kbn(vec)
(-0.5, 0.5)

julia&gt; vec = [1.0, 1.0e16, 1.0, -1.0e16];

julia&gt; cumsum_kbn(vec) .- cumsum(vec)
4-element Array{Float64,1}:
 0.0
 0.0
 2.0
 1.0
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> KahanSummation

julia<span class="pl-k">&gt;</span> vec <span class="pl-k">=</span> [<span class="pl-c1">1.0</span>, <span class="pl-c1">1.0e16</span>, <span class="pl-k">-</span><span class="pl-c1">1.0e16</span>, <span class="pl-k">-</span><span class="pl-c1">0.5</span>];

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sum</span>(vec), <span class="pl-c1">sum_kbn</span>(vec)
(<span class="pl-k">-</span><span class="pl-c1">0.5</span>, <span class="pl-c1">0.5</span>)

julia<span class="pl-k">&gt;</span> vec <span class="pl-k">=</span> [<span class="pl-c1">1.0</span>, <span class="pl-c1">1.0e16</span>, <span class="pl-c1">1.0</span>, <span class="pl-k">-</span><span class="pl-c1">1.0e16</span>];

julia<span class="pl-k">&gt;</span> <span class="pl-c1">cumsum_kbn</span>(vec) <span class="pl-k">.-</span> <span class="pl-c1">cumsum</span>(vec)
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0.0</span>
 <span class="pl-c1">0.0</span>
 <span class="pl-c1">2.0</span>
 <span class="pl-c1">1.0</span></pre></div>
</article></div>