<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-log4jl---a-versatile-logging-framework-for-julia" class="anchor" aria-hidden="true" href="#log4jl---a-versatile-logging-framework-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Log4jl - a versatile logging framework for Julia</h1>
<p dir="auto"><a href="https://travis-ci.org/wildart/Log4jl.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/605a6defdb7437e9c51e9252b86bf817b80d86a3e4b8023f5fea19d649564102/68747470733a2f2f7472617669732d63692e6f72672f77696c646172742f4c6f67346a6c2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/wildart/Log4jl.jl.svg?branch=master" style="max-width: 100%;"></a><a href="https://coveralls.io/github/wildart/Log4jl.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/5fcb18ab09d384978c0cb289c3da34c993258b2f2d944863fecdf989670068e1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f77696c646172742f4c6f67346a6c2e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/wildart/Log4jl.jl/badge.svg?branch=master&amp;service=github" style="max-width: 100%;"></a></p>
<p dir="auto"><strong>Log4jl</strong> is a comprehensive and flexible logging framework for Julia programs.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">To create logger call <code>@Log4jl.logger</code> macro after importing <code>Log4jl</code> module.
This macro call initializes and configures the logging framework. Also it creates logger object which cab be used by any of logging functions or macros to perform logging operations.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Log4jl

const logger = @Log4jl.logger

error(logger, &quot;Error in my code&quot;)

# or

@Log4jl logger = @Log4jl.logger

@error &quot;Error in my code&quot;"><pre><span class="pl-k">using</span> Log4jl

<span class="pl-k">const</span> logger <span class="pl-k">=</span> <span class="pl-c1">@Log4jl</span><span class="pl-k">.</span>logger

<span class="pl-c1">error</span>(logger, <span class="pl-s"><span class="pl-pds">"</span>Error in my code<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> or</span>

<span class="pl-c1">@Log4jl</span> logger <span class="pl-k">=</span> <span class="pl-c1">@Log4jl</span><span class="pl-k">.</span>logger

<span class="pl-c1">@error</span> <span class="pl-s"><span class="pl-pds">"</span>Error in my code<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">See usage in <a href="example/simple.jl">example/simple.jl</a>.</p>
<h2 dir="auto"><a id="user-content-logger" class="anchor" aria-hidden="true" href="#logger"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Logger</h2>
<p dir="auto">In order to create logger instance, call macro <code>@Log4jl.logger [&lt;name&gt;] [MSG=&lt;message_type&gt;] [URI=&lt;config_location&gt;] [begin &lt;config_code_block&gt; end]</code>. It accepts following parameters:</p>
<ol dir="auto">
<li><code>name</code>: a string which specifies a logger name from a configuration</li>
<li><code>MSG=&lt;message_type&gt;</code>: a message type used for configuring a logger</li>
<li><code>URI=&lt;config_location&gt;</code>: a configuration location</li>
<li><code>begin &lt;configuration&gt; end</code>: a configuration program block (must return <code>Configuration</code> object)</li>
</ol>
<p dir="auto">If the root logger is required use macro <code>Log4jl.rootlogger</code> with the same parameters as for <code>Log4jl.logger</code> with one exception: root logger does not have a name.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# get the root logger
const logger = @Log4jl.rootlogger

# get the configured logger by name (uses FQMN by default)
const logger = @Log4jl.logger

# get the configured logger by name explicitly
const logger = @Log4jl.logger &quot;TestLogger&quot;

# get the configured logger by name that will use parameterized messages
const logger = @Log4jl.logger &quot;TestLogger&quot; MSG=ParameterizedMessage

# get the configured logger by from file specified in the parameter
const logger = @Log4jl.logger URI=&quot;myconfig.xml&quot;

# get the configured logger from a programmatic configuration
const logger = @Log4jl.logger begin
    Configuration(&quot;Custom&quot;,
        PROPERTIES(),
        APPENDERS(),
        LOGCONFIGS()
    )
end"><pre><span class="pl-c"><span class="pl-c">#</span> get the root logger</span>
<span class="pl-k">const</span> logger <span class="pl-k">=</span> <span class="pl-c1">@Log4jl</span><span class="pl-k">.</span>rootlogger

<span class="pl-c"><span class="pl-c">#</span> get the configured logger by name (uses FQMN by default)</span>
<span class="pl-k">const</span> logger <span class="pl-k">=</span> <span class="pl-c1">@Log4jl</span><span class="pl-k">.</span>logger

<span class="pl-c"><span class="pl-c">#</span> get the configured logger by name explicitly</span>
<span class="pl-k">const</span> logger <span class="pl-k">=</span> <span class="pl-c1">@Log4jl</span><span class="pl-k">.</span>logger <span class="pl-s"><span class="pl-pds">"</span>TestLogger<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> get the configured logger by name that will use parameterized messages</span>
<span class="pl-k">const</span> logger <span class="pl-k">=</span> <span class="pl-c1">@Log4jl</span><span class="pl-k">.</span>logger <span class="pl-s"><span class="pl-pds">"</span>TestLogger<span class="pl-pds">"</span></span> MSG<span class="pl-k">=</span>ParameterizedMessage

<span class="pl-c"><span class="pl-c">#</span> get the configured logger by from file specified in the parameter</span>
<span class="pl-k">const</span> logger <span class="pl-k">=</span> <span class="pl-c1">@Log4jl</span><span class="pl-k">.</span>logger URI<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>myconfig.xml<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> get the configured logger from a programmatic configuration</span>
<span class="pl-k">const</span> logger <span class="pl-k">=</span> <span class="pl-c1">@Log4jl</span><span class="pl-k">.</span>logger <span class="pl-k">begin</span>
    <span class="pl-c1">Configuration</span>(<span class="pl-s"><span class="pl-pds">"</span>Custom<span class="pl-pds">"</span></span>,
        <span class="pl-c1">PROPERTIES</span>(),
        <span class="pl-c1">APPENDERS</span>(),
        <span class="pl-c1">LOGCONFIGS</span>()
    )
<span class="pl-k">end</span></pre></div>
<h2 dir="auto"><a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Configuration</h2>
<p dir="auto">The default configuration file is <code>log4jl.*</code>. An extension of the configuration file determines format in which configuration is described.</p>
<p dir="auto">Configuration file should be located in:</p>
<ul dir="auto">
<li>For stand-alone module: a directory where a source code file of the module is located.</li>
<li>For package: a package root directory.</li>
</ul>
<h2 dir="auto"><a id="user-content-log4jl-internal-properties" class="anchor" aria-hidden="true" href="#log4jl-internal-properties"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Log4jl Internal Properties</h2>
<p dir="auto">Log4jl can be configured with properties which can be set through environmental variables.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
<th>Default Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>LOG4JL_LINE_SEPARATOR</td>
<td>Default new line separator sequence</td>
<td>[(0x0d - win) 0x0a]</td>
</tr>
<tr>
<td>LOG4JL_DEFAULT_STATUS_LEVEL</td>
<td>Default logger status level to use if not specified in configuration.</td>
<td>ERROR</td>
</tr>
<tr>
<td>LOG4JL_INTERNAL_STATUS_LEVEL</td>
<td>Default status level of internal <code>Log4jl</code> logging to use if not specified in configuration.</td>
<td>WARN</td>
</tr>
<tr>
<td>LOG4JL_LOG_EVENT</td>
<td>Type of the default logger event generator which converts messages into logging events.</td>
<td>Log4jlEvent</td>
</tr>
<tr>
<td>LOG4JL_CONTEXT_SELECTOR</td>
<td>Type of the default logger context selector.</td>
<td>ModuleContextSelector</td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-logging-separation" class="anchor" aria-hidden="true" href="#logging-separation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Logging Separation</h2>
<p dir="auto">There are many well known use cases where applications may share an environment with other applications and each has a need to have its own, separate logging environment.</p>
<p dir="auto">There are a few ways to archive logging separation using different <code>ContextSelector</code> implementations:</p>
<ul dir="auto">
<li>
<p dir="auto"><code>SingleContextSelector</code>: This selector creates a single <code>LoggerContext</code> using a single configuration that will be shared across all applications.</p>
</li>
<li>
<p dir="auto"><code>ModuleContextSelector</code>: This selector creates a one <code>LoggerContext</code> per module. This allows each module be configured to share the same configuration or can be individually configured. However, if configuration is not provided or has error then the parent module context is used for the current module. If there exist no parent module then new context is created with default configuration.</p>
</li>
</ul>
<p dir="auto">Context selection can be done by setting environment variable <code>LOG4JL_CONTEXT_SELECTOR</code> with a name of context selector type.</p>
<h2 dir="auto"><a id="user-content-custom-log-levels" class="anchor" aria-hidden="true" href="#custom-log-levels"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Custom Log Levels</h2>
<p dir="auto"><code>Log4jl</code> supports custom log levels. Custom log levels can be defined in code or in configuration. To define a custom log level in code, use the <code>Level.add</code> function. This function creates a new level for the specified name and generates appropriate convenience functions. After a log level is defined you can log messages at this level by calling corresponding log function:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# This creates the &quot;VERBOSE&quot; level if it does not exist yet.
Log4jl.Level.add(:VERBOSE, 550)

# Create a logger
const logger = @logger

# Use the custom VERBOSE level
Log4jl.verbose(logger, &quot;a verbose message&quot;)"><pre><span class="pl-c"><span class="pl-c">#</span> This creates the "VERBOSE" level if it does not exist yet.</span>
Log4jl<span class="pl-k">.</span>Level<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-c1">:VERBOSE</span>, <span class="pl-c1">550</span>)

<span class="pl-c"><span class="pl-c">#</span> Create a logger</span>
<span class="pl-k">const</span> logger <span class="pl-k">=</span> <span class="pl-c1">@logger</span>

<span class="pl-c"><span class="pl-c">#</span> Use the custom VERBOSE level</span>
Log4jl<span class="pl-k">.</span><span class="pl-c1">verbose</span>(logger, <span class="pl-s"><span class="pl-pds">"</span>a verbose message<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">When defining a custom log level, the intLevel parameter (550 in the example above) determines where the custom level exists in relation to the standard levels built-in to Log4jl. For reference, the table below shows the intLevel of the built-in log levels.</p>
<p dir="auto">Standard log levels built-in to Log4jl</p>
<table>
<thead>
<tr>
<th>Standard Level</th>
<th>intLevel</th>
</tr>
</thead>
<tbody>
<tr>
<td>OFF</td>
<td>0</td>
</tr>
<tr>
<td>FATAL</td>
<td>100</td>
</tr>
<tr>
<td>ERROR</td>
<td>200</td>
</tr>
<tr>
<td>WARN</td>
<td>300</td>
</tr>
<tr>
<td>INFO</td>
<td>400</td>
</tr>
<tr>
<td>DEBUG</td>
<td>500</td>
</tr>
<tr>
<td>TRACE</td>
<td>600</td>
</tr>
<tr>
<td>ALL</td>
<td>typemax(Int16)</td>
</tr>
</tbody>
</table>
<h3 dir="auto"><a id="user-content-defining-custom-log-levels-in-configuration" class="anchor" aria-hidden="true" href="#defining-custom-log-levels-in-configuration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Defining Custom Log Levels in Configuration</h3>
<p dir="auto">Custom log levels can also be defined in configuration. This is convenient for using a custom level in a logger filter or an appender filter. Similar to defining log levels in code, a custom level must be defined first, before it can be used. If a logger or appender is configured with an undefined level, that logger or appender will be invalid and will not process any log events.</p>
<p dir="auto">The <code>customlevels</code> section of configuration element defines a custom levels. Internally it calls the same <code>Level.add</code> function discussed above.</p>
<table>
<thead>
<tr>
<th>Parameter Name</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>name</td>
<td>string</td>
<td>The name of the custom level. The convention is to use all upper-case names.</td>
</tr>
<tr>
<td>intLevel</td>
<td>integer</td>
<td>Determines where the custom level exists in relation to the standard levels built-in to Log4jl (see the table above).</td>
</tr>
</tbody>
</table>
<p dir="auto">The following example shows a configuration that defines some custom log levels and uses a custom log level to filter log events sent to the console.</p>
<div class="highlight highlight-source-yaml notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="configuration:
  status: trace
  name: YAMLTest
  customlevels:
    diag: 350
    verbose: 150

  appenders:
    ColorConsole:
      name: STDOUT

  loggers:
    logger:
      -
        name: X.Y
        level: diag
        appenderref:
          -
            ref: STDOUT"><pre><span class="pl-ent">configuration</span>:
  <span class="pl-ent">status</span>: <span class="pl-s">trace</span>
  <span class="pl-ent">name</span>: <span class="pl-s">YAMLTest</span>
  <span class="pl-ent">customlevels</span>:
    <span class="pl-ent">diag</span>: <span class="pl-c1">350</span>
    <span class="pl-ent">verbose</span>: <span class="pl-c1">150</span>

  <span class="pl-ent">appenders</span>:
    <span class="pl-ent">ColorConsole</span>:
      <span class="pl-ent">name</span>: <span class="pl-s">STDOUT</span>

  <span class="pl-ent">loggers</span>:
    <span class="pl-ent">logger</span>:
      -
        <span class="pl-ent">name</span>: <span class="pl-s">X.Y</span>
        <span class="pl-ent">level</span>: <span class="pl-s">diag</span>
        <span class="pl-ent">appenderref</span>:
          -
            <span class="pl-ent">ref</span>: <span class="pl-s">STDOUT</span></pre></div>
<h2 dir="auto"><a id="user-content-filters" class="anchor" aria-hidden="true" href="#filters"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Filters</h2>
<p dir="auto">Filters allow logged <code>Event</code>s to be evaluated to determine if or how they should be published. A <code>Filter</code> will be called on one of its <code>filter</code> methods and will return a <code>FilterResult</code>, which is an <code>Enum</code> that has one of 3 values:</p>
<ul dir="auto">
<li><code>ACCEPT</code>: no filters called, accept event</li>
<li><code>DENY</code>: ignore event, return to caller</li>
<li><code>NEUTRAL</code>: pass event to other filters</li>
</ul>
<p dir="auto">Filters may be configured in one of four locations:</p>
<ul dir="auto">
<li><strong>Context-wide Filters</strong> are configured directly in the configuration. Events that are rejected by these filters will not be passed to loggers for further processing. Once an event has been accepted by a context-wide filter it will not be evaluated by any other context-wide filters nor will the Logger's Level be used to filter the event. The event will be evaluated by logger and appender filters however.</li>
<li><strong>Logger Filters</strong> are configured on a specified <code>Logger</code>. These are evaluated after the context-wide filters and the log <code>Level</code> for the <code>Logger</code>. Events that are rejected by these filters will be discarded and the event will not be passed to a parent <code>Logger</code> regardless of the additivity setting.</li>
<li><strong>Appender Reference Filters</strong> are used to determine if a <code>Logger</code> should route the event to an appender.</li>
<li><strong>Appender Filters</strong> are used to determine if a specific <code>Appender</code> should handle the formatting and publication of the event.</li>
</ul>
<h2 dir="auto"><a id="user-content-dev-notes" class="anchor" aria-hidden="true" href="#dev-notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Dev Notes</h2>
<h3 dir="auto"><a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Architecture</h3>
<p dir="auto"><a href="http://github.comwildart/Log4jl.jl" rel="nofollow">Log4jl</a> has similar architecture as <a href="http://logging.apache.org/log4j/2.x/manual/architecture.html" rel="nofollow">Apache Log4j 2</a> framework.</p>
<ul dir="auto">
<li>Loggers are wrappers around configuration</li>
<li>Loggers would change behavior if configuration is changed</li>
<li>Logger hierarchy based on hierarchy of configurations</li>
<li>Global logger context keeps track of all loggers</li>
<li>Root logger has no name and additivity, its default level is ERROR</li>
<li>Logging functions support:
<ul dir="auto">
<li>plaint text</li>
<li>markers</li>
<li>objects</li>
</ul>
</li>
</ul>
<h3 dir="auto"><a id="user-content-constants" class="anchor" aria-hidden="true" href="#constants"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Constants</h3>
<ul dir="auto">
<li><code>LOG4JL_CONFIG_DEFAULT_PREFIX</code>: prefix of the configuration file. Default value is 'log4jl'.</li>
<li><code>LOG4JL_CONFIG_EXTS</code>: Map of configuration file extensions.</li>
<li><code>LOG4JL_CONFIG_TYPES</code>: Map of configuration types.</li>
</ul>
<h3 dir="auto"><a id="user-content-implementation-details" class="anchor" aria-hidden="true" href="#implementation-details"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Implementation details</h3>
<ul dir="auto">
<li>'isenabled' checks if logger allowed to process event at specified level</li>
</ul>
<h3 dir="auto"><a id="user-content-missing" class="anchor" aria-hidden="true" href="#missing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Missing</h3>
<ul dir="auto">
<li>On-fly reconfiguration</li>
<li>Multi-threading/processing support</li>
<li>Lookups</li>
<li>Configuration formats: JSON, XML, TOML</li>
<li>Handle configuration recursion</li>
</ul>
<h3 dir="auto"><a id="user-content-message" class="anchor" aria-hidden="true" href="#message"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Message</h3>
<ul dir="auto">
<li>For custom formated messages, create two functions with the same name and following signatures:
<ul dir="auto">
<li>&lt;message_type_function&gt;(msg::AbstractString, params...) =&gt; Message</li>
<li>&lt;message_type_function&gt;(msg::Any) =&gt; Message</li>
</ul>
</li>
</ul>
<h2 dir="auto"><a id="user-content-loading-sequence" class="anchor" aria-hidden="true" href="#loading-sequence"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Loading sequence</h2>
<ol dir="auto">
<li>Module <code>Log4jl</code> is referenced</li>
<li>Function <code>Log4jl.__init__</code> is called
<ol dir="auto">
<li>A logger context selector is initialized as object and assigned to global constant <code>LOG4JL_CONTEXT_SELECTOR</code> from an environment variable with the same name. Default context selector type is <code>Log4jl.ModuleContextSelector</code>.</li>
<li>Default status level is initialized as <code>LOG4JL_DEFAULT_STATUS_LEVEL</code> global constant from an environment variable with the same name.  Default status level is <code>Log4jl.Level.ERROR</code>.</li>
<li>A logger event type is is initialized as <code>LOG4JL_LOG_EVENT</code> global constant from an environment variable with the same name. Default logger event type is <code>Log4jl.Log4jlEvent</code>.</li>
</ol>
</li>
<li>Macro <code>Log4jl.logger</code> is called with(out) parameters
<ol dir="auto">
<li>Parameters parsed</li>
<li>Context selector is used to create a logging context</li>
<li>Configuration is created
a. Programmatic configuration is evaluated
b. Configuration file is located, loaded and parsed</li>
<li>Logging context is initialized with the created configuration</li>
<li>Logging context is started
<ol dir="auto">
<li>Shutdown hook is created.</li>
</ol>
</li>
<li>Configuration is started
<ol dir="auto">
<li>Configuration is setup (properties and appenders are created)</li>
<li>Configuration is configured (loggers are created and referenced to appenders)</li>
<li>All appenders are started</li>
</ol>
</li>
<li>Logging context used to create a logger wrapper</li>
<li>Logger object is returned</li>
</ol>
</li>
<li>Logger object is used in logging functions.</li>
</ol>
<h2 dir="auto"><a id="user-content-shutdown-sequence" class="anchor" aria-hidden="true" href="#shutdown-sequence"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Shutdown sequence</h2>
<p dir="auto">TODO: proper shutdown when <code>workspace</code> is called.</p>
</article></div>