<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-iologgingjl" class="anchor" aria-hidden="true" href="#iologgingjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>IOLogging.jl</h1>
<p><a href="https://travis-ci.com/Seelengrab/IOLogging.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7467335d146f31b1b028076a5bd305eef319c968/68747470733a2f2f7472617669732d63692e636f6d2f5365656c656e677261622f494f4c6f6767696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/Seelengrab/IOLogging.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>A simple, thin package providing basic loggers for logging to IO. As the logging functionality from Base might change in the future, so will this package.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>This package is registered with METADATA.jl, so you can just do <code>]add IOLogging</code> to install the package.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Logging, IOLogging

julia<span class="pl-k">&gt;</span> logger <span class="pl-k">=</span> <span class="pl-c1">IOLogger</span>()

julia<span class="pl-k">&gt;</span> oldGlobal <span class="pl-k">=</span> <span class="pl-c1">global_logger</span>(logger)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@info</span> <span class="pl-s"><span class="pl-pds">"</span>Hello World!<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> prints this (with a current timestamp):</span>
<span class="pl-c"><span class="pl-c">#</span> [Info::2018-09-12T10:50:12.884]  Main@REPL[4]:1 - Hello World!</span></pre></div>
<p>We can also pass our own destinations for Logging:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> default is stdout for everything above Info</span>
julia<span class="pl-k">&gt;</span> logger <span class="pl-k">=</span> <span class="pl-c1">IOLogger</span>(<span class="pl-c1">Dict</span>(Logging<span class="pl-k">.</span>Info <span class="pl-k">=&gt;</span> stderr, Logging<span class="pl-k">.</span>Error <span class="pl-k">=&gt;</span> devnull))</pre></div>
<p>The same as above applies to <code>FileLogger()</code> as well, but instead of giving destination IO, we specify a destination file.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> default is default.log for everything above Info</span>
julia<span class="pl-k">&gt;</span> logger <span class="pl-k">=</span> <span class="pl-c1">FileLogger</span>(<span class="pl-c1">Dict</span>(Logging<span class="pl-k">.</span>Info <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>info.log<span class="pl-pds">"</span></span>, Logging<span class="pl-k">.</span>Error <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>error.log<span class="pl-pds">"</span></span>))</pre></div>
<p>For more information about the individual loggers, make sure to read <code>?IOLogger</code> and <code>?FileLogger</code>.</p>
<h2><a id="user-content-known-todo" class="anchor" aria-hidden="true" href="#known-todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Known ToDo</h2>
<ul>
<li>Add custom log message formatting</li>
<li>Add more tests</li>
<li>Make decision on logging error catching (IOLogging.jl#20)</li>
</ul>
</article></div>