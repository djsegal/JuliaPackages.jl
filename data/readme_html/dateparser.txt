<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-dateparser" class="anchor" aria-hidden="true" href="#dateparser"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DateParser</h1>
<p><a href="https://travis-ci.org/invenia/DateParser.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a0a409ed0ba3ddeeda6029ff502523b0da42867044ae17002945176c25a7ae8e/68747470733a2f2f7472617669732d63692e6f72672f696e76656e69612f446174655061727365722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/invenia/DateParser.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/Michael-Klassen/dateparser-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/8dce1014d47e0bda346203c51c4699981253d89b2ccd7180a64c8c612a1ec533/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7862796b3076376d39703336396965722f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/xbyk0v7m9p369ier/branch/master?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/invenia/DateParser.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/0c996dfb793df5e3f4caf78f8b6a0e0e6d39501a3eb1c985b98c86bdd399878c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f696e76656e69612f446174655061727365722e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/invenia/DateParser.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/invenia/DateParser.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/7d5d59ad988e00e1aa5b54b2d7cdee56f00090dea494886929a5e6fb280d6e4b/687474703a2f2f636f6465636f762e696f2f6769746875622f696e76656e69612f446174655061727365722e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/invenia/DateParser.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Automatic parsing of date strings</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p><code>DateParser</code> extends the functions <code>parse</code> and <code>tryparse</code> by adding support for the types:  <code>Date</code>, <code>DateTime</code>, and <code>ZonedDateTime</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using DateParser

julia&gt; parse(DateTime, &quot;Oct 13, 1994 17:10&quot;)
1994-10-13T17:10:00

julia&gt; using TimeZones

julia&gt; parse(ZonedDateTime, &quot;Oct 13, 1994 17:10 -05:00&quot;)
1994-10-13T17:10:00-05:00
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> DateParser

julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse</span>(DateTime, <span class="pl-s"><span class="pl-pds">"</span>Oct 13, 1994 17:10<span class="pl-pds">"</span></span>)
<span class="pl-c1">1994</span><span class="pl-k">-</span><span class="pl-c1">10</span><span class="pl-k">-</span><span class="pl-c1">13</span>T17<span class="pl-k">:</span><span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">00</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> TimeZones

julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse</span>(ZonedDateTime, <span class="pl-s"><span class="pl-pds">"</span>Oct 13, 1994 17:10 -05:00<span class="pl-pds">"</span></span>)
<span class="pl-c1">1994</span><span class="pl-k">-</span><span class="pl-c1">10</span><span class="pl-k">-</span><span class="pl-c1">13</span>T17<span class="pl-k">:</span><span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">-</span><span class="pl-c1">05</span><span class="pl-k">:</span><span class="pl-c1">00</span></pre></div>
<p>Use the <code>fuzzy</code> keyword argument for fuzzy parsing. When <code>fuzzy</code> is true any unknown tokens in the string will be ignored. By default <code>fuzzy</code> is set to false.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; tryparse(DateTime, &quot;It is Oct 13, 1994 at around 17:10&quot;)
Nullable{DateTime}()

julia&gt; tryparse(DateTime, &quot;It is Oct 13, 1994 at around 17:10&quot;, fuzzy=true)
Nullable(1994-10-13T17:10:00)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">tryparse</span>(DateTime, <span class="pl-s"><span class="pl-pds">"</span>It is Oct 13, 1994 at around 17:10<span class="pl-pds">"</span></span>)
<span class="pl-c1">Nullable</span><span class="pl-c1">{DateTime}</span>()

julia<span class="pl-k">&gt;</span> <span class="pl-c1">tryparse</span>(DateTime, <span class="pl-s"><span class="pl-pds">"</span>It is Oct 13, 1994 at around 17:10<span class="pl-pds">"</span></span>, fuzzy<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">Nullable</span>(<span class="pl-c1">1994</span><span class="pl-k">-</span><span class="pl-c1">10</span><span class="pl-k">-</span><span class="pl-c1">13</span>T17<span class="pl-k">:</span><span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">00</span>)</pre></div>
<p>If you want to fill in omitted fields with specific values use the <code>default</code> keyword argument. When <code>default</code> is unused it will be set to the the first instant of the current year.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; Dates.today()
2015-10-16

julia&gt; parse(DateTime, &quot;13:20&quot;)
2015-01-01T13:20:00

julia&gt; parse(DateTime, &quot;13:20&quot;, default=convert(DateTime, Dates.today()))
2015-10-29T13:20:00

julia&gt; parse(ZonedDateTime, &quot;Oct 13, 1994&quot;)
1994-10-13T00:00:00+00:00

julia&gt; default = ZonedDateTime(DateTime(1994, 10, 5, 17, 10), TimeZone(&quot;Europe/Warsaw&quot;))
1994-10-05T17:10:00+01:00

julia&gt; parse(ZonedDateTime, &quot;Oct 13, 1994&quot;, default=default)
1994-10-13T17:10:00+01:00
"><pre>julia<span class="pl-k">&gt;</span> Dates<span class="pl-k">.</span><span class="pl-c1">today</span>()
<span class="pl-c1">2015</span><span class="pl-k">-</span><span class="pl-c1">10</span><span class="pl-k">-</span><span class="pl-c1">16</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse</span>(DateTime, <span class="pl-s"><span class="pl-pds">"</span>13:20<span class="pl-pds">"</span></span>)
<span class="pl-c1">2015</span><span class="pl-k">-</span><span class="pl-c1">01</span><span class="pl-k">-</span><span class="pl-c1">01</span>T13<span class="pl-k">:</span><span class="pl-c1">20</span><span class="pl-k">:</span><span class="pl-c1">00</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse</span>(DateTime, <span class="pl-s"><span class="pl-pds">"</span>13:20<span class="pl-pds">"</span></span>, default<span class="pl-k">=</span><span class="pl-c1">convert</span>(DateTime, Dates<span class="pl-k">.</span><span class="pl-c1">today</span>()))
<span class="pl-c1">2015</span><span class="pl-k">-</span><span class="pl-c1">10</span><span class="pl-k">-</span><span class="pl-c1">29</span>T13<span class="pl-k">:</span><span class="pl-c1">20</span><span class="pl-k">:</span><span class="pl-c1">00</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse</span>(ZonedDateTime, <span class="pl-s"><span class="pl-pds">"</span>Oct 13, 1994<span class="pl-pds">"</span></span>)
<span class="pl-c1">1994</span><span class="pl-k">-</span><span class="pl-c1">10</span><span class="pl-k">-</span><span class="pl-c1">13</span>T00<span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">+</span><span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">00</span>

julia<span class="pl-k">&gt;</span> default <span class="pl-k">=</span> <span class="pl-c1">ZonedDateTime</span>(<span class="pl-c1">DateTime</span>(<span class="pl-c1">1994</span>, <span class="pl-c1">10</span>, <span class="pl-c1">5</span>, <span class="pl-c1">17</span>, <span class="pl-c1">10</span>), <span class="pl-c1">TimeZone</span>(<span class="pl-s"><span class="pl-pds">"</span>Europe/Warsaw<span class="pl-pds">"</span></span>))
<span class="pl-c1">1994</span><span class="pl-k">-</span><span class="pl-c1">10</span><span class="pl-k">-</span><span class="pl-c1">05</span>T17<span class="pl-k">:</span><span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">+</span><span class="pl-c1">01</span><span class="pl-k">:</span><span class="pl-c1">00</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse</span>(ZonedDateTime, <span class="pl-s"><span class="pl-pds">"</span>Oct 13, 1994<span class="pl-pds">"</span></span>, default<span class="pl-k">=</span>default)
<span class="pl-c1">1994</span><span class="pl-k">-</span><span class="pl-c1">10</span><span class="pl-k">-</span><span class="pl-c1">13</span>T17<span class="pl-k">:</span><span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">+</span><span class="pl-c1">01</span><span class="pl-k">:</span><span class="pl-c1">00</span></pre></div>
<p>For ambiguous dates like <code>04/02/03</code> you can use the <code>dayfirst</code> or <code>yearfirst</code> keyword arguments to determine what the date should be. By default they are both set to <code>false</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; parse(Date, &quot;04/02/03&quot;)
2003-04-02

julia&gt; parse(Date, &quot;04/02/03&quot;, yearfirst=true)
2004-02-03

julia&gt; parse(Date, &quot;04/02/03&quot;, dayfirst=true)
2003-02-04
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse</span>(Date, <span class="pl-s"><span class="pl-pds">"</span>04/02/03<span class="pl-pds">"</span></span>)
<span class="pl-c1">2003</span><span class="pl-k">-</span><span class="pl-c1">04</span><span class="pl-k">-</span><span class="pl-c1">02</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse</span>(Date, <span class="pl-s"><span class="pl-pds">"</span>04/02/03<span class="pl-pds">"</span></span>, yearfirst<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">2004</span><span class="pl-k">-</span><span class="pl-c1">02</span><span class="pl-k">-</span><span class="pl-c1">03</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse</span>(Date, <span class="pl-s"><span class="pl-pds">"</span>04/02/03<span class="pl-pds">"</span></span>, dayfirst<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">2003</span><span class="pl-k">-</span><span class="pl-c1">02</span><span class="pl-k">-</span><span class="pl-c1">04</span></pre></div>
<p>As shown above, 2 digit years will get converted to a 4 digit year near year 2000. 00 to 49 becomes 2000 to 2049 and 50 to 99 becomes 1950 to 1999.</p>
<p>When the string includes a recognized time zone it will automatically be parsed. If the time zone information is ambiguous when using a time zone abbreviation you can use <code>tzmap</code> to disambiguate the time zone information.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; parse(ZonedDateTime, &quot;1994/11/13 13:00 America/Winnipeg&quot;)
1994-11-13T13:00:00-06:00

julia&gt; parse(ZonedDateTime, &quot;1994/11/13 13:00 CST&quot;)
ERROR: Failed to parse date

julia&gt; map = Dict{AbstractString,TimeZone}(&quot;CST&quot; =&gt; TimeZone(&quot;America/Winnipeg&quot;))
Dict{AbstractString,Base.Dates.TimeZone} with 1 entry:
  &quot;CST&quot; =&gt; America/Winnipeg

julia&gt; zdt = parse(ZonedDateTime, &quot;1994/11/13 13:00 CST&quot;, tzmap=map)
1994-11-13T13:00:00-06:00

julia&gt; Dates.format(zdt, &quot;yyyy/mm/dd HH:MM ZZZ&quot;)
&quot;1994/11/13 13:00 CST&quot;
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse</span>(ZonedDateTime, <span class="pl-s"><span class="pl-pds">"</span>1994/11/13 13:00 America/Winnipeg<span class="pl-pds">"</span></span>)
<span class="pl-c1">1994</span><span class="pl-k">-</span><span class="pl-c1">11</span><span class="pl-k">-</span><span class="pl-c1">13</span>T13<span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">-</span><span class="pl-c1">06</span><span class="pl-k">:</span><span class="pl-c1">00</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse</span>(ZonedDateTime, <span class="pl-s"><span class="pl-pds">"</span>1994/11/13 13:00 CST<span class="pl-pds">"</span></span>)
ERROR<span class="pl-k">:</span> Failed to parse date

julia<span class="pl-k">&gt;</span> map <span class="pl-k">=</span> <span class="pl-c1">Dict</span><span class="pl-c1">{AbstractString,TimeZone}</span>(<span class="pl-s"><span class="pl-pds">"</span>CST<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">TimeZone</span>(<span class="pl-s"><span class="pl-pds">"</span>America/Winnipeg<span class="pl-pds">"</span></span>))
Dict{AbstractString,Base<span class="pl-k">.</span>Dates<span class="pl-k">.</span>TimeZone} with <span class="pl-c1">1</span> entry<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>CST<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> America<span class="pl-k">/</span>Winnipeg

julia<span class="pl-k">&gt;</span> zdt <span class="pl-k">=</span> <span class="pl-c1">parse</span>(ZonedDateTime, <span class="pl-s"><span class="pl-pds">"</span>1994/11/13 13:00 CST<span class="pl-pds">"</span></span>, tzmap<span class="pl-k">=</span>map)
<span class="pl-c1">1994</span><span class="pl-k">-</span><span class="pl-c1">11</span><span class="pl-k">-</span><span class="pl-c1">13</span>T13<span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">-</span><span class="pl-c1">06</span><span class="pl-k">:</span><span class="pl-c1">00</span>

julia<span class="pl-k">&gt;</span> Dates<span class="pl-k">.</span><span class="pl-c1">format</span>(zdt, <span class="pl-s"><span class="pl-pds">"</span>yyyy/mm/dd HH:MM ZZZ<span class="pl-pds">"</span></span>)
<span class="pl-s"><span class="pl-pds">"</span>1994/11/13 13:00 CST<span class="pl-pds">"</span></span></pre></div>
</article></div>