<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-questdbclient" class="anchor" aria-hidden="true" href="#questdbclient"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>QuestDBClient</h1>
<p dir="auto">This is a Julia package that can be used to connect to a <a href="https://questdb.io/" rel="nofollow">QuestDB</a> database server and send data using the <a href="https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/" rel="nofollow">InfluxDB Line Protocol</a>.</p>
<blockquote>
<p dir="auto">This package is strictly used to write data to the database. Reading is not supported. To read data from QuestDB, you can use QuestDB's <a href="https://github.com/iamed2/LibPQ.jl">LibPQ</a> or <a href="https://github.com/JuliaDatabases/DBInterface.jl">DBInterface</a> through port <code>8812</code>. Alternatively, you can read the data over through QuestDB's REST API on port <code>9000</code>. Visit QuestDB's <a href="https://questdb.io/docs/develop/query-data/" rel="nofollow">docs</a> to get more information on how to query data.</p>
</blockquote>
<p dir="auto"><strong>Installation</strong> at the Julia REPL, <code>using Pkg; Pkg.add("QuestDBClient")</code></p>
<p dir="auto"><strong>Documentation</strong> can be found <a href="https://ochibobo.github.io/QuestDBClient.jl/dev/" rel="nofollow">here</a>.</p>
<hr>
<h2 dir="auto"><a id="user-content-basic-examples" class="anchor" aria-hidden="true" href="#basic-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic Examples</h2>
<h3 dir="auto"><a id="user-content-functional-approach" class="anchor" aria-hidden="true" href="#functional-approach"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Functional Approach:</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using QuestDBClient

&quot;&quot;&quot;
Assumes the presence of a table called readings created using:

CREATE TABLE readings (
  timestamp TIMESTAMP,
  city SYMBOL,
  temperature DOUBLE,
  humidity DOUBLE,
  make SYMBOL
) TIMESTAMP(timestamp) PARTITION BY DAY;
&quot;&quot;&quot;

## Create a sender instance that will connect to the localhost at port 9009
sender = Sender()

## Connect the sender to the server first
connect(sender)

## Create ILP records
sender |&gt;
    x -&gt; table(x, :readings) |&gt; 
    x -&gt; symbol(x, :make =&gt; :Omron) |&gt;
    x -&gt; symbol(x, :city =&gt; :Nairobi) |&gt;
    x -&gt; FloatColumn(x, :temperature =&gt; 26.8) |&gt; 
    x -&gt; FloatColumn(x, :humidity =&gt; 0.51) |&gt;
    x -&gt; AtNow(x)

sender |&gt; 
    x -&gt; table(x, :readings) |&gt; 
    x -&gt; symbol(x, :make =&gt; :Honeywell) |&gt; 
    x -&gt; symbol(x, :city =&gt; :London) |&gt;
    x -&gt; FloatColumn(x, :temperature =&gt; 22.9) |&gt; 
    x -&gt; FloatColumn(x, :humidity =&gt; 0.254) |&gt;
    x -&gt; AtNow(x)

sender |&gt; 
    x -&gt; table(x, :readings) |&gt; 
    x -&gt; symbol(x, :make =&gt; :Omron) |&gt; 
    x -&gt; symbol(x, :city =&gt; :Bristol) |&gt;
    x -&gt; FloatColumn(x, :temperature =&gt; 23.9) |&gt; 
    x -&gt; FloatColumn(x, :humidity =&gt; 0.233) |&gt;
    x -&gt; AtNow(x)
    

## Flush the output to the server
QuestDBSender.flush(sender)

## Close the socket connection
## Close first calls QuestDBSender.flush(sender) as part of its definition
QuestDBSender.close(sender)"><pre><span class="pl-k">using</span> QuestDBClient

<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">Assumes the presence of a table called readings created using:</span>
<span class="pl-s"></span>
<span class="pl-s">CREATE TABLE readings (</span>
<span class="pl-s">  timestamp TIMESTAMP,</span>
<span class="pl-s">  city SYMBOL,</span>
<span class="pl-s">  temperature DOUBLE,</span>
<span class="pl-s">  humidity DOUBLE,</span>
<span class="pl-s">  make SYMBOL</span>
<span class="pl-s">) TIMESTAMP(timestamp) PARTITION BY DAY;</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>

<span class="pl-c"><span class="pl-c">#</span># Create a sender instance that will connect to the localhost at port 9009</span>
sender <span class="pl-k">=</span> <span class="pl-c1">Sender</span>()

<span class="pl-c"><span class="pl-c">#</span># Connect the sender to the server first</span>
<span class="pl-c1">connect</span>(sender)

<span class="pl-c"><span class="pl-c">#</span># Create ILP records</span>
sender <span class="pl-k">|&gt;</span>
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">table</span>(x, <span class="pl-c1">:readings</span>) <span class="pl-k">|&gt;</span> 
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">symbol</span>(x, <span class="pl-c1">:make</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:Omron</span>) <span class="pl-k">|&gt;</span>
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">symbol</span>(x, <span class="pl-c1">:city</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:Nairobi</span>) <span class="pl-k">|&gt;</span>
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">FloatColumn</span>(x, <span class="pl-c1">:temperature</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">26.8</span>) <span class="pl-k">|&gt;</span> 
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">FloatColumn</span>(x, <span class="pl-c1">:humidity</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.51</span>) <span class="pl-k">|&gt;</span>
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">AtNow</span>(x)

sender <span class="pl-k">|&gt;</span> 
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">table</span>(x, <span class="pl-c1">:readings</span>) <span class="pl-k">|&gt;</span> 
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">symbol</span>(x, <span class="pl-c1">:make</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:Honeywell</span>) <span class="pl-k">|&gt;</span> 
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">symbol</span>(x, <span class="pl-c1">:city</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:London</span>) <span class="pl-k">|&gt;</span>
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">FloatColumn</span>(x, <span class="pl-c1">:temperature</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">22.9</span>) <span class="pl-k">|&gt;</span> 
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">FloatColumn</span>(x, <span class="pl-c1">:humidity</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.254</span>) <span class="pl-k">|&gt;</span>
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">AtNow</span>(x)

sender <span class="pl-k">|&gt;</span> 
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">table</span>(x, <span class="pl-c1">:readings</span>) <span class="pl-k">|&gt;</span> 
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">symbol</span>(x, <span class="pl-c1">:make</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:Omron</span>) <span class="pl-k">|&gt;</span> 
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">symbol</span>(x, <span class="pl-c1">:city</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:Bristol</span>) <span class="pl-k">|&gt;</span>
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">FloatColumn</span>(x, <span class="pl-c1">:temperature</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">23.9</span>) <span class="pl-k">|&gt;</span> 
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">FloatColumn</span>(x, <span class="pl-c1">:humidity</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.233</span>) <span class="pl-k">|&gt;</span>
    x <span class="pl-k">-&gt;</span> <span class="pl-c1">AtNow</span>(x)
    

<span class="pl-c"><span class="pl-c">#</span># Flush the output to the server</span>
QuestDBSender<span class="pl-k">.</span><span class="pl-c1">flush</span>(sender)

<span class="pl-c"><span class="pl-c">#</span># Close the socket connection</span>
<span class="pl-c"><span class="pl-c">#</span># Close first calls QuestDBSender.flush(sender) as part of its definition</span>
QuestDBSender<span class="pl-k">.</span><span class="pl-c1">close</span>(sender)</pre></div>
<h3 dir="auto"><a id="user-content-macro-based-approach" class="anchor" aria-hidden="true" href="#macro-based-approach"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Macro based approach:</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using QuestDBClient

&quot;&quot;&quot;
Assumes the presence of a table called readings created using:

CREATE TABLE readings (
  timestamp TIMESTAMP,
  city SYMBOL,
  temperature DOUBLE,
  humidity DOUBLE,
  make SYMBOL
) TIMESTAMP(timestamp) PARTITION BY DAY;
&quot;&quot;&quot;

## Connects to the localhost at port 9009
sender = Sender()

## Connect the sender to the server first
connect(sender)

## Create ILP record statements
sender |&gt;
    @table(:readings) |&gt;
    @symbol(:make =&gt; :Omron) |&gt;
    @symbol(:city =&gt; :Lisbon) |&gt;
    @FloatColumn(:temperature =&gt; 24.8) |&gt;
    @FloatColumn(:humidity =&gt; 0.334) |&gt;
    @AtNow

sender |&gt;
    @table(:readings) |&gt;
    @symbol(:make =&gt; :HoneyWell) |&gt;
    @symbol(:city =&gt; :Kisumu) |&gt;
    @FloatColumn(:temperature =&gt; 30.2) |&gt;
    @FloatColumn(:humidity =&gt; 0.54) |&gt;
    @AtNow

sender |&gt;
    @table(:readings) |&gt;
    @symbol(:make =&gt; :Omron) |&gt;
    @symbol(:city =&gt; :Berlin) |&gt;
    @FloatColumn(:temperature =&gt; 26.1) |&gt;
    @FloatColumn(:humidity =&gt; 0.45) |&gt;
    @AtNow

## Flush the output to the server
QuestDBSender.flush(sender)

## Close the socket connection
## Close first calls QuestDBSender.flush(sender) as part of its definition
QuestDBSender.close(sender)"><pre><span class="pl-k">using</span> QuestDBClient

<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">Assumes the presence of a table called readings created using:</span>
<span class="pl-s"></span>
<span class="pl-s">CREATE TABLE readings (</span>
<span class="pl-s">  timestamp TIMESTAMP,</span>
<span class="pl-s">  city SYMBOL,</span>
<span class="pl-s">  temperature DOUBLE,</span>
<span class="pl-s">  humidity DOUBLE,</span>
<span class="pl-s">  make SYMBOL</span>
<span class="pl-s">) TIMESTAMP(timestamp) PARTITION BY DAY;</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>

<span class="pl-c"><span class="pl-c">#</span># Connects to the localhost at port 9009</span>
sender <span class="pl-k">=</span> <span class="pl-c1">Sender</span>()

<span class="pl-c"><span class="pl-c">#</span># Connect the sender to the server first</span>
<span class="pl-c1">connect</span>(sender)

<span class="pl-c"><span class="pl-c">#</span># Create ILP record statements</span>
sender <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@table</span>(<span class="pl-c1">:readings</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@symbol</span>(<span class="pl-c1">:make</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:Omron</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@symbol</span>(<span class="pl-c1">:city</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:Lisbon</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@FloatColumn</span>(<span class="pl-c1">:temperature</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">24.8</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@FloatColumn</span>(<span class="pl-c1">:humidity</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.334</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@AtNow</span>

sender <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@table</span>(<span class="pl-c1">:readings</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@symbol</span>(<span class="pl-c1">:make</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:HoneyWell</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@symbol</span>(<span class="pl-c1">:city</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:Kisumu</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@FloatColumn</span>(<span class="pl-c1">:temperature</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">30.2</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@FloatColumn</span>(<span class="pl-c1">:humidity</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.54</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@AtNow</span>

sender <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@table</span>(<span class="pl-c1">:readings</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@symbol</span>(<span class="pl-c1">:make</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:Omron</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@symbol</span>(<span class="pl-c1">:city</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:Berlin</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@FloatColumn</span>(<span class="pl-c1">:temperature</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">26.1</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@FloatColumn</span>(<span class="pl-c1">:humidity</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.45</span>) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">@AtNow</span>

<span class="pl-c"><span class="pl-c">#</span># Flush the output to the server</span>
QuestDBSender<span class="pl-k">.</span><span class="pl-c1">flush</span>(sender)

<span class="pl-c"><span class="pl-c">#</span># Close the socket connection</span>
<span class="pl-c"><span class="pl-c">#</span># Close first calls QuestDBSender.flush(sender) as part of its definition</span>
QuestDBSender<span class="pl-k">.</span><span class="pl-c1">close</span>(sender)</pre></div>
<hr>
<h2 dir="auto"><a id="user-content-roadmap-features" class="anchor" aria-hidden="true" href="#roadmap-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Roadmap Features</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Sender Auth and TLS implementation.
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Find or implement <code>ecdsa</code> in Julia.</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Error propagation from QuestDB Server.</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Re-implement the sender's buffer  (it's currently just a <code>String</code>).</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Extend <code>DataFrames</code> support to support of Julia's <code>Table Interface</code>.</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Allow for the extending of the API by the user who can add types and define how they'll be added to an ILP record statement.</li>
</ul>
</article></div>