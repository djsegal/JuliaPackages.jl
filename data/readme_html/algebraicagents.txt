<div id="readme" class="md" data-path="readme.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-algebraicagentsjl--dynamical-systems-co-integration-framework" class="anchor" aria-hidden="true" href="#algebraicagentsjl--dynamical-systems-co-integration-framework"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AlgebraicAgents.jl: <br> Dynamical Systems Co-Integration Framework</h1>
<p align="center" dir="auto">
  <a href="#about">About</a> |
  <a href="#context-dynamics-of-value-evolution-dyve">Context</a> |
  <a href="#a-single-sketch">A Single Sketch</a> |
  <a href="https://merck.github.io/AlgebraicAgents.jl/stable" rel="nofollow">Documentation</a>
</p>
<h2 dir="auto"><a id="user-content-about" class="anchor" aria-hidden="true" href="#about"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>About</h2>
<p dir="auto">A lightweight framework to enable <strong>hierarchical, heterogeneous</strong> dynamical systems <strong>co-integration</strong>. <em>Batteries included!</em></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/code.png"><img src="docs/src/assets/code.png" align="right" alt="code" width="500" style="max-width: 100%;"></a></p>
<p dir="auto"><b>Entangle dynamical systems</b>
</p><ul dir="auto">
 <li> Simulate joint evolution of dynamical systems from across the Julia ecosystem</li>
 <li> Each of the systems can evolve at its own pace - the framework will keep them in sync</li>
 <li> The systems may access each other's (interpolated) observables</li>
</ul>
<p dir="auto"><b>Organize systems into hierarchies</b></p>
<ul dir="auto">
 <li> A dynamical system may contain an embedded hierarchy of agents</li>
 <li> The systems are indexed as folders in a file system - even wildcards are supported</li>
 <li> You may take sums of dynamical systems - and override default ⊕ to embrace custom system classes</li>
</ul>
<p dir="auto"></p>
<p dir="auto">The package solves a typical <strong>scaling problem</strong>: while modeling a complex system, one tears the joint dynamics into several parts, but inevitably runs into troubles when trying to put these parts together.</p>
<p dir="auto">We provide a minimalistic <strong>interface</strong> featuring compositions of dynamical systems, to <strong>approximate the joint dynamics</strong> from separate systems' evolutionary laws. In practice, one only has to define a <strong>wrap type</strong> for a custom dynamical system class and implement a handful of <strong>common interface methods</strong>. So far, integrations of <a href="https://github.com/SciML/DifferentialEquations.jl">DifferentialEquations.jl</a>, <a href="https://github.com/JuliaDynamics/Agents.jl">Agents.jl</a>, and <a href="https://github.com/AlgebraicJulia/AlgebraicDynamics.jl">AlgebraicDynamics.jl</a> are provided, see the <a href="https://merck.github.io/AlgebraicAgents.jl/#Loading-third-party-package-integrations" rel="nofollow">docs</a>.</p>
<p dir="auto">The dynamical systems are organized into <strong>hierarchies</strong>. That is, a dynamical system may contain an embedded hierarchy of dynamical systems. Each system is then assigned a <strong>path</strong> in the overarching hierarchy, like a folder in a file system. A dynamical system typically indexes and retrieves other systems in the hierarchy via relative paths.</p>
<p dir="auto">The underlying concept of a <strong>sum</strong> (a join) of dynamical systems is manifested at two distinct levels: first, the dynamical systems are <strong>implicitly coupled</strong> as they generally observe (and interact with) each other's state. Second, a structural sum <strong>⊕</strong> operator is provided; this outputs another dynamical system which usually contains the summands within a hierarchy of embedded systems. Importantly, using Julia's <strong>dynamic dispatch</strong>, it is possible to fully customize this behavior for user-defined dynamical system classes.</p>
<h2 dir="auto"><a id="user-content-context-dynamics-of-value-evolution-dyve" class="anchor" aria-hidden="true" href="#context-dynamics-of-value-evolution-dyve"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Context: Dynamics of Value Evolution (DyVE)</h2>
<p dir="auto">The package is an integral part of the <strong>Dynamics of Value Evolution (DyVE)</strong> computational framework for learning, designing, integrating, simulating, and optimizing R&amp;D process models, to better inform strategic decisions in science and business.</p>
<p dir="auto">As the framework evolves, multiple functionalities have matured enough to become standalone packages.</p>
<p dir="auto">This includes <strong><a href="https://github.com/Merck/ReactiveDynamics.jl">ReactiveDynamics.jl</a></strong>, a package which implements a category of reaction (transportation) network-type dynamical systems. The central concept of the package is of a stateful, parametric transition; simultaneous action of the transitions then evolves the dynamical system. Moreover, a network's dynamics can be specified using a compact modeling metalanguage.</p>
<p dir="auto">Another package is <strong><a href="https://github.com/Merck/GeneratedExpressions.jl">GeneratedExpressions.jl</a></strong>, which implements a metalanguage to support code-less expression comprehensions. In the context of ReactiveDynamics.jl, expression comprehensions are used to generate complex dynamics from user-specified template transitions.</p>
<h2 dir="auto"><a id="user-content-a-single-sketch" class="anchor" aria-hidden="true" href="#a-single-sketch"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>A Single Sketch</h2>
<h2 dir="auto"><a id="user-content-integrating-a-custom-dynamical-system" class="anchor" aria-hidden="true" href="#integrating-a-custom-dynamical-system"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Integrating a Custom Dynamical System</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# drug entity, lives in a therapeutic area
@aagent FreeAgent Molecule struct SmallMolecule
    age::Float64
    birth_time::Float64
    kill_time::Float64

    mol::AbstractString
    profile::NTuple{N, Float64}

    sales::Float64
    df_sales::DataFrame
end"><pre><span class="pl-c"><span class="pl-c">#</span> drug entity, lives in a therapeutic area</span>
<span class="pl-c1">@aagent</span> FreeAgent Molecule <span class="pl-k">struct</span> SmallMolecule
    age<span class="pl-k">::</span><span class="pl-c1">Float64</span>
    birth_time<span class="pl-k">::</span><span class="pl-c1">Float64</span>
    kill_time<span class="pl-k">::</span><span class="pl-c1">Float64</span>

    mol<span class="pl-k">::</span><span class="pl-c1">AbstractString</span>
    profile<span class="pl-k">::</span><span class="pl-c1">NTuple{N, Float64}</span>

    sales<span class="pl-k">::</span><span class="pl-c1">Float64</span>
    df_sales<span class="pl-k">::</span><span class="pl-c1">DataFrame</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">Note the use of a conveniency macro <code>@aagent</code> which appends additional fields expected (not required, though) by default interface methods.</p>
<p dir="auto">Next we provide an evolutionary law for <code>SmallMolecule</code> type. This is done by extending the interface function <code>AlgebraicAgents._step!(agent)</code>.</p>
<p dir="auto">Here, <code>t</code> is the maximal time to which all the systems in a hierarchy have been projected. Once <code>t</code> reaches the time point to which <code>mol</code> has been projected, then it's time for another step:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# implement evolution
function AlgebraicAgents._step!(mol::SmallMolecule)
   t = projected_to(mol) # get current time; this equals the time point up to which the mol agent has been projected (enforced via `AlgebraicAgents.step!`)

   # log sales volume at time t
   push!(mol.df_sales, (t, mol.sales))
   # increment mol's age - by default, mols will evolve by unit step
   mol.age += 1
   # apply sales decay in time
   mol.sales *= sales_decay_small

   # remove mol 1) once sales volume drops below a given level
   # 2) also account for some random effect - prob of removal increases in time
   if (mol.sales &lt;= 10) || (rand() &gt;= exp(-0.2*mol.age))
      mol.kill_time = t
      push!(getagent(mol, &quot;../dx&quot;).removed_mols, (mol.mol, t))
      # remove mol from the system
      disentangle!(mol)
   end
end"><pre><span class="pl-c"><span class="pl-c">#</span> implement evolution</span>
<span class="pl-k">function</span> AlgebraicAgents<span class="pl-k">.</span><span class="pl-en">_step!</span>(mol<span class="pl-k">::</span><span class="pl-c1">SmallMolecule</span>)
   t <span class="pl-k">=</span> <span class="pl-c1">projected_to</span>(mol) <span class="pl-c"><span class="pl-c">#</span> get current time; this equals the time point up to which the mol agent has been projected (enforced via `AlgebraicAgents.step!`)</span>

   <span class="pl-c"><span class="pl-c">#</span> log sales volume at time t</span>
   <span class="pl-c1">push!</span>(mol<span class="pl-k">.</span>df_sales, (t, mol<span class="pl-k">.</span>sales))
   <span class="pl-c"><span class="pl-c">#</span> increment mol's age - by default, mols will evolve by unit step</span>
   mol<span class="pl-k">.</span>age <span class="pl-k">+=</span> <span class="pl-c1">1</span>
   <span class="pl-c"><span class="pl-c">#</span> apply sales decay in time</span>
   mol<span class="pl-k">.</span>sales <span class="pl-k">*=</span> sales_decay_small

   <span class="pl-c"><span class="pl-c">#</span> remove mol 1) once sales volume drops below a given level</span>
   <span class="pl-c"><span class="pl-c">#</span> 2) also account for some random effect - prob of removal increases in time</span>
   <span class="pl-k">if</span> (mol<span class="pl-k">.</span>sales <span class="pl-k">&lt;=</span> <span class="pl-c1">10</span>) <span class="pl-k">||</span> (<span class="pl-c1">rand</span>() <span class="pl-k">&gt;=</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span><span class="pl-c1">0.2</span><span class="pl-k">*</span>mol<span class="pl-k">.</span>age))
      mol<span class="pl-k">.</span>kill_time <span class="pl-k">=</span> t
      <span class="pl-c1">push!</span>(<span class="pl-c1">getagent</span>(mol, <span class="pl-s"><span class="pl-pds">"</span>../dx<span class="pl-pds">"</span></span>)<span class="pl-k">.</span>removed_mols, (mol<span class="pl-k">.</span>mol, t))
      <span class="pl-c"><span class="pl-c">#</span> remove mol from the system</span>
      <span class="pl-c1">disentangle!</span>(mol)
   <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">We provide additional methods required by the common interface:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# to reinit the system's state - since we have cold starts here, let's simply remove the mol
AlgebraicAgents._reinit!(mol::Molecule) = disentangle!(mol)
# return time to which the system has been projected
AlgebraicAgents._projected_to(mol::Molecule) = mol.age + mol.birth_time"><pre><span class="pl-c"><span class="pl-c">#</span> to reinit the system's state - since we have cold starts here, let's simply remove the mol</span>
AlgebraicAgents<span class="pl-k">.</span><span class="pl-en">_reinit!</span>(mol<span class="pl-k">::</span><span class="pl-c1">Molecule</span>) <span class="pl-k">=</span> <span class="pl-c1">disentangle!</span>(mol)
<span class="pl-c"><span class="pl-c">#</span> return time to which the system has been projected</span>
AlgebraicAgents<span class="pl-k">.</span><span class="pl-en">_projected_to</span>(mol<span class="pl-k">::</span><span class="pl-c1">Molecule</span>) <span class="pl-k">=</span> mol<span class="pl-k">.</span>age <span class="pl-k">+</span> mol<span class="pl-k">.</span>birth_time</pre></div>
<h3 dir="auto"><a id="user-content-adding-sde-models" class="anchor" aria-hidden="true" href="#adding-sde-models"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Adding SDE Models</h3>
<p dir="auto">Let's define toy market demand model and represent this as a stochastic differential equation defined in <code>DifferentialEquations.jl</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# add SDE models for drug demand in respective areas
using DifferentialEquations

dt = 1//2^(4); tspan = (0.0,100.)
f(u,p,t) = p[:α]*u; g(u,p,t) = p[:β]*u

prob_1 = SDEProblem(f,g,.9,tspan,Dict{Symbol, Any}(:α=&gt;.01, :β=&gt;.01))
prob_2 = SDEProblem(f,g,1.2,tspan,Dict{Symbol, Any}(:α=&gt;.005, :β=&gt;.01))"><pre><span class="pl-c"><span class="pl-c">#</span> add SDE models for drug demand in respective areas</span>
<span class="pl-k">using</span> DifferentialEquations

dt <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">2</span><span class="pl-k">^</span>(<span class="pl-c1">4</span>); tspan <span class="pl-k">=</span> (<span class="pl-c1">0.0</span>,<span class="pl-c1">100.</span>)
<span class="pl-en">f</span>(u,p,t) <span class="pl-k">=</span> p[<span class="pl-c1">:α</span>]<span class="pl-k">*</span>u; <span class="pl-en">g</span>(u,p,t) <span class="pl-k">=</span> p[<span class="pl-c1">:β</span>]<span class="pl-k">*</span>u

prob_1 <span class="pl-k">=</span> <span class="pl-c1">SDEProblem</span>(f,g,.<span class="pl-c1">9</span>,tspan,<span class="pl-c1">Dict</span><span class="pl-c1">{Symbol, Any}</span>(<span class="pl-c1">:α</span><span class="pl-k">=&gt;</span>.<span class="pl-c1">01</span>, <span class="pl-c1">:β</span><span class="pl-k">=&gt;</span>.<span class="pl-c1">01</span>))
prob_2 <span class="pl-k">=</span> <span class="pl-c1">SDEProblem</span>(f,g,<span class="pl-c1">1.2</span>,tspan,<span class="pl-c1">Dict</span><span class="pl-c1">{Symbol, Any}</span>(<span class="pl-c1">:α</span><span class="pl-k">=&gt;</span>.<span class="pl-c1">005</span>, <span class="pl-c1">:β</span><span class="pl-k">=&gt;</span>.<span class="pl-c1">01</span>))</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="SDEProblem with uType Float64 and tType Float64. In-place: false
timespan: (0.0, 100.0)
u0: 1.2"><pre>SDEProblem with uType Float64 and tType Float64. In<span class="pl-k">-</span>place<span class="pl-k">:</span> <span class="pl-c1">false</span>
timespan<span class="pl-k">:</span> (<span class="pl-c1">0.0</span>, <span class="pl-c1">100.0</span>)
u0<span class="pl-k">:</span> <span class="pl-c1">1.2</span></pre></div>
<p dir="auto">Internally, a discovery unit will adjust its productivity according to the observed market demand:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# sync with market demand
dx.productivity, = getobservable(getagent(dx,  &quot;../demand&quot;), &quot;demand&quot;)"><pre><span class="pl-c"><span class="pl-c">#</span> sync with market demand</span>
dx<span class="pl-k">.</span>productivity, <span class="pl-k">=</span> <span class="pl-c1">getobservable</span>(<span class="pl-c1">getagent</span>(dx,  <span class="pl-s"><span class="pl-pds">"</span>../demand<span class="pl-pds">"</span></span>), <span class="pl-s"><span class="pl-pds">"</span>demand<span class="pl-pds">"</span></span>)</pre></div>
<h3 dir="auto"><a id="user-content-defining--entangling-the-systems" class="anchor" aria-hidden="true" href="#defining--entangling-the-systems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Defining &amp; Entangling the Systems</h3>
<p dir="auto">Next step is to initiate the actual dynamical systems.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# define therapeutic areas
therapeutic_area1 = FreeAgent(&quot;therapeutic_area1&quot;)
therapeutic_area2 = FreeAgent(&quot;therapeutic_area2&quot;)

# join therapeutic models into a pharma model
pharma_model = ⊕(therapeutic_area1, therapeutic_area2; name=&quot;pharma_model&quot;)

# initialize and push discovery units to therapeutic areas
# discovery units evolve at different pace
entangle!(therapeutic_area1, Discovery(&quot;dx&quot;, 5.2, 10.; dt=3.))
entangle!(therapeutic_area2, Discovery(&quot;dx&quot;, 6., 8.; dt=5.))

# add SDE models for drug demand in respective areas
demand_model_1 = DiffEqAgent(&quot;demand&quot;, prob_1, EM(); observables=Dict(&quot;demand&quot; =&gt; 1), dt)
demand_model_2 = DiffEqAgent(&quot;demand&quot;, prob_2, EM(); observables=Dict(&quot;demand&quot; =&gt; 1), dt)

# push market demand units to therapeutic areas
entangle!(therapeutic_area1, demand_model_1)
entangle!(therapeutic_area2, demand_model_2)

# show the model
pharma_model"><pre><span class="pl-c"><span class="pl-c">#</span> define therapeutic areas</span>
therapeutic_area1 <span class="pl-k">=</span> <span class="pl-c1">FreeAgent</span>(<span class="pl-s"><span class="pl-pds">"</span>therapeutic_area1<span class="pl-pds">"</span></span>)
therapeutic_area2 <span class="pl-k">=</span> <span class="pl-c1">FreeAgent</span>(<span class="pl-s"><span class="pl-pds">"</span>therapeutic_area2<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> join therapeutic models into a pharma model</span>
pharma_model <span class="pl-k">=</span> ⊕(therapeutic_area1, therapeutic_area2; name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>pharma_model<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> initialize and push discovery units to therapeutic areas</span>
<span class="pl-c"><span class="pl-c">#</span> discovery units evolve at different pace</span>
<span class="pl-c1">entangle!</span>(therapeutic_area1, <span class="pl-c1">Discovery</span>(<span class="pl-s"><span class="pl-pds">"</span>dx<span class="pl-pds">"</span></span>, <span class="pl-c1">5.2</span>, <span class="pl-c1">10.</span>; dt<span class="pl-k">=</span><span class="pl-c1">3.</span>))
<span class="pl-c1">entangle!</span>(therapeutic_area2, <span class="pl-c1">Discovery</span>(<span class="pl-s"><span class="pl-pds">"</span>dx<span class="pl-pds">"</span></span>, <span class="pl-c1">6.</span>, <span class="pl-c1">8.</span>; dt<span class="pl-k">=</span><span class="pl-c1">5.</span>))

<span class="pl-c"><span class="pl-c">#</span> add SDE models for drug demand in respective areas</span>
demand_model_1 <span class="pl-k">=</span> <span class="pl-c1">DiffEqAgent</span>(<span class="pl-s"><span class="pl-pds">"</span>demand<span class="pl-pds">"</span></span>, prob_1, <span class="pl-c1">EM</span>(); observables<span class="pl-k">=</span><span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>demand<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>), dt)
demand_model_2 <span class="pl-k">=</span> <span class="pl-c1">DiffEqAgent</span>(<span class="pl-s"><span class="pl-pds">"</span>demand<span class="pl-pds">"</span></span>, prob_2, <span class="pl-c1">EM</span>(); observables<span class="pl-k">=</span><span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>demand<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>), dt)

<span class="pl-c"><span class="pl-c">#</span> push market demand units to therapeutic areas</span>
<span class="pl-c1">entangle!</span>(therapeutic_area1, demand_model_1)
<span class="pl-c1">entangle!</span>(therapeutic_area2, demand_model_2)

<span class="pl-c"><span class="pl-c">#</span> show the model</span>
pharma_model</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="agent pharma_model with uuid 05e79978 of type FreeAgent 
   inner agents: 
    agent therapeutic_area1 with uuid 8b7ac56f of type FreeAgent 
       inner agents: demand, dx
    agent therapeutic_area2 with uuid 6c749c0f of type FreeAgent 
       inner agents: demand, dx"><pre>agent pharma_model with uuid <span class="pl-c1">05e79978</span> of type FreeAgent 
   inner agents<span class="pl-k">:</span> 
    agent therapeutic_area1 with uuid <span class="pl-c1">8</span>b7ac56f of type FreeAgent 
       inner agents<span class="pl-k">:</span> demand, dx
    agent therapeutic_area2 with uuid <span class="pl-c1">6</span>c749c0f of type FreeAgent 
       inner agents<span class="pl-k">:</span> demand, dx</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="getagent(pharma_model, glob&quot;therapeutic_area?/&quot;)"><pre><span class="pl-c1">getagent</span>(pharma_model, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">glob</span>"</span>therapeutic_area?/<span class="pl-pds">"</span></span>)</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="2-element Vector{FreeAgent}:
 FreeAgent{name=therapeutic_area2, uuid=6c749c0f, parent=FreeAgent{name=pharma_model, uuid=05e79978, parent=nothing}}
 FreeAgent{name=therapeutic_area1, uuid=8b7ac56f, parent=FreeAgent{name=pharma_model, uuid=05e79978, parent=nothing}}"><pre><span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{FreeAgent}<span class="pl-k">:</span>
 FreeAgent{name<span class="pl-k">=</span>therapeutic_area2, uuid<span class="pl-k">=</span><span class="pl-c1">6</span>c749c0f, parent<span class="pl-k">=</span>FreeAgent{name<span class="pl-k">=</span>pharma_model, uuid<span class="pl-k">=</span><span class="pl-c1">05e79978</span>, parent<span class="pl-k">=</span><span class="pl-c1">nothing</span>}}
 FreeAgent{name<span class="pl-k">=</span>therapeutic_area1, uuid<span class="pl-k">=</span><span class="pl-c1">8</span>b7ac56f, parent<span class="pl-k">=</span>FreeAgent{name<span class="pl-k">=</span>pharma_model, uuid<span class="pl-k">=</span><span class="pl-c1">05e79978</span>, parent<span class="pl-k">=</span><span class="pl-c1">nothing</span>}}</pre></div>
<h3 dir="auto"><a id="user-content-simulating-the-system" class="anchor" aria-hidden="true" href="#simulating-the-system"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Simulating the System</h3>
<p dir="auto">Let's next evolve the compound model over a hundred time units. The last argument is optional here; see <code>?simulate</code> for the details.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# let the problem evolve
simulate(pharma_model, 100)"><pre><span class="pl-c"><span class="pl-c">#</span> let the problem evolve</span>
<span class="pl-c1">simulate</span>(pharma_model, <span class="pl-c1">100</span>)</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="agent pharma_model with uuid 05e79978 of type FreeAgent 
   inner agents: 
    agent therapeutic_area1 with uuid 8b7ac56f of type FreeAgent 
       inner agents: yBh8n, NL9OQ, IfnJm, jB2XS, YKXlR, hEjuU, TPT6A, G3KGF, dx, 0CBpW, Vj3wm, LgNCo, jBF5x, ankr2, nN8iW, 9XjQX, y3YVk, PRejO, KR4Vl, 5HktC, 4dHax, arRnv, AhPe7, 5tnsD, qqkxY, kOjsf, q2zm5, Np78L, Jlzf7, DYVji, iafx4, b1WsV, ph5PO, NmmaJ, ZQrZK, kyEmh, Szewc, Y6i1A, EEFIu, g8Kuc, p8lgB, RBFqP, 3ndHM, oqWwt, HHKxT, ck6Kh, kQ9lL, qUr9S, GWYI8, PApQn, yitPS, iD5oS, 4EQqz, pCUle, rpXFX, 9295B, aLG3w, z2dTa, T2Cg7, nF00k, demand, g3vDH, KZ423, HcGru, yh9qU, m9u9r, HNZPr, 2p5VX, WKh1Y, DXarI, TFmHm, uGhAj, Medas, MgoKV, KGgP4, llnyd, lTTiZ, doSkK, ZfhWv, XRbpr, FKCI3, ys9UH, l5gVu, N4xmD, PjsRa, ouR7H, ym4Tb, KVYTB, 6YEHf, eyprJ, WBV4y, J92xS, bfsxh, Z57dn, smhsk, ZjoM4, tu9vN, lnUVB, PqUab, oiJOb, rZHlz
    agent therapeutic_area2 with uuid 6c749c0f of type FreeAgent 
       inner agents: dx, aIcFE, qDfar, demand"><pre>agent pharma_model with uuid <span class="pl-c1">05e79978</span> of type FreeAgent 
   inner agents<span class="pl-k">:</span> 
    agent therapeutic_area1 with uuid <span class="pl-c1">8</span>b7ac56f of type FreeAgent 
       inner agents<span class="pl-k">:</span> yBh8n, NL9OQ, IfnJm, jB2XS, YKXlR, hEjuU, TPT6A, G3KGF, dx, <span class="pl-c1">0</span>CBpW, Vj3wm, LgNCo, jBF5x, ankr2, nN8iW, <span class="pl-c1">9</span>XjQX, y3YVk, PRejO, KR4Vl, <span class="pl-c1">5</span>HktC, <span class="pl-c1">4</span>dHax, arRnv, AhPe7, <span class="pl-c1">5</span>tnsD, qqkxY, kOjsf, q2zm5, Np78L, Jlzf7, DYVji, iafx4, b1WsV, ph5PO, NmmaJ, ZQrZK, kyEmh, Szewc, Y6i1A, EEFIu, g8Kuc, p8lgB, RBFqP, <span class="pl-c1">3</span>ndHM, oqWwt, HHKxT, ck6Kh, kQ9lL, qUr9S, GWYI8, PApQn, yitPS, iD5oS, <span class="pl-c1">4</span>EQqz, pCUle, rpXFX, <span class="pl-c1">9295</span>B, aLG3w, z2dTa, T2Cg7, nF00k, demand, g3vDH, KZ423, HcGru, yh9qU, m9u9r, HNZPr, <span class="pl-c1">2</span>p5VX, WKh1Y, DXarI, TFmHm, uGhAj, Medas, MgoKV, KGgP4, llnyd, lTTiZ, doSkK, ZfhWv, XRbpr, FKCI3, ys9UH, l5gVu, N4xmD, PjsRa, ouR7H, ym4Tb, KVYTB, <span class="pl-c1">6</span>YEHf, eyprJ, WBV4y, J92xS, bfsxh, Z57dn, smhsk, ZjoM4, tu9vN, lnUVB, PqUab, oiJOb, rZHlz
    agent therapeutic_area2 with uuid <span class="pl-c1">6</span>c749c0f of type FreeAgent 
       inner agents<span class="pl-k">:</span> dx, aIcFE, qDfar, demand</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="getagent(pharma_model, &quot;therapeutic_area1/dx&quot;)"><pre><span class="pl-c1">getagent</span>(pharma_model, <span class="pl-s"><span class="pl-pds">"</span>therapeutic_area1/dx<span class="pl-pds">"</span></span>)</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="agent dx with uuid af488692 of type Main.Discovery 
   custom properties:
   rate_small: 5.2
   rate_large: 10.0
   productivity: 2.3297332635836594
   t: 102.0
   dt: 3.0
   t0: 0.0
   removed_mols: [(&quot;DGSLp&quot;, 99.0), (&quot;Grjue&quot;, 99.0), (&quot;s8c3x&quot;, 99.0), (&quot;NLbHs&quot;, 99.0), (&quot;DsTSW&quot;, 99.0), (&quot;Qzokp&quot;, 99.0), (&quot;8BFqZ&quot;, 99.0), (&quot;YVKb0&quot;, 99.0), (&quot;pRKig&quot;, 99.0), (&quot;x3Sbn&quot;, 99.0)  …  (&quot;Qq6Rs&quot;, 99.0), (&quot;C4bqV&quot;, 99.0), (&quot;Ic9YH&quot;, 99.0), (&quot;D5emm&quot;, 99.0), (&quot;VW0lS&quot;, 99.0), (&quot;Dez7v&quot;, 99.0), (&quot;z0VjL&quot;, 99.0), (&quot;w9LBP&quot;, 99.0), (&quot;0Aq1f&quot;, 99.0), (&quot;i27ZG&quot;, 99.0)]
   df_output: 34×4 DataFrame
 Row │ time     small  large  removed
     │ Float64  Int64  Int64  Int64
─────┼────────────────────────────────
   1 │     0.0     16     32        0
   2 │     3.0     21     26       38
   3 │     6.0      8     22       46
   4 │     9.0     22     22       33
   5 │    12.0     16     34       45
   6 │    15.0     13     39       44
   7 │    18.0     14     27       56
   8 │    21.0     18     31       42
  ⋮  │    ⋮       ⋮      ⋮       ⋮
  28 │    81.0     14     58       98
  29 │    84.0     24     62       80
  30 │    87.0     39     70       74
  31 │    90.0     42     69      121
  32 │    93.0     38     74      107
  33 │    96.0     38     87       95
  34 │    99.0     42     74      133
                       19 rows omitted
   parent: therapeutic_area1"><pre>agent dx with uuid af488692 of type Main<span class="pl-k">.</span>Discovery 
   custom properties<span class="pl-k">:</span>
   rate_small<span class="pl-k">:</span> <span class="pl-c1">5.2</span>
   rate_large<span class="pl-k">:</span> <span class="pl-c1">10.0</span>
   productivity<span class="pl-k">:</span> <span class="pl-c1">2.3297332635836594</span>
   t<span class="pl-k">:</span> <span class="pl-c1">102.0</span>
   dt<span class="pl-k">:</span> <span class="pl-c1">3.0</span>
   t0<span class="pl-k">:</span> <span class="pl-c1">0.0</span>
   removed_mols<span class="pl-k">:</span> [(<span class="pl-s"><span class="pl-pds">"</span>DGSLp<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>Grjue<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>s8c3x<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>NLbHs<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>DsTSW<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>Qzokp<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>8BFqZ<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>YVKb0<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>pRKig<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>x3Sbn<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>)  …  (<span class="pl-s"><span class="pl-pds">"</span>Qq6Rs<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>C4bqV<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>Ic9YH<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>D5emm<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>VW0lS<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>Dez7v<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>z0VjL<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>w9LBP<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>0Aq1f<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>), (<span class="pl-s"><span class="pl-pds">"</span>i27ZG<span class="pl-pds">"</span></span>, <span class="pl-c1">99.0</span>)]
   df_output<span class="pl-k">:</span> <span class="pl-c1">34</span><span class="pl-k">×</span><span class="pl-c1">4</span> DataFrame
 Row │ time     small  large  removed
     │ Float64  Int64  Int64  Int64
─────┼────────────────────────────────
   <span class="pl-c1">1</span> │     <span class="pl-c1">0.0</span>     <span class="pl-c1">16</span>     <span class="pl-c1">32</span>        <span class="pl-c1">0</span>
   <span class="pl-c1">2</span> │     <span class="pl-c1">3.0</span>     <span class="pl-c1">21</span>     <span class="pl-c1">26</span>       <span class="pl-c1">38</span>
   <span class="pl-c1">3</span> │     <span class="pl-c1">6.0</span>      <span class="pl-c1">8</span>     <span class="pl-c1">22</span>       <span class="pl-c1">46</span>
   <span class="pl-c1">4</span> │     <span class="pl-c1">9.0</span>     <span class="pl-c1">22</span>     <span class="pl-c1">22</span>       <span class="pl-c1">33</span>
   <span class="pl-c1">5</span> │    <span class="pl-c1">12.0</span>     <span class="pl-c1">16</span>     <span class="pl-c1">34</span>       <span class="pl-c1">45</span>
   <span class="pl-c1">6</span> │    <span class="pl-c1">15.0</span>     <span class="pl-c1">13</span>     <span class="pl-c1">39</span>       <span class="pl-c1">44</span>
   <span class="pl-c1">7</span> │    <span class="pl-c1">18.0</span>     <span class="pl-c1">14</span>     <span class="pl-c1">27</span>       <span class="pl-c1">56</span>
   <span class="pl-c1">8</span> │    <span class="pl-c1">21.0</span>     <span class="pl-c1">18</span>     <span class="pl-c1">31</span>       <span class="pl-c1">42</span>
  ⋮  │    ⋮       ⋮      ⋮       ⋮
  <span class="pl-c1">28</span> │    <span class="pl-c1">81.0</span>     <span class="pl-c1">14</span>     <span class="pl-c1">58</span>       <span class="pl-c1">98</span>
  <span class="pl-c1">29</span> │    <span class="pl-c1">84.0</span>     <span class="pl-c1">24</span>     <span class="pl-c1">62</span>       <span class="pl-c1">80</span>
  <span class="pl-c1">30</span> │    <span class="pl-c1">87.0</span>     <span class="pl-c1">39</span>     <span class="pl-c1">70</span>       <span class="pl-c1">74</span>
  <span class="pl-c1">31</span> │    <span class="pl-c1">90.0</span>     <span class="pl-c1">42</span>     <span class="pl-c1">69</span>      <span class="pl-c1">121</span>
  <span class="pl-c1">32</span> │    <span class="pl-c1">93.0</span>     <span class="pl-c1">38</span>     <span class="pl-c1">74</span>      <span class="pl-c1">107</span>
  <span class="pl-c1">33</span> │    <span class="pl-c1">96.0</span>     <span class="pl-c1">38</span>     <span class="pl-c1">87</span>       <span class="pl-c1">95</span>
  <span class="pl-c1">34</span> │    <span class="pl-c1">99.0</span>     <span class="pl-c1">42</span>     <span class="pl-c1">74</span>      <span class="pl-c1">133</span>
                       <span class="pl-c1">19</span> rows omitted
   parent<span class="pl-k">:</span> therapeutic_area1</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="getagent(pharma_model, &quot;therapeutic_area1/demand&quot;)"><pre><span class="pl-c1">getagent</span>(pharma_model, <span class="pl-s"><span class="pl-pds">"</span>therapeutic_area1/demand<span class="pl-pds">"</span></span>)</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="agent demand with uuid 18d7fbd7 of type DiffEqAgent 
   custom properties:
   integrator: 
t: 100.0
u: 2.3580108744816726
   observables: demand (index: 1)
   parent: therapeutic_area1"><pre>agent demand with uuid <span class="pl-c1">18</span>d7fbd7 of type DiffEqAgent 
   custom properties<span class="pl-k">:</span>
   integrator<span class="pl-k">:</span> 
t<span class="pl-k">:</span> <span class="pl-c1">100.0</span>
u<span class="pl-k">:</span> <span class="pl-c1">2.3580108744816726</span>
   observables<span class="pl-k">:</span> demand (index<span class="pl-k">:</span> <span class="pl-c1">1</span>)
   parent<span class="pl-k">:</span> therapeutic_area1</pre></div>
<h3 dir="auto"><a id="user-content-plotting" class="anchor" aria-hidden="true" href="#plotting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plotting</h3>
<p dir="auto">It's possible to provide custom plotting recipes by specializing the interface method <code>AlgebraicAgents._draw(agent)</code>. Whenever a dynamical system's state is logged into a single DataFrame - as is the case with <code>Discovery</code> type - you may utilize a convenience macro <code>@draw_df</code>. To that end, we need to load both <code>DataFrames</code> and <code>Plots</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# implement plots
using DataFrames, Plots
AlgebraicAgents.@draw_df Discovery df_output"><pre><span class="pl-c"><span class="pl-c">#</span> implement plots</span>
<span class="pl-k">using</span> DataFrames, Plots
AlgebraicAgents<span class="pl-k">.</span><span class="pl-c1">@draw_df</span> Discovery df_output</pre></div>
<p dir="auto">To see this in action, call</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="draw(getagent(pharma_model, &quot;therapeutic_area1/dx&quot;))"><pre><span class="pl-c1">draw</span>(<span class="pl-c1">getagent</span>(pharma_model, <span class="pl-s"><span class="pl-pds">"</span>therapeutic_area1/dx<span class="pl-pds">"</span></span>))</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/plot.png"><img src="docs/src/assets/plot.png" alt="plot" width="500" style="max-width: 100%;"></a></p>
</article></div>