<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-suffixarrays" class="anchor" aria-hidden="true" href="#suffixarrays"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>SuffixArrays</h1>
<p><a href="https://travis-ci.org/JuliaCollections/SuffixArrays.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/afa4c4d074c4720f73aa5135fa1df16d71f6b2c1/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961436f6c6c656374696f6e732f5375666669784172726179732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaCollections/SuffixArrays.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>A Julia package for computing <a href="http://en.wikipedia.org/wiki/Suffix_array" rel="nofollow">Suffix Arrays</a>.
The underlying suffix array sorting implementation is a pure Julia port of <a href="https://sites.google.com/site/yuta256/sais" rel="nofollow">sais</a>, by Yuta Mori.</p>
<p>You can use the package by running:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SuffixArrays

julia<span class="pl-k">&gt;</span> s <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>banana<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds">"</span>banana<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> sa <span class="pl-k">=</span> <span class="pl-c1">suffixsort</span>(s)
<span class="pl-c1">6</span><span class="pl-k">-</span>element Array{UInt8,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0x06</span>
 <span class="pl-c1">0x04</span>
 <span class="pl-c1">0x02</span>
 <span class="pl-c1">0x01</span>
 <span class="pl-c1">0x05</span>
 <span class="pl-c1">0x03</span>

julia<span class="pl-k">&gt;</span> [s[i<span class="pl-k">:</span><span class="pl-c1">end</span>] <span class="pl-k">for</span> i <span class="pl-k">in</span> sa]
<span class="pl-c1">6</span><span class="pl-k">-</span>element Array{String,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>ana<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>anana<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>banana<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>na<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>nana<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">issorted</span>(ans)
<span class="pl-c1">true</span></pre></div>
<p>The <code>suffixsort</code> function can compute a suffix array for vectors of <code>UInt8</code> or <code>UInt16</code> values, or for strings with code units that are one of these two types.
When generating a suffix array for a string, the suffix indices are in terms of code units, not characters, which means that some indices will be into the middle of characters that span multiple code units.
For UTF-8 and UTF-16 this doesn't affect using the suffix array as search index since a valid substring cannot start in the middle of a character anyway.
In other words, invalid substrings occuring in the suffix array will simply not match.</p>
<p>By default, <code>suffixsort(v)</code> produces an array of 1-based indices, but it can be called as <code>suffixsort(v, 0)</code> in order to produce an array of 0-based indices, which may be desirable to interface with 0-based libraries (or to save a tiny bit of space).</p>
</article></div>