<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-stresstestjl" class="anchor" aria-hidden="true" href="#stresstestjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>StressTest.jl</h1>
<p>A collection of convenience functions for stress testing purposes.</p>
<p><em>Disclaimer: Use at your own risk. Stress testing may damage hardware.</em></p>
<p><a href="https://ianshmean.github.io/StressTest.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://ianshmean.github.io/StressTest.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/ianshmean/StressTest.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/df6940e7105aba81948023ede71110c7a63b60e7/68747470733a2f2f7472617669732d63692e636f6d2f69616e73686d65616e2f537472657373546573742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/ianshmean/StressTest.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/ianshmean/StressTest-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/874850ae11c49e9c032ac5fcab0588ba14a1382b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f69616e73686d65616e2f537472657373546573742e6a6c3f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/ianshmean/StressTest.jl?svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/ianshmean/StressTest.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7f2fa66cce2775b5529d98b7bc270d3d7c7ed38d/68747470733a2f2f636f6465636f762e696f2f67682f69616e73686d65616e2f537472657373546573742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/ianshmean/StressTest.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/ianshmean/StressTest.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/9ff54c453a994b4933298604a2ae1b35de10ef23/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f69616e73686d65616e2f537472657373546573742e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/ianshmean/StressTest.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://cirrus-ci.com/github/ianshmean/StressTest.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3f3c476f00102a40928438e43d0a4d8ffd1c389c/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f69616e73686d65616e2f537472657373546573742e6a6c2e737667" alt="Build Status" data-canonical-src="https://api.cirrus-ci.com/github/ianshmean/StressTest.jl.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-cpu-loading" class="anchor" aria-hidden="true" href="#cpu-loading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CPU loading</h2>
<ul>
<li><code>dream(seconds)</code> - Like <code>Base.sleep(seconds)</code> except it maxes out the thread</li>
</ul>
<p>For instance, for testing multithreaded CPU loading in Julia 1.3-alpha</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> StressTest
Threads<span class="pl-k">.</span><span class="pl-c1">@spawn</span> <span class="pl-c1">dream</span>(<span class="pl-c1">10</span>)
Threads<span class="pl-k">.</span><span class="pl-c1">@spawn</span> <span class="pl-c1">dream</span>(<span class="pl-c1">10</span>)
Threads<span class="pl-k">.</span><span class="pl-c1">@spawn</span> <span class="pl-c1">dream</span>(<span class="pl-c1">10</span>)
Threads<span class="pl-k">.</span><span class="pl-c1">@spawn</span> <span class="pl-c1">dream</span>(<span class="pl-c1">10</span>)
(System monitor then shows julia ramping up to <span class="pl-k">~</span><span class="pl-c1">400</span><span class="pl-k">%</span> <span class="pl-k">for</span> <span class="pl-c1">10</span> seconds)</pre></div>
<p>PR's welcome!</p>
</article></div>