<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-autoregressivemodelsjl" class="anchor" aria-hidden="true" href="#autoregressivemodelsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AutoregressiveModels.jl</h1>
<p dir="auto"><em>Essential toolkits for working with autoregressive models</em></p>
<p dir="auto"><a href="https://github.com/junyuan-chen/AutoregressiveModels.jl/actions?query=workflow%3ACI-stable"><img src="https://github.com/junyuan-chen/AutoregressiveModels.jl/workflows/CI-stable/badge.svg" alt="CI-stable" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/junyuan-chen/AutoregressiveModels.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7096654a25002ce2a33c4fd2bc577ac5b623eab2df058cbc874584670015eb0f/68747470733a2f2f636f6465636f762e696f2f67682f6a756e7975616e2d6368656e2f4175746f726567726573736976654d6f64656c732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/junyuan-chen/AutoregressiveModels.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/A/AutoregressiveModels.html" rel="nofollow"><img src="https://camo.githubusercontent.com/93ae7ec4d8baa65dfa40ad8d4b979fbc1ed548b5a139f22df7c3909ae1931488/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f412f4175746f726567726573736976654d6f64656c732e737667" alt="PkgEval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/A/AutoregressiveModels.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/junyuan-chen/AutoregressiveModels.jl">AutoregressiveModels.jl</a>
is a Julia package that provides essential toolkits for working with autoregressive models.
Performance and reusability is prioritized over comprehensive coverage of functionalities,
as a main goal of the package is to provide support
for other packages with more specialized purposes.
At this moment, the main focus is on vector autoregressions (VAR).
Some basic support for the autoregressive-moving-average (ARMA) model is also included.</p>
<h2 dir="auto"><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example Usage</h2>
<p dir="auto">To illustrate what the package offers,
here is an example of estimating the impulse responses
based on structural vector autoregressions (SVAR)
and producing a simultaneous confidence band with bootstrap.
Details for individual functions may be found
from docstrings in the help mode of Julia REPL.</p>
<h3 dir="auto"><a id="user-content-impulse-responses-from-structural-var" class="anchor" aria-hidden="true" href="#impulse-responses-from-structural-var"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Impulse Responses from Structural VAR</h3>
<p dir="auto">The example below reproduces one application from Montiel Olea and Plagborg-MÃ¸ller (2019).
The data used are from Gertler and Karadi (2015).</p>
<h4 dir="auto"><a id="user-content-step-1-model-specification-and-point-estimates" class="anchor" aria-hidden="true" href="#step-1-model-specification-and-point-estimates"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Step 1: Model Specification and Point Estimates</h4>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using AutoregressiveModels, CSV, ConfidenceBands
using LocalProjections: datafile # Only needed for the data file

# Load a prepared data file from Gertler and Karadi (2015)
data = CSV.File(datafile(:gk))
# Specify the variables for VAR (the order matters)
names = (:logcpi, :logip, :gs1, :ebp)
# Estimate VAR(12) with OLS and conduct Cholesky factorization for identification
r = fit(VARProcess, data, names, 12, choleskyresid=true, adjust_dofr=false)
# Compute point estimates of impulse responses (37 horizons) to the structural shock (3)
irf = impulse(r, 3, 37, choleskyshock=true)"><pre><span class="pl-k">using</span> AutoregressiveModels, CSV, ConfidenceBands
<span class="pl-k">using</span> LocalProjections<span class="pl-k">:</span> datafile <span class="pl-c"><span class="pl-c">#</span> Only needed for the data file</span>

<span class="pl-c"><span class="pl-c">#</span> Load a prepared data file from Gertler and Karadi (2015)</span>
data <span class="pl-k">=</span> CSV<span class="pl-k">.</span><span class="pl-c1">File</span>(<span class="pl-c1">datafile</span>(<span class="pl-c1">:gk</span>))
<span class="pl-c"><span class="pl-c">#</span> Specify the variables for VAR (the order matters)</span>
names <span class="pl-k">=</span> (<span class="pl-c1">:logcpi</span>, <span class="pl-c1">:logip</span>, <span class="pl-c1">:gs1</span>, <span class="pl-c1">:ebp</span>)
<span class="pl-c"><span class="pl-c">#</span> Estimate VAR(12) with OLS and conduct Cholesky factorization for identification</span>
r <span class="pl-k">=</span> <span class="pl-c1">fit</span>(VARProcess, data, names, <span class="pl-c1">12</span>, choleskyresid<span class="pl-k">=</span><span class="pl-c1">true</span>, adjust_dofr<span class="pl-k">=</span><span class="pl-c1">false</span>)
<span class="pl-c"><span class="pl-c">#</span> Compute point estimates of impulse responses (37 horizons) to the structural shock (3)</span>
irf <span class="pl-k">=</span> <span class="pl-c1">impulse</span>(r, <span class="pl-c1">3</span>, <span class="pl-c1">37</span>, choleskyshock<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<h4 dir="auto"><a id="user-content-step-2-bootstrap-confidence-band" class="anchor" aria-hidden="true" href="#step-2-bootstrap-confidence-band"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Step 2: Bootstrap Confidence Band</h4>
<p dir="auto">A flexible autoregressive bootstrap framework is defined via <code>bootstrap!</code>
and can be used to produce the draws of estimates for
<code>SuptQuantileBootBand()</code> implemented in
<a href="https://github.com/junyuan-chen/ConfidenceBands.jl">ConfidenceBands.jl</a>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Define how the bootstrap statistics are computed
# See the docstring of bootstrap! for explanations
fillirf!(x) = impulse!(x.out, x.r, 3, choleskyshock=true)
ndraw = 10000
# Preallocate an output array for statistics computed over the bootstrap iterations
bootirfs = Array{Float64, 3}(undef, 4, 37, ndraw)

# Specify the bootstrap procedure
bootstrap!(bootirfs=&gt;fillirf!, r, initialindex=1, drawresid=iidresiddraw!)
# Produce a confidence band from the result
boot2 = view(bootirfs, 2, :, :)
lb, ub, pwlevel = confint(SuptQuantileBootBand(), boot2, level=0.68)"><pre><span class="pl-c"><span class="pl-c">#</span> Define how the bootstrap statistics are computed</span>
<span class="pl-c"><span class="pl-c">#</span> See the docstring of bootstrap! for explanations</span>
<span class="pl-en">fillirf!</span>(x) <span class="pl-k">=</span> <span class="pl-c1">impulse!</span>(x<span class="pl-k">.</span>out, x<span class="pl-k">.</span>r, <span class="pl-c1">3</span>, choleskyshock<span class="pl-k">=</span><span class="pl-c1">true</span>)
ndraw <span class="pl-k">=</span> <span class="pl-c1">10000</span>
<span class="pl-c"><span class="pl-c">#</span> Preallocate an output array for statistics computed over the bootstrap iterations</span>
bootirfs <span class="pl-k">=</span> <span class="pl-c1">Array</span><span class="pl-c1">{Float64, 3}</span>(undef, <span class="pl-c1">4</span>, <span class="pl-c1">37</span>, ndraw)

<span class="pl-c"><span class="pl-c">#</span> Specify the bootstrap procedure</span>
<span class="pl-c1">bootstrap!</span>(bootirfs<span class="pl-k">=&gt;</span>fillirf!, r, initialindex<span class="pl-k">=</span><span class="pl-c1">1</span>, drawresid<span class="pl-k">=</span>iidresiddraw!)
<span class="pl-c"><span class="pl-c">#</span> Produce a confidence band from the result</span>
boot2 <span class="pl-k">=</span> <span class="pl-c1">view</span>(bootirfs, <span class="pl-c1">2</span>, :, :)
lb, ub, pwlevel <span class="pl-k">=</span> <span class="pl-c1">confint</span>(<span class="pl-c1">SuptQuantileBootBand</span>(), boot2, level<span class="pl-k">=</span><span class="pl-c1">0.68</span>)</pre></div>
<h4 dir="auto"><a id="user-content-step-3-visualization" class="anchor" aria-hidden="true" href="#step-3-visualization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Step 3: Visualization</h4>
<p dir="auto">Here is a plot for the results with the complete script located
<a href="https://raw.githubusercontent.com/junyuan-chen/AutoregressiveModels.jl/main/docs/src/plots/readmeexample.jl" rel="nofollow">here</a>:</p>
<p align="center" dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/junyuan-chen/AutoregressiveModels.jl/main/docs/src/assets/readmeexample.svg"><img src="https://raw.githubusercontent.com/junyuan-chen/AutoregressiveModels.jl/main/docs/src/assets/readmeexample.svg" height="252" style="max-width: 100%;"></a><br>
</p>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<p dir="auto"><strong>Gertler, Mark, and Peter Karadi.</strong> 2015.
"Replication Data for: Monetary Policy Surprises, Credit Costs, and Economic Activity."
<em>American Economic Association</em> [publisher], Inter-university Consortium for Political and Social Research [distributor]. <a href="https://doi.org/10.3886/E114082V1" rel="nofollow">https://doi.org/10.3886/E114082V1</a>.</p>
<p dir="auto"><strong>Montiel Olea, JosÃ© Luis and Mikkel Plagborg-MÃ¸ller.</strong> 2019.
"Simultaneous Confidence Bands: Theory, Implementation, and an Application to SVARs."
<em>Journal of Applied Econometrics</em> 34 (1): 1-17.</p>
</article></div>