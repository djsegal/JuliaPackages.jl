<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-informeddifferentialevolution" class="anchor" aria-hidden="true" href="#informeddifferentialevolution"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>InformedDifferentialEvolution</h1>
<p><a href="https://travis-ci.org/rened/InformedDifferentialEvolution.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/bc04b9b9602e96cd66607a0964d06a2b883c5bde/68747470733a2f2f7472617669732d63692e6f72672f72656e65642f496e666f726d6564446966666572656e7469616c45766f6c7574696f6e2e6a6c2e706e67" alt="Build Status" data-canonical-src="https://travis-ci.org/rened/InformedDifferentialEvolution.jl.png" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=InformedDifferentialEvolution&amp;ver=0.5" rel="nofollow"><img src="https://camo.githubusercontent.com/4a05f648a5b827145046bca05eee43bfd692015f/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f496e666f726d6564446966666572656e7469616c45766f6c7574696f6e5f302e352e737667" alt="Build Status" data-canonical-src="http://pkg.julialang.org/badges/InformedDifferentialEvolution_0.5.svg" style="max-width:100%;"></a></p>
<p>This package implements the simplest version of Differential Evolution, but adds the ability to specify custom 'predictors', which allow to incorporate knowledge about the problem into the optimization.</p>
<p>For example, standard machine learning approaches could be trained on a set of examples of the optimization problem, and their predictions can be used to guide the optimization.</p>
<p>The key idea of Differential Evolution, without the additions of mutations and crossovers, is to evolve a population of candidates to the optimum by:</p>
<ul>
<li>selecting 3 random candididates <code>a</code>, <code>b</code>, <code>c</code></li>
<li>comparing the costs of <code>a</code> and <code>a' = a + lambda * (c-b)</code></li>
<li>replacing <code>a</code> with <code>a'</code> if <code>a'</code> has lower cost</li>
</ul>
<p>Predictors allow to compare <code>a</code> not only to <code>a'</code>, but also to one or more hypotheses <code>a'' = predict(a)</code>. Predictions are computed for the entire population at once, so the signature of a predictor is actually <code>predictor(currentgeneration, currentcosts)</code>.</p>
<h2><a id="user-content-without-predictors" class="anchor" aria-hidden="true" href="#without-predictors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Without predictors</h2>
<div class="highlight highlight-source-julia"><pre>optimum <span class="pl-k">=</span> [<span class="pl-k">-</span><span class="pl-c1">2</span> <span class="pl-c1">4</span>]'
<span class="pl-en">costf</span>(x) <span class="pl-k">=</span> (r <span class="pl-k">=</span> <span class="pl-c1">sqrt</span>(<span class="pl-c1">sum</span>((x<span class="pl-k">-</span>optimum)<span class="pl-k">.^</span><span class="pl-c1">2</span>)); <span class="pl-c1">sin</span>(r)<span class="pl-k">^</span><span class="pl-c1">2</span><span class="pl-k">+</span>r<span class="pl-k">/</span><span class="pl-c1">2</span>)

best, info <span class="pl-k">=</span> <span class="pl-c1">de</span>(costf, [<span class="pl-k">-</span><span class="pl-c1">10</span>,<span class="pl-k">-</span><span class="pl-c1">10</span>], [<span class="pl-c1">10</span>,<span class="pl-c1">10</span>])
<span class="pl-c1">@show</span> optimum best optimum<span class="pl-k">-</span>best</pre></div>
<p><code>de</code> has the following signature:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">de</span>(costfunction, minima, maxima; kargs<span class="pl-k">...</span>)</pre></div>
<p>The <code>costfunction</code> is expected to take a single parameter of type <code>Array{Number,2}</code> and return a scalar value.
<code>minima</code> and <code>maxima</code> are arrays of type <code>Array{Number,2}</code> specifing the possible range of values passed to <code>costfunction</code>.</p>
<p>The optimization process can be controlled through the following keyword arguments of <code>de</code>, listed with their default values:</p>
<ul>
<li><code>npop = 100</code>, number of candidates in the population</li>
<li><code>maxiter = 1e6</code>, maximum number of iterations</li>
<li><code>lambda = 0.85</code>, value of <code>lambda</code> used in the default DE predictor (see above)</li>
<li><code>initpop = mi .+ rand(length(mi), npop) .* (ma - mi)</code>, initial population</li>
<li><code>recordhistory = false</code>, record details about each candidates' evolution</li>
<li><code>continueabove = -Inf</code>, stop when the cost of the best candidate reaches this value</li>
<li><code>replaceworst = 0.0</code>, percentage specified as range <code>0.0 ... 1.0</code>. In each iteration this percentage of candidates is replaced with copies of the best candidates</li>
<li><code>roundto = 1e-6</code>, size of the grid in the parameter space where candidates live. Set to <code>0</code> for full numerical precision. Can also be a vector the size of <code>minima</code> / <code>maxima</code>, in which case the grid resolution can be different for each parameter. E.g. to enforce integers set to <code>1</code></li>
</ul>
<h2><a id="user-content-with-predictors" class="anchor" aria-hidden="true" href="#with-predictors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>With predictors</h2>
<p>In this example we assume that we can learn from a couple of examples in a training phase and use the resulting model in our predictor:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> example predictor which learned to predict offsets</span>
<span class="pl-en">predictor</span>(pop, costs) <span class="pl-k">=</span> pop <span class="pl-k">+</span> <span class="pl-c1">predict</span>(somemodel, pop)

best, info <span class="pl-k">=</span> <span class="pl-c1">de</span>(costf, [<span class="pl-k">-</span><span class="pl-c1">10</span>,<span class="pl-k">-</span><span class="pl-c1">10</span>], [<span class="pl-c1">10</span>,<span class="pl-c1">10</span>], {predictor, <span class="pl-c1">:default</span>})</pre></div>
<p>There is a helper function available to compare different strategies:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> InformedDEHelpers, PyPlot
<span class="pl-c1">analyze</span>(f, mi, ma, [
	(<span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>, {<span class="pl-c1">:default</span>},{}),
	(<span class="pl-s"><span class="pl-pds">"</span>pred first<span class="pl-pds">"</span></span>, {predictor, <span class="pl-c1">:default</span>}, {}),
	(<span class="pl-s"><span class="pl-pds">"</span>pred last<span class="pl-pds">"</span></span>, {<span class="pl-c1">:default</span>, predictor}, {}),
	(<span class="pl-s"><span class="pl-pds">"</span>pred only<span class="pl-pds">"</span></span>, {predictor}, {}),
	(<span class="pl-s"><span class="pl-pds">"</span>tryall<span class="pl-pds">"</span></span>, {predictor, <span class="pl-c1">:default</span>}, {(<span class="pl-c1">:tryallpredictors</span>,<span class="pl-c1">true</span>)})
])</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="example.png"><img src="example.png" alt="" style="max-width:100%;"></a></p>
<h2><a id="user-content-news" class="anchor" aria-hidden="true" href="#news"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>News</h2>
<h4><a id="user-content-master" class="anchor" aria-hidden="true" href="#master"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>master</h4>
<ul>
<li>fixed broken rounding and clamping</li>
</ul>
</article></div>