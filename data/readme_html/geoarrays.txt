<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://evetion.github.io/GeoArrays.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a> <a href="https://evetion.github.io/GeoArrays.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://github.com/evetion/GeoArrays.jl/actions/workflows/CI.yml"><img src="https://github.com/evetion/GeoArrays.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/evetion/GeoArrays.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/eee8f20cc0c1a993870a2396bfc2d656b8799c349a8f06c4e7515464ec51abf1/68747470733a2f2f636f6465636f762e696f2f67682f65766574696f6e2f47656f4172726179732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d70587977545243667451" alt="codecov" data-canonical-src="https://codecov.io/gh/evetion/GeoArrays.jl/branch/master/graph/badge.svg?token=pXywTRCftQ" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-geoarrays" class="anchor" aria-hidden="true" href="#geoarrays"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GeoArrays</h1>
<p dir="auto">Simple geographical raster interaction built on top of <a href="https://github.com/yeesian/ArchGDAL.jl/">ArchGDAL</a>, <a href="https://github.com/JuliaGeo/GDAL.jl">GDAL</a> and <a href="https://github.com/FugroRoames/CoordinateTransformations.jl">CoordinateTransformations</a>.</p>
<p dir="auto">A GeoArray is an AbstractArray, an AffineMap for calculating coordinates based on the axes and a CRS definition to interpret these coordinates into in the real world. It's three dimensional and can be seen as a stack (3D) of 2D geospatial rasters (bands), the dimensions are :x, :y, and :bands. The AffineMap and CRS (coordinates) only operate on the :x and :y dimensions.</p>
<p dir="auto">This packages takes its inspiration from Python's <a href="https://github.com/mapbox/rasterio">rasterio</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="(v1.8) pkg&gt; add GeoArrays"><pre>(v1.<span class="pl-c1">8</span>) pkg<span class="pl-k">&gt;</span> add GeoArrays</pre></div>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<h3 dir="auto"><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic Usage</h3>
<p dir="auto">Load the <code>GeoArrays</code> package.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using GeoArrays"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> GeoArrays</pre></div>
<p dir="auto">Read a GeoTIFF file and display its information, i.e. AffineMap and projection (CRS).</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Read TIF file
julia&gt; fn = download(&quot;https://github.com/yeesian/ArchGDALDatasets/blob/master/data/utmsmall.tif?raw=true&quot;)
julia&gt; geoarray = GeoArrays.read(fn)
100x100x1 Array{UInt8,3} with AffineMap([60.0 0.0; 0.0 -60.0], [440720.0, 3.75132e6]) and CRS PROJCS[&quot;NAD27 / UTM zone 11N&quot;...

# Affinemap containing offset and scaling
julia&gt; geoarray.f
AffineMap([60.0 0.0; 0.0 -60.0], [440720.0, 3.75132e6])

# WKT projection string
julia&gt; geoarray.crs
GeoFormatTypes.WellKnownText{GeoFormatTypes.CRS}(GeoFormatTypes.CRS(), &quot;PROJCS[\&quot;NAD27 / UTM zone 11N\&quot;,GEOGCS[\&quot;NAD27\&quot;,DATUM[\&quot;North_American_Datum_1927\&quot;,SPHEROID[\&quot;Clarke 1866\&quot;,6378206.4,294.978698213898,AUTHORITY[\&quot;EPSG\&quot;,\&quot;7008\&quot;]],AUTHORITY[\&quot;EPSG\&quot;,\&quot;6267\&quot;]],PRIMEM[\&quot;Greenwich\&quot;,0],UNIT[\&quot;degree\&quot;,0.0174532925199433,AUTHORITY[\&quot;EPSG\&quot;,\&quot;9122\&quot;]],AUTHORITY[\&quot;EPSG\&quot;,\&quot;4267\&quot;]],PROJECTION[\&quot;Transverse_Mercator\&quot;],PARAMETER[\&quot;latitude_of_origin\&quot;,0],PARAMETER[\&quot;central_meridian\&quot;,-117],PARAMETER[\&quot;scale_factor\&quot;,0.9996],PARAMETER[\&quot;false_easting\&quot;,500000],PARAMETER[\&quot;false_northing\&quot;,0],UNIT[\&quot;metre\&quot;,1,AUTHORITY[\&quot;EPSG\&quot;,\&quot;9001\&quot;]],AXIS[\&quot;Easting\&quot;,EAST],AXIS[\&quot;Northing\&quot;,NORTH],AUTHORITY[\&quot;EPSG\&quot;,\&quot;26711\&quot;]]&quot;)"><pre><span class="pl-c"><span class="pl-c">#</span> Read TIF file</span>
julia<span class="pl-k">&gt;</span> fn <span class="pl-k">=</span> <span class="pl-c1">download</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/yeesian/ArchGDALDatasets/blob/master/data/utmsmall.tif?raw=true<span class="pl-pds">"</span></span>)
julia<span class="pl-k">&gt;</span> geoarray <span class="pl-k">=</span> GeoArrays<span class="pl-k">.</span><span class="pl-c1">read</span>(fn)
<span class="pl-c1">100</span>x100x1 Array{UInt8,<span class="pl-c1">3</span>} with <span class="pl-c1">AffineMap</span>([<span class="pl-c1">60.0</span> <span class="pl-c1">0.0</span>; <span class="pl-c1">0.0</span> <span class="pl-k">-</span><span class="pl-c1">60.0</span>], [<span class="pl-c1">440720.0</span>, <span class="pl-c1">3.75132e6</span>]) and CRS PROJCS[<span class="pl-s"><span class="pl-pds">"</span>NAD27 / UTM zone 11N<span class="pl-pds">"</span></span><span class="pl-k">...</span>

<span class="pl-c"><span class="pl-c">#</span> Affinemap containing offset and scaling</span>
julia<span class="pl-k">&gt;</span> geoarray<span class="pl-k">.</span>f
<span class="pl-c1">AffineMap</span>([<span class="pl-c1">60.0</span> <span class="pl-c1">0.0</span>; <span class="pl-c1">0.0</span> <span class="pl-k">-</span><span class="pl-c1">60.0</span>], [<span class="pl-c1">440720.0</span>, <span class="pl-c1">3.75132e6</span>])

<span class="pl-c"><span class="pl-c">#</span> WKT projection string</span>
julia<span class="pl-k">&gt;</span> geoarray<span class="pl-k">.</span>crs
GeoFormatTypes<span class="pl-k">.</span><span class="pl-c1">WellKnownText</span><span class="pl-c1">{GeoFormatTypes.CRS}</span>(GeoFormatTypes<span class="pl-k">.</span><span class="pl-c1">CRS</span>(), <span class="pl-s"><span class="pl-pds">"</span>PROJCS[<span class="pl-cce">\"</span>NAD27 / UTM zone 11N<span class="pl-cce">\"</span>,GEOGCS[<span class="pl-cce">\"</span>NAD27<span class="pl-cce">\"</span>,DATUM[<span class="pl-cce">\"</span>North_American_Datum_1927<span class="pl-cce">\"</span>,SPHEROID[<span class="pl-cce">\"</span>Clarke 1866<span class="pl-cce">\"</span>,6378206.4,294.978698213898,AUTHORITY[<span class="pl-cce">\"</span>EPSG<span class="pl-cce">\"</span>,<span class="pl-cce">\"</span>7008<span class="pl-cce">\"</span>]],AUTHORITY[<span class="pl-cce">\"</span>EPSG<span class="pl-cce">\"</span>,<span class="pl-cce">\"</span>6267<span class="pl-cce">\"</span>]],PRIMEM[<span class="pl-cce">\"</span>Greenwich<span class="pl-cce">\"</span>,0],UNIT[<span class="pl-cce">\"</span>degree<span class="pl-cce">\"</span>,0.0174532925199433,AUTHORITY[<span class="pl-cce">\"</span>EPSG<span class="pl-cce">\"</span>,<span class="pl-cce">\"</span>9122<span class="pl-cce">\"</span>]],AUTHORITY[<span class="pl-cce">\"</span>EPSG<span class="pl-cce">\"</span>,<span class="pl-cce">\"</span>4267<span class="pl-cce">\"</span>]],PROJECTION[<span class="pl-cce">\"</span>Transverse_Mercator<span class="pl-cce">\"</span>],PARAMETER[<span class="pl-cce">\"</span>latitude_of_origin<span class="pl-cce">\"</span>,0],PARAMETER[<span class="pl-cce">\"</span>central_meridian<span class="pl-cce">\"</span>,-117],PARAMETER[<span class="pl-cce">\"</span>scale_factor<span class="pl-cce">\"</span>,0.9996],PARAMETER[<span class="pl-cce">\"</span>false_easting<span class="pl-cce">\"</span>,500000],PARAMETER[<span class="pl-cce">\"</span>false_northing<span class="pl-cce">\"</span>,0],UNIT[<span class="pl-cce">\"</span>metre<span class="pl-cce">\"</span>,1,AUTHORITY[<span class="pl-cce">\"</span>EPSG<span class="pl-cce">\"</span>,<span class="pl-cce">\"</span>9001<span class="pl-cce">\"</span>]],AXIS[<span class="pl-cce">\"</span>Easting<span class="pl-cce">\"</span>,EAST],AXIS[<span class="pl-cce">\"</span>Northing<span class="pl-cce">\"</span>,NORTH],AUTHORITY[<span class="pl-cce">\"</span>EPSG<span class="pl-cce">\"</span>,<span class="pl-cce">\"</span>26711<span class="pl-cce">\"</span>]]<span class="pl-pds">"</span></span>)</pre></div>
<h3 dir="auto"><a id="user-content-writing-to-geotiff" class="anchor" aria-hidden="true" href="#writing-to-geotiff"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Writing to GeoTIFF</h3>
<p dir="auto">Create a random <code>GeoArray</code> and write it to a GeoTIFF file.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Create, reference and write a TIFF
julia&gt; ga = GeoArray(rand(100,200))
julia&gt; bbox!(ga, (min_x=2., min_y=51., max_x=5., max_y=54.))  # roughly the Netherlands
julia&gt; epsg!(ga, 4326)  # in WGS84
julia&gt; GeoArrays.write(&quot;test.tif&quot;, ga)
# Or write it with compression and tiling
julia&gt; GeoArrays.write(&quot;test_compressed.tif&quot;, ga; options=Dict(&quot;TILED&quot;=&gt;&quot;YES&quot;, &quot;COMPRESS&quot;=&gt;&quot;ZSTD&quot;))"><pre><span class="pl-c"><span class="pl-c">#</span> Create, reference and write a TIFF</span>
julia<span class="pl-k">&gt;</span> ga <span class="pl-k">=</span> <span class="pl-c1">GeoArray</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">100</span>,<span class="pl-c1">200</span>))
julia<span class="pl-k">&gt;</span> <span class="pl-c1">bbox!</span>(ga, (min_x<span class="pl-k">=</span><span class="pl-c1">2.</span>, min_y<span class="pl-k">=</span><span class="pl-c1">51.</span>, max_x<span class="pl-k">=</span><span class="pl-c1">5.</span>, max_y<span class="pl-k">=</span><span class="pl-c1">54.</span>))  <span class="pl-c"><span class="pl-c">#</span> roughly the Netherlands</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">epsg!</span>(ga, <span class="pl-c1">4326</span>)  <span class="pl-c"><span class="pl-c">#</span> in WGS84</span>
julia<span class="pl-k">&gt;</span> GeoArrays<span class="pl-k">.</span><span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">"</span>test.tif<span class="pl-pds">"</span></span>, ga)
<span class="pl-c"><span class="pl-c">#</span> Or write it with compression and tiling</span>
julia<span class="pl-k">&gt;</span> GeoArrays<span class="pl-k">.</span><span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">"</span>test_compressed.tif<span class="pl-pds">"</span></span>, ga; options<span class="pl-k">=</span><span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>TILED<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>YES<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>COMPRESS<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>ZSTD<span class="pl-pds">"</span></span>))</pre></div>
<h3 dir="auto"><a id="user-content-streaming-support" class="anchor" aria-hidden="true" href="#streaming-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Streaming support</h3>
<p dir="auto">The package supports streaming reading.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Read in 39774x60559x1 raster (AHN3), but without masking (missing) support
julia&gt; @time ga = GeoArrays.read(fn, masked=false)
  0.001917 seconds (46 allocations: 2.938 KiB)
39774x60559x1 ArchGDAL.RasterDataset{Float32,ArchGDAL.IDataset} with AffineMap([1.0433425614165472e-6 0.0; 0.0 -1.0433425614165472e-6], [0.8932098305563291, 0.11903776654646055]) and CRS PROJCS[&quot;Amersfoort / RD New&quot;,GEOGCS[&quot;Amersfoort&quot;,DATUM[&quot;Amersfoort&quot;,SPHEROID[&quot;Bessel 1841&quot;,6377397.155,299.1528128,AUTHORITY[&quot;EPSG&quot;,&quot;7004&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6289&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;4289&quot;]],PROJECTION[&quot;Oblique_Stereographic&quot;],PARAMETER[&quot;latitude_of_origin&quot;,52.1561605555556],PARAMETER[&quot;central_meridian&quot;,5.38763888888889],PARAMETER[&quot;scale_factor&quot;,0.9999079],PARAMETER[&quot;false_easting&quot;,155000],PARAMETER[&quot;false_northing&quot;,463000],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH],AUTHORITY[&quot;EPSG&quot;,&quot;28992&quot;]]"><pre><span class="pl-c"><span class="pl-c">#</span> Read in 39774x60559x1 raster (AHN3), but without masking (missing) support</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">@time</span> ga <span class="pl-k">=</span> GeoArrays<span class="pl-k">.</span><span class="pl-c1">read</span>(fn, masked<span class="pl-k">=</span><span class="pl-c1">false</span>)
  <span class="pl-c1">0.001917</span> seconds (<span class="pl-c1">46</span> allocations<span class="pl-k">:</span> <span class="pl-c1">2.938</span> KiB)
<span class="pl-c1">39774</span>x60559x1 ArchGDAL<span class="pl-k">.</span>RasterDataset{Float32,ArchGDAL<span class="pl-k">.</span>IDataset} with <span class="pl-c1">AffineMap</span>([<span class="pl-c1">1.0433425614165472e-6</span> <span class="pl-c1">0.0</span>; <span class="pl-c1">0.0</span> <span class="pl-k">-</span><span class="pl-c1">1.0433425614165472e-6</span>], [<span class="pl-c1">0.8932098305563291</span>, <span class="pl-c1">0.11903776654646055</span>]) and CRS PROJCS[<span class="pl-s"><span class="pl-pds">"</span>Amersfoort / RD New<span class="pl-pds">"</span></span>,GEOGCS[<span class="pl-s"><span class="pl-pds">"</span>Amersfoort<span class="pl-pds">"</span></span>,DATUM[<span class="pl-s"><span class="pl-pds">"</span>Amersfoort<span class="pl-pds">"</span></span>,SPHEROID[<span class="pl-s"><span class="pl-pds">"</span>Bessel 1841<span class="pl-pds">"</span></span>,<span class="pl-c1">6377397.155</span>,<span class="pl-c1">299.1528128</span>,AUTHORITY[<span class="pl-s"><span class="pl-pds">"</span>EPSG<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>7004<span class="pl-pds">"</span></span>]],AUTHORITY[<span class="pl-s"><span class="pl-pds">"</span>EPSG<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>6289<span class="pl-pds">"</span></span>]],PRIMEM[<span class="pl-s"><span class="pl-pds">"</span>Greenwich<span class="pl-pds">"</span></span>,<span class="pl-c1">0</span>,AUTHORITY[<span class="pl-s"><span class="pl-pds">"</span>EPSG<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>8901<span class="pl-pds">"</span></span>]],UNIT[<span class="pl-s"><span class="pl-pds">"</span>degree<span class="pl-pds">"</span></span>,<span class="pl-c1">0.0174532925199433</span>,AUTHORITY[<span class="pl-s"><span class="pl-pds">"</span>EPSG<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>9122<span class="pl-pds">"</span></span>]],AUTHORITY[<span class="pl-s"><span class="pl-pds">"</span>EPSG<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>4289<span class="pl-pds">"</span></span>]],PROJECTION[<span class="pl-s"><span class="pl-pds">"</span>Oblique_Stereographic<span class="pl-pds">"</span></span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>latitude_of_origin<span class="pl-pds">"</span></span>,<span class="pl-c1">52.1561605555556</span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>central_meridian<span class="pl-pds">"</span></span>,<span class="pl-c1">5.38763888888889</span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>scale_factor<span class="pl-pds">"</span></span>,<span class="pl-c1">0.9999079</span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>false_easting<span class="pl-pds">"</span></span>,<span class="pl-c1">155000</span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>false_northing<span class="pl-pds">"</span></span>,<span class="pl-c1">463000</span>],UNIT[<span class="pl-s"><span class="pl-pds">"</span>metre<span class="pl-pds">"</span></span>,<span class="pl-c1">1</span>,AUTHORITY[<span class="pl-s"><span class="pl-pds">"</span>EPSG<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>9001<span class="pl-pds">"</span></span>]],AXIS[<span class="pl-s"><span class="pl-pds">"</span>Easting<span class="pl-pds">"</span></span>,EAST],AXIS[<span class="pl-s"><span class="pl-pds">"</span>Northing<span class="pl-pds">"</span></span>,NORTH],AUTHORITY[<span class="pl-s"><span class="pl-pds">"</span>EPSG<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>28992<span class="pl-pds">"</span></span>]]</pre></div>
<h3 dir="auto"><a id="user-content-reading-bands" class="anchor" aria-hidden="true" href="#reading-bands"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reading bands</h3>
<p dir="auto">GeoTIFFs can be large, with several bands, one can read.</p>
<p dir="auto">When working with large rasters, e.g. with satellite images that can be GB in size, it is useful to be able to read only one band (or a selection of them) to <code>GeoArray</code>. When using <code>read</code>, one can specify the band.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Get file
julia&gt; fn = download(&quot;https://github.com/yeesian/ArchGDALDatasets/blob/master/pyrasterio/RGB.byte.tif?raw=true&quot;)

# Read band 2
julia&gt; ga_band = GeoArrays.read(fn, masked=false, band=2)
791x718x1 Array{UInt8, 3} with AffineMap([300.0379266750948 0.0; 0.0 -300.041782729805], [101985.0, 2.826915e6]) and CRS PROJCS[&quot;UTM Zone 18, Northern Hemisphere&quot;,GEOGCS[&quot;Unknown datum based upon the WGS 84 ellipsoid&quot;,DATUM[&quot;Not_specified_based_on_WGS_84_spheroid&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]]],PRIMEM[&quot;Greenwich&quot;,0],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-75],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH]]"><pre><span class="pl-c"><span class="pl-c">#</span> Get file</span>
julia<span class="pl-k">&gt;</span> fn <span class="pl-k">=</span> <span class="pl-c1">download</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/yeesian/ArchGDALDatasets/blob/master/pyrasterio/RGB.byte.tif?raw=true<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Read band 2</span>
julia<span class="pl-k">&gt;</span> ga_band <span class="pl-k">=</span> GeoArrays<span class="pl-k">.</span><span class="pl-c1">read</span>(fn, masked<span class="pl-k">=</span><span class="pl-c1">false</span>, band<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">791</span>x718x1 Array{UInt8, <span class="pl-c1">3</span>} with <span class="pl-c1">AffineMap</span>([<span class="pl-c1">300.0379266750948</span> <span class="pl-c1">0.0</span>; <span class="pl-c1">0.0</span> <span class="pl-k">-</span><span class="pl-c1">300.041782729805</span>], [<span class="pl-c1">101985.0</span>, <span class="pl-c1">2.826915e6</span>]) and CRS PROJCS[<span class="pl-s"><span class="pl-pds">"</span>UTM Zone 18, Northern Hemisphere<span class="pl-pds">"</span></span>,GEOGCS[<span class="pl-s"><span class="pl-pds">"</span>Unknown datum based upon the WGS 84 ellipsoid<span class="pl-pds">"</span></span>,DATUM[<span class="pl-s"><span class="pl-pds">"</span>Not_specified_based_on_WGS_84_spheroid<span class="pl-pds">"</span></span>,SPHEROID[<span class="pl-s"><span class="pl-pds">"</span>WGS 84<span class="pl-pds">"</span></span>,<span class="pl-c1">6378137</span>,<span class="pl-c1">298.257223563</span>,AUTHORITY[<span class="pl-s"><span class="pl-pds">"</span>EPSG<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>7030<span class="pl-pds">"</span></span>]]],PRIMEM[<span class="pl-s"><span class="pl-pds">"</span>Greenwich<span class="pl-pds">"</span></span>,<span class="pl-c1">0</span>],UNIT[<span class="pl-s"><span class="pl-pds">"</span>degree<span class="pl-pds">"</span></span>,<span class="pl-c1">0.0174532925199433</span>,AUTHORITY[<span class="pl-s"><span class="pl-pds">"</span>EPSG<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>9122<span class="pl-pds">"</span></span>]]],PROJECTION[<span class="pl-s"><span class="pl-pds">"</span>Transverse_Mercator<span class="pl-pds">"</span></span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>latitude_of_origin<span class="pl-pds">"</span></span>,<span class="pl-c1">0</span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>central_meridian<span class="pl-pds">"</span></span>,<span class="pl-k">-</span><span class="pl-c1">75</span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>scale_factor<span class="pl-pds">"</span></span>,<span class="pl-c1">0.9996</span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>false_easting<span class="pl-pds">"</span></span>,<span class="pl-c1">500000</span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>false_northing<span class="pl-pds">"</span></span>,<span class="pl-c1">0</span>],UNIT[<span class="pl-s"><span class="pl-pds">"</span>metre<span class="pl-pds">"</span></span>,<span class="pl-c1">1</span>,AUTHORITY[<span class="pl-s"><span class="pl-pds">"</span>EPSG<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>9001<span class="pl-pds">"</span></span>]],AXIS[<span class="pl-s"><span class="pl-pds">"</span>Easting<span class="pl-pds">"</span></span>,EAST],AXIS[<span class="pl-s"><span class="pl-pds">"</span>Northing<span class="pl-pds">"</span></span>,NORTH]]</pre></div>
<p dir="auto">In case there is missing data, the type will be a <code>Union{Missing, T}</code>. To convert to a GeoArray without <code>missing</code>, you can call <code>coalesce(ga, value_to_replace_missing)</code>.</p>
<h3 dir="auto"><a id="user-content-reading-netcdfs" class="anchor" aria-hidden="true" href="#reading-netcdfs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reading NetCDFs</h3>
<p dir="auto">GeoArrays uses ArchGDAL.readraster to open geo raster datasets, and therefor supports reading formats other than geotiffs</p>
<p dir="auto">To read a netcdf, the file name must include the prefix <code>NETCDF:</code> and the suffix <code>:var</code>, where var is the name of the NetCDF variable to be opened</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Get file
julia&gt; fn = download(&quot;https://github.com/OSGeo/gdal/raw/master/autotest/gdrivers/data/netcdf/sentinel5p_fake.nc&quot;)

# variable to read 
julia&gt; var = &quot;my_var&quot;;
julia&gt; ga_nc = GeoArrays.read(&quot;NETCDF:$fn:$var&quot;, masked=false)
61x89x1 ArchGDAL.RasterDataset{Float32, ArchGDAL.IDataset} with AffineMap([1.0 0.0; 0.0 1.0], [0.0, 0.0]) and undefined CRS"><pre><span class="pl-c"><span class="pl-c">#</span> Get file</span>
julia<span class="pl-k">&gt;</span> fn <span class="pl-k">=</span> <span class="pl-c1">download</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/OSGeo/gdal/raw/master/autotest/gdrivers/data/netcdf/sentinel5p_fake.nc<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> variable to read </span>
julia<span class="pl-k">&gt;</span> var <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>my_var<span class="pl-pds">"</span></span>;
julia<span class="pl-k">&gt;</span> ga_nc <span class="pl-k">=</span> GeoArrays<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>NETCDF:<span class="pl-v">$fn</span>:<span class="pl-v">$var</span><span class="pl-pds">"</span></span>, masked<span class="pl-k">=</span><span class="pl-c1">false</span>)
<span class="pl-c1">61</span>x89x1 ArchGDAL<span class="pl-k">.</span>RasterDataset{Float32, ArchGDAL<span class="pl-k">.</span>IDataset} with <span class="pl-c1">AffineMap</span>([<span class="pl-c1">1.0</span> <span class="pl-c1">0.0</span>; <span class="pl-c1">0.0</span> <span class="pl-c1">1.0</span>], [<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>]) and undefined CRS</pre></div>
<h3 dir="auto"><a id="user-content-using-coordinates" class="anchor" aria-hidden="true" href="#using-coordinates"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using coordinates</h3>
<p dir="auto"><code>GeoArray</code>s have geographical coordinates for all array elements (pixels). They can be retrieved with the <code>GeoArrays.coords</code> function.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Find coordinates by index
julia&gt; GeoArrays.coords(geoarray, (1,1))
2-element StaticArrays.SArray{Tuple{2},Float64,1,2}:
 440720.0
      3.75132e6"><pre><span class="pl-c"><span class="pl-c">#</span> Find coordinates by index</span>
julia<span class="pl-k">&gt;</span> GeoArrays<span class="pl-k">.</span><span class="pl-c1">coords</span>(geoarray, (<span class="pl-c1">1</span>,<span class="pl-c1">1</span>))
<span class="pl-c1">2</span><span class="pl-k">-</span>element StaticArrays<span class="pl-k">.</span>SArray{Tuple{<span class="pl-c1">2</span>},Float64,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">440720.0</span>
      <span class="pl-c1">3.75132e6</span></pre></div>
<p dir="auto">All coordinates (tuples) are obtained as generator when omitting the index parameter.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Find all coordinates
julia&gt; collect(GeoArrays.coords(geoarray))
101×101 Matrix{StaticArraysCore.SVector{2, Float64}}:
 [440720.0, 3.75132e6]  [440720.0, 3.75126e6]  [440720.0, 3.7512e6] ...
 ..."><pre><span class="pl-c"><span class="pl-c">#</span> Find all coordinates</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">collect</span>(GeoArrays<span class="pl-k">.</span><span class="pl-c1">coords</span>(geoarray))
<span class="pl-c1">101</span><span class="pl-k">×</span><span class="pl-c1">101</span> Matrix{StaticArraysCore<span class="pl-k">.</span>SVector{<span class="pl-c1">2</span>, Float64}}<span class="pl-k">:</span>
 [<span class="pl-c1">440720.0</span>, <span class="pl-c1">3.75132e6</span>]  [<span class="pl-c1">440720.0</span>, <span class="pl-c1">3.75126e6</span>]  [<span class="pl-c1">440720.0</span>, <span class="pl-c1">3.7512e6</span>] <span class="pl-k">...</span>
 <span class="pl-k">...</span></pre></div>
<p dir="auto">Similarly, one can find the coordinates ranges of a GeoArray</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; x, y = GeoArrays.ranges(geoarray)
(440750.0:60.0:446690.0, 3.75129e6:-60.0:3.74535e6)"><pre>julia<span class="pl-k">&gt;</span> x, y <span class="pl-k">=</span> GeoArrays<span class="pl-k">.</span><span class="pl-c1">ranges</span>(geoarray)
(<span class="pl-c1">440750.0</span><span class="pl-k">:</span><span class="pl-c1">60.0</span><span class="pl-k">:</span><span class="pl-c1">446690.0</span>, <span class="pl-c1">3.75129e6</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">60.0</span><span class="pl-k">:</span><span class="pl-c1">3.74535e6</span>)</pre></div>
<p dir="auto">The operation can be reversed, i.e. row and column index can be computed from coordinates with the <code>indices</code> function.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Find index by coordinates
julia&gt; indices(geoarray, [440720.0, 3.75132e6])
CartesianIndex(1, 1)"><pre><span class="pl-c"><span class="pl-c">#</span> Find index by coordinates</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">indices</span>(geoarray, [<span class="pl-c1">440720.0</span>, <span class="pl-c1">3.75132e6</span>])
<span class="pl-c1">CartesianIndex</span>(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>)</pre></div>
<h3 dir="auto"><a id="user-content-manipulation" class="anchor" aria-hidden="true" href="#manipulation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Manipulation</h3>
<p dir="auto">Basic <code>GeoArray</code> manipulation is implemented, e.g. translation.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Translate complete raster by x + 100
julia&gt; trans = Translation(100, 0)
julia&gt; compose!(ga, trans)"><pre><span class="pl-c"><span class="pl-c">#</span> Translate complete raster by x + 100</span>
julia<span class="pl-k">&gt;</span> trans <span class="pl-k">=</span> <span class="pl-c1">Translation</span>(<span class="pl-c1">100</span>, <span class="pl-c1">0</span>)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">compose!</span>(ga, trans)</pre></div>
<p dir="auto">When GeoArrays have the same dimensions, AffineMap and CRS, addition, subtraction, multiplication and division can be used.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Math with GeoArrays (- + * /)
julia&gt; GeoArray(rand(5,5,1)) - GeoArray(rand(5,5,1))
5x5x1 Array{Float64,3} with AffineMap([1.0 0.0; 0.0 1.0], [0.0, 0.0]) and undefined CRS"><pre><span class="pl-c"><span class="pl-c">#</span> Math with GeoArrays (- + * /)</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">GeoArray</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">1</span>)) <span class="pl-k">-</span> <span class="pl-c1">GeoArray</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">1</span>))
<span class="pl-c1">5</span>x5x1 Array{Float64,<span class="pl-c1">3</span>} with <span class="pl-c1">AffineMap</span>([<span class="pl-c1">1.0</span> <span class="pl-c1">0.0</span>; <span class="pl-c1">0.0</span> <span class="pl-c1">1.0</span>], [<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>]) and undefined CRS</pre></div>
<p dir="auto">One can also warp an array, using GDAL behind the scenes.
For example, we can vertically transform from the ellipsoid
to the EGM2008 geoid using EPSG code 3855.
Note that the underlying PROJ library needs to find the geoidgrids,
so if they're not available locally, one needs to set <code>ENV["PROJ_NETWORK"] = "ON"</code>
as early as possible, ideally before loading GeoArrays.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ga = GeoArray(zeros((360, 180)))
bbox!(ga, (min_x=-180, min_y=-90, max_x=180, max_y=90))
crs!(ga, GeoFormatTypes.EPSG(4979))  # WGS83 in 3D (reference to ellipsoid)
ga2 = GeoArrays.warp(ga, Dict(&quot;t_srs&quot; =&gt; &quot;EPSG:4326+3855&quot;))"><pre>ga <span class="pl-k">=</span> <span class="pl-c1">GeoArray</span>(<span class="pl-c1">zeros</span>((<span class="pl-c1">360</span>, <span class="pl-c1">180</span>)))
<span class="pl-c1">bbox!</span>(ga, (min_x<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">180</span>, min_y<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">90</span>, max_x<span class="pl-k">=</span><span class="pl-c1">180</span>, max_y<span class="pl-k">=</span><span class="pl-c1">90</span>))
<span class="pl-c1">crs!</span>(ga, GeoFormatTypes<span class="pl-k">.</span><span class="pl-c1">EPSG</span>(<span class="pl-c1">4979</span>))  <span class="pl-c"><span class="pl-c">#</span> WGS83 in 3D (reference to ellipsoid)</span>
ga2 <span class="pl-k">=</span> GeoArrays<span class="pl-k">.</span><span class="pl-c1">warp</span>(ga, <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>t_srs<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>EPSG:4326+3855<span class="pl-pds">"</span></span>))</pre></div>
<h3 dir="auto"><a id="user-content-nodata-filling" class="anchor" aria-hidden="true" href="#nodata-filling"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Nodata filling</h3>
<p dir="auto">GeoArrays with missing data can be filled with the <a href="@ref"><code>fill!</code></a> function.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using GeoStatsSolvers  # or any estimation solver from the GeoStats ecosystem
julia&gt; ga = GeoArray(Array{Union{Missing, Float64}}(rand(5, 1)))
julia&gt; ga.A[2,1] = missing
[:, :, 1] =
 0.6760718768442127
  missing
 0.852882193026649
 0.7137410453351622
 0.5949409082233854
julia&gt; GeoArrays.fill!(ga, IDW(:band =&gt; (neighbors=3,)))  # band is the hardcoded variable
[:, :, 1] =
 0.6760718768442127
 0.7543298370153771
 0.852882193026649
 0.7137410453351622
 0.5949409082233854"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> GeoStatsSolvers  <span class="pl-c"><span class="pl-c">#</span> or any estimation solver from the GeoStats ecosystem</span>
julia<span class="pl-k">&gt;</span> ga <span class="pl-k">=</span> <span class="pl-c1">GeoArray</span>(<span class="pl-c1">Array</span><span class="pl-c1">{Union{Missing, Float64}}</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">5</span>, <span class="pl-c1">1</span>)))
julia<span class="pl-k">&gt;</span> ga<span class="pl-k">.</span>A[<span class="pl-c1">2</span>,<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">missing</span>
[:, :, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0.6760718768442127</span>
  <span class="pl-c1">missing</span>
 <span class="pl-c1">0.852882193026649</span>
 <span class="pl-c1">0.7137410453351622</span>
 <span class="pl-c1">0.5949409082233854</span>
julia<span class="pl-k">&gt;</span> GeoArrays<span class="pl-k">.</span><span class="pl-c1">fill!</span>(ga, <span class="pl-c1">IDW</span>(<span class="pl-c1">:band</span> <span class="pl-k">=&gt;</span> (neighbors<span class="pl-k">=</span><span class="pl-c1">3</span>,)))  <span class="pl-c"><span class="pl-c">#</span> band is the hardcoded variable</span>
[:, :, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0.6760718768442127</span>
 <span class="pl-c1">0.7543298370153771</span>
 <span class="pl-c1">0.852882193026649</span>
 <span class="pl-c1">0.7137410453351622</span>
 <span class="pl-c1">0.5949409082233854</span></pre></div>
<h3 dir="auto"><a id="user-content-plotting" class="anchor" aria-hidden="true" href="#plotting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plotting</h3>
<p dir="auto">Individual bands from a GeoArray can be plotted with the <code>plot</code> function. By default the first band is used.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Plot a GeoArray
julia&gt; using Plots
julia&gt; fn = download(&quot;https://github.com/yeesian/ArchGDALDatasets/blob/master/pyrasterio/RGB.byte.tif?raw=true&quot;)
julia&gt; ga = GeoArrays.read(fn)
julia&gt; plot(ga)

# or plot a band other than the first one
julia&gt; plot(ga, band=2)"><pre><span class="pl-c"><span class="pl-c">#</span> Plot a GeoArray</span>
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Plots
julia<span class="pl-k">&gt;</span> fn <span class="pl-k">=</span> <span class="pl-c1">download</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/yeesian/ArchGDALDatasets/blob/master/pyrasterio/RGB.byte.tif?raw=true<span class="pl-pds">"</span></span>)
julia<span class="pl-k">&gt;</span> ga <span class="pl-k">=</span> GeoArrays<span class="pl-k">.</span><span class="pl-c1">read</span>(fn)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(ga)

<span class="pl-c"><span class="pl-c">#</span> or plot a band other than the first one</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(ga, band<span class="pl-k">=</span><span class="pl-c1">2</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/img/RGB.byte.png"><img src="docs/img/RGB.byte.png" alt="example plot" style="max-width: 100%;"></a></p>
<p dir="auto">Note that for larger GeoArrays, only a sample of the data is plotted for performance.
By default the sample size is twice figure size. You can control this factor by calling <code>plot(ga, scalefactor=2)</code>,
where higher scalefactor yields higher sizes, up to the original GeoArray size.</p>
<h3 dir="auto"><a id="user-content-subsetting-arrays" class="anchor" aria-hidden="true" href="#subsetting-arrays"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Subsetting arrays</h3>
<p dir="auto">GeoArrays can be subset by row, column and band using the array subsetting notation, e.g. <code>ga[100:200, 200:300, 1:2]</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Get file
julia&gt; fn = download(&quot;https://github.com/yeesian/ArchGDALDatasets/blob/master/pyrasterio/RGB.byte.tif?raw=true&quot;)

# Read the entire file
julia&gt; ga = GeoArrays.read(fn);

julia&gt; ga.f
AffineMap([300.0379266750948 0.0; 0.0 -300.041782729805], [101985.0, 2.826915e6])

julia&gt; ga_sub = ga[200:500,200:400,begin:end]
301x201x3 Array{Union{Missing, UInt8}, 3} with AffineMap([300.0379266750948 0.0; 0.0 -300.041782729805], [161692.54740834387, 2.767206685236769e6]) and CRS PROJCS[&quot;UTM Zone 18, Northern Hemisphere&quot;,GEOGCS[&quot;Unknown datum based upon the WGS 84 ellipsoid&quot;,DATUM[&quot;Not_specified_based_on_WGS_84_spheroid&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]]],PRIMEM[&quot;Greenwich&quot;,0],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-75],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH]]

julia&gt; ga_sub.f
AffineMap([300.0379266750948 0.0; 0.0 -300.041782729805], [161692.54740834387, 2.767206685236769e6])

julia&gt; plot(ga_sub)"><pre><span class="pl-c"><span class="pl-c">#</span> Get file</span>
julia<span class="pl-k">&gt;</span> fn <span class="pl-k">=</span> <span class="pl-c1">download</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/yeesian/ArchGDALDatasets/blob/master/pyrasterio/RGB.byte.tif?raw=true<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Read the entire file</span>
julia<span class="pl-k">&gt;</span> ga <span class="pl-k">=</span> GeoArrays<span class="pl-k">.</span><span class="pl-c1">read</span>(fn);

julia<span class="pl-k">&gt;</span> ga<span class="pl-k">.</span>f
<span class="pl-c1">AffineMap</span>([<span class="pl-c1">300.0379266750948</span> <span class="pl-c1">0.0</span>; <span class="pl-c1">0.0</span> <span class="pl-k">-</span><span class="pl-c1">300.041782729805</span>], [<span class="pl-c1">101985.0</span>, <span class="pl-c1">2.826915e6</span>])

julia<span class="pl-k">&gt;</span> ga_sub <span class="pl-k">=</span> ga[<span class="pl-c1">200</span><span class="pl-k">:</span><span class="pl-c1">500</span>,<span class="pl-c1">200</span><span class="pl-k">:</span><span class="pl-c1">400</span>,<span class="pl-c1">begin</span><span class="pl-k">:</span><span class="pl-c1">end</span>]
<span class="pl-c1">301</span>x201x3 Array{Union{Missing, UInt8}, <span class="pl-c1">3</span>} with <span class="pl-c1">AffineMap</span>([<span class="pl-c1">300.0379266750948</span> <span class="pl-c1">0.0</span>; <span class="pl-c1">0.0</span> <span class="pl-k">-</span><span class="pl-c1">300.041782729805</span>], [<span class="pl-c1">161692.54740834387</span>, <span class="pl-c1">2.767206685236769e6</span>]) and CRS PROJCS[<span class="pl-s"><span class="pl-pds">"</span>UTM Zone 18, Northern Hemisphere<span class="pl-pds">"</span></span>,GEOGCS[<span class="pl-s"><span class="pl-pds">"</span>Unknown datum based upon the WGS 84 ellipsoid<span class="pl-pds">"</span></span>,DATUM[<span class="pl-s"><span class="pl-pds">"</span>Not_specified_based_on_WGS_84_spheroid<span class="pl-pds">"</span></span>,SPHEROID[<span class="pl-s"><span class="pl-pds">"</span>WGS 84<span class="pl-pds">"</span></span>,<span class="pl-c1">6378137</span>,<span class="pl-c1">298.257223563</span>,AUTHORITY[<span class="pl-s"><span class="pl-pds">"</span>EPSG<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>7030<span class="pl-pds">"</span></span>]]],PRIMEM[<span class="pl-s"><span class="pl-pds">"</span>Greenwich<span class="pl-pds">"</span></span>,<span class="pl-c1">0</span>],UNIT[<span class="pl-s"><span class="pl-pds">"</span>degree<span class="pl-pds">"</span></span>,<span class="pl-c1">0.0174532925199433</span>,AUTHORITY[<span class="pl-s"><span class="pl-pds">"</span>EPSG<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>9122<span class="pl-pds">"</span></span>]]],PROJECTION[<span class="pl-s"><span class="pl-pds">"</span>Transverse_Mercator<span class="pl-pds">"</span></span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>latitude_of_origin<span class="pl-pds">"</span></span>,<span class="pl-c1">0</span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>central_meridian<span class="pl-pds">"</span></span>,<span class="pl-k">-</span><span class="pl-c1">75</span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>scale_factor<span class="pl-pds">"</span></span>,<span class="pl-c1">0.9996</span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>false_easting<span class="pl-pds">"</span></span>,<span class="pl-c1">500000</span>],PARAMETER[<span class="pl-s"><span class="pl-pds">"</span>false_northing<span class="pl-pds">"</span></span>,<span class="pl-c1">0</span>],UNIT[<span class="pl-s"><span class="pl-pds">"</span>metre<span class="pl-pds">"</span></span>,<span class="pl-c1">1</span>,AUTHORITY[<span class="pl-s"><span class="pl-pds">"</span>EPSG<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>9001<span class="pl-pds">"</span></span>]],AXIS[<span class="pl-s"><span class="pl-pds">"</span>Easting<span class="pl-pds">"</span></span>,EAST],AXIS[<span class="pl-s"><span class="pl-pds">"</span>Northing<span class="pl-pds">"</span></span>,NORTH]]

julia<span class="pl-k">&gt;</span> ga_sub<span class="pl-k">.</span>f
<span class="pl-c1">AffineMap</span>([<span class="pl-c1">300.0379266750948</span> <span class="pl-c1">0.0</span>; <span class="pl-c1">0.0</span> <span class="pl-k">-</span><span class="pl-c1">300.041782729805</span>], [<span class="pl-c1">161692.54740834387</span>, <span class="pl-c1">2.767206685236769e6</span>])

julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(ga_sub)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/img/RGB.byte.subset.png"><img src="docs/img/RGB.byte.subset.png" alt="example plot" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-profile" class="anchor" aria-hidden="true" href="#profile"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Profile</h3>
<p dir="auto">You can sample the values along a line in a GeoArray with <code>profile(ga, linestring)</code>. The linestring can be any geometry that supports <a href="https://github.com/JuliaGeo/GeoInterface.jl/">GeoInterface.jl</a>.</p>
<h2 dir="auto"><a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Alternatives</h2>
<p dir="auto">GeoArrays.jl was written to quickly save a geospatial Array to disk. Its functionality mimics <code>rasterio</code> in Python. If one requires more features---such as rasterization or zonal stats---which also work on NetCDF files, <a href="https://github.com/rafaqz/Rasters.jl/">Rasters.jl</a> is a good alternative. Its functionality is more like <code>(rio)xarray</code> in Python. <a href="https://github.com/Alexander-Barth/NCDatasets.jl">NCDatasets</a> is a great Julia package if working exclusively with NetCDF files.</p>
</article></div>