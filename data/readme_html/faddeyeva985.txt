<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-faddeyeva985jl" class="anchor" aria-hidden="true" href="#faddeyeva985jl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Faddeyeva985.jl</h1>
<p dir="auto"><a href="https://github.com/markmbaum/Faddeyeva985.jl/actions"><img src="https://github.com/markmbaum/Faddeyeva985.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/markmbaum/Faddeyeva985.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/84d0c72c8b8864a72ac606f28001a88167c20d0a46823df591b80e039eb3c21b/68747470733a2f2f636f6465636f762e696f2f67682f6d61726b6d6261756d2f4661646465796576613938352e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d754f457677663068706d" alt="codecov" data-canonical-src="https://codecov.io/gh/markmbaum/Faddeyeva985.jl/branch/main/graph/badge.svg?token=uOEvwf0hpm" style="max-width: 100%;"></a></p>
<p dir="auto">This package exports a single function approximating the <a href="https://en.wikipedia.org/wiki/Faddeeva_function" rel="nofollow">Faddeyeva Function</a> (sometimes called Faddeeva). <a href="https://dl.acm.org/doi/10.1145/3119904" rel="nofollow">The algorithm</a> was developed by <a href="https://cos.uaeu.ac.ae/en/departments/physics/profile.shtml?email=m.zaghloul" rel="nofollow">Mofreh R. Zaghloul</a> at the United Arab Emirates University and is translated to Julia here.</p>
<p dir="auto">The published description states a relative accuracy better than 4e-5 over wide ranges of inputs. My testing indicates relative error is <em>slightly</em> greater than 4e-5 at some points in the same ranges, but never greater than 5e-5.</p>
<p dir="auto">The Faddeyeva function arises in a handful of physical problems. For example, it is needed to evaluate the <a href="https://en.wikipedia.org/wiki/Voigt_profile" rel="nofollow">Voigt profile</a> for molecular absorption lines in radiative transfer applications/modeling.</p>
<p dir="auto">If you use it for research, cite the original paper:</p>
<ul dir="auto">
<li>Mofreh R. Zaghloul. 2017. Algorithm 985: Simple, Efficient, and Relatively Accurate Approximation for the Evaluation of the Faddeyeva Function. <em>ACM Trans. Math. Softw.</em> 44, 2, Article 22 (October 2017), 9 pages. DOI: <a href="https://doi.org/10.1145/3119904" rel="nofollow">https://doi.org/10.1145/3119904</a></li>
</ul>
<hr>
<p dir="auto">The module can be installed from Julia's general registry with <code>]add Faddeyeva985</code></p>
<p dir="auto">The function has two methods. One takes a complex argument and returns the full complex result.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Faddeyeva985
julia&gt; faddeyeva(1 + 2im)
0.2184926141618737 + 0.09299780803270477im"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Faddeyeva985
julia<span class="pl-k">&gt;</span> <span class="pl-c1">faddeyeva</span>(<span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>)
<span class="pl-c1">0.2184926141618737</span> <span class="pl-k">+</span> <span class="pl-c1">0.09299780803270477im</span></pre></div>
<p dir="auto">The other takes a complex argument split into its parts and returns only the real part of the result. This spares some calculations.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; faddeyeva(1, 2)
0.2184926141618737"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">faddeyeva</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>)
<span class="pl-c1">0.2184926141618737</span></pre></div>
<p dir="auto">A highly accurate version of the function is available through <a href="https://specialfunctions.juliamath.org/stable/functions_list/#SpecialFunctions.erfcx" rel="nofollow"><code>erfcx</code></a> in <a href="https://github.com/JuliaMath/SpecialFunctions.jl">SpecialFunctions.jl</a>, but it's slower.</p>
</article></div>