<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-ricoveralg" class="anchor" aria-hidden="true" href="#ricoveralg"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RICoverAlg</h1>
<p dir="auto"><a href="https://github.com/frankhuettner/RICoverAlg.jl/actions/workflows/test.yml"><img src="https://github.com/frankhuettner/RICoverAlg.jl/actions/workflows/test.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/FrankHuettner/RICoverAlg.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/efd2edf77879279fd79c731bf8e55e3dba58413d74b50cc2c7b1a8566b9bddb8/68747470733a2f2f636f6465636f762e696f2f67682f4672616e6b48756574746e65722f5249436f766572416c672e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/FrankHuettner/RICoverAlg.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This is a Julia repository to compute solutions for a discrecte rational inattention problem (Sims 2003, <a href="https://doi.org/10.1016/S0304-3932(03)00029-1" rel="nofollow">https://doi.org/10.1016/S0304-3932(03)00029-1</a>) using the algorithm suggested by Thomas Cover (1984, <a href="https://doi.org/10.1109/TIT.1984.1056869" rel="nofollow">https://doi.org/10.1109/TIT.1984.1056869</a>).</p>
<h2 dir="auto"><a id="user-content-installing-this-package" class="anchor" aria-hidden="true" href="#installing-this-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installing this Package</h2>
<p dir="auto">To add this package, execute:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import Pkg; Pkg.add(&quot;RICoverAlg&quot;)"><pre class="notranslate"><code>import Pkg; Pkg.add("RICoverAlg")
</code></pre></div>
<p dir="auto">Alternatively, when being in the REPL, change into the package manager by typing <code>]</code> and execute <code>add RICoverAlg</code></p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using RICoverAlg
risolve(UtilTable, g, λ)"><pre class="notranslate"><code>using RICoverAlg
risolve(UtilTable, g, λ)
</code></pre></div>
<p dir="auto">where 'UtilTable' is a payoff matrix: the rows correspond to the actions, the columns to the states, and an entry is the payoff the decision maker gets in the particular combination of state and action;
'g' is vector of prior probabilities over the states;
'λ' is the unit cost of learning.</p>
<h2 dir="auto"><a id="user-content-example-1" class="anchor" aria-hidden="true" href="#example-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example (1)</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import Pkg; Pkg.add(&quot;RICoverAlg&quot;)
using RICoverAlg

UtilTable = [ 0   1   0   1;
              0   0   1   1;
             1/2 1/2 1/2 1/2]
λ = 0.4
g = [0.45, 0.05, 0.05, 0.45]
result = risolve(UtilTable, g, λ)

result[1][1]"><pre class="notranslate"><code>import Pkg; Pkg.add("RICoverAlg")
using RICoverAlg

UtilTable = [ 0   1   0   1;
              0   0   1   1;
             1/2 1/2 1/2 1/2]
λ = 0.4
g = [0.45, 0.05, 0.05, 0.45]
result = risolve(UtilTable, g, λ)

result[1][1]
</code></pre></div>
<p dir="auto">This gives 0.27679620629020496, which is the unconditional probability of chosing action 1.</p>
<ul dir="auto">
<li><a href="https://github.com/frankhuettner/RICoverAlg.jl/blob/main/doc/MM_RBT.jl">Here you find this code in a Pluto notebook</a>.</li>
<li>You can also run the <a href="https://binder.plutojl.org/v0.16.4/open?url=https%253A%252F%252Fraw.githubusercontent.com%252Ffrankhuettner%252FRICoverAlg.jl%252Fmain%252Fdoc%252FMM_RBT.jl" rel="nofollow">notebook on binder</a></li>
</ul>
<h2 dir="auto"><a id="user-content-example-2" class="anchor" aria-hidden="true" href="#example-2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example (2)</h2>
<p dir="auto">The code below creates Figure 1 of Matejka and McKay (2015, <a href="http://dx.doi.org/10.1257/aer.20130047" rel="nofollow">http://dx.doi.org/10.1257/aer.20130047</a>):</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import Pkg; Pkg.add(&quot;RICoverAlg&quot;)
using RICoverAlg

UtilTable = [ 0   1   0   1;
              0   0   1   1;
             1/2 1/2 1/2 1/2]
λ = 0.4
ρs = -1:0.1:1    res = []

results = [risolve(UtilTable, [1+ρ; 1-ρ; 1-ρ; 1+ρ]./4, λ)[1][1] for ρ in ρs]

using Plots
plot(-1:.1:1, res, label=&quot;λ=0.4&quot;, c=:purple, marker=:square, alpha=0.6,
    xlabel=&quot;ρ&quot;, ylabel=&quot;Unconditional Choice Probability&quot;)
plot!(-1:.1:1, 0.5:-0.0125:0.25, label=&quot;λ=0&quot;, c=:black, marker=:o, alpha=0.6)"><pre class="notranslate"><code>import Pkg; Pkg.add("RICoverAlg")
using RICoverAlg

UtilTable = [ 0   1   0   1;
              0   0   1   1;
             1/2 1/2 1/2 1/2]
λ = 0.4
ρs = -1:0.1:1    res = []

results = [risolve(UtilTable, [1+ρ; 1-ρ; 1-ρ; 1+ρ]./4, λ)[1][1] for ρ in ρs]

using Plots
plot(-1:.1:1, res, label="λ=0.4", c=:purple, marker=:square, alpha=0.6,
    xlabel="ρ", ylabel="Unconditional Choice Probability")
plot!(-1:.1:1, 0.5:-0.0125:0.25, label="λ=0", c=:black, marker=:o, alpha=0.6)
</code></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="doc/img/MM_RBT.png"><img src="doc/img/MM_RBT.png" alt="alt text" title="Figure 1 of Majetka and McKay (2015) -- computation done with the package RICoverAlg" style="max-width: 100%;"></a></p>
<ul dir="auto">
<li><a href="https://github.com/frankhuettner/RICoverAlg.jl/blob/main/doc/MM_RBT_plot.jl">Here you find this code in a Pluto notebook</a>.</li>
<li>You can also run the <a href="https://binder.plutojl.org/v0.16.4/open?url=https%253A%252F%252Fraw.githubusercontent.com%252Ffrankhuettner%252FRICoverAlg.jl%252Fmain%252Fdoc%252FMM_RBT_plot.jl" rel="nofollow">notebook on binder</a></li>
</ul>
</article></div>