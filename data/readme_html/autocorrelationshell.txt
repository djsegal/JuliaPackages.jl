<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://ShozenD.github.io/AutocorrelationShell.jl/stable" rel="nofollow"><img src="figures/autocorrelation_shell_logo.png" alt="AutocorrelationShell.jl" style="max-width:100%;"></a></p>
<p><a href="https://github.com/ShozenD/AutocorrelationShell.jl/actions"><img src="https://github.com/ShozenD/AutocorrelationShell.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width:100%;"></a>
<a href="https://gitlab.com/BoundaryValueProblems/autocorrelation-shell/-/commits/master" rel="nofollow"><img src="https://camo.githubusercontent.com/3bf60762919a16e24b0800f561502739f60940f01c2ef56affbe90403034d30d/68747470733a2f2f6769746c61622e636f6d2f426f756e6461727956616c756550726f626c656d732f6175746f636f7272656c6174696f6e2d7368656c6c2f6261646765732f6d61737465722f706970656c696e652e737667" alt="" data-canonical-src="https://gitlab.com/BoundaryValueProblems/autocorrelation-shell/badges/master/pipeline.svg" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/ShozenD/AutocorrelationShell.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c7326cdeecf021fa57a9c3ff982cedc651c54c9ddac888717ad70b2112a93d86/68747470733a2f2f636f6465636f762e696f2f67682f53686f7a656e442f4175746f636f7272656c6174696f6e5368656c6c2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/ShozenD/AutocorrelationShell.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p><span><strong>Warning</strong></span>: <code>AutocorrelationShell.jl</code> is deprecated and will be part of <code>WaveletsExt.jl</code> from April 23, 2021. Please follow the following steps to remove this package from your REPL and migrate to <code>WaveletsExt.jl</code>.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; ]
(@v1.x) pkg&gt; rm AutocorrelationShell
(@v1.x) pkg&gt; update
(@v1.x) pkg&gt; add WaveletsExt
"><pre><code>julia&gt; ]
(@v1.x) pkg&gt; rm AutocorrelationShell
(@v1.x) pkg&gt; update
(@v1.x) pkg&gt; add WaveletsExt
</code></pre></div>
<p>This package is a <a href="https://github.com/JuliaLang/julia">Julia</a> implementation of Autocorrelation wavelet transforms (ACWT). AC wavelets are a special case of the stationary wavelet transform. This package includes the 1D autocorrelation wavelet transform, 2D autocorrelation wavelet transform, and autocorrelation wavelet packet transform.</p>
<p>Signal representations using autocorrelation wavelets are redundant and non-orthogonal. Some desirable properties of autocorrelation wavelet transforms are symmetry without losing vanishing moments, edge detection and characterization capabilities, and shift invariance. Autocorrelation wavelets can be used as a tool for data analysis such as time series analysis and image analysis.</p>
<h2><a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Authors</h2>
<p>This package was first translated from Matlab by Rishi Subramanian, and was extended by Christina Chang, and currently maintained by Shozen Dan under the supervision of Professor Naoki Saito at University of California, Davis.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>The package is part of the official Julia Registry. It can be install via the Julia REPL</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="(@1.x) pkg&gt; add AutocorrelationShell
"><pre><code>(@1.x) pkg&gt; add AutocorrelationShell
</code></pre></div>
<p>or</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; using Pkg; Pkg.add(&quot;AutocorrelationShell&quot;)
"><pre><code>julia&gt; using Pkg; Pkg.add("AutocorrelationShell")
</code></pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Load <code>AutocorrelationShell.jl</code> with the <code>Wavelets.jl</code> package</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using Wavelets, AutocorrelationShell
"><pre lang="{julia}"><code>using Wavelets, AutocorrelationShell
</code></pre></div>
<h2><a id="user-content-1d-autocorrelation-wavelet-transform" class="anchor" aria-hidden="true" href="#1d-autocorrelation-wavelet-transform"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>1D Autocorrelation Wavelet Transform</h2>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="# Forward 1D Autocorrelation Wavelet Transform
y = acwt(x, wavelet(WT.db4))

# Inverse 1D Autocorrelation Wavelet Transform
iacwt(y)
"><pre lang="{julia}"><code># Forward 1D Autocorrelation Wavelet Transform
y = acwt(x, wavelet(WT.db4))

# Inverse 1D Autocorrelation Wavelet Transform
iacwt(y)
</code></pre></div>
<h3><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h3>
<p>Perform forward autocorrelation wavelet transform on the vector x</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="# Decompose signal
y = acwt(x, wavelet(WT.db4))

# Display decomposition
wiggle(y)
"><pre lang="{julia}"><code># Decompose signal
y = acwt(x, wavelet(WT.db4))

# Display decomposition
wiggle(y)
</code></pre></div>
<p>Result:</p>
<p><a target="_blank" rel="noopener noreferrer" href="figures/auto_decomposition.png"><img src="figures/auto_decomposition.png" alt="Result" style="max-width:100%;"></a></p>
<h2><a id="user-content-2d-autocorrelation-wavelet-transform" class="anchor" aria-hidden="true" href="#2d-autocorrelation-wavelet-transform"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>2D Autocorrelation Wavelet Transform</h2>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="# Forward 2D Autocorrelation Wavelet Transform
y = acwt(img, wavelet(WT.db4))
"><pre lang="{julia}"><code># Forward 2D Autocorrelation Wavelet Transform
y = acwt(img, wavelet(WT.db4))
</code></pre></div>
<p>The <code>acwt</code> function performs a forward wavelet transformation on 2D signals such as images. It returns a 4 dimensional tensor with the dimensions (num_row, num_col, levels_of_decomp_row, levels_of_decomp_col).</p>
<p><a target="_blank" rel="noopener noreferrer" href="figures/ac2d_decomp_heatmap.png"><img src="figures/ac2d_decomp_heatmap.png" alt="AC2D transform example" width="600" style="max-width:100%;"></a></p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="# Inverse 2D Autocorrelation Wavelet Transform
iacwt(y)
"><pre lang="{julia}"><code># Inverse 2D Autocorrelation Wavelet Transform
iacwt(y)
</code></pre></div>
<p>The <code>iacwt</code> function is the inverse function of <code>acwt</code>. It takes an array of autocorrelation wavelet coefficients and reconstructs the original signal.</p>
<h3><a id="user-content-example-1" class="anchor" aria-hidden="true" href="#example-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h3>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="X = load(../test/pictures/boat.jpg)
X = Float64.(Gray.(X))

Y = acwt(X, wavelet(WT.db4))

# Revert to original signal
Z = iacwt(Y)
"><pre lang="{julia}"><code>X = load(../test/pictures/boat.jpg)
X = Float64.(Gray.(X))

Y = acwt(X, wavelet(WT.db4))

# Revert to original signal
Z = iacwt(Y)
</code></pre></div>
<h2><a id="user-content-autocorrelation-wavelet-packet-transform" class="anchor" aria-hidden="true" href="#autocorrelation-wavelet-packet-transform"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Autocorrelation Wavelet Packet Transform</h2>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="# Autocorrelation Wavelet Packet Transform
acwpt(x, wavelet(WT.db4))
"><pre lang="{julia}"><code># Autocorrelation Wavelet Packet Transform
acwpt(x, wavelet(WT.db4))
</code></pre></div>
<p>The <code>acwpt</code> function computes the autocorrelation wavelet packet transform for 1 dimensional signal. It returns a binary tree where the root node contains the original signal, and each child node contains a vector of 1 dimensional autocorrelation wavelet transform coefficients.</p>
<p><a target="_blank" rel="noopener noreferrer" href="figures/acwpt_diagram.png"><img src="figures/acwpt_diagram.png" alt="AC Wavelet Packet Transform Diagram" width="600" style="max-width:100%;"></a></p>
<h3><a id="user-content-example-2" class="anchor" aria-hidden="true" href="#example-2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h3>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="X₁ = randn(4); # length 4 random signal
y = acwpt(X₁, wavelet(WT.db4))
"><pre lang="{julia}"><code>X₁ = randn(4); # length 4 random signal
y = acwpt(X₁, wavelet(WT.db4))
</code></pre></div>
</article></div>