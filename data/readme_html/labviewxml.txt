<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<p dir="auto">In LabVIEW you can generate XML strings via the <code>Flatten To XML</code> VI.
If we have an XML file generated by LabVIEW with the following content,</p>
<div class="highlight highlight-text-xml notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="&lt;Cluster&gt;
    &lt;Name&gt;&lt;/Name&gt;
    &lt;NumElts&gt;2&lt;/NumElts&gt;
    &lt;I64&gt;
        &lt;Name&gt;MyI64&lt;/Name&gt;
        &lt;Val&gt;42&lt;/Val&gt;
    &lt;/I64&gt;
    &lt;I8&gt;
        &lt;Name&gt;MyI8&lt;/Name&gt;
        &lt;Val&gt;4&lt;/Val&gt;
    &lt;/I8&gt;
&lt;/Cluster&gt;"><pre>&lt;<span class="pl-ent">Cluster</span>&gt;
    &lt;<span class="pl-ent">Name</span>&gt;&lt;/<span class="pl-ent">Name</span>&gt;
    &lt;<span class="pl-ent">NumElts</span>&gt;2&lt;/<span class="pl-ent">NumElts</span>&gt;
    &lt;<span class="pl-ent">I64</span>&gt;
        &lt;<span class="pl-ent">Name</span>&gt;MyI64&lt;/<span class="pl-ent">Name</span>&gt;
        &lt;<span class="pl-ent">Val</span>&gt;42&lt;/<span class="pl-ent">Val</span>&gt;
    &lt;/<span class="pl-ent">I64</span>&gt;
    &lt;<span class="pl-ent">I8</span>&gt;
        &lt;<span class="pl-ent">Name</span>&gt;MyI8&lt;/<span class="pl-ent">Name</span>&gt;
        &lt;<span class="pl-ent">Val</span>&gt;4&lt;/<span class="pl-ent">Val</span>&gt;
    &lt;/<span class="pl-ent">I8</span>&gt;
&lt;/<span class="pl-ent">Cluster</span>&gt;</pre></div>
<p dir="auto">we can parse it with:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import LabViewXML
julia&gt; d = LabViewXML.readxml(&quot;/path/to/file.xml&quot;)
Dict{String,Any} with 2 entries:
  &quot;MyI8&quot;      =&gt; 4
  &quot;MyI64&quot;     =&gt; 42"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> LabViewXML
julia<span class="pl-k">&gt;</span> d <span class="pl-k">=</span> LabViewXML<span class="pl-k">.</span><span class="pl-c1">readxml</span>(<span class="pl-s"><span class="pl-pds">"</span>/path/to/file.xml<span class="pl-pds">"</span></span>)
Dict{String,Any} with <span class="pl-c1">2</span> entries<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>MyI8<span class="pl-pds">"</span></span>      <span class="pl-k">=&gt;</span> <span class="pl-c1">4</span>
  <span class="pl-s"><span class="pl-pds">"</span>MyI64<span class="pl-pds">"</span></span>     <span class="pl-k">=&gt;</span> <span class="pl-c1">42</span></pre></div>
<p dir="auto">The types will be parsed correctly:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; d[&quot;MyI8&quot;] |&gt; typeof
Int8"><pre>julia<span class="pl-k">&gt;</span> d[<span class="pl-s"><span class="pl-pds">"</span>MyI8<span class="pl-pds">"</span></span>] <span class="pl-k">|&gt;</span> typeof
Int8</pre></div>
<p dir="auto">Clusters will be parsed as <code>Dict</code>.</p>
<h1 dir="auto"><a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Known Issues</h1>
<p dir="auto">The package was only tested with relatively simple XML files.</p>
<ul dir="auto">
<li>Only a limited number of LabVIEW types is supported at the moment.</li>
<li>The top level of the XML file has to be a <code>&lt;Cluster&gt;</code> element</li>
</ul>
</article></div>