<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-identityranges" class="anchor" aria-hidden="true" href="#identityranges"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>IdentityRanges</h1>
<p><a href="https://travis-ci.org/JuliaArrays/IdentityRanges.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d97465963ecc9aaba6885d3f799c3f15b2f0b466/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614172726179732f4964656e7469747952616e6765732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaArrays/IdentityRanges.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/JuliaArrays/IdentityRanges.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ca9c386c7aa50da831d1becf9cafcc95d8249d7a/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614172726179732f4964656e7469747952616e6765732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaArrays/IdentityRanges.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>IdentityRanges are Julia-language a helper type for creating "views"
of arrays. They are a custom type of <code>AbstractUnitRange</code> that makes it
easy to preserve the indices of array views. The key property of an
<code>IdentityRange</code> <code>r</code> is that <code>r[i] == i</code> (hence the name of the
type/package), and that they support arbitrary start/stop indices
(i.e., not just starting at 1).</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">reshape</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">24</span>, <span class="pl-c1">4</span>, <span class="pl-c1">6</span>)
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">6</span> <span class="pl-c1">reshape</span>(<span class="pl-k">::</span><span class="pl-c1">UnitRange{Int64}</span>, <span class="pl-c1">4</span>, <span class="pl-c1">6</span>) with eltype Int64<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">5</span>   <span class="pl-c1">9</span>  <span class="pl-c1">13</span>  <span class="pl-c1">17</span>  <span class="pl-c1">21</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">6</span>  <span class="pl-c1">10</span>  <span class="pl-c1">14</span>  <span class="pl-c1">18</span>  <span class="pl-c1">22</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">7</span>  <span class="pl-c1">11</span>  <span class="pl-c1">15</span>  <span class="pl-c1">19</span>  <span class="pl-c1">23</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">8</span>  <span class="pl-c1">12</span>  <span class="pl-c1">16</span>  <span class="pl-c1">20</span>  <span class="pl-c1">24</span>

julia<span class="pl-k">&gt;</span> V <span class="pl-k">=</span> <span class="pl-c1">view</span>(A, <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">3</span>, <span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">5</span>)
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">3</span> <span class="pl-c1">view</span>(<span class="pl-c1">reshape</span>(<span class="pl-k">::</span><span class="pl-c1">UnitRange{Int64}</span>, <span class="pl-c1">4</span>, <span class="pl-c1">6</span>), <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">3</span>, <span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">5</span>) with eltype Int64<span class="pl-k">:</span>
 <span class="pl-c1">10</span>  <span class="pl-c1">14</span>  <span class="pl-c1">18</span>
 <span class="pl-c1">11</span>  <span class="pl-c1">15</span>  <span class="pl-c1">19</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">axes</span>(V)
(Base<span class="pl-k">.</span><span class="pl-c1">OneTo</span>(<span class="pl-c1">2</span>),Base<span class="pl-k">.</span><span class="pl-c1">OneTo</span>(<span class="pl-c1">3</span>))

julia<span class="pl-k">&gt;</span> V[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>]
<span class="pl-c1">10</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> IdentityRanges

julia<span class="pl-k">&gt;</span> Vp <span class="pl-k">=</span> <span class="pl-c1">view</span>(A, <span class="pl-c1">IdentityRange</span>(<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">3</span>), <span class="pl-c1">IdentityRange</span>(<span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">5</span>))
<span class="pl-c1">view</span>(<span class="pl-c1">reshape</span>(<span class="pl-k">::</span><span class="pl-c1">UnitRange{Int64}</span>, <span class="pl-c1">4</span>, <span class="pl-c1">6</span>), <span class="pl-c1">IdentityRange</span>(<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">3</span>), <span class="pl-c1">IdentityRange</span>(<span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">5</span>)) with eltype Int64 with indices <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">5</span><span class="pl-k">:</span>
 <span class="pl-c1">10</span>  <span class="pl-c1">14</span>  <span class="pl-c1">18</span>
 <span class="pl-c1">11</span>  <span class="pl-c1">15</span>  <span class="pl-c1">19</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">axes</span>(Vp)
(<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">3</span>,<span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">5</span>)

julia<span class="pl-k">&gt;</span> Vp[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>]
ERROR<span class="pl-k">:</span> BoundsError<span class="pl-k">:</span> attempt to access <span class="pl-c1">view</span>(<span class="pl-c1">reshape</span>(<span class="pl-k">::</span><span class="pl-c1">UnitRange{Int64}</span>, <span class="pl-c1">4</span>, <span class="pl-c1">6</span>), <span class="pl-c1">IdentityRange</span>(<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">3</span>), <span class="pl-c1">IdentityRange</span>(<span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">5</span>)) with eltype Int64 with indices <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">5</span> at index [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]
Stacktrace<span class="pl-k">:</span>
 [<span class="pl-c1">1</span>] <span class="pl-c1">throw_boundserror</span>(<span class="pl-k">::</span><span class="pl-c1">SubArray{Int64,2,Base.ReshapedArray{Int64,2,UnitRange{Int64},Tuple{}},Tuple{IdentityRange{Int64},IdentityRange{Int64}},false}</span>, <span class="pl-k">::</span><span class="pl-c1">Tuple{Int64,Int64}</span>) at <span class="pl-k">./</span>abstractarray<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">484</span>
 [<span class="pl-c1">2</span>] checkbounds at <span class="pl-k">./</span>abstractarray<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">449</span> [inlined]
 [<span class="pl-c1">3</span>] <span class="pl-c1">getindex</span>(<span class="pl-k">::</span><span class="pl-c1">SubArray{Int64,2,Base.ReshapedArray{Int64,2,UnitRange{Int64},Tuple{}},Tuple{IdentityRange{Int64},IdentityRange{Int64}},false}</span>, <span class="pl-k">::</span><span class="pl-c1">Int64</span>, <span class="pl-k">::</span><span class="pl-c1">Int64</span>) at <span class="pl-k">./</span>subarray<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">206</span>
 [<span class="pl-c1">4</span>] top<span class="pl-k">-</span>level scope at none<span class="pl-k">:</span><span class="pl-c1">0</span>

julia<span class="pl-k">&gt;</span> Vp[<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]
<span class="pl-c1">10</span>

julia<span class="pl-k">&gt;</span> A[<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]
<span class="pl-c1">10</span></pre></div>
</article></div>