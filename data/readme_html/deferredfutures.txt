<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-deferredfutures" class="anchor" aria-hidden="true" href="#deferredfutures"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DeferredFutures</h1>
<p><a href="https://travis-ci.org/invenia/DeferredFutures.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/77e2c18207d856209f3074c20fa97fd2a80d2f700c910640cb232359532a3622/68747470733a2f2f7472617669732d63692e6f72672f696e76656e69612f4465666572726564467574757265732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/invenia/DeferredFutures.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/iamed2/deferredfutures-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/02b0c125f739bd8cb908503d8f326e2736924bf38f6946dd16814e9a1b8ad288/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f35737035693465776b6667773463756d2f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/5sp5i4ewkfgw4cum/branch/master?svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/invenia/DeferredFutures.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b1b21a9df1e28b0918b32ff8edebede25799824ae14b2679efd14d696b664ff2/68747470733a2f2f636f6465636f762e696f2f67682f696e76656e69612f4465666572726564467574757265732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/invenia/DeferredFutures.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>A <code>DeferredFuture</code> is like a regular Julia <code>Future</code>, but is initialized when <code>put!</code> is called on it.
This means that the data in the <code>DeferredFuture</code> lives with the process the data was created on.
The process the <code>DeferredFuture</code> itself lives on never needs to fetch the data to its process.
This is useful when there is a lightweight controller process which handles scheduling work on and transferring data between multiple machines.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Use a <code>DeferredFuture</code> as you would a <code>Future</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; DeferredFuture()
DeferredFuture at (1,1,1)

julia&gt; DeferredFuture(3)
DeferredFuture at (3,1,2)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">DeferredFuture</span>()
DeferredFuture at (<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">DeferredFuture</span>(<span class="pl-c1">3</span>)
DeferredFuture at (<span class="pl-c1">3</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>)</pre></div>
<p>You can also use a <code>DeferredChannel</code> as you would a <code>RemoteChannel</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; DeferredChannel(()-&gt;Channel{Int}(10), 4)
DeferredChannel(#1) at (4,1,3)

julia&gt; DeferredChannel(4)
DeferredChannel(DeferredFutures.#2) at (4,1,4)

julia&gt; DeferredChannel(4, 128; content=Int)
DeferredChannel(DeferredFutures.#2) at (4,1,5)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">DeferredChannel</span>(()<span class="pl-k">-&gt;</span><span class="pl-c1">Channel</span><span class="pl-c1">{Int}</span>(<span class="pl-c1">10</span>), <span class="pl-c1">4</span>)
<span class="pl-c1">DeferredChannel</span>(<span class="pl-c"><span class="pl-c">#</span>1) at (4,1,3)</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">DeferredChannel</span>(<span class="pl-c1">4</span>)
<span class="pl-c1">DeferredChannel</span>(DeferredFutures.<span class="pl-c"><span class="pl-c">#</span>2) at (4,1,4)</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">DeferredChannel</span>(<span class="pl-c1">4</span>, <span class="pl-c1">128</span>; content<span class="pl-k">=</span>Int)
<span class="pl-c1">DeferredChannel</span>(DeferredFutures.<span class="pl-c"><span class="pl-c">#</span>2) at (4,1,5)</span></pre></div>
<p>Note that <code>DeferredChannel()</code> will create a <code>RemoteChannel</code> with <code>RemoteChannel(()-&gt;Channel{Any}(1), myid())</code> by default.</p>
<p>Furthermore, <code>@defer</code> can be used when creating a <code>Future</code> or <code>RemoteChannel</code> to create their deferred counterparts.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; @defer Future()
DeferredFuture at (1,1,6)

julia&gt; @defer RemoteChannel(()-&gt;Channel{Int}(10))
DeferredChannel(#3) at (1,1,7)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@defer</span> <span class="pl-c1">Future</span>()
DeferredFuture at (<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">6</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@defer</span> <span class="pl-c1">RemoteChannel</span>(()<span class="pl-k">-&gt;</span><span class="pl-c1">Channel</span><span class="pl-c1">{Int}</span>(<span class="pl-c1">10</span>))
<span class="pl-c1">DeferredChannel</span>(<span class="pl-c"><span class="pl-c">#</span>3) at (1,1,7)</span></pre></div>
<p>Note that <code>DeferredFuture(n)</code> does not control where the data lives, only where the <code>RemoteChannel</code> which refers to the data lives.</p>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p>DeferredFutures.jl is provided under the <a href="LICENSE.md">MIT "Expat" License</a>.</p>
</article></div>