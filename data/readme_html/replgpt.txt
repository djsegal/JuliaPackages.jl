<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://thatcherc.github.io/ReplGPT.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://thatcherc.github.io/ReplGPT.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-replgptjl" class="anchor" aria-hidden="true" href="#replgptjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ReplGPT.jl</h1>
<p dir="auto">Talk to ChatGPT from the Julia REPL!</p>
<p dir="auto">It's as simple as <code>using ReplGPT</code> and entering the shell with <code>}</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using ReplGPT
REPL mode ChatGPT_mode initialized. Press } to enter and backspace to exit.

ChatGPT&gt; Can you give me a quick example of exponentiating a matrix in Julia?
  Certainly! Here's an example of exponentiating a matrix in Julia:

  A = [1 2; 3 4]   # Create a 2x2 matrix
  B = exp(A)       # Exponentiate the matrix using the &quot;exp&quot; function

  The resulting matrix B will be:

  2.718281828459045  7.3890560989306496
  20.085536923187668  54.598150033144236

  In this example, we exponentiated the matrix A using the built-in exp function in Julia, which applies the exponential
  function element-wise to a matrix.

ChatGPT&gt; Thanks! Can you redo it with the matrix A = [1 i; -i 1]?
  Sure, here's how you can exponentiate the matrix A = [1 i; -i 1] in Julia:

  using LinearAlgebra
  
  A = [1 im; -im 1] # Create 2x2 matrix with complex elements
  B = exp(A) # Exponentiate the matrix using the &quot;exp&quot; function in LinearAlgebra
  

  The resulting matrix B will be:

  -0.131204 + 0.991017im    0.841471 - 0.540302im
  -0.841471 - 0.540302im   -0.131204 - 0.991017im

  In this example, we created a 2x2 matrix A with complex elements using the imaginary unit im in Julia. Then we used the exp
  function from the LinearAlgebra package to exponentiate the matrix A.

ChatGPT&gt; Great! What language was all this again?
  This was all done in Julia, a high-level, dynamic programming language designed for numerical and scientific computing, data
  science, and artificial intelligence.

ChatGPT&gt; "><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ReplGPT
REPL mode ChatGPT_mode initialized. Press } to enter and backspace to exit.

ChatGPT<span class="pl-k">&gt;</span> Can you give me a quick example of exponentiating a matrix <span class="pl-k">in</span> Julia?
  Certainly! Here<span class="pl-k">'</span>s an example of exponentiating a matrix <span class="pl-k">in</span> Julia<span class="pl-k">:</span>

  A <span class="pl-k">=</span> [<span class="pl-c1">1</span> <span class="pl-c1">2</span>; <span class="pl-c1">3</span> <span class="pl-c1">4</span>]   <span class="pl-c"><span class="pl-c">#</span> Create a 2x2 matrix</span>
  B <span class="pl-k">=</span> <span class="pl-c1">exp</span>(A)       <span class="pl-c"><span class="pl-c">#</span> Exponentiate the matrix using the "exp" function</span>

  The resulting matrix B will be<span class="pl-k">:</span>

  <span class="pl-c1">2.718281828459045</span>  <span class="pl-c1">7.3890560989306496</span>
  <span class="pl-c1">20.085536923187668</span>  <span class="pl-c1">54.598150033144236</span>

  In this example, we exponentiated the matrix A <span class="pl-k">using</span> the built<span class="pl-k">-</span>in exp <span class="pl-k">function</span> <span class="pl-k">in</span> Julia, which applies the exponential
  <span class="pl-k">function</span> element<span class="pl-k">-</span>wise to a matrix.

ChatGPT<span class="pl-k">&gt;</span> Thanks! Can you redo it with the matrix A <span class="pl-k">=</span> [<span class="pl-c1">1</span> i; <span class="pl-k">-</span>i <span class="pl-c1">1</span>]?
  Sure, here<span class="pl-k">'</span>s how you can exponentiate the matrix A <span class="pl-k">=</span> [<span class="pl-c1">1</span> i; <span class="pl-k">-</span>i <span class="pl-c1">1</span>] <span class="pl-k">in</span> Julia<span class="pl-k">:</span>

  <span class="pl-k">using</span> LinearAlgebra
  
  A <span class="pl-k">=</span> [<span class="pl-c1">1</span> im; <span class="pl-k">-</span>im <span class="pl-c1">1</span>] <span class="pl-c"><span class="pl-c">#</span> Create 2x2 matrix with complex elements</span>
  B <span class="pl-k">=</span> <span class="pl-c1">exp</span>(A) <span class="pl-c"><span class="pl-c">#</span> Exponentiate the matrix using the "exp" function in LinearAlgebra</span>
  

  The resulting matrix B will be<span class="pl-k">:</span>

  <span class="pl-k">-</span><span class="pl-c1">0.131204</span> <span class="pl-k">+</span> <span class="pl-c1">0.991017im</span>    <span class="pl-c1">0.841471</span> <span class="pl-k">-</span> <span class="pl-c1">0.540302im</span>
  <span class="pl-k">-</span><span class="pl-c1">0.841471</span> <span class="pl-k">-</span> <span class="pl-c1">0.540302im</span>   <span class="pl-k">-</span><span class="pl-c1">0.131204</span> <span class="pl-k">-</span> <span class="pl-c1">0.991017im</span>

  In this example, we created a <span class="pl-c1">2</span>x2 matrix A with complex elements <span class="pl-k">using</span> the imaginary unit im <span class="pl-k">in</span> Julia. Then we used the exp
  <span class="pl-k">function</span> from the LinearAlgebra package to exponentiate the matrix A.

ChatGPT<span class="pl-k">&gt;</span> Great! What language was all this again?
  This was all done <span class="pl-k">in</span> Julia, a high<span class="pl-k">-</span>level, dynamic programming language designed <span class="pl-k">for</span> numerical and scientific computing, data
  science, and artificial intelligence.

ChatGPT<span class="pl-k">&gt;</span> </pre></div>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting Started:</h2>
<p dir="auto">You will need to obtain an OpenAI API key from <a href="https://platform.openai.com/account/api-keys" rel="nofollow">openai.com</a> and pass it to Julia. ReplGPT.jl
will look for an API key in the module's settings and in
the <code>OPENAI_API_KEY</code> environment variable as a fallback.</p>
<p dir="auto">The <strong>recommended approach</strong> is to save the API key in the
module's settings by running:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using ReplGPT

julia&gt; ReplGPT.setAPIkey(&quot;&lt;YOUR KEY HERE&gt;&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ReplGPT

julia<span class="pl-k">&gt;</span> ReplGPT<span class="pl-k">.</span><span class="pl-c1">setAPIkey</span>(<span class="pl-s"><span class="pl-pds">"</span>&lt;YOUR KEY HERE&gt;<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The API key can later be cleared with <code>ReplGPT.clearAPIkey()</code>.</p>
<p dir="auto"><strong>Note:</strong> with this approach your API key will be stored in plaintext in a
<code>LocalPreferences.toml</code> folder in your environment directory. For example, on a Linux computer running Julia 1.8, the key is
stored in
<code>~/.julia/environments/v1.8/LocalPreferences.toml</code>.</p>
<p dir="auto">If there is interest, we can look for a non-plaintext way to store these keys.</p>
<p dir="auto">To specify your key using environment variables, invoke Julia
as shown below:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ OPENAI_API_KEY=&lt;key goes here&gt; julia"><pre>$ OPENAI_API_KEY=<span class="pl-k">&lt;</span>key goes here<span class="pl-k">&gt;</span> julia</pre></div>
<p dir="auto">Note that when the environment variable is used, the key is <strong>not</strong> saved to the <code>LocalPreferences.toml</code> file.</p>
<hr>
<p dir="auto">Inspiration drawn from
<a href="https://github.com/rory-linehan/OpenAI.jl">OpenAI.jl</a>,
<a href="https://github.com/MasonProtter/ReplMaker.jl">ReplMaker.jl</a>,
<a href="https://github.com/shashi/APL.jl">APL.jl</a>,
and Xe Iaso's ChatGPT emacs integration in
<a href="https://xeiaso.net/blog/chatgpt-emacs" rel="nofollow">"We're never getting rid of ChatGPT"</a>.</p>
</article></div>