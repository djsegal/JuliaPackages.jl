<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-moye" class="anchor" aria-hidden="true" href="#moye"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MoYe</h1>
<p dir="auto"><a href="https://YichengDWu.github.io/MoYe.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://YichengDWu.github.io/MoYe.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/YichengDWu/MoYe.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/YichengDWu/MoYe.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/YichengDWu/MoYe.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3d79ded97d8a48106a640db9e803a77ca54edec2a34453b6f309f11e0a1414d1/68747470733a2f2f636f6465636f762e696f2f67682f59696368656e674457752f4d6f59652e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/YichengDWu/MoYe.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">The <code>MoYe.jl</code> library draws significant inspiration from NVIDIA's <a href="https://github.com/NVIDIA/cutlass/blob/main/media/docs/cute/00_quickstart.md">CuTe</a> and is built with similar underlying structures.</p>
<p dir="auto">The name <strong>Mo Ye</strong> is derived from an ancient Chinese <a href="https://en.wikipedia.org/wiki/Gan_Jiang_and_Mo_Ye" rel="nofollow">legend of swordsmiths</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add MoYe"><pre>pkg<span class="pl-k">&gt;</span> add MoYe</pre></div>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick Start</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; a = MoYeArray(pointer([i for i in 1:48]), @Layout((6,8)))
6×8 MoYeArray{Int64, 2, ViewEngine{Int64, Ptr{Int64}}, Layout{2, Tuple{Static.StaticInt{6}, Static.StaticInt{8}}, Tuple{Static.StaticInt{1}, Static.StaticInt{6}}}}:
 1   7  13  19  25  31  37  43
 2   8  14  20  26  32  38  44
 3   9  15  21  27  33  39  45
 4  10  16  22  28  34  40  46
 5  11  17  23  29  35  41  47
 6  12  18  24  30  36  42  48

julia&gt; subtile_a = @tile a static((3,4)) (1, 2) # partition a into subtiles of shape 3 x 4, returns the subtile at (1,2)
3×4 MoYeArray{Int64, 2, ViewEngine{Int64, Ptr{Int64}}, Layout{2, Tuple{Static.StaticInt{3}, Static.StaticInt{4}}, Tuple{Static.StaticInt{1}, Static.StaticInt{6}}}}:
 25  31  37  43
 26  32  38  44
 27  33  39  45

julia&gt; workitems_a = @parallelize subtile_a static((3,2)) (1,1) # 3 x 2 threads, returns what thread (1,1) is working on
1×2 MoYeArray{Int64, 2, ViewEngine{Int64, Ptr{Int64}}, Layout{2, Tuple{Static.StaticInt{1}, Static.StaticInt{2}}, Tuple{Static.StaticInt{0}, Static.StaticInt{12}}}}:
 25  37

julia&gt; for i in eachindex(workitems_a)
           workitems_a[i] = 0
       end

julia&gt; a
6×8 MoYeArray{Int64, 2, ViewEngine{Int64, Ptr{Int64}}, Layout{2, Tuple{Static.StaticInt{6}, Static.StaticInt{8}}, Tuple{Static.StaticInt{1}, Static.StaticInt{6}}}}:
 1   7  13  19   0  31   0  43
 2   8  14  20  26  32  38  44
 3   9  15  21  27  33  39  45
 4  10  16  22  28  34  40  46
 5  11  17  23  29  35  41  47
 6  12  18  24  30  36  42  48
 
 julia&gt; @tile subtile_a static((3,1)) (1, 2) # if you want, you can always tile a subtile
3×1 MoYeArray{Int64, 2, ViewEngine{Int64, Ptr{Int64}}, Layout{2, Tuple{Static.StaticInt{3}, Static.StaticInt{1}}, Tuple{Static.StaticInt{1}, Static.StaticInt{0}}}}:
 31
 32
 33"><pre>julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">MoYeArray</span>(<span class="pl-c1">pointer</span>([i <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">48</span>]), <span class="pl-c1">@Layout</span>((<span class="pl-c1">6</span>,<span class="pl-c1">8</span>)))
<span class="pl-c1">6</span><span class="pl-k">×</span><span class="pl-c1">8</span> MoYeArray{Int64, <span class="pl-c1">2</span>, ViewEngine{Int64, Ptr{Int64}}, Layout{<span class="pl-c1">2</span>, Tuple{Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">6</span>}, Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">8</span>}}, Tuple{Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">1</span>}, Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">6</span>}}}}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>   <span class="pl-c1">7</span>  <span class="pl-c1">13</span>  <span class="pl-c1">19</span>  <span class="pl-c1">25</span>  <span class="pl-c1">31</span>  <span class="pl-c1">37</span>  <span class="pl-c1">43</span>
 <span class="pl-c1">2</span>   <span class="pl-c1">8</span>  <span class="pl-c1">14</span>  <span class="pl-c1">20</span>  <span class="pl-c1">26</span>  <span class="pl-c1">32</span>  <span class="pl-c1">38</span>  <span class="pl-c1">44</span>
 <span class="pl-c1">3</span>   <span class="pl-c1">9</span>  <span class="pl-c1">15</span>  <span class="pl-c1">21</span>  <span class="pl-c1">27</span>  <span class="pl-c1">33</span>  <span class="pl-c1">39</span>  <span class="pl-c1">45</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">10</span>  <span class="pl-c1">16</span>  <span class="pl-c1">22</span>  <span class="pl-c1">28</span>  <span class="pl-c1">34</span>  <span class="pl-c1">40</span>  <span class="pl-c1">46</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">11</span>  <span class="pl-c1">17</span>  <span class="pl-c1">23</span>  <span class="pl-c1">29</span>  <span class="pl-c1">35</span>  <span class="pl-c1">41</span>  <span class="pl-c1">47</span>
 <span class="pl-c1">6</span>  <span class="pl-c1">12</span>  <span class="pl-c1">18</span>  <span class="pl-c1">24</span>  <span class="pl-c1">30</span>  <span class="pl-c1">36</span>  <span class="pl-c1">42</span>  <span class="pl-c1">48</span>

julia<span class="pl-k">&gt;</span> subtile_a <span class="pl-k">=</span> <span class="pl-c1">@tile</span> a <span class="pl-c1">static</span>((<span class="pl-c1">3</span>,<span class="pl-c1">4</span>)) (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>) <span class="pl-c"><span class="pl-c">#</span> partition a into subtiles of shape 3 x 4, returns the subtile at (1,2)</span>
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">4</span> MoYeArray{Int64, <span class="pl-c1">2</span>, ViewEngine{Int64, Ptr{Int64}}, Layout{<span class="pl-c1">2</span>, Tuple{Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">3</span>}, Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">4</span>}}, Tuple{Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">1</span>}, Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">6</span>}}}}<span class="pl-k">:</span>
 <span class="pl-c1">25</span>  <span class="pl-c1">31</span>  <span class="pl-c1">37</span>  <span class="pl-c1">43</span>
 <span class="pl-c1">26</span>  <span class="pl-c1">32</span>  <span class="pl-c1">38</span>  <span class="pl-c1">44</span>
 <span class="pl-c1">27</span>  <span class="pl-c1">33</span>  <span class="pl-c1">39</span>  <span class="pl-c1">45</span>

julia<span class="pl-k">&gt;</span> workitems_a <span class="pl-k">=</span> <span class="pl-c1">@parallelize</span> subtile_a <span class="pl-c1">static</span>((<span class="pl-c1">3</span>,<span class="pl-c1">2</span>)) (<span class="pl-c1">1</span>,<span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">#</span> 3 x 2 threads, returns what thread (1,1) is working on</span>
<span class="pl-c1">1</span><span class="pl-k">×</span><span class="pl-c1">2</span> MoYeArray{Int64, <span class="pl-c1">2</span>, ViewEngine{Int64, Ptr{Int64}}, Layout{<span class="pl-c1">2</span>, Tuple{Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">1</span>}, Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">2</span>}}, Tuple{Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">0</span>}, Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">12</span>}}}}<span class="pl-k">:</span>
 <span class="pl-c1">25</span>  <span class="pl-c1">37</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">eachindex</span>(workitems_a)
           workitems_a[i] <span class="pl-k">=</span> <span class="pl-c1">0</span>
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> a
<span class="pl-c1">6</span><span class="pl-k">×</span><span class="pl-c1">8</span> MoYeArray{Int64, <span class="pl-c1">2</span>, ViewEngine{Int64, Ptr{Int64}}, Layout{<span class="pl-c1">2</span>, Tuple{Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">6</span>}, Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">8</span>}}, Tuple{Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">1</span>}, Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">6</span>}}}}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>   <span class="pl-c1">7</span>  <span class="pl-c1">13</span>  <span class="pl-c1">19</span>   <span class="pl-c1">0</span>  <span class="pl-c1">31</span>   <span class="pl-c1">0</span>  <span class="pl-c1">43</span>
 <span class="pl-c1">2</span>   <span class="pl-c1">8</span>  <span class="pl-c1">14</span>  <span class="pl-c1">20</span>  <span class="pl-c1">26</span>  <span class="pl-c1">32</span>  <span class="pl-c1">38</span>  <span class="pl-c1">44</span>
 <span class="pl-c1">3</span>   <span class="pl-c1">9</span>  <span class="pl-c1">15</span>  <span class="pl-c1">21</span>  <span class="pl-c1">27</span>  <span class="pl-c1">33</span>  <span class="pl-c1">39</span>  <span class="pl-c1">45</span>
 <span class="pl-c1">4</span>  <span class="pl-c1">10</span>  <span class="pl-c1">16</span>  <span class="pl-c1">22</span>  <span class="pl-c1">28</span>  <span class="pl-c1">34</span>  <span class="pl-c1">40</span>  <span class="pl-c1">46</span>
 <span class="pl-c1">5</span>  <span class="pl-c1">11</span>  <span class="pl-c1">17</span>  <span class="pl-c1">23</span>  <span class="pl-c1">29</span>  <span class="pl-c1">35</span>  <span class="pl-c1">41</span>  <span class="pl-c1">47</span>
 <span class="pl-c1">6</span>  <span class="pl-c1">12</span>  <span class="pl-c1">18</span>  <span class="pl-c1">24</span>  <span class="pl-c1">30</span>  <span class="pl-c1">36</span>  <span class="pl-c1">42</span>  <span class="pl-c1">48</span>
 
 julia<span class="pl-k">&gt;</span> <span class="pl-c1">@tile</span> subtile_a <span class="pl-c1">static</span>((<span class="pl-c1">3</span>,<span class="pl-c1">1</span>)) (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>) <span class="pl-c"><span class="pl-c">#</span> if you want, you can always tile a subtile</span>
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">1</span> MoYeArray{Int64, <span class="pl-c1">2</span>, ViewEngine{Int64, Ptr{Int64}}, Layout{<span class="pl-c1">2</span>, Tuple{Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">3</span>}, Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">1</span>}}, Tuple{Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">1</span>}, Static<span class="pl-k">.</span>StaticInt{<span class="pl-c1">0</span>}}}}<span class="pl-k">:</span>
 <span class="pl-c1">31</span>
 <span class="pl-c1">32</span>
 <span class="pl-c1">33</span></pre></div>
</article></div>