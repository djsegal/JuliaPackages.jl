<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-bubblebathjl" class="anchor" aria-hidden="true" href="#bubblebathjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>BubbleBath.jl</h1>
<p align="center" width="100%" dir="auto">
<a target="_blank" rel="noopener noreferrer" href="examples/bubblebath_logo.svg"><img src="examples/bubblebath_logo.svg" style="max-width: 100%;"></a>
</p>
<p dir="auto"><a href="https://github.com/mastrof/BubbleBath.jl/actions"><img src="https://github.com/mastrof/BubbleBath.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/mastrof/BubbleBath.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/451a4b817e11867d5bff06ec26a68135dee1dd5486085f4300ff3cdda6b026f4/68747470733a2f2f636f6465636f762e696f2f67682f6d617374726f662f427562626c65426174682e6a6c2f6272616e63682f6d61696e2f6772617068732f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/mastrof/BubbleBath.jl/branch/main/graphs/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Generate loose packings of spheres in orthorhombic domains, in 2 and 3 dimensions.</p>
<h2 dir="auto"><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h2>
<ul dir="auto">
<li>Fill a domain with spheres from a given distribution of radii to reach a target
packing fraction, or from already-sampled radii.</li>
<li>Control minimum allowed distance between spheres.</li>
<li>Decide whether spheres can cross through domain boundaries or not.</li>
</ul>
<p dir="auto"><code>BubbleBath.jl</code> just employs the trivial brute-force method,
with the only peculiarity that spheres are introduced in
order of decreasing radius.
Dense packings are obtained with reasonable performance,
but spatial correlations between sphere sizes are introduced.</p>
<p dir="auto">This is <strong>not</strong> an algorithm to generate tight, space-filling packings.</p>
<h2 dir="auto"><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example usage</h2>
<p dir="auto">The package exports a <code>Sphere{D}</code> type, which is just a wrapper around a
position <code>pos::NTuple{D,Float64}</code> and a radius <code>radius::Float64</code>, and
the <code>bubblebath</code> function, which creates a loose packing of spheres in a domain.</p>
<p dir="auto">To generate a (2D) distribution of spheres with radii uniformly distributed
within 1 and 5, in a rectangular domain of edges 100 and 50,
with a packing fraction 0.4, we can do</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using BubbleBath
using Distributions: Uniform

radius_pdf = Uniform(1,5)
extent = (100, 50)
ϕ_max = 0.4
bath = bubblebath(radius_pdf, ϕ_max, extent)"><pre><span class="pl-k">using</span> BubbleBath
<span class="pl-k">using</span> Distributions<span class="pl-k">:</span> Uniform

radius_pdf <span class="pl-k">=</span> <span class="pl-c1">Uniform</span>(<span class="pl-c1">1</span>,<span class="pl-c1">5</span>)
extent <span class="pl-k">=</span> (<span class="pl-c1">100</span>, <span class="pl-c1">50</span>)
ϕ_max <span class="pl-k">=</span> <span class="pl-c1">0.4</span>
bath <span class="pl-k">=</span> <span class="pl-c1">bubblebath</span>(radius_pdf, ϕ_max, extent)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="examples/2d.svg"><img src="examples/2d.svg" alt="Bubblebath in 2D" style="max-width: 100%;"></a></p>
<p dir="auto">If we want to impose a minimal distance between the surface of spheres,
the <code>min_distance</code> keyword can be used</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="radius_pdf = Uniform(1,5)
extent = (100, 50)
ϕ_max = 0.4
min_distance = 2.0
bath = bubblebath(radius_pdf, ϕ_max, extent; min_distance)"><pre>radius_pdf <span class="pl-k">=</span> <span class="pl-c1">Uniform</span>(<span class="pl-c1">1</span>,<span class="pl-c1">5</span>)
extent <span class="pl-k">=</span> (<span class="pl-c1">100</span>, <span class="pl-c1">50</span>)
ϕ_max <span class="pl-k">=</span> <span class="pl-c1">0.4</span>
min_distance <span class="pl-k">=</span> <span class="pl-c1">2.0</span>
bath <span class="pl-k">=</span> <span class="pl-c1">bubblebath</span>(radius_pdf, ϕ_max, extent; min_distance)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="examples/2d_mindist.svg"><img src="examples/2d_mindist.svg" alt="Bubblebath in 2D with minimum separation" style="max-width: 100%;"></a></p>
<p dir="auto">Again, the procedure in 3D is identical</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="radius_pdf = Uniform(10,25)
extent = (100, 100, 100)
ϕ_max = 0.3
min_distance = 10.0
bath = bubblebath(radius_pdf, ϕ_max, extent; min_distance)"><pre>radius_pdf <span class="pl-k">=</span> <span class="pl-c1">Uniform</span>(<span class="pl-c1">10</span>,<span class="pl-c1">25</span>)
extent <span class="pl-k">=</span> (<span class="pl-c1">100</span>, <span class="pl-c1">100</span>, <span class="pl-c1">100</span>)
ϕ_max <span class="pl-k">=</span> <span class="pl-c1">0.3</span>
min_distance <span class="pl-k">=</span> <span class="pl-c1">10.0</span>
bath <span class="pl-k">=</span> <span class="pl-c1">bubblebath</span>(radius_pdf, ϕ_max, extent; min_distance)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="examples/3d_mindist.svg"><img src="examples/3d_mindist.svg" alt="Bubblebath in 3D with minimum separation" style="max-width: 100%;"></a></p>
<p dir="auto">We can verify that the generated radii closely match the chosen distribution, even at relatively high packing fractions.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Distributions: Exponential
θ = 3.0 # average radius
radius_pdf = Exponential(θ)
extent = ntuple(_-&gt;300, 3)
bath1 = bubblebath(radius_pdf, 0.3, extent)
# this can take a while
bath2 = bubblebath(radius_pdf, 0.6, extent)
r1 = map(s -&gt; s.radius, bath1)
r2 = map(s -&gt; s.radius, bath2)"><pre><span class="pl-k">using</span> Distributions<span class="pl-k">:</span> Exponential
θ <span class="pl-k">=</span> <span class="pl-c1">3.0</span> <span class="pl-c"><span class="pl-c">#</span> average radius</span>
radius_pdf <span class="pl-k">=</span> <span class="pl-c1">Exponential</span>(θ)
extent <span class="pl-k">=</span> <span class="pl-c1">ntuple</span>(_<span class="pl-k">-&gt;</span><span class="pl-c1">300</span>, <span class="pl-c1">3</span>)
bath1 <span class="pl-k">=</span> <span class="pl-c1">bubblebath</span>(radius_pdf, <span class="pl-c1">0.3</span>, extent)
<span class="pl-c"><span class="pl-c">#</span> this can take a while</span>
bath2 <span class="pl-k">=</span> <span class="pl-c1">bubblebath</span>(radius_pdf, <span class="pl-c1">0.6</span>, extent)
r1 <span class="pl-k">=</span> <span class="pl-c1">map</span>(s <span class="pl-k">-&gt;</span> s<span class="pl-k">.</span>radius, bath1)
r2 <span class="pl-k">=</span> <span class="pl-c1">map</span>(s <span class="pl-k">-&gt;</span> s<span class="pl-k">.</span>radius, bath2)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="examples/radius_pdf.svg"><img src="examples/radius_pdf.svg" alt="Comparison of theoretical and generated radius distributions" style="max-width: 100%;"></a></p>
<p dir="auto">Finally, <code>bubblebath</code> also has an in-place version <code>bubblebath!</code>, which can operate on pre-initialised
vectors of <code>Sphere</code>s.
For example, to produce the <code>BubbleBath.jl</code> logo:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Distributions: Exponential
# initialise vector with three spheres at desired locations
Lx = 400
Ly = 400
extent = (Lx,Ly)
R = 50
D = 60
spheres = [
    Sphere((Lx/2-D,Ly/2-D), R),
    Sphere((Lx/2+D,Ly/2-D), R),
    Sphere((Lx/2,Ly/2+3D/4), R)
]
# add new spheres with exponential distribution of radii
radius_pdf = Exponential(2.0)
ϕ_max = 0.25 - packing_fraction(spheres, extent)
min_distance = 2.0
bubblebath!(spheres, radius_pdf, ϕ_max, extent; min_distance)"><pre><span class="pl-k">using</span> Distributions<span class="pl-k">:</span> Exponential
<span class="pl-c"><span class="pl-c">#</span> initialise vector with three spheres at desired locations</span>
Lx <span class="pl-k">=</span> <span class="pl-c1">400</span>
Ly <span class="pl-k">=</span> <span class="pl-c1">400</span>
extent <span class="pl-k">=</span> (Lx,Ly)
R <span class="pl-k">=</span> <span class="pl-c1">50</span>
D <span class="pl-k">=</span> <span class="pl-c1">60</span>
spheres <span class="pl-k">=</span> [
    <span class="pl-c1">Sphere</span>((Lx<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>D,Ly<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>D), R),
    <span class="pl-c1">Sphere</span>((Lx<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>D,Ly<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>D), R),
    <span class="pl-c1">Sphere</span>((Lx<span class="pl-k">/</span><span class="pl-c1">2</span>,Ly<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-c1">3</span>D<span class="pl-k">/</span><span class="pl-c1">4</span>), R)
]
<span class="pl-c"><span class="pl-c">#</span> add new spheres with exponential distribution of radii</span>
radius_pdf <span class="pl-k">=</span> <span class="pl-c1">Exponential</span>(<span class="pl-c1">2.0</span>)
ϕ_max <span class="pl-k">=</span> <span class="pl-c1">0.25</span> <span class="pl-k">-</span> <span class="pl-c1">packing_fraction</span>(spheres, extent)
min_distance <span class="pl-k">=</span> <span class="pl-c1">2.0</span>
<span class="pl-c1">bubblebath!</span>(spheres, radius_pdf, ϕ_max, extent; min_distance)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="examples/2d_inplace.svg"><img src="examples/2d_inplace.svg" width="600" style="max-width: 100%;"></a></p>
</article></div>