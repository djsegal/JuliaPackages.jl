<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-autoaligns" class="anchor" aria-hidden="true" href="#autoaligns"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>AutoAligns</h1>
<p><a href="http://www.repostatus.org/#wip" rel="nofollow"><img src="https://camo.githubusercontent.com/0749f25183695b4417d8b995933f3528de416a49/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f7769702e737667" alt="Project Status: WIP â€“ Initial development is in progress, but there has not yet been a stable, usable release suitable for the public." data-canonical-src="http://www.repostatus.org/badges/latest/wip.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/tpapp/AutoAligns.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cf2e66c3dd0b49b00b31de3de54c9d2eb11ed9f6/68747470733a2f2f7472617669732d63692e6f72672f74706170702f4175746f416c69676e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/tpapp/AutoAligns.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/tpapp/AutoAligns.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/15f9c91bf8ca659f9540e3ff513ef017ca587c4c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f74706170702f4175746f416c69676e732e6a6c2f62616467652e7376673f6272616e63683d6d617374657226627573743d31" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/tpapp/AutoAligns.jl/badge.svg?branch=master&amp;bust=1" style="max-width:100%;"></a></p>
<p>This <a href="https://julialang.org" rel="nofollow">Julia</a> package helps align text for printing with a monospace font, by keeping track of the maximum width of each column. It is useful for printing matrices, tables, and analogous structures, and in particular for writing methods for <code>Base.print</code>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>This package is not yet registered on Julia's <a href="https://github.com/JuliaLang/METADATA.jl/">METADATA.jl</a>.
To install it, you must use the <a href="https://docs.julialang.org/en/stable/manual/packages/#Installing-Unregistered-Packages-1" rel="nofollow">usual procedure for unregistered packages</a>:</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>git://github.com/tpapp/AutoAligns.jl.git<span class="pl-pds">"</span></span>)</pre></div>
<p>Note that the <a href="https://github.com/tpapp/AutoAligns.jl/blob/master/REQUIRE">minimum required version</a> of Julia is 0.6.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Create an <code>AutoAlign</code> object, then use <code>print</code> to save values into it, which are strings or converted to strings. The <code>AutoAlign</code> object keeps track of the current column (which you can query with <code>position</code>, but that is rarely necessary), and you can also provide a default alignment, or specify it before printing, using the methods</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">print</span>(aa<span class="pl-k">::</span><span class="pl-c1">AutoAlign</span>, xs<span class="pl-k">...</span>)
<span class="pl-c1">println</span>(aa<span class="pl-k">::</span><span class="pl-c1">AutoAlign</span>, xs<span class="pl-k">...</span>)</pre></div>
<p>where the latter starts a new line after saving the values. Both accept a keyword argument <code>align</code>, for specifying alternate alignent for the preceding arguments.</p>
<p>Alignment can be specified as follows:</p>
<ol>
<li>
<p>an atom <code>left</code>, <code>right</code>, or <code>center</code>, or any other user extension which is a subtype of <code>Alignment</code>,</p>
</li>
<li>
<p>a vector of alignment specifiers: for positions outside the length of the vector, the last element is used,</p>
</li>
<li>
<p>a <code>Dict</code> of <code>position =&gt; alignment</code> pairs, where the position <code>:default</code> provides the alignment for items not in the <code>Dict</code>.</p>
</li>
</ol>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>

<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> AutoAligns

julia<span class="pl-k">&gt;</span> aa <span class="pl-k">=</span> <span class="pl-c1">AutoAlign</span>(align <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">1</span> <span class="pl-k">=&gt;</span> left, <span class="pl-c1">:default</span> <span class="pl-k">=&gt;</span> right));

julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> (i, r) <span class="pl-k">in</span> <span class="pl-c1">zip</span>([<span class="pl-c1">1</span>, <span class="pl-c1">100</span>, <span class="pl-c1">10000</span>], [<span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>bb<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>ccc<span class="pl-pds">"</span></span>])
           <span class="pl-c1">print</span>(aa, r)
           <span class="pl-k">for</span> j <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>
               <span class="pl-c1">print</span>(aa, <span class="pl-s"><span class="pl-pds">"</span>  <span class="pl-pds">"</span></span>, i <span class="pl-k">+</span> j) <span class="pl-c"><span class="pl-c">#</span> padding</span>
           <span class="pl-k">end</span>
           <span class="pl-c1">println</span>(aa)
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">print</span>(STDOUT, aa)
a        <span class="pl-c1">2</span>      <span class="pl-c1">3</span>      <span class="pl-c1">4</span>      <span class="pl-c1">5</span>      <span class="pl-c1">6</span>
bb     <span class="pl-c1">101</span>    <span class="pl-c1">102</span>    <span class="pl-c1">103</span>    <span class="pl-c1">104</span>    <span class="pl-c1">105</span>
ccc  <span class="pl-c1">10001</span>  <span class="pl-c1">10002</span>  <span class="pl-c1">10003</span>  <span class="pl-c1">10004</span>  <span class="pl-c1">10005</span></pre></div>
<h2><a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Notes</h2>
<p>Spaces or separators such as <code>|</code> are not treated in a special way, and therefore should be accounted for when specifying positions for alignment.</p>
<p>Printing an <code>AutoAlign</code> object to a stream pads the strings with spaces so as to achieve the desired alignment.</p>
<p>An <code>AutoAlign</code> object is <strong>not a subtype of <code>IO</code>,</strong> as it does not implement a <code>write(::AutoAlign, x::UInt8)</code> method. Unlike <code>IOBuffer</code>, printing does not delete the contents.</p>
<p>Custom alignment types can be defined as subtypes of <code>Alignment</code>, by implementing <code>align_string</code>.</p>
</article></div>