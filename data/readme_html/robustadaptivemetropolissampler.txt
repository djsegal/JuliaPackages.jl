<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-robustadaptivemetropolissampler" class="anchor" aria-hidden="true" href="#robustadaptivemetropolissampler"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RobustAdaptiveMetropolisSampler</h1>
<p dir="auto"><a href="https://www.repostatus.org/#wip" rel="nofollow"><img src="https://camo.githubusercontent.com/b2837d6c1acaee6bce862487b13693c2226ea14f4e19fc3bac21e0edc55f5e65/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f7769702e737667" alt="Project Status: WIP – Initial development is in progress, but there has not yet been a stable, usable release suitable for the public." data-canonical-src="https://www.repostatus.org/badges/latest/wip.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/anthofflab/RobustAdaptiveMetropolisSampler.jl/workflows/Run%20CI%20on%20master/badge.svg"><img src="https://github.com/anthofflab/RobustAdaptiveMetropolisSampler.jl/workflows/Run%20CI%20on%20master/badge.svg" alt="" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/anthofflab/RobustAdaptiveMetropolisSampler.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9ce8f0faa01424e0a8ff285411364ae28f8b8ee2dabd501b734b4aa556b421db/68747470733a2f2f636f6465636f762e696f2f67682f616e74686f66666c61622f526f6275737441646170746976654d6574726f706f6c697353616d706c65722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/anthofflab/RobustAdaptiveMetropolisSampler.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h2>
<p dir="auto">This package implements the robust adaptive metropolis (RAM) sampler described in <a href="https://doi.org/10.1007/s11222-011-9269-5" rel="nofollow">Vihola (2012)</a> for the <a href="https://www.julialang.org" rel="nofollow">Julia language</a>.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">The <code>RAM_sample</code> function runs a MCMC sampler on a given log target function. The arguments for the functions are as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="RAM_sample(logtarget, x0, M0, n; opt_α=0.234, γ=2/3, q=Normal(), show_progress=true)"><pre><span class="pl-c1">RAM_sample</span>(logtarget, x0, M0, n; opt_α<span class="pl-k">=</span><span class="pl-c1">0.234</span>, γ<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">3</span>, q<span class="pl-k">=</span><span class="pl-c1">Normal</span>(), show_progress<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<ul dir="auto">
<li><code>logtarget</code> this must be a callable that accepts one parameter which is a vector of values to evaluate the log target function on. The function passed must return the log value of the target function.</li>
<li><code>x0</code> is a vector of initial values at which the sampler will start the MCMC algorithm. The length of the vector controls the dimensionality of the problem.</li>
<li><code>M0</code> is the initial co-variance matrix that the sampler should use to scale the new proposal. <code>M0</code> can be passed in many different ways:</li>
</ul>
<ol dir="auto">
<li>a scalar: an isotropic covariance matrix with diagonal elements <code>abs2(M0)</code>.</li>
<li>an <code>AbstractVector</code>: a diagonal covariance matrix with diagonal elements <code>abs2.(M0)</code>.</li>
<li>an <code>AbstractMatrix</code> (or a <code>Diagnoal</code> or an <code>AbstractPDMat</code>): a value of any of these types will be interpreted directly as the covariance matrix.</li>
</ol>
<ul dir="auto">
<li><code>n</code>: the number of elements to be sampled, i.e. the length of the chain.</li>
<li><code>opt_α</code>: the target acceptance rate the algorithm is trying to hit.</li>
<li><code>γ</code>: a parameter for the computation of the step size sequence.</li>
<li><code>q</code>: the proposal distribution.</li>
<li><code>show_progress</code>: a flag that controls whether a progress bar is shown.</li>
<li><code>output_log_probability_x</code>: a flag that controls whether to include output for the log-posterior scores from each Markov chain iteration.</li>
</ul>
<p dir="auto">The function returns a <code>NamedTuple</code> with three (or optionally four) elements:</p>
<ul dir="auto">
<li><code>chain</code>: a <code>Matrix</code> with the result chain. Each row is one sample, the columns correspond to the dimensions of the problem.</li>
<li><code>acceptance_rate</code>: the acceptance rate for the overall chain.</li>
<li><code>M</code>: the last co-variance matrix used in the algorithm.</li>
<li><code>log_probabilities_x</code>: the log-posterior score from each Markov chain iteration. Each element of <code>log_probabilities_x</code> corresponds to a row from <code>chain</code>.</li>
</ul>
<p dir="auto">A simple example of using the function is</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Distributions, RobustAdaptiveMetropolisSampler

chain, accrate, S = RAM_sample(
    p -&gt; logpdf(Normal(3., 2), p[1]), # log target function
    [0.],                             # Initial value
    0.5,                              # Use an isotropic covariance matrix with diagonal elements abs2(0.5)
    100_000                           # Number of runs
)"><pre><span class="pl-k">using</span> Distributions, RobustAdaptiveMetropolisSampler

chain, accrate, S <span class="pl-k">=</span> <span class="pl-c1">RAM_sample</span>(
    p <span class="pl-k">-&gt;</span> <span class="pl-c1">logpdf</span>(<span class="pl-c1">Normal</span>(<span class="pl-c1">3.</span>, <span class="pl-c1">2</span>), p[<span class="pl-c1">1</span>]), <span class="pl-c"><span class="pl-c">#</span> log target function</span>
    [<span class="pl-c1">0.</span>],                             <span class="pl-c"><span class="pl-c">#</span> Initial value</span>
    <span class="pl-c1">0.5</span>,                              <span class="pl-c"><span class="pl-c">#</span> Use an isotropic covariance matrix with diagonal elements abs2(0.5)</span>
    <span class="pl-c1">100_000</span>                           <span class="pl-c"><span class="pl-c">#</span> Number of runs</span>
)</pre></div>
</article></div>