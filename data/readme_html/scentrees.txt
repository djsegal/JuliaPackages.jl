<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://travis-ci.com/kirui93/ScenTrees.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b39221c12b8b65791ad733b1e18d443200eae8c60d388a950875bbd1ee067927/68747470733a2f2f7472617669732d63692e636f6d2f6b6972756939332f5363656e54726565732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Travis status" data-canonical-src="https://travis-ci.com/kirui93/ScenTrees.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/kirui93/ScenTrees.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0fe9fd1bf69bda76252b25cb43d98182eac3072659b0f7480fb8db6d91de4aa3/68747470733a2f2f636f6465636f762e696f2f67682f6b6972756939332f5363656e54726565732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/kirui93/ScenTrees.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/kirui93/ScenTrees.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/acbb405f631a13102e2bbad774e11be9da52e3b4f870b66e899206353eecb448/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6b6972756939332f5363656e54726565732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/kirui93/ScenTrees.jl/badge.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://kirui93.github.io/ScenTrees.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a>
<a href="https://kirui93.github.io/ScenTrees.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://doi.org/10.5281/zenodo.3672205" rel="nofollow"><img src="https://camo.githubusercontent.com/0c535bc03540d36fa0199c6c387e529cb97f19f43e135f6f3e81ce8ce8bb0667/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e333637323230352e737667" alt="Zenodo" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.3672205.svg" style="max-width: 100%;"></a>
<a href="https://doi.org/10.21105/joss.01912" rel="nofollow"><img src="https://camo.githubusercontent.com/2f2d23c307e0bac2cf024d0e5a50eb2b8ca16320ea707382010e595220f53a05/68747470733a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30313931322f7374617475732e737667" alt="JOSS" data-canonical-src="https://joss.theoj.org/papers/10.21105/joss.01912/status.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-scentreesjl" class="anchor" aria-hidden="true" href="#scentreesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ScenTrees.jl</h1>
<p dir="auto">Note: See also the active fork at <a href="https://github.com/aloispichler/ScenTrees.jl">https://github.com/aloispichler/ScenTrees.jl</a>.</p>
<p dir="auto"><code>ScenTrees.jl</code> is a Julia package for generating and improving scenario trees and scenario lattices for multistage stochastic optimization problems using <em>stochastic approximation</em>. It is totally written in the Julia programming language. This package provides functions for generating scenario trees and scenario lattices from stochastic processes and stochastic data.</p>
<p dir="auto">We provide two important features at the moment:</p>
<ul dir="auto">
<li>Generation of scenario trees and scenario lattices using stochastic approximation procedure.
<ul dir="auto">
<li>Scenario trees are used in the case of discrete time and discrete state stochastic processes.</li>
<li>Scenario lattices are a natural discretization of Markov processes and so if the stochastic process is Markovian, scenario lattices would approximate the process well.</li>
</ul>
</li>
<li>Estimating trajectories from stochastic data using conditional density estimation.
<ul dir="auto">
<li>This is a non-parametric technique for generating trajectories from a given observed data whose distribution is unknown.</li>
<li>The new trajectories estimated here can thus be used in stochastic approximation process to generate scenario trees and scenario lattices.</li>
</ul>
</li>
</ul>
<p dir="auto">Stochastic approximation procedure in <code>ScenTrees.jl</code> library follows from the framework provided by <a href="https://doi.org/10.1007/s10589-015-9758-0" rel="nofollow">Pflug and Pichler(2015)</a>. The two main user inputs are a fixed branching structure and a function that generates samples from a stochastic process.</p>
<p dir="auto"><em>N/B</em> - <em>This package is actively developed and therefore new improvements and new features are continuously added.</em></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Get the latest stable release with Julia's package manager:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add ScenTrees"><pre>] add ScenTrees</pre></div>
<p dir="auto">To use <code>ScenTrees.jl</code>, you need to have Julia &gt;= v1.0. This package was developed in Julia 1.0.4, and has been tested for Julia &gt;= v1.0 in Linux and OSX distributions.</p>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<p dir="auto">The STABLE documentation of ScenTrees.jl is available <a href="https://kirui93.github.io/ScenTrees.jl/stable/" rel="nofollow">here</a>. Here you can get the description of the various functions in the package and also different examples for the different features.</p>
<h2 dir="auto"><a id="user-content-example-of-usage" class="anchor" aria-hidden="true" href="#example-of-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example of Usage</h2>
<p dir="auto">After installing the ScenTrees.jl package, you can use it as in the following examples:</p>
<ol dir="auto">
<li>Consider the Gaussian random walk process in 4 stages. This process is already available in the package and can just be called by <code>gaussian_path1D()</code> for 1D and <code>gaussian_path2D()</code> for 2D. We want to approximate 1D process with a scenario tree as follows:</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using ScenTrees
julia&gt; gstree = tree_approximation!(Tree([1,2,2,2],1),gaussian_path1D,100000,2,2);
julia&gt; tree_plot(gstree)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ScenTrees
julia<span class="pl-k">&gt;</span> gstree <span class="pl-k">=</span> <span class="pl-c1">tree_approximation!</span>(<span class="pl-c1">Tree</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>],<span class="pl-c1">1</span>),gaussian_path1D,<span class="pl-c1">100000</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>);
julia<span class="pl-k">&gt;</span> <span class="pl-c1">tree_plot</span>(gstree)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/gstree.png"><img src="docs/src/assets/gstree.png" alt="Scenario Tree" style="max-width: 100%;"></a></p>
<ol start="2" dir="auto">
<li>We want to approximate running maximum process with a scenario lattice. It follows the same procedure as for scenario trees only that we use a different function as follows:</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using ScenTrees
julia&gt; rmlattice = lattice_approximation([1,2,3,4],running_maximum1D,100000,2,1);
julia&gt; plot_lattice(rmlattice)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ScenTrees
julia<span class="pl-k">&gt;</span> rmlattice <span class="pl-k">=</span> <span class="pl-c1">lattice_approximation</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>],running_maximum1D,<span class="pl-c1">100000</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>);
julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot_lattice</span>(rmlattice)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/rmlattice.png"><img src="docs/src/assets/rmlattice.png" alt="Scenario Lattice" style="max-width: 100%;"></a></p>
<ol start="3" dir="auto">
<li>We also provide the conditional density estimation of trajectories given data. Given an <code>NxT</code> dataframe, we use the <code>kernel_scenarios()</code> function to generate a new and similar trajectory with length equal to <code>T</code>. This function can thus be used to generated trajectories for creating a scenario tree and a scenario lattice. Consider a Gaussian random walk data which can be generated by calling the function <code>gaussian_path1D()</code> many times and saving the result in a matrix form. We can use this data and the kernel density estimation method to generate new and similar trajectories as follows:</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using ScenTrees
julia&gt; using Distributions
julia&gt; gsdata = Array{Float64}(undef,1000,4)
julia&gt; for i = 1:1000
           gsdata[i,:] = gaussian_path1D()
       end
julia&gt; gsGen = kernel_scenarios(gsdata,Logistic; Markovian = true)()
4-element Array{Float64,1}:
 6.3183e-16
-1.8681
-3.7719
-3.5241"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ScenTrees
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Distributions
julia<span class="pl-k">&gt;</span> gsdata <span class="pl-k">=</span> <span class="pl-c1">Array</span><span class="pl-c1">{Float64}</span>(undef,<span class="pl-c1">1000</span>,<span class="pl-c1">4</span>)
julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1000</span>
           gsdata[i,:] <span class="pl-k">=</span> <span class="pl-c1">gaussian_path1D</span>()
       <span class="pl-k">end</span>
julia<span class="pl-k">&gt;</span> gsGen <span class="pl-k">=</span> <span class="pl-c1">kernel_scenarios</span>(gsdata,Logistic; Markovian <span class="pl-k">=</span> <span class="pl-c1">true</span>)()
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">6.3183e-16</span>
<span class="pl-k">-</span><span class="pl-c1">1.8681</span>
<span class="pl-k">-</span><span class="pl-c1">3.7719</span>
<span class="pl-k">-</span><span class="pl-c1">3.5241</span></pre></div>
<p dir="auto">To use the above samples for scenario trees or scenario lattice generation:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; kerneltree = tree_approximation!(Tree([1,2,2,2],1),kernel_scenarios(gsdata,Logistic;Markovian=false),100000,2,2);
julia&gt; tree_plot(kerneltree)
julia&gt; kernelLattice = lattice_approximation([1,3,4,5],kernel_scenarios(gsdata,Logistic;Markovian=true),100000,2,1);
julia&gt; plot_lattice(kernelLattice)"><pre>julia<span class="pl-k">&gt;</span> kerneltree <span class="pl-k">=</span> <span class="pl-c1">tree_approximation!</span>(<span class="pl-c1">Tree</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>],<span class="pl-c1">1</span>),<span class="pl-c1">kernel_scenarios</span>(gsdata,Logistic;Markovian<span class="pl-k">=</span><span class="pl-c1">false</span>),<span class="pl-c1">100000</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>);
julia<span class="pl-k">&gt;</span> <span class="pl-c1">tree_plot</span>(kerneltree)
julia<span class="pl-k">&gt;</span> kernelLattice <span class="pl-k">=</span> <span class="pl-c1">lattice_approximation</span>([<span class="pl-c1">1</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>],<span class="pl-c1">kernel_scenarios</span>(gsdata,Logistic;Markovian<span class="pl-k">=</span><span class="pl-c1">true</span>),<span class="pl-c1">100000</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>);
julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot_lattice</span>(kernelLattice)</pre></div>
<table>
<thead>
<tr>
<th align="center"><a href="docs/src/assets/kerneltree.png"><img src="docs/src/assets/kerneltree.png" alt="Kernel Tree" style="max-width: 100%;"></a></th>
<th align="center"><a href="docs/src/assets/kernelLattice.png"><img src="docs/src/assets/kernelLattice.png" alt="Kernel Lattice" style="max-width: 100%;"></a></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">Kernel Scenario Tree</td>
<td align="center">Kernel Scenario Lattice</td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-contributing-to-scentreesjl" class="anchor" aria-hidden="true" href="#contributing-to-scentreesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing to ScenTrees.jl</h2>
<p dir="auto">As in <a href="https://github.com/kirui93/ScenTrees.jl/blob/master/CONTRIBUTING.md">CONTRIBUTING.md</a>, if you believe that you have found any bugs or if you need help or any questions regarding the library and any suggestions, please feel free to file a <a href="https://github.com/kirui93/ScenTrees.jl/issues/new">new GitHub issue</a>. You can also raise an issue or a pull request which fixes the issue as long as it doesn't affect performance.</p>
<h2 dir="auto"><a id="user-content-citing-scentreesjl" class="anchor" aria-hidden="true" href="#citing-scentreesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citing ScenTrees.jl</h2>
<p dir="auto">We ask that you please cite the following <a href="https://joss.theoj.org/papers/10.21105/joss.01912" rel="nofollow">paper</a> if you use <code>ScenTrees.jl</code>:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@article{Kirui2020,
        author = {Kirui, Kipngeno and Pichler, Alois and Pflug, Georg {\relax Ch}.},
        title = {ScenTrees.jl: A {J}ulia Package for Generating Scenario Trees and Scenario Lattices for Multistage Stochastic Programming},
        journal = {Journal of Open Source Software},
        publisher = {The Open Journal},
        year = {2020},
        volume = {5},
        number = {46},
        pages = {1912},
        doi = {10.21105/joss.01912},
        url = {https://doi.org/10.21105/joss.01912}
}"><pre class="notranslate"><code>@article{Kirui2020,
        author = {Kirui, Kipngeno and Pichler, Alois and Pflug, Georg {\relax Ch}.},
        title = {ScenTrees.jl: A {J}ulia Package for Generating Scenario Trees and Scenario Lattices for Multistage Stochastic Programming},
        journal = {Journal of Open Source Software},
        publisher = {The Open Journal},
        year = {2020},
        volume = {5},
        number = {46},
        pages = {1912},
        doi = {10.21105/joss.01912},
        url = {https://doi.org/10.21105/joss.01912}
}
</code></pre></div>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ul dir="auto">
<li>
<p dir="auto">Pflug, Georg Ch., and Alois Pichler, 2012. <em>A Distance for Multistage Stochastic Optimization Models</em>. SIAM Journal on Optimization 22(1) Doi: <a href="https://doi.org/10.1137/110825054" rel="nofollow">https://doi.org/10.1137/110825054</a></p>
</li>
<li>
<p dir="auto">Pflug, Georg Ch., and Alois Pichler,2015. <em>Dynamic Generation of Scenario Trees</em>. Computational Optimization and Applications 62(3): Doi: <a href="https://doi.org/10.1007/s10589-015-9758-0" rel="nofollow">https://doi.org/10.1007/s10589-015-9758-0</a></p>
</li>
<li>
<p dir="auto">Pflug, Georg Ch., and Alois Pichler,2016. <em>From Empirical Observations to Tree Models for Stochastic Optimization : Convergence Properties : Convergence of the Smoothed Empirical Process in Nested Distance.</em> SIAM Journal on Optimization 26(3). Society for Industrial and Applied Mathematics (SIAM). Doi: <a href="https://doi.org/10.1137/15M1043376" rel="nofollow">https://doi.org/10.1137/15M1043376</a>.</p>
</li>
</ul>
</article></div>