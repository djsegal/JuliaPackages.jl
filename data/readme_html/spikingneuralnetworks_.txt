<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 align="center" dir="auto"><a id="user-content---spiking-network-examples-in-julia" class="anchor" aria-hidden="true" href="#--spiking-network-examples-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>
  Spiking Network Examples in Julia
</h1>
<p align="center" dir="auto">
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/53f9a656235e69ec7d261f9ee1fc301bc8f717185e15dfa7fcbac37230f65b5f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d332d6f72616e67652e7376673f7374796c653d666c61742d737175617265"><img alt="GitHub" src="https://camo.githubusercontent.com/53f9a656235e69ec7d261f9ee1fc301bc8f717185e15dfa7fcbac37230f65b5f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d332d6f72616e67652e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/all_contributors-3-orange.svg?style=flat-square" style="max-width: 100%;"></a>
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/45bc922956e308315c26c3edfebbb56c1aa918e6f2d774d203fa5fdc46a99999/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f72757373656c6c6a6a61727669732f5370696b654e65744f70742e6a6c2e737667"><img alt="GitHub" src="https://camo.githubusercontent.com/45bc922956e308315c26c3edfebbb56c1aa918e6f2d774d203fa5fdc46a99999/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f72757373656c6c6a6a61727669732f5370696b654e65744f70742e6a6c2e737667" data-canonical-src="https://img.shields.io/github/issues/russelljjarvis/SpikeNetOpt.jl.svg" style="max-width: 100%;"></a>
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/7f5f0407c72eb987b872b0fc84db58a3d13cfd63947c119e38ea4de77afaf521/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d636c6f7365642f72757373656c6c6a6a61727669732f5370696b654e65744f70742e6a6c2e737667"><img alt="GitHub" src="https://camo.githubusercontent.com/7f5f0407c72eb987b872b0fc84db58a3d13cfd63947c119e38ea4de77afaf521/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d636c6f7365642f72757373656c6c6a6a61727669732f5370696b654e65744f70742e6a6c2e737667" data-canonical-src="https://img.shields.io/github/issues-closed/russelljjarvis/SpikeNetOpt.jl.svg" style="max-width: 100%;"></a>
  <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/b05ef14f80e45dc7b946490404e695b37c47c094541017ddb4676c007d2a6668/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f6d2f72757373656c6c6a6a61727669732f5370696b654e65744f70742e6a6c2e737667"><img alt="GitHub" src="https://camo.githubusercontent.com/b05ef14f80e45dc7b946490404e695b37c47c094541017ddb4676c007d2a6668/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f6d2f72757373656c6c6a6a61727669732f5370696b654e65744f70742e6a6c2e737667" data-canonical-src="https://img.shields.io/github/commit-activity/m/russelljjarvis/SpikeNetOpt.jl.svg" style="max-width: 100%;"></a>
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/russelljjarvis/SpikeNetOpt.jl/workflows/CI/badge.svg"><img alt="GitHub" src="https://github.com/russelljjarvis/SpikeNetOpt.jl/workflows/CI/badge.svg" style="max-width: 100%;"></a>
</p>

<p align="center" dir="auto">
  <a href="#Description">Description</a> •
  <a href="#Example-Outputs">Outputs</a> •
  <a href="#Motivation">Motivation</a> •
  <a href="#Install-the-Julia-module">Install</a> •
  <a href="#Development-Plans">Plans</a> •
  <a href="#Current-Design-Flow-Chart">Flow Chart</a> •
  <a href="#Why-Not-Optimize-Small-SNNs-With-Bigger-SNNs">Why Not Optimize Small SNNs With Bigger SNNs</a>
</p>
<p align="center" dir="auto">
</p><p dir="auto">Julia has enough tools to support fitting spiking neural network models to data. Python speed necessitates external simulators to do network simulation. As much as possible it would be nice to do fast, efficient data fitting of spike trains to network models in one language, lets try to do that here.</p>
<p dir="auto"></p>
<h3 dir="auto"><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgements</h3>
<p dir="auto">A reduced Spiking neuronal model optimization package directly derived from <a href="https://github.com/AStupidBear/SpikingNeuralNetworks.jl">https://github.com/AStupidBear/SpikingNeuralNetworks.jl</a></p>
<p dir="auto">This one uses BindsNet.py as the backend, and Metahieristics.jl to optimize.</p>
<h3 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting Started</h3>
<details>
  <summary>Install the Julia module</summary>
<p dir="auto">This is not yet an official package, so the package would need to be added in developer mode. The short way to do this is as follows:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import Pkg
Pkg.add(url=&quot;https://github.com/russelljjarvis/SpikeNetOpt.jl.git&quot;)"><pre class="notranslate"><code>import Pkg
Pkg.add(url="https://github.com/russelljjarvis/SpikeNetOpt.jl.git")
</code></pre></div>
<p dir="auto">or</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="] add https://github.com/russelljjarvis/SpikeNetOpt.jl.git"><pre class="notranslate"><code>] add https://github.com/russelljjarvis/SpikeNetOpt.jl.git
</code></pre></div>
<p dir="auto">The long way invovles:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="git clone https://github.com/russelljjarvis/SpikeNetOpt.jl"><pre class="notranslate"><code>git clone https://github.com/russelljjarvis/SpikeNetOpt.jl
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="cd SpikeNetOpt.jl
julia
]
(@v1.5) pkg&gt; develop ."><pre class="notranslate"><code>cd SpikeNetOpt.jl
julia
]
(@v1.5) pkg&gt; develop .
</code></pre></div>
<p dir="auto">Or</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Pkg.develop(PackageSpec(path=pwd()))
"><pre class="notranslate"><code>Pkg.develop(PackageSpec(path=pwd()))

</code></pre></div>
</details>
<details>
<summary>Entry Points</summary>
<p dir="auto">Optimize a spiking neural network by exploring effect of parameter that controls connectome graph structure:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia
include(&quot;examples/run_net_opt.jl&quot;)
"><pre class="notranslate"><code>julia
include("examples/run_net_opt.jl")

</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="cd examples
julia run_net_opt.jl"><pre class="notranslate"><code>cd examples
julia run_net_opt.jl
</code></pre></div>
<p dir="auto">Single cell data fitting against spike times:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="cd test
julia single_cell_opt_adexp.jl
julia single_cell_opt_izhi.jl"><pre class="notranslate"><code>cd test
julia single_cell_opt_adexp.jl
julia single_cell_opt_izhi.jl
</code></pre></div>
</details>
<h3 dir="auto"><a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Motivation</h3>
<details>
  <summary>Detailed Motivation and Previous work</summary>
<p dir="auto">(<a href="https://github.com/russelljjarvis/BluePyOpt/blob/neuronunit_reduced_cells/examples/neuronunit/OptimizationMulitSpikingIzhikevichModel.ipynb">https://github.com/russelljjarvis/BluePyOpt/blob/neuronunit_reduced_cells/examples/neuronunit/OptimizationMulitSpikingIzhikevichModel.ipynb</a>) in data-driven optimization of spiking neurons was implemented in Python. The Python implementation of reduced model simulation sometimes called external simulation, and overall my previous implementation of reduced model optimization was slower and more complex than it needed to be, for language and tool specific reasons.</p>
<p dir="auto">Reduced model spiking neurons models have compact equations, and they should be fast to simulate, but Python often calls external codes and programes (C,C++,NEURON,brian2,NEST,PyNN) to achieve a speedup for network simulations, however, approaches for speeding up network simulations are not necessarily efficient or convenient for running single-cell simulations, as me be required for single cell optimizations.  This strategy of calling external code causes an intolerable code complexity and intolerable run-time cost for single neuron simulations. The Python tool numba JIT partially remedies this problem, however, code from the Python optimization framework DEAP/BluePyOpt also induces an additional overhead. An almost pure Julia SNN optimization routine is a better solution to efficiently optimizing Reduced SNN models. In this package, two other packages: Evolutionary.jl, and Metaheuristics provide genetic algorithms used to optimize spiking neural networks.</p>
</details>
<h4 dir="auto"><a id="user-content-other-info" class="anchor" aria-hidden="true" href="#other-info"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Other Info</h4>
<p dir="auto"><a href="https://docs.google.com/presentation/d/1bWA5LhgAD8D4MGPQxf5P6jtb0spVEGeJKyXCHnh-aq0/edit?usp=sharing" rel="nofollow">A Google Doc presentation</a> that sets up the motivation for the project.
<a href="https://brainhack.org/global2021/project/project_98/" rel="nofollow">Part of BrainHack</a></p>
<h4 dir="auto"><a id="user-content-optimization-outputs" class="anchor" aria-hidden="true" href="#optimization-outputs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Optimization Outputs</h4>
<p dir="auto">The loss function is constructed by computing Spike Distance between all pairs of neurons
Networks are optimized using pair wise spike-distance metric on each pair of neurons
Pythons NetworkUnit package is used to perform a posthoc evaluation of the optimized network.</p>
<details>
  <summary>Example Outputs</summary>
<p dir="auto">See the figure below where local variation and firing rates are compared against every neuron between two model networks.</p>
<h4 dir="auto"><a id="user-content-network-optimization" class="anchor" aria-hidden="true" href="#network-optimization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Network optimization</h4>
<p dir="auto">For example this is a ground truth model versus an optimized model t-test of firing rates:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Student's t-test
	datasize: 200 	 200
	t = 11.811 	 p value = 1.82e-25"><pre class="notranslate"><code>Student's t-test
	datasize: 200 	 200
	t = 11.811 	 p value = 1.82e-25
</code></pre></div>
<h4 dir="auto"><a id="user-content-single-cell-optimization" class="anchor" aria-hidden="true" href="#single-cell-optimization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Single Cell optimization</h4>
<p dir="auto">Note for perspective 86% of spike times are matched in some of the best, model fitting competitions.
Output from a single cell optimization:</p>
<p align="center" dir="auto">
	<a target="_blank" rel="noopener noreferrer" href="https://github.com/russelljjarvis/SpikeNetOpt.jl/blob/main/img/single_cell_spike_time_fit.png"><img src="https://github.com/russelljjarvis/SpikeNetOpt.jl/raw/main/img/single_cell_spike_time_fit.png" width="250" height="200" style="max-width: 100%;"></a>
</p>
<p dir="auto">Output from a Network Spike Time optimization (note that Unicode backend is the plotting method, and neuron synapses fire propabilistically):</p>
<p align="center" dir="auto">
	<a target="_blank" rel="noopener noreferrer" href="https://github.com/russelljjarvis/SpikeNetOpt.jl/blob/main/img/net_compare_unicode.png"><img src="https://github.com/russelljjarvis/SpikeNetOpt.jl/raw/main/img/net_compare_unicode.png" width="250" height="200" style="max-width: 100%;"></a>
</p>
</details>
<h4 dir="auto"><a id="user-content-current-design-vs-intended-design-flow-chart" class="anchor" aria-hidden="true" href="#current-design-vs-intended-design-flow-chart"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Current Design Vs Intended Design Flow Chart:</h4>
<p align="center" dir="auto">
	<a target="_blank" rel="noopener noreferrer" href="https://github.com/russelljjarvis/SpikeNetOpt.jl/blob/main/doc/Flowchart%20(2).jpg"><img src="https://github.com/russelljjarvis/SpikeNetOpt.jl/raw/main/doc/Flowchart%20(2).jpg" width="250" height="200" style="max-width: 100%;"></a>
</p>
<h4 dir="auto"><a id="user-content--intended-future-design-" class="anchor" aria-hidden="true" href="#-intended-future-design-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a> Intended Future Design: </h4>
<p align="center" dir="auto">
	<a target="_blank" rel="noopener noreferrer" href="https://github.com/russelljjarvis/SpikeNetOpt.jl/blob/main/img/second_flow_diagram.png"><img src="https://github.com/russelljjarvis/SpikeNetOpt.jl/raw/main/img/second_flow_diagram.png" width="250" height="200" style="max-width: 100%;"></a>
</p>
<p align="center" dir="auto">
	<a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/7786645/173999747-00a00c8c-2880-4212-8963-457c4878794e.jpg"><img src="https://user-images.githubusercontent.com/7786645/173999747-00a00c8c-2880-4212-8963-457c4878794e.jpg" width="250" height="200" style="max-width: 100%;"></a>
</p>
<p dir="auto"></p>
<h2 dir="auto"><a id="user-content-development-plans" class="anchor" aria-hidden="true" href="#development-plans"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Development Plans</h2>
<h4 dir="auto"><a id="user-content-done" class="anchor" aria-hidden="true" href="#done"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DONE</h4>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Used spike distance and genetic algorithms to optimize network spike raster activity.</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Used pythons NetworkUnit to validate results and t-tests of results</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Created single cell model fitting to Allen Brain Observatory Spike Train Data.</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Ability to toggle between simulator backends (<a href="https://github.com/AStupidBear/SpikingNeuralNetworks.jl">https://github.com/AStupidBear/SpikingNeuralNetworks.jl</a> vs <a href="https://github.com/darsnack/SpikingNN.jl">https://github.com/darsnack/SpikingNN.jl</a>)</li>
</ul>
<h4 dir="auto"><a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TODO</h4>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Learning 2 learn</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Implemented multi-processing of feature extraction/spike distance (sort of)</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Animation of Genetic Algorithm Convergence (sort of metaheuristics does this with minimal effort)</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> ADAM-Opt predictions using evolved population see file mwe.jl.</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Read in and optimize against FPGA Event Stream Data AEDAT</li>
</ul>
<h4 dir="auto"><a id="user-content-dont-do" class="anchor" aria-hidden="true" href="#dont-do"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DONT DO</h4>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Use large SNNs to optimize smaller SNNs themselves, as this would be parsimonious.</li>
</ul>
<h4 dir="auto"><a id="user-content-why-not-optimize-small-snns-with-bigger-snns" class="anchor" aria-hidden="true" href="#why-not-optimize-small-snns-with-bigger-snns"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Why Not Optimize Small SNNs With Bigger SNNs?</h4>
<p dir="auto">This is the long term intended approach, to use a recurrent Inhibitory population + Excitatory population
Network to optimize smaller networks.</p>
<h2 dir="auto"><a id="user-content-contributors-" class="anchor" aria-hidden="true" href="#contributors-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributors <g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png">✨</g-emoji></h2>
<p dir="auto">Thanks goes to these wonderful people (<a href="https://allcontributors.org/docs/en/emoji-key" rel="nofollow">emoji key</a>):</p>



<table>
  <tbody><tr>
    <td align="center"><a href="https://russelljjarvis.github.io/home/" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/7786645?v=4?s=100" width="100px;" alt="" style="max-width: 100%;"><br><sub><b>Russell Jarvis</b></sub></a><br><a href="https://github.com/russelljjarvis/SpikeNetOpt.jl/commits?author=russelljjarvis" title="Code"><g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png">💻</g-emoji></a> <a href="https://github.com/russelljjarvis/SpikeNetOpt.jl/commits?author=russelljjarvis" title="Documentation"><g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png">📖</g-emoji></a> <a href="#ideas-russelljjarvis" title="Ideas, Planning, &amp; Feedback"><g-emoji class="g-emoji" alias="thinking" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f914.png">🤔</g-emoji></a> <a href="#design-russelljjarvis" title="Design"><g-emoji class="g-emoji" alias="art" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png">🎨</g-emoji></a> <a href="#infra-russelljjarvis" title="Infrastructure (Hosting, Build-Tools, etc)"><g-emoji class="g-emoji" alias="metro" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f687.png">🚇</g-emoji></a></td>
    <td align="center"><a href="https://github.com/mohitsaxenaknoldus"><img src="https://avatars.githubusercontent.com/u/76725454?v=4?s=100" width="100px;" alt="" style="max-width: 100%;"><br><sub><b>Mohit Saxena</b></sub></a><br><a href="https://github.com/russelljjarvis/SpikeNetOpt.jl/commits?author=mohitsaxenaknoldus" title="Tests"><g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png">⚠️</g-emoji></a></td>
    <td align="center"><a href="https://github.com/PallHaraldsson"><img src="https://avatars.githubusercontent.com/u/8005416?v=4?s=100" width="100px;" alt="" style="max-width: 100%;"><br><sub><b>Páll Haraldsson</b></sub></a><br><a href="https://github.com/russelljjarvis/SpikeNetOpt.jl/commits?author=PallHaraldsson" title="Documentation"><g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png">📖</g-emoji></a></td>
  </tr>
</tbody></table>



<p dir="auto">This project follows the <a href="https://github.com/all-contributors/all-contributors">all-contributors</a> specification. Contributions of any kind welcome!</p>
</article></div>