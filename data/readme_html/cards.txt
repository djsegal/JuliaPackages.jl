<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-cards" class="anchor" aria-hidden="true" href="#cards"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Cards</h1>
<p><a href="https://travis-ci.org/StefanKarpinski/Cards.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/30eb9e96fc66c3b9160bebeb7753e670356d2505e35c53e5f56ecc610272e87e/68747470733a2f2f7472617669732d63692e6f72672f53746566616e4b617270696e736b692f43617264732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/StefanKarpinski/Cards.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/StefanKarpinski/Cards.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/8e6761912c2ea9f9e836cae6acb3cb7efae4a4160f33b2c024fdf749ab7d0119/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f53746566616e4b617270696e736b692f43617264732e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/StefanKarpinski/Cards.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/StefanKarpinski/Cards.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/3ac3f8b16d8bd8b0de7ae428ac47db78b196f45a9fcf97e0ab3eaeafa4710f6c/687474703a2f2f636f6465636f762e696f2f6769746875622f53746566616e4b617270696e736b692f43617264732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/StefanKarpinski/Cards.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package defines three types:</p>
<ul>
<li>
<p><code>Suit</code> uses 2 low bits of a <code>UInt8</code> to represent four suits of cards: <g-emoji class="g-emoji" alias="clubs" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2663.png">♣</g-emoji>, ♢, ♡, <g-emoji class="g-emoji" alias="spades" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2660.png">♠</g-emoji>.</p>
</li>
<li>
<p><code>Card</code> uses 6 low bits of a <code>UInt8</code> to represent 64 possible card values:</p>
<ul>
<li>2 bits for the <code>Suit</code> (<g-emoji class="g-emoji" alias="clubs" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2663.png">♣</g-emoji>, ♢, ♡, <g-emoji class="g-emoji" alias="spades" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2660.png">♠</g-emoji>)</li>
<li>4 bits for the rank from 0-15, meaning:
<ul>
<li>0 – low joker</li>
<li>1 – low ace</li>
<li>2-10 – number cards</li>
<li>11-13 – jack, queen, king</li>
<li>14 – high ace</li>
<li>15 – high joker</li>
</ul>
</li>
</ul>
</li>
<li>
<p><code>Hand</code> uses 64 bits of a <code>UInt64</code> to represent all possible hands (sets) of cards.</p>
</li>
</ul>
<p>The design of having high and low aces and jokers allows hands from many different games to be represented in a single scheme, with consistent rank ordering. If you're representing hands from a game with aces high, use the <code>A♣</code>, <code>A♢</code>, <code>A♡</code>, <code>A♠</code> cards; if you're representing hands from a game with aces low, use the <code>1♣</code>, <code>1♢</code>, <code>1♡</code>, <code>1♠</code> cards instead.</p>
<h2><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example usage:</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Cards

julia&gt; hand = rand(Hand)
Hand([2♣, 3♣, 6♣, 7♣, 8♣, 9♣, 2♢, 3♢, 4♢, 7♢, 10♢, J♢, A♢, 4♡, 5♡, 6♡, 7♡, Q♡, K♡, A♡, 4♠, 6♠, 9♠, K♠, A♠])

julia&gt; 2♣ in hand
true

julia&gt; 4♣ in hand
false

julia&gt; A♣ in hand
false

julia&gt; A♠ in hand
true

julia&gt; ♡ ∩ hand
Hand([4♡, 5♡, 6♡, 7♡, Q♡, K♡, A♡])

julia&gt; ♠ ∩ hand
Hand([4♠, 6♠, 9♠, K♠, A♠])

julia&gt; length(♣ ∩ hand)
6
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Cards

julia<span class="pl-k">&gt;</span> hand <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Hand)
<span class="pl-c1">Hand</span>([<span class="pl-c1">2</span>♣, <span class="pl-c1">3</span>♣, <span class="pl-c1">6</span>♣, <span class="pl-c1">7</span>♣, <span class="pl-c1">8</span>♣, <span class="pl-c1">9</span>♣, <span class="pl-c1">2</span>♢, <span class="pl-c1">3</span>♢, <span class="pl-c1">4</span>♢, <span class="pl-c1">7</span>♢, <span class="pl-c1">10</span>♢, J♢, A♢, <span class="pl-c1">4</span>♡, <span class="pl-c1">5</span>♡, <span class="pl-c1">6</span>♡, <span class="pl-c1">7</span>♡, Q♡, K♡, A♡, <span class="pl-c1">4</span>♠, <span class="pl-c1">6</span>♠, <span class="pl-c1">9</span>♠, K♠, A♠])

julia<span class="pl-k">&gt;</span> <span class="pl-c1">2</span>♣ <span class="pl-k">in</span> hand
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">4</span>♣ <span class="pl-k">in</span> hand
<span class="pl-c1">false</span>

julia<span class="pl-k">&gt;</span> A♣ <span class="pl-k">in</span> hand
<span class="pl-c1">false</span>

julia<span class="pl-k">&gt;</span> A♠ <span class="pl-k">in</span> hand
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> ♡ <span class="pl-k">∩</span> hand
<span class="pl-c1">Hand</span>([<span class="pl-c1">4</span>♡, <span class="pl-c1">5</span>♡, <span class="pl-c1">6</span>♡, <span class="pl-c1">7</span>♡, Q♡, K♡, A♡])

julia<span class="pl-k">&gt;</span> ♠ <span class="pl-k">∩</span> hand
<span class="pl-c1">Hand</span>([<span class="pl-c1">4</span>♠, <span class="pl-c1">6</span>♠, <span class="pl-c1">9</span>♠, K♠, A♠])

julia<span class="pl-k">&gt;</span> <span class="pl-c1">length</span>(♣ <span class="pl-k">∩</span> hand)
<span class="pl-c1">6</span></pre></div>
</article></div>