<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-axisarrayconversion" class="anchor" aria-hidden="true" href="#axisarrayconversion"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AxisArrayConversion</h1>
<p dir="auto"><a href="https://jw3126.github.io/AxisArrayConversion.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://jw3126.github.io/AxisArrayConversion.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/jw3126/AxisArrayConversion.jl/actions"><img src="https://github.com/jw3126/AxisArrayConversion.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/jw3126/AxisArrayConversion.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f6940f9693c79eccb05e4c3c6c8690b52705e08bde525ab1a012d9b3f764be20/68747470733a2f2f636f6465636f762e696f2f67682f6a77333132362f417869734172726179436f6e76657273696f6e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/jw3126/AxisArrayConversion.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-axisarrayconversion-1" class="anchor" aria-hidden="true" href="#axisarrayconversion-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AxisArrayConversion</h1>
<p dir="auto"><a href="https://github.com/jw3126/AxisArrayConversion.jl">AxisArrayConversion.jl</a> allows converting between <a href="https://github.com/JuliaArrays/AxisArrays.jl">AxisArrays.jl</a> like packages.</p>
<ul dir="auto">
<li><a href="https://github.com/JuliaArrays/AxisArrays.jl">AxisArrays.AxisArray</a></li>
<li><a href="https://github.com/mcabbott/AxisKeys.jl">AxisKeys.KeyedArray</a></li>
<li><a href="https://github.com/rafaqz/DimensionalData.jl">DimensionalData.DimArray</a></li>
<li><a href="https://github.com/jw3126/AxisArrayConversion.jl">AxisArrayConversion.SimpleAxisArray</a></li>
<li>Base.NamedTuple</li>
</ul>
<h1 dir="auto"><a id="user-content-supporting-more-arrays" class="anchor" aria-hidden="true" href="#supporting-more-arrays"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Supporting more arrays</h1>
<p dir="auto">Conversions between two array types is provided by using the path</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="MyArray -&gt; NamedTuple -&gt; OtherArray"><pre>MyArray <span class="pl-k">-&gt;</span> NamedTuple <span class="pl-k">-&gt;</span> OtherArray</pre></div>
<p dir="auto">This has multiple advantages:</p>
<ul dir="auto">
<li>For <code>N</code> array types, only <code>2N</code> methods must be implemented.</li>
<li>Conversion can be implemented between packages that don't know about each other.</li>
</ul>
<p dir="auto">In order to support <code>MyArray</code>, the following must be implemented:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function AxisArrayConversion.namedtuple(arr::MyArray)
    ...
    return (axes=..., values=...)
end

function AxisArrayConversion.from_namedtuple(::Type{MyArray}, nt::NamedTuple)
    ... = nt.axes
    ... = nt.values
    return MyArray(...)
end"><pre><span class="pl-k">function</span> AxisArrayConversion<span class="pl-k">.</span><span class="pl-en">namedtuple</span>(arr<span class="pl-k">::</span><span class="pl-c1">MyArray</span>)
    <span class="pl-k">...</span>
    <span class="pl-k">return</span> (axes<span class="pl-k">=</span><span class="pl-k">...</span>, values<span class="pl-k">=</span><span class="pl-k">...</span>)
<span class="pl-k">end</span>

<span class="pl-k">function</span> AxisArrayConversion<span class="pl-k">.</span><span class="pl-en">from_namedtuple</span>(<span class="pl-k">::</span><span class="pl-c1">Type{MyArray}</span>, nt<span class="pl-k">::</span><span class="pl-c1">NamedTuple</span>)
    <span class="pl-k">...</span> <span class="pl-k">=</span> nt<span class="pl-k">.</span>axes
    <span class="pl-k">...</span> <span class="pl-k">=</span> nt<span class="pl-k">.</span>values
    <span class="pl-k">return</span> <span class="pl-c1">MyArray</span>(<span class="pl-k">...</span>)
<span class="pl-k">end</span></pre></div>
<p dir="auto">And now any fancy conversion should work</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using MyArrays, OtherArrays
using AxisArrayConversion: to
using Test

ma = MyArrays(...)
oa = to(OtherArray, ma)
@test oa isa OtherArrays.OtherArray
@test ma == to(MyArray, oa)"><pre><span class="pl-k">using</span> MyArrays, OtherArrays
<span class="pl-k">using</span> AxisArrayConversion<span class="pl-k">:</span> to
<span class="pl-k">using</span> Test

ma <span class="pl-k">=</span> <span class="pl-c1">MyArrays</span>(<span class="pl-k">...</span>)
oa <span class="pl-k">=</span> <span class="pl-c1">to</span>(OtherArray, ma)
<span class="pl-c1">@test</span> oa <span class="pl-k">isa</span> OtherArrays<span class="pl-k">.</span>OtherArray
<span class="pl-c1">@test</span> ma <span class="pl-k">==</span> <span class="pl-c1">to</span>(MyArray, oa)</pre></div>
</article></div>