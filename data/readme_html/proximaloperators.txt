<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-proximaloperatorsjl" class="anchor" aria-hidden="true" href="#proximaloperatorsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ProximalOperators.jl</h1>
<p dir="auto"><a href="https://github.com/JuliaFirstOrder/ProximalOperators.jl/actions?query=workflow%3ACI+branch%3Amaster"><img src="https://github.com/JuliaFirstOrder/ProximalOperators.jl/workflows/CI/badge.svg?branch=master" alt="Build status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaFirstOrder/ProximalOperators.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a21289194bf275b5ff9e21178b15a233e6bda179121c23d50c1af8cc158d2496/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696146697273744f726465722f50726f78696d616c4f70657261746f72732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaFirstOrder/ProximalOperators.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://doi.org/10.5281/zenodo.4020558" rel="nofollow"><img src="https://camo.githubusercontent.com/f0bb8108753a11e3d1da36840f428173fc17a3517087a2f4ab35104fa91f460f/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e343032303535382e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.4020558.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://juliafirstorder.github.io/ProximalOperators.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://juliafirstorder.github.io/ProximalOperators.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Proximal operators for nonsmooth optimization in Julia.
This package can be used to easily implement proximal algorithms for convex and nonconvex optimization problems such as ADMM, the alternating direction method of multipliers.</p>
<p dir="auto">See <a href="https://github.com/JuliaFirstOrder/ProximalAlgorithms.jl">ProximalAlgorithms.jl</a> for generic implementations of algorithms based on the primitives here defined.</p>
<p dir="auto">See the <a href="https://juliafirstorder.github.io/ProximalOperators.jl/latest" rel="nofollow">documentation</a> on how to use the package.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">To install the package, hit <code>]</code> from the Julia command line to enter the package manager, then</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add ProximalOperators"><pre>pkg<span class="pl-k">&gt;</span> add ProximalOperators</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">With <code>using ProximalOperators</code> the package exports the <code>prox</code> and <code>prox!</code> methods to evaluate the proximal mapping of several functions.</p>
<p dir="auto">A list of available function constructors is in the <a href="https://juliafirstorder.github.io/ProximalOperators.jl/latest" rel="nofollow">documentation</a>.</p>
<p dir="auto">For example, you can create the L1-norm as follows.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; f = NormL1(3.5)
description : weighted L1 norm
type        : Array{Complex} → Real
expression  : x ↦ λ||x||_1
parameters  : λ = 3.5"><pre>julia<span class="pl-k">&gt;</span> f <span class="pl-k">=</span> <span class="pl-c1">NormL1</span>(<span class="pl-c1">3.5</span>)
description <span class="pl-k">:</span> weighted L1 norm
type        <span class="pl-k">:</span> Array{Complex} → Real
expression  <span class="pl-k">:</span> x ↦ λ<span class="pl-k">||</span>x<span class="pl-k">||</span>_1
parameters  <span class="pl-k">:</span> λ <span class="pl-k">=</span> <span class="pl-c1">3.5</span></pre></div>
<p dir="auto">Functions created this way are, of course, callable.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; x = randn(10) # some random point
julia&gt; f(x)
32.40700818735099"><pre>julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">10</span>) <span class="pl-c"><span class="pl-c">#</span> some random point</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">f</span>(x)
<span class="pl-c1">32.40700818735099</span></pre></div>
<p dir="auto"><strong><code>prox</code></strong> evaluates the proximal operator associated with a function,
given a point and (optionally) a positive stepsize parameter,
returning the proximal point <code>y</code> and the value of the function at <code>y</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; y, fy = prox(f, x, 0.5) # last argument is 1.0 if absent"><pre>julia<span class="pl-k">&gt;</span> y, fy <span class="pl-k">=</span> <span class="pl-c1">prox</span>(f, x, <span class="pl-c1">0.5</span>) <span class="pl-c"><span class="pl-c">#</span> last argument is 1.0 if absent</span></pre></div>
<p dir="auto"><strong><code>prox!</code></strong> evaluates the proximal operator <em>in place</em>,
and only returns the function value at the proximal point:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; fy = prox!(y, f, x, 0.5) # in-place equivalent to y, fy = prox(f, x, 0.5)"><pre>julia<span class="pl-k">&gt;</span> fy <span class="pl-k">=</span> <span class="pl-c1">prox!</span>(y, f, x, <span class="pl-c1">0.5</span>) <span class="pl-c"><span class="pl-c">#</span> in-place equivalent to y, fy = prox(f, x, 0.5)</span></pre></div>
<h2 dir="auto"><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related packages</h2>
<ul dir="auto">
<li><a href="https://github.com/mfalt/FirstOrderSolvers.jl">FirstOrderSolvers.jl</a></li>
<li><a href="https://github.com/JuliaFirstOrder/ProximalAlgorithms.jl">ProximalAlgorithms.jl</a></li>
<li><a href="https://github.com/JuliaFirstOrder/StructuredOptimization.jl">StructuredOptimization.jl</a></li>
</ul>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ol dir="auto">
<li>
<p dir="auto">N. Parikh and S. Boyd (2014), <a href="http://dx.doi.org/10.1561/2400000003" rel="nofollow"><em>Proximal Algorithms</em></a>,
Foundations and Trends in Optimization, vol. 1, no. 3, pp. 127-239.</p>
</li>
<li>
<p dir="auto">S. Boyd, N. Parikh, E. Chu, B. Peleato and J. Eckstein (2011), <a href="http://dx.doi.org/10.1561/2200000016" rel="nofollow"><em>Distributed Optimization and Statistical Learning via the Alternating Direction Method of Multipliers</em></a>, Foundations and Trends in Machine Learning, vol. 3, no. 1, pp. 1-122.</p>
</li>
</ol>
<h2 dir="auto"><a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Credits</h2>
<p dir="auto">ProximalOperators.jl is developed by
<a href="https://lostella.github.io" rel="nofollow">Lorenzo Stella</a>
and <a href="http://homes.esat.kuleuven.be/~nantonel/" rel="nofollow">Niccolò Antonello</a>
at <a href="https://www.esat.kuleuven.be/stadius/" rel="nofollow">KU Leuven, ESAT/Stadius</a>,
and <a href="http://www.control.lth.se/Staff/MattiasFalt.html" rel="nofollow">Mattias Fält</a> at <a href="http://www.control.lth.se/" rel="nofollow">Lunds Universitet, Department of Automatic Control</a>.</p>
</article></div>