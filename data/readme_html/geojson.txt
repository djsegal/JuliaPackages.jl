<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-geojson" class="anchor" aria-hidden="true" href="#geojson"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GeoJSON</h1>
<p dir="auto"><a href="https://JuliaGeo.github.io/GeoJSON.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://JuliaGeo.github.io/GeoJSON.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaGeo/GeoJSON.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaGeo/GeoJSON.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaGeo/GeoJSON.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c6c5f101c94c1942e444c0310cab8b3bb194b9fc0ca4b10f9f821b9f465329ef/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696147656f2f47656f4a534f4e2e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d6363704f615053693038" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaGeo/GeoJSON.jl/branch/main/graph/badge.svg?token=ccpOaPSi08" style="max-width: 100%;"></a></p>
<p dir="auto">Read <a href="https://geojson.org/" rel="nofollow">GeoJSON</a> files using <a href="https://github.com/quinnj/JSON3.jl">JSON3.jl</a>, and provide the <a href="https://github.com/JuliaData/Tables.jl">Tables.jl</a> interface.</p>
<p dir="auto">This package is heavily inspired by, and borrows code from, <a href="https://github.com/JuliaData/JSONTables.jl">JSONTables.jl</a>, which
does the same thing for the general JSON format. GeoJSON puts the geometry in a <code>geometry</code> column, and adds all
properties in the columns individually.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">GeoJSON only provides simple <code>read</code> and <code>write</code> methods.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using GeoJSON, DataFrames

julia&gt; jsonbytes = read(&quot;path/to/a.geojson&quot;);

julia&gt; fc = GeoJSON.read(jsonbytes)
FeatureCollection with 171 Features

julia&gt; first(fc)
Feature with geometry type Polygon and properties Symbol[:geometry, :timestamp, :version, :changeset, :user, :uid, :area, :highway, :type, :id]

# use the Tables interface to convert the format, extract data, or iterate over the rows
julia&gt; df = DataFrame(fc)

# write to string
julia&gt; write(fc)
&quot;{\&quot;type\&quot;:\&quot;FeatureCollection\&quot;,\&quot;features\&quot;:[{\&quot;type\&quot;:\&quot;Feature\&quot;,\&quot;geometry\&quot;:{\&quot;type\&quot;:\&quot;Polygon\&quot;,\&quot;coordinates\&quot;:[[[-69.99693762899992..."><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> GeoJSON, DataFrames

julia<span class="pl-k">&gt;</span> jsonbytes <span class="pl-k">=</span> <span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>path/to/a.geojson<span class="pl-pds">"</span></span>);

julia<span class="pl-k">&gt;</span> fc <span class="pl-k">=</span> GeoJSON<span class="pl-k">.</span><span class="pl-c1">read</span>(jsonbytes)
FeatureCollection with <span class="pl-c1">171</span> Features

julia<span class="pl-k">&gt;</span> <span class="pl-c1">first</span>(fc)
Feature with geometry type Polygon and properties Symbol[<span class="pl-c1">:geometry</span>, <span class="pl-c1">:timestamp</span>, <span class="pl-c1">:version</span>, <span class="pl-c1">:changeset</span>, <span class="pl-c1">:user</span>, <span class="pl-c1">:uid</span>, <span class="pl-c1">:area</span>, <span class="pl-c1">:highway</span>, <span class="pl-c1">:type</span>, <span class="pl-c1">:id</span>]

<span class="pl-c"><span class="pl-c">#</span> use the Tables interface to convert the format, extract data, or iterate over the rows</span>
julia<span class="pl-k">&gt;</span> df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(fc)

<span class="pl-c"><span class="pl-c">#</span> write to string</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">write</span>(fc)
<span class="pl-s"><span class="pl-pds">"</span>{<span class="pl-cce">\"</span>type<span class="pl-cce">\"</span>:<span class="pl-cce">\"</span>FeatureCollection<span class="pl-cce">\"</span>,<span class="pl-cce">\"</span>features<span class="pl-cce">\"</span>:[{<span class="pl-cce">\"</span>type<span class="pl-cce">\"</span>:<span class="pl-cce">\"</span>Feature<span class="pl-cce">\"</span>,<span class="pl-cce">\"</span>geometry<span class="pl-cce">\"</span>:{<span class="pl-cce">\"</span>type<span class="pl-cce">\"</span>:<span class="pl-cce">\"</span>Polygon<span class="pl-cce">\"</span>,<span class="pl-cce">\"</span>coordinates<span class="pl-cce">\"</span>:[[[-69.99693762899992...</span></pre></div>
<h3 dir="auto"><a id="user-content-http-access" class="anchor" aria-hidden="true" href="#http-access"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>HTTP access</h3>
<p dir="auto">To read JSON from a URL, use HTTP.jl</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
julia&gt; using GeoJSON, HTTP

julia&gt; resp = HTTP.get(&quot;https://path/to/file.json&quot;)

julia&gt; fc = GeoJSON.read(resp.body)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> GeoJSON, HTTP

julia<span class="pl-k">&gt;</span> resp <span class="pl-k">=</span> HTTP<span class="pl-k">.</span><span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">"</span>https://path/to/file.json<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> fc <span class="pl-k">=</span> GeoJSON<span class="pl-k">.</span><span class="pl-c1">read</span>(resp<span class="pl-k">.</span>body)</pre></div>
</article></div>