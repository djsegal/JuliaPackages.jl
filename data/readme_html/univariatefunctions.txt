<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-univariatefunctionsjl" class="anchor" aria-hidden="true" href="#univariatefunctionsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>UnivariateFunctions.jl</h1>
<table>
<thead>
<tr>
<th>Build</th>
<th>Coverage</th>
<th>Documentation</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/s-baumann/UnivariateFunctions.jl/actions"><img src="https://github.com/s-baumann/UnivariateFunctions.jl/workflows/CI/badge.svg" alt="Build status" style="max-width: 100%;"></a></td>
<td><a href="https://codecov.io/gh/s-baumann/UnivariateFunctions.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3825c4ab081f79e050a390442d9433b4bde34d41af28e24cf3999aef167778c5/68747470733a2f2f636f6465636f762e696f2f67682f732d6261756d616e6e2f556e697661726961746546756e6374696f6e732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d754f316d444750664d4c" alt="codecov" data-canonical-src="https://codecov.io/gh/s-baumann/UnivariateFunctions.jl/branch/master/graph/badge.svg?token=uO1mDGPfML" style="max-width: 100%;"></a></td>
<td><a href="https://s-baumann.github.io/UnivariateFunctions.jl/dev/index.html" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="docs-latest-img" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">This implements single algebra and evaluation on simple univariate functions.
There are a few ways in which it can be used.</p>
<ul dir="auto">
<li>UnivariateFunctions can be used in the creation of splines. This has the added
advantage that a spline implemented as a UnivariateFunction can be manipulated
easily. It can be differentiated and then added to another function, etc.</li>
<li>Any continuous interpolation scheme can be done with the added benefit that derivatives/integrals/products etc can be found analytically.</li>
<li>Basic approximation schemes like OLS regression and chebyshev polynomials can be done with the added benefit that derivatives/integrals/products etc can be found analytically.</li>
</ul>
<p dir="auto">This is faster and simpler than the closely related package <a href="https://github.com/s-baumann/MultivariateFunctions.jl">MultivariateFunctions.jl</a>. The cost is that it is restricted to only one dimension.</p>
</article></div>