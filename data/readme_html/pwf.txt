<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/lampspucpptreduced.png"><img src="docs/src/assets/lampspucpptreduced.png" align="right" width="300" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-pwfjl" class="anchor" aria-hidden="true" href="#pwfjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PWF.jl</h1>
<br>
<br>
<hr>
<p dir="auto">PWF.jl is a Julia package for converting ANAREDE data format (".pwf") into a Julia dictionary.</p>
<p dir="auto">Additionaly, PWF provides parsing .pwf file directly to <a href="https://github.com/lanl-ansi/PowerModels.jl">PowerModels.jl</a> network data dictionary.</p>
<p dir="auto">The implementations were made based on the ANAREDE user guide manual (v09).</p>
<p dir="auto"><strong>Quickstart</strong></p>
<p dir="auto">Until the creating of PWF.jl, '.pwf' files could only be parsed through Brazilian commercial softwares, such as ANAREDE and Organon. Therefore, the Brazilian Power System community was compelled to use one of the two solutions to run Power Flow analysis.</p>
<p dir="auto">PWF.jl unlocks the power of open-source to the Power System community. Therefore, now, anyone can read the standard Brazilian file ('.pwf') and run steady-state electrical analysis with state-of-the-art methodologies. For the Power Flow algorithm, we encourage the usage of the package PowerModels.jl, which already have integration with the PWF.jl package.</p>
<p dir="auto">To perform Power Flow analysis using PWF.jl in Julia, follow the steps bellow:</p>
<ol dir="auto">
<li>
<p dir="auto">First of all, make sure you have <a href="https://code.visualstudio.com/" rel="nofollow">Visual Studio Code</a> and <a href="https://julialang.org/downloads/" rel="nofollow">Julia Language</a> Long-term support (LTS) 1.6.6 configured correctly;</p>
</li>
<li>
<p dir="auto">Then, add PWF.jl and PowerModels.jl to the known packages;</p>
</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg

Pkg.add(&quot;PWF&quot;)
Pkg.add(&quot;PowerModels&quot;)"><pre><span class="pl-k">using</span> Pkg

Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>PWF<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>PowerModels<span class="pl-pds">"</span></span>)</pre></div>
<ol start="3" dir="auto">
<li>Finally, you are ready to perform power flow analysis</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using PWF, PowerModels

network_path = &quot;network.pwf&quot;

network = PWF.parse_file(network_path)

results = PowerModels.run_ac_pf(network)

results[&quot;solution&quot;][&quot;bus&quot;][&quot;1&quot;][&quot;vm&quot;] # folution for voltage magniture of bus 1
results[&quot;solution&quot;][&quot;bus&quot;][&quot;1&quot;][&quot;va&quot;] # solution for voltage angle     of bus 1"><pre><span class="pl-k">using</span> PWF, PowerModels

network_path <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>network.pwf<span class="pl-pds">"</span></span>

network <span class="pl-k">=</span> PWF<span class="pl-k">.</span><span class="pl-c1">parse_file</span>(network_path)

results <span class="pl-k">=</span> PowerModels<span class="pl-k">.</span><span class="pl-c1">run_ac_pf</span>(network)

results[<span class="pl-s"><span class="pl-pds">"</span>solution<span class="pl-pds">"</span></span>][<span class="pl-s"><span class="pl-pds">"</span>bus<span class="pl-pds">"</span></span>][<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span>][<span class="pl-s"><span class="pl-pds">"</span>vm<span class="pl-pds">"</span></span>] <span class="pl-c"><span class="pl-c">#</span> folution for voltage magniture of bus 1</span>
results[<span class="pl-s"><span class="pl-pds">"</span>solution<span class="pl-pds">"</span></span>][<span class="pl-s"><span class="pl-pds">"</span>bus<span class="pl-pds">"</span></span>][<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span>][<span class="pl-s"><span class="pl-pds">"</span>va<span class="pl-pds">"</span></span>] <span class="pl-c"><span class="pl-c">#</span> solution for voltage angle     of bus 1</span></pre></div>
<p dir="auto">For more information about PowerModels.jl visit the PowerModels <a href="https://lanl-ansi.github.io/PowerModels.jl/stable/" rel="nofollow">documentation</a></p>
<h2 dir="auto"><a id="user-content-parser" class="anchor" aria-hidden="true" href="#parser"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Parser</h2>
<p dir="auto">The package can parse all available sections into a julia dictionary withou any modifications. Each key represents a .pwf section as shown below:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; parse_file(file; pm = false)
Dict{String, Any} with 6 entries:
  &quot;DLIN&quot; =&gt; Dict{String, Any}[Dict(&quot;AGGREGATOR 10&quot;=&gt;nothing, &quot;AGGREGATOR 5&quot;=&gt;nothing, &quot;AGGR&quot;…
  &quot;name&quot; =&gt; &quot;3bus&quot;
  &quot;DBAR&quot; =&gt; Dict{String, Any}[Dict(&quot;AGGREGATOR 10&quot;=&gt;nothing, &quot;ANGLE&quot;=&gt;0.0, &quot;MINIMUM REACTIV&quot;…
  &quot;TITU&quot; =&gt; &quot;Ande Case&quot;…
  &quot;DCTE&quot; =&gt; Dict{String, Any}(&quot;TLVC&quot;=&gt;0.5, &quot;APAS&quot;=&gt;90.0, &quot;BASE&quot;=&gt;100.0, &quot;STIR&quot;=&gt;1.0, &quot;CPAR&quot;…
  &quot;DOPC&quot; =&gt; Dict{String, Any}(&quot;CONT&quot;=&gt;'L', &quot;CELO&quot;=&gt;'L' &quot;MOST&quot;=&gt;'L', &quot;MOSF&quot;=&gt;'L', &quot;RCVG&quot;=&gt;'…"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse_file</span>(file; pm <span class="pl-k">=</span> <span class="pl-c1">false</span>)
Dict{String, Any} with <span class="pl-c1">6</span> entries<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>DLIN<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> Dict{String, Any}[<span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>AGGREGATOR 10<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">nothing</span>, <span class="pl-s"><span class="pl-pds">"</span>AGGREGATOR 5<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">nothing</span>, <span class="pl-s"><span class="pl-pds">"</span>AGGR<span class="pl-pds">"</span></span>…
  <span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>3bus<span class="pl-pds">"</span></span>
  <span class="pl-s"><span class="pl-pds">"</span>DBAR<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> Dict{String, Any}[<span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>AGGREGATOR 10<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">nothing</span>, <span class="pl-s"><span class="pl-pds">"</span>ANGLE<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">0.0</span>, <span class="pl-s"><span class="pl-pds">"</span>MINIMUM REACTIV<span class="pl-pds">"</span></span>…
  <span class="pl-s"><span class="pl-pds">"</span>TITU<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Ande Case<span class="pl-pds">"</span></span>…
  <span class="pl-s"><span class="pl-pds">"</span>DCTE<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>TLVC<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">0.5</span>, <span class="pl-s"><span class="pl-pds">"</span>APAS<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">90.0</span>, <span class="pl-s"><span class="pl-pds">"</span>BASE<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">100.0</span>, <span class="pl-s"><span class="pl-pds">"</span>STIR<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">1.0</span>, <span class="pl-s"><span class="pl-pds">"</span>CPAR<span class="pl-pds">"</span></span>…
  <span class="pl-s"><span class="pl-pds">"</span>DOPC<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>CONT<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">'</span>L<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">"</span>CELO<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">'</span>L<span class="pl-pds">'</span></span> <span class="pl-s"><span class="pl-pds">"</span>MOST<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">'</span>L<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">"</span>MOSF<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">'</span>L<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">"</span>RCVG<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">'</span>…</span></pre></div>
<h2 dir="auto"><a id="user-content-powermodelsjl-converter" class="anchor" aria-hidden="true" href="#powermodelsjl-converter"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PowerModels.jl converter</h2>
<p dir="auto">The package also allow converting .pwf file directly into PowerModels.jl network data structure:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; parse_file(file; pm = true) # default
Dict{String, Any} with 13 entries:
  &quot;bus&quot;            =&gt; Dict{String, Any}(&quot;1&quot;=&gt;Dict{String, Any}(&quot;zone&quot;=&gt;1, &quot;bus_i&quot;=&gt;1, &quot;bus_&quot;…
  &quot;source_type&quot;    =&gt; &quot;pwf&quot;
  &quot;name&quot;           =&gt; &quot;3bus&quot;
  &quot;dcline&quot;         =&gt; Dict{String, Any}()
  &quot;source_version&quot; =&gt; &quot;09&quot;
  &quot;branch&quot;         =&gt; Dict{String, Any}(&quot;1&quot;=&gt;Dict{String, Any}(&quot;br_r&quot;=&gt;0.181, &quot;shift&quot;=&gt;-0.0…
  &quot;gen&quot;            =&gt; Dict{String, Any}(&quot;1&quot;=&gt;Dict{String, Any}(&quot;pg&quot;=&gt;11.52, &quot;model&quot;=&gt;2, &quot;sh&quot;…
  &quot;storage&quot;        =&gt; Dict{String, Any}()
  &quot;switch&quot;         =&gt; Dict{String, Any}()
  &quot;baseMVA&quot;        =&gt; 100.0
  &quot;per_unit&quot;       =&gt; false
  &quot;shunt&quot;          =&gt; Dict{String, Any}()
  &quot;load&quot;           =&gt; Dict{String, Any}(&quot;1&quot;=&gt;Dict{String, Any}(&quot;source_id&quot;=&gt;Any[&quot;load&quot;, 3, …"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse_file</span>(file; pm <span class="pl-k">=</span> <span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> default</span>
Dict{String, Any} with <span class="pl-c1">13</span> entries<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>bus<span class="pl-pds">"</span></span>            <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>zone<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">"</span>bus_i<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">"</span>bus_<span class="pl-pds">"</span></span>…
  <span class="pl-s"><span class="pl-pds">"</span>source_type<span class="pl-pds">"</span></span>    <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>pwf<span class="pl-pds">"</span></span>
  <span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span>           <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>3bus<span class="pl-pds">"</span></span>
  <span class="pl-s"><span class="pl-pds">"</span>dcline<span class="pl-pds">"</span></span>         <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>()
  <span class="pl-s"><span class="pl-pds">"</span>source_version<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>09<span class="pl-pds">"</span></span>
  <span class="pl-s"><span class="pl-pds">"</span>branch<span class="pl-pds">"</span></span>         <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>br_r<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">0.181</span>, <span class="pl-s"><span class="pl-pds">"</span>shift<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-k">-</span><span class="pl-c1">0.0</span>…
  <span class="pl-s"><span class="pl-pds">"</span>gen<span class="pl-pds">"</span></span>            <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>pg<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">11.52</span>, <span class="pl-s"><span class="pl-pds">"</span>model<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">"</span>sh<span class="pl-pds">"</span></span>…
  <span class="pl-s"><span class="pl-pds">"</span>storage<span class="pl-pds">"</span></span>        <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>()
  <span class="pl-s"><span class="pl-pds">"</span>switch<span class="pl-pds">"</span></span>         <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>()
  <span class="pl-s"><span class="pl-pds">"</span>baseMVA<span class="pl-pds">"</span></span>        <span class="pl-k">=&gt;</span> <span class="pl-c1">100.0</span>
  <span class="pl-s"><span class="pl-pds">"</span>per_unit<span class="pl-pds">"</span></span>       <span class="pl-k">=&gt;</span> <span class="pl-c1">false</span>
  <span class="pl-s"><span class="pl-pds">"</span>shunt<span class="pl-pds">"</span></span>          <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>()
  <span class="pl-s"><span class="pl-pds">"</span>load<span class="pl-pds">"</span></span>           <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>source_id<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>Any[<span class="pl-s"><span class="pl-pds">"</span>load<span class="pl-pds">"</span></span>, <span class="pl-c1">3</span>, …</pre></div>
<p dir="auto"><strong>Network Data Sections Available:</strong></p>
<ul dir="auto">
<li>bus</li>
<li>gen</li>
<li>load</li>
<li>branch</li>
<li>dcline</li>
<li>shunt</li>
</ul>
<p dir="auto"><strong>Incoming Network Data Sections:</strong></p>
<ul dir="auto">
<li>switch</li>
<li>storage</li>
</ul>
<p dir="auto"><strong>Two parsing modes comprehended</strong></p>
<p dir="auto">There are two main softwares used for parsing PWF files and each one does slightly different assumptions to the data parsed. For more information, visit the documentation.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
julia&gt; data = parse_file(file; pm = true, software = ANAREDE) # default

julia&gt; data = parse_file(file; pm = true, software = Organon)"><pre>julia<span class="pl-k">&gt;</span> data <span class="pl-k">=</span> <span class="pl-c1">parse_file</span>(file; pm <span class="pl-k">=</span> <span class="pl-c1">true</span>, software <span class="pl-k">=</span> ANAREDE) <span class="pl-c"><span class="pl-c">#</span> default</span>

julia<span class="pl-k">&gt;</span> data <span class="pl-k">=</span> <span class="pl-c1">parse_file</span>(file; pm <span class="pl-k">=</span> <span class="pl-c1">true</span>, software <span class="pl-k">=</span> Organon)</pre></div>
<p dir="auto"><strong>Additional data inside PWF files</strong></p>
<p dir="auto">If parse_file' argument add_control_data is set to true (default = false), additional information present on the PWF file that is not used by PowerModels will be stored inside each element in the field "control_data", such as the example below:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; data = parse_file(file, pm = true, add_control_data = true);

julia&gt; data[&quot;shunt&quot;][&quot;1&quot;][&quot;control_data&quot;]
Dict{String, Any} with 9 entries:
  &quot;vmmax&quot;              =&gt; 1.029
  &quot;section&quot;            =&gt; &quot;DBAR&quot;
  &quot;shunt_control_type&quot; =&gt; 3
  &quot;bsmin&quot;              =&gt; 0.0
  &quot;shunt_type&quot;         =&gt; 2
  &quot;bsmax&quot;              =&gt; 0.0
  &quot;inclination&quot;        =&gt; nothing
  &quot;vmmin&quot;              =&gt; 1.029
  &quot;controlled_bus&quot;     =&gt; 1"><pre>julia<span class="pl-k">&gt;</span> data <span class="pl-k">=</span> <span class="pl-c1">parse_file</span>(file, pm <span class="pl-k">=</span> <span class="pl-c1">true</span>, add_control_data <span class="pl-k">=</span> <span class="pl-c1">true</span>);

julia<span class="pl-k">&gt;</span> data[<span class="pl-s"><span class="pl-pds">"</span>shunt<span class="pl-pds">"</span></span>][<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span>][<span class="pl-s"><span class="pl-pds">"</span>control_data<span class="pl-pds">"</span></span>]
Dict{String, Any} with <span class="pl-c1">9</span> entries<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>vmmax<span class="pl-pds">"</span></span>              <span class="pl-k">=&gt;</span> <span class="pl-c1">1.029</span>
  <span class="pl-s"><span class="pl-pds">"</span>section<span class="pl-pds">"</span></span>            <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>DBAR<span class="pl-pds">"</span></span>
  <span class="pl-s"><span class="pl-pds">"</span>shunt_control_type<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">3</span>
  <span class="pl-s"><span class="pl-pds">"</span>bsmin<span class="pl-pds">"</span></span>              <span class="pl-k">=&gt;</span> <span class="pl-c1">0.0</span>
  <span class="pl-s"><span class="pl-pds">"</span>shunt_type<span class="pl-pds">"</span></span>         <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>
  <span class="pl-s"><span class="pl-pds">"</span>bsmax<span class="pl-pds">"</span></span>              <span class="pl-k">=&gt;</span> <span class="pl-c1">0.0</span>
  <span class="pl-s"><span class="pl-pds">"</span>inclination<span class="pl-pds">"</span></span>        <span class="pl-k">=&gt;</span> <span class="pl-c1">nothing</span>
  <span class="pl-s"><span class="pl-pds">"</span>vmmin<span class="pl-pds">"</span></span>              <span class="pl-k">=&gt;</span> <span class="pl-c1">1.029</span>
  <span class="pl-s"><span class="pl-pds">"</span>controlled_bus<span class="pl-pds">"</span></span>     <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span></pre></div>
<p dir="auto"><strong>PWF Sections Available:</strong></p>
<ul dir="auto">
<li>DBAR</li>
<li>DBSH</li>
<li>DCBA</li>
<li>DCCV</li>
<li>DCER</li>
<li>DCLI</li>
<li>DCNV</li>
<li>DCSC</li>
<li>DCTE</li>
<li>DELO</li>
<li>DGBT</li>
<li>DGER</li>
<li>DGLT</li>
<li>DLIN</li>
<li>DOPC</li>
<li>DSHL</li>
<li>DARE</li>
<li>DCAI</li>
<li>DCAR</li>
<li>DGEI</li>
<li>DINJ</li>
<li>DMFL</li>
<li>DMOT</li>
<li>DMTE</li>
<li>DAGR</li>
<li>DCMT</li>
<li>DTPF</li>
</ul>
<h2 dir="auto"><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing</h2>
<ul dir="auto">
<li>PRs such as adding new sections and fixing bugs are very welcome!</li>
<li>For nontrivial changes, you'll probably want to first discuss the changes via issue. Suggestions are super welcome!</li>
</ul>
</article></div>