<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-counttimeseries" class="anchor" aria-hidden="true" href="#counttimeseries"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CountTimeSeries</h1>
<p><a href="https://ci.appveyor.com/project/ManuelStapper/counttimeseries-jl-xqtaf" rel="nofollow"><img src="https://camo.githubusercontent.com/b09360e2e32bfc2e434b6981da795080dd4cf0a910db97674144698a9892bd49/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f66726e69687232717734333238726e663f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/frnihr2qw4328rnf?svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/ManuelStapper/CountTimeSeries.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3bdd574c6cedc811766ee403e3d384c91d70bd46637ce81e5e34b0fd4f64ee3f/68747470733a2f2f636f6465636f762e696f2f67682f4d616e75656c537461707065722f436f756e7454696d655365726965732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/ManuelStapper/CountTimeSeries.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>This package is developed to handle univariate count data time series. Up to now, it covers integer counterparts of ARMA and GARCH processes with broad generalizations. It enables the user to generate artificial data, estimate parameters by Maximum Likelihood, conduct inference on the estimates, assess model choice and carry out forecasts. A detailed documentation with theoretical background is provided <a href="https://github.com/ManuelStapper/CountTimeSeries.jl/blob/master/CountTimeSeries_documentation.pdf">here</a>.</p>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<p>A model, for example a simple INGARCH(1, 1) with Poisson distribution is defined first by</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="model = Model(pastObs = 1, pastMean = 1)
"><pre>model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(pastObs <span class="pl-k">=</span> <span class="pl-c1">1</span>, pastMean <span class="pl-k">=</span> <span class="pl-c1">1</span>)</pre></div>
<p>Then, a time series is simulated by</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="y = simulate(1000, model, [10, 0.5, 0.2])[1]
"><pre>y <span class="pl-k">=</span> <span class="pl-c1">simulate</span>(<span class="pl-c1">1000</span>, model, [<span class="pl-c1">10</span>, <span class="pl-c1">0.5</span>, <span class="pl-c1">0.2</span>])[<span class="pl-c1">1</span>]</pre></div>
<p>its parameters estimates</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="res = fit(y, model)
"><pre>res <span class="pl-k">=</span> <span class="pl-c1">fit</span>(y, model)</pre></div>
<p>and finally a 10-step ahead prediction carried out</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="predict(res, 10)
"><pre><span class="pl-c1">predict</span>(res, <span class="pl-c1">10</span>)</pre></div>
<h2><a id="user-content-future-extensions" class="anchor" aria-hidden="true" href="#future-extensions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Future Extensions</h2>
<ul>
<li>Bounded Counts</li>
<li>Functions for marginal mean/variance, ACF, ...</li>
<li>GMM Estimation</li>
<li>Multivariate Processes</li>
</ul>
</article></div>