<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-raytracerjl" class="anchor" aria-hidden="true" href="#raytracerjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>RayTracer.jl</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/avik-pal/RayTracer.jl/workflows/CI/badge.svg?branch=master"><img src="https://github.com/avik-pal/RayTracer.jl/workflows/CI/badge.svg?branch=master" alt="CI" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/avik-pal/RayTracer.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c83dd97b2dd30b4e95790ffd665e9ea9498763747fb2360d853d41763737b174/68747470733a2f2f636f6465636f762e696f2f67682f6176696b2d70616c2f5261795472616365722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/avik-pal/RayTracer.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://avik-pal.github.io/RayTracer.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="Latest Docs" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a>
<a href="https://doi.org/10.21105/jcon.00037" rel="nofollow"><img src="https://camo.githubusercontent.com/da086c601f6eee835b895d4198785e71e9e248a04e07d4975f4b854aa72ec579/68747470733a2f2f70726f63656564696e67732e6a756c6961636f6e2e6f72672f7061706572732f31302e32313130352f6a636f6e2e30303033372f7374617475732e737667" alt="DOI" data-canonical-src="https://proceedings.juliacon.org/papers/10.21105/jcon.00037/status.svg" style="max-width:100%;"></a>
<a href="https://doi.org/10.5281/zenodo.1442781" rel="nofollow"><img src="https://camo.githubusercontent.com/cfd22d339dac7007d5801b4909ba31bd95a10bca94f1c04ec11ab66448f4f74e/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e313434323738312e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.1442781.svg" style="max-width:100%;"></a></p>
<p align="center">
    
</p>
<blockquote>
<p>This package was written in the early days of Flux / Zygote. Both these packages have significantly improved over time. Unfortunately the current state of this package of has not been updated to reflect those improvements. It also seems that it might be better to gradually transition to AD systems like Diffractor (which will potentially have good support for mutations) / define the adjoints directly using ChainRules since Zygote will likely not be having these features (note there has not been an official announcement and the statement is based on some discussions in zulip forum)</p>
</blockquote>
<p>A Ray Tracer written completely in Julia. This allows us to leverage the AD capablities provided by Zygote to differentiate through the Ray Tracer.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>INSTALLATION</h2>
<p>This package is registered. So open up a Julia 1.3+ repl and enter the pkg mode.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ]
(v1.3) pkg&gt; add RayTracer
"><pre>julia<span class="pl-k">&gt;</span> ]
(v1.<span class="pl-c1">3</span>) pkg<span class="pl-k">&gt;</span> add RayTracer</pre></div>
<p>To use the master branch (not recommended) do.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ]
(v1.3) pkg&gt; add RayTracer#master
"><pre>julia<span class="pl-k">&gt;</span> ]
(v1.<span class="pl-c1">3</span>) pkg<span class="pl-k">&gt;</span> add RayTracer<span class="pl-c"><span class="pl-c">#</span>master</span></pre></div>
<h2><a id="user-content-tutorials" class="anchor" aria-hidden="true" href="#tutorials"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TUTORIALS</h2>
<div align="center">
  <table>
    <tbody><tr>
      <th>
        <a href="examples/teapot_rendering.jl">Introductory Rendering Tutorial</a>
      </th>
      <th>
        <a href="examples/inverse_lighting.jl">Inverse Lighting Tutorial</a>
      </th>
      <th>
        <a href="examples/optim_compatibility.jl">Inverse Rendering with Optim.jl Tutorial</a>
      </th>
    </tr>
    <tr>
      <td align="center">
        <a href="examples/teapot_rendering.jl">
          <img border="0" src="paper/images/render/teapot_top.jpg" width="200" height="200" style="max-width:100%;">
        </a>
      </td>
      <td align="center">
        <a href="examples/inverse_lighting.jl">
          <img border="0" src="docs/src/assets/inv_lighting.gif" width="200" height="200" style="max-width:100%;">
        </a>
      </td>
      <td align="center">
        <a href="examples/optim_compatibility.jl">
          <img border="0" src="docs/src/assets/inv_lighting_optim.gif" width="200" height="200" style="max-width:100%;">
        </a>
      </td>
    </tr>
  </tbody></table>
</div>
<h2><a id="user-content-usage-examples" class="anchor" aria-hidden="true" href="#usage-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>USAGE EXAMPLES</h2>
<p>Follow the instructions below to run individual examples or use
<code>examples/script.sh</code> to run all of them together.</p>
<p>First we need to get the versions of the packages used when these
examples were written.</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ cd examples
$ julia --color=yes -e &quot;using Pkg; Pkg.instantiate()&quot;
"><pre>$ <span class="pl-c1">cd</span> examples
$ julia --color=yes -e <span class="pl-s"><span class="pl-pds">"</span>using Pkg; Pkg.instantiate()<span class="pl-pds">"</span></span></pre></div>
<p>Now we can run any of the file we need by
<code>julia --project=. --color=yes "/path/to/file"</code></p>
<h3><a id="user-content-running-individual-examples" class="anchor" aria-hidden="true" href="#running-individual-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Running Individual Examples</h3>
<ul>
<li><a href="examples/teapot_rendering.jl"><code>teapot_rendering.jl</code></a> -- We need to download the <code>teapot.obj</code> file.</li>
</ul>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="wget https://raw.githubusercontent.com/McNopper/OpenGL/master/Binaries/teapot.obj
"><pre><code>wget https://raw.githubusercontent.com/McNopper/OpenGL/master/Binaries/teapot.obj
</code></pre></div>
<ul>
<li><a href="examples/performance_benchmarks.jl"><code>performance_benchmarks.jl</code></a> -- We need the mesh and texture for
the yield sign board.</li>
</ul>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ mkdir meshes
$ cd meshes
$ wget https://raw.githubusercontent.com/avik-pal/RayTracer.jl/master/test/meshes/sign_yield.obj
$ wget https://raw.githubusercontent.com/avik-pal/RayTracer.jl/master/test/meshes/sign_yield.mtl
$ cd ..

$ mkdir textures
$ cd textures
$ wget https://raw.githubusercontent.com/avik-pal/RayTracer.jl/master/test/textures/wood_osb.jpg
$ wget https://raw.githubusercontent.com/avik-pal/RayTracer.jl/master/test/textures/sign_yield.png
$ cd ..
"><pre>$ mkdir meshes
$ <span class="pl-c1">cd</span> meshes
$ wget https://raw.githubusercontent.com/avik-pal/RayTracer.jl/master/test/meshes/sign_yield.obj
$ wget https://raw.githubusercontent.com/avik-pal/RayTracer.jl/master/test/meshes/sign_yield.mtl
$ <span class="pl-c1">cd</span> ..

$ mkdir textures
$ <span class="pl-c1">cd</span> textures
$ wget https://raw.githubusercontent.com/avik-pal/RayTracer.jl/master/test/textures/wood_osb.jpg
$ wget https://raw.githubusercontent.com/avik-pal/RayTracer.jl/master/test/textures/sign_yield.png
$ <span class="pl-c1">cd</span> ..</pre></div>
<p>This example requires a few arguments to be passes from command line. Chack them using</p>
<p><code>julia  --project=. --color=yes "performance_benchmarks.jl" --help</code></p>
<ul>
<li><a href="examples/inverse_lighting.jl"><code>inverse_lighting.jl</code></a> &amp;
<a href="examples/optim_compatibility.jl"><code>optim_compatibility.jl</code></a> -- We need to the <code>tree.mtl</code>
and <code>tree.obj</code> files.</li>
</ul>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ wget https://raw.githubusercontent.com/tejank10/Duckietown.jl/master/src/meshes/tree.obj 
$ wget https://raw.githubusercontent.com/tejank10/Duckietown.jl/master/src/meshes/tree.mtl
"><pre><code>$ wget https://raw.githubusercontent.com/tejank10/Duckietown.jl/master/src/meshes/tree.obj 
$ wget https://raw.githubusercontent.com/tejank10/Duckietown.jl/master/src/meshes/tree.mtl
</code></pre></div>
<h3><a id="user-content-additional-examples" class="anchor" aria-hidden="true" href="#additional-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Additional Examples</h3>
<p><a href="https://github.com/tejank10/Duckietown.jl">Duckietown.jl</a> uses RayTracer.jl for generating renders
of a self-driving car environment. For more complex examples of RayTracer, checkout that project.</p>
<h2><a id="user-content-supporting-and-citing" class="anchor" aria-hidden="true" href="#supporting-and-citing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SUPPORTING AND CITING:</h2>
<p>This software was developed as part of academic research. If you would like to help support it, please star the repository. If you use this software as part of your research, teaching, or other activities, we would be grateful if you could cite the following:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="@article{Pal2020,
  doi = {10.21105/jcon.00037},
  url = {https://doi.org/10.21105/jcon.00037},
  year = {2020},
  publisher = {The Open Journal},
  volume = {1},
  number = {1},
  pages = {37},
  author = {Avik Pal},
  title = {RayTracer.jl: A Differentiable Renderer that supports Parameter Optimization for Scene Reconstruction},
  journal = {Proceedings of the JuliaCon Conferences}
}
"><pre><code>@article{Pal2020,
  doi = {10.21105/jcon.00037},
  url = {https://doi.org/10.21105/jcon.00037},
  year = {2020},
  publisher = {The Open Journal},
  volume = {1},
  number = {1},
  pages = {37},
  author = {Avik Pal},
  title = {RayTracer.jl: A Differentiable Renderer that supports Parameter Optimization for Scene Reconstruction},
  journal = {Proceedings of the JuliaCon Conferences}
}
</code></pre></div>
<h2><a id="user-content-current-roadmap" class="anchor" aria-hidden="true" href="#current-roadmap"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CURRENT ROADMAP</h2>
<p>These are not listed in any particular order</p>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Add more types of common objects (use mesh rendering for this)</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Add support for rendering arbitrary mesh</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Inverse Rendering Examples</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Texture Rendering</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Application in Machine Learning Models through Flux (work in progress)</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Major Overhaul using Flux3D.jl</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Exploit the latest improvements to Flux and Zygote</li>
</ul>
</article></div>