<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><br>
<div align="center" dir="auto">
    <a target="_blank" rel="noopener noreferrer" href="docs/src/assets/header.svg?maxAge=0"><img src="docs/src/assets/header.svg?maxAge=0" width="80%" style="max-width: 100%;"></a>
</div>
<h1 dir="auto"><a id="user-content-constraint-based-reconstruction-and-exascale-analysis" class="anchor" aria-hidden="true" href="#constraint-based-reconstruction-and-exascale-analysis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>COnstraint-Based Reconstruction and EXascale Analysis</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Tests</strong></th>
<th align="center"><strong>Coverage</strong></th>
<th align="center"><strong>How to contribute?</strong></th>
<th align="center"><strong>Project status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://lcsb-biocore.github.io/COBREXA.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="docs-img-stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://lcsb-biocore.github.io/COBREXA.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/550708fa371774af20c0e636a8977044b5baf1a3cb9347baad949a59b0883a82/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d3061662e737667" alt="docs-img-dev" data-canonical-src="https://img.shields.io/badge/docs-latest-0af.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/LCSB-BioCore/COBREXA.jl/actions/workflows/ci.yml"><img src="https://github.com/LCSB-BioCore/COBREXA.jl/actions/workflows/ci.yml/badge.svg?branch=master" alt="CI" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/LCSB-BioCore/COBREXA.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6d7b7d272290058c133071a510d4e07d45f6a7965063ea62ba28db0dd93935de/68747470733a2f2f636f6465636f762e696f2f67682f4c4353422d42696f436f72652f434f42524558412e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d48335753574f4244374c" alt="codecov" data-canonical-src="https://codecov.io/gh/LCSB-BioCore/COBREXA.jl/branch/master/graph/badge.svg?token=H3WSWOBD7L" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://lcsb-biocore.github.io/COBREXA.jl/stable/howToContribute/" rel="nofollow"><img src="https://camo.githubusercontent.com/08ef609d71e6a31085ffebc02d41cf31cfa276c03f674474bd9dde7d54e76446/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d7374617274253230686572652d677265656e" alt="contrib" data-canonical-src="https://img.shields.io/badge/contributions-start%20here-green" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/2261082c77808ea734741b12e535d02d23c4101f6b8dfec807f4ddc5ef2eeec0/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="repostatus-img" data-canonical-src="https://www.repostatus.org/badges/latest/active.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">This package provides constraint-based reconstruction and analysis tools for
exa-scale metabolic modeling in Julia.</p>
<h2 dir="auto"><a id="user-content-how-to-get-started" class="anchor" aria-hidden="true" href="#how-to-get-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to get started</h2>
<h3 dir="auto"><a id="user-content-prerequisites-and-requirements" class="anchor" aria-hidden="true" href="#prerequisites-and-requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Prerequisites and requirements</h3>
<ul dir="auto">
<li><strong>Operating system</strong>: Use Linux (Debian, Ubuntu or centOS), MacOS, or Windows
10 as your operating system. <code>COBREXA</code> has been tested on these systems.</li>
<li><strong>Julia language</strong>: In order to use <code>COBREXA</code>, you need to install Julia 1.0
or higher. Download and follow the installation instructions for Julia
<a href="https://julialang.org/downloads/" rel="nofollow">here</a>.</li>
<li><strong>Hardware requirements</strong>: <code>COBREXA</code> runs on any hardware that can run Julia,
and can easily use resources from multiple computers interconnected on a
network. For processing large datasets, you are required to ensure that the
total amount of available RAM on all involved computers is larger than the
data size.</li>
<li><strong>Optimization solvers</strong>: <code>COBREXA</code> uses
<a href="https://github.com/jump-dev/JuMP.jl"><code>JuMP.jl</code></a> to formulate optimization
problems and is compatible with all <a href="https://jump.dev/JuMP.jl/stable/installation/#Supported-solvers" rel="nofollow"><code>JuMP</code> supported
solvers</a>.
However, to perform analysis at least one of these solvers needs to be
installed on your machine. For a pure Julia implementation, you may use e.g.
<a href="https://github.com/ds4dm/Tulip.jl"><code>Tulip.jl</code></a>, but other solvers (GLPK,
Gurobi, ...) work just as well.</li>
</ul>
<p dir="auto"><g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png">ðŸ’¡</g-emoji> If you are new to Julia, it is advisable to <a href="https://docs.julialang.org/en/v1/manual/getting-started/" rel="nofollow">familiarize yourself with
the environment
first</a>.  Use the
Julia <a href="https://docs.julialang.org" rel="nofollow">documentation</a> to solve various
language-related issues, and the <a href="https://julialang.github.io/Pkg.jl/v1/getting-started/" rel="nofollow">Julia package manager
docs</a> to solve
installation-related difficulties. Of course, <a href="https://discourse.julialang.org/" rel="nofollow">the Julia
channel</a> is another fast and easy way to find
answers to Julia specific questions.</p>
<h3 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick start</h3>
<p dir="auto"><a href="https://lcsb-biocore.github.io/COBREXA.jl" rel="nofollow">COBREXA.jl documentation</a>
is available online (also for
<a href="https://lcsb-biocore.github.io/COBREXA.jl/dev/" rel="nofollow">development version</a>
of the package).</p>

<p dir="auto">You can install COBREXA from Julia repositories. Start <code>julia</code>, <strong>press <code>]</code></strong> to
switch to the Packaging environment, and type:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="add COBREXA"><pre class="notranslate"><code>add COBREXA
</code></pre></div>
<p dir="auto">You also need to install your favorite solver supported by <code>JuMP.jl</code> (such as
Gurobi, Mosek, CPLEX, GLPK, Clarabel, etc., see a <a href="https://jump.dev/JuMP.jl/stable/installation/#Supported-solvers" rel="nofollow">list
here</a>).  For
example, you can install <code>Tulip.jl</code> solver by typing:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="add Tulip"><pre class="notranslate"><code>add Tulip
</code></pre></div>
<p dir="auto">Alternatively, you may use <a href="#prebuilt-images">prebuilt Docker and Apptainer images</a>.</p>
<p dir="auto">If you are running COBREXA.jl for the first time, it is very likely that upon
installing and importing the packages, your Julia installation will need to
precompile their source code from the scratch. In fresh installations, the
precompilation process should take less than 5 minutes.</p>
<p dir="auto">When the packages are installed, switch back to the "normal" julia shell by
pressing Backspace (the prompt should change color back to green). After that,
you can download <a href="http://bigg.ucsd.edu/models/e_coli_core" rel="nofollow">a SBML model from the
internet</a> and perform a
flux balance analysis as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using COBREXA   # loads the package
using Tulip     # loads the optimization solver

# download the model
download(&quot;http://bigg.ucsd.edu/static/models/e_coli_core.xml&quot;, &quot;e_coli_core.xml&quot;)

# open the SBML file and load the contents
model = load_model(&quot;e_coli_core.xml&quot;)

# run a FBA
fluxes = flux_balance_analysis_dict(model, Tulip.Optimizer)"><pre><span class="pl-k">using</span> COBREXA   <span class="pl-c"><span class="pl-c">#</span> loads the package</span>
<span class="pl-k">using</span> Tulip     <span class="pl-c"><span class="pl-c">#</span> loads the optimization solver</span>

<span class="pl-c"><span class="pl-c">#</span> download the model</span>
<span class="pl-c1">download</span>(<span class="pl-s"><span class="pl-pds">"</span>http://bigg.ucsd.edu/static/models/e_coli_core.xml<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>e_coli_core.xml<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> open the SBML file and load the contents</span>
model <span class="pl-k">=</span> <span class="pl-c1">load_model</span>(<span class="pl-s"><span class="pl-pds">"</span>e_coli_core.xml<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> run a FBA</span>
fluxes <span class="pl-k">=</span> <span class="pl-c1">flux_balance_analysis_dict</span>(model, Tulip<span class="pl-k">.</span>Optimizer)</pre></div>
<p dir="auto">The variable <code>fluxes</code> will now contain a dictionary of the computed optimal
flux of each reaction in the model:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Dict{String,Float64} with 95 entries:
  &quot;R_EX_fum_e&quot;    =&gt; 0.0
  &quot;R_ACONTb&quot;      =&gt; 6.00725
  &quot;R_TPI&quot;         =&gt; 7.47738
  &quot;R_SUCOAS&quot;      =&gt; -5.06438
  &quot;R_GLNS&quot;        =&gt; 0.223462
  &quot;R_EX_pi_e&quot;     =&gt; -3.2149
  &quot;R_PPC&quot;         =&gt; 2.50431
  &quot;R_O2t&quot;         =&gt; 21.7995
  &quot;R_G6PDH2r&quot;     =&gt; 4.95999
  &quot;R_TALA&quot;        =&gt; 1.49698
  â‹®               =&gt; â‹®"><pre class="notranslate"><code>Dict{String,Float64} with 95 entries:
  "R_EX_fum_e"    =&gt; 0.0
  "R_ACONTb"      =&gt; 6.00725
  "R_TPI"         =&gt; 7.47738
  "R_SUCOAS"      =&gt; -5.06438
  "R_GLNS"        =&gt; 0.223462
  "R_EX_pi_e"     =&gt; -3.2149
  "R_PPC"         =&gt; 2.50431
  "R_O2t"         =&gt; 21.7995
  "R_G6PDH2r"     =&gt; 4.95999
  "R_TALA"        =&gt; 1.49698
  â‹®               =&gt; â‹®
</code></pre></div>

<p dir="auto">The main feature of COBREXA.jl is the ability to easily specify and process a
huge number of analyses in parallel. You. You can have a look at a
<a href="https://lcsb-biocore.github.io/COBREXA.jl/stable/quickstart/" rel="nofollow">longer guide that describes the parallelization and screening functionality</a>,
or dive into the <a href="https://lcsb-biocore.github.io/COBREXA.jl/stable/examples/" rel="nofollow">example analysis workflows</a>.</p>
<h3 dir="auto"><a id="user-content-testing-the-installation" class="anchor" aria-hidden="true" href="#testing-the-installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Testing the installation</h3>
<p dir="auto">If you run a non-standard platform (e.g. a customized operating system), or if
you added any modifications to the <code>COBREXA</code> source code, you may want to run
the test suite to ensure that everything works as expected:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] test COBREXA"><pre>] test COBREXA</pre></div>
<h3 dir="auto"><a id="user-content-prebuilt-images-" class="anchor" aria-hidden="true" href="#prebuilt-images-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Prebuilt images <a href="https://hub.docker.com/r/lcsbbiocore/cobrexa.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ddeba7f4e46c0478bdc2b49f3de195c678c94b8d840923448669e552f111ca32/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f696d6167652d73697a652f6c63736262696f636f72652f636f62726578612e6a6c" alt="docker" data-canonical-src="https://img.shields.io/docker/image-size/lcsbbiocore/cobrexa.jl" style="max-width: 100%;"></a></h3>
<p dir="auto">Docker image is available from the docker hub as
<a href="https://hub.docker.com/r/lcsbbiocore/cobrexa.jl" rel="nofollow">lcsbbiocore/cobrexa.jl</a>, and from GitHub container repository.
Download and use them as usual with docker:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="docker run -ti --rm lcsbbiocore/cobrexa.jl:latest

# or alternatively from ghcr.io
docker run -ti --rm ghcr.io/lcsb-biocore/docker/cobrexa.jl:latest"><pre>docker run -ti --rm lcsbbiocore/cobrexa.jl:latest

<span class="pl-c"><span class="pl-c">#</span> or alternatively from ghcr.io</span>
docker run -ti --rm ghcr.io/lcsb-biocore/docker/cobrexa.jl:latest</pre></div>
<p dir="auto">In the container, you should get a <code>julia</code> shell with the important packages
already installed, and you may immediately continue the above tutorial from
<code>using COBREXA</code>.</p>
<p dir="auto">Apptainer (aka Singularity) images are available from GitHub container
repository. To start one, run:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="singularity run oras://ghcr.io/lcsb-biocore/apptainer/cobrexa.jl:latest"><pre>singularity run oras://ghcr.io/lcsb-biocore/apptainer/cobrexa.jl:latest</pre></div>
<p dir="auto">...which gives you a running Julia session with COBREXA.jl loaded.</p>
<p dir="auto">If you require precise reproducibility, use a tag like <code>v1.2.2</code> instead of
<code>latest</code> (all releases since 1.2.2 are tagged this way).</p>

<h2 dir="auto"><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgements</h2>
<p dir="auto"><code>COBREXA.jl</code> is developed at the Luxembourg Centre for Systems Biomedicine of
the University of Luxembourg (<a href="https://wwwen.uni.lu/lcsb" rel="nofollow">uni.lu/lcsb</a>),
cooperating with the Institute for Quantitative and Theoretical Biology at the Heinrich
Heine University in DÃ¼sseldorf (<a href="https://www.qtb.hhu.de/" rel="nofollow">qtb.hhu.de</a>).</p>
<p dir="auto">The development was supported by European Union's Horizon 2020 Programme under
PerMedCoE project (<a href="https://permedcoe.eu/" rel="nofollow">permedcoe.eu</a>) agreement no. 951773.</p>

<p dir="auto">If you use COBREXA.jl and want to refer to it in your work, use the following
citation format (also available as BibTeX in <a href="cobrexa.bib">cobrexa.bib</a>):</p>
<blockquote>
<p dir="auto">Miroslav KratochvÃ­l, Laurent Heirendt, St Elmo Wilken, Taneli Pusa, Sylvain Arreckx, Alberto Noronha, Marvin van Aalst, Venkata P Satagopam, Oliver EbenhÃ¶h, Reinhard Schneider, Christophe Trefois, Wei Gu, <em>COBREXA.jl: constraint-based reconstruction and exascale analysis</em>, Bioinformatics, Volume 38, Issue 4, 15 February 2022, Pages 1171â€“1172, <a href="https://doi.org/10.1093/bioinformatics/btab782" rel="nofollow">https://doi.org/10.1093/bioinformatics/btab782</a></p>
</blockquote>

<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/6c8149fad44a647957cad4662fd592f9fbaf3025603874e3f9896163c48e51c8/68747470733a2f2f6c6373622d62696f636f72652e6769746875622e696f2f434f42524558412e6a6c2f737461626c652f6173736574732f636f62726578612e737667"><img src="https://camo.githubusercontent.com/6c8149fad44a647957cad4662fd592f9fbaf3025603874e3f9896163c48e51c8/68747470733a2f2f6c6373622d62696f636f72652e6769746875622e696f2f434f42524558412e6a6c2f737461626c652f6173736574732f636f62726578612e737667" alt="COBREXA logo" height="64px" style="height: 64px; max-width: 100%;" data-canonical-src="https://lcsb-biocore.github.io/COBREXA.jl/stable/assets/cobrexa.svg"></a>â€‡â€‡â€‡<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/e6a7976322d8c6c85cff60c0f04bc1888c092e6535a8d5961b44029e44f4f2b5/68747470733a2f2f6c6373622d62696f636f72652e6769746875622e696f2f434f42524558412e6a6c2f737461626c652f6173736574732f756e696c752e737667"><img src="https://camo.githubusercontent.com/e6a7976322d8c6c85cff60c0f04bc1888c092e6535a8d5961b44029e44f4f2b5/68747470733a2f2f6c6373622d62696f636f72652e6769746875622e696f2f434f42524558412e6a6c2f737461626c652f6173736574732f756e696c752e737667" alt="Uni.lu logo" height="64px" style="height: 64px; max-width: 100%;" data-canonical-src="https://lcsb-biocore.github.io/COBREXA.jl/stable/assets/unilu.svg"></a>â€‡â€‡â€‡<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/652ecaf604aac4c718884d8e87583ff3cb7091279bd8975c8770d1a3acaed45f/68747470733a2f2f6c6373622d62696f636f72652e6769746875622e696f2f434f42524558412e6a6c2f737461626c652f6173736574732f6c6373622e737667"><img src="https://camo.githubusercontent.com/652ecaf604aac4c718884d8e87583ff3cb7091279bd8975c8770d1a3acaed45f/68747470733a2f2f6c6373622d62696f636f72652e6769746875622e696f2f434f42524558412e6a6c2f737461626c652f6173736574732f6c6373622e737667" alt="LCSB logo" height="64px" style="height: 64px; max-width: 100%;" data-canonical-src="https://lcsb-biocore.github.io/COBREXA.jl/stable/assets/lcsb.svg"></a>â€‡â€‡â€‡<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/d28f7ace1aa98a8d38702641ab93917adf6abcd76a858018dd792cc270206466/68747470733a2f2f6c6373622d62696f636f72652e6769746875622e696f2f434f42524558412e6a6c2f737461626c652f6173736574732f6868752e737667"><img src="https://camo.githubusercontent.com/d28f7ace1aa98a8d38702641ab93917adf6abcd76a858018dd792cc270206466/68747470733a2f2f6c6373622d62696f636f72652e6769746875622e696f2f434f42524558412e6a6c2f737461626c652f6173736574732f6868752e737667" alt="HHU logo" height="64px" style="height: 64px; max-width: 100%;" data-canonical-src="https://lcsb-biocore.github.io/COBREXA.jl/stable/assets/hhu.svg"></a>â€‡â€‡â€‡<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ba6724920540fba9071fb7d2af68bb933024751a1500158de15b7a9a75e78903/68747470733a2f2f6c6373622d62696f636f72652e6769746875622e696f2f434f42524558412e6a6c2f737461626c652f6173736574732f7174622e737667"><img src="https://camo.githubusercontent.com/ba6724920540fba9071fb7d2af68bb933024751a1500158de15b7a9a75e78903/68747470733a2f2f6c6373622d62696f636f72652e6769746875622e696f2f434f42524558412e6a6c2f737461626c652f6173736574732f7174622e737667" alt="QTB logo" height="64px" style="height: 64px; max-width: 100%;" data-canonical-src="https://lcsb-biocore.github.io/COBREXA.jl/stable/assets/qtb.svg"></a>â€‡â€‡â€‡<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/311f1f511f9740e72a82f67921a2824fb33cfe3e095f6e2da83dd2fca13dd7bf/68747470733a2f2f6c6373622d62696f636f72652e6769746875622e696f2f434f42524558412e6a6c2f737461626c652f6173736574732f7065726d6564636f652e737667"><img src="https://camo.githubusercontent.com/311f1f511f9740e72a82f67921a2824fb33cfe3e095f6e2da83dd2fca13dd7bf/68747470733a2f2f6c6373622d62696f636f72652e6769746875622e696f2f434f42524558412e6a6c2f737461626c652f6173736574732f7065726d6564636f652e737667" alt="PerMedCoE logo" height="64px" style="height: 64px; max-width: 100%;" data-canonical-src="https://lcsb-biocore.github.io/COBREXA.jl/stable/assets/permedcoe.svg"></a></p>

</article></div>