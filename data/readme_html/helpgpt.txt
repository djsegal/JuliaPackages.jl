<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-helpgpt" class="anchor" aria-hidden="true" href="#helpgpt"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>HelpGPT</h1>
<p dir="auto">Combining <a href="https://github.com/ThatcherC/ReplGPT.jl">ReplGPT.jl</a> and <a href="https://github.com/FedeClaudi/Term.jl">Term.jl</a> to get style error messages and AI-generated help in the REPL.</p>
<p dir="auto">The help messages are generated using GPT-3, a state-of-the-art language model from OpenAI. The code for interactive with the OpenAI API is based on <code>ReplGPT.jl</code>.</p>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting Started:</h2>
<p dir="auto">You will need to obtain an OpenAI API key from <a href="openai.com">openai.com</a> and pass it to Julia. HelpGPT.jl
will look for an API key in the module's settings and in
the <code>OPENAI_API_KEY</code> environment variable as a fallback.</p>
<p dir="auto">The <strong>recommended approach</strong> is to save the API key in the
module's settings by running:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using HelpGPT

julia&gt; HelpGPT.setAPIkey(&quot;&lt;YOUR KEY HERE&gt;&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> HelpGPT

julia<span class="pl-k">&gt;</span> HelpGPT<span class="pl-k">.</span><span class="pl-c1">setAPIkey</span>(<span class="pl-s"><span class="pl-pds">"</span>&lt;YOUR KEY HERE&gt;<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The API key can later be cleared with <code>HelpGPT.clearAPIkey()</code>.</p>
<p dir="auto"><strong>Note:</strong> with this approach your API key will be stored in plaintext in a
<code>LocalPreferences.toml</code> folder in your environment directory. For example, on a Linux computer running Julia 1.8, the key is
stored in
<code>~/.julia/environments/v1.8/LocalPreferences.toml</code>.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">After that, you just need to:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using HelpGPT
HelpGPT.install_help_stacktrace()"><pre><span class="pl-k">using</span> HelpGPT
HelpGPT<span class="pl-k">.</span><span class="pl-c1">install_help_stacktrace</span>()</pre></div>
<p dir="auto">after that, all errors will be styled and the help messages will be generated by GPT-3.</p>
<p dir="auto">--- WARNING ---
This overrides Julia's error printing and stacktrace printing, which means you probably shouldn't use this in a production environment.
See <a href="https://fedeclaudi.github.io/Term.jl/dev/adv/errors_tracebacks/" rel="nofollow">here</a> for more details.</p>
</article></div>