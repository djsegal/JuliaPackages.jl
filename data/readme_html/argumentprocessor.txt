<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-argumentprocessor" class="anchor" aria-hidden="true" href="#argumentprocessor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ArgumentProcessor</h1>
<p dir="auto">A module to help parse command line arguments and parameters.</p>
<h2 dir="auto"><a id="user-content-structure" class="anchor" aria-hidden="true" href="#structure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Structure</h2>
<p dir="auto">There are three type of input arguments:</p>
<ul dir="auto">
<li><code>Flag</code> arguments that are not assigned with values.(Or it can be seen as logical value)</li>
<li><code>Option</code> arguments that are specified with both name and value</li>
<li><code>Parameter</code> arguments that are distinguished by position</li>
</ul>
<p dir="auto">The arguments can be divided to several <code>Group</code></p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-flag" class="anchor" aria-hidden="true" href="#flag"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>Flag</code></h3>
<p dir="auto">The <code>Flag</code> type can be created by</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Flag(innername::AbstractString; outername::AbstractString = &quot;&quot;,
    abbr::AbstractString = &quot;&quot;, help::AbstractString = &quot;&quot;)
@flag_str &quot;--flag&quot;
flag&quot;--flag&quot;"><pre><span class="pl-c1">Flag</span>(innername<span class="pl-k">::</span><span class="pl-c1">AbstractString</span>; outername<span class="pl-k">::</span><span class="pl-c1">AbstractString</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>,
    abbr<span class="pl-k">::</span><span class="pl-c1">AbstractString</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>, help<span class="pl-k">::</span><span class="pl-c1">AbstractString</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>)
<span class="pl-c1">@flag_str</span> <span class="pl-s"><span class="pl-pds">"</span>--flag<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">flag</span>"</span>--flag<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">when generating <code>Flag</code> type using macro, the other properties like <code>abbr</code>, <code>help</code> can't be specified.</p>
<h3 dir="auto"><a id="user-content-option" class="anchor" aria-hidden="true" href="#option"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>Option</code></h3>
<p dir="auto"><code>Option</code> type can be created by</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Option(innername::AbstractString; outername::AbstractString = &quot;&quot;,
    abbr::AbstractString = &quot;&quot;, default::AbstractString = &quot;&quot;,
    fmt::AbstractString = &quot;%s&quot;, required::Bool = false,
    help::AbstractString = &quot;&quot;)
@opt_str &quot;--optionFmt&quot;
opt&quot;--optionFmt&quot;"><pre><span class="pl-c1">Option</span>(innername<span class="pl-k">::</span><span class="pl-c1">AbstractString</span>; outername<span class="pl-k">::</span><span class="pl-c1">AbstractString</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>,
    abbr<span class="pl-k">::</span><span class="pl-c1">AbstractString</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>, default<span class="pl-k">::</span><span class="pl-c1">AbstractString</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>,
    fmt<span class="pl-k">::</span><span class="pl-c1">AbstractString</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>%s<span class="pl-pds">"</span></span>, required<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>,
    help<span class="pl-k">::</span><span class="pl-c1">AbstractString</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>)
<span class="pl-c1">@opt_str</span> <span class="pl-s"><span class="pl-pds">"</span>--optionFmt<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">opt</span>"</span>--optionFmt<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">When using macros to create <code>Option</code> type, one can only specify the name and input format. To add more information,
using function format instead. The <code>Fmt</code> represent the input format, see next chapter for detail.</p>
<h3 dir="auto"><a id="user-content-parameter" class="anchor" aria-hidden="true" href="#parameter"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>Parameter</code></h3>
<p dir="auto">The <code>Parameter</code> can be created by</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Parameter(position::Int; innername::AbstractString = &quot;&quot;,
    default::AbstractString = &quot;&quot;, fmt::AbstractString = &quot;%s&quot;,
    required::Bool = false, help::AbstractString = &quot;&quot;)"><pre><span class="pl-c1">Parameter</span>(position<span class="pl-k">::</span><span class="pl-c1">Int</span>; innername<span class="pl-k">::</span><span class="pl-c1">AbstractString</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>,
    default<span class="pl-k">::</span><span class="pl-c1">AbstractString</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>, fmt<span class="pl-k">::</span><span class="pl-c1">AbstractString</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>%s<span class="pl-pds">"</span></span>,
    required<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>, help<span class="pl-k">::</span><span class="pl-c1">AbstractString</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The <code>Parameter</code> type is recognized by position, and the innername will be <code>par1</code>, <code>par2</code>, ...
if <code>innername</code> is not specified.</p>
<h3 dir="auto"><a id="user-content-group" class="anchor" aria-hidden="true" href="#group"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>Group</code></h3>
<p dir="auto">A <code>Group</code> contains several <code>Flag</code>, <code>Option</code> and <code>Parameter</code>, which is created by</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Group(name::AbstractString, flags::Vector{Flag}=Flag[],
    opts::Vector{Option}=Option[], pars::Vector{Parameter}=Parameter[])"><pre><span class="pl-c1">Group</span>(name<span class="pl-k">::</span><span class="pl-c1">AbstractString</span>, flags<span class="pl-k">::</span><span class="pl-c1">Vector{Flag}</span><span class="pl-k">=</span>Flag[],
    opts<span class="pl-k">::</span><span class="pl-c1">Vector{Option}</span><span class="pl-k">=</span>Option[], pars<span class="pl-k">::</span><span class="pl-c1">Vector{Parameter}</span><span class="pl-k">=</span>Parameter[])</pre></div>
<h3 dir="auto"><a id="user-content-input-format" class="anchor" aria-hidden="true" href="#input-format"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Input format</h3>
<p dir="auto">The input format is indicated by a C-like string.
The symbols below
<code>"%s", "%f", "%g", "%h", "%o", "%b", "%c", "%d", "%l"</code>
describ the data type, and other symbols will be explained to delimiter.</p>
<p dir="auto">Their meanings are:</p>
<ul dir="auto">
<li><code>"%s"</code>        string</li>
<li><code>"%f"/"%g"</code>   decimal float</li>
<li><code>"%c"</code>        complex float</li>
<li><code>"%h"</code>        hexadecimal <strong>integer</strong></li>
<li><code>"%o"</code>        octal <strong>integer</strong></li>
<li><code>"%b"</code>        binary <strong>integer</strong></li>
<li><code>"%d"</code>        integer</li>
<li><code>"%l"</code>        logical (true, false, 0 or 1)</li>
</ul>
<h2 dir="auto"><a id="user-content-quick-example" class="anchor" aria-hidden="true" href="#quick-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick example</h2>
<h3 dir="auto"><a id="user-content-example-1-using-defined-group" class="anchor" aria-hidden="true" href="#example-1-using-defined-group"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example 1 (using defined <code>Group</code>)</h3>
<p dir="auto">Set julia script like:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ArgumentProcessor

group = Group(
    &quot;group1&quot;,
    [
        Flag(&quot;flag1&quot;)
    ],
    [
        Option(&quot;float&quot;, abbr=&quot;F&quot;, fmt=&quot; %f&quot;, help=&quot;Input a float&quot;,
            required=true), # pay attention to the space before %f
        Option(&quot;datatime&quot;, abbr=&quot;D&quot;, fmt=&quot;%d/%d/%dT%d:%d:%f&quot;,
            help=&quot;Input a datetime format&quot;),
        Option(&quot;string&quot;, abbr=&quot;S&quot;, fmt=&quot; \&quot;%s\&quot;&quot;) # had better add &quot; around the string
    ],
    [
        Parameter(1, fmt=&quot;%f&quot;, default=&quot;0.1&quot;, help=&quot;First float parameter&quot;)
    ]
)

input = ArgumentProcessor.parse(ARGS, group)"><pre><span class="pl-k">using</span> ArgumentProcessor

group <span class="pl-k">=</span> <span class="pl-c1">Group</span>(
    <span class="pl-s"><span class="pl-pds">"</span>group1<span class="pl-pds">"</span></span>,
    [
        <span class="pl-c1">Flag</span>(<span class="pl-s"><span class="pl-pds">"</span>flag1<span class="pl-pds">"</span></span>)
    ],
    [
        <span class="pl-c1">Option</span>(<span class="pl-s"><span class="pl-pds">"</span>float<span class="pl-pds">"</span></span>, abbr<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>F<span class="pl-pds">"</span></span>, fmt<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span> %f<span class="pl-pds">"</span></span>, help<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Input a float<span class="pl-pds">"</span></span>,
            required<span class="pl-k">=</span><span class="pl-c1">true</span>), <span class="pl-c"><span class="pl-c">#</span> pay attention to the space before %f</span>
        <span class="pl-c1">Option</span>(<span class="pl-s"><span class="pl-pds">"</span>datatime<span class="pl-pds">"</span></span>, abbr<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>D<span class="pl-pds">"</span></span>, fmt<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>%d/%d/%dT%d:%d:%f<span class="pl-pds">"</span></span>,
            help<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Input a datetime format<span class="pl-pds">"</span></span>),
        <span class="pl-c1">Option</span>(<span class="pl-s"><span class="pl-pds">"</span>string<span class="pl-pds">"</span></span>, abbr<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>S<span class="pl-pds">"</span></span>, fmt<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span> <span class="pl-cce">\"</span>%s<span class="pl-cce">\"</span><span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> had better add " around the string</span>
    ],
    [
        <span class="pl-c1">Parameter</span>(<span class="pl-c1">1</span>, fmt<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>%f<span class="pl-pds">"</span></span>, default<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>0.1<span class="pl-pds">"</span></span>, help<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>First float parameter<span class="pl-pds">"</span></span>)
    ]
)

input <span class="pl-k">=</span> ArgumentProcessor<span class="pl-k">.</span><span class="pl-c1">parse</span>(<span class="pl-c1">ARGS</span>, group)</pre></div>
<p dir="auto">and run the script using</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia -- program.jl --flag1 --float 0.1 -D2022/01/01T10:01:10.5 --string '&quot;filename&quot;'"><pre>julia -- program.jl --flag1 --float 0.1 -D2022/01/01T10:01:10.5 --string <span class="pl-s"><span class="pl-pds">'</span>"filename"<span class="pl-pds">'</span></span></pre></div>
<p dir="auto">the input will be parsed to</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="(flag1 = true, float = 0.1, datatime = (2022, 1, 1, 10, 1, 10.5),
    string = &quot;filename&quot;, par1 = 0.1)"><pre>(flag1 <span class="pl-k">=</span> <span class="pl-c1">true</span>, float <span class="pl-k">=</span> <span class="pl-c1">0.1</span>, datatime <span class="pl-k">=</span> (<span class="pl-c1">2022</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">10</span>, <span class="pl-c1">1</span>, <span class="pl-c1">10.5</span>),
    string <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>filename<span class="pl-pds">"</span></span>, par1 <span class="pl-k">=</span> <span class="pl-c1">0.1</span>)</pre></div>
<hr>
<p dir="auto">when run the script using</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia -- program.jl --help"><pre>julia -- program.jl --help</pre></div>
<p dir="auto">it will print text like</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ julia program.jl --help
Usage: test.jl [--datatime(int)/(int)/(int)T(int):(int):(float)|-D(int)/(int)/(int)T(int):(int):(float)] [--flag1] --float (float)|-F (float) [--string &quot;(string)&quot;|-S &quot;(string)&quot;] [par1(float)]

Example:
    test.jl --datatime1/1/1T1:1:1.0 --flag1 --float 1.0 --string &quot;&quot;1&quot;&quot; 0.1

Argument:

    -D, --datatime Input a datetime format
        --flag1
    -F, --float    Input a float
    -S, --string
        par1       First float parameter"><pre>$ julia program.jl --help
Usage: test.jl [--datatime(int)/(int)/(int)T(int):(int):(float)<span class="pl-k">|</span>-D(int)/(int)/(int)T(int):(int):(float)] [--flag1] --float (float)<span class="pl-k">|</span>-F (float) [--string <span class="pl-s"><span class="pl-pds">"</span>(string)<span class="pl-pds">"</span></span><span class="pl-k">|</span>-S <span class="pl-s"><span class="pl-pds">"</span>(string)<span class="pl-pds">"</span></span>] [par1(float)]

Example:
    test.jl --datatime1/1/1T1:1:1.0 --flag1 --float 1.0 --string <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>1<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span> 0.1

Argument:

    -D, --datatime Input a datetime format
        --flag1
    -F, --float    Input a float
    -S, --string
        par1       First float parameter</pre></div>
<h3 dir="auto"><a id="user-content-example-2-using-inner-buffer" class="anchor" aria-hidden="true" href="#example-2-using-inner-buffer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example 2 (using inner buffer)</h3>
<p dir="auto">Set julia script like:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ArgumentProcessor
addflag!(&quot;flag1&quot;)
addopt!(&quot;float&quot;, abbr=&quot;F&quot;, fmt=&quot; %f&quot;, help=&quot;Input a float&quot;, required=true)
addopt!(&quot;datetime&quot;, abbr=&quot;D&quot;, fmt=&quot;%d/%d/%dT%d:%d:%f&quot;, help=&quot;Input a datetime format&quot;)
addopt!(&quot;string&quot;, abbr=&quot;S&quot;, fmt=&quot; \&quot;%s\&quot;&quot;)
addpar!(1; fmt=&quot;%f&quot;, default=&quot;0.1&quot;, help=&quot;First float parameter&quot;)
input = ArgumentProcessor.parse(ARGS)"><pre><span class="pl-k">using</span> ArgumentProcessor
<span class="pl-c1">addflag!</span>(<span class="pl-s"><span class="pl-pds">"</span>flag1<span class="pl-pds">"</span></span>)
<span class="pl-c1">addopt!</span>(<span class="pl-s"><span class="pl-pds">"</span>float<span class="pl-pds">"</span></span>, abbr<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>F<span class="pl-pds">"</span></span>, fmt<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span> %f<span class="pl-pds">"</span></span>, help<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Input a float<span class="pl-pds">"</span></span>, required<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">addopt!</span>(<span class="pl-s"><span class="pl-pds">"</span>datetime<span class="pl-pds">"</span></span>, abbr<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>D<span class="pl-pds">"</span></span>, fmt<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>%d/%d/%dT%d:%d:%f<span class="pl-pds">"</span></span>, help<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Input a datetime format<span class="pl-pds">"</span></span>)
<span class="pl-c1">addopt!</span>(<span class="pl-s"><span class="pl-pds">"</span>string<span class="pl-pds">"</span></span>, abbr<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>S<span class="pl-pds">"</span></span>, fmt<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span> <span class="pl-cce">\"</span>%s<span class="pl-cce">\"</span><span class="pl-pds">"</span></span>)
<span class="pl-c1">addpar!</span>(<span class="pl-c1">1</span>; fmt<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>%f<span class="pl-pds">"</span></span>, default<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>0.1<span class="pl-pds">"</span></span>, help<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>First float parameter<span class="pl-pds">"</span></span>)
input <span class="pl-k">=</span> ArgumentProcessor<span class="pl-k">.</span><span class="pl-c1">parse</span>(<span class="pl-c1">ARGS</span>)</pre></div>
<p dir="auto">and it will act as <code>Example 1</code></p>
<h3 dir="auto"><a id="user-content-example-3-save-or-load-settings" class="anchor" aria-hidden="true" href="#example-3-save-or-load-settings"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example 3 (save or load settings)</h3>
<p dir="auto">The settings can be parsed to <code>Dict</code> type to save,
and can be parsed from loaded <code>Dict</code> type.</p>
<p dir="auto">you can save with script below:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ArgumentProcessor, TOML

addflag!(&quot;flag1&quot;)
addopt!(&quot;float&quot;, abbr=&quot;F&quot;, fmt=&quot; %f&quot;, help=&quot;Input a float&quot;, required=true)
addopt!(&quot;datetime&quot;, abbr=&quot;D&quot;, fmt=&quot;%d/%d/%dT%d:%d:%f&quot;, help=&quot;Input a datetime format&quot;)
addopt!(&quot;string&quot;, abbr=&quot;S&quot;, fmt=&quot; \&quot;%s\&quot;&quot;)
addpar!(1; fmt=&quot;%f&quot;, default=&quot;0.1&quot;, help=&quot;First float parameter&quot;)

open(&quot;arg_setting.toml&quot;, &quot;w&quot;) do io
    TOML.print(io, Dict(group))
end"><pre><span class="pl-k">using</span> ArgumentProcessor, TOML

<span class="pl-c1">addflag!</span>(<span class="pl-s"><span class="pl-pds">"</span>flag1<span class="pl-pds">"</span></span>)
<span class="pl-c1">addopt!</span>(<span class="pl-s"><span class="pl-pds">"</span>float<span class="pl-pds">"</span></span>, abbr<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>F<span class="pl-pds">"</span></span>, fmt<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span> %f<span class="pl-pds">"</span></span>, help<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Input a float<span class="pl-pds">"</span></span>, required<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">addopt!</span>(<span class="pl-s"><span class="pl-pds">"</span>datetime<span class="pl-pds">"</span></span>, abbr<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>D<span class="pl-pds">"</span></span>, fmt<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>%d/%d/%dT%d:%d:%f<span class="pl-pds">"</span></span>, help<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Input a datetime format<span class="pl-pds">"</span></span>)
<span class="pl-c1">addopt!</span>(<span class="pl-s"><span class="pl-pds">"</span>string<span class="pl-pds">"</span></span>, abbr<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>S<span class="pl-pds">"</span></span>, fmt<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span> <span class="pl-cce">\"</span>%s<span class="pl-cce">\"</span><span class="pl-pds">"</span></span>)
<span class="pl-c1">addpar!</span>(<span class="pl-c1">1</span>; fmt<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>%f<span class="pl-pds">"</span></span>, default<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>0.1<span class="pl-pds">"</span></span>, help<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>First float parameter<span class="pl-pds">"</span></span>)

<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>arg_setting.toml<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> io
    TOML<span class="pl-k">.</span><span class="pl-c1">print</span>(io, <span class="pl-c1">Dict</span>(group))
<span class="pl-k">end</span></pre></div>
<p dir="auto">the settings are saved like:</p>
<div class="highlight highlight-source-toml notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="name = &quot;group1&quot;

[[flags]]
outername = &quot;flag1&quot;
help = &quot;&quot;
abbr = &quot;&quot;
innername = &quot;flag1&quot;

[[opts]]
outername = &quot;float&quot;
format = &quot; %f&quot;
default = &quot;&quot;
required = true
help = &quot;Input a float&quot;
abbr = &quot;F&quot;
innername = &quot;float&quot;
[[opts]]
outername = &quot;datatime&quot;
format = &quot;%d/%d/%dT%d:%d:%f&quot;
default = &quot;&quot;
required = false
help = &quot;Input a datetime format&quot;
abbr = &quot;D&quot;
innername = &quot;datatime&quot;
[[opts]]
outername = &quot;string&quot;
format = &quot; \&quot;%s\&quot;&quot;
default = &quot;&quot;
required = false
help = &quot;&quot;
abbr = &quot;S&quot;
innername = &quot;string&quot;

[[pars]]
format = &quot;%f&quot;
default = &quot;0.1&quot;
required = false
help = &quot;First float parameter&quot;
position = 1
innername = &quot;par1&quot;"><pre><span class="pl-smi">name</span> = <span class="pl-s"><span class="pl-pds">"</span>group1<span class="pl-pds">"</span></span>

[[<span class="pl-en">flags</span>]]
<span class="pl-smi">outername</span> = <span class="pl-s"><span class="pl-pds">"</span>flag1<span class="pl-pds">"</span></span>
<span class="pl-smi">help</span> = <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>
<span class="pl-smi">abbr</span> = <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>
<span class="pl-smi">innername</span> = <span class="pl-s"><span class="pl-pds">"</span>flag1<span class="pl-pds">"</span></span>

[[<span class="pl-en">opts</span>]]
<span class="pl-smi">outername</span> = <span class="pl-s"><span class="pl-pds">"</span>float<span class="pl-pds">"</span></span>
<span class="pl-smi">format</span> = <span class="pl-s"><span class="pl-pds">"</span> %f<span class="pl-pds">"</span></span>
<span class="pl-smi">default</span> = <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>
<span class="pl-smi">required</span> = <span class="pl-c1">true</span>
<span class="pl-smi">help</span> = <span class="pl-s"><span class="pl-pds">"</span>Input a float<span class="pl-pds">"</span></span>
<span class="pl-smi">abbr</span> = <span class="pl-s"><span class="pl-pds">"</span>F<span class="pl-pds">"</span></span>
<span class="pl-smi">innername</span> = <span class="pl-s"><span class="pl-pds">"</span>float<span class="pl-pds">"</span></span>
[[<span class="pl-en">opts</span>]]
<span class="pl-smi">outername</span> = <span class="pl-s"><span class="pl-pds">"</span>datatime<span class="pl-pds">"</span></span>
<span class="pl-smi">format</span> = <span class="pl-s"><span class="pl-pds">"</span>%d/%d/%dT%d:%d:%f<span class="pl-pds">"</span></span>
<span class="pl-smi">default</span> = <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>
<span class="pl-smi">required</span> = <span class="pl-c1">false</span>
<span class="pl-smi">help</span> = <span class="pl-s"><span class="pl-pds">"</span>Input a datetime format<span class="pl-pds">"</span></span>
<span class="pl-smi">abbr</span> = <span class="pl-s"><span class="pl-pds">"</span>D<span class="pl-pds">"</span></span>
<span class="pl-smi">innername</span> = <span class="pl-s"><span class="pl-pds">"</span>datatime<span class="pl-pds">"</span></span>
[[<span class="pl-en">opts</span>]]
<span class="pl-smi">outername</span> = <span class="pl-s"><span class="pl-pds">"</span>string<span class="pl-pds">"</span></span>
<span class="pl-smi">format</span> = <span class="pl-s"><span class="pl-pds">"</span> <span class="pl-cce">\"</span>%s<span class="pl-cce">\"</span><span class="pl-pds">"</span></span>
<span class="pl-smi">default</span> = <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>
<span class="pl-smi">required</span> = <span class="pl-c1">false</span>
<span class="pl-smi">help</span> = <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>
<span class="pl-smi">abbr</span> = <span class="pl-s"><span class="pl-pds">"</span>S<span class="pl-pds">"</span></span>
<span class="pl-smi">innername</span> = <span class="pl-s"><span class="pl-pds">"</span>string<span class="pl-pds">"</span></span>

[[<span class="pl-en">pars</span>]]
<span class="pl-smi">format</span> = <span class="pl-s"><span class="pl-pds">"</span>%f<span class="pl-pds">"</span></span>
<span class="pl-smi">default</span> = <span class="pl-s"><span class="pl-pds">"</span>0.1<span class="pl-pds">"</span></span>
<span class="pl-smi">required</span> = <span class="pl-c1">false</span>
<span class="pl-smi">help</span> = <span class="pl-s"><span class="pl-pds">"</span>First float parameter<span class="pl-pds">"</span></span>
<span class="pl-smi">position</span> = <span class="pl-c1">1</span>
<span class="pl-smi">innername</span> = <span class="pl-s"><span class="pl-pds">"</span>par1<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">and the settings can be loaded like:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ArgumentProcessor, TOML

group = TOML.parsefile(&quot;arg_setting.toml&quot;) |&gt; Group"><pre><span class="pl-k">using</span> ArgumentProcessor, TOML

group <span class="pl-k">=</span> TOML<span class="pl-k">.</span><span class="pl-c1">parsefile</span>(<span class="pl-s"><span class="pl-pds">"</span>arg_setting.toml<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> Group</pre></div>
<h2 dir="auto"><a id="user-content-history" class="anchor" aria-hidden="true" href="#history"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>History</h2>
<ul dir="auto">
<li><code>1.0.0</code> submit first version</li>
<li><code>1.1.0</code> add function to check parameter setting</li>
</ul>
</article></div>