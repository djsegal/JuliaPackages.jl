<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-hexio" class="anchor" aria-hidden="true" href="#hexio"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>HexIO</h1>
<p dir="auto"><a href="https://zsz00.github.io/HexIO.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://travis-ci.org/zsz00/HexIO.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/802c08bd5a12e7c451200705bbfe0d16e367098fce5f4d058af1ffa245087b18/68747470733a2f2f7472617669732d63692e6f72672f7a737a30302f486578494f2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/zsz00/HexIO.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/zsz00/HexIO.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/14c676865d05d05d3c5381a2c3a95dbe786aa0263e19d3b6dcb03606e17ae7ce/687474703a2f2f636f6465636f762e696f2f6769746875622f7a737a30302f486578494f2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Coverage" data-canonical-src="http://codecov.io/github/zsz00/HexIO.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">The HexIO.jl is formed by integrating <a href="https://github.com/Keno/StructIO.jl">StructIO.jl</a> and <a href="https://github.com/JuliaIO/HexEdit.jl">HexEdit.jl</a>. It's similar to <code>struct</code> in python.</p>
<p dir="auto">Generates IO methods (<code>pack</code>, <code>unpack</code>) from structure definitions.  Also defines <code>packed_sizeof</code> to give the on-disk size of a packed structure, which is smaller than <code>sizeof</code> would give, if the struct is marked as <code>align_packed</code>.</p>
<h1 dir="auto"><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example usage</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using HexIO

julia&gt; @io struct TwoUInt64s
           x::UInt64
           y::UInt64
       end

julia&gt; buf = IOBuffer(collect(UInt8(1):UInt8(16))); 

julia&gt; seekstart(buf); unpack(buf, TwoUInt64s) # Default endianness depends on machine
TwoUInt64s(0x0807060504030201, 0x100f0e0d0c0b0a09)

julia&gt; seekstart(buf); unpack(buf, TwoUInt64s, :BigEndian)
TwoUInt64s(0x0102030405060708, 0x090a0b0c0d0e0f10)

io = open(&quot;&quot;, &quot;rb&quot;)
buffer = read(io, read_size)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> HexIO

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@io</span> <span class="pl-k">struct</span> TwoUInt64s
           x<span class="pl-k">::</span><span class="pl-c1">UInt64</span>
           y<span class="pl-k">::</span><span class="pl-c1">UInt64</span>
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> buf <span class="pl-k">=</span> <span class="pl-c1">IOBuffer</span>(<span class="pl-c1">collect</span>(<span class="pl-c1">UInt8</span>(<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">UInt8</span>(<span class="pl-c1">16</span>))); 

julia<span class="pl-k">&gt;</span> <span class="pl-c1">seekstart</span>(buf); <span class="pl-c1">unpack</span>(buf, TwoUInt64s) <span class="pl-c"><span class="pl-c">#</span> Default endianness depends on machine</span>
<span class="pl-c1">TwoUInt64s</span>(<span class="pl-c1">0x0807060504030201</span>, <span class="pl-c1">0x100f0e0d0c0b0a09</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">seekstart</span>(buf); <span class="pl-c1">unpack</span>(buf, TwoUInt64s, <span class="pl-c1">:BigEndian</span>)
<span class="pl-c1">TwoUInt64s</span>(<span class="pl-c1">0x0102030405060708</span>, <span class="pl-c1">0x090a0b0c0d0e0f10</span>)

io <span class="pl-k">=</span> <span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>rb<span class="pl-pds">"</span></span>)
buffer <span class="pl-k">=</span> <span class="pl-c1">read</span>(io, read_size)
</pre></div>
<p dir="auto">Hex has same fuctions for editing and displaying data in binary files in
hexadecimal format.</p>
<h3 dir="auto"><a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Synopsis</h3>
<h4 dir="auto"><a id="user-content-dumpselfhex-offset--0-nint---1" class="anchor" aria-hidden="true" href="#dumpselfhex-offset--0-nint---1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>dump!(self::Hex, offset = 0, n::Int = -1)</h4>
<p dir="auto">Displays binary file data beginning at offset and ending at offset + n.</p>
<ul dir="auto">
<li>offset defaults to 0</li>
<li>n defaults to file size - n.</li>
</ul>
<h4 dir="auto"><a id="user-content-editselfhex-datastrstring-offset--0" class="anchor" aria-hidden="true" href="#editselfhex-datastrstring-offset--0"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>edit!(self::Hex, datastr::String, offset = 0)</h4>
<p dir="auto">Edits targeted binary file by overwriting data beginning at offset.</p>
<ul dir="auto">
<li>offset defaults to 0</li>
<li>datastr can be in ASCII or hexadecimal format (ie. "foobar" or "0x666f6f626172")</li>
</ul>
<h3 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h3>
<h3 dir="auto"><a id="user-content-complete-file-hexdump" class="anchor" aria-hidden="true" href="#complete-file-hexdump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Complete File Hexdump</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="hex = Hex(&quot;test/test.bin&quot;)
dump!(hex, 0x00)"><pre>hex <span class="pl-k">=</span> <span class="pl-c1">Hex</span>(<span class="pl-s"><span class="pl-pds">"</span>test/test.bin<span class="pl-pds">"</span></span>)
<span class="pl-c1">dump!</span>(hex, <span class="pl-c1">0x00</span>)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="00000000 | 5D 00 00 80 66 6F 6F 62   61 72 FF FF FF 00 7F E1 |]...foobar......
00000010 | 90 E6 67 83 93 40 93 22   A0 1B AB 50 6E A1 93 54 |..g..@.&quot;...Pn..T
00000020 | 3A 7F FD A3 D9 C0 60 29   AF B6 94 96 3E AA 5C 38 |:.....`)....&gt;.\8
00000030 | 1C 05 02 31 7D 74 72 0D   40 3C 22 DA EF FA CA 80 |...1}tr.@&lt;&quot;.....
00000040 | DF F8 E2 7B CC 65 09 29   64 C3 15 DE E6 39 B7 7E |...{.e.)d....9.~
00000050 | D5 8C AA 91 F0 28 37 E1   5D AD C0 37 74 16 CE C1 |.....(7.]..7t...
00000060 | 75 94 1E EA DD 64 D6 B5   A1 2E 54 3D 62 4B 72 30 |u....d....T=bKr0
00000070 | 5A 35 B8 5D 42 A2 24 A1   C6 22 6A BE C6 58 07 E5 |Z5.]B.$..&quot;j..X..
00000080 | 4F F1 E3 FC 53 14 70 AA   AE 58 FA E3 D8 C4 3A DB |O...S.p..X....:.
00000090 | D2 81 CF 99 24 10 4C C1   53 76 98 BC 16 E9 C2 7E |....$.L.Sv.....~
000000A0 | 2C 6F 23 D6 F7 32 AB 81   7E 74 FD B6 FE B2 E7 15 |,o#..2..~t......
000000B0 | 83 7D 45 96 44 A8 D9 CF   B2 B8 AD 37 73 0E 15 AD |.}E.D......7s...
and so on..."><pre class="notranslate"><code>00000000 | 5D 00 00 80 66 6F 6F 62   61 72 FF FF FF 00 7F E1 |]...foobar......
00000010 | 90 E6 67 83 93 40 93 22   A0 1B AB 50 6E A1 93 54 |..g..@."...Pn..T
00000020 | 3A 7F FD A3 D9 C0 60 29   AF B6 94 96 3E AA 5C 38 |:.....`)....&gt;.\8
00000030 | 1C 05 02 31 7D 74 72 0D   40 3C 22 DA EF FA CA 80 |...1}tr.@&lt;".....
00000040 | DF F8 E2 7B CC 65 09 29   64 C3 15 DE E6 39 B7 7E |...{.e.)d....9.~
00000050 | D5 8C AA 91 F0 28 37 E1   5D AD C0 37 74 16 CE C1 |.....(7.]..7t...
00000060 | 75 94 1E EA DD 64 D6 B5   A1 2E 54 3D 62 4B 72 30 |u....d....T=bKr0
00000070 | 5A 35 B8 5D 42 A2 24 A1   C6 22 6A BE C6 58 07 E5 |Z5.]B.$.."j..X..
00000080 | 4F F1 E3 FC 53 14 70 AA   AE 58 FA E3 D8 C4 3A DB |O...S.p..X....:.
00000090 | D2 81 CF 99 24 10 4C C1   53 76 98 BC 16 E9 C2 7E |....$.L.Sv.....~
000000A0 | 2C 6F 23 D6 F7 32 AB 81   7E 74 FD B6 FE B2 E7 15 |,o#..2..~t......
000000B0 | 83 7D 45 96 44 A8 D9 CF   B2 B8 AD 37 73 0E 15 AD |.}E.D......7s...
and so on...
</code></pre></div>
<h3 dir="auto"><a id="user-content-chunk-hexdump" class="anchor" aria-hidden="true" href="#chunk-hexdump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Chunk Hexdump</h3>
<p dir="auto">Dump 16 bytes beginning at offset 0x04</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="hex = Hex(&quot;test.bin&quot;)
dump!(hex, 0x04, 16)

00000004 | 66 6F 6F 62 61 72 FF FF   FF 00 7F E1 90 E6 67 83 |foobar........g.

dump!(hex.hex, 0x04, 16)

00000004 | 66 6F 6F 62 61 72 FF FF   FF 00 7F E1 90 E6 67 83 |foobar........g."><pre>hex <span class="pl-k">=</span> <span class="pl-c1">Hex</span>(<span class="pl-s"><span class="pl-pds">"</span>test.bin<span class="pl-pds">"</span></span>)
<span class="pl-c1">dump!</span>(hex, <span class="pl-c1">0x04</span>, <span class="pl-c1">16</span>)

<span class="pl-c1">00000004</span> <span class="pl-k">|</span> <span class="pl-c1">66</span> <span class="pl-c1">6</span>F <span class="pl-c1">6</span>F <span class="pl-c1">62</span> <span class="pl-c1">61</span> <span class="pl-c1">72</span> FF FF   FF <span class="pl-c1">00</span> <span class="pl-c1">7</span>F E1 <span class="pl-c1">90</span> E6 <span class="pl-c1">67</span> <span class="pl-c1">83</span> <span class="pl-k">|</span>foobar<span class="pl-k">........</span>g.

<span class="pl-c1">dump!</span>(hex<span class="pl-k">.</span>hex, <span class="pl-c1">0x04</span>, <span class="pl-c1">16</span>)

<span class="pl-c1">00000004</span> <span class="pl-k">|</span> <span class="pl-c1">66</span> <span class="pl-c1">6</span>F <span class="pl-c1">6</span>F <span class="pl-c1">62</span> <span class="pl-c1">61</span> <span class="pl-c1">72</span> FF FF   FF <span class="pl-c1">00</span> <span class="pl-c1">7</span>F E1 <span class="pl-c1">90</span> E6 <span class="pl-c1">67</span> <span class="pl-c1">83</span> <span class="pl-k">|</span>foobar<span class="pl-k">........</span>g.</pre></div>
<h3 dir="auto"><a id="user-content-hexadecimal-editing-hex-string" class="anchor" aria-hidden="true" href="#hexadecimal-editing-hex-string"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hexadecimal Editing (Hex String)</h3>
<p dir="auto">Write foobar to <code>test.bin</code> beginning at offset 0x04</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="hex = Hex(&quot;test.bin&quot;)
edit!(hex, &quot;0x666f6f626172&quot;, 0x04)"><pre>hex <span class="pl-k">=</span> <span class="pl-c1">Hex</span>(<span class="pl-s"><span class="pl-pds">"</span>test.bin<span class="pl-pds">"</span></span>)
<span class="pl-c1">edit!</span>(hex, <span class="pl-s"><span class="pl-pds">"</span>0x666f6f626172<span class="pl-pds">"</span></span>, <span class="pl-c1">0x04</span>)</pre></div>
<h3 dir="auto"><a id="user-content-hexadecimal-editing-ascii-string" class="anchor" aria-hidden="true" href="#hexadecimal-editing-ascii-string"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hexadecimal Editing (ASCII string)</h3>
<p dir="auto">Write foobar to test.bin beginning at offset 0x04</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="hex = Hex(&quot;test.bin&quot;)
edit!(hex, &quot;foobar&quot;, 0x04)"><pre>hex <span class="pl-k">=</span> <span class="pl-c1">Hex</span>(<span class="pl-s"><span class="pl-pds">"</span>test.bin<span class="pl-pds">"</span></span>)
<span class="pl-c1">edit!</span>(hex, <span class="pl-s"><span class="pl-pds">"</span>foobar<span class="pl-pds">"</span></span>, <span class="pl-c1">0x04</span>)</pre></div>
<h3 dir="auto"><a id="user-content-binary-singature-location" class="anchor" aria-hidden="true" href="#binary-singature-location"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Binary Singature Location</h3>
<p dir="auto">Return offset of the start of the hexadecimal signature "b77e"</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="hex = Hex(&quot;test.bin&quot;)
offset = find!(hex, &quot;0xb77e&quot;)"><pre>hex <span class="pl-k">=</span> <span class="pl-c1">Hex</span>(<span class="pl-s"><span class="pl-pds">"</span>test.bin<span class="pl-pds">"</span></span>)
offset <span class="pl-k">=</span> <span class="pl-c1">find!</span>(hex, <span class="pl-s"><span class="pl-pds">"</span>0xb77e<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<ul dir="auto">
<li><a href="https://zsz00.github.io/HexIO.jl/dev" rel="nofollow"><strong>LATEST</strong></a> — <em>in-development version of the documentation.</em></li>
</ul>
<h2 dir="auto"><a id="user-content-relevant-pkgs" class="anchor" aria-hidden="true" href="#relevant-pkgs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Relevant Pkgs</h2>
<ul dir="auto">
<li><a href="https://github.com/Keno/StructIO.jl">StructIO.jl</a></li>
<li><a href="https://github.com/JuliaIO/HexEdit.jl">HexEdit.jl</a></li>
<li><a href="https://github.com/pao/StrPack.jl">StrPack.jl</a></li>
</ul>
</article></div>