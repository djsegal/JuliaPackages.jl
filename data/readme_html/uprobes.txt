<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-uprobesjl" class="anchor" aria-hidden="true" href="#uprobesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>UProbes.jl</h1>
<p><em>Lightweight instrumentation for dtrace/bpftrace for Julia programs</em></p>
<p>UProbes.jl allows you to insert lightweight instrumentation points into your Julia
program and lets you enable that instrumentation during runtime with bpftrace on Linux
and dtrace elsewhere.</p>
<h2><a id="user-content-entrypoints" class="anchor" aria-hidden="true" href="#entrypoints"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Entrypoints</h2>
<ul>
<li><code>@query(provider, name, types...)</code>, query whether a probe is active.</li>
<li><code>@probe(provider, name, args...)</code>, place a probepoint and pass along args.</li>
</ul>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using UProbes

function f(arg)
    if @query(:julia, :test, typeof(arg))
        @probe(:julia, :test, arg)
    end
end

while true
    i = rand(Int64)
    f(i)
end
"><pre><span class="pl-k">using</span> UProbes

<span class="pl-k">function</span> <span class="pl-en">f</span>(arg)
    <span class="pl-k">if</span> <span class="pl-c1">@query</span>(<span class="pl-c1">:julia</span>, <span class="pl-c1">:test</span>, <span class="pl-c1">typeof</span>(arg))
        <span class="pl-c1">@probe</span>(<span class="pl-c1">:julia</span>, <span class="pl-c1">:test</span>, arg)
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-k">while</span> <span class="pl-c1">true</span>
    i <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Int64)
    <span class="pl-c1">f</span>(i)
<span class="pl-k">end</span></pre></div>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="sudo bpftrace -p $PID -e &quot;usdt:julia:test { @[comm] = count(); }&quot;
Attaching 1 probe...
^C

@[8906]: 4071763
"><pre>sudo bpftrace -p <span class="pl-smi">$PID</span> -e <span class="pl-s"><span class="pl-pds">"</span>usdt:julia:test { @[comm] = count(); }<span class="pl-pds">"</span></span>
Attaching 1 probe...
^C

@[8906]: 4071763</pre></div>
<h2><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Status</h2>
<ul>
<li>Semaphore support works!</li>
<li>Argument passing does not :/</li>
</ul>
<h2><a id="user-content-also-see" class="anchor" aria-hidden="true" href="#also-see"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Also see</h2>
<ul>
<li><a href="https://github.com/cuviper/rust-libprobe">https://github.com/cuviper/rust-libprobe</a></li>
</ul>
</article></div>