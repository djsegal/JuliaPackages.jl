<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a href="https://travis-ci.org/milktrader/Jig.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7673aa290e700532fdec4dcf4b71cdc0640d40d7/68747470733a2f2f7472617669732d63692e6f72672f6d696c6b7472616465722f4a69672e6a6c2e706e67" alt="Build Status" data-canonical-src="https://travis-ci.org/milktrader/Jig.jl.png" style="max-width:100%;"></a></p>
<h1><a id="user-content-jigjl" class="anchor" aria-hidden="true" href="#jigjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Jig.jl</h1>
<p>Testing framework for Julia</p>
<p>The <code>@runtest</code> macro takes a package name and any number of valid test files. It expects the
test files to be in the <code>/test</code> directory and to be appended by <code>.jl</code>. If the test file does
not use Jig macros for added colorful dots, the test should pass silently.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Jig

<span class="pl-c1">@runtest</span> Stats means variability instats
means<span class="pl-k">:</span>
variability<span class="pl-k">:</span>
intstats<span class="pl-k">:</span></pre></div>
<p>If Jig macros are used in the test file, added feedback is supported.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">@runtest</span> Jig foo bar

foo<span class="pl-k">:</span>
      foo is foo  <span class="pl-k">..</span>
      foo is not bar  <span class="pl-k">.</span>x

bar<span class="pl-k">:</span>
      bar is bar  xx.
      bar is not qux  <span class="pl-k">..</span>x</pre></div>
<p>Success is indicated by a green dot, and failure by a red x. In the toy example above, the
<code>@context</code> macro was called first to print a string about what is being tested. The result
of "foo is foo" is two successful tests. The tests are assertions passed to the <code>jtest</code> function
inside the <code>test/foo.jl</code> file.</p>
<p>As a clever trick, a file can be placed in the package's test directory named <code>all.jl</code> to run all the
tests. The <code>all.jl</code> file simply calls <code>include</code> on test files to be included in the suite. This is
customizable of course, and the file can be called whatever the package author deems useful.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">@runtest</span> Jig all
all<span class="pl-k">:</span>
      foo is foo  <span class="pl-k">..</span>
      foo is not bar  <span class="pl-k">.</span>x

      bar is bar  xx.
      bar is not qux  <span class="pl-k">..</span>x</pre></div>
<p>In this case, the contents of <code>all.jl</code> is simply this:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span>foo.jl<span class="pl-pds">"</span></span>)
<span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span>bar.jl<span class="pl-pds">"</span></span>)</pre></div>
<p><del>Jig includes a nested module named <code>Quant</code> that provides objects and constants useful to testing packages
in the JuliaQuant organization. This module must be called specifically to get those objects and constants.</del></p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Jig<span class="pl-k">.</span>Quant, Series

julia<span class="pl-k">&gt;</span> cl <span class="pl-k">|&gt;</span> percentchange <span class="pl-k">|&gt;</span> tail <span class="pl-k">|&gt;</span> head
<span class="pl-c1">1</span><span class="pl-k">-</span>element Array{SeriesPair{Date{ISOCalendar},Float64},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1981</span><span class="pl-k">-</span><span class="pl-c1">01</span><span class="pl-k">-</span><span class="pl-c1">04</span>  <span class="pl-c1">0.012355065576886993</span></pre></div>
<p>A new package named <code>MarketData</code> has taken the place of the submodule.</p>
</article></div>