<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-geotablesjl" class="anchor" aria-hidden="true" href="#geotablesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GeoTables.jl</h1>
<p dir="auto"><a href="https://github.com/JuliaEarth/GeoTables.jl/actions"><img src="https://camo.githubusercontent.com/0d5a7ac70e0ee3a4068bd4917c8f2100f7c5e36f1f84639d02e356cdf38d9b27/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f4a756c696145617274682f47656f5461626c65732e6a6c2f43492e796d6c3f6272616e63683d6d6173746572267374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/github/actions/workflow/status/JuliaEarth/GeoTables.jl/CI.yml?branch=master&amp;style=flat-square" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/JuliaEarth/GeoTables.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a70d8fb9e9afd1e1b321188c4d3a24172c7211c54eb2104ff779ddbcaac4e1f9/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f4a756c696145617274682f47656f5461626c65732e6a6c3f7374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/codecov/c/github/JuliaEarth/GeoTables.jl?style=flat-square" style="max-width: 100%;"></a></p>
<p dir="auto">Load geospatial tables from known file formats and convert the
geometries to <a href="https://github.com/JuliaGeometry/Meshes.jl">Meshes.jl</a>
geometries that are compatible with the
<a href="https://github.com/JuliaEarth/GeoStats.jl">GeoStats.jl</a> ecosystem.</p>
<p dir="auto">Geometries are loaded from disk in pure Julia whenever possible
using packages such as <a href="https://github.com/JuliaGeo/Shapefile.jl">Shapefile.jl</a>
and <a href="https://github.com/JuliaGeo/GeoJSON.jl">GeoJSON.jl</a>, or
(down)loaded from the internet using the
<a href="https://github.com/JuliaGeo/GADM.jl">GADM.jl</a> package.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-loadingsaving-data-fromto-disk" class="anchor" aria-hidden="true" href="#loadingsaving-data-fromto-disk"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Loading/saving data from/to disk</h3>
<p dir="auto">The <code>load</code> and <code>save</code> functions are self-explanatory:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GeoTables

table = GeoTables.load(&quot;file.shp&quot;)

GeoTables.save(&quot;file.geojson&quot;, table)"><pre><span class="pl-k">using</span> GeoTables

table <span class="pl-k">=</span> GeoTables<span class="pl-k">.</span><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>file.shp<span class="pl-pds">"</span></span>)

GeoTables<span class="pl-k">.</span><span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>file.geojson<span class="pl-pds">"</span></span>, table)</pre></div>
<p dir="auto">Additional keyword arguments can be passed to <code>load</code> and <code>save</code> functions. Valid
arguments are those accepted by <code>GeoJSON.read</code>, <code>GeoJSON.write</code>, <code>Shapefile.Table</code>,
<code>Shapefile.write</code> and <code>ArchGDAL.read</code>. See below some examples:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# read `.geojson` geometries with Float64 precision
table = GeoTables.load(&quot;file.geojson&quot;, numbertype = Float64)

# force writing on existing `.shp` file
GeoTables.save(&quot;file.shp&quot;, table, force = true)"><pre><span class="pl-c"><span class="pl-c">#</span> read `.geojson` geometries with Float64 precision</span>
table <span class="pl-k">=</span> GeoTables<span class="pl-k">.</span><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>file.geojson<span class="pl-pds">"</span></span>, numbertype <span class="pl-k">=</span> Float64)

<span class="pl-c"><span class="pl-c">#</span> force writing on existing `.shp` file</span>
GeoTables<span class="pl-k">.</span><span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>file.shp<span class="pl-pds">"</span></span>, table, force <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<h3 dir="auto"><a id="user-content-loading-data-from-gadm" class="anchor" aria-hidden="true" href="#loading-data-from-gadm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Loading data from GADM</h3>
<p dir="auto">The <code>gadm</code> function (down)loads data from the GADM dataset:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; GeoTables.gadm(&quot;BRA&quot;, depth = 1)"><pre>julia<span class="pl-k">&gt;</span> GeoTables<span class="pl-k">.</span><span class="pl-c1">gadm</span>(<span class="pl-s"><span class="pl-pds">"</span>BRA<span class="pl-pds">"</span></span>, depth <span class="pl-k">=</span> <span class="pl-c1">1</span>)</pre></div>
<p dir="auto">Please read the docstring for more details.</p>
<h3 dir="auto"><a id="user-content-performance-tips" class="anchor" aria-hidden="true" href="#performance-tips"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Performance tips</h3>
<p dir="auto">The result can be easily converted into any other geotable type
to avoid converting the geometries every time the underlying
domain is queried. For example, assuming that <code>table</code> has been
loaded with the functions above, the following code can be used
to convert the table to pure Julia geometries:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GeoStats

table |&gt; GeoData"><pre><span class="pl-k">using</span> GeoStats

table <span class="pl-k">|&gt;</span> GeoData</pre></div>
<h2 dir="auto"><a id="user-content-asking-for-help" class="anchor" aria-hidden="true" href="#asking-for-help"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Asking for help</h2>
<p dir="auto">If you have any questions, please <a href="https://juliaearth.github.io/GeoStats.jl/stable/about/community.html" rel="nofollow">contact our community</a>.</p>
</article></div>