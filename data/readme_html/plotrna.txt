<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-plotrnajl" class="anchor" aria-hidden="true" href="#plotrnajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PlotRNA.jl</h1>
<p dir="auto">Plot nucleic acid secondary structures with Julia.</p>
<p dir="auto">There are currently four different backends:</p>
<ul dir="auto">
<li><code>plot_structure</code>, <code>plot_structure_makie</code>: basic plotting implemented
in Julia using <code>Luxor</code> or <code>CairoMakie</code> respectively. These functions
use <code>ViennaRNA</code> behind the scenes to generate the coordinates</li>
<li><code>PlotRNA.uniplot</code>: basic text-mode plotting in the terminal using
<code>UnicodePlots</code></li>
<li><code>VARNA.plot</code>, <code>VARNA.plot_compare</code>: uses the
<a href="https://varna.lri.fr/" rel="nofollow">VARNA</a> package implemented in Java, offering
advanced features</li>
<li><code>R2R.plot</code>: uses <a href="https://zashaweinberglab.org/research/" rel="nofollow">R2R</a> for
plotting multiple sequence alignments with consensus structures</li>
</ul>
<p dir="auto">If you use the VARNA or R2R interface in this package, please make
sure to cite the corresponding VARNA or R2R publication.</p>
<p dir="auto">Note: to use <code>plot_structure_makie</code>, <code>CairoMakie</code> must be loaded
before <code>PlotRNA</code>. To use <code>PlotRNA.uniplot</code>, <code>UnicodePlots</code> must be
loaded before loading <code>PlotRNA</code>. This is to reduce the loading time of
this package if these features are not used. See below for details.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Enter the package mode from the Julia REPL by pressing <code>]</code> and then
install with</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="add PlotRNA"><pre class="notranslate"><code>add PlotRNA
</code></pre></div>
<p dir="auto">Please excuse the rather long compile times on installation (around 5
minutes on julia-1.9).</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-built-in-plotting-functionality-basic-at-the-moment" class="anchor" aria-hidden="true" href="#built-in-plotting-functionality-basic-at-the-moment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Built-in plotting functionality (basic at the moment)</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using PlotRNA"><pre><span class="pl-k">using</span> PlotRNA</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# plot_structure: draw an image of a secondary structure
dbn = &quot;(((...)))&quot;
seq = &quot;GGGAAACCC&quot;
plot_structure(dbn)
plot_structure(dbn; savepath=&quot;rna.png&quot;)"><pre><span class="pl-c"><span class="pl-c">#</span> plot_structure: draw an image of a secondary structure</span>
dbn <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>(((...)))<span class="pl-pds">"</span></span>
seq <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>
<span class="pl-c1">plot_structure</span>(dbn)
<span class="pl-c1">plot_structure</span>(dbn; savepath<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>rna.png<span class="pl-pds">"</span></span>)</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# color bases according to their probability of being basepaired or
# unpaired
using ViennaRNA: prob_of_basepairs
plot_structure(dbn; sequence=seq,
                    base_colors=prob_of_basepairs(seq, dbn))"><pre><span class="pl-c"><span class="pl-c">#</span> color bases according to their probability of being basepaired or</span>
<span class="pl-c"><span class="pl-c">#</span> unpaired</span>
<span class="pl-k">using</span> ViennaRNA<span class="pl-k">:</span> prob_of_basepairs
<span class="pl-c1">plot_structure</span>(dbn; sequence<span class="pl-k">=</span>seq,
                    base_colors<span class="pl-k">=</span><span class="pl-c1">prob_of_basepairs</span>(seq, dbn))</pre></div>
<p dir="auto">There is also an experimental <code>PlotRNA.plot_structure_makie</code> which
looks a bit nicer but has a larger time to first plot (on julia-1.9:
about 9 seconds for <code>using CairoMakie, PlotRNA</code> and 7 seconds for
<code>PlotRNA.plot_structure_makie("(((...)))")</code>). Subsequent plots are
very fast though.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using CairoMakie, PlotRNA
PlotRNA.plot_structure_makie(&quot;(((...)))&quot;)"><pre><span class="pl-k">using</span> CairoMakie, PlotRNA
PlotRNA<span class="pl-k">.</span><span class="pl-c1">plot_structure_makie</span>(<span class="pl-s"><span class="pl-pds">"</span>(((...)))<span class="pl-pds">"</span></span>)</pre></div>
<h3 dir="auto"><a id="user-content-terminal-plotting-with-unicodeplots" class="anchor" aria-hidden="true" href="#terminal-plotting-with-unicodeplots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Terminal plotting with UnicodePlots</h3>
<p dir="auto">Plotting in the terminal is supported via UnicodePlots with
coordinates generated by ViennaRNA.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using UnicodePlots, PlotRNA
PlotRNA.uniplot(&quot;(((...)))&quot;)"><pre><span class="pl-k">using</span> UnicodePlots, PlotRNA
PlotRNA<span class="pl-k">.</span><span class="pl-c1">uniplot</span>(<span class="pl-s"><span class="pl-pds">"</span>(((...)))<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Note: this is still considered experimental.  There are still some
problems with plot sizes and aspect ratios. Additionally, when calling
<code>uniplot</code> with an illegal structure or unbalanced parentheses it is
possible to produce a segfault (coming from <code>plot_coords</code> in ViennaRNA
that is used to generate coordinates for plotting).  See:
<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1610278377" data-permission-text="Title is private" data-url="https://github.com/marcom/ViennaRNA.jl/issues/13" data-hovercard-type="issue" data-hovercard-url="/marcom/ViennaRNA.jl/issues/13/hovercard" href="https://github.com/marcom/ViennaRNA.jl/issues/13">marcom/ViennaRNA.jl#13</a>.</p>
<h3 dir="auto"><a id="user-content-plot-structures-with-varna" class="anchor" aria-hidden="true" href="#plot-structures-with-varna"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plot structures with VARNA</h3>
<p dir="auto">This uses the very featureful <a href="https://varna.lri.fr/" rel="nofollow">VARNA</a> program
via its command-line interface.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using PlotRNA

VARNA.plot(&quot;(((...)))&quot;)
VARNA.plot(&quot;(((...)))&quot;; seq=&quot;GCGAAACGC&quot;, savepath=&quot;rna.png&quot;)
VARNA.plot_compare(dbn1=&quot;(((.....)))&quot;, seq1=&quot;GCGAAAAACGC&quot;,
                   dbn2=&quot;((-...---))&quot;, seq2=&quot;GG-AAA---CC&quot;)"><pre><span class="pl-k">using</span> PlotRNA

VARNA<span class="pl-k">.</span><span class="pl-c1">plot</span>(<span class="pl-s"><span class="pl-pds">"</span>(((...)))<span class="pl-pds">"</span></span>)
VARNA<span class="pl-k">.</span><span class="pl-c1">plot</span>(<span class="pl-s"><span class="pl-pds">"</span>(((...)))<span class="pl-pds">"</span></span>; seq<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>GCGAAACGC<span class="pl-pds">"</span></span>, savepath<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>rna.png<span class="pl-pds">"</span></span>)
VARNA<span class="pl-k">.</span><span class="pl-c1">plot_compare</span>(dbn1<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>(((.....)))<span class="pl-pds">"</span></span>, seq1<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>GCGAAAAACGC<span class="pl-pds">"</span></span>,
                   dbn2<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>((-...---))<span class="pl-pds">"</span></span>, seq2<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>GG-AAA---CC<span class="pl-pds">"</span></span>)</pre></div>
<h4 dir="auto"><a id="user-content-note-java-must-be-installed-for-varna-plotting-to-work" class="anchor" aria-hidden="true" href="#note-java-must-be-installed-for-varna-plotting-to-work"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Note: Java must be installed for VARNA plotting to work</h4>
<p dir="auto">You will need a working Java installation (can be headless i think).
You can test this by running:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="run(`java -version`)"><pre><span class="pl-c1">run</span>(<span class="pl-s"><span class="pl-pds">`</span>java -version<span class="pl-pds">`</span></span>)</pre></div>
<p dir="auto">If you don't get an error, plotting with VARNA should work.</p>
<p dir="auto">The VARNA jar file will get downloaded automatically the first time
you plot something with VARNA. It gets stored in a scratch space that
gets cleaned up by the Julia package manager when you uninstall
PlotRNA.</p>
<h4 dir="auto"><a id="user-content-varna-plot-options" class="anchor" aria-hidden="true" href="#varna-plot-options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>VARNA plot options</h4>
<h5 dir="auto"><a id="user-content-basic-options" class="anchor" aria-hidden="true" href="#basic-options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic options</h5>
<ul dir="auto">
<li>
<p dir="auto"><code>savepath=""</code>: output file path where the image should be written
to, or a temporary file if not set. The file ending determines the
output file type.</p>
</li>
<li>
<p dir="auto"><code>fileformat="svg"</code>: output file format, only used if <code>savepath</code> is
not set.</p>
</li>
<li>
<p dir="auto"><code>verbose=false</code>: print stdout and stderr captured from VARNA.</p>
</li>
</ul>
<h5 dir="auto"><a id="user-content-varna-options" class="anchor" aria-hidden="true" href="#varna-options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>VARNA options</h5>
<p dir="auto">More details about these parameters can be found in the <a href="https://varna.lri.fr/index.php?lang=en&amp;page=command&amp;css=varna" rel="nofollow">VARNA
documentation</a>.</p>
<ul dir="auto">
<li>
<p dir="auto"><code>algorithm=:radiate</code>: RNA graph layout algorithm to
use. Options are: <code>:line</code>, <code>:circular</code>, <code>:naview</code>, <code>:radiate.</code>.</p>
</li>
<li>
<p dir="auto"><code>additional_basepairs=""</code>: the option is called <code>-auxBPs</code> in
VARNA. String of the form <code>"(i1,j1);(i2,j2):opt1=val1,opt2=val2;..."</code>.</p>
<ul dir="auto">
<li><code>edge5</code>, <code>edge3=[wc|h|s]</code>: classification of noncanonical basepair
as defined by Leontis &amp; Westhof. Values are "wc" (Watson-Crick
edge), "h" (Hoogsteen edge), "s" (sugar edge)</li>
<li><code>stericity=[cis|trans]</code>: strand orientation</li>
<li><code>color</code>: base pair color as string</li>
<li><code>thickness</code>: basepair thickness as integer</li>
</ul>
<p dir="auto">Example: <code>additional_basepairs="(1,10);(2,9):edge5=h,edge3=s,stericity=cis,color=#ff0000,thickness=5"</code></p>
</li>
<li>
<p dir="auto"><code>annotations=""</code>: annotation string of the form
<code>"text1:opt1=val1,...;type=T2,opt2=val2;..."</code>.</p>
<ul dir="auto">
<li><code>type=[P|B|H|L]</code>: can be <code>P</code> (static), <code>B</code> (anchored on base), <code>H</code> (anchored
on helix), or <code>L</code> (anchored on loop)</li>
<li><code>x</code>, <code>y</code>: x and y coordinates for a static annotation (<code>P</code>)</li>
<li><code>anchor</code>: which base should annotation be anchored to (not
applicable for static annotations)</li>
<li><code>size</code> font size as an integer</li>
<li><code>color</code> as a string e.g. "#FF0000"</li>
</ul>
<p dir="auto">Example: <code>annotations="Static annotation:type=P,x=100,y=50,size=12,color=#ff0000;Base annotation:type=B,anchor=42"</code></p>
</li>
<li>
<p dir="auto"><code>auto_helices=false</code>: annotate helix n with "Hn"</p>
</li>
<li>
<p dir="auto"><code>auto_interior_loops=false</code>: annotate interior loop n with "In"</p>
</li>
<li>
<p dir="auto"><code>auto_terminal_loops=false</code>: annotate terminal loop n with "Tn"</p>
</li>
<li>
<p dir="auto"><code>backbone_color=""</code></p>
</li>
<li>
<p dir="auto"><code>background_color=""</code></p>
</li>
<li>
<p dir="auto"><code>base_inner_color=""</code></p>
</li>
<li>
<p dir="auto"><code>base_name_color=""</code></p>
</li>
<li>
<p dir="auto"><code>base_num_color=""</code></p>
</li>
<li>
<p dir="auto"><code>base_outline_color=""</code></p>
</li>
<li>
<p dir="auto"><code>base_style_define=String[]</code>: corresponds to the <code>-basesStyleX</code> options in VARNA.</p>
</li>
<li>
<p dir="auto"><code>base_style_apply_on=String[]</code>: corresponds to the <code>-applyBasesStyleXon</code> options in VARNA.</p>
</li>
<li>
<p dir="auto"><code>basepair_color=""</code></p>
</li>
<li>
<p dir="auto"><code>basepair_style=""</code>: can be "none" (no basepairs drawn), "line",
"rnaviz" (draw square equidistant from both bases), or "lw"
(Leontis/Westhof rendering).</p>
</li>
<li>
<p dir="auto"><code>border_dist="0x0"</code>: x and y distance of drawing area from border,
e.g. <code>10x20</code></p>
</li>
<li>
<p dir="auto"><code>chemical_probing=""</code>: markers on the RNA backbone, for example from
chemical probing. String of the form
<code>"a1-b1:opt1=v1,...;a2-b2:opt1=v2,..."</code>.  Here a1 and b1 are
adjacent bases, the marker is placed on the backbone between them.</p>
<ul dir="auto">
<li><code>glyph=[arrow|dot|pin|triangle]</code>: shape of annotation</li>
<li><code>dir=[in|out]</code>: direction of annotation</li>
<li><code>intensity=float</code>: annotation thickness</li>
<li><code>color=color</code></li>
</ul>
<p dir="auto">Example: <code>chemical_probing="2-3:glyph=triangle,dir=in,intensity=1.0,color=#ff0000;4-5:glyph=dot"</code></p>
</li>
<li>
<p dir="auto"><code>color_map=Float64[]</code>: color map for coloring bases</p>
</li>
<li>
<p dir="auto"><code>color_map_caption=""</code></p>
</li>
<li>
<p dir="auto"><code>color_map_min=0.0</code>: color map range minimum</p>
</li>
<li>
<p dir="auto"><code>color_map_max=1.0</code>: color map range maximum</p>
</li>
<li>
<p dir="auto"><code>color_map_style="heat"</code>: color map style. Predefined styles are:
"red", "blue", "green", "heat", "energy", and "bw". A custom palette
can be passed in the form <code>"0:#ff0000;1:#ffffff"</code>.</p>
</li>
<li>
<p dir="auto"><code>draw_backbone=true</code></p>
</li>
<li>
<p dir="auto"><code>draw_bases=true</code></p>
</li>
<li>
<p dir="auto"><code>draw_noncanonical_bp=true</code></p>
</li>
<li>
<p dir="auto"><code>draw_tertiary_bp=true</code></p>
</li>
<li>
<p dir="auto"><code>fill_bases=true</code></p>
</li>
<li>
<p dir="auto"><code>flat_radiate_mode=true</code>: align exterior loop horizontally in the
<code>:radiate</code> layout algorithm.</p>
</li>
<li>
<p dir="auto"><code>highlight_region=""</code>: string for highlighting consecutive regions
of bases of the format <code>"i1-j1:opt1=val1,...;i2-j2:opt1=val2,..."</code>. Options are:</p>
<ul dir="auto">
<li><code>radius</code>: thickness of highlight</li>
<li><code>fill=color</code>: highlight fill color</li>
<li><code>outline=color</code>: highlight outline color</li>
</ul>
<p dir="auto">Example: <code>highlight_region="2-5:radius=10,fill=#00ff00;7-12:radius=10,fill=#00ff00,outline=#000000"</code></p>
</li>
<li>
<p dir="auto"><code>line_mode_bp_vertical_scale=1.0</code>: vertical scaling of basepair
lines in the <code>:line</code> layout algorithm</p>
</li>
<li>
<p dir="auto"><code>nonstandard_bases_color=""</code></p>
</li>
<li>
<p dir="auto"><code>numbering_period=10</code>: numbering interval for bases</p>
</li>
<li>
<p dir="auto"><code>resolution=1.0</code></p>
</li>
<li>
<p dir="auto"><code>rotation=0.0</code>: rotate RNA structure by an angle in degrees</p>
</li>
<li>
<p dir="auto"><code>show_errors=true</code></p>
</li>
<li>
<p dir="auto"><code>show_warnings=true</code></p>
</li>
<li>
<p dir="auto"><code>space_between_bases=1.0</code></p>
</li>
<li>
<p dir="auto"><code>title=""</code>: plot title</p>
</li>
<li>
<p dir="auto"><code>title_color=""</code></p>
</li>
<li>
<p dir="auto"><code>title_size=18</code>: title font size</p>
</li>
<li>
<p dir="auto"><code>zoom=1.0</code></p>
</li>
</ul>
<h3 dir="auto"><a id="user-content-plot-structures-with-r2r" class="anchor" aria-hidden="true" href="#plot-structures-with-r2r"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plot structures with R2R</h3>
<p dir="auto">This uses the
<a href="https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-3" rel="nofollow">R2R</a>
program via its command-line interface.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using PlotRNA, BioStockholm
msa = parse(MSA, &quot;&quot;&quot;
    # STOCKHOLM 1.0
    human        ACACGCGAAA.GCGCAA.CAAACGUGCACGG
    chimp        GAAUGUGAAAAACACCA.CUCUUGAGGACCU
    bigfoot      UUGAG.UUCG..CUCGUUUUCUCGAGUACAC
    #=GC SS_cons ...&lt;&lt;&lt;.....&gt;&gt;&gt;....&lt;&lt;....&gt;&gt;.....
    //
    &quot;&quot;&quot;)

# or alternatively
msa = MSA{Char}(;
    seq = Dict(&quot;human&quot;   =&gt; &quot;ACACGCGAAA.GCGCAA.CAAACGUGCACGG&quot;,
               &quot;chimp&quot;   =&gt; &quot;GAAUGUGAAAAACACCA.CUCUUGAGGACCU&quot;,
               &quot;bigfoot&quot; =&gt; &quot;UUGAG.UUCG..CUCGUUUUCUCGAGUACAC&quot;),
     GC = Dict(&quot;SS_cons&quot; =&gt; &quot;...&lt;&lt;&lt;.....&gt;&gt;&gt;....&lt;&lt;....&gt;&gt;.....&quot;)
)

# this should show a svg image in Pluto or Jupyter
plot = R2R.plot(msa)

# save the svg image to a file
write(&quot;out.svg&quot;, plot.svg)"><pre><span class="pl-k">using</span> PlotRNA, BioStockholm
msa <span class="pl-k">=</span> <span class="pl-c1">parse</span>(MSA, <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">    # STOCKHOLM 1.0</span>
<span class="pl-s">    human        ACACGCGAAA.GCGCAA.CAAACGUGCACGG</span>
<span class="pl-s">    chimp        GAAUGUGAAAAACACCA.CUCUUGAGGACCU</span>
<span class="pl-s">    bigfoot      UUGAG.UUCG..CUCGUUUUCUCGAGUACAC</span>
<span class="pl-s">    #=GC SS_cons ...&lt;&lt;&lt;.....&gt;&gt;&gt;....&lt;&lt;....&gt;&gt;.....</span>
<span class="pl-s">    //</span>
<span class="pl-s">    <span class="pl-pds">"""</span></span>)

<span class="pl-c"><span class="pl-c">#</span> or alternatively</span>
msa <span class="pl-k">=</span> <span class="pl-c1">MSA</span><span class="pl-c1">{Char}</span>(;
    seq <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>human<span class="pl-pds">"</span></span>   <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>ACACGCGAAA.GCGCAA.CAAACGUGCACGG<span class="pl-pds">"</span></span>,
               <span class="pl-s"><span class="pl-pds">"</span>chimp<span class="pl-pds">"</span></span>   <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>GAAUGUGAAAAACACCA.CUCUUGAGGACCU<span class="pl-pds">"</span></span>,
               <span class="pl-s"><span class="pl-pds">"</span>bigfoot<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>UUGAG.UUCG..CUCGUUUUCUCGAGUACAC<span class="pl-pds">"</span></span>),
     GC <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>SS_cons<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>...&lt;&lt;&lt;.....&gt;&gt;&gt;....&lt;&lt;....&gt;&gt;.....<span class="pl-pds">"</span></span>)
)

<span class="pl-c"><span class="pl-c">#</span> this should show a svg image in Pluto or Jupyter</span>
plot <span class="pl-k">=</span> R2R<span class="pl-k">.</span><span class="pl-c1">plot</span>(msa)

<span class="pl-c"><span class="pl-c">#</span> save the svg image to a file</span>
<span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">"</span>out.svg<span class="pl-pds">"</span></span>, plot<span class="pl-k">.</span>svg)</pre></div>
<h2 dir="auto"><a id="user-content-licensing" class="anchor" aria-hidden="true" href="#licensing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Licensing</h2>
<p dir="auto">All code in this repository is licensed under the MIT license, a copy
of which can be found in the <code>LICENSE</code> file. VARNA is licensed under
the GNU GPL as mentioned on the <a href="https://varna.lri.fr/" rel="nofollow">VARNA
homepage</a>. R2R is licensed under the GNU GPL.</p>
<h2 dir="auto"><a id="user-content-related-julia-packages-for-rna-secondary-structures" class="anchor" aria-hidden="true" href="#related-julia-packages-for-rna-secondary-structures"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related Julia packages for RNA secondary structures</h2>
<ul dir="auto">
<li><a href="https://github.com/marcom/FoldRNA.jl">FoldRNA.jl</a></li>
<li><a href="https://github.com/cossio/Infernal.jl">Infernal.jl</a></li>
<li><a href="https://github.com/marcom/LinearFold.jl">LinearFold.jl</a></li>
<li><a href="https://github.com/cossio/Rfam.jl">Rfam.jl</a></li>
<li><a href="https://github.com/marcom/RNAstructure.jl">RNAstructure.jl</a></li>
<li><a href="https://github.com/marcom/ViennaRNA.jl">ViennaRNA.jl</a></li>
</ul>
</article></div>