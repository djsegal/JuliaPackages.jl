<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-picosatjl" class="anchor" aria-hidden="true" href="#picosatjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PicoSAT.jl</h1>
<p><a href="https://travis-ci.org/jakebolewski/PicoSAT.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0d426567d508a3c6b46ebaa5f1f3d523e83df1f3/68747470733a2f2f7472617669732d63692e6f72672f6a616b65626f6c6577736b692f5069636f5341542e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/jakebolewski/PicoSAT.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/r/jakebolewski/PicoSAT.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fa311581dabdd13fca2946f781bacde97a527695/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6a616b65626f6c6577736b692f5069636f5341542e6a6c2e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/coveralls/jakebolewski/PicoSAT.jl.svg" style="max-width:100%;"></a></p>
<p>PicoSAT.jl provides <a href="www.julialang.org">Julia</a> bindings to the popular <a href="http://en.wikipedia.org/wiki/Boolean_satisfiability_problem" rel="nofollow">SAT</a> solver <a href="http://fmv.jku.at/picosat/" rel="nofollow">picosat</a> by Armin Biere.  It is based off the Python <a href="https://github.com/ContinuumIO/pycosat">pycosat</a> and Go <a href="https://github.com/wkschwartz/pigosat">pigosat</a> bindings written by Ilan Schnell and Willam Schwartz.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>To install, run <code>Pkg.add("PicoSAT")</code> in Julia.  The entire picosat library (v960) is shipped with the package to make building the library easier.  Windows builds are currently not supported at the moment.</p>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h1>
<p>The <code>PicoSAT</code> module exports two functions <code>solve</code> and <code>itersolve</code>.  Both functions take an iterable of clauses as a required argument.  Each clause is represented as an iterable of non-zero integers.</p>
<p>Both methods take the following optional keyword arguments:</p>
<ul>
<li><code>vars</code> - the number of variables</li>
<li><code>verbose</code> - prints solver logs to <code>STDOUT</code> when <code>verbose &gt; 0</code> with increasing detail.</li>
<li><code>proplimit</code> - helps to bound the execution time.  The number of propagations and the solution time are roughly linearly related.  A value of 0 (default) allows for an unbounded number of propagations.</li>
</ul>
<p><code>solve(clauses; vars::Integer=-1, verbose::Integer=0, proplimit::Integer=0)</code></p>
<ul>
<li>Returns a solution if the problem is satisfiable.  Satisfiable solutions are represented as a vector of signed integers.  If the problem is not satisfiable the method returns an <code>:unsatisfiable</code> symbol.  If a solution cannot be found within the defined propagation limit, an <code>:unknown</code> symbol is returned.</li>
</ul>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> PicoSAT
julia<span class="pl-k">&gt;</span> cnf <span class="pl-k">=</span> Any[[<span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">5</span>, <span class="pl-c1">4</span>], [<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">5</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>], [<span class="pl-k">-</span><span class="pl-c1">3</span>, <span class="pl-k">-</span><span class="pl-c1">4</span>]];
julia<span class="pl-k">&gt;</span> PicoSAT<span class="pl-k">.</span><span class="pl-c1">solve</span>(cnf)
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{Int64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
   <span class="pl-c1">1</span>
  <span class="pl-k">-</span><span class="pl-c1">2</span>
  <span class="pl-k">-</span><span class="pl-c1">3</span>
  <span class="pl-k">-</span><span class="pl-c1">4</span>
   <span class="pl-c1">5</span></pre></div>
<p>The absolute values of the solution vector represent the ith variable.  The sign of the ith variable represents the boolean values <code>true</code> (+) and <code>false</code> (-).</p>
<p><code>itersolve(clauses; vars::Integer=-1, verbose::Integer=0, proplimit::Integer=0)</code></p>
<ul>
<li>Returns an iterable object over all solutions.  When a user-defined propagation limit is specified, the iterator may not produce all feasible solutions.</li>
</ul>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> PicoSAT
julia<span class="pl-k">&gt;</span> cnf <span class="pl-k">=</span> Any[[<span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">5</span>, <span class="pl-c1">4</span>], [<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">5</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>], [<span class="pl-k">-</span><span class="pl-c1">3</span>, <span class="pl-k">-</span><span class="pl-c1">4</span>]];
julia<span class="pl-k">&gt;</span> PicoSAT<span class="pl-k">.</span><span class="pl-c1">itersolve</span>(cnf)
julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> sol <span class="pl-k">in</span> PicoSAT<span class="pl-k">.</span><span class="pl-c1">itersolve</span>(cnf)
           <span class="pl-c1">println</span>(sol)
       <span class="pl-k">end</span>
[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-k">-</span><span class="pl-c1">3</span>,<span class="pl-k">-</span><span class="pl-c1">4</span>,<span class="pl-c1">5</span>]
[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-k">-</span><span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-k">-</span><span class="pl-c1">5</span>]
[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-k">-</span><span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>]
[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-k">-</span><span class="pl-c1">4</span>,<span class="pl-k">-</span><span class="pl-c1">5</span>]
<span class="pl-k">...</span></pre></div>
<h3><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>License</h3>
<p><code>PicoSAT.jl</code> and the original <code>picosat</code> C-library are licensed under the MIT "Expat" license.</p>
<h3><a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contributors</h3>
<ul>
<li>Jake Bolewski - <a href="http://github.com/jakebolewski">@jakebolewski</a></li>
<li>Carlo Lucibello - <a href="https://github.com/CarloLucibello">@CarloLucibello</a></li>
</ul>
</article></div>