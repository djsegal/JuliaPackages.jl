<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-trixijl" class="anchor" aria-hidden="true" href="#trixijl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Trixi.jl</h1>
<p><a href="https://trixi-framework.github.io/Trixi.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Docs-stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://trixi-framework.github.io/Trixi.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Docs-dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/trixi-framework/Trixi.jl/actions?query=workflow%3ACI"><img src="https://github.com/trixi-framework/Trixi.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/trixi-framework/Trixi.jl?branch=main" rel="nofollow"><img src="https://camo.githubusercontent.com/088a93765e0d2ff52ddcbb073bd133ca99507cf1877c967aa322993ebb8c0f66/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f74726978692d6672616d65776f726b2f54726978692e6a6c2f62616467652e7376673f6272616e63683d6d61696e" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/trixi-framework/Trixi.jl/badge.svg?branch=main" style="max-width:100%;"></a>
<a href="https://opensource.org/licenses/MIT" rel="nofollow"><img src="https://camo.githubusercontent.com/2da4b47047416995ad40532496f4b028e9aeca4a9ad036ed17bee5d2fb753b32/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d737563636573732e737667" alt="License: MIT" data-canonical-src="https://img.shields.io/badge/License-MIT-success.svg" style="max-width:100%;"></a>
<a href="https://doi.org/10.5281/zenodo.3996439" rel="nofollow"><img src="https://camo.githubusercontent.com/6df0faba1ccc11d87c0852a90b0dd947ea242a763be84e593322f20a347e2c16/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e333939363433392e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.3996439.svg" style="max-width:100%;"></a>
<a href="https://github.com/trixi-framework/Trixi.jl"><img src="https://camo.githubusercontent.com/625cc8e5f64b0ea96299e145771f41b468c4df90614e8cab4e67dab36552ed4e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d6974732d73696e63652f74726978692d6672616d65776f726b2f54726978692e6a6c2f76302e332e33322e7376673f7374796c653d736f6369616c266c6f676f3d676974687562" alt="GitHub commits since tagged version" data-canonical-src="https://img.shields.io/github/commits-since/trixi-framework/Trixi.jl/v0.3.32.svg?style=social&amp;logo=github" style="max-width:100%;"></a></p>


<p align="center">
  <a target="_blank" rel="noopener noreferrer" href="docs/src/assets/logo.png"><img width="300px" src="docs/src/assets/logo.png" style="max-width:100%;"></a>
</p>
<p><strong>Trixi.jl</strong> is a numerical simulation framework for hyperbolic conservation
laws written in <a href="https://julialang.org" rel="nofollow">Julia</a>. A key objective for the
framework is to be useful to both scientists and students. Therefore, next to
having an extensible design with a fast implementation, Trixi is
focused on being easy to use for new or inexperienced users, including the
installation and postprocessing procedures. Its features include:</p>
<ul>
<li>Hierarchical quadtree/octree grid with adaptive mesh refinement</li>
<li>Native support for 1D, 2D, and 3D simulations</li>
<li>High-order accuracy in space in time</li>
<li>Nodal discontinuous Galerkin spectral element methods
<ul>
<li>Kinetic energy-preserving and entropy-stable split forms</li>
<li>Entropy-stable shock capturing</li>
<li>Positivity-preserving limiting</li>
</ul>
</li>
<li>Compatible with the <a href="https://diffeq.sciml.ai/latest/" rel="nofollow">SciML ecosystem for ordinary differential equations</a>
<ul>
<li><a href="https://diffeq.sciml.ai/latest/solvers/ode_solve/#Low-Storage-Methods" rel="nofollow">Explicit low-storage Runge-Kutta time integration</a></li>
<li><a href="https://diffeq.sciml.ai/latest/solvers/ode_solve/#Explicit-Strong-Stability-Preserving-Runge-Kutta-Methods-for-Hyperbolic-PDEs-(Conservation-Laws)" rel="nofollow">Strong stability preserving methods</a></li>
<li>CFL-based and error-based time step control</li>
</ul>
</li>
<li>Native support for differentiable programming
<ul>
<li>Forward mode automatic differentiation via <a href="https://github.com/JuliaDiff/ForwardDiff.jl">ForwardDiff.jl</a></li>
</ul>
</li>
<li>Square/cubic domains with periodic and weakly-enforced boundary conditions</li>
<li>Multiple governing equations:
<ul>
<li>Compressible Euler equations</li>
<li>Magnetohydrodynamics equations</li>
<li>Hyperbolic diffusion equations for elliptic problems</li>
<li>Lattice-Boltzmann equations (D2Q9 and D3Q27 schemes)</li>
<li>Scalar advection</li>
</ul>
</li>
<li>Multi-physics simulations
<ul>
<li><a href="https://github.com/trixi-framework/paper-self-gravitating-gas-dynamics">Self-gravitating gas dynamics</a></li>
</ul>
</li>
<li>Shared-memory parallelization via multithreading</li>
<li>Visualization and postprocessing of the results
<ul>
<li>In-situ and a posteriori visualization with <a href="https://github.com/JuliaPlots/Plots.jl">Plots.jl</a></li>
<li>Postprocessing with ParaView/VisIt via <a href="https://github.com/trixi-framework/Trixi2Vtk.jl">Trixi2Vtk</a></li>
</ul>
</li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>If you have not yet installed Julia, please <a href="https://julialang.org/downloads/platform/" rel="nofollow">follow the instructions for your
operating system</a>. Trixi works
with Julia v1.6.</p>
<h3><a id="user-content-for-users" class="anchor" aria-hidden="true" href="#for-users"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>For users</h3>
<p>Trixi and its related tools are registered Julia packages. Hence, you
can install Trixi, the visualization tool
<a href="https://github.com/trixi-framework/Trixi2Vtk.jl">Trixi2Vtk</a>,
<a href="https://github.com/SciML/OrdinaryDiffEq.jl">OrdinaryDiffEq.jl</a>, and
<a href="https://github.com/JuliaPlots/Plots.jl">Plots.jl</a>
by executing the following commands in the Julia REPL:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; import Pkg

julia&gt; Pkg.add(&quot;Trixi&quot;); Pkg.add(&quot;Trixi2Vtk&quot;); Pkg.add(&quot;OrdinaryDiffEq&quot;); Pkg.add(&quot;Plots&quot;)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg

julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Trixi<span class="pl-pds">"</span></span>); Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Trixi2Vtk<span class="pl-pds">"</span></span>); Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>OrdinaryDiffEq<span class="pl-pds">"</span></span>); Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Plots<span class="pl-pds">"</span></span>)</pre></div>
<p>You can copy and paste all commands to the REPL <em>including</em> the leading
<code>julia&gt;</code> prompts - they will automatically be stripped away by Julia.
The package <a href="https://github.com/SciML/OrdinaryDiffEq.jl">OrdinaryDiffEq.jl</a>
provides time integration schemes used by Trixi, while
<a href="https://github.com/JuliaPlots/Plots.jl">Plots.jl</a> can be used to directly
visualize Trixi's results from the REPL.</p>
<p><em>Note on package versions:</em> If some of the examples for how to use Trixi do not
work, verify that you are using a recent Trixi release by comparing the
installed Trixi version from</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; import Pkg; Pkg.update(&quot;Trixi&quot;); Pkg.status(&quot;Trixi&quot;)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">update</span>(<span class="pl-s"><span class="pl-pds">"</span>Trixi<span class="pl-pds">"</span></span>); Pkg<span class="pl-k">.</span><span class="pl-c1">status</span>(<span class="pl-s"><span class="pl-pds">"</span>Trixi<span class="pl-pds">"</span></span>)</pre></div>
<p>to the <a href="https://github.com/trixi-framework/Trixi.jl/releases/latest">latest release</a>.
If the installed version does not match the current release, please check the
<em>Troubleshooting</em> section in the <a href="#documentation">documentation</a>.</p>
<p>The commands above can also be used to update Trixi. A brief list of notable
changes to Trixi is available in <a href="NEWS.md"><code>NEWS.md</code></a>.</p>
<h3><a id="user-content-for-developers" class="anchor" aria-hidden="true" href="#for-developers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>For developers</h3>
<p>If you plan on editing Trixi itself, you can download Trixi locally and run it from
within the cloned directory:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="git clone git@github.com:trixi-framework/Trixi.jl.git
cd Trixi.jl
julia --project=@. -e 'import Pkg; Pkg.instantiate()' # Install Trixi's dependencies
julia -e 'import Pkg; Pkg.add(&quot;Trixi2Vtk&quot;); Pkg.add(&quot;Plots&quot;)' # Install postprocessing tools
julia -e 'import Pkg; Pkg.add(&quot;OrdinaryDiffEq&quot;)' # Install time integration schemes
"><pre>git clone git@github.com:trixi-framework/Trixi.jl.git
<span class="pl-c1">cd</span> Trixi.jl
julia --project=@. -e <span class="pl-s"><span class="pl-pds">'</span>import Pkg; Pkg.instantiate()<span class="pl-pds">'</span></span> <span class="pl-c"><span class="pl-c">#</span> Install Trixi's dependencies</span>
julia -e <span class="pl-s"><span class="pl-pds">'</span>import Pkg; Pkg.add("Trixi2Vtk"); Pkg.add("Plots")<span class="pl-pds">'</span></span> <span class="pl-c"><span class="pl-c">#</span> Install postprocessing tools</span>
julia -e <span class="pl-s"><span class="pl-pds">'</span>import Pkg; Pkg.add("OrdinaryDiffEq")<span class="pl-pds">'</span></span> <span class="pl-c"><span class="pl-c">#</span> Install time integration schemes</span></pre></div>
<p>If you installed Trixi this way, you always have to start Julia with the <code>--project</code>
flag set to your local Trixi clone, e.g.,</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="julia --project=@.
"><pre>julia --project=@.</pre></div>
<p>Further details can be found in the <a href="#documentation">documentation</a>.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>In the Julia REPL, first load the package Trixi</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Trixi
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Trixi</pre></div>
<p>Then start a simulation by executing</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; trixi_include(default_example())
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">trixi_include</span>(<span class="pl-c1">default_example</span>())</pre></div>
<p>To visualize the results, load the package Plots</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Plots
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Plots</pre></div>
<p>and generate a heatmap plot of the results with</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; plot(sol) # No trailing semicolon, otherwise no plot is shown
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(sol) <span class="pl-c"><span class="pl-c">#</span> No trailing semicolon, otherwise no plot is shown</span></pre></div>
<p>This will open a new window with a 2D visualization of the final solution:</p>
<p align="center">
  <a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/3637659/102711616-873a6200-42bb-11eb-8722-d10599f72aa1.png"><img width="300px" src="https://user-images.githubusercontent.com/3637659/102711616-873a6200-42bb-11eb-8722-d10599f72aa1.png" style="max-width:100%;"></a>
</p>
<p>The method <code>trixi_include(...)</code> expects a single string argument with the path to a
Trixi elixir, i.e., a text file containing Julia code necessary to set up and run a
simulation. To quickly see Trixi in action, <code>default_example()</code>
returns the path to an example elixir with a short, two-dimensional
problem setup. A list of all example elixirs packaged with Trixi can be
obtained by running <code>get_examples()</code>. Alternatively, you can also browse the
<a href="examples/"><code>examples/</code></a> subdirectory.
If you want to modify one of the elixirs to set up your own simulation,
download it to your machine, edit the configuration, and pass the file path to
<code>trixi_include(...)</code>.</p>
<p><em>Note on performance:</em> Julia uses just-in-time compilation to transform its
source code to native, optimized machine code at the <em>time of execution</em> and
caches the compiled methods for further use. That means that the first execution
of a Julia method is typically slow, with subsequent runs being much faster. For
instance, in the example above the first execution of <code>trixi_include</code> takes about
20 seconds, while subsequent runs require less than 60 <em>milli</em>seconds.</p>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<p>Additional documentation is available that contains more information on how to
modify/extend Trixi's implementation, how to visualize output files etc. It
also includes a section on our preferred development workflow and some tips for
using Git. The latest documentation can be accessed either
<a href="https://trixi-framework.github.io/Trixi.jl/stable" rel="nofollow">online</a> or under <a href="docs/src"><code>docs/src</code></a>.</p>
<h2><a id="user-content-referencing" class="anchor" aria-hidden="true" href="#referencing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Referencing</h2>
<p>If you use Trixi in your own research or write a paper using results obtained
with the help of Trixi, please cite the following
<a href="https://arxiv.org/abs/2008.10593" rel="nofollow">paper</a>:</p>
<div class="highlight highlight-text-bibtex position-relative" data-snippet-clipboard-copy-content="@online{schlottkelakemper2020purely,
  title={A purely hyperbolic discontinuous {G}alerkin approach for
         self-gravitating gas dynamics},
  author={Schlottke-Lakemper, Michael and Winters, Andrew R and
          Ranocha, Hendrik and Gassner, Gregor J},
  year={2020},
  month={08},
  eprint={2008.10593},
  eprinttype={arXiv},
  eprintclass={math.NA}
}
"><pre><span class="pl-k">@online</span>{<span class="pl-en">schlottkelakemper2020purely</span>,
  <span class="pl-s">title</span>=<span class="pl-s"><span class="pl-pds">{</span>A purely hyperbolic discontinuous {G}alerkin approach for</span>
<span class="pl-s">         self-gravitating gas dynamics<span class="pl-pds">}</span></span>,
  <span class="pl-s">author</span>=<span class="pl-s"><span class="pl-pds">{</span>Schlottke-Lakemper, Michael and Winters, Andrew R and</span>
<span class="pl-s">          Ranocha, Hendrik and Gassner, Gregor J<span class="pl-pds">}</span></span>,
  <span class="pl-s">year</span>=<span class="pl-s"><span class="pl-pds">{</span>2020<span class="pl-pds">}</span></span>,
  <span class="pl-s">month</span>=<span class="pl-s"><span class="pl-pds">{</span>08<span class="pl-pds">}</span></span>,
  <span class="pl-s">eprint</span>=<span class="pl-s"><span class="pl-pds">{</span>2008.10593<span class="pl-pds">}</span></span>,
  <span class="pl-s">eprinttype</span>=<span class="pl-s"><span class="pl-pds">{</span>arXiv<span class="pl-pds">}</span></span>,
  <span class="pl-s">eprintclass</span>=<span class="pl-s"><span class="pl-pds">{</span>math.NA<span class="pl-pds">}</span></span>
}</pre></div>
<p>In addition, you can also refer to Trixi directly as</p>
<div class="highlight highlight-text-bibtex position-relative" data-snippet-clipboard-copy-content="@misc{schlottkelakemper2020trixi,
  title={{T}rixi.jl: A tree-based numerical simulation framework
         for hyperbolic {PDE}s written in {J}ulia},
  author={Schlottke-Lakemper, Michael and Gassner, Gregor J and
          Ranocha, Hendrik and Winters, Andrew R},
  year={2020},
  month={08},
  howpublished={\url{https://github.com/trixi-framework/Trixi.jl}},
  doi={10.5281/zenodo.3996439}
}
"><pre><span class="pl-k">@misc</span>{<span class="pl-en">schlottkelakemper2020trixi</span>,
  <span class="pl-s">title</span>=<span class="pl-s"><span class="pl-pds">{</span>{T}rixi.jl: A tree-based numerical simulation framework</span>
<span class="pl-s">         for hyperbolic {PDE}s written in {J}ulia<span class="pl-pds">}</span></span>,
  <span class="pl-s">author</span>=<span class="pl-s"><span class="pl-pds">{</span>Schlottke-Lakemper, Michael and Gassner, Gregor J and</span>
<span class="pl-s">          Ranocha, Hendrik and Winters, Andrew R<span class="pl-pds">}</span></span>,
  <span class="pl-s">year</span>=<span class="pl-s"><span class="pl-pds">{</span>2020<span class="pl-pds">}</span></span>,
  <span class="pl-s">month</span>=<span class="pl-s"><span class="pl-pds">{</span>08<span class="pl-pds">}</span></span>,
  <span class="pl-s">howpublished</span>=<span class="pl-s"><span class="pl-pds">{</span>\url{https://github.com/trixi-framework/Trixi.jl}<span class="pl-pds">}</span></span>,
  <span class="pl-s">doi</span>=<span class="pl-s"><span class="pl-pds">{</span>10.5281/zenodo.3996439<span class="pl-pds">}</span></span>
}</pre></div>
<h2><a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Authors</h2>
<p>Trixi was initiated by <a href="https://www.mi.uni-koeln.de/NumSim/schlottke-lakemper" rel="nofollow">Michael
Schlottke-Lakemper</a> and
<a href="https://www.mi.uni-koeln.de/NumSim/gregor-gassner" rel="nofollow">Gregor Gassner</a> (both
University of Cologne, Germany). Together with <a href="https://ranocha.de" rel="nofollow">Hendrik Ranocha</a>
(University of Münster, Germany) and <a href="https://liu.se/en/employee/andwi94" rel="nofollow">Andrew Winters</a>
(Linköping University, Sweden), they are the principal developers of Trixi.
The full list of contributors can be found in <a href="AUTHORS.md">AUTHORS.md</a>.</p>
<h2><a id="user-content-license-and-contributing" class="anchor" aria-hidden="true" href="#license-and-contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License and contributing</h2>
<p>Trixi is licensed under the MIT license (see <a href="LICENSE.md">LICENSE.md</a>). Since Trixi is
an open-source project, we are very happy to accept contributions from the
community. Please refer to <a href="CONTRIBUTING.md">CONTRIBUTING.md</a> for more details.</p>
</article></div>