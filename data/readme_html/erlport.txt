<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-erlport" class="anchor" aria-hidden="true" href="#erlport"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ErlPort</h1>
<p dir="auto"><em>A Julia-Erlang module for using the External Term Format from Julia</em></p>
<p dir="auto">Though this module can be used stand-alone, it was originally designed to be
used with the <a href="http://erlport.org/" rel="nofollow">ErlPort</a> project, allowing Julia code to
be run from <a href="http://www.erlang.org/" rel="nofollow">Erlang</a> and <a href="http://lfe.io/" rel="nofollow">LFE</a>,
sending its results back as Erlang terms.</p>
<h2 dir="auto"><a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Prerequisites</h2>
<ul dir="auto">
<li>ErlPort.jl works with Julia 1.0.</li>
</ul>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The following example shows installing ErlPort on a clean Julia installation and
is useful for development purposes. For using this package in production, it is
better to include it in your Julia registry.</p>
<ul dir="auto">
<li>
<p dir="auto">Clone this git repository.</p>
</li>
<li>
<p dir="auto">Open a Julia shell:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="$ julia
               _
   _       _ _(_)_     |  Documentation: https://docs.julialang.org
  (_)     | (_) (_)    |
   _ _   _| |_  __ _   |  Type &quot;?&quot; for help, &quot;]?&quot; for Pkg help.
  | | | | | | |/ _` |  |
  | | |_| | | | (_| |  |  Version 1.0.0 (2018-08-08)
 _/ |\__'_|_|_|\__'_|  |  Official https://julialang.org/ release
|__/                   |
"><pre class="notranslate"><code>$ julia
               _
   _       _ _(_)_     |  Documentation: https://docs.julialang.org
  (_)     | (_) (_)    |
   _ _   _| |_  __ _   |  Type "?" for help, "]?" for Pkg help.
  | | | | | | |/ _` |  |
  | | |_| | | | (_| |  |  Version 1.0.0 (2018-08-08)
 _/ |\__'_|_|_|\__'_|  |  Official https://julialang.org/ release
|__/                   |

</code></pre></div>
</li>
<li>
<p dir="auto">Type a <code>]</code> character to open a "pkg" subshell.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="(v1.0) pkg&gt;"><pre class="notranslate"><code>(v1.0) pkg&gt;
</code></pre></div>
</li>
<li>
<p dir="auto">Install the ErlPort package.</p>
<p dir="auto">ErlPorts is not a registered package yet, so it can be installed as
described in the <a href="adding-unreg-packages">Adding unregistered packages</a>
section of the Julia documentation.</p>
<p dir="auto">In this example we will use our local clone, but you can also specify the
GitHub URL and branch name (see the documentation section above).</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="(v1.0) pkg&gt; add /local/path/to/ErlPort.jl

   Cloning default registries into /home/hcs/.julia/registries
   Cloning registry General from &quot;https://github.com/JuliaRegistries/General.git&quot;
  Updating registry at `~/.julia/registries/General`
  Updating git-repo `https://github.com/JuliaRegistries/General.git`
   Cloning git-repo `/home/hcs/w/julia/ErlPort.jl`
  Updating git-repo `/home/hcs/w/julia/ErlPort.jl`
 Resolving package versions...
  Updating `~/.julia/environments/v1.0/Project.toml`
  [572bf9c6] + ErlPort v0.4.0 #many-improvements (/home/hcs/w/julia/ErlPort.jl)
  Updating `~/.julia/environments/v1.0/Manifest.toml`
  [572bf9c6] + ErlPort v0.4.0 #many-improvements (/home/hcs/w/julia/ErlPort.jl)
  [2a0f44e3] + Base64
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test"><pre class="notranslate"><code>(v1.0) pkg&gt; add /local/path/to/ErlPort.jl

   Cloning default registries into /home/hcs/.julia/registries
   Cloning registry General from "https://github.com/JuliaRegistries/General.git"
  Updating registry at `~/.julia/registries/General`
  Updating git-repo `https://github.com/JuliaRegistries/General.git`
   Cloning git-repo `/home/hcs/w/julia/ErlPort.jl`
  Updating git-repo `/home/hcs/w/julia/ErlPort.jl`
 Resolving package versions...
  Updating `~/.julia/environments/v1.0/Project.toml`
  [572bf9c6] + ErlPort v0.4.0 #many-improvements (/home/hcs/w/julia/ErlPort.jl)
  Updating `~/.julia/environments/v1.0/Manifest.toml`
  [572bf9c6] + ErlPort v0.4.0 #many-improvements (/home/hcs/w/julia/ErlPort.jl)
  [2a0f44e3] + Base64
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
</code></pre></div>
</li>
<li>
<p dir="auto">Hit "backspace" to close the "pkg" subshell.</p>
</li>
</ul>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">The following example shows how to use ErlPort to encode Julia objects into
external term format and decode them from external term format:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; import ErlPort
[ Info: Precompiling ErlPort [572bf9c6-b013-11e8-0682-13c52dd2789a]

julia&gt; list = [1, 2, 3]
3-element Array{Int64,1}:
 1
 2
 3

julia&gt; encoded = ErlPort.encode(list)
13-element Array{UInt8,1}:
 0x83
 0x6c
 0x00
 0x00
 0x00
 0x03
 0x61
 0x01
 0x61
 0x02
 0x61
 0x03
 0x6a

julia&gt; ErlPort.decode(encoded)
3-element Array{Int64,1}:
 1
 2
 3"><pre class="notranslate"><code>julia&gt; import ErlPort
[ Info: Precompiling ErlPort [572bf9c6-b013-11e8-0682-13c52dd2789a]

julia&gt; list = [1, 2, 3]
3-element Array{Int64,1}:
 1
 2
 3

julia&gt; encoded = ErlPort.encode(list)
13-element Array{UInt8,1}:
 0x83
 0x6c
 0x00
 0x00
 0x00
 0x03
 0x61
 0x01
 0x61
 0x02
 0x61
 0x03
 0x6a

julia&gt; ErlPort.decode(encoded)
3-element Array{Int64,1}:
 1
 2
 3
</code></pre></div>
<p dir="auto">The contents of the <code>encoded</code> byte sequence can be read natively in Erlang:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="~$ erl
Erlang/OTP 21 [erts-10.0.8] [source] [64-bit] [smp:4:4] [ds:4:4:10]
[async-threads:4] [hipe]

Eshell V10.0.8  (abort with ^G)

% The `Encoded` variable has the exact same bytes as the `encoded` variable in
% the Julia shell above.
1&gt; Encoded = &lt;&lt;&quot;\x83\x6c\x00\x00\x00\x03\x61\x01\x61\x02\x61\x03\x6a&quot;&gt;&gt;.
&lt;&lt;131,108,0,0,0,3,97,1,97,2,97,3,106&gt;&gt;

2&gt; List = binary_to_term(Encoded).
[1,2,3]"><pre class="notranslate"><code>~$ erl
Erlang/OTP 21 [erts-10.0.8] [source] [64-bit] [smp:4:4] [ds:4:4:10]
[async-threads:4] [hipe]

Eshell V10.0.8  (abort with ^G)

% The `Encoded` variable has the exact same bytes as the `encoded` variable in
% the Julia shell above.
1&gt; Encoded = &lt;&lt;"\x83\x6c\x00\x00\x00\x03\x61\x01\x61\x02\x61\x03\x6a"&gt;&gt;.
&lt;&lt;131,108,0,0,0,3,97,1,97,2,97,3,106&gt;&gt;

2&gt; List = binary_to_term(Encoded).
[1,2,3]
</code></pre></div>
<h2 dir="auto"><a id="user-content-a-note-on-representation" class="anchor" aria-hidden="true" href="#a-note-on-representation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>A note on representation</h2>
<p dir="auto">Sometimes the same data can have multiple representation in External term
format. E.g. both the <code>&lt;&lt;131,108,0,0,0,3,97,1,97,2,97,3,106&gt;&gt;</code> and
<code>&lt;&lt;131,107,0,3,1,2,3&gt;&gt;</code> byte sequences in External Term Format represent the
<code>[1,2,3]</code> list.</p>
<p dir="auto">As we see in the example above, ErlPort chooses the former representation.
Erlang's <code>term_to_binary</code> function chooses the latter:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="erlang&gt; term_to_binary([1,2,3]).
&lt;&lt;131,107,0,3,1,2,3&gt;&gt;"><pre class="notranslate"><code>erlang&gt; term_to_binary([1,2,3]).
&lt;&lt;131,107,0,3,1,2,3&gt;&gt;
</code></pre></div>
<p dir="auto">This doesn't cause any problem, this representation is also recognized by
ErlPort:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; ErlPort.decode(b&quot;\x83\x6b\x00\x03\x01\x02\x03&quot;)
3-element Array{UInt8,1}:
 0x01
 0x02
 0x03"><pre class="notranslate"><code>julia&gt; ErlPort.decode(b"\x83\x6b\x00\x03\x01\x02\x03")
3-element Array{UInt8,1}:
 0x01
 0x02
 0x03
</code></pre></div>
<h2 dir="auto"><a id="user-content-unit-tests" class="anchor" aria-hidden="true" href="#unit-tests"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Unit tests</h2>
<ul dir="auto">
<li>
<p dir="auto">Start the Julia shell and type a <code>]</code> character to open a "pkg" subshell.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="$ julia
[...]
(v1.0) pkg&gt;"><pre class="notranslate"><code>$ julia
[...]
(v1.0) pkg&gt;
</code></pre></div>
</li>
<li>
<p dir="auto">Type <code>test ErlPort</code>:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="(v1.0) pkg&gt; test ErlPort   
Testing ErlPort   
[...]
Testing ErlPort tests passed"><pre class="notranslate"><code>(v1.0) pkg&gt; test ErlPort   
Testing ErlPort   
[...]
Testing ErlPort tests passed
</code></pre></div>
</li>
</ul>
<h2 dir="auto"><a id="user-content-type-conversions" class="anchor" aria-hidden="true" href="#type-conversions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Type Conversions</h2>
<h3 dir="auto"><a id="user-content-erlang-to-julia" class="anchor" aria-hidden="true" href="#erlang-to-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Erlang to Julia</h3>
<table>
<thead>
<tr>
<th>Erlang</th>
<th>Julia</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>true</code></td>
<td><code>true</code></td>
</tr>
<tr>
<td><code>false</code></td>
<td><code>false</code></td>
</tr>
<tr>
<td><code>undefined</code></td>
<td><code>nothing</code></td>
</tr>
<tr>
<td><code>nan</code></td>
<td><code>NaN</code></td>
</tr>
<tr>
<td><code>an_atom</code></td>
<td><code>:an_atom</code></td>
</tr>
<tr>
<td><code>3</code></td>
<td><code>3</code>    (Int64)</td>
</tr>
<tr>
<td><code>3.14</code></td>
<td><code>3.14</code> (Float64)</td>
</tr>
<tr>
<td><code>&lt;&lt;"str"&gt;&gt;</code></td>
<td><code>b"str"</code></td>
</tr>
<tr>
<td><code>[1,2,3]</code></td>
<td><code>[1,2,3]</code></td>
</tr>
<tr>
<td><code>{a,b,c}</code></td>
<td><code>(:a,:b,:c)</code></td>
</tr>
<tr>
<td><code>#{1 =&gt; 2}</code></td>
<td><code>Dict(1 =&gt; 2)</code></td>
</tr>
</tbody>
</table>
<h3 dir="auto"><a id="user-content-julia-to-erlang" class="anchor" aria-hidden="true" href="#julia-to-erlang"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Julia to Erlang</h3>
<table>
<thead>
<tr>
<th>Julia</th>
<th>Erlang</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>true</code></td>
<td><code>true</code></td>
</tr>
<tr>
<td><code>false</code></td>
<td><code>false</code></td>
</tr>
<tr>
<td><code>nothing</code></td>
<td><code>undefined</code></td>
</tr>
<tr>
<td><code>NaN</code></td>
<td><code>nan</code></td>
</tr>
<tr>
<td><code>:an_atom</code></td>
<td><code>an_atom</code></td>
</tr>
<tr>
<td><code>3</code> (Int64)</td>
<td><code>3</code></td>
</tr>
<tr>
<td><code>3.14</code> (Float64)</td>
<td><code> </code>3.14</td>
</tr>
<tr>
<td><code>"str"</code></td>
<td><code>&lt;&lt;"str"&gt;&gt;</code></td>
</tr>
<tr>
<td><code>b"str"</code></td>
<td><code>&lt;&lt;"str"&gt;&gt;</code></td>
</tr>
<tr>
<td><code>[1,2,3]</code></td>
<td><code>[1,2,3]</code></td>
</tr>
<tr>
<td><code>(:a,:b,:c)</code></td>
<td><code>{a,b,c}</code></td>
</tr>
<tr>
<td><code>Dict(1 =&gt; 2)</code></td>
<td><code>#{1 =&gt; 2}</code></td>
</tr>
</tbody>
</table>
</article></div>