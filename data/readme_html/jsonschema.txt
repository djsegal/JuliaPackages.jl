<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-jsonschema" class="anchor" aria-hidden="true" href="#jsonschema"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>JSONSchema</h1>
<p><em>JSON instance validation using JSON Schemas</em></p>
<p><a href="https://travis-ci.org/fredo-dedup/JSONSchema.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/eb486238f120ce0396a93ddc8eddc64a58e321d4/68747470733a2f2f7472617669732d63692e6f72672f667265646f2d64656475702f4a534f4e536368656d612e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/fredo-dedup/JSONSchema.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/fredo-dedup/jsonschema/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/717fcc016b87ae8a18ffdca475a82d210dfb7412/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6536656137326c3773626c6c317669612f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/e6ea72l7sbll1via/branch/master?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/fredo-dedup/JSONSchema?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/73b58a7d643860105d4f72d9f5fecb530b7f0fb4/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f667265646f2d64656475702f4a534f4e536368656d612f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/fredo-dedup/JSONSchema/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/fredo-dedup/JSONSchema.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/dd351d3b7ba42dee59c2524b7dd5b88513818e61/68747470733a2f2f636f6465636f762e696f2f67682f667265646f2d64656475702f4a534f4e536368656d612e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/fredo-dedup/JSONSchema.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Overview</h2>
<p><a href="https://github.com/fredo-dedup/JSONSchema.jl">JSONSchema.jl</a> is a JSON validation package
for the <a href="https://julialang.org/" rel="nofollow">julia</a> programming language. Given a <a href="http://json-schema.org/specification.html" rel="nofollow">validation
schema</a> this package can verify if any JSON
instance meets all the assertions defining a valid document.</p>
<p>This package has been validated with the <a href="https://github.com/json-schema-org/JSON-Schema-Test-Suite">JSON Schema Test Suite</a>
for draft v4 and v6.</p>
<h2><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>API</h2>
<p>Create a <code>Schema</code> object by passing a string:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> my_schema <span class="pl-k">=</span> <span class="pl-c1">Schema</span>(<span class="pl-s"><span class="pl-pds">"""</span>{</span>
<span class="pl-s">            "properties": {</span>
<span class="pl-s">                "foo": {},</span>
<span class="pl-s">                "bar": {}</span>
<span class="pl-s">            },</span>
<span class="pl-s">            "required": ["foo"]</span>
<span class="pl-s">        }<span class="pl-pds">"""</span></span>)</pre></div>
<p>passing a dictionary with the same structure as a schema:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> my_schema <span class="pl-k">=</span> <span class="pl-c1">Schema</span>(
            <span class="pl-c1">Dict</span>(
                <span class="pl-s"><span class="pl-pds">"</span>properties<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(
                    <span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(),
                    <span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>()
                ),
                <span class="pl-s"><span class="pl-pds">"</span>required<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>]
            )
        )</pre></div>
<p>or by passing a parsed JSON file containing the schema:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> my_schema <span class="pl-k">=</span> <span class="pl-c1">Schema</span>(JSON<span class="pl-k">.</span><span class="pl-c1">parsefile</span>(filename))</pre></div>
<p>Check the validity of a given JSON instance by calling <code>validate</code> with the JSON instance <code>x</code>
to be tested and the <code>schema</code>. If the validation succeeds, <code>validate</code> returns <code>nothing</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> data_pass <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">true</span>)
Dict{String,Bool} with <span class="pl-c1">1</span> entry<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">validate</span>(data_pass, my_schema)
</pre></div>
<p>If the validation fails, a struct is returned that, when printed, explains the reason for
the failure:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> data_fail <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">12.5</span>)
Dict{String,Float64} with <span class="pl-c1">1</span> entry<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">12.5</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">validate</span>(data_fail, my_schema)
Validation failed<span class="pl-k">:</span>
path<span class="pl-k">:</span>         top<span class="pl-k">-</span>level
instance<span class="pl-k">:</span>     <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">12.5</span>)
schema key<span class="pl-k">:</span>   required
schema value<span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>]</pre></div>
<p>As a short-hand for <code>validate(x, schema) === nothing</code>, use <code>Base.isvalid(x, schema)</code>.</p>
</article></div>