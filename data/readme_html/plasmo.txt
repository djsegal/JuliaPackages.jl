<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a target="_blank" rel="noopener noreferrer" href="./docs/plasmo3.svg"><img src="./docs/plasmo3.svg" alt="Logo" style="max-width:100%;"></a></p>
<p><a href="https://travis-ci.org/jalving/Plasmo.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b0044f6535f6df9517cdb770c29065514dd63ca4/68747470733a2f2f7472617669732d63692e6f72672f6a616c76696e672f506c61736d6f2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/jalving/Plasmo.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/jalving/Plasmo.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/978dbd67fb5a24dfd7315694e23693fc515c1441/68747470733a2f2f636f6465636f762e696f2f67682f6a616c76696e672f506c61736d6f2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/jalving/Plasmo.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://jalving.github.io/Plasmo.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-plasmojl" class="anchor" aria-hidden="true" href="#plasmojl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Plasmo.jl</h1>
<p>Plasmo.jl (Platform for Scalable Modeling and Optimization) is modeling interface that facilitates solving optimization problems using a graph-based approach.  The package enables component style modeling by means of modularizing optimization models that
can be constructed independently and connected using linking constraints.<br>
The graph-based modeling approach facilitates decomposition techniques such as graph partitioning and community detection which enable the use of parallel solvers such as <a href="https://github.com/Argonne-National-Laboratory/PIPS/tree/master/PIPS-NLP">PIPS-NLP</a>,<a href="https://github.com/Argonne-National-Laboratory/DSP">DSP</a>, or built-in Julia solvers for Benders
and Lagrangean Decomposition.
Plasmo.jl has been developed by the <a href="http://zavalab.engr.wisc.edu/" rel="nofollow">Scalable Systems Laboratory</a> at the University of Wisconsin-Madison.</p>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Documentation</h2>
<p>Documentation is available through <a href="https://jalving.github.io/Plasmo.jl/dev" rel="nofollow">GitHub Pages</a>.
Additional examples can be found in the <a href="https://github.com/jalving/Plasmo.jl/tree/master/examples/ModelGraph">examples</a> folder.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Plasmo.jl<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-simple-example" class="anchor" aria-hidden="true" href="#simple-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Simple Example</h2>
<p>Plasmo.jl uses optimization models written with <a href="https://github.com/JuliaOpt/JuMP.jl">JuMP</a>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> JuMP
<span class="pl-k">using</span> Plasmo
<span class="pl-k">using</span> Ipopt

graph <span class="pl-k">=</span> <span class="pl-c1">ModelGraph</span>()
<span class="pl-c1">setsolver</span>(graph,<span class="pl-c1">IpoptSolver</span>())

<span class="pl-c"><span class="pl-c">#</span>Add nodes to a ModelGraph</span>
n1 <span class="pl-k">=</span> <span class="pl-c1">add_node!</span>(graph)
n2 <span class="pl-k">=</span> <span class="pl-c1">add_node!</span>(graph)

<span class="pl-c"><span class="pl-c">#</span>Create JuMP models</span>
m1 <span class="pl-k">=</span> <span class="pl-c1">Model</span>()
<span class="pl-c1">@variable</span>(m1,<span class="pl-c1">0</span> <span class="pl-k">&lt;=</span> x <span class="pl-k">&lt;=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">@variable</span>(m1,<span class="pl-c1">0</span> <span class="pl-k">&lt;=</span> y <span class="pl-k">&lt;=</span> <span class="pl-c1">3</span>)
<span class="pl-c1">@constraint</span>(m1,x<span class="pl-k">+</span>y <span class="pl-k">&lt;=</span> <span class="pl-c1">4</span>)
<span class="pl-c1">@objective</span>(m1,Min,x)

m2 <span class="pl-k">=</span> <span class="pl-c1">Model</span>()
<span class="pl-c1">@variable</span>(m2,x)
<span class="pl-c1">@NLconstraint</span>(m2,<span class="pl-c1">exp</span>(x) <span class="pl-k">&gt;=</span> <span class="pl-c1">2</span>)

<span class="pl-c"><span class="pl-c">#</span>Set JuMP models on nodes</span>
<span class="pl-c1">setmodel</span>(n1,m1)     <span class="pl-c"><span class="pl-c">#</span>set m1 to node 1.  Updates reference on m1</span>
<span class="pl-c1">setmodel</span>(n2,m2)

<span class="pl-c"><span class="pl-c">#</span>Link constraints take the same expressions as the JuMP @constraint macro</span>
<span class="pl-c1">@linkconstraint</span>(graph,n1[<span class="pl-c1">:x</span>] <span class="pl-k">==</span> n2[<span class="pl-c1">:x</span>])

<span class="pl-c"><span class="pl-c">#</span>Get all of the link constraints in a graph</span>
links <span class="pl-k">=</span> <span class="pl-c1">getlinkconstraints</span>(graph)

<span class="pl-c1">solve</span>(graph)

<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>n1[:x]= <span class="pl-pds">"</span></span>,JuMP<span class="pl-k">.</span><span class="pl-c1">getvalue</span>(n1[<span class="pl-c1">:x</span>]))
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>n2[:x]= <span class="pl-pds">"</span></span>,JuMP<span class="pl-k">.</span><span class="pl-c1">getvalue</span>(n2[<span class="pl-c1">:x</span>]))</pre></div>
<h2><a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Acknowledgments</h2>
<p>This code is based on work supported by the U.S. Department of Energy (DOE), Office of Science, under Contract No. DE-AC02-06CH11357 as well as the DOE Office of Electricity Delivery and Energy Reliabilityâ€™s Advanced Grid Research and Development program at Argonne National Laboratory.</p>
<h2><a id="user-content-citing-plasmo" class="anchor" aria-hidden="true" href="#citing-plasmo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Citing Plasmo</h2>
<p>If you find Plasmo useful for your work, you might cite the current <a href="https://arxiv.org/pdf/1812.04983.pdf" rel="nofollow">pre-print</a> of the manuscript:</p>
<pre><code>@article{JalvingZavala2018,
archivePrefix = {arXiv},
arxivId = {arXiv:1812.04983v1},
author = {Jalving, Jordan and Cao, Yankai and Zavala, Victor M},
eprint = {arXiv:1812.04983v1},
title = {{Graph-Based Modeling and Simulation of Complex Systems}}
}
</code></pre>
</article></div>