<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-parallelkmeans" class="anchor" aria-hidden="true" href="#parallelkmeans"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ParallelKMeans</h1>
<p><a href="https://PyDataBlog.github.io/ParallelKMeans.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://PyDataBlog.github.io/ParallelKMeans.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://www.travis-ci.org/PyDataBlog/ParallelKMeans.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/bbdfb1f93ea47fece59fe303d213b0046333b48e/68747470733a2f2f7777772e7472617669732d63692e6f72672f507944617461426c6f672f506172616c6c656c4b4d65616e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://www.travis-ci.org/PyDataBlog/ParallelKMeans.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/PyDataBlog/ParallelKMeans.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/b69cbe1a3d945503ea8c014b629940bcab2a18cf/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f507944617461426c6f672f506172616c6c656c4b4d65616e732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/PyDataBlog/ParallelKMeans.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://app.fossa.com/projects/git%2Bgithub.com%2FPyDataBlog%2FParallelKMeans.jl?ref=badge_shield" rel="nofollow"><img src="https://camo.githubusercontent.com/724d8adfa15830da36cbb543b41296caf8084aa0/68747470733a2f2f6170702e666f7373612e636f6d2f6170692f70726f6a656374732f6769742532426769746875622e636f6d253246507944617461426c6f67253246506172616c6c656c4b4d65616e732e6a6c2e7376673f747970653d736869656c64" alt="FOSSA Status" data-canonical-src="https://app.fossa.com/api/projects/git%2Bgithub.com%2FPyDataBlog%2FParallelKMeans.jl.svg?type=shield" style="max-width:100%;"></a>
<a href="https://mybinder.org/v2/gh/PyDataBlog/ParallelKMeans.jl/master" rel="nofollow"><img src="https://camo.githubusercontent.com/483bae47a175c24dfbfc57390edd8b6982ac5fb3/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667" alt="Binder" data-canonical-src="https://mybinder.org/badge_logo.svg" style="max-width:100%;"></a></p>
<hr>
<p><strong>Authors:</strong> <a href="https://www.linkedin.com/in/bbrenyah/" rel="nofollow">Bernard Brenyah</a> &amp; <a href="https://www.linkedin.com/in/andrej-oskin-b2b03959/" rel="nofollow">Andrey Oskin</a></p>
<hr>
<div align="center">
    <b>Classic &amp; Contemporary Variants Of K-Means In Sonic Mode</b>
</div>
<p align="center">
  <a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/2630519/80216880-70b60b00-8647-11ea-913b-7977ef1c156c.gif"><img src="https://user-images.githubusercontent.com/2630519/80216880-70b60b00-8647-11ea-913b-7977ef1c156c.gif" style="max-width:100%;"></a>
</p>
<hr>
<h2><a id="user-content-table-of-content" class="anchor" aria-hidden="true" href="#table-of-content"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Table Of Content</h2>
<ol>
<li><a href="#Documentation">Documentation</a></li>
<li><a href="#Installation">Installation</a></li>
<li><a href="#Features">Features</a></li>
<li><a href="#License">License</a></li>
</ol>
<hr>
<h3><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h3>
<ul>
<li>
<p>Stable Documentation: <a href="https://PyDataBlog.github.io/ParallelKMeans.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a></p>
</li>
<li>
<p>Experimental Documentation: <a href="https://PyDataBlog.github.io/ParallelKMeans.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
</li>
</ul>
<hr>
<h3><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h3>
<p>You can grab the latest stable version of this package by simply running in Julia.
Don't forget to Julia's package manager with <code>]</code></p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add ParallelKMeans</pre></div>
<p>For the few (and selected) brave ones, one can simply grab the current experimental features by simply adding the experimental branch to your development environment after invoking the package manager with <code>]</code>:</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add ParallelKMeans<span class="pl-c"><span class="pl-c">#</span>master</span></pre></div>
<p>To revert to a stable version, you can simply run:</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> free ParallelKMeans</pre></div>
<hr>
<h3><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h3>
<ul>
<li>Lightening fast implementation of K-Means clustering algorithm even on a single thread in native Julia.</li>
<li>Support for multi-theading implementation of K-Means clustering algorithm.</li>
<li>Kmeans++ initialization for faster and better convergence.</li>
<li>Implementation of all available variants of the K-Means algorithm.</li>
<li>Support for all distance metrics available at <a href="https://github.com/JuliaStats/Distances.jl">Distances.jl</a></li>
<li>Supported interface as an <a href="https://github.com/alan-turing-institute/MLJ.jl#available-models">MLJ</a> model.</li>
</ul>
<hr>
<h3><a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Benchmarks</h3>
<p>Currently, this package is benchmarked against similar implementations in both Python, R, and Julia. All reproducible benchmarks can be found in <a href="https://github.com/PyDataBlog/ParallelKMeans.jl/tree/master/extras">ParallelKMeans/extras</a> directory.</p>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/benchmark_image.png"><img src="docs/src/benchmark_image.png" alt="benchmark_image.png" style="max-width:100%;"></a></p>
<hr>
<h3><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h3>
<p><a href="https://app.fossa.com/projects/git%2Bgithub.com%2FPyDataBlog%2FParallelKMeans.jl?ref=badge_large" rel="nofollow"><img src="https://camo.githubusercontent.com/5f6092a6599b73661d0be510fa0cb2e623721611/68747470733a2f2f6170702e666f7373612e636f6d2f6170692f70726f6a656374732f6769742532426769746875622e636f6d253246507944617461426c6f67253246506172616c6c656c4b4d65616e732e6a6c2e7376673f747970653d6c61726765" alt="FOSSA Status" data-canonical-src="https://app.fossa.com/api/projects/git%2Bgithub.com%2FPyDataBlog%2FParallelKMeans.jl.svg?type=large" style="max-width:100%;"></a></p>
</article></div>