<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-blockarraysjl" class="anchor" aria-hidden="true" href="#blockarraysjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>BlockArrays.jl</h1>
<p><a href="https://github.com/JuliaArrays/BlockArrays.jl/actions"><img src="https://github.com/JuliaArrays/BlockArrays.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/JuliaArrays/BlockArrays.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f4d36563548be8430204f879ae6f96e729db2ffa8e5b81f177544f6dc8d68b07/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614172726179732f426c6f636b4172726179732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaArrays/BlockArrays.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a> <a href="https://JuliaArrays.github.io/BlockArrays.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a> <a href="https://JuliaArrays.github.io/BlockArrays.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>A block array is a partition of an array into blocks or subarrays, see <a href="https://en.wikipedia.org/wiki/Block_matrix" rel="nofollow">wikipedia</a> for a more extensive description. This package has two purposes. Firstly, it defines an interface for an <code>AbstractBlockArray</code> block arrays that can be shared among types representing different types of block arrays. The advantage to this is that it provides a consistent API for block arrays.</p>
<p>Secondly, it also implements two different type of block arrays that follow the <code>AbstractBlockArray</code> interface. The type <code>BlockArray</code> stores each block contiguously while the type <code>PseudoBlockArray</code> stores the full matrix contiguously. This means that <code>BlockArray</code> supports fast non copying extraction and insertion of blocks while <code>PseudoBlockArray</code> supports fast access to the full matrix to use in in for example a linear solver.</p>
<p>A simple way to produce <code>BlockArray</code>s is via <code>mortar</code>, which combines an array of arrays into a <code>BlockArray</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; mortar([randn(3), randn(4)])
2-blocked 7-element BlockArray{Float64,1}:
 -0.19808699390960527 
  0.04711385377738941 
 -0.6308529482215658  
 ─────────────────────
 -0.021279626465135287
 -1.0991149020591062  
  1.0817971931026398  
 -0.012442892450142308

julia&gt; mortar(reshape([randn(2,2), randn(1,2), randn(2,3), randn(1,3)],2,2))
2×2-blocked 3×5 BlockArray{Float64,2}:
 -1.17797    0.359738   │   0.87676    -2.06495    1.74256 
  1.54787    1.64133    │  -0.0416484  -2.00241   -0.522441
 ───────────────────────┼──────────────────────────────────
  0.430093  -0.0263753  │  -1.31275     0.278447  -0.139579
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">mortar</span>([<span class="pl-c1">randn</span>(<span class="pl-c1">3</span>), <span class="pl-c1">randn</span>(<span class="pl-c1">4</span>)])
<span class="pl-c1">2</span><span class="pl-k">-</span>blocked <span class="pl-c1">7</span><span class="pl-k">-</span>element BlockArray{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">0.19808699390960527</span> 
  <span class="pl-c1">0.04711385377738941</span> 
 <span class="pl-k">-</span><span class="pl-c1">0.6308529482215658</span>  
 ─────────────────────
 <span class="pl-k">-</span><span class="pl-c1">0.021279626465135287</span>
 <span class="pl-k">-</span><span class="pl-c1">1.0991149020591062</span>  
  <span class="pl-c1">1.0817971931026398</span>  
 <span class="pl-k">-</span><span class="pl-c1">0.012442892450142308</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mortar</span>(<span class="pl-c1">reshape</span>([<span class="pl-c1">randn</span>(<span class="pl-c1">2</span>,<span class="pl-c1">2</span>), <span class="pl-c1">randn</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>), <span class="pl-c1">randn</span>(<span class="pl-c1">2</span>,<span class="pl-c1">3</span>), <span class="pl-c1">randn</span>(<span class="pl-c1">1</span>,<span class="pl-c1">3</span>)],<span class="pl-c1">2</span>,<span class="pl-c1">2</span>))
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">2</span><span class="pl-k">-</span>blocked <span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">5</span> BlockArray{Float64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">1.17797</span>    <span class="pl-c1">0.359738</span>   │   <span class="pl-c1">0.87676</span>    <span class="pl-k">-</span><span class="pl-c1">2.06495</span>    <span class="pl-c1">1.74256</span> 
  <span class="pl-c1">1.54787</span>    <span class="pl-c1">1.64133</span>    │  <span class="pl-k">-</span><span class="pl-c1">0.0416484</span>  <span class="pl-k">-</span><span class="pl-c1">2.00241</span>   <span class="pl-k">-</span><span class="pl-c1">0.522441</span>
 ───────────────────────┼──────────────────────────────────
  <span class="pl-c1">0.430093</span>  <span class="pl-k">-</span><span class="pl-c1">0.0263753</span>  │  <span class="pl-k">-</span><span class="pl-c1">1.31275</span>     <span class="pl-c1">0.278447</span>  <span class="pl-k">-</span><span class="pl-c1">0.139579</span></pre></div>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<ul>
<li><a href="https://JuliaArrays.github.io/BlockArrays.jl/stable" rel="nofollow"><strong>STABLE</strong></a> — <strong>most recently tagged version of the documentation.</strong></li>
<li><a href="https://JuliaArrays.github.io/BlockArrays.jl/latest/" rel="nofollow"><strong>LATEST</strong></a> — <em>in-development version of the documentation.</em></li>
</ul>
<h2><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing</h2>
<p>Possible ways of contributing to this package include:</p>
<ul>
<li>Implement the fusing broadcasting interface for blocked arrays.</li>
<li>Make different Linear Algebra function (like matrix / vector multiplications) with blocked arrays work.</li>
<li>Implement different reductions functionalities, (<code>sum</code> and co.).</li>
<li>Audit the performance and make improvements as needed.</li>
</ul>
</article></div>