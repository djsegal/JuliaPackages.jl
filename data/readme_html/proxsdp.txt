<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2><a id="" class="anchor" aria-hidden="true" href="#"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><a target="_blank" rel="noopener noreferrer" href="https://github.com/mariohsouto/ProxSDP_aux/blob/master/logo_proxSDP.png"><img src="https://github.com/mariohsouto/ProxSDP_aux/raw/master/logo_proxSDP.png" alt="ProxSDP logo" title="ProxSDP logo" style="max-width:100%;"></a></h2>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://github.com/mariohsouto/ProxSDP.jl/actions?query=workflow%3ACI"><img src="https://github.com/mariohsouto/ProxSDP.jl/workflows/CI/badge.svg?branch=master" alt="Build Status" style="max-width:100%;"></a> <a href="http://codecov.io/github/mariohsouto/ProxSDP.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/700a2a635c0516ca6b0c7d615a5ccb7b0ea28af1b046dee909baa5ff7d077039/687474703a2f2f636f6465636f762e696f2f6769746875622f6d6172696f68736f75746f2f50726f785344502e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Codecov branch" data-canonical-src="http://codecov.io/github/mariohsouto/ProxSDP.jl/coverage.svg?branch=master" style="max-width:100%;"></a> <a href="https://mariohsouto.github.io/ProxSDP.jl/latest/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p><strong>ProxSDP</strong> is an open-source semidefinite programming (<a href="https://en.wikipedia.org/wiki/Semidefinite_programming" rel="nofollow">SDP</a>) solver based on the paper <a href="https://arxiv.org/abs/1810.05231" rel="nofollow">"Exploiting Low-Rank Structure in Semidefinite Programming by Approximate Operator Splitting"</a>. The main advantage of ProxSDP over other state-of-the-art solvers is the ability to exploit the <strong>low-rank</strong> structure inherent to several SDP problems.</p>
<h3><a id="user-content-overview-of-problems-proxsdp-can-solve" class="anchor" aria-hidden="true" href="#overview-of-problems-proxsdp-can-solve"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Overview of problems ProxSDP can solve</h3>
<ul>
<li>General conic convex optimization problems with the presence of the <a href="https://web.stanford.edu/~boyd/papers/pdf/semidef_prog.pdf" rel="nofollow">positive semidefinite cone</a>, <a href="https://web.stanford.edu/~boyd/papers/pdf/socp.pdf" rel="nofollow">second-order cone</a> and <a href="https://www.math.ucla.edu/~tom/LP.pdf" rel="nofollow">positive orthant</a>;</li>
<li>Semidefinite relaxation of nonconvex problems, e.g. <a href="http://www-math.mit.edu/~goemans/PAPERS/maxcut-jacm.pdf" rel="nofollow">max-cut</a>, <a href="https://arxiv.org/pdf/cs/0606083.pdf" rel="nofollow">binary MIMO</a>, <a href="http://authorstest.library.caltech.edu/141/1/TPS_OPF_2_tech.pdf" rel="nofollow">optimal power flow</a>, <a href="https://web.stanford.edu/~boyd/papers/pdf/sensor_selection.pdf" rel="nofollow">sensor localization</a>, <a href="https://en.wikipedia.org/wiki/Sum-of-squares_optimization" rel="nofollow">sum-of-squares</a>;</li>
<li>Control theory problems with <a href="https://en.wikipedia.org/wiki/Linear_matrix_inequality" rel="nofollow">LMI</a> constraints;</li>
<li>Nuclear norm minimization problems, e.g. <a href="https://statweb.stanford.edu/~candes/papers/MatrixCompletion.pdf" rel="nofollow">matrix completion</a>;</li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>You can install <strong>ProxSDP</strong> through the <a href="https://docs.julialang.org/en/v1/stdlib/Pkg/index.html" rel="nofollow">Julia package manager</a>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="] add ProxSDP
"><pre>] add ProxSDP</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Let's consider the semidefinite programming relaxation of the <a href="http://www-math.mit.edu/~goemans/PAPERS/maxcut-jacm.pdf" rel="nofollow">max-cut</a> problem as in</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="    max   0.25 * W•X
    s.t.  diag(X) = 1,
          X ≽ 0,
"><pre><code>    max   0.25 * W•X
    s.t.  diag(X) = 1,
          X ≽ 0,
</code></pre></div>
<h3><a id="user-content-jump" class="anchor" aria-hidden="true" href="#jump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>JuMP</h3>
<p>This problem can be solved by the following code using <strong>ProxSDP</strong> and <a href="https://github.com/JuliaOpt/JuMP.jl">JuMP</a>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Load packages
using ProxSDP, JuMP, LinearAlgebra

# Number of vertices
n = 4
# Graph weights
W = [18.0  -5.0  -7.0  -6.0
     -5.0   6.0   0.0  -1.0
     -7.0   0.0   8.0  -1.0
     -6.0  -1.0  -1.0   8.0]

# Build Max-Cut SDP relaxation via JuMP
model = Model(with_optimizer(ProxSDP.Optimizer, log_verbose=true, tol_gap=1e-4, tol_feasibility=1e-4))
@variable(model, X[1:n, 1:n], PSD)
@objective(model, Max, 0.25 * dot(W, X))
@constraint(model, diag(X) .== 1)

# Solve optimization problem with ProxSDP
JuMP.optimize!(model)

# Retrieve solution
Xsol = JuMP.value.(X)
"><pre><span class="pl-c"><span class="pl-c">#</span> Load packages</span>
<span class="pl-k">using</span> ProxSDP, JuMP, LinearAlgebra

<span class="pl-c"><span class="pl-c">#</span> Number of vertices</span>
n <span class="pl-k">=</span> <span class="pl-c1">4</span>
<span class="pl-c"><span class="pl-c">#</span> Graph weights</span>
W <span class="pl-k">=</span> [<span class="pl-c1">18.0</span>  <span class="pl-k">-</span><span class="pl-c1">5.0</span>  <span class="pl-k">-</span><span class="pl-c1">7.0</span>  <span class="pl-k">-</span><span class="pl-c1">6.0</span>
     <span class="pl-k">-</span><span class="pl-c1">5.0</span>   <span class="pl-c1">6.0</span>   <span class="pl-c1">0.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>
     <span class="pl-k">-</span><span class="pl-c1">7.0</span>   <span class="pl-c1">0.0</span>   <span class="pl-c1">8.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>
     <span class="pl-k">-</span><span class="pl-c1">6.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">8.0</span>]

<span class="pl-c"><span class="pl-c">#</span> Build Max-Cut SDP relaxation via JuMP</span>
model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(<span class="pl-c1">with_optimizer</span>(ProxSDP<span class="pl-k">.</span>Optimizer, log_verbose<span class="pl-k">=</span><span class="pl-c1">true</span>, tol_gap<span class="pl-k">=</span><span class="pl-c1">1e-4</span>, tol_feasibility<span class="pl-k">=</span><span class="pl-c1">1e-4</span>))
<span class="pl-c1">@variable</span>(model, X[<span class="pl-c1">1</span><span class="pl-k">:</span>n, <span class="pl-c1">1</span><span class="pl-k">:</span>n], PSD)
<span class="pl-c1">@objective</span>(model, Max, <span class="pl-c1">0.25</span> <span class="pl-k">*</span> <span class="pl-c1">dot</span>(W, X))
<span class="pl-c1">@constraint</span>(model, <span class="pl-c1">diag</span>(X) <span class="pl-k">.==</span> <span class="pl-c1">1</span>)

<span class="pl-c"><span class="pl-c">#</span> Solve optimization problem with ProxSDP</span>
JuMP<span class="pl-k">.</span><span class="pl-c1">optimize!</span>(model)

<span class="pl-c"><span class="pl-c">#</span> Retrieve solution</span>
Xsol <span class="pl-k">=</span> JuMP<span class="pl-k">.</span><span class="pl-c1">value</span>.(X)</pre></div>
<h3><a id="user-content-convexjl" class="anchor" aria-hidden="true" href="#convexjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Convex.jl</h3>
<p>Another alternative is to use <strong>ProxSDP</strong> via <a href="https://github.com/jump-dev/Convex.jl">Convex.jl</a> as the following</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Load packages
using Convex, ProxSDP

# Number of vertices
n = 4
# Graph weights
W = [18.0  -5.0  -7.0  -6.0
     -5.0   6.0   0.0  -1.0
     -7.0   0.0   8.0  -1.0
     -6.0  -1.0  -1.0   8.0]
     
# Define optimization problem
X = Semidefinite(n)
problem = maximize(0.25 * dot(W, X), diag(X) == 1)

# Solve optimization problem with ProxSDP
solve!(problem, ProxSDP.Optimizer(log_verbose=true, tol_gap=1e-4, tol_feasibility=1e-4))

# Get the objective value
problem.optval

# Retrieve solution
evaluate(X)
"><pre><span class="pl-c"><span class="pl-c">#</span> Load packages</span>
<span class="pl-k">using</span> Convex, ProxSDP

<span class="pl-c"><span class="pl-c">#</span> Number of vertices</span>
n <span class="pl-k">=</span> <span class="pl-c1">4</span>
<span class="pl-c"><span class="pl-c">#</span> Graph weights</span>
W <span class="pl-k">=</span> [<span class="pl-c1">18.0</span>  <span class="pl-k">-</span><span class="pl-c1">5.0</span>  <span class="pl-k">-</span><span class="pl-c1">7.0</span>  <span class="pl-k">-</span><span class="pl-c1">6.0</span>
     <span class="pl-k">-</span><span class="pl-c1">5.0</span>   <span class="pl-c1">6.0</span>   <span class="pl-c1">0.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>
     <span class="pl-k">-</span><span class="pl-c1">7.0</span>   <span class="pl-c1">0.0</span>   <span class="pl-c1">8.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>
     <span class="pl-k">-</span><span class="pl-c1">6.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>  <span class="pl-k">-</span><span class="pl-c1">1.0</span>   <span class="pl-c1">8.0</span>]
     
<span class="pl-c"><span class="pl-c">#</span> Define optimization problem</span>
X <span class="pl-k">=</span> <span class="pl-c1">Semidefinite</span>(n)
problem <span class="pl-k">=</span> <span class="pl-c1">maximize</span>(<span class="pl-c1">0.25</span> <span class="pl-k">*</span> <span class="pl-c1">dot</span>(W, X), <span class="pl-c1">diag</span>(X) <span class="pl-k">==</span> <span class="pl-c1">1</span>)

<span class="pl-c"><span class="pl-c">#</span> Solve optimization problem with ProxSDP</span>
<span class="pl-c1">solve!</span>(problem, ProxSDP<span class="pl-k">.</span><span class="pl-c1">Optimizer</span>(log_verbose<span class="pl-k">=</span><span class="pl-c1">true</span>, tol_gap<span class="pl-k">=</span><span class="pl-c1">1e-4</span>, tol_feasibility<span class="pl-k">=</span><span class="pl-c1">1e-4</span>))

<span class="pl-c"><span class="pl-c">#</span> Get the objective value</span>
problem<span class="pl-k">.</span>optval

<span class="pl-c"><span class="pl-c">#</span> Retrieve solution</span>
<span class="pl-c1">evaluate</span>(X)</pre></div>
<h2><a id="user-content-citing-this-package" class="anchor" aria-hidden="true" href="#citing-this-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Citing this package</h2>
<p>The published version of the paper can be found <a href="https://doi.org/10.1080/02331934.2020.1823387" rel="nofollow">here</a> and the arXiv version <a href="https://arxiv.org/pdf/1810.05231.pdf" rel="nofollow">here</a>.</p>
<p>We kindly request that you cite the paper as:</p>
<div class="highlight highlight-text-bibtex position-relative" data-snippet-clipboard-copy-content="@article{souto2020exploiting,
  author = {Mario Souto and Joaquim D. Garcia and \'Alvaro Veiga},
  title = {Exploiting low-rank structure in semidefinite programming by approximate operator splitting},
  journal = {Optimization},
  pages = {1-28},
  year  = {2020},
  publisher = {Taylor &amp; Francis},
  doi = {10.1080/02331934.2020.1823387},
  URL = {https://doi.org/10.1080/02331934.2020.1823387}
}
"><pre><span class="pl-k">@article</span>{<span class="pl-en">souto2020exploiting</span>,
  <span class="pl-s">author</span> = <span class="pl-s"><span class="pl-pds">{</span>Mario Souto and Joaquim D. Garcia and \'Alvaro Veiga<span class="pl-pds">}</span></span>,
  <span class="pl-s">title</span> = <span class="pl-s"><span class="pl-pds">{</span>Exploiting low-rank structure in semidefinite programming by approximate operator splitting<span class="pl-pds">}</span></span>,
  <span class="pl-s">journal</span> = <span class="pl-s"><span class="pl-pds">{</span>Optimization<span class="pl-pds">}</span></span>,
  <span class="pl-s">pages</span> = <span class="pl-s"><span class="pl-pds">{</span>1-28<span class="pl-pds">}</span></span>,
  <span class="pl-s">year</span>  = <span class="pl-s"><span class="pl-pds">{</span>2020<span class="pl-pds">}</span></span>,
  <span class="pl-s">publisher</span> = <span class="pl-s"><span class="pl-pds">{</span>Taylor &amp; Francis<span class="pl-pds">}</span></span>,
  <span class="pl-s">doi</span> = <span class="pl-s"><span class="pl-pds">{</span>10.1080/02331934.2020.1823387<span class="pl-pds">}</span></span>,
  <span class="pl-s">URL</span> = <span class="pl-s"><span class="pl-pds">{</span>https://doi.org/10.1080/02331934.2020.1823387<span class="pl-pds">}</span></span>
}</pre></div>
<p>The preprint version of the paper can be found <a href="https://arxiv.org/abs/1810.05231" rel="nofollow">here</a>.</p>
<h2><a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Disclaimer</h2>
<ul>
<li>ProxSDP is a research software, therefore it should not be used in production.</li>
<li>Please open an issue if you find any problems, developers will try to fix and find alternatives.</li>
<li>There is no continuous development for 32-bit systems, the package should work, but might reach some issues.</li>
<li>ProxSDP assumes primal and dual feasibility.</li>
</ul>
<h2><a id="user-content-road-map" class="anchor" aria-hidden="true" href="#road-map"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ROAD MAP</h2>
<ul>
<li>Support for exponential and power cones;</li>
<li>Warm start.</li>
</ul>
</article></div>