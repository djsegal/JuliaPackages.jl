<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-tinyrpcjl" class="anchor" aria-hidden="true" href="#tinyrpcjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TinyRPC.jl</h1>
<p dir="auto">Simple Julia RPC protocol for situations where <a href="https://docs.julialang.org/en/v1/stdlib/Distributed" rel="nofollow"><code>addprocs</code></a> won't work. e.g. communication between machines with different architectures.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add https://github.com/notinaboat/TinyRPC.jl"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>notinaboat<span class="pl-k">/</span>TinyRPC<span class="pl-k">.</span>jl</pre></div>
<h2 dir="auto"><a id="user-content-simple-example" class="anchor" aria-hidden="true" href="#simple-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Simple example</h2>
<p dir="auto">Server:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using TinyRPC: remote

julia&gt; server, clients = TinyRPC.listen(port=2020)

julia&gt; while isempty(clients) sleep(1) end

julia&gt; remote(clients[1], println)(&quot;Hello&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> TinyRPC<span class="pl-k">:</span> remote

julia<span class="pl-k">&gt;</span> server, clients <span class="pl-k">=</span> TinyRPC<span class="pl-k">.</span><span class="pl-c1">listen</span>(port<span class="pl-k">=</span><span class="pl-c1">2020</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-k">while</span> <span class="pl-c1">isempty</span>(clients) <span class="pl-c1">sleep</span>(<span class="pl-c1">1</span>) <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">remote</span>(clients[<span class="pl-c1">1</span>], println)(<span class="pl-s"><span class="pl-pds">"</span>Hello<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Client:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using TinyRPC: remote

julia&gt; rpi = TinyRPC.connect(&quot;raspberrypi.local&quot;; port=2020)

julia&gt; TinyRPC.remote(rpi, read)(`uname -a`, String)
&quot;Linux raspberrypi 5.4.51+ #1333 Mon Aug 10 16:38:02 BST 2020 armv6l GNU/Linux
&quot;

julia&gt; rpi_rand = TinyRPC.remote(rpi, rand)

julia&gt; rpi_rand(UInt, 5)
5-element Array{UInt64,1}:
 0x3d6555e980075ade
 0x28e453c8348db9dd
 0xf82d7356f2b4e2a9
 0x4ac67cf676b0188a
 0xb5fcb87edf5935bb

julia&gt; rpi_write = TinyRPC.remote(rpi, write)

julia&gt; rpi_write(&quot;/sys/class/gpio/gpio10/direction&quot;, &quot;out&quot;)

julia&gt; rpi_write(&quot;/sys/class/gpio/gpio10/value&quot;, &quot;1&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> TinyRPC<span class="pl-k">:</span> remote

julia<span class="pl-k">&gt;</span> rpi <span class="pl-k">=</span> TinyRPC<span class="pl-k">.</span><span class="pl-c1">connect</span>(<span class="pl-s"><span class="pl-pds">"</span>raspberrypi.local<span class="pl-pds">"</span></span>; port<span class="pl-k">=</span><span class="pl-c1">2020</span>)

julia<span class="pl-k">&gt;</span> TinyRPC<span class="pl-k">.</span><span class="pl-c1">remote</span>(rpi, read)(<span class="pl-s"><span class="pl-pds">`</span>uname -a<span class="pl-pds">`</span></span>, String)
<span class="pl-s"><span class="pl-pds">"</span>Linux raspberrypi 5.4.51+ #1333 Mon Aug 10 16:38:02 BST 2020 armv6l GNU/Linux</span>
<span class="pl-s"><span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> rpi_rand <span class="pl-k">=</span> TinyRPC<span class="pl-k">.</span><span class="pl-c1">remote</span>(rpi, rand)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">rpi_rand</span>(UInt, <span class="pl-c1">5</span>)
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{UInt64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0x3d6555e980075ade</span>
 <span class="pl-c1">0x28e453c8348db9dd</span>
 <span class="pl-c1">0xf82d7356f2b4e2a9</span>
 <span class="pl-c1">0x4ac67cf676b0188a</span>
 <span class="pl-c1">0xb5fcb87edf5935bb</span>

julia<span class="pl-k">&gt;</span> rpi_write <span class="pl-k">=</span> TinyRPC<span class="pl-k">.</span><span class="pl-c1">remote</span>(rpi, write)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">rpi_write</span>(<span class="pl-s"><span class="pl-pds">"</span>/sys/class/gpio/gpio10/direction<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>out<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">rpi_write</span>(<span class="pl-s"><span class="pl-pds">"</span>/sys/class/gpio/gpio10/value<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-execute-a-julia-expression-on-a-remote-node" class="anchor" aria-hidden="true" href="#execute-a-julia-expression-on-a-remote-node"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Execute a Julia expression on a remote node.</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; x = 7

julia&gt; TinyRPC.remote_eval(rpi, :(1 + sum([$x,2])))
10"><pre class="notranslate"><code>julia&gt; x = 7

julia&gt; TinyRPC.remote_eval(rpi, :(1 + sum([$x,2])))
10
</code></pre></div>
<h2 dir="auto"><a id="user-content-opaque-result-pointers" class="anchor" aria-hidden="true" href="#opaque-result-pointers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Opaque result pointers</h2>
<p dir="auto">Get a pointer to a large array on the remote node. Use it to access a few elements.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; rp = TinyRPC.remote_eval_ptr(rpi, :([i for i in 1:1_000_000]))
TinyRPC.RemotePtr{Array{Float64,1}}(0x00000000a66fe370, 0xbe910fa8)

julia&gt; TinyRPC.remote_eval(rpi, :( ($rp[])[500:503]))
4-element Array{Int64,1}:
 500
 501
 502
 503

julia&gt; rp[]
ERROR: ArgumentError: RemotePtr not valid on this node.

julia&gt; TinyRPC.free(rpi, rp)"><pre>julia<span class="pl-k">&gt;</span> rp <span class="pl-k">=</span> TinyRPC<span class="pl-k">.</span><span class="pl-c1">remote_eval_ptr</span>(rpi, :([i <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1_000_000</span>]))
TinyRPC<span class="pl-k">.</span><span class="pl-c1">RemotePtr</span><span class="pl-c1">{Array{Float64,1}}</span>(<span class="pl-c1">0x00000000a66fe370</span>, <span class="pl-c1">0xbe910fa8</span>)

julia<span class="pl-k">&gt;</span> TinyRPC<span class="pl-k">.</span><span class="pl-c1">remote_eval</span>(rpi, :( (<span class="pl-k">$</span>rp[])[<span class="pl-c1">500</span><span class="pl-k">:</span><span class="pl-c1">503</span>]))
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{Int64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">500</span>
 <span class="pl-c1">501</span>
 <span class="pl-c1">502</span>
 <span class="pl-c1">503</span>

julia<span class="pl-k">&gt;</span> rp[]
ERROR<span class="pl-k">:</span> ArgumentError<span class="pl-k">:</span> RemotePtr not valid on this node.

julia<span class="pl-k">&gt;</span> TinyRPC<span class="pl-k">.</span><span class="pl-c1">free</span>(rpi, rp)</pre></div>
<h2 dir="auto"><a id="user-content-execute-julia-code-from-a-string" class="anchor" aria-hidden="true" href="#execute-julia-code-from-a-string"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Execute Julia code from a String.</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; TinyRPC.remote_include(rpi, &quot;&quot;&quot;
    x = 7
    x * 2
&quot;&quot;&quot;)
14"><pre class="notranslate"><code>julia&gt; TinyRPC.remote_include(rpi, """
    x = 7
    x * 2
""")
14
</code></pre></div>
<h2 dir="auto"><a id="user-content-protocol" class="anchor" aria-hidden="true" href="#protocol"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Protocol</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="A -&gt; B: serialize(io, ::Expr), serialize(io, ::RemotePtr{Condition})"><pre class="notranslate"><code>A -&gt; B: serialize(io, ::Expr), serialize(io, ::RemotePtr{Condition})
</code></pre></div>
<p dir="auto">A sends B an expression to evaluate and a pointer to a Condition to be notified when the result is ready.</p>
<p dir="auto">A's task waits on the Condition.</p>
<p dir="auto">B deserializes the expression and evaluates it.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="B -&gt; A: serialize(io, ::RemotePtr{Condition}), serialize(io, result)"><pre class="notranslate"><code>B -&gt; A: serialize(io, ::RemotePtr{Condition}), serialize(io, result)
</code></pre></div>
<p dir="auto">B sends the Condition pointer back to A along with the result of the expression.</p>
<p dir="auto">A notifies the the waiting task and passes it the result.</p>
</article></div>