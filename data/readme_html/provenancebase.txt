<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-provenancebase" class="anchor" aria-hidden="true" href="#provenancebase"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ProvenanceBase</h1>
<p dir="auto">Lightweight base package for provenance data "providers" and "consumers".</p>
<h2 dir="auto"><a id="user-content-producers" class="anchor" aria-hidden="true" href="#producers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Producers</h2>
<p dir="auto">Packages with types that would like to provide custom provenance data for their
types should extend the <code>provenance</code> function for their types.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ProvenanceBase

struct MyType
    # ...
end

ProvenanceBase.provenance(t::MyType) = (my = &quot;provenance&quot;, data = &quot;!&quot;)"><pre><span class="pl-k">using</span> ProvenanceBase

<span class="pl-k">struct</span> MyType
    <span class="pl-c"><span class="pl-c">#</span> ...</span>
<span class="pl-k">end</span>

ProvenanceBase<span class="pl-k">.</span><span class="pl-en">provenance</span>(t<span class="pl-k">::</span><span class="pl-c1">MyType</span>) <span class="pl-k">=</span> (my <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>provenance<span class="pl-pds">"</span></span>, data <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>!<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The <code>provenance</code> method must return a <code>NamedTuple</code> containing the associated
provenance data.</p>
<h2 dir="auto"><a id="user-content-consumers" class="anchor" aria-hidden="true" href="#consumers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Consumers</h2>
<p dir="auto">Packages that wish to consume provenance data from other providers should
extend <code>signature</code> and provide a subtype of <code>AbstractSignature</code> to "sign" the
consumed provenance data:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ProvenanceBase, Serialization, SHA

struct CustomSignature &lt;: ProvenanceBase.AbstractSignature
    str::String
end

function ProvenanceBase.signature(::Type{CustomSignature}, object, timestamp, data)
    io = IOBuffer()
    serialize(io, (object, timestamp, data))
    return CustomSignature(bytes2hex(sha2_256(seekstart(io))))
end"><pre><span class="pl-k">using</span> ProvenanceBase, Serialization, SHA

<span class="pl-k">struct</span> CustomSignature <span class="pl-k">&lt;:</span> <span class="pl-c1">ProvenanceBase.AbstractSignature</span>
    str<span class="pl-k">::</span><span class="pl-c1">String</span>
<span class="pl-k">end</span>

<span class="pl-k">function</span> ProvenanceBase<span class="pl-k">.</span><span class="pl-en">signature</span>(<span class="pl-k">::</span><span class="pl-c1">Type{CustomSignature}</span>, object, timestamp, data)
    io <span class="pl-k">=</span> <span class="pl-c1">IOBuffer</span>()
    <span class="pl-c1">serialize</span>(io, (object, timestamp, data))
    <span class="pl-k">return</span> <span class="pl-c1">CustomSignature</span>(<span class="pl-c1">bytes2hex</span>(<span class="pl-c1">sha2_256</span>(<span class="pl-c1">seekstart</span>(io))))
<span class="pl-k">end</span></pre></div>
<p dir="auto">Whether the "signing" is a strong cryptographic signature or a simple content
hash is up to the package extending <code>signature</code>.</p>
<h2 dir="auto"><a id="user-content-provenance-data" class="anchor" aria-hidden="true" href="#provenance-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Provenance Data</h2>
<p dir="auto">Time-stamped provenance data associated with a particular <code>object</code> can be
generated by calling <code>Provenance(object)</code> or <code>Provenance(object, T)</code> where <code>T</code>
is your custom subtype of <code>AbstractSignature</code>.</p>
</article></div>