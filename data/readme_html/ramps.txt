<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-rampsjl" class="anchor" aria-hidden="true" href="#rampsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Ramps.jl</h1>
<h2 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h2>
<p dir="auto">Exports the <code>Ramp</code> type which, when evaluated, smoothly ramp up from one level to another over a specified time, with zero first and second derivatives at endpoints, <code>MultiRamp</code> type which chains together multiple ramps, and <code>evaluate</code> to evaluate the ramp, or its derivative, at any given time.</p>
<h2 dir="auto"><a id="user-content-maths" class="anchor" aria-hidden="true" href="#maths"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Maths</h2>
<p dir="auto">Solve system of equations to determine coefficients for a quintic polynomial (chosen so that the second derivative is a cubic) so that the quintic polynomial <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="703cdb8e5405a819d141a02650c1d267">$x(t)$</math-renderer> gives <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="703cdb8e5405a819d141a02650c1d267">$x(0) = 0$</math-renderer>, <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="703cdb8e5405a819d141a02650c1d267">$x(1) = 1$</math-renderer>, <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="703cdb8e5405a819d141a02650c1d267">$x'(0) = 0$</math-renderer>, <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="703cdb8e5405a819d141a02650c1d267">$x'(1) = 0$</math-renderer>, <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="703cdb8e5405a819d141a02650c1d267">$x''(0) = 0$</math-renderer>, and <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="703cdb8e5405a819d141a02650c1d267">$x''(1) = 0$</math-renderer>. Resulting polynomial is then scaled for any range <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="703cdb8e5405a819d141a02650c1d267">$(x_0, x_1)$</math-renderer> and any domain <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="703cdb8e5405a819d141a02650c1d267">$(t_0,t_1)$</math-renderer>. If <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="703cdb8e5405a819d141a02650c1d267">$t &amp;lt; t_0$</math-renderer> then <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="703cdb8e5405a819d141a02650c1d267">$x(t) = x_0$</math-renderer> and if <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="703cdb8e5405a819d141a02650c1d267">$t &amp;gt; t_1$</math-renderer> then <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="703cdb8e5405a819d141a02650c1d267">$x(t) = x_1$</math-renderer>. The ramp is shown below:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="assets/f.png"><img src="assets/f.png" alt="ramp pic" style="max-width: 100%;"></a></p>
<h2 dir="auto">
<a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="  pkg&gt; add Ramps"><pre>  pkg<span class="pl-k">&gt;</span> add Ramps</pre></div>
<h2 dir="auto">
<a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Ramps

# create a ramp from 0 to 10 from 0 to 2
r = Ramp(0,10,0,2)

# evaluate ramp at start, middle, and end
evaluate(r, 0) == 0
evaluate(r, 1) == 5
evaluate(r, 2) == 10

# evaluate first and second derivative at start and end (third arguement is the derivative, default = 0)
evaluate(r, 0, 1) == 0
evaluate(r, 2, 2) == 0

# evaluate out of domain of ramp
evaluate(r, -100) == 0
evaluate(r, 100, 2) == 0

# create multiple ramps - must ensure ramps begin one after the other and start value is same as previous end value
r1 = Ramp(0, 10, 2, 4)
r2 = Ramp(10, 2, 5, 6)
mr = MultiRamp([r1,r2]) # will check ramps

# evaluate
evaluate(mr, 0) == 0
evaluate(mr, 2.3) ≈ 0.2661187...
evaluate(mr, 4.5) == 10
evaluate(mr, 4.5, 2) == 0
evaluate(mr, 5.7) ≈ 3.30464...
evaluate(mr, 6) == 2
evaluate(mr, 100) == 2
evaluate(mr, 100, 2) == 0
"><pre><span class="pl-k">using</span> Ramps

<span class="pl-c"><span class="pl-c">#</span> create a ramp from 0 to 10 from 0 to 2</span>
r <span class="pl-k">=</span> <span class="pl-c1">Ramp</span>(<span class="pl-c1">0</span>,<span class="pl-c1">10</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span>)

<span class="pl-c"><span class="pl-c">#</span> evaluate ramp at start, middle, and end</span>
<span class="pl-c1">evaluate</span>(r, <span class="pl-c1">0</span>) <span class="pl-k">==</span> <span class="pl-c1">0</span>
<span class="pl-c1">evaluate</span>(r, <span class="pl-c1">1</span>) <span class="pl-k">==</span> <span class="pl-c1">5</span>
<span class="pl-c1">evaluate</span>(r, <span class="pl-c1">2</span>) <span class="pl-k">==</span> <span class="pl-c1">10</span>

<span class="pl-c"><span class="pl-c">#</span> evaluate first and second derivative at start and end (third arguement is the derivative, default = 0)</span>
<span class="pl-c1">evaluate</span>(r, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>) <span class="pl-k">==</span> <span class="pl-c1">0</span>
<span class="pl-c1">evaluate</span>(r, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>) <span class="pl-k">==</span> <span class="pl-c1">0</span>

<span class="pl-c"><span class="pl-c">#</span> evaluate out of domain of ramp</span>
<span class="pl-c1">evaluate</span>(r, <span class="pl-k">-</span><span class="pl-c1">100</span>) <span class="pl-k">==</span> <span class="pl-c1">0</span>
<span class="pl-c1">evaluate</span>(r, <span class="pl-c1">100</span>, <span class="pl-c1">2</span>) <span class="pl-k">==</span> <span class="pl-c1">0</span>

<span class="pl-c"><span class="pl-c">#</span> create multiple ramps - must ensure ramps begin one after the other and start value is same as previous end value</span>
r1 <span class="pl-k">=</span> <span class="pl-c1">Ramp</span>(<span class="pl-c1">0</span>, <span class="pl-c1">10</span>, <span class="pl-c1">2</span>, <span class="pl-c1">4</span>)
r2 <span class="pl-k">=</span> <span class="pl-c1">Ramp</span>(<span class="pl-c1">10</span>, <span class="pl-c1">2</span>, <span class="pl-c1">5</span>, <span class="pl-c1">6</span>)
mr <span class="pl-k">=</span> <span class="pl-c1">MultiRamp</span>([r1,r2]) <span class="pl-c"><span class="pl-c">#</span> will check ramps</span>

<span class="pl-c"><span class="pl-c">#</span> evaluate</span>
<span class="pl-c1">evaluate</span>(mr, <span class="pl-c1">0</span>) <span class="pl-k">==</span> <span class="pl-c1">0</span>
<span class="pl-c1">evaluate</span>(mr, <span class="pl-c1">2.3</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.2661187</span><span class="pl-k">...</span>
<span class="pl-c1">evaluate</span>(mr, <span class="pl-c1">4.5</span>) <span class="pl-k">==</span> <span class="pl-c1">10</span>
<span class="pl-c1">evaluate</span>(mr, <span class="pl-c1">4.5</span>, <span class="pl-c1">2</span>) <span class="pl-k">==</span> <span class="pl-c1">0</span>
<span class="pl-c1">evaluate</span>(mr, <span class="pl-c1">5.7</span>) <span class="pl-k">≈</span> <span class="pl-c1">3.30464</span><span class="pl-k">...</span>
<span class="pl-c1">evaluate</span>(mr, <span class="pl-c1">6</span>) <span class="pl-k">==</span> <span class="pl-c1">2</span>
<span class="pl-c1">evaluate</span>(mr, <span class="pl-c1">100</span>) <span class="pl-k">==</span> <span class="pl-c1">2</span>
<span class="pl-c1">evaluate</span>(mr, <span class="pl-c1">100</span>, <span class="pl-c1">2</span>) <span class="pl-k">==</span> <span class="pl-c1">0</span>
</pre></div>
</article></div>