<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-incrementalsvdjl" class="anchor" aria-hidden="true" href="#incrementalsvdjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>IncrementalSVD.jl</h1>
<h3 dir="auto"><a id="user-content-what-is-this" class="anchor" aria-hidden="true" href="#what-is-this"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>What is this?</h3>
<p dir="auto">Simon Funk's singular value decomposition implemented in <a href="http://www.julialang.org" rel="nofollow">Julia</a>.
Collaborative filtering that can analyze millions of ratings on a laptop in a few minutes.</p>
<h3 dir="auto"><a id="user-content-what-does-that-mean" class="anchor" aria-hidden="true" href="#what-does-that-mean"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>What does that mean?</h3>
<p dir="auto">If you have a set of user ratings, saves, follows, etc., you can use this package to turn
those ratings into:</p>
<ul dir="auto">
<li>Predictions of how users might rate other items.</li>
<li>Clusters of similar items and similar users.</li>
<li>Identification of important features in your data.</li>
</ul>
<h3 dir="auto"><a id="user-content-what-is-a-singular-value-decomposition" class="anchor" aria-hidden="true" href="#what-is-a-singular-value-decomposition"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>What is a singular value decomposition?</h3>
<p dir="auto">The <a href="http://en.wikipedia.org/wiki/Singular_value_decomposition" rel="nofollow">singular value decomposition</a>
(SVD) factors any <em>m</em> by <em>n</em> matrix <em>M</em> into an <em>m</em> by <em>m</em> matrix <em>U</em>, an <em>m</em> by
<em>n</em> diagonal matrix <em>S</em>, and an <em>n</em> by <em>n</em> matrix <em>V</em> such that <em>M</em> = <em>USV<sup>T</sup></em>. One
of the many interesting properties of this decomposition is that you can choose
any <em>r</em> &lt; <em>n</em>, create a new matrix <em>T</em> from <em>S</em> by zeroing out anything that
isn't on the first <em>r</em> rows and columns in <em>S</em>, and then <em>UTV<sup>T</sup></em> is the closest
matrix of rank <em>r</em> to <em>M</em> in terms of the Frobenius norm (in other words, over
all rank <em>r</em> matrices <em>N</em>, <em>N</em> = <em>UTV<sup>T</sup></em> minimizes the sum of the squared
differences between <em>N</em> and <em>M</em>.)</p>
<h3 dir="auto"><a id="user-content-how-do-you-use-an-svd-to-build-a-recommendation-engine" class="anchor" aria-hidden="true" href="#how-do-you-use-an-svd-to-build-a-recommendation-engine"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How do you use an SVD to build a recommendation engine?</h3>
<p dir="auto">Let's say that you have a large set of movie ratings. Consider some cluster
of similar movies, say, the Friday the 13th horror franchise. One user's ratings of
the Friday the 13th movies are probably pretty consistent:
either they like the series and rate all of the Friday the 13th films pretty high or they don't
like any of them and rate them all pretty low. In addition, maybe the first couple of films in
the series were a lot better than the later ones, so even users who didn't really like the
series would rate Friday the 13th part I and II a little higher.</p>
<p dir="auto">If you wanted to build a really simple model of these Friday the 13th ratings,
you could just set up a vector of base ratings (say, 1.0 for the first
two films, then 0.8 for all of the rest) and fit each user's predictions
by finding the multiple of that vector that best fits all of the ratings you have from that user.
Given a user who rated only Friday the 13th part II and gave it a 5/5, we'd
just multiply the base ratings vector by 5 to get that user's predicted ratings for the entire series:
5/5 for part I and II and 4/5 for the rest. The resulting vector follows our imagined model
for ratings of the series and it also agrees on the one actual rating we know from the user.</p>
<p dir="auto">Now imagine putting all of the movie ratings you have into one big user-by-item matrix.
Somewhere in there, you'd have 12 columns for Friday the 13th movies, one for each movie in the series.
Since we can't force our users to watch and rate all of the movies in the series, what we see in
those columns is some sparse sample of ratings. Taken as vectors projected on just those 12 columns,
it's pretty likely that we'd need a basis of size 12 to represent them all (this would be true, for
example, if there are 12 users who have each only rated a single different Friday the 13th film.)
But that's a basis for the sparse set of known ratings, not the dense set of predicted ratings.
What we'd actually like is a basis of smaller rank the like single-vector basis we used in
the previous paragraph that generalizes the sparse, observed ratings.</p>
<p dir="auto">That's where the SVD comes in: we can choose a small rank and extract a matrix of exactly that rank
from the SVD. The resulting matrix will still approximate the original matrix, so decreasing the
rank will just smooth out
the ratings by forcing them to be linear combinations of only a few basis vectors while matching
our sparsely observed ratings as closely as possible. And the best part is that you don't even need to
have specific knowledge of the domain that you're trying to extract information about - in this case,
the Friday the 13th movies aren't annotated in any way, but as long as we have enough ratings that
follow the linear ratings model that we described earlier, the SVD will cluster those movies together
simply because it's the easiest thing to do under the sum of squared differences penalty.</p>
<h3 dir="auto"><a id="user-content-great-but-julia-already-has-an-svd-function-ill-just-use-that" class="anchor" aria-hidden="true" href="#great-but-julia-already-has-an-svd-function-ill-just-use-that"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Great, but Julia already has an <code>svd</code> function. I'll just use that.</h3>
<p dir="auto">Computing an SVD of a user-item matrix is expensive. If you have reasonable
numbers of users or items, you may not even be able to fit the matrix in memory to begin with.
More importantly, a model based on a reduced-rank SVD minimizes the error on both the sparse
set of ratings you know and on the dense set of unknown ratings you're trying to predict.
You can initialize the unknown entries based on some prior instead of setting
them all to zeros, but when you compute an SVD over the entire matrix,
you're penalizing both the differences from your known ratings and the differences from your
predictions of unknown ratings equally, and there are typically many more unknown ratings than known
in the ratings matrix. So you end up essentially fitting the model to your prior when you'd like to
fit the model only to your observed ratings instead.</p>
<h3 dir="auto"><a id="user-content-so-what-does-this-package-do-thats-different-than-an-svd" class="anchor" aria-hidden="true" href="#so-what-does-this-package-do-thats-different-than-an-svd"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>So what does this package do that's different than an SVD?</h3>
<p dir="auto">Simon Funk's algorithm creates a decomposition that attempts to minimize the sum of squared
errors against only the known ratings. It finds this decomposition via gradient descent,
which along with the fact that you're only considering a (relatively) small number of ratings
instead of the entire user-item matrix means that it's fast and you can run it on any machine
that can hold all of your ratings in memory.</p>
<h3 dir="auto"><a id="user-content-where-can-i-read-more-about-simon-funks-algorithm" class="anchor" aria-hidden="true" href="#where-can-i-read-more-about-simon-funks-algorithm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Where can I read more about Simon Funk's algorithm?</h3>
<p dir="auto">The gradient descent approach to SVD originated in a
<a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.125.8971&amp;rep=rep1&amp;type=pdf" rel="nofollow">2005 paper by Funk and Gorrell</a>. Simon Funk then popularized this approach by using
it to do exceptionally well in the <a href="http://en.wikipedia.org/wiki/Netflix_Prize" rel="nofollow">Netflix Prize competition</a> in 2006 and writing
up a series of posts about his implementation:</p>
<ul dir="auto">
<li><a href="http://sifter.org/~simon/journal/20061027.2.html" rel="nofollow">Introduction</a></li>
<li><a href="http://sifter.org/~simon/journal/20061211.html" rel="nofollow">More detail on the algorithm</a></li>
<li><a href="http://sifter.org/~simon/journal/20070815.html" rel="nofollow">Derivation of the gradient descent update rule</a></li>
</ul>
<p dir="auto">There's also a good <a href="http://www.netflixprize.com/community/viewtopic.php?id=453" rel="nofollow">discussion</a> in the Netflix prize forum about
implementing and tuning Funk's algorithm on the Netflix Prize dataset.</p>
<h3 dir="auto"><a id="user-content-how-do-i-install-this-package" class="anchor" aria-hidden="true" href="#how-do-i-install-this-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How do I install this package?</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(PackageSpec(url=&quot;https://github.com/aaw/IncrementalSVD.jl&quot;))"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-c1">PackageSpec</span>(url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/aaw/IncrementalSVD.jl<span class="pl-pds">"</span></span>))</pre></div>
<p dir="auto">or</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add https://github.com/aaw/IncrementalSVD.jl"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>aaw<span class="pl-k">/</span>IncrementalSVD<span class="pl-k">.</span>jl</pre></div>
<h3 dir="auto"><a id="user-content-how-do-i-use-this-package-build-a-recommendation-engine" class="anchor" aria-hidden="true" href="#how-do-i-use-this-package-build-a-recommendation-engine"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How do I use this package build a recommendation engine?</h3>
<p dir="auto">IncrementalSVD comes with functions to load two benchmark datasets for
collaborative filtering: the <a href="http://grouplens.org/datasets/movielens" rel="nofollow">MovieLens dataset</a> and the <a href="http://www.informatik.uni-freiburg.de/~cziegler/BX" rel="nofollow">Book-Crossing dataset</a>.
Let's load the small MovieLens dataset:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import IncrementalSVD

julia&gt; rating_set = IncrementalSVD.load_small_movielens_dataset();"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> IncrementalSVD

julia<span class="pl-k">&gt;</span> rating_set <span class="pl-k">=</span> IncrementalSVD<span class="pl-k">.</span><span class="pl-c1">load_small_movielens_dataset</span>();</pre></div>
<p dir="auto">The small MovieLens dataset has 1 million ratings from 6000 users over 4000 movies.
Train a model with 25 features on these ratings:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; model = IncrementalSVD.train(rating_set, 25);"><pre>julia<span class="pl-k">&gt;</span> model <span class="pl-k">=</span> IncrementalSVD<span class="pl-k">.</span><span class="pl-c1">train</span>(rating_set, <span class="pl-c1">25</span>);</pre></div>
<p dir="auto">More later on how to choose a good number of features, for now just consider 25 a lucky guess.
The truncated SVD that we generated with the above command gave us, among other things, a
matrix U, which has dimension [number of users] x 25, and a matrix V, which has dimension
[number of movies] x 25. You can use either of these matrices as feature vectors for your
users or movies. You can compare these vectors using, say, <a href="http://en.wikipedia.org/wiki/Cosine_similarity" rel="nofollow">cosine similarity</a> to get
a list of similar movies to use for clustering or recommendations. For example,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; IncrementalSVD.similar_items(model, &quot;Friday the 13th (1980)&quot;)
10-element Array{String,1}:
 &quot;Friday the 13th (1980)&quot;                  
 &quot;Amityville Horror, The (1979)&quot;           
 &quot;Jaws 2 (1978)&quot;                           
 &quot;Pet Sematary (1989)&quot;                     
 &quot;Omen, The (1976)&quot;                        
 &quot;Porky's (1981)&quot;                          
 &quot;Cujo (1983)&quot;                             
 &quot;Stepford Wives, The (1975)&quot;              
 &quot;Halloween II (1981)&quot;                     
 &quot;Battle for the Planet of the Apes (1973)&quot;

julia&gt; IncrementalSVD.similar_items(model, &quot;Friday the 13th Part 2 (1981)&quot;)
10-element Array{String,1}:
 &quot;Friday the 13th Part 2 (1981)&quot;                       
 &quot;Halloween II (1981)&quot;                                 
 &quot;Friday the 13th Part V: A New Beginning (1985)&quot;      
 &quot;Porky's II: The Next Day (1983)&quot;                     
 &quot;Friday the 13th: The Final Chapter (1984)&quot;           
 &quot;Cujo (1983)&quot;                                         
 &quot;Damien: Omen II (1978)&quot;                              
 &quot;Towering Inferno, The (1974)&quot;                        
 &quot;Missing in Action (1984)&quot;                            
 &quot;Nightmare on Elm Street 5: The Dream Child, A (1989)&quot;"><pre>julia<span class="pl-k">&gt;</span> IncrementalSVD<span class="pl-k">.</span><span class="pl-c1">similar_items</span>(model, <span class="pl-s"><span class="pl-pds">"</span>Friday the 13th (1980)<span class="pl-pds">"</span></span>)
<span class="pl-c1">10</span><span class="pl-k">-</span>element Array{String,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>Friday the 13th (1980)<span class="pl-pds">"</span></span>                  
 <span class="pl-s"><span class="pl-pds">"</span>Amityville Horror, The (1979)<span class="pl-pds">"</span></span>           
 <span class="pl-s"><span class="pl-pds">"</span>Jaws 2 (1978)<span class="pl-pds">"</span></span>                           
 <span class="pl-s"><span class="pl-pds">"</span>Pet Sematary (1989)<span class="pl-pds">"</span></span>                     
 <span class="pl-s"><span class="pl-pds">"</span>Omen, The (1976)<span class="pl-pds">"</span></span>                        
 <span class="pl-s"><span class="pl-pds">"</span>Porky's (1981)<span class="pl-pds">"</span></span>                          
 <span class="pl-s"><span class="pl-pds">"</span>Cujo (1983)<span class="pl-pds">"</span></span>                             
 <span class="pl-s"><span class="pl-pds">"</span>Stepford Wives, The (1975)<span class="pl-pds">"</span></span>              
 <span class="pl-s"><span class="pl-pds">"</span>Halloween II (1981)<span class="pl-pds">"</span></span>                     
 <span class="pl-s"><span class="pl-pds">"</span>Battle for the Planet of the Apes (1973)<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> IncrementalSVD<span class="pl-k">.</span><span class="pl-c1">similar_items</span>(model, <span class="pl-s"><span class="pl-pds">"</span>Friday the 13th Part 2 (1981)<span class="pl-pds">"</span></span>)
<span class="pl-c1">10</span><span class="pl-k">-</span>element Array{String,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>Friday the 13th Part 2 (1981)<span class="pl-pds">"</span></span>                       
 <span class="pl-s"><span class="pl-pds">"</span>Halloween II (1981)<span class="pl-pds">"</span></span>                                 
 <span class="pl-s"><span class="pl-pds">"</span>Friday the 13th Part V: A New Beginning (1985)<span class="pl-pds">"</span></span>      
 <span class="pl-s"><span class="pl-pds">"</span>Porky's II: The Next Day (1983)<span class="pl-pds">"</span></span>                     
 <span class="pl-s"><span class="pl-pds">"</span>Friday the 13th: The Final Chapter (1984)<span class="pl-pds">"</span></span>           
 <span class="pl-s"><span class="pl-pds">"</span>Cujo (1983)<span class="pl-pds">"</span></span>                                         
 <span class="pl-s"><span class="pl-pds">"</span>Damien: Omen II (1978)<span class="pl-pds">"</span></span>                              
 <span class="pl-s"><span class="pl-pds">"</span>Towering Inferno, The (1974)<span class="pl-pds">"</span></span>                        
 <span class="pl-s"><span class="pl-pds">"</span>Missing in Action (1984)<span class="pl-pds">"</span></span>                            
 <span class="pl-s"><span class="pl-pds">"</span>Nightmare on Elm Street 5: The Dream Child, A (1989)<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">Looks like the first Friday the 13th is clustered together with some classic scary movies,
while part 2 and later get clustered together with some lower-tier scary movies.</p>
<p dir="auto">The MovieLens dataset identifies movies by their title and year of release, so there's a
helper function that lets you search for a movie by a case-insensitive substring of the title:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; IncrementalSVD.item_search(model, &quot;godfather&quot;)
3-element Array{String,1}:
 &quot;Godfather: Part III, The (1990)&quot;
 &quot;Godfather, The (1972)&quot;
 &quot;Godfather: Part II, The (1974)&quot;

julia&gt; IncrementalSVD.similar_items(model, &quot;Godfather, The (1972)&quot;)
10-element Array{String,1}:
 &quot;Godfather, The (1972)&quot;
 &quot;Godfather: Part II, The (1974)&quot;
 &quot;GoodFellas (1990)&quot;
 &quot;One Flew Over the Cuckoo's Nest (1975)&quot;
 &quot;Butch Cassidy and the Sundance Kid (1969)&quot;
 &quot;Silence of the Lambs, The (1991)&quot;
 &quot;Taxi Driver (1976)&quot;
 &quot;Apocalypse Now (1979)&quot;
 &quot;Saving Private Ryan (1998)&quot;
 &quot;L.A. Confidential (1997)&quot;"><pre>julia<span class="pl-k">&gt;</span> IncrementalSVD<span class="pl-k">.</span><span class="pl-c1">item_search</span>(model, <span class="pl-s"><span class="pl-pds">"</span>godfather<span class="pl-pds">"</span></span>)
<span class="pl-c1">3</span><span class="pl-k">-</span>element Array{String,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>Godfather: Part III, The (1990)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>Godfather, The (1972)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>Godfather: Part II, The (1974)<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> IncrementalSVD<span class="pl-k">.</span><span class="pl-c1">similar_items</span>(model, <span class="pl-s"><span class="pl-pds">"</span>Godfather, The (1972)<span class="pl-pds">"</span></span>)
<span class="pl-c1">10</span><span class="pl-k">-</span>element Array{String,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>Godfather, The (1972)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>Godfather: Part II, The (1974)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>GoodFellas (1990)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>One Flew Over the Cuckoo's Nest (1975)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>Butch Cassidy and the Sundance Kid (1969)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>Silence of the Lambs, The (1991)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>Taxi Driver (1976)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>Apocalypse Now (1979)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>Saving Private Ryan (1998)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>L.A. Confidential (1997)<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">So what are the features in these 25-dimensional feature vectors we're using? The first
feature is a line through our ratings data in the direction it varies the most:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; IncrementalSVD.show_items_by_feature(model, 1)
3706-element Array{String,1}:
 &quot;Nueba Yol (1995)&quot;                                                           
 &quot;Silence of the Palace, The (Saimt el Qusur) (1994)&quot;                         
 &quot;Windows (1980)&quot;                                                             
 &quot;Mutters Courage (1995)&quot;                                                     
 &quot;Loves of Carmen, The (1948)&quot;                                                
 &quot;Diebinnen (1995)&quot;                                                           
 &quot;Aiqing wansui (1994)&quot;                                                       
 &quot;Chain of Fools (2000)&quot;                                                      
 &quot;White Boys (1999)&quot;                                                          
 &quot;With Byrd at the South Pole (1930)&quot;                                         
 &quot;Roula (1995)&quot;                                                               
 &quot;Cheetah (1989)&quot;                                                             
 &quot;Uninvited Guest, An (2000)&quot;                                                 
 &quot;Elstree Calling (1930)&quot;                                                     
 &quot;Waltzes from Vienna (1933)&quot;                                                 
 &quot;Legal Deceit (1997)&quot;                                                        
 &quot;Kestrel's Eye (Falkens \U1667e9 (1998)&quot;                                     
 ⋮                                                                            
 &quot;Braveheart (1995)&quot;                                                          
 &quot;North by Northwest (1959)&quot;                                                  
 &quot;Godfather: Part II, The (1974)&quot;                                             
 &quot;Silence of the Lambs, The (1991)&quot;                                           
 &quot;Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb (1963)&quot;
 &quot;Saving Private Ryan (1998)&quot;                                                 
 &quot;Wrong Trousers, The (1993)&quot;                                                 
 &quot;Usual Suspects, The (1995)&quot;                                                 
 &quot;Sixth Sense, The (1999)&quot;                                                    
 &quot;One Flew Over the Cuckoo's Nest (1975)&quot;                                     
 &quot;Casablanca (1942)&quot;                                                          
 &quot;Raiders of the Lost Ark (1981)&quot;                                             
 &quot;Schindler's List (1993)&quot;                                                    
 &quot;Star Wars: Episode IV - A New Hope (1977)&quot;                                  
 &quot;American Beauty (1999)&quot;                                                     
 &quot;Shawshank Redemption, The (1994)&quot;                                           
 &quot;Godfather, The (1972)&quot;                                          "><pre>julia<span class="pl-k">&gt;</span> IncrementalSVD<span class="pl-k">.</span><span class="pl-c1">show_items_by_feature</span>(model, <span class="pl-c1">1</span>)
<span class="pl-c1">3706</span><span class="pl-k">-</span>element Array{String,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>Nueba Yol (1995)<span class="pl-pds">"</span></span>                                                           
 <span class="pl-s"><span class="pl-pds">"</span>Silence of the Palace, The (Saimt el Qusur) (1994)<span class="pl-pds">"</span></span>                         
 <span class="pl-s"><span class="pl-pds">"</span>Windows (1980)<span class="pl-pds">"</span></span>                                                             
 <span class="pl-s"><span class="pl-pds">"</span>Mutters Courage (1995)<span class="pl-pds">"</span></span>                                                     
 <span class="pl-s"><span class="pl-pds">"</span>Loves of Carmen, The (1948)<span class="pl-pds">"</span></span>                                                
 <span class="pl-s"><span class="pl-pds">"</span>Diebinnen (1995)<span class="pl-pds">"</span></span>                                                           
 <span class="pl-s"><span class="pl-pds">"</span>Aiqing wansui (1994)<span class="pl-pds">"</span></span>                                                       
 <span class="pl-s"><span class="pl-pds">"</span>Chain of Fools (2000)<span class="pl-pds">"</span></span>                                                      
 <span class="pl-s"><span class="pl-pds">"</span>White Boys (1999)<span class="pl-pds">"</span></span>                                                          
 <span class="pl-s"><span class="pl-pds">"</span>With Byrd at the South Pole (1930)<span class="pl-pds">"</span></span>                                         
 <span class="pl-s"><span class="pl-pds">"</span>Roula (1995)<span class="pl-pds">"</span></span>                                                               
 <span class="pl-s"><span class="pl-pds">"</span>Cheetah (1989)<span class="pl-pds">"</span></span>                                                             
 <span class="pl-s"><span class="pl-pds">"</span>Uninvited Guest, An (2000)<span class="pl-pds">"</span></span>                                                 
 <span class="pl-s"><span class="pl-pds">"</span>Elstree Calling (1930)<span class="pl-pds">"</span></span>                                                     
 <span class="pl-s"><span class="pl-pds">"</span>Waltzes from Vienna (1933)<span class="pl-pds">"</span></span>                                                 
 <span class="pl-s"><span class="pl-pds">"</span>Legal Deceit (1997)<span class="pl-pds">"</span></span>                                                        
 <span class="pl-s"><span class="pl-pds">"</span>Kestrel's Eye (Falkens <span class="pl-cce">\U</span>1667e9 (1998)<span class="pl-pds">"</span></span>                                     
 ⋮                                                                            
 <span class="pl-s"><span class="pl-pds">"</span>Braveheart (1995)<span class="pl-pds">"</span></span>                                                          
 <span class="pl-s"><span class="pl-pds">"</span>North by Northwest (1959)<span class="pl-pds">"</span></span>                                                  
 <span class="pl-s"><span class="pl-pds">"</span>Godfather: Part II, The (1974)<span class="pl-pds">"</span></span>                                             
 <span class="pl-s"><span class="pl-pds">"</span>Silence of the Lambs, The (1991)<span class="pl-pds">"</span></span>                                           
 <span class="pl-s"><span class="pl-pds">"</span>Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb (1963)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>Saving Private Ryan (1998)<span class="pl-pds">"</span></span>                                                 
 <span class="pl-s"><span class="pl-pds">"</span>Wrong Trousers, The (1993)<span class="pl-pds">"</span></span>                                                 
 <span class="pl-s"><span class="pl-pds">"</span>Usual Suspects, The (1995)<span class="pl-pds">"</span></span>                                                 
 <span class="pl-s"><span class="pl-pds">"</span>Sixth Sense, The (1999)<span class="pl-pds">"</span></span>                                                    
 <span class="pl-s"><span class="pl-pds">"</span>One Flew Over the Cuckoo's Nest (1975)<span class="pl-pds">"</span></span>                                     
 <span class="pl-s"><span class="pl-pds">"</span>Casablanca (1942)<span class="pl-pds">"</span></span>                                                          
 <span class="pl-s"><span class="pl-pds">"</span>Raiders of the Lost Ark (1981)<span class="pl-pds">"</span></span>                                             
 <span class="pl-s"><span class="pl-pds">"</span>Schindler's List (1993)<span class="pl-pds">"</span></span>                                                    
 <span class="pl-s"><span class="pl-pds">"</span>Star Wars: Episode IV - A New Hope (1977)<span class="pl-pds">"</span></span>                                  
 <span class="pl-s"><span class="pl-pds">"</span>American Beauty (1999)<span class="pl-pds">"</span></span>                                                     
 <span class="pl-s"><span class="pl-pds">"</span>Shawshank Redemption, The (1994)<span class="pl-pds">"</span></span>                                           
 <span class="pl-s"><span class="pl-pds">"</span>Godfather, The (1972)<span class="pl-pds">"</span></span>                                          </pre></div>
<p dir="auto">You might call this first feature "well known versus obscure movies". Unfortunately, you have to come
up with interpretations of these features - they're just whatever your ratings data suggests:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; IncrementalSVD.show_item_feature(model, 2)
3706-element Array{String,1}:
 &quot;Batman (1989)&quot;                                  
 &quot;Superman (1978)&quot;                                
 &quot;Die Hard (1988)&quot;                                
 &quot;Indiana Jones and the Last Crusade (1989)&quot;      
 &quot;Wayne's World (1992)&quot;                           
 &quot;Rocky (1976)&quot;                                   
 &quot;Blues Brothers, The (1980)&quot;                     
 &quot;Ferris Bueller's Day Off (1986)&quot;                
 &quot;Star Trek: The Wrath of Khan (1982)&quot;            
 &quot;Untouchables, The (1987)&quot;                       
 &quot;Sneakers (1992)&quot;                                
 &quot;Raising Arizona (1987)&quot;                         
 &quot;Predator (1987)&quot;                                
 &quot;Good Morning, Vietnam (1987)&quot;                   
 &quot;Robocop (1987)&quot;                                 
 &quot;Indiana Jones and the Temple of Doom (1984)&quot;    
 &quot;Big (1988)&quot;                                     
 ⋮                                                
 &quot;Lady Vanishes, The (1938)&quot;                      
 &quot;Run Silent, Run Deep (1958)&quot;                    
 &quot;Shadow of a Doubt (1943)&quot;                       
 &quot;8 1/2 (1963)&quot;                                   
 &quot;Affair to Remember, An (1957)&quot;                  
 &quot;Shall We Dance? (1937)&quot;                         
 &quot;Pawnbroker, The (1965)&quot;                         
 &quot;Laura (1944)&quot;                                   
 &quot;Central Station (Central do Brasil) (1998)&quot;     
 &quot;Bicycle Thief, The (Ladri di biciclette) (1948)&quot;
 &quot;General, The (1927)&quot;                            
 &quot;Dancer in the Dark (2000)&quot;                      
 &quot;Anatomy of a Murder (1959)&quot;                     
 &quot;Grand Illusion (Grande illusion, La) (1937)&quot;    
 &quot;City Lights (1931)&quot;                             
 &quot;Yojimbo (1961)&quot;                                 
 &quot;400 Blows, The (Les Quatre cents coups) (1959)&quot;"><pre>julia<span class="pl-k">&gt;</span> IncrementalSVD<span class="pl-k">.</span><span class="pl-c1">show_item_feature</span>(model, <span class="pl-c1">2</span>)
<span class="pl-c1">3706</span><span class="pl-k">-</span>element Array{String,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>Batman (1989)<span class="pl-pds">"</span></span>                                  
 <span class="pl-s"><span class="pl-pds">"</span>Superman (1978)<span class="pl-pds">"</span></span>                                
 <span class="pl-s"><span class="pl-pds">"</span>Die Hard (1988)<span class="pl-pds">"</span></span>                                
 <span class="pl-s"><span class="pl-pds">"</span>Indiana Jones and the Last Crusade (1989)<span class="pl-pds">"</span></span>      
 <span class="pl-s"><span class="pl-pds">"</span>Wayne's World (1992)<span class="pl-pds">"</span></span>                           
 <span class="pl-s"><span class="pl-pds">"</span>Rocky (1976)<span class="pl-pds">"</span></span>                                   
 <span class="pl-s"><span class="pl-pds">"</span>Blues Brothers, The (1980)<span class="pl-pds">"</span></span>                     
 <span class="pl-s"><span class="pl-pds">"</span>Ferris Bueller's Day Off (1986)<span class="pl-pds">"</span></span>                
 <span class="pl-s"><span class="pl-pds">"</span>Star Trek: The Wrath of Khan (1982)<span class="pl-pds">"</span></span>            
 <span class="pl-s"><span class="pl-pds">"</span>Untouchables, The (1987)<span class="pl-pds">"</span></span>                       
 <span class="pl-s"><span class="pl-pds">"</span>Sneakers (1992)<span class="pl-pds">"</span></span>                                
 <span class="pl-s"><span class="pl-pds">"</span>Raising Arizona (1987)<span class="pl-pds">"</span></span>                         
 <span class="pl-s"><span class="pl-pds">"</span>Predator (1987)<span class="pl-pds">"</span></span>                                
 <span class="pl-s"><span class="pl-pds">"</span>Good Morning, Vietnam (1987)<span class="pl-pds">"</span></span>                   
 <span class="pl-s"><span class="pl-pds">"</span>Robocop (1987)<span class="pl-pds">"</span></span>                                 
 <span class="pl-s"><span class="pl-pds">"</span>Indiana Jones and the Temple of Doom (1984)<span class="pl-pds">"</span></span>    
 <span class="pl-s"><span class="pl-pds">"</span>Big (1988)<span class="pl-pds">"</span></span>                                     
 ⋮                                                
 <span class="pl-s"><span class="pl-pds">"</span>Lady Vanishes, The (1938)<span class="pl-pds">"</span></span>                      
 <span class="pl-s"><span class="pl-pds">"</span>Run Silent, Run Deep (1958)<span class="pl-pds">"</span></span>                    
 <span class="pl-s"><span class="pl-pds">"</span>Shadow of a Doubt (1943)<span class="pl-pds">"</span></span>                       
 <span class="pl-s"><span class="pl-pds">"</span>8 1/2 (1963)<span class="pl-pds">"</span></span>                                   
 <span class="pl-s"><span class="pl-pds">"</span>Affair to Remember, An (1957)<span class="pl-pds">"</span></span>                  
 <span class="pl-s"><span class="pl-pds">"</span>Shall We Dance? (1937)<span class="pl-pds">"</span></span>                         
 <span class="pl-s"><span class="pl-pds">"</span>Pawnbroker, The (1965)<span class="pl-pds">"</span></span>                         
 <span class="pl-s"><span class="pl-pds">"</span>Laura (1944)<span class="pl-pds">"</span></span>                                   
 <span class="pl-s"><span class="pl-pds">"</span>Central Station (Central do Brasil) (1998)<span class="pl-pds">"</span></span>     
 <span class="pl-s"><span class="pl-pds">"</span>Bicycle Thief, The (Ladri di biciclette) (1948)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>General, The (1927)<span class="pl-pds">"</span></span>                            
 <span class="pl-s"><span class="pl-pds">"</span>Dancer in the Dark (2000)<span class="pl-pds">"</span></span>                      
 <span class="pl-s"><span class="pl-pds">"</span>Anatomy of a Murder (1959)<span class="pl-pds">"</span></span>                     
 <span class="pl-s"><span class="pl-pds">"</span>Grand Illusion (Grande illusion, La) (1937)<span class="pl-pds">"</span></span>    
 <span class="pl-s"><span class="pl-pds">"</span>City Lights (1931)<span class="pl-pds">"</span></span>                             
 <span class="pl-s"><span class="pl-pds">"</span>Yojimbo (1961)<span class="pl-pds">"</span></span>                                 
 <span class="pl-s"><span class="pl-pds">"</span>400 Blows, The (Les Quatre cents coups) (1959)<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">The second feature is more obviously something like "art house versus mainstream blockbuster". The model
also lets investigate similar users and user features just like we did with items, it's just not that
interesting to look at the anonymized user ids
in these public data sets. If you wanted to, say, create a dating site and suggest partners based on
movie/book ratings, those user-centric functions might be more interesting to explore.</p>
<p dir="auto">Finally, you can use the model to get predicted numeric ratings for specific users and movies. Let's
look a little closer at one particular user:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; IncrementalSVD.user_ratings(rating_set, &quot;3000&quot;)
100-element Array{(ASCIIString,Float64),1}:
 (&quot;Gattaca (1997)&quot;,5.0)                                       
 (&quot;Groundhog Day (1993)&quot;,5.0)                                 
 (&quot;When Harry Met Sally... (1989)&quot;,5.0)                       
 (&quot;American Beauty (1999)&quot;,5.0)                               
 (&quot;Brazil (1985)&quot;,5.0)                                        
 (&quot;Twelve Monkeys (1995)&quot;,5.0)                                
 (&quot;Time Bandits (1981)&quot;,5.0)                                  
 (&quot;One Flew Over the Cuckoo's Nest (1975)&quot;,5.0)               
 (&quot;Brothers McMullen, The (1995)&quot;,5.0)                        
 (&quot;Dances with Wolves (1990)&quot;,5.0)                            
 (&quot;Defending Your Life (1991)&quot;,5.0)                           
 (&quot;Babe (1995)&quot;,5.0)                                          
 (&quot;Princess Bride, The (1987)&quot;,5.0)                           
 (&quot;Caddyshack (1980)&quot;,5.0)                                    
 (&quot;Rock, The (1996)&quot;,5.0)                                     
 (&quot;Star Wars: Episode V - The Empire Strikes Back (1980)&quot;,4.0)
 (&quot;Batman Returns (1992)&quot;,4.0)                                
 ⋮                                                            
 (&quot;Total Recall (1990)&quot;,2.0)                                  
 (&quot;Mad Max (1979)&quot;,2.0)                                       
 (&quot;True Lies (1994)&quot;,2.0)                                     
 (&quot;Empire Records (1995)&quot;,2.0)                                
 (&quot;Dark Crystal, The (1982)&quot;,2.0)                             
 (&quot;Simon Birch (1998)&quot;,2.0)                                   
 (&quot;Romancing the Stone (1984)&quot;,2.0)                           
 (&quot;Dirty Dancing (1987)&quot;,1.0)                                 
 (&quot;Star Trek VI: The Undiscovered Country (1991)&quot;,1.0)        
 (&quot;Mission: Impossible (1996)&quot;,1.0)                           
 (&quot;Sudden Death (1995)&quot;,1.0)                                  
 (&quot;Jewel of the Nile, The (1985)&quot;,1.0)                        
 (&quot;Flashdance (1983)&quot;,1.0)                                    
 (&quot;Blind Date (1987)&quot;,1.0)                                    
 (&quot;Blue Lagoon, The (1980)&quot;,1.0)                              
 (&quot;Sphere (1998)&quot;,1.0)                                        
 (&quot;Grease 2 (1982)&quot;,1.0)           "><pre>julia<span class="pl-k">&gt;</span> IncrementalSVD<span class="pl-k">.</span><span class="pl-c1">user_ratings</span>(rating_set, <span class="pl-s"><span class="pl-pds">"</span>3000<span class="pl-pds">"</span></span>)
<span class="pl-c1">100</span><span class="pl-k">-</span>element Array{(ASCIIString,Float64),<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 (<span class="pl-s"><span class="pl-pds">"</span>Gattaca (1997)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                                       
 (<span class="pl-s"><span class="pl-pds">"</span>Groundhog Day (1993)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                                 
 (<span class="pl-s"><span class="pl-pds">"</span>When Harry Met Sally... (1989)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                       
 (<span class="pl-s"><span class="pl-pds">"</span>American Beauty (1999)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                               
 (<span class="pl-s"><span class="pl-pds">"</span>Brazil (1985)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                                        
 (<span class="pl-s"><span class="pl-pds">"</span>Twelve Monkeys (1995)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                                
 (<span class="pl-s"><span class="pl-pds">"</span>Time Bandits (1981)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                                  
 (<span class="pl-s"><span class="pl-pds">"</span>One Flew Over the Cuckoo's Nest (1975)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)               
 (<span class="pl-s"><span class="pl-pds">"</span>Brothers McMullen, The (1995)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                        
 (<span class="pl-s"><span class="pl-pds">"</span>Dances with Wolves (1990)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                            
 (<span class="pl-s"><span class="pl-pds">"</span>Defending Your Life (1991)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                           
 (<span class="pl-s"><span class="pl-pds">"</span>Babe (1995)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                                          
 (<span class="pl-s"><span class="pl-pds">"</span>Princess Bride, The (1987)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                           
 (<span class="pl-s"><span class="pl-pds">"</span>Caddyshack (1980)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                                    
 (<span class="pl-s"><span class="pl-pds">"</span>Rock, The (1996)<span class="pl-pds">"</span></span>,<span class="pl-c1">5.0</span>)                                     
 (<span class="pl-s"><span class="pl-pds">"</span>Star Wars: Episode V - The Empire Strikes Back (1980)<span class="pl-pds">"</span></span>,<span class="pl-c1">4.0</span>)
 (<span class="pl-s"><span class="pl-pds">"</span>Batman Returns (1992)<span class="pl-pds">"</span></span>,<span class="pl-c1">4.0</span>)                                
 ⋮                                                            
 (<span class="pl-s"><span class="pl-pds">"</span>Total Recall (1990)<span class="pl-pds">"</span></span>,<span class="pl-c1">2.0</span>)                                  
 (<span class="pl-s"><span class="pl-pds">"</span>Mad Max (1979)<span class="pl-pds">"</span></span>,<span class="pl-c1">2.0</span>)                                       
 (<span class="pl-s"><span class="pl-pds">"</span>True Lies (1994)<span class="pl-pds">"</span></span>,<span class="pl-c1">2.0</span>)                                     
 (<span class="pl-s"><span class="pl-pds">"</span>Empire Records (1995)<span class="pl-pds">"</span></span>,<span class="pl-c1">2.0</span>)                                
 (<span class="pl-s"><span class="pl-pds">"</span>Dark Crystal, The (1982)<span class="pl-pds">"</span></span>,<span class="pl-c1">2.0</span>)                             
 (<span class="pl-s"><span class="pl-pds">"</span>Simon Birch (1998)<span class="pl-pds">"</span></span>,<span class="pl-c1">2.0</span>)                                   
 (<span class="pl-s"><span class="pl-pds">"</span>Romancing the Stone (1984)<span class="pl-pds">"</span></span>,<span class="pl-c1">2.0</span>)                           
 (<span class="pl-s"><span class="pl-pds">"</span>Dirty Dancing (1987)<span class="pl-pds">"</span></span>,<span class="pl-c1">1.0</span>)                                 
 (<span class="pl-s"><span class="pl-pds">"</span>Star Trek VI: The Undiscovered Country (1991)<span class="pl-pds">"</span></span>,<span class="pl-c1">1.0</span>)        
 (<span class="pl-s"><span class="pl-pds">"</span>Mission: Impossible (1996)<span class="pl-pds">"</span></span>,<span class="pl-c1">1.0</span>)                           
 (<span class="pl-s"><span class="pl-pds">"</span>Sudden Death (1995)<span class="pl-pds">"</span></span>,<span class="pl-c1">1.0</span>)                                  
 (<span class="pl-s"><span class="pl-pds">"</span>Jewel of the Nile, The (1985)<span class="pl-pds">"</span></span>,<span class="pl-c1">1.0</span>)                        
 (<span class="pl-s"><span class="pl-pds">"</span>Flashdance (1983)<span class="pl-pds">"</span></span>,<span class="pl-c1">1.0</span>)                                    
 (<span class="pl-s"><span class="pl-pds">"</span>Blind Date (1987)<span class="pl-pds">"</span></span>,<span class="pl-c1">1.0</span>)                                    
 (<span class="pl-s"><span class="pl-pds">"</span>Blue Lagoon, The (1980)<span class="pl-pds">"</span></span>,<span class="pl-c1">1.0</span>)                              
 (<span class="pl-s"><span class="pl-pds">"</span>Sphere (1998)<span class="pl-pds">"</span></span>,<span class="pl-c1">1.0</span>)                                        
 (<span class="pl-s"><span class="pl-pds">"</span>Grease 2 (1982)<span class="pl-pds">"</span></span>,<span class="pl-c1">1.0</span>)           </pre></div>
<p dir="auto">Among other things, this user seems to love movies about dystopian futures (Gattaca, 12 Monkeys, Brazil) and
dislike movies that involve dancing (Dirty Dancing, Flashdance, Grease 2). So what might that user
think of another dystopian future movie like Blade Runner?</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; IncrementalSVD.predicted_rating(model, &quot;3000&quot;, &quot;Blade Runner (1982)&quot;)
4.257683865384008"><pre>julia<span class="pl-k">&gt;</span> IncrementalSVD<span class="pl-k">.</span><span class="pl-c1">predicted_rating</span>(model, <span class="pl-s"><span class="pl-pds">"</span>3000<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Blade Runner (1982)<span class="pl-pds">"</span></span>)
<span class="pl-c1">4.257683865384008</span></pre></div>
<p dir="auto">And what would the same user think of Footloose?</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; IncrementalSVD.predicted_rating(model, &quot;3000&quot;, &quot;Footloose (1984)&quot;)
2.810785878396833"><pre>julia<span class="pl-k">&gt;</span> IncrementalSVD<span class="pl-k">.</span><span class="pl-c1">predicted_rating</span>(model, <span class="pl-s"><span class="pl-pds">"</span>3000<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Footloose (1984)<span class="pl-pds">"</span></span>)
<span class="pl-c1">2.810785878396833</span></pre></div>
<h3 dir="auto"><a id="user-content-how-do-i-know-that-the-results-are-any-good" class="anchor" aria-hidden="true" href="#how-do-i-know-that-the-results-are-any-good"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How do I know that the results are any good?</h3>
<p dir="auto"><a href="http://en.wikipedia.org/wiki/Root-mean-square_deviation" rel="nofollow">Root-mean-square error</a> (RMSE) is commonly used to measure predictions like these. It measures the average
difference of a predicted rating to the actual rating over all actual ratings in some test set.
All of the datasets loaded by this package hold out
around 10% of the ratings for testing RMSE. After you've trained a model on a rating set, calling
<code>IncrementalSVD.rmse(rating_set, model)</code> will calculate the RMSE on the test ratings, none of which
were seen by the model during training.</p>
<p dir="auto">You can also pass a specific rank (something less than the total rank of the model) to the <code>rmse</code> function to see
what the RMSE would have been on the same model had you stopped adding features a little earlier. If you called
<code>model = IncrementalSVD.train(rating_set, 50)</code>, you could then call <code>IncrementalSVD.rmse(rating_set, model, rank=i)</code> for any
<code>1 &lt;= i &lt;= 50</code> to find the best rank in that range. If you find a rank with better RMSE, you can truncate your
existing model by calling <code>IncrementalSVD.truncate_model!(model, rank)</code> to convert it into a model with smaller
rank and better RMSE.</p>
<p dir="auto">We don't round predicted ratings or ceiling/floor them if they go out of range in <code>IncrementalSVD.rmse</code>. This
makes the RMSE returned a little worse than it could be. RMSE is a very informative statistic but optimizing it
isn't the goal of this package.</p>
<h3 dir="auto"><a id="user-content-what-other-datasets-does-this-package-load" class="anchor" aria-hidden="true" href="#what-other-datasets-does-this-package-load"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>What other datasets does this package load?</h3>
<p dir="auto">This package has built-in support for loading and cleaning three datasets:</p>
<ul dir="auto">
<li>
<p dir="auto"><code>load_small_movielens_dataset</code>: 1 million ratings from 6,000 users over 4,000 movies. Ratings are in the range 1 (lowest)
to 5 (highest). You should be able to train
25 features in about 5 minutes on this dataset with an RMSE of around 0.91.</p>
</li>
<li>
<p dir="auto"><code>load_large_movielens_dataset</code>: 10 million ratings from 72,000 users over 10,000 movies. Ratings are in the range 1 (lowest)
to 5 (highest). You should be able to train 15 features in about an hour on this dataset with a resulting RMSE of around 0.8.
RMSE tends to keep going down as you add more features, so keep training if you have the time.</p>
</li>
<li>
<p dir="auto"><code>load_book_crossing_dataset</code>: 1.1 million ratings from about 278,000 users over about 271,000 books. Ratings are in
the range 0 (lowest) to 10 (highest), but zeros mean that the user read the book but didn't rate it. This data comes
from a crawl of the bookcrossing.com site and needs a lot of cleaning before you can
do anything useful with it. During loading, we throw away any rating by a user who hasn't rated at least 30 books and
given at least 6 distinct numeric ratings and we also throw away any rating of a book that hasn't been rated at least
30 times. In additions, we remap the ratings onto the range 1-6: everything from 0-5 becomes 1 and the rest of the
ratings are scaled down by 4. This leaves about 190,000 ratings in the range 1-5 by 3900 users over 3900 books. You
should be train a model with 30 features in about a minute with an RMSE a little over 1.5.</p>
</li>
</ul>
</article></div>