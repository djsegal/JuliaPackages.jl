<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-synthcontroljl" class="anchor" aria-hidden="true" href="#synthcontroljl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SynthControl.jl</h1>
<p>Julia package for synthetic control methods, implementing the technique described in <a href="https://economics.mit.edu/files/11859" rel="nofollow">Abadie et al. (2010)</a></p>
<p>The package is at alpha stage - there's a bare bones implementation that can be used to obtain results and plot them, as well as an implementation of a placebo test, but no formal inference.</p>
<p>UPDATE 17/1/2020 - the package is currently being rewritten with a more generic interface for
specifying treatment patterns that will simplify the implementation of different types of
synthetic control estimators; the main functionality is currently still operational, but docs
are being rewritten. Refer to the tests for a bare bones guide on how to fit &amp; plot a SCM
in the current implementation</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>The package is currently unregistered, installation therefore works directly
from the repo:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="pkg&gt; add &quot;https://github.com/nilshg/SynthControl.jl&quot;
"><pre><code>pkg&gt; add "https://github.com/nilshg/SynthControl.jl"
</code></pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>The package includes example data borrowed from the <a href="https://www.cer.eu/insights/cost-brexit-june-2018" rel="nofollow">CER Brexit study</a>:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; using SynthControl

julia&gt; df = load_brexit()
897×3 DataFrame
│ Row │ country        │ quarter    │ realgdp │
│     │ String         │ Date       │ Float64 │
├─────┼────────────────┼────────────┼─────────┤
│ 1   │ Australia      │ 2009-01-01 │ 1.04    │
│ 2   │ Austria        │ 2009-01-01 │ -1.53   │
│ 3   │ Belgium        │ 2009-01-01 │ -1.15   │
⋮
│ 894 │ Sweden         │ 2018-07-01 │ 22.48   │
│ 895 │ Switzerland    │ 2018-07-01 │ 14.35   │
│ 896 │ United Kingdom │ 2018-07-01 │ 15.72   │
│ 897 │ United States  │ 2018-07-01 │ 19.32   │
"><pre><code>julia&gt; using SynthControl

julia&gt; df = load_brexit()
897×3 DataFrame
│ Row │ country        │ quarter    │ realgdp │
│     │ String         │ Date       │ Float64 │
├─────┼────────────────┼────────────┼─────────┤
│ 1   │ Australia      │ 2009-01-01 │ 1.04    │
│ 2   │ Austria        │ 2009-01-01 │ -1.53   │
│ 3   │ Belgium        │ 2009-01-01 │ -1.15   │
⋮
│ 894 │ Sweden         │ 2018-07-01 │ 22.48   │
│ 895 │ Switzerland    │ 2018-07-01 │ 14.35   │
│ 896 │ United Kingdom │ 2018-07-01 │ 15.72   │
│ 897 │ United States  │ 2018-07-01 │ 19.32   │
</code></pre></div>
<p>The package defines a <code>SynthControlModel</code> type, instances of which can be constructed
from a <code>DataFrame</code>, specifying the column holding the outcome variable of interest,
the time and group (ID) dimension, the treatment start period and the treated
group/observation. Currently, only one treatment unit can be specified.</p>
<p>The example data set includes quarterly GDP for a number of OECD countries, and
we are interested in estimating the impact of the Brexit vote in Q2 2016 on GDP
in the UK:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; s_model = SynthControlModel(df, :realgdp, :country, :quarter, &quot;United Kingdom&quot;, Date(2016, 7, 1))

Synthetic Control Model
    Outcome variable: realgdp
    Time dimension: quarter with 39 unique values
    Treatment period: 2016-07-01
    ID variable: country with 23 unique values
    Treatment ID: United Kingdom

    Model is not fitted
"><pre><code>julia&gt; s_model = SynthControlModel(df, :realgdp, :country, :quarter, "United Kingdom", Date(2016, 7, 1))

Synthetic Control Model
    Outcome variable: realgdp
    Time dimension: quarter with 39 unique values
    Treatment period: 2016-07-01
    ID variable: country with 23 unique values
    Treatment ID: United Kingdom

    Model is not fitted
</code></pre></div>
<p>The output indicates that the model is not fitted, that is we have at this stage
only defined the basic model structure. We can fit the model using the <code>fit!</code>
function, which will modify our <code>SynthControlModel</code> in place:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; fit!(s_model)

Synthetic Control Model
    Outcome variable: realgdp
    Time dimension: quarter with 39 unique values
    Treatment period: 2016-07-01
    ID variable: country with 23 unique values
    Treatment ID: United Kingdom
    Model is fitted
    Impact estimates: [-0.712, -0.525, -0.426, -0.753, -1.218, -1.451, -1.816, -2.223, -1.761]
"><pre><code>julia&gt; fit!(s_model)

Synthetic Control Model
    Outcome variable: realgdp
    Time dimension: quarter with 39 unique values
    Treatment period: 2016-07-01
    ID variable: country with 23 unique values
    Treatment ID: United Kingdom
    Model is fitted
    Impact estimates: [-0.712, -0.525, -0.426, -0.753, -1.218, -1.451, -1.816, -2.223, -1.761]
</code></pre></div>
<p>The reported impact estimates are the difference between observed outcome variable
and estimated outcome in the absence of treatment - a negative value therefore means
the treatment is expected to have reduced the outcome variable compared to the
counterfactual.</p>
<p>The package also defines a <a href="https://github.com/JuliaPlots/RecipesBase.jl">plot recipe</a>
which allows to visualise the estimated impact:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; using Plots

julia&gt; plot(s_model)
"><pre><code>julia&gt; using Plots

julia&gt; plot(s_model)
</code></pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="synthcontrol.png"><img src="synthcontrol.png" alt="Sample output" style="max-width:100%;"></a></p>
<p>To do:</p>
<ul>
<li>Inference</li>
<li>Matching on specific covariates</li>
<li>Multiple treatment units</li>
<li>Documentation</li>
<li>Expand testset</li>
<li>Consider dropping DataFrames dependency in favour of Tables</li>
<li>Include <a href="https://eml.berkeley.edu/~jrothst/workingpapers/BMFR_Synth_Nov_2018.pdf" rel="nofollow">Augmented Synthetic Control</a></li>
</ul>
</article></div>