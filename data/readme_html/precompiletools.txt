<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-precompiletools" class="anchor" aria-hidden="true" href="#precompiletools"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PrecompileTools</h1>
<p dir="auto"><a href="https://JuliaLang.github.io/PrecompileTools.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaLang/PrecompileTools.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/JuliaLang/PrecompileTools.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaLang/PrecompileTools.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/023320d70bc150a89b6fa772f6424735d466d5aaadbabde69783c2c5c4492b2f/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614c616e672f507265636f6d70696c65546f6f6c732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaLang/PrecompileTools.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">PrecompileTools allows you to reduce the latency of the first execution of Julia code.
<strong>It is applicable for package developers and for "ordinary users" in their personal workflows.</strong></p>
<p dir="auto">To learn how to use PrecompileTools, see the <a href="https://JuliaLang.github.io/PrecompileTools.jl/stable/" rel="nofollow">documentation</a>.</p>
<h2 dir="auto"><a id="user-content-precompiletools-and-packagecompiler" class="anchor" aria-hidden="true" href="#precompiletools-and-packagecompiler"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PrecompileTools and PackageCompiler</h2>
<p dir="auto">Particularly on Julia 1.9 and higher, PrecompileTools allows dramatic reduction in "time to first execution" (TTFX) without the need for user-customization.
In this respect, it shares goals with (and performs similarly to) <a href="https://github.com/JuliaLang/PackageCompiler.jl">PackageCompiler</a>.</p>
<p dir="auto">Nevertheless, the two are not identical:</p>
<ul dir="auto">
<li>only PrecompileTools can be used by <em>package developers</em> to ensure a better out-of-box experience for your users</li>
<li>only PrecompileTools allows you to update your packages without needing to rebuild Julia</li>
<li>only PackageCompiler dramatically speeds up loading time (i.e., <code>using ...</code>) for all the packages</li>
</ul>
<p dir="auto">Here is a table summarizing the information.</p>
<table>
<thead>
<tr>
<th align="left">Task</th>
<th align="right">Julia 1.9 + PrecompileTools</th>
<th align="right">PackageCompiler</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">Developers can reduce out-of-box TTFX for their users</td>
<td align="right"><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td align="right"><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
</tr>
<tr>
<td align="left">Users can reduce TTFX for custom tasks</td>
<td align="right"><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td align="right"><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
</tr>
<tr>
<td align="left">Packages can be updated without rebuilding system image</td>
<td align="right"><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
<td align="right"><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
</tr>
<tr>
<td align="left">Reduces time to load (TTL)</td>
<td align="right"><g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png">❌</g-emoji></td>
<td align="right"><g-emoji class="g-emoji" alias="heavy_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2714.png">✔️</g-emoji></td>
</tr>
</tbody>
</table>
<p dir="auto">The difference in time to load arises because the system image can safely skip all the code-validation checks that are necessary when loading packages. Examples of the reduction in time to first execution and time to load can be found in the <a href="https://julialang.org/blog/2023/04/julia-1.9-highlights/#caching_of_native_code" rel="nofollow">Julia 1.9 highlights blog post</a>.</p>
<h2 dir="auto"><a id="user-content-inspecting-the-package-precompile-files" class="anchor" aria-hidden="true" href="#inspecting-the-package-precompile-files"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Inspecting the package precompile files</h2>
<p dir="auto"><a href="https://github.com/timholy/PkgCacheInspector.jl">PkgCacheInspector</a> provides insight about what's stored in Julia's package precompile files.</p>
<h2 dir="auto"><a id="user-content-history-origins-as-snoopprecompile" class="anchor" aria-hidden="true" href="#history-origins-as-snoopprecompile"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>History (origins as SnoopPrecompile)</h2>
<p dir="auto">PrecompileTools is the successor to <a href="https://github.com/timholy/SnoopCompile.jl/tree/master/SnoopPrecompile">SnoopPrecompile</a>.
PrecompileTools differs in naming and in how one disables precompilation, but is otherwise a drop-in replacement.</p>
<p dir="auto">This new package was created for several reasons:</p>
<ul dir="auto">
<li>PrecompileTools has become (directly or indirectly) a dependency of much of the Julia ecosystem, a trend that seems likely to grow with time.
Therefore, this package is now hosted in the JuliaLang GitHub organization.</li>
<li>As Julia's own stdlibs migrate to become independently updateable (true for DelimitedFiles in Julia 1.9, with others anticipated for Julia 1.10), several of them would like to use PrecompileTools for high-quality precompilation. That requires making PrecompileTools its own "upgradable stdlib."</li>
<li>This package introduces the <a href="https://github.com/timholy/SnoopCompile.jl/issues/356" data-hovercard-type="issue" data-hovercard-url="/timholy/SnoopCompile.jl/issues/356/hovercard">use of Preferences</a> to make packages more independent of one another. Since this would have been a breaking change, it seemed like a good opportunity to fix other issues, too.</li>
</ul>
<p dir="auto">For more information and discussion, see the <a href="https://discourse.julialang.org/t/ann-snoopprecompile-precompiletools/97882" rel="nofollow">Discourse announcement post</a>.</p>
</article></div>