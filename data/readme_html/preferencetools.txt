<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-preferencetoolsjl" class="anchor" aria-hidden="true" href="#preferencetoolsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PreferenceTools.jl</h1>
<p dir="auto"><a href="https://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/2261082c77808ea734741b12e535d02d23c4101f6b8dfec807f4ddc5ef2eeec0/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="Project Status: Active â€“ The project has reached a stable, usable state and is being actively developed." data-canonical-src="https://www.repostatus.org/badges/latest/active.svg" style="max-width: 100%;"></a>
<a href="https://github.com/cjdoris/PreferenceTools.jl/actions/workflows/tests.yml"><img src="https://github.com/cjdoris/PreferenceTools.jl/actions/workflows/tests.yml/badge.svg" alt="Test Status" style="max-width: 100%;"></a>
<a href="https://github.com/cjdoris/PreferenceTools.jl/actions/workflows/tests-nightly.yml"><img src="https://github.com/cjdoris/PreferenceTools.jl/actions/workflows/tests-nightly.yml/badge.svg" alt="Test Status (nightly)" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/cjdoris/PreferenceTools.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7148403db38013c4bbdf54ed86d3cbe11dd55667c815be7eaac42cf853f6814b/68747470733a2f2f636f6465636f762e696f2f67682f636a646f7269732f507265666572656e6365546f6f6c732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d31666c5035313238685a" alt="Codecov" data-canonical-src="https://codecov.io/gh/cjdoris/PreferenceTools.jl/branch/main/graph/badge.svg?token=1flP5128hZ" style="max-width: 100%;"></a></p>
<p dir="auto">A friendlier way to set preferences in Julia.</p>
<p dir="auto">Built on top of <a href="https://github.com/JuliaPackaging/Preferences.jl">Preferences.jl</a>, this
package provides new commands in the Pkg REPL for getting and setting preferences.</p>
<p dir="auto">In the following example, we find that Plots and PythonCall both have some preferences set
already and modify them.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using PreferenceTools

julia&gt; # press ] to enter the Pkg REPL

pkg&gt; preference status
Plots
  default_backend: &quot;unicodeplots&quot;
PythonCall
  exe: &quot;python&quot;

pkg&gt; preference add Plots default_backend=gr
Writing `.../example/LocalPreferences.toml`
Plots
  default_backend: &quot;gr&quot;
You may need to restart Julia for preferences to take effect.

pkg&gt; preference rm --all PythonCall
Writing `.../example/LocalPreferences.toml`
PythonCall
  No preferences.
You may need to restart Julia for preferences to take effect."><pre class="notranslate"><code>julia&gt; using PreferenceTools

julia&gt; # press ] to enter the Pkg REPL

pkg&gt; preference status
Plots
  default_backend: "unicodeplots"
PythonCall
  exe: "python"

pkg&gt; preference add Plots default_backend=gr
Writing `.../example/LocalPreferences.toml`
Plots
  default_backend: "gr"
You may need to restart Julia for preferences to take effect.

pkg&gt; preference rm --all PythonCall
Writing `.../example/LocalPreferences.toml`
PythonCall
  No preferences.
You may need to restart Julia for preferences to take effect.
</code></pre></div>
<p dir="auto">This package is mainly intended for interactive use. Packages (or any other code
programatically accessing preferences) should normally use
<a href="https://github.com/JuliaPackaging/Preferences.jl">Preferences.jl</a>
directly.</p>
<h2 dir="auto"><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>API</h2>
<p dir="auto">See the docstrings for more details (e.g. <code>pkg&gt; help preference</code>).</p>
<h3 dir="auto"><a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Commands</h3>
<ul dir="auto">
<li><code>preference st|status [pkg]</code></li>
<li><code>preference add pkg key=value ...</code></li>
<li><code>preference rm|remove [-a|--all] pkg key ...</code></li>
</ul>
<h3 dir="auto"><a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Functions</h3>
<ul dir="auto">
<li><code>status(["pkg"])</code></li>
<li><code>add("pkg"; key=value, ...)</code> or <code>add("pkg", "key"=&gt;value, ...)</code></li>
<li><code>rm("pkg", "key", ...)</code></li>
<li><code>rm_all("pkg")</code></li>
<li><code>get_all(["pkg"])</code></li>
</ul>
<h3 dir="auto"><a id="user-content-flags" class="anchor" aria-hidden="true" href="#flags"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Flags</h3>
<ul dir="auto">
<li><code>-g</code>/<code>--global</code>/<code>_global=true</code> works in the global environment instead of the current
project. This sets default preferences for all projects.</li>
<li><code>-x</code>/<code>--export</code>/<code>_export=true</code> writes preferences to <code>Project.toml</code> instead of
<code>LocalPreferences.toml</code>. Use this to set default preferences to be shared with others
(e.g. defaults for your own package).</li>
<li><code>-s</code>/<code>--string</code> forces the values given to <code>preference add</code> to be interpreted as strings,
instead of parsing them.</li>
</ul>
<h2 dir="auto"><a id="user-content-more-repl-examples" class="anchor" aria-hidden="true" href="#more-repl-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>More REPL examples</h2>
<p dir="auto">You can set booleans, integers and floating point numbers.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; preference add Example bool=true int=34 float=99.9
Writing `.../example/LocalPreferences.toml`
Example
  bool: true
  float: 99.9
  int: 34
You may need to restart Julia for preferences to take effect."><pre class="notranslate"><code>pkg&gt; preference add Example bool=true int=34 float=99.9
Writing `.../example/LocalPreferences.toml`
Example
  bool: true
  float: 99.9
  int: 34
You may need to restart Julia for preferences to take effect.
</code></pre></div>
<p dir="auto">You can unset a preference by passing an empty value. This is equivalent to using the <code>rm</code>
command.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; preference add Example bool=
Writing `.../example/LocalPreferences.toml`
Example
  float: 99.9
  int: 34
You may need to restart Julia for preferences to take effect."><pre class="notranslate"><code>pkg&gt; preference add Example bool=
Writing `.../example/LocalPreferences.toml`
Example
  float: 99.9
  int: 34
You may need to restart Julia for preferences to take effect.
</code></pre></div>
<p dir="auto">Preferences can be set in your global environment (e.g. <code>~/.julia/environments/v1.8</code>) with
the <code>-g</code> flag. Preferences are inherited up the load path, meaning that local preferences
take precedence - see how the <code>float</code> preference does not change because it already has a
local value.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; preference add -g Example bool=false float=0.0
Writing `.../example/LocalPreferences.toml`
Example
  bool: false
  float: 99.9
  int: 34
You may need to restart Julia for preferences to take effect."><pre class="notranslate"><code>pkg&gt; preference add -g Example bool=false float=0.0
Writing `.../example/LocalPreferences.toml`
Example
  bool: false
  float: 99.9
  int: 34
You may need to restart Julia for preferences to take effect.
</code></pre></div>
<p dir="auto">In this case, unsetting the <code>bool</code> preference in the local environment has no effect,
because it has a default value from the global environment. To force the preference to be
removed in the local environment, you can pass the <code>nothing</code> value (or remove it from the
global environment).</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; preference add Example bool=
Writing `.../example/LocalPreferences.toml`
Example
  bool: false
  float: 99.9
  int: 34
You may need to restart Julia for preferences to take effect.

pkg&gt; preference add Example bool=nothing
Writing `.../example/LocalPreferences.toml`
Example
  float: 99.9
  int: 34
You may need to restart Julia for preferences to take effect."><pre class="notranslate"><code>pkg&gt; preference add Example bool=
Writing `.../example/LocalPreferences.toml`
Example
  bool: false
  float: 99.9
  int: 34
You may need to restart Julia for preferences to take effect.

pkg&gt; preference add Example bool=nothing
Writing `.../example/LocalPreferences.toml`
Example
  float: 99.9
  int: 34
You may need to restart Julia for preferences to take effect.
</code></pre></div>
<p dir="auto">A value containing <code>,</code> is interpreted as a list. Blank entries are ignored, so <code>,</code> itself
is an empty list and <code>foo,</code> is a list with one value.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; preference add Example list=foo,bar,baz one=1, empty=,
Writing `.../example/LocalPreferences.toml`
Example
  empty: Union{}[]
  float: 99.9
  int: 34
  list: [&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;]
  one: [1]
You may need to restart Julia for preferences to take effect."><pre class="notranslate"><code>pkg&gt; preference add Example list=foo,bar,baz one=1, empty=,
Writing `.../example/LocalPreferences.toml`
Example
  empty: Union{}[]
  float: 99.9
  int: 34
  list: ["foo", "bar", "baz"]
  one: [1]
You may need to restart Julia for preferences to take effect.
</code></pre></div>
<p dir="auto">You can append to a list with <code>+=</code> and remove items with <code>-=</code>.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; preference add Example list+=hello
Writing `.../example/LocalPreferences.toml`
Example
  empty: Union{}[]
  float: 99.9
  int: 34
  list: [&quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;, &quot;hello&quot;]
  one: [1]
You may need to restart Julia for preferences to take effect.

pkg&gt; preference add Example list-=bar,baz
Writing `.../example/LocalPreferences.toml`
Example
  empty: Union{}[]
  float: 99.9
  int: 34
  list: [&quot;foo&quot;, &quot;hello&quot;]
  one: [1]
You may need to restart Julia for preferences to take effect."><pre class="notranslate"><code>pkg&gt; preference add Example list+=hello
Writing `.../example/LocalPreferences.toml`
Example
  empty: Union{}[]
  float: 99.9
  int: 34
  list: ["foo", "bar", "baz", "hello"]
  one: [1]
You may need to restart Julia for preferences to take effect.

pkg&gt; preference add Example list-=bar,baz
Writing `.../example/LocalPreferences.toml`
Example
  empty: Union{}[]
  float: 99.9
  int: 34
  list: ["foo", "hello"]
  one: [1]
You may need to restart Julia for preferences to take effect.
</code></pre></div>
</article></div>