<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mljiterationjl" class="anchor" aria-hidden="true" href="#mljiterationjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MLJIteration.jl</h1>
<table>
<thead>
<tr>
<th align="center">Linux</th>
<th align="center">Coverage</th>
<th align="center">Documentation</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://github.com/JuliaAI/MLJIteration.jl/actions"><img src="https://github.com/JuliaAI/MLJIteration.jl/workflows/CI/badge.svg" alt="Build status" style="max-width: 100%;"></a></td>
<td align="center"><a href="http://codecov.io/github/JuliaAI/MLJIteration.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/d62ef77290a5c9443cda10f78f562602acef29f6c957de4e6673c7c7efc476ce/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c696141492f4d4c4a497465726174696f6e2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaAI/MLJIteration.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://alan-turing-institute.github.io/MLJ.jl/dev/controlling_iterative_models/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="docs" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">A package for wrapping iterative models provided by the
<a href="https://alan-turing-institute.github.io/MLJ.jl/dev/" rel="nofollow">MLJ</a> machine
learning framework in a control strategy.</p>
<p dir="auto">Builds on the generic iteration control tool
<a href="https://github.com/JuliaAI/IterationControl.jl">IterationControl.jl</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Included as part of
<a href="https://alan-turing-institute.github.io/MLJ.jl/dev/#Installation-1" rel="nofollow">MLJ installation</a>.</p>
<p dir="auto">Alternatively, for a "minimal" installation:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;MLJBase&quot;)
Pkg.add(&quot;MLJIteration&quot;)
Pkg.add(&quot;MLJModels&quot;)     # to load models"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>MLJBase<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>MLJIteration<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>MLJModels<span class="pl-pds">"</span></span>)     <span class="pl-c"><span class="pl-c">#</span> to load models</span></pre></div>
<h2 dir="auto"><a id="user-content-sample-usage" class="anchor" aria-hidden="true" href="#sample-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Sample usage</h2>
<p dir="auto">Assuming MLJ is installed:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;EvoTrees&quot;)

using MLJ

X, y = make_moons(1000, rng=123)
EvoTreeClassifier = @load EvoTreeClassifier verbosity=0

iterated_model = IteratedModel(model=EvoTreeClassifier(rng=123, η=0.005),
                               resampling=Holdout(rng=123),
                               measures=log_loss,
                               controls=[Step(5),
                                         Patience(2),
                                         NumberLimit(100)],
                               retrain=true)

mach = machine(iterated_model, X, y) |&gt; fit!;"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>EvoTrees<span class="pl-pds">"</span></span>)

<span class="pl-k">using</span> MLJ

X, y <span class="pl-k">=</span> <span class="pl-c1">make_moons</span>(<span class="pl-c1">1000</span>, rng<span class="pl-k">=</span><span class="pl-c1">123</span>)
EvoTreeClassifier <span class="pl-k">=</span> <span class="pl-c1">@load</span> EvoTreeClassifier verbosity<span class="pl-k">=</span><span class="pl-c1">0</span>

iterated_model <span class="pl-k">=</span> <span class="pl-c1">IteratedModel</span>(model<span class="pl-k">=</span><span class="pl-c1">EvoTreeClassifier</span>(rng<span class="pl-k">=</span><span class="pl-c1">123</span>, η<span class="pl-k">=</span><span class="pl-c1">0.005</span>),
                               resampling<span class="pl-k">=</span><span class="pl-c1">Holdout</span>(rng<span class="pl-k">=</span><span class="pl-c1">123</span>),
                               measures<span class="pl-k">=</span>log_loss,
                               controls<span class="pl-k">=</span>[<span class="pl-c1">Step</span>(<span class="pl-c1">5</span>),
                                         <span class="pl-c1">Patience</span>(<span class="pl-c1">2</span>),
                                         <span class="pl-c1">NumberLimit</span>(<span class="pl-c1">100</span>)],
                               retrain<span class="pl-k">=</span><span class="pl-c1">true</span>)

mach <span class="pl-k">=</span> <span class="pl-c1">machine</span>(iterated_model, X, y) <span class="pl-k">|&gt;</span> fit!;</pre></div>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<p dir="auto">See the <a href="https://alan-turing-institute.github.io/MLJ.jl/dev/controlling_iterative_models/" rel="nofollow">Controlling Iterative
Models</a>
section of the <a href="https://alan-turing-institute.github.io/MLJ.jl/dev/" rel="nofollow">MLJ
manual</a>.</p>
</article></div>