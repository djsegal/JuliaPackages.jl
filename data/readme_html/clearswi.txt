<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://github.com/korbinian90/CLEARSWI.jl/actions"><img src="https://github.com/korbinian90/CLEARSWI.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/korbinian90/CLEARSWI-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/25b9d3334a8fcb7affbe4d311006fc404f42d5b276b1aedd79343be5c281b71a/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6b6f7262696e69616e39302f434c4541525357492e6a6c3f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/korbinian90/CLEARSWI.jl?svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/korbinian90/CLEARSWI.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b996c62b100595420d01581062f27d809e70a7b3ab6cc89734966a50afc14ff0/68747470733a2f2f636f6465636f762e696f2f67682f6b6f7262696e69616e39302f434c4541525357492e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/korbinian90/CLEARSWI.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-susceptibility-weighted-imaging-clear-swi" class="anchor" aria-hidden="true" href="#susceptibility-weighted-imaging-clear-swi"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Susceptibility Weighted Imaging (CLEAR-SWI)</h1>
<p>Published at the <a href="https://index.mirasmart.com/ISMRM2020/PDFfiles/3201.html" rel="nofollow">ISMRM as CLEAR-SWI</a>. It provides magnetic resonance images with improved vein and iron contrast by weighting a combined magnitude image with a preprocessed phase image. This package has the additional capability of multi-echo SWI, intensity correction, contrast enhancement and improved phase processing. The reason for the development of this package was to solve artefacts at ultra-high field strength (7T), however, it also drastically improves the SWI quality at lower field strength.</p>
<h2><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Getting Started</h2>
<h3><a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Prerequisites</h3>
<p>A Julia installation â‰¥ 1.3 (<a href="https://julialang.org/downloads/" rel="nofollow">Official Julia Webpage</a>)</p>
<p>Single-echo or multi-echo Magnitude and Phase images in NIfTI fileformat (4D images with echoes in the 4th dimension)</p>
<h3><a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installing</h3>
<p>Run the following commands in Julia (either interactively in the REPL or as a script)</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(PackageSpec(url=&quot;https://github.com/korbinian90/CLEARSWI.jl&quot;))
"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-c1">PackageSpec</span>(url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/korbinian90/CLEARSWI.jl<span class="pl-pds">"</span></span>))</pre></div>
<h3><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h3>
<p>This is a simple multi-echo case without changing default behavior</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using CLEARSWI

TEs = [4,8,12] # change this to the Echo Time of your sequence. For multi-echoes, set a list of TE values, else set a list with a single TE value.
nifti_folder = CLEARSWI.dir(&quot;test&quot;,&quot;testData&quot;,&quot;small&quot;) # replace with path to your folder e.g. nifti_folder=&quot;/data/clearswi&quot;
magfile = joinpath(nifti_folder, &quot;Mag.nii&quot;) # Path to the magnitude image in nifti format, must be .nii or .hdr
phasefile = joinpath(nifti_folder, &quot;Phase.nii&quot;) # Path to the phase image

mag = readmag(magfile);
phase = readphase(phasefile);
data = Data(mag, phase, mag.header, TEs);

swi = calculateSWI(data);
mip = createMIP(swi);

savenii(swi, &quot;&lt;outputpath&gt;/swi.nii&quot;; header=mag.header) # change &lt;outputpath&gt; with the path where you want to save the reconstructed SWI
savenii(mip, &quot;&lt;outputpath&gt;/mip.nii&quot;; header=mag.header)
"><pre><span class="pl-k">using</span> CLEARSWI

TEs <span class="pl-k">=</span> [<span class="pl-c1">4</span>,<span class="pl-c1">8</span>,<span class="pl-c1">12</span>] <span class="pl-c"><span class="pl-c">#</span> change this to the Echo Time of your sequence. For multi-echoes, set a list of TE values, else set a list with a single TE value.</span>
nifti_folder <span class="pl-k">=</span> CLEARSWI<span class="pl-k">.</span><span class="pl-c1">dir</span>(<span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>testData<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>small<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> replace with path to your folder e.g. nifti_folder="/data/clearswi"</span>
magfile <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(nifti_folder, <span class="pl-s"><span class="pl-pds">"</span>Mag.nii<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> Path to the magnitude image in nifti format, must be .nii or .hdr</span>
phasefile <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(nifti_folder, <span class="pl-s"><span class="pl-pds">"</span>Phase.nii<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> Path to the phase image</span>

mag <span class="pl-k">=</span> <span class="pl-c1">readmag</span>(magfile);
phase <span class="pl-k">=</span> <span class="pl-c1">readphase</span>(phasefile);
data <span class="pl-k">=</span> <span class="pl-c1">Data</span>(mag, phase, mag<span class="pl-k">.</span>header, TEs);

swi <span class="pl-k">=</span> <span class="pl-c1">calculateSWI</span>(data);
mip <span class="pl-k">=</span> <span class="pl-c1">createMIP</span>(swi);

<span class="pl-c1">savenii</span>(swi, <span class="pl-s"><span class="pl-pds">"</span>&lt;outputpath&gt;/swi.nii<span class="pl-pds">"</span></span>; header<span class="pl-k">=</span>mag<span class="pl-k">.</span>header) <span class="pl-c"><span class="pl-c">#</span> change &lt;outputpath&gt; with the path where you want to save the reconstructed SWI</span>
<span class="pl-c1">savenii</span>(mip, <span class="pl-s"><span class="pl-pds">"</span>&lt;outputpath&gt;/mip.nii<span class="pl-pds">"</span></span>; header<span class="pl-k">=</span>mag<span class="pl-k">.</span>header)</pre></div>
<h3><a id="user-content-available-options" class="anchor" aria-hidden="true" href="#available-options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Available Options</h3>
<p>To apply custom options use the following keyword syntax (example to apply 3D high-pass filtering for the phase with the given kernel size and deactivate softplus magnitude scaling):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="options = Options(phase_hp_Ïƒ=[10,10,5], mag_softplus=false)
swi = calculateSWI(data, options);
"><pre>options <span class="pl-k">=</span> <span class="pl-c1">Options</span>(phase_hp_Ïƒ<span class="pl-k">=</span>[<span class="pl-c1">10</span>,<span class="pl-c1">10</span>,<span class="pl-c1">5</span>], mag_softplus<span class="pl-k">=</span><span class="pl-c1">false</span>)
swi <span class="pl-k">=</span> <span class="pl-c1">calculateSWI</span>(data, options);</pre></div>
<p>All the possible options with the default values are</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="mag_combine=:SNR
mag_sens=nothing
mag_softplus=true
phase_unwrap=:laplacian
phase_hp_Ïƒ=[4,4,0]
phase_scaling_type=:tanh
phase_scaling_strength=4
writesteps=nothing
"><pre>mag_combine<span class="pl-k">=</span><span class="pl-c1">:SNR</span>
mag_sens<span class="pl-k">=</span><span class="pl-c1">nothing</span>
mag_softplus<span class="pl-k">=</span><span class="pl-c1">true</span>
phase_unwrap<span class="pl-k">=</span><span class="pl-c1">:laplacian</span>
phase_hp_Ïƒ<span class="pl-k">=</span>[<span class="pl-c1">4</span>,<span class="pl-c1">4</span>,<span class="pl-c1">0</span>]
phase_scaling_type<span class="pl-k">=</span><span class="pl-c1">:tanh</span>
phase_scaling_strength<span class="pl-k">=</span><span class="pl-c1">4</span>
writesteps<span class="pl-k">=</span><span class="pl-c1">nothing</span></pre></div>
<ul>
<li>
<p><code>mag_combine</code> selects the echo combination for the magnitude. Options are</p>
<ul>
<li><code>:SNR</code></li>
<li><code>:average</code></li>
<li><code>:last</code> to select the last echo</li>
<li><code>(:CNR =&gt; (:gm, :wm))</code> to optimize the contrast between two selected tissues with the possible tissues classes to select in <code>src\tissue.jl</code>, currently only working for 7T</li>
<li><code>(:echo =&gt; 3)</code> to select the 3rd echo</li>
<li><code>(:closest =&gt; 15.3)</code> to select the echo that is closest to 15.3 ms</li>
<li><code>(:SE =&gt; 15.3)</code> to simulate the contrast that would be achieved using a corresponding single-echo scan with 15.3 ms echo time.</li>
</ul>
</li>
<li>
<p>If <code>mag_sens</code> is set to an array, it is used instead of CLEAR-SWI sensitivity estimation. This can also be set to <code>mag_sens=[1]</code> to use the constant sensitivity of 1 and effectively avoid sensitivity correction.</p>
</li>
<li>
<p>To deactivate scaling of the combined magnitude with the softplus function, use <code>mag_softplus=false</code>.</p>
</li>
<li>
<p><code>phase_unwrap</code> is either <code>:laplacian</code>, <code>:romeo</code>, or <code>:laplacianslice</code> (slicewise laplacian unwrapping)</p>
</li>
<li>
<p>The <code>phase_hp_Ïƒ</code> is used for high-pass filtering and is given in voxel for the [x,y,z]-dimension.</p>
</li>
<li>
<p><code>phase_scaling_type</code> is the scaling function to create the phase mask and can be <code>:tanh</code> for sigmoidal filtering, or <code>:positive</code>, <code>:negative</code>, and <code>:triangular</code> for traditional SWI application. If the scaling has the wrong sign, the phase input can be simply inverted by a minus sign: <code>phase = -readphase(phasefile);</code></p>
</li>
<li>
<p><code>phase_scaling_strength</code> adjusts the strength of the created phase mask. A higher phase_scaling_strength is a stronger phase appearance. With a traditional SWI <code>phase_scaling_type</code> it corresponds to the power or number of phase mask multiplications.</p>
</li>
<li>
<p>Set <code>writesteps</code> to the path, where intermediate steps should be saved, e.g. <code>writesteps="/tmp/clearswi_steps"</code>. If set to <code>nothing</code>, intermediate steps won't be saved.</p>
</li>
</ul>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p>This project is licensed under the MIT License - see the <a href="https://github.com/korbinian90/CLEARSWI.jl/blob/master/LICENSE">LICENSE</a> for details</p>
</article></div>