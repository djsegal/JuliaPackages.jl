<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-resizing" class="anchor" aria-hidden="true" href="#resizing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Resizing</h1>
<p dir="auto"><a href="https://Tokazama.github.io/Resizing.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://Tokazama.github.io/Resizing.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/Tokazama/Resizing.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/Tokazama/Resizing.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/Tokazama/Resizing.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a311c1bf8d4a0941bc8e14edfec9851db17c836b852e0feab285da04fc66f21d/68747470733a2f2f636f6465636f762e696f2f67682f546f6b617a616d612f526573697a696e672e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/Tokazama/Resizing.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Julia does not currently have a well developed interface for changing the size of collections. <code>Resizing</code> provides common methods for growing and shrinking collections. Although the relative position where a resizing method is executed may vary by method and collection type, a common pattern makes them straightforward to use and overload for new collections. For example, the following methods are responsible for growing a collection from the last index:</p>
<ul dir="auto">
<li><code>Resizing.unsafe_grow_end!(collection, n)</code>: assumes that all necessary conditions for growing <code>collection</code> by <code>n</code> elements from the last index are met without checking.</li>
<li><code>Resizing.grow_end!(collection, n)</code>: Calls <code>Resizing.unsafe_grow_end!(collection, n)</code> if it can determine that <code>collection</code> can safely grow by <code>n</code> elements from the last index, returning  <code>true</code> if successful.</li>
<li><code>Resizing.assert_grow_end!(collection, n)</code>: Calls <code>Resizing.grow_end!(collection, n)</code>. If <code>false</code> is returned it throws an error, otherwise returns <code>nothing</code>.</li>
</ul>
<p dir="auto">Note that <code>grow_end!</code> and <code>unsafe_grow_end!</code> must be defined for each new collection type, but <code>assert_grow_end!</code> can rely completely on the former two methods.</p>
<p dir="auto">This same pattern exists for shrinking or growing at the beginning, end, or a specified index.</p>
</article></div>