<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-abstractinstancesjl" class="anchor" aria-hidden="true" href="#abstractinstancesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>AbstractInstances.jl</h1>
<p><a href="https://travis-ci.org/dalum/AbstractInstances.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0c10889bc5a06686cecc8d4f8a58de612145235ffb8df3fdbedc4f96b0a4c34a/68747470733a2f2f7472617669732d63692e6f72672f64616c756d2f4162737472616374496e7374616e6365732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dalum/AbstractInstances.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/dalum/AbstractInstances.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7da77b20dd6dfa6ab53fa17365eed481b9a35edd11f6a6ce9c4b28e664455aeb/68747470733a2f2f636f6465636f762e696f2f67682f64616c756d2f4162737472616374496e7374616e6365732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/dalum/AbstractInstances.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>A package for making concrete instances of abstract types.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using AbstractInstances

julia&gt; AbstractInstances.oftype(Number) isa Number
true

julia&gt; AbstractInstances.oftype(Number) === AbstractInstances.oftype(Number)
false

julia&gt; AbstractInstances.singleton(Number) isa Number
true

julia&gt; AbstractInstances.singleton(Number) === AbstractInstances.singleton(Number)
true
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> AbstractInstances

julia<span class="pl-k">&gt;</span> AbstractInstances<span class="pl-k">.</span><span class="pl-c1">oftype</span>(Number) <span class="pl-k">isa</span> Number
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> AbstractInstances<span class="pl-k">.</span><span class="pl-c1">oftype</span>(Number) <span class="pl-k">===</span> AbstractInstances<span class="pl-k">.</span><span class="pl-c1">oftype</span>(Number)
<span class="pl-c1">false</span>

julia<span class="pl-k">&gt;</span> AbstractInstances<span class="pl-k">.</span><span class="pl-c1">singleton</span>(Number) <span class="pl-k">isa</span> Number
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> AbstractInstances<span class="pl-k">.</span><span class="pl-c1">singleton</span>(Number) <span class="pl-k">===</span> AbstractInstances<span class="pl-k">.</span><span class="pl-c1">singleton</span>(Number)
<span class="pl-c1">true</span></pre></div>
</article></div>