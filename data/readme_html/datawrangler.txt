<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-datawrangler" class="anchor" aria-hidden="true" href="#datawrangler"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DataWrangler</h1>
<p dir="auto">Data wrangling refers to a number of processes designed to clean and transform data into into analytics ready datasets.</p>
<p dir="auto">This package provides the following functionality to wrangle data:</p>
<ul dir="auto">
<li>Box-Cox and inverse Box-Cox transformation and estimation: <code>boxcox</code>, <code>iboxcox</code></li>
<li>Data imputation (loess inter/extra-polation, random local density): <code>impute</code>, <code>impute!</code></li>
<li>Data normalization (z-score, min-max, softmax, sigmoid): <code>normalize</code>, <code>normalize!</code></li>
<li>Finite lagged difference and partial difference and its inverse: <code>d</code>, <code>p</code></li>
<li>Outlier detection and removal: <code>outlie</code>, <code>outlie!</code></li>
</ul>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<h3 dir="auto"><a id="user-content-data-imputation" class="anchor" aria-hidden="true" href="#data-imputation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Data Imputation</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Plots
n = 1000
x = sort(rand(n))*2*pi;
y = Array{Union{Missing,Float64}}(undef,n);
y[:] = sin.(x).+randn(n)/10;
mid = vcat(100:150,300:350,600:650,950:1000);

y[mid] .= missing;
scatter(x,y; label=&quot;data&quot;)

ipy = impute(x,y; method = &quot;normal&quot;)
scatter!(x[mid],ipy[mid]; label = &quot;imputed 'normal'&quot;, color=:white)

ipy = impute(x,y)
scatter!(x[mid],ipy[mid]; label = &quot;imputed 'loess'&quot;, color=:black, markersize = 2)"><pre><span class="pl-k">using</span> Plots
n <span class="pl-k">=</span> <span class="pl-c1">1000</span>
x <span class="pl-k">=</span> <span class="pl-c1">sort</span>(<span class="pl-c1">rand</span>(n))<span class="pl-k">*</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">pi</span>;
y <span class="pl-k">=</span> <span class="pl-c1">Array</span><span class="pl-c1">{Union{Missing,Float64}}</span>(undef,n);
y[:] <span class="pl-k">=</span> <span class="pl-c1">sin</span>.(x)<span class="pl-k">.+</span><span class="pl-c1">randn</span>(n)<span class="pl-k">/</span><span class="pl-c1">10</span>;
mid <span class="pl-k">=</span> <span class="pl-c1">vcat</span>(<span class="pl-c1">100</span><span class="pl-k">:</span><span class="pl-c1">150</span>,<span class="pl-c1">300</span><span class="pl-k">:</span><span class="pl-c1">350</span>,<span class="pl-c1">600</span><span class="pl-k">:</span><span class="pl-c1">650</span>,<span class="pl-c1">950</span><span class="pl-k">:</span><span class="pl-c1">1000</span>);

y[mid] <span class="pl-k">.=</span> <span class="pl-c1">missing</span>;
<span class="pl-c1">scatter</span>(x,y; label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span>)

ipy <span class="pl-k">=</span> <span class="pl-c1">impute</span>(x,y; method <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>normal<span class="pl-pds">"</span></span>)
<span class="pl-c1">scatter!</span>(x[mid],ipy[mid]; label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>imputed 'normal'<span class="pl-pds">"</span></span>, color<span class="pl-k">=</span><span class="pl-c1">:white</span>)

ipy <span class="pl-k">=</span> <span class="pl-c1">impute</span>(x,y)
<span class="pl-c1">scatter!</span>(x[mid],ipy[mid]; label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>imputed 'loess'<span class="pl-pds">"</span></span>, color<span class="pl-k">=</span><span class="pl-c1">:black</span>, markersize <span class="pl-k">=</span> <span class="pl-c1">2</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./docs/src/images/impute.png"><img src="./docs/src/images/impute.png" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-time-series-outlier-detection" class="anchor" aria-hidden="true" href="#time-series-outlier-detection"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Time Series Outlier Detection</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Plots
n = 1000
x = sort(rand(n))*2*pi;
y = Array{Union{Missing,Float64}}(undef,n);
y[:] = sin.(x).+randn(n)/10
mid = vcat(100:150,300:350,600:650,950:1000);
y[mid] .= y[mid] .+ 2*(randn(length(mid)).+1)

outlist = outlie(x,y)
scatter(outlist, y[outlist]; color=&quot;blue&quot;, label=&quot;outliers&quot;,ms=6)
scatter!(y,color=&quot;lightblue&quot;, label=&quot;data&quot;)"><pre><span class="pl-k">using</span> Plots
n <span class="pl-k">=</span> <span class="pl-c1">1000</span>
x <span class="pl-k">=</span> <span class="pl-c1">sort</span>(<span class="pl-c1">rand</span>(n))<span class="pl-k">*</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">pi</span>;
y <span class="pl-k">=</span> <span class="pl-c1">Array</span><span class="pl-c1">{Union{Missing,Float64}}</span>(undef,n);
y[:] <span class="pl-k">=</span> <span class="pl-c1">sin</span>.(x)<span class="pl-k">.+</span><span class="pl-c1">randn</span>(n)<span class="pl-k">/</span><span class="pl-c1">10</span>
mid <span class="pl-k">=</span> <span class="pl-c1">vcat</span>(<span class="pl-c1">100</span><span class="pl-k">:</span><span class="pl-c1">150</span>,<span class="pl-c1">300</span><span class="pl-k">:</span><span class="pl-c1">350</span>,<span class="pl-c1">600</span><span class="pl-k">:</span><span class="pl-c1">650</span>,<span class="pl-c1">950</span><span class="pl-k">:</span><span class="pl-c1">1000</span>);
y[mid] <span class="pl-k">.=</span> y[mid] <span class="pl-k">.+</span> <span class="pl-c1">2</span><span class="pl-k">*</span>(<span class="pl-c1">randn</span>(<span class="pl-c1">length</span>(mid))<span class="pl-k">.+</span><span class="pl-c1">1</span>)

outlist <span class="pl-k">=</span> <span class="pl-c1">outlie</span>(x,y)
<span class="pl-c1">scatter</span>(outlist, y[outlist]; color<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>blue<span class="pl-pds">"</span></span>, label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>outliers<span class="pl-pds">"</span></span>,ms<span class="pl-k">=</span><span class="pl-c1">6</span>)
<span class="pl-c1">scatter!</span>(y,color<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>lightblue<span class="pl-pds">"</span></span>, label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./docs/src/images/outlie.png"><img src="./docs/src/images/outlie.png" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/viraltux/DataWrangler.jl/actions"><img src="https://github.com/viraltux/DataWrangler.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/viraltux/DataWrangler.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d7878eea5e236115a1fc7c45b74e868ee83757de502e79f22856e6453950a0db/68747470733a2f2f636f6465636f762e696f2f67682f766972616c7475782f446174615772616e676c65722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/viraltux/DataWrangler.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
</article></div>