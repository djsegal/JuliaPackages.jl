<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-readablesjl" class="anchor" aria-hidden="true" href="#readablesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Readables.jl</h1>
<h3><a id="user-content-make-extended-precision-numbers-readable" class="anchor" aria-hidden="true" href="#make-extended-precision-numbers-readable"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Make extended precision numbers readable.</h3>
<table>
<thead>
<tr>
<th align="left">Copyright © 2018 -2019 by Jeffrey Sarnoff.</th>
<th align="center">This work is made available under The MIT License.</th>
</tr>
</thead>
</table>
<hr>
<p><a href="https://travis-ci.org/JeffreySarnoff/Readables.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8ede02a72b6a5355143a4156e4bb9456b0d34abe1bd27fe5440b59c968c57b80/68747470733a2f2f7472617669732d63692e6f72672f4a6566667265795361726e6f66662f54696d657344617465732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JeffreySarnoff/TimesDates.jl.svg?branch=master" style="max-width:100%;"></a></p>
<hr>
<h2><a id="user-content-use" class="anchor" aria-hidden="true" href="#use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Use</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Readables

setprecision(BigFloat, 160)

macro twoways(val)
    :(println(string(&quot;\n\t&quot;, $val, &quot;\n\t&quot;, readablestring($val))))
end
"><pre><span class="pl-k">using</span> Readables

<span class="pl-c1">setprecision</span>(BigFloat, <span class="pl-c1">160</span>)

<span class="pl-k">macro</span> <span class="pl-en">twoways</span>(val)
    :(<span class="pl-c1">println</span>(<span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\n\t</span><span class="pl-pds">"</span></span>, <span class="pl-k">$</span>val, <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\n\t</span><span class="pl-pds">"</span></span>, <span class="pl-c1">readablestring</span>(<span class="pl-k">$</span>val))))
<span class="pl-k">end</span></pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="val = (pi/2)^9; @twoways(val)

	58.22089713563711
	58.22089_71356_3711

val = (BigFloat(pi)/2)^9; @twoways(val)

        58.220897135637132161151176564921201882554800340637
        58.22089,71356,37132,16115,11765,64921,20188,25548,00340,637

setprecision(BigFloat, 192)

val = (BigFloat(pi))^115; ival = trunc(BigInt, val); @twoways(ival)

	1486741142588149449007460570055579083524909316281177999404
	1,486,741,142,588,149,449,007,460,570,055,579,083,524,909,316,281,177,999,404

"><pre>val <span class="pl-k">=</span> (<span class="pl-c1">pi</span><span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">9</span>; <span class="pl-c1">@twoways</span>(val)

	<span class="pl-c1">58.22089713563711</span>
	<span class="pl-c1">58.22089</span>_71356_3711

val <span class="pl-k">=</span> (<span class="pl-c1">BigFloat</span>(<span class="pl-c1">pi</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">9</span>; <span class="pl-c1">@twoways</span>(val)

        <span class="pl-c1">58.220897135637132161151176564921201882554800340637</span>
        <span class="pl-c1">58.22089</span>,<span class="pl-c1">71356</span>,<span class="pl-c1">37132</span>,<span class="pl-c1">16115</span>,<span class="pl-c1">11765</span>,<span class="pl-c1">64921</span>,<span class="pl-c1">20188</span>,<span class="pl-c1">25548</span>,<span class="pl-c1">00340</span>,<span class="pl-c1">637</span>

<span class="pl-c1">setprecision</span>(BigFloat, <span class="pl-c1">192</span>)

val <span class="pl-k">=</span> (<span class="pl-c1">BigFloat</span>(<span class="pl-c1">pi</span>))<span class="pl-k">^</span><span class="pl-c1">115</span>; ival <span class="pl-k">=</span> <span class="pl-c1">trunc</span>(BigInt, val); <span class="pl-c1">@twoways</span>(ival)

	<span class="pl-c1">1486741142588149449007460570055579083524909316281177999404</span>
	<span class="pl-c1">1</span>,<span class="pl-c1">486</span>,<span class="pl-c1">741</span>,<span class="pl-c1">142</span>,<span class="pl-c1">588</span>,<span class="pl-c1">149</span>,<span class="pl-c1">449</span>,<span class="pl-c1">007</span>,<span class="pl-c1">460</span>,<span class="pl-c1">570</span>,<span class="pl-c1">055</span>,<span class="pl-c1">579</span>,<span class="pl-c1">083</span>,<span class="pl-c1">524</span>,<span class="pl-c1">909</span>,<span class="pl-c1">316</span>,<span class="pl-c1">281</span>,<span class="pl-c1">177</span>,<span class="pl-c1">999</span>,<span class="pl-c1">404</span>
</pre></div>
<h2><a id="user-content-customize" class="anchor" aria-hidden="true" href="#customize"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Customize</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="config = Readable()
config = setintgroup(config, 6)
config = setintsep(config, '⚬')

ival = trunc(BigInt, (BigFloat(pi))^64);

readable(config, ival)
&quot;65704006:445717084572:022626334540&quot;
"><pre>config <span class="pl-k">=</span> <span class="pl-c1">Readable</span>()
config <span class="pl-k">=</span> <span class="pl-c1">setintgroup</span>(config, <span class="pl-c1">6</span>)
config <span class="pl-k">=</span> <span class="pl-c1">setintsep</span>(config, <span class="pl-s"><span class="pl-pds">'</span>⚬<span class="pl-pds">'</span></span>)

ival <span class="pl-k">=</span> <span class="pl-c1">trunc</span>(BigInt, (<span class="pl-c1">BigFloat</span>(<span class="pl-c1">pi</span>))<span class="pl-k">^</span><span class="pl-c1">64</span>);

<span class="pl-c1">readable</span>(config, ival)
<span class="pl-s"><span class="pl-pds">"</span>65704006:445717084572:022626334540<span class="pl-pds">"</span></span></pre></div>
<h2><a id="user-content-configure" class="anchor" aria-hidden="true" href="#configure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Configure</h2>
<p>We assume a <code>Real</code> value has an integer componant and a fractional componant (either may be zero).</p>
<p><code>intgroup, fracgroup</code> is the number of digits used to form digit subsequences in the integer and fractional parts</p>
<p><code>intsep, fracsep</code> is the <code>Char</code> used to separate groups in the integer and fractional parts</p>
<h3><a id="user-content-exported-configurables" class="anchor" aria-hidden="true" href="#exported-configurables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>exported configurables</h3>
<ul>
<li>decpoint, setdecpoint</li>
<li>intsep, fracsep, setintsep, setfracsep</li>
<li>intgroup, fracgroup, setintgroup, setfracgroup</li>
</ul>
<hr>
</article></div>