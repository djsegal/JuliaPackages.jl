<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-minimaxadaptivecontrol" class="anchor" aria-hidden="true" href="#minimaxadaptivecontrol"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MinimaxAdaptiveControl</h1>
<p dir="auto"><a href="https://github.com/kjellqvist/MinimaxAdaptiveControl.jl/actions?query=workflow%3ACI"><img src="https://github.com/kjellqvist/MinimaxAdaptiveControl.jl/workflows/CI/badge.svg" alt="Unit Tests" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/kjellqvist/MinimaxAdaptiveControl.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/bdfa45ca53078d32f7d5caad0ce1fb1dca8cf9e9e25cd7ddc9153fdbe3ca8925/68747470733a2f2f636f6465636f762e696f2f67682f6b6a656c6c71766973742f4d696e696d61784164617074697665436f6e74726f6c2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d43304d31474c35424f51" alt="codecov" data-canonical-src="https://codecov.io/gh/kjellqvist/MinimaxAdaptiveControl.jl/branch/master/graph/badge.svg?token=C0M1GL5BOQ" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-julia-package-for-minimax-adaptive-control-of-a-finite-set-of-linear-systems" class="anchor" aria-hidden="true" href="#julia-package-for-minimax-adaptive-control-of-a-finite-set-of-linear-systems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Julia package for Minimax adaptive control of a finite set of linear systems</h2>
<p dir="auto">Synthesize controllers and lyapunov functions from <a href="https://arxiv.org/abs/2011.10814" rel="nofollow">https://arxiv.org/abs/2011.10814</a></p>
<h2 dir="auto"><a id="user-content-docs" class="anchor" aria-hidden="true" href="#docs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Docs</h2>
<p dir="auto"><a href="https://kjellqvist.github.io/MinimaxAdaptiveControl.jl/dev/" rel="nofollow">https://kjellqvist.github.io/MinimaxAdaptiveControl.jl/dev/</a></p>
<h2 dir="auto"><a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installing</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="] add https://github.com/kjellqvist/MinimaxAdaptiveControl.jl"><pre class="notranslate"><code>] add https://github.com/kjellqvist/MinimaxAdaptiveControl.jl
</code></pre></div>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">Create a controller object</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="  using LinearAlgebra
  using JuMP
  using Hypatia
  using MinimaxAdaptiveControl

  A = [3. -1;1 0]
  B1 = Matrix{Float64}(undef,2,1)
  B1[:,:] = [1. 0]
  B2 = Matrix{Float64}(undef, 2,1)
  B2[:,:] = [5 0]

  As = [A,A]
  Bs = [B1,B2]
  Q = I(2)*1.
  gamma = 22
  R = I(1)*1.

  mac = MAController(As, Bs, Q, R, gamma, [0.; 0])
"><pre class="notranslate"><code>  using LinearAlgebra
  using JuMP
  using Hypatia
  using MinimaxAdaptiveControl

  A = [3. -1;1 0]
  B1 = Matrix{Float64}(undef,2,1)
  B1[:,:] = [1. 0]
  B2 = Matrix{Float64}(undef, 2,1)
  B2[:,:] = [5 0]

  As = [A,A]
  Bs = [B1,B2]
  Q = I(2)*1.
  gamma = 22
  R = I(1)*1.

  mac = MAController(As, Bs, Q, R, gamma, [0.; 0])

</code></pre></div>
<p dir="auto">Synthesize a T-matrix which satisfies inequalities (19) &amp; (20)</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="  model = Model(Hypatia.Optimizer)
  unset_silent(model)
  Tval, stat = Tsyn(mac, model, 0.01)"><pre class="notranslate"><code>  model = Model(Hypatia.Optimizer)
  unset_silent(model)
  Tval, stat = Tsyn(mac, model, 0.01)
</code></pre></div>
<p dir="auto">Update the controller with new data</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="  x0 = [0.;0]
  u0 = [1.]
  x1 = A*x0 + B1*u0   # Next state
  update!(mac, x, u)  # Update the controller
  u1 = -K(mac)x1      # Next control signal"><pre class="notranslate"><code>  x0 = [0.;0]
  u0 = [1.]
  x1 = A*x0 + B1*u0   # Next state
  update!(mac, x, u)  # Update the controller
  u1 = -K(mac)x1      # Next control signal
</code></pre></div>
</article></div>