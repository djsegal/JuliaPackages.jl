<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-deprecated" class="anchor" aria-hidden="true" href="#deprecated"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DEPRECATED</h1>
<p dir="auto">This package is deprecated.</p>
<h1 dir="auto"><a id="user-content-openaigymapijl" class="anchor" aria-hidden="true" href="#openaigymapijl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>OpenAIGymAPI.jl</h1>
<p dir="auto"><em>Wrapper for the <a href="https://github.com/openai/gym-http-api">OpenAI Gym API</a>. For the official JuliaML OpenAIGym wrapper please see <a href="https://github.com/JuliaML/OpenAIGym.jl">OpenAIGym.jl</a>.</em></p>
<table>
<thead>
<tr>
<th align="center"><strong>Package Status</strong></th>
<th align="center"><strong>Package Evaluator</strong></th>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="http://www.repostatus.org/#wip" rel="nofollow"><img src="https://camo.githubusercontent.com/695935dc7a39fbee68b14bede34c6e31924729ca136f3864d9b61e3e09c49786/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f7769702e737667" alt="Project Status: WIP - Initial development is in progress, but there has not yet been a stable, usable release suitable for the public." data-canonical-src="http://www.repostatus.org/badges/latest/wip.svg" style="max-width: 100%;"></a> <a href="LICENSE.md"><img src="https://camo.githubusercontent.com/bbf49a2eb96e6f718803f2493bd7aa3baae61abb09b7f8fc185a94e08c504dc6/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c6174" alt="License" data-canonical-src="http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat" style="max-width: 100%;"></a></td>
<td align="center"><a href="http://pkg.julialang.org/?pkg=OpenAIGymAPI&amp;ver=0.5" rel="nofollow"><img src="https://camo.githubusercontent.com/261a807111fbd5ffb335e4e62ed15a916612e3ae29ea5e1bf354def531f9df6f/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f4f70656e414947796d4150495f302e352e737667" alt="OpenAIGymAPI" data-canonical-src="http://pkg.julialang.org/badges/OpenAIGymAPI_0.5.svg" style="max-width: 100%;"></a> <a href="http://pkg.julialang.org/?pkg=OpenAIGymAPI&amp;ver=0.6" rel="nofollow"><img src="https://camo.githubusercontent.com/71ecb3b5a8778ba6bee5d3cb882c94fc92a60e71d9a294c6f1fce3b49b546535/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f4f70656e414947796d4150495f302e362e737667" alt="OpenAIGymAPI" data-canonical-src="http://pkg.julialang.org/badges/OpenAIGymAPI_0.6.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://travis-ci.org/JuliaML/OpenAIGymAPI.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/820b36e2e189842ec92aea94ae33b5e55df49113a4d07969cd3aacf206931b86/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614d4c2f4f70656e414947796d4150492e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaML/OpenAIGymAPI.jl.svg?branch=master" style="max-width: 100%;"></a> <a href="https://ci.appveyor.com/project/JuliaML/openaigymapi-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/654a7ad1842a40c2137f842b8089bf99232d4021895e25701c433fa58267359e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6234746c7235706b72776b6e306864322f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/b4tlr5pkrwkn0hd2/branch/master?svg=true" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/JuliaML/OpenAIGymAPI.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2d9ff596c4d69215a312db7de3bf47535e30c8395b8d8ac17f360399bf8d360f/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614d4c2f4f70656e414947796d4150492e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaML/OpenAIGymAPI.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto"><a href="https://github.com/openai/gym">OpenAI Gym</a> is a open-source Python toolkit for developing and comparing reinforcement learning algorithms. This Julia package is a wrapper for the <a href="https://github.com/openai/gym-http-api">OpenAI Gym API</a>, and enables access to an ever-growing variety of environments.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">This package is registered in <code>METADATA.jl</code> and can be installed as usual</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;OpenAIGymAPI&quot;)
using OpenAIGymAPI"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>OpenAIGymAPI<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> OpenAIGymAPI</pre></div>
<p dir="auto">If you encounter a clear bug, please file a minimal reproducible example on <a href="https://github.com/JuliaML/OpenAIGymAPI.jl/issues">Github</a>.</p>
<h2 dir="auto"><a id="user-content-setting-up-the-server" class="anchor" aria-hidden="true" href="#setting-up-the-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Setting up the server</h2>
<p dir="auto">To download the code and install the requirements, you can run the following shell commands:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/openai/gym-http-api
cd gym-http-api
pip install -r requirements.txt"><pre>git clone https://github.com/openai/gym-http-api
<span class="pl-c1">cd</span> gym-http-api
pip install -r requirements.txt</pre></div>
<p dir="auto">This code is intended to be run locally by a single user. The server runs in python.</p>
<p dir="auto">To start the server from the command line, run this:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="python gym_http_server.py"><pre>python gym_http_server.py</pre></div>
<p dir="auto">For more details, please see here: <a href="https://github.com/openai/gym-http-api">https://github.com/openai/gym-http-api</a>.</p>
<h2 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using OpenAIGymAPI

remote_base = &quot;http://127.0.0.1:5000&quot;
client = GymClient(remote_base)
print(client)

# Create environment
env_id = &quot;CartPole-v0&quot;
instance_id = env_create(client, env_id)
print(instance_id)

# List all environments
all_envs = env_list_all(client)
print(all_envs)

# Set up agent
action_space_info = env_action_space_info(client, instance_id)
print(action_space_info)
agent = action_space_info[&quot;n&quot;] # perform same action every time

# Run experiment, with monitor
outdir = &quot;/tmp/random-agent-results&quot;
env_monitor_start(client, instance_id, outdir, force = true, resume = false)

episode_count = 100
max_steps = 200
for i in 1:episode_count
  ob = env_reset(client, instance_id)
  done = false
  j = 1
  while j &lt;= 200 &amp;&amp; !done
    action = env_action_space_sample(client, instance_id)
    results = env_step(client, instance_id, action, render = true)
    done = results[&quot;done&quot;]
    j = j + 1
  end
end

# Dump result info to disk
env_monitor_close(client, instance_id)"><pre><span class="pl-k">using</span> OpenAIGymAPI

remote_base <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>http://127.0.0.1:5000<span class="pl-pds">"</span></span>
client <span class="pl-k">=</span> <span class="pl-c1">GymClient</span>(remote_base)
<span class="pl-c1">print</span>(client)

<span class="pl-c"><span class="pl-c">#</span> Create environment</span>
env_id <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CartPole-v0<span class="pl-pds">"</span></span>
instance_id <span class="pl-k">=</span> <span class="pl-c1">env_create</span>(client, env_id)
<span class="pl-c1">print</span>(instance_id)

<span class="pl-c"><span class="pl-c">#</span> List all environments</span>
all_envs <span class="pl-k">=</span> <span class="pl-c1">env_list_all</span>(client)
<span class="pl-c1">print</span>(all_envs)

<span class="pl-c"><span class="pl-c">#</span> Set up agent</span>
action_space_info <span class="pl-k">=</span> <span class="pl-c1">env_action_space_info</span>(client, instance_id)
<span class="pl-c1">print</span>(action_space_info)
agent <span class="pl-k">=</span> action_space_info[<span class="pl-s"><span class="pl-pds">"</span>n<span class="pl-pds">"</span></span>] <span class="pl-c"><span class="pl-c">#</span> perform same action every time</span>

<span class="pl-c"><span class="pl-c">#</span> Run experiment, with monitor</span>
outdir <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>/tmp/random-agent-results<span class="pl-pds">"</span></span>
<span class="pl-c1">env_monitor_start</span>(client, instance_id, outdir, force <span class="pl-k">=</span> <span class="pl-c1">true</span>, resume <span class="pl-k">=</span> <span class="pl-c1">false</span>)

episode_count <span class="pl-k">=</span> <span class="pl-c1">100</span>
max_steps <span class="pl-k">=</span> <span class="pl-c1">200</span>
<span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>episode_count
  ob <span class="pl-k">=</span> <span class="pl-c1">env_reset</span>(client, instance_id)
  done <span class="pl-k">=</span> <span class="pl-c1">false</span>
  j <span class="pl-k">=</span> <span class="pl-c1">1</span>
  <span class="pl-k">while</span> j <span class="pl-k">&lt;=</span> <span class="pl-c1">200</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>done
    action <span class="pl-k">=</span> <span class="pl-c1">env_action_space_sample</span>(client, instance_id)
    results <span class="pl-k">=</span> <span class="pl-c1">env_step</span>(client, instance_id, action, render <span class="pl-k">=</span> <span class="pl-c1">true</span>)
    done <span class="pl-k">=</span> results[<span class="pl-s"><span class="pl-pds">"</span>done<span class="pl-pds">"</span></span>]
    j <span class="pl-k">=</span> j <span class="pl-k">+</span> <span class="pl-c1">1</span>
  <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Dump result info to disk</span>
<span class="pl-c1">env_monitor_close</span>(client, instance_id)</pre></div>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">This code is free to use under the terms of the MIT license.</p>
<h2 dir="auto"><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgements</h2>
<p dir="auto">The original author of <code>OpenAIGymAPI</code> is <a href="https://github.com/paulhendricks">@Paul Hendricks</a>. <a href="https://gratipay.com/~paulhendricks/" rel="nofollow"><img src="https://camo.githubusercontent.com/0b1126b71cb53a7f93d873dfe348f6152503b0d46ec37f2df5620843e0d74878/68747470733a2f2f696d672e736869656c64732e696f2f67726174697061792f4a53466964646c652e737667" alt="Gratipay" data-canonical-src="https://img.shields.io/gratipay/JSFiddle.svg" style="max-width: 100%;"></a></p>
</article></div>