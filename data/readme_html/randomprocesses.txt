<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-randomprocessesjl" class="anchor" aria-hidden="true" href="#randomprocessesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RandomProcesses.jl</h1>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto">RandomProcesses.jl is a package for simulling stochastics processes in Julia in a easy way.</p>
<p dir="auto">At the moment the package has 8 functions that simulling the following stochastic processes:</p>
<ul dir="auto">
<li>SARMA</li>
<li>Ramdom Walk</li>
<li>Weiner</li>
<li>Martingale</li>
<li>Galton Watson</li>
<li>Markov Chain</li>
<li>Poisson</li>
<li>Neural (simuling the results of neural network)</li>
</ul>
<h2 dir="auto"><a id="user-content-exemples" class="anchor" aria-hidden="true" href="#exemples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Exemples</h2>
<p dir="auto">Importing RandomProcesses and PyPlot</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using RandomProcesses, PyPlot, Distributions"><pre><span class="pl-k">using</span> RandomProcesses, PyPlot, Distributions</pre></div>
<h3 dir="auto"><a id="user-content-random-walk" class="anchor" aria-hidden="true" href="#random-walk"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Random Walk</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
for _ in 1:5
  plot(RandomWalk())
end
"><pre><span class="pl-k">for</span> _ <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>
  <span class="pl-c1">plot</span>(<span class="pl-c1">RandomWalk</span>())
<span class="pl-k">end</span>
</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/joaquimbermudes/RandomProcesses.jl/blob/main/Imgs/RW.png"><img src="https://github.com/joaquimbermudes/RandomProcesses.jl/raw/main/Imgs/RW.png" alt="RW.png" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-poisson-process" class="anchor" aria-hidden="true" href="#poisson-process"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Poisson Process</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
for _ in 1:5
  plot(PoissonProcess())
end
"><pre><span class="pl-k">for</span> _ <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>
  <span class="pl-c1">plot</span>(<span class="pl-c1">PoissonProcess</span>())
<span class="pl-k">end</span>
</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/joaquimbermudes/RandomProcesses.jl/blob/main/Imgs/Poisson.png"><img src="https://github.com/joaquimbermudes/RandomProcesses.jl/raw/main/Imgs/Poisson.png" alt="Poisson.png" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-neural-process" class="anchor" aria-hidden="true" href="#neural-process"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Neural Process</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
function f(x)
    return exp.(x)./(1 .+ exp.(x))
end

function g(x)
    return sum(x)
end

for _ in 1:5
    plot(NeuralProcess(Activate = [f, g], Len = 30))
end
"><pre><span class="pl-k">function</span> <span class="pl-en">f</span>(x)
    <span class="pl-k">return</span> <span class="pl-c1">exp</span>.(x)<span class="pl-k">./</span>(<span class="pl-c1">1</span> <span class="pl-k">.+</span> <span class="pl-c1">exp</span>.(x))
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">g</span>(x)
    <span class="pl-k">return</span> <span class="pl-c1">sum</span>(x)
<span class="pl-k">end</span>

<span class="pl-k">for</span> _ <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>
    <span class="pl-c1">plot</span>(<span class="pl-c1">NeuralProcess</span>(Activate <span class="pl-k">=</span> [f, g], Len <span class="pl-k">=</span> <span class="pl-c1">30</span>))
<span class="pl-k">end</span>
</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/joaquimbermudes/RandomProcesses.jl/blob/main/Imgs/Neural.png"><img src="https://github.com/joaquimbermudes/RandomProcesses.jl/raw/main/Imgs/Neural.png" alt="Neural.png" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-coments" class="anchor" aria-hidden="true" href="#coments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Coments</h2>
<ol dir="auto">
<li>Almost functions need the package "Distribution" for execute.</li>
<li>You has that declare a vector of functions in each leyaer for neural process execute.</li>
<li>This is my first package, please have pacience. Send criticisms and suggestions to <a href="mailto:joaquimacbermudes@gmail.com">joaquimacbermudes@gmail.com</a>. I would also like to know out of curiosity in which projects the patent is being used.</li>
</ol>
</article></div>