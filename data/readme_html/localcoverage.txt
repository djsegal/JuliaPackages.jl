<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-localcoveragejl" class="anchor" aria-hidden="true" href="#localcoveragejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LocalCoverage.jl</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667"><img src="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667" alt="lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-maturing-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/JuliaCI/LocalCoverage.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaCI/LocalCoverage.jl/workflows/CI/badge.svg" alt="build" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaCI/LocalCoverage.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/c7e51eca04f383dbc96c12eb001ebad2b86e176ab0a9c59c8003b2cb2e875b92/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c696143492f4c6f63616c436f7665726167652e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaCI/LocalCoverage.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>This is a collection of trivial functions to facilitate generating and exploring test coverage information for Julia packages <em>locally</em>, without using any remote/cloud services.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Pkg.add(&quot;LocalCoverage&quot;)
"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>LocalCoverage<span class="pl-pds">"</span></span>)</pre></div>
<p>or <code>]add LocalCoverage</code> from the Julia REPL.</p>
<h3><a id="user-content-optional-dependencies" class="anchor" aria-hidden="true" href="#optional-dependencies"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Optional Dependencies</h3>
<p>The package has several optional features which require additional dependencies.
<a href="https://github.com/linux-test-project/lcov"><code>lcov</code></a> is required for generating HTML
output.  You can install it via</p>
<ul>
<li>Debian/Ubuntu: <code>sudo apt install lcov</code></li>
<li>Arch/Manjaro: <code>yay -S lcov</code></li>
</ul>
<p>Note that the code in this package assumes a reasonably recent <code>lcov</code> version when calling <code>genhtml</code>, ideally <code>1.13</code>, but <code>1.12</code> should work too. This does not prevent installation, only emits a warning.</p>
<p><code>LocalCoverage</code> also provides an option to generate a
<a href="https://cobertura.github.io/cobertura/" rel="nofollow">Cobertura</a> XML, which is used by JVM-related test
suites such as Jenkins.  Using this requires the Python module
<a href="https://github.com/eriwen/lcov-to-cobertura-xml"><code>lcov_cobertura</code></a>.  With Python
installed, you can install this module via <code>pip install lcov_cobertura</code>.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>When generating test coverage, Julia places annotated <code>*.cov</code> source code files in the
same directory as the source code itself.  In addition, summary files will be placed in
the <code>coverage</code> subdirectory of the package directory.  We recommend using this package
with packages added with the <code>Pkg.dev</code> installation option (which allows for easy
manipulation of the package directory).</p>
<p>To generate test coverage files do</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using LocalCoverage
# pkg is the package name as a string, e.g. &quot;LocalCoverage&quot;
generate_coverage(pkg, genhtml=true, show_summary=true, genxml=false) # defaults shown
"><pre><span class="pl-k">using</span> LocalCoverage
<span class="pl-c"><span class="pl-c">#</span> pkg is the package name as a string, e.g. "LocalCoverage"</span>
<span class="pl-c1">generate_coverage</span>(pkg, genhtml<span class="pl-k">=</span><span class="pl-c1">true</span>, show_summary<span class="pl-k">=</span><span class="pl-c1">true</span>, genxml<span class="pl-k">=</span><span class="pl-c1">false</span>) <span class="pl-c"><span class="pl-c">#</span> defaults shown</span></pre></div>
<p>You can then navigate to the <code>coverage</code> subdirectory of the package directory (e.g.
<code>~/.julia/dev/PackageName/coverage</code>) and see the generated coverage summaries.</p>
<p>To open the coverage report HTML in a browser do</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="open_coverage(pkg)
"><pre><span class="pl-c1">open_coverage</span>(pkg)</pre></div>
<p>To delete all coverage files do</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="clean_coverage(pkg, rm_directory=true) # defaults shown
"><pre><span class="pl-c1">clean_coverage</span>(pkg, rm_directory<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> defaults shown</span></pre></div>
</article></div>