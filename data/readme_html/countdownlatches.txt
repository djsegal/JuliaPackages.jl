<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-countdownlatches" class="anchor" aria-hidden="true" href="#countdownlatches"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CountDownLatches</h1>
<p dir="auto"><a href="https://Octogonapus.github.io/CountDownLatches.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://Octogonapus.github.io/CountDownLatches.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/Octogonapus/CountDownLatches.jl/actions"><img src="https://github.com/Octogonapus/CountDownLatches.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/Octogonapus/CountDownLatches.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e0e189d9a856d71b0f76e53c70ffb963f3d14f865875e296cf642afd1dc7e0e2/68747470733a2f2f636f6465636f762e696f2f67682f4f63746f676f6e617075732f436f756e74446f776e4c6174636865732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d4d4a564c354556585450" alt="Coverage" data-canonical-src="https://codecov.io/gh/Octogonapus/CountDownLatches.jl/branch/main/graph/badge.svg?token=MJVL5EVXTP" style="max-width: 100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package implements a multithreading primitive called a <code>CountDownLatch</code> that holds an internal count.
The latch's count can be decremented by multiple threads.
Threads may also wait on the latch's count to become zero.</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">In this example, the main thread will be blocked by <code>await</code> until the spawned thread counts the latch down.
This is clearly a contrived example, but imagine that there is much more code before <code>count_down</code> and before <code>await</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="latch = CountDownLatch(1)

Threads.@spawn begin
    # Decrease the latch's count by one
    count_down(latch)
end

# Wait until the latch's count become zero
await(latch)"><pre>latch <span class="pl-k">=</span> <span class="pl-c1">CountDownLatch</span>(<span class="pl-c1">1</span>)

Threads<span class="pl-k">.</span><span class="pl-c1">@spawn</span> <span class="pl-k">begin</span>
    <span class="pl-c"><span class="pl-c">#</span> Decrease the latch's count by one</span>
    <span class="pl-c1">count_down</span>(latch)
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Wait until the latch's count become zero</span>
<span class="pl-c1">await</span>(latch)</pre></div>
</article></div>