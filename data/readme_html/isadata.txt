<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-isadata" class="anchor" aria-hidden="true" href="#isadata"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ISAData</h1>
<p>ISAData is a Julia package that can be used to calculate thermodynamic properties of the atmosphere (air density, pressure, temperature, and viscosity) using the <strong>I</strong>nternational <strong>S</strong>tandard <strong>A</strong>tmosphere (ISA) model.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>ISAData can be installed from Julia's REPL with the following command:</p>
<pre><code>]add ISAData
</code></pre>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>The package contains only one exported function called <code>ISAdata</code>. The function is called with the altitude as the input parameter, and it returns a tuple containing the values for density, pressure, temperature, and dynamic viscosity. For example:</p>
<pre><code>julia&gt; using ISAData

julia&gt; ρ, P, T, μ = ISAdata(10000)
(0.4136571526878796, 26510.092578167572, 223.25492665430897, 1.461852633009453e-5)
</code></pre>
<p>where all quantities are in SI units.</p>
<p><code>ISAdata</code> also supports the <code>Quantity</code> type provided by the <a href="https://github.com/PainterQubits/Unitful.jl">Unitful</a> package. For example:</p>
<pre><code>julia&gt; using Unitful

julia&gt; ρ, P, T, μ = ISAdata(10u"km")
(0.4136571526878796 kg m^-3, 26510.092578167572 Pa, 223.25492665430897 K, 1.461852633009453e-5 Pa s)
</code></pre>
<p>Here, output values are also of the type <code>Quantity</code>, and this provides the flexibility to convert quantities into different units:</p>
<pre><code>julia&gt; P |&gt; u"lbf/ft^2"
553.6747950560401 lbf ft^-2
</code></pre>
</article></div>