<div id="readme" class="md" data-path="readme.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-arrowsjl" class="anchor" aria-hidden="true" href="#arrowsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Arrows.jl</h1>
<p><a href="https://travis-ci.org/zenna/Arrows.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6c29c85df75ae7545f2a33d11d38ce22d5431c73/68747470733a2f2f7472617669732d63692e6f72672f7a656e6e612f4172726f77732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/zenna/Arrows.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/zenna/Arrows.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/1c8356af3f2d73df0082837a6b9f1e60763e7398/687474703a2f2f636f6465636f762e696f2f6769746875622f7a656e6e612f4172726f77732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/zenna/Arrows.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Arrows.jl is an experimental library for learning and inference in Julia. It is:</p>
<ul>
<li>Relational</li>
<li>Dependently typed</li>
</ul>
<p>To do this, we build upon the formalism of <a href="https://en.wikibooks.org/wiki/Haskell/Understanding_arrows" rel="nofollow">Arrows</a></p>
<h1><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h1>

<p><a href="https://zenna.github.io/Arrows.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Arrows is currently highly experimental; explore at your own risk.  Arrows is not yet in the official Julia Package repository.
You can still easily install it from a Julia repl with:</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/zenna/Arrows.jl.git<span class="pl-pds">"</span></span>)</pre></div>
<p>Arrows is then loaded with:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Arrows</pre></div>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick Start</h2>
<p>Arrows are a bit like functions, except we can wire their input and outputs in more interesting ways than simple function composition.</p>
<p>Let's work through it by example.</p>
<div class="highlight highlight-source-julia"><pre>arr <span class="pl-k">=</span> <span class="pl-c1">AddArrow</span>() <span class="pl-k">&gt;&gt;</span> <span class="pl-c1">SinArrow</span>()
<span class="pl-c1">arr</span>(<span class="pl-c1">1.0</span>, <span class="pl-c1">2.0</span>)</pre></div>
</article></div>