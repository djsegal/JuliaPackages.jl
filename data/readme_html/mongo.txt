<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mongojl" class="anchor" aria-hidden="true" href="#mongojl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Mongo.jl</h1>
<p dir="auto"><a href="https://travis-ci.org/ScottPJones/Mongo.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/282c87915975ff37cff505579ae029aa05a8022007bcbe623ae1659442d6f68d/68747470733a2f2f6170692e7472617669732d63692e6f72672f53636f7474504a6f6e65732f4d6f6e676f2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/ScottPJones/Mongo.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="http://pkg.julialang.org/?pkg=Mongo" rel="nofollow"><img src="https://camo.githubusercontent.com/c5bd88d4d654a3db0c907d3f6b3e34c893282c1dd6448b07563dc7895453f3a2/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f4d6f6e676f5f302e362e737667" alt="0.6 Status" data-canonical-src="http://pkg.julialang.org/badges/Mongo_0.6.svg" style="max-width: 100%;"></a>
<a href="https://coveralls.io/r/ScottPJones/Mongo.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/fdb79304995327db000700f1da19f7f672674ca1e5ac41b39169805200dc6bc2/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f53636f7474504a6f6e65732f4d6f6e676f2e6a6c2e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/coveralls/ScottPJones/Mongo.jl.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="http://www.mongodb.org" rel="nofollow">MongoDB</a> bindings for <a href="http://julialang.org/" rel="nofollow">The Julia Language</a></p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">This software is licensed under the simplified BSD license; see the file LICENSE for details.</p>
<h2 dir="auto"><a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installing</h2>
<p dir="auto">Building this package should build and/or install the MongoDB C driver for you.</p>
<h2 dir="auto"><a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Setup</h2>
<p dir="auto">You must have a MongoDB server running somewhere.  You can specify the host and port in the MongoClient constructor, otherwise it uses the Mongo default locahost:27017.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Mongo, LibBSON

# Create a client connection
client = MongoClient() # default locahost:27017

# Get a handle to collection named &quot;cats&quot; in database &quot;db&quot;.
# Client object, database name, and collection name are stored as variables.
cats = MongoCollection(client, &quot;db&quot;, &quot;cats&quot;)

# Insert a document
# Mokie is a pretty old cat
m_oid = insert(cats, Dict(&quot;name&quot; =&gt; &quot;Mokie&quot;, &quot;age&quot; =&gt; 17))"><pre><span class="pl-k">using</span> Mongo, LibBSON

<span class="pl-c"><span class="pl-c">#</span> Create a client connection</span>
client <span class="pl-k">=</span> <span class="pl-c1">MongoClient</span>() <span class="pl-c"><span class="pl-c">#</span> default locahost:27017</span>

<span class="pl-c"><span class="pl-c">#</span> Get a handle to collection named "cats" in database "db".</span>
<span class="pl-c"><span class="pl-c">#</span> Client object, database name, and collection name are stored as variables.</span>
cats <span class="pl-k">=</span> <span class="pl-c1">MongoCollection</span>(client, <span class="pl-s"><span class="pl-pds">"</span>db<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>cats<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Insert a document</span>
<span class="pl-c"><span class="pl-c">#</span> Mokie is a pretty old cat</span>
m_oid <span class="pl-k">=</span> <span class="pl-c1">insert</span>(cats, <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Mokie<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>age<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">17</span>))</pre></div>
<h2 dir="auto"><a id="user-content-dictionary-syntax" class="anchor" aria-hidden="true" href="#dictionary-syntax"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Dictionary Syntax</h2>
<p dir="auto">With MongoDB, documents and queries are represented as <code>BSONObject</code> structures.
In Julia, we can create these from <code>Associative</code> data structures like <code>Dict</code>.
However, most functions in this package also accept a <code>Union{Pair,Tuple}</code> in
lieu of that, allowing us to omit the <code>Dict</code> constructor:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Pebbles is an even older cat
p_oid = insert(cats, (&quot;name&quot; =&gt; &quot;Pebbles&quot;, &quot;age&quot; =&gt; 19))

# Ensure they were inserted by counting
println(count(cats, (&quot;name&quot; =&gt; &quot;Mokie&quot;))) # 1
println(count(cats)) # 2"><pre><span class="pl-c"><span class="pl-c">#</span> Pebbles is an even older cat</span>
p_oid <span class="pl-k">=</span> <span class="pl-c1">insert</span>(cats, (<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Pebbles<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>age<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">19</span>))

<span class="pl-c"><span class="pl-c">#</span> Ensure they were inserted by counting</span>
<span class="pl-c1">println</span>(<span class="pl-c1">count</span>(cats, (<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Mokie<span class="pl-pds">"</span></span>))) <span class="pl-c"><span class="pl-c">#</span> 1</span>
<span class="pl-c1">println</span>(<span class="pl-c1">count</span>(cats)) <span class="pl-c"><span class="pl-c">#</span> 2</span></pre></div>
<h2 dir="auto"><a id="user-content-query-syntax" class="anchor" aria-hidden="true" href="#query-syntax"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Query Syntax</h2>
<p dir="auto">MongoDB queries are also BSON documents, and can include certain
<a href="https://docs.mongodb.org/manual/reference/operator/query-modifier/" rel="nofollow">modifiers</a>
and <a href="https://docs.mongodb.org/manual/reference/operator/query/" rel="nofollow">operators</a> which
allow for the construction of complex queries. This package includes shortcut
functions for many of them so, for instance instead of typing:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Dict(&quot;\$query&quot; =&gt; Dict(&quot;age&quot; =&gt; Dict(&quot;\$lt&quot; =&gt; 19)))"><pre><span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\$</span>query<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>age<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\$</span>lt<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">19</span>)))</pre></div>
<p dir="auto">We can do the following:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Print all cats under age 19
for doc in find(cats, query(&quot;age&quot; =&gt; lt(19)))
    println(&quot;$(doc[&quot;name&quot;]) is younger than 19&quot;)
end"><pre><span class="pl-c"><span class="pl-c">#</span> Print all cats under age 19</span>
<span class="pl-k">for</span> doc <span class="pl-k">in</span> <span class="pl-c1">find</span>(cats, <span class="pl-c1">query</span>(<span class="pl-s"><span class="pl-pds">"</span>age<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">lt</span>(<span class="pl-c1">19</span>)))
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(doc[<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span>])</span> is younger than 19<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
<p dir="auto">Operators and modifiers can be combined by encasing them in parenthesis.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# It's Mokie's birthday!
# We can use the shortcut for the &quot;$inc&quot; operator to increase Mokie's age by 1
update(cats, (&quot;_id&quot; =&gt; m_oid), inc(&quot;age&quot; =&gt; 1))

for doc in find(cats, (query(), orderby(&quot;age&quot; =&gt; 1)))
    println(&quot;$(doc[&quot;name&quot;]) is $(doc[&quot;age&quot;]) years old.&quot;)
end

# Delete the document and ensure it is no more by counting
delete(cats, (&quot;_id&quot; =&gt; m_oid))
println(count(cats, (&quot;name&quot; =&gt; &quot;Mokie&quot;)))"><pre><span class="pl-c"><span class="pl-c">#</span> It's Mokie's birthday!</span>
<span class="pl-c"><span class="pl-c">#</span> We can use the shortcut for the "$inc" operator to increase Mokie's age by 1</span>
<span class="pl-c1">update</span>(cats, (<span class="pl-s"><span class="pl-pds">"</span>_id<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> m_oid), <span class="pl-c1">inc</span>(<span class="pl-s"><span class="pl-pds">"</span>age<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>))

<span class="pl-k">for</span> doc <span class="pl-k">in</span> <span class="pl-c1">find</span>(cats, (<span class="pl-c1">query</span>(), <span class="pl-c1">orderby</span>(<span class="pl-s"><span class="pl-pds">"</span>age<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>)))
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(doc[<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span>])</span> is <span class="pl-v">$(doc[<span class="pl-s"><span class="pl-pds">"</span>age<span class="pl-pds">"</span></span>])</span> years old.<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Delete the document and ensure it is no more by counting</span>
<span class="pl-c1">delete</span>(cats, (<span class="pl-s"><span class="pl-pds">"</span>_id<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> m_oid))
<span class="pl-c1">println</span>(<span class="pl-c1">count</span>(cats, (<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Mokie<span class="pl-pds">"</span></span>)))</pre></div>
<h2 dir="auto"><a id="user-content-command-syntax" class="anchor" aria-hidden="true" href="#command-syntax"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Command Syntax</h2>
<p dir="auto">The <code>command_simple</code> function allows broad access to MongoDB actions. For example, creating an index:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="command_simple(client,
               &quot;db&quot;,
               Dict(
                  &quot;createIndexes&quot; =&gt; &quot;cats&quot;,
                  &quot;indexes&quot; =&gt; [
                      Dict(
                          &quot;key&quot; =&gt; Dict(&quot;name&quot; =&gt; 1),
                          &quot;name&quot; =&gt; &quot;cats_name&quot;,
                          &quot;unique&quot; =&gt; 1)
                      ]
                  ))"><pre><span class="pl-c1">command_simple</span>(client,
               <span class="pl-s"><span class="pl-pds">"</span>db<span class="pl-pds">"</span></span>,
               <span class="pl-c1">Dict</span>(
                  <span class="pl-s"><span class="pl-pds">"</span>createIndexes<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>cats<span class="pl-pds">"</span></span>,
                  <span class="pl-s"><span class="pl-pds">"</span>indexes<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> [
                      <span class="pl-c1">Dict</span>(
                          <span class="pl-s"><span class="pl-pds">"</span>key<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>),
                          <span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>cats_name<span class="pl-pds">"</span></span>,
                          <span class="pl-s"><span class="pl-pds">"</span>unique<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>)
                      ]
                  ))</pre></div>
<p dir="auto"><code>command_simple</code> returns a <code>BSONObject</code> reply, so you can also perform aggregations:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="command_simple(client,
               &quot;db&quot;,
               OrderedDict(
                  &quot;aggregate&quot; =&gt; &quot;cats&quot;,
                  &quot;pipeline&quot; =&gt; [
                      Dict(&quot;\$match&quot; =&gt; Dict(&quot;age&quot; =&gt; 19)),
                      Dict(&quot;\$group&quot; =&gt; Dict(&quot;_id&quot; =&gt; &quot;\$name&quot;, &quot;count&quot; =&gt; Dict(&quot;\$sum&quot; =&gt; 1)))
                  ]
                )
              )"><pre><span class="pl-c1">command_simple</span>(client,
               <span class="pl-s"><span class="pl-pds">"</span>db<span class="pl-pds">"</span></span>,
               <span class="pl-c1">OrderedDict</span>(
                  <span class="pl-s"><span class="pl-pds">"</span>aggregate<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>cats<span class="pl-pds">"</span></span>,
                  <span class="pl-s"><span class="pl-pds">"</span>pipeline<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> [
                      <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\$</span>match<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>age<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">19</span>)),
                      <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\$</span>group<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>_id<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\$</span>name<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>count<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\$</span>sum<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>)))
                  ]
                )
              )</pre></div>
<p dir="auto">Refer to the <a href="https://docs.mongodb.org/manual/reference/command/" rel="nofollow">MongoDB database commands docs</a> for further commands.</p>
<h2 dir="auto"><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing</h2>
<p dir="auto">Contributions are welcome!  Please fork on github.com and submit a pull request if you have a contribution you think is worthwhile!</p>
</article></div>