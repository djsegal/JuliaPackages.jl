<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-condajl" class="anchor" aria-hidden="true" href="#condajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Conda.jl</h1>
<p dir="auto"><a href="https://github.com/JuliaPy/Conda.jl/actions/workflows/CI.yml"><img src="https://github.com/JuliaPy/Conda.jl/actions/workflows/CI.yml/badge.svg" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto">This package allows one to use <a href="http://conda.pydata.org/" rel="nofollow">conda</a> as a cross-platform binary provider for Julia for other Julia packages,
especially to install binaries that have complicated dependencies like Python.</p>
<p dir="auto"><code>conda</code> is a package manager which started as the binary package manager for the
Anaconda Python distribution, but it also provides arbitrary packages. Instead
of the full Anaconda distribution, <code>Conda.jl</code> uses the miniconda Python
environment, which only includes <code>conda</code> and its dependencies.</p>
<h2 dir="auto"><a id="user-content-basic-functionality" class="anchor" aria-hidden="true" href="#basic-functionality"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic functionality</h2>
<p dir="auto">At the <code>julia&gt;</code> prompt,
type a <code>]</code> (close square bracket) to get a <a href="https://docs.julialang.org/en/v1/stdlib/Pkg/" rel="nofollow">Julia package prompt <code>pkg&gt;</code></a>,
where you can type <code>add Conda</code> to install this package.</p>
<p dir="auto">Once Conda is installed, you can run <code>import Conda</code> to load the package and run a variety of package-management functions:</p>
<ul dir="auto">
<li><code>Conda.add(package, env; channel="")</code>: install a package from a specified channel (optional);</li>
<li><code>Conda.rm(package, env)</code>: remove (uninstall) a package;</li>
<li><code>Conda.update(env)</code>: update all installed packages to the latest version;</li>
<li><code>Conda.list(env)</code>: list all installed packages.</li>
<li><code>Conda.add_channel(channel, env)</code>: add a channel to the list of channels;</li>
<li><code>Conda.channels(env)</code>: get the current list of channels;</li>
<li><code>Conda.rm_channel(channel, env)</code>: remove a channel from the list of channels;</li>
<li><strong>experimental:</strong> read the section <strong>Conda and pip</strong> below before using the following
<ul dir="auto">
<li><code>Conda.pip_interop(bool, env)</code>: config environment to interact with <code>pip</code></li>
<li><code>Conda.pip(command, package, env)</code>: run <code>pip</code> command on packages in environment</li>
</ul>
</li>
</ul>
<p dir="auto">The parameter <code>env</code> is optional and defaults to <code>ROOTENV</code>. See below for more info.</p>
<h3 dir="auto"><a id="user-content-conda-environments" class="anchor" aria-hidden="true" href="#conda-environments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Conda environments</h3>
<p dir="auto"><a href="http://conda.pydata.org/docs/using/envs.html" rel="nofollow">Conda environments</a> allow you to
manage multiple distinct sets of packages in a way that avoids conflicts and
allows you to install different versions of packages simultaneously.</p>
<p dir="auto">The <code>Conda.jl</code> package supports environments by allowing you to pass an optional
<code>env</code> parameter to functions for package installation, update, and so on. If
this parameter is not specified, then the default "root" environment
(corresponding to the path in <code>Conda.ROOTENV</code>) is used. The environment name can
be specified as a <code>Symbol</code>, or the full path of the environment
(if you want to use an environment in a nonstandard directory) can
be passed as a string.</p>
<p dir="auto">For example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Conda
Conda.add(&quot;libnetcdf&quot;, :my_env)
Conda.add(&quot;libnetcdf&quot;, &quot;/path/to/directory&quot;)
Conda.add(&quot;libnetcdf&quot;, &quot;/path/to/directory&quot;; channel=&quot;anaconda&quot;)"><pre><span class="pl-k">using</span> Conda
Conda<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>libnetcdf<span class="pl-pds">"</span></span>, <span class="pl-c1">:my_env</span>)
Conda<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>libnetcdf<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>/path/to/directory<span class="pl-pds">"</span></span>)
Conda<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>libnetcdf<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>/path/to/directory<span class="pl-pds">"</span></span>; channel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>anaconda<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">(NOTE: If you are installing Python packages for use with
<a href="https://github.com/JuliaPy/PyCall.jl">PyCall</a>, you must use the root
environment.)</p>
<h2 dir="auto"><a id="user-content-bindeps-integration-using-condajl-as-a-package-author" class="anchor" aria-hidden="true" href="#bindeps-integration-using-condajl-as-a-package-author"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>BinDeps integration: using Conda.jl as a package author</h2>
<p dir="auto">Conda.jl can be used as a <code>Provider</code> for
<a href="https://github.com/JuliaLang/BinDeps.jl">BinDeps</a> with the
<a href="https://github.com/JuliaPackaging/CondaBinDeps.jl">CondaBinDeps</a>
package.</p>
<h2 dir="auto"><a id="user-content-using-a-pre-existing-conda-installation" class="anchor" aria-hidden="true" href="#using-a-pre-existing-conda-installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using a pre-existing Conda installation</h2>
<p dir="auto">To use a pre-existing Conda installation, first create an environment for
<code>Conda.jl</code> and then set the <code>CONDA_JL_HOME</code> environment variable to the full
path of the environment.
(You have to rebuild <code>Conda.jl</code> and many of the packages that use it after this.)
In Julia, run:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; run(`conda create -n conda_jl python conda`)

julia&gt; ENV[&quot;CONDA_JL_HOME&quot;] = &quot;/path/to/miniconda/envs/conda_jl&quot;  # change this to your path

pkg&gt; build Conda"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">run</span>(<span class="pl-s"><span class="pl-pds">`</span>conda create -n conda_jl python conda<span class="pl-pds">`</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>CONDA_JL_HOME<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>/path/to/miniconda/envs/conda_jl<span class="pl-pds">"</span></span>  <span class="pl-c"><span class="pl-c">#</span> change this to your path</span>

pkg<span class="pl-k">&gt;</span> build Conda</pre></div>
<h2 dir="auto"><a id="user-content-using-a-conda-executable-outside-of-the-home-environment" class="anchor" aria-hidden="true" href="#using-a-conda-executable-outside-of-the-home-environment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using a conda executable outside of the home environment</h2>
<p dir="auto">To use a specific conda executable, set the <code>CONDA_JL_CONDA_EXE</code> environment
variable to the location of the conda executable. This conda executable can
exist outside of the environment set by <code>CONDA_JL_HOME</code>. To apply the settting,
rebuild <code>Conda.jl</code>. In Julia, run:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ENV[&quot;CONDA_JL_CONDA_EXE&quot;] = &quot;/path/to/miniconda/bin/conda&quot; # change this to the path of the conda executable

pkg&gt; build Conda"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>CONDA_JL_CONDA_EXE<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>/path/to/miniconda/bin/conda<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> change this to the path of the conda executable</span>

pkg<span class="pl-k">&gt;</span> build Conda</pre></div>
<p dir="auto"><em>The use of <code>CONDA_JL_CONDA_EXE</code> requires at least version 1.7 of Conda.jl.</em></p>
<h2 dir="auto"><a id="user-content-conda-and-pip" class="anchor" aria-hidden="true" href="#conda-and-pip"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Conda and pip</h2>
<p dir="auto">As of <a href="https://docs.conda.io/projects/conda/en/latest/user-guide/configuration/pip-interoperability.html#improving-interoperability-with-pip" rel="nofollow">conda 4.6.0</a> there is improved support for PyPi packages.
<strong>Conda is still the recommended installation method</strong> however if there are packages that are only availible with <code>pip</code> one can do the following:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Conda.pip_interop(true, env)

julia&gt; Conda.pip(&quot;install&quot;, &quot;somepackage&quot;)

julia&gt; Conda.pip(&quot;install&quot;, [&quot;somepackage1&quot;, &quot;somepackage2&quot;])

julia&gt; Conda.pip(&quot;uninstall&quot;, &quot;somepackage&quot;)

julia&gt; Conda.pip(&quot;uninstall&quot;, [&quot;somepackage1&quot;, &quot;somepackage2])"><pre>julia<span class="pl-k">&gt;</span> Conda<span class="pl-k">.</span><span class="pl-c1">pip_interop</span>(<span class="pl-c1">true</span>, env)

julia<span class="pl-k">&gt;</span> Conda<span class="pl-k">.</span><span class="pl-c1">pip</span>(<span class="pl-s"><span class="pl-pds">"</span>install<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>somepackage<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> Conda<span class="pl-k">.</span><span class="pl-c1">pip</span>(<span class="pl-s"><span class="pl-pds">"</span>install<span class="pl-pds">"</span></span>, [<span class="pl-s"><span class="pl-pds">"</span>somepackage1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>somepackage2<span class="pl-pds">"</span></span>])

julia<span class="pl-k">&gt;</span> Conda<span class="pl-k">.</span><span class="pl-c1">pip</span>(<span class="pl-s"><span class="pl-pds">"</span>uninstall<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>somepackage<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> Conda<span class="pl-k">.</span><span class="pl-c1">pip</span>(<span class="pl-s"><span class="pl-pds">"</span>uninstall<span class="pl-pds">"</span></span>, [<span class="pl-s"><span class="pl-pds">"</span>somepackage1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>somepackage2])</span></pre></div>
<p dir="auto">If the uninstall command is to be used noninteractively, one can use <code>"uninstall -y"</code> to answer yes to the prompts.</p>
<h2 dir="auto"><a id="user-content-using-python-2" class="anchor" aria-hidden="true" href="#using-python-2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using Python 2</h2>
<p dir="auto">By default, the Conda.jl package installs Python 3,
and this version of Python is used for all Python dependencies.  If you want to
use Python 2 instead, set <code>CONDA_JL_VERSION</code> to <code>"2"</code> <em>prior to installing Conda</em>.
(This only needs to be done once; Conda subsequently remembers the version setting.)</p>
<p dir="auto">Once you have installed Conda and run its Miniconda installer, the Python version
cannot be changed without deleting your existing Miniconda installation.
If you set <code>ENV["CONDA_JL_VERSION"]="2"</code> and run <code>Pkg.build("Conda")</code>, it will
tell you how to delete your existing Miniconda installation if needed.</p>
<p dir="auto">Most users will not need to use Python 2. This is provided primarily for developers wishing to test their packages for both Python 2 and Python, e.g. by setting the <code>CONDA_JL_VERSION</code>
variable on <a href="https://docs.travis-ci.com/user/environment-variables/" rel="nofollow">TravisCI</a> and/or <a href="https://www.appveyor.com/docs/build-configuration/#environment-variables" rel="nofollow">AppVeyor</a>.</p>
<h2 dir="auto"><a id="user-content-using-miniforge" class="anchor" aria-hidden="true" href="#using-miniforge"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using Miniforge</h2>
<p dir="auto">Miniforge is a community based conda installer by <code>conda-forge</code>, a part of NumFOCUS.
Using miniforge and conda-forge in general avoids using <code>repo.anaconda.com</code>
maintained by Anaconda, Inc which has terms of conditions that you may want to avoid.
<code>conda-forge</code> packages are hosted on <code>anaconda.org</code>, but Anaconda, Inc has been
providing hosting for free under the terms of <code>conda-forge</code> which is <code>BSD-3-Clause</code>
on top of the original license of the software packages. To use miniforge, use
the <code>CONDA_JL_USE_MINIFORGE</code> environment variable.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ENV[&quot;CONDA_JL_USE_MINIFORGE&quot;] = &quot;1&quot;

pkg&gt; build Conda"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>CONDA_JL_USE_MINIFORGE<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span>

pkg<span class="pl-k">&gt;</span> build Conda</pre></div>
<p dir="auto">Note that Conda.jl 1.6 and above will use miniforge by default on x86_64, aarch64
and ppc64le systems.</p>
<h2 dir="auto"><a id="user-content-bugs-and-suggestions" class="anchor" aria-hidden="true" href="#bugs-and-suggestions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bugs and suggestions</h2>
<p dir="auto">Conda has been tested on Linux, OS X, and Windows.</p>
<p dir="auto">Please report any bug or suggestion as an
<a href="https://github.com/JuliaPy/Conda.jl/issues">github issue</a></p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">The Conda.jl package is licensed under the MIT Expat license, and is copyrighted
by Guillaume Fraux and contributors.</p>
</article></div>