<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-condajl" class="anchor" aria-hidden="true" href="#condajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Conda.jl</h1>
<p><a href="https://travis-ci.org/JuliaPy/Conda.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/59d6e1139043430bf50f4a467c64f979120007bb/68747470733a2f2f7472617669732d63692e6f72672f4a756c696150792f436f6e64612e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status -- OS X and Linux" data-canonical-src="https://travis-ci.org/JuliaPy/Conda.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/StevenGJohnson/conda-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d5a985e112cf20311b7d198d810258e3b5634555/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f65646c786f68736f30357265337634302f6272616e63682f6d61737465723f7376673d74727565" alt="Build status -- Windows" data-canonical-src="https://ci.appveyor.com/api/projects/status/edlxohso05re3v40/branch/master?svg=true" style="max-width:100%;"></a></p>
<p>This package allows one to use <a href="http://conda.pydata.org/" rel="nofollow">conda</a> as a cross-platform binary provider for Julia for other Julia packages,
especially to install binaries that have complicated dependencies
like Python.</p>
<p><code>conda</code> is a package manager which started as the binary package manager for the
Anaconda Python distribution, but it also provides arbitrary packages. Instead
of the full Anaconda distribution, <code>Conda.jl</code> uses the miniconda Python
environment, which only includes <code>conda</code> and its dependencies.</p>
<h2><a id="user-content-basic-functionality" class="anchor" aria-hidden="true" href="#basic-functionality"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Basic functionality</h2>
<p>At the <code>julia&gt;</code> prompt,
type a <code>]</code> (close square bracket) to get a <a href="https://docs.julialang.org/en/v1/stdlib/Pkg/" rel="nofollow">Julia package prompt <code>pkg&gt;</code></a>,
where you can type <code>add Conda</code> to install this package.</p>
<p>Once Conda is installed, you can run <code>import Conda</code> to load the package and run a variety of package-management functions:</p>
<ul>
<li><code>Conda.add(package, env; channel="")</code>: install a package from a specified channel (optional);</li>
<li><code>Conda.rm(package, env)</code>: remove (uninstall) a package;</li>
<li><code>Conda.update(env)</code>: update all installed packages to the latest version;</li>
<li><code>Conda.list(env)</code>: list all installed packages.</li>
<li><code>Conda.add_channel(channel, env)</code>: add a channel to the list of channels;</li>
<li><code>Conda.channels(env)</code>: get the current list of channels;</li>
<li><code>Conda.rm_channel(channel, env)</code>: remove a channel from the list of channels;</li>
</ul>
<p>The parameter <code>env</code> is optional and defaults to <code>ROOTENV</code>. See below for more info.</p>
<h3><a id="user-content-conda-environments" class="anchor" aria-hidden="true" href="#conda-environments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Conda environments</h3>
<p><a href="http://conda.pydata.org/docs/using/envs.html" rel="nofollow">Conda environments</a> allow you to
manage multiple distinct sets of packages in a way that avoids conflicts and
allows you to install different versions of packages simultaneously.</p>
<p>The <code>Conda.jl</code> package supports environments by allowing you to pass an optional
<code>env</code> parameter to functions for package installation, update, and so on. If
this parameter is not specified, then the default "root" environment
(corresponding to the path in <code>Conda.ROOTENV</code>) is used. The environment name can
be specified as a <code>Symbol</code>, or the full path of the environment
(if you want to use an environment in a nonstandard directory) can
be passed as a string.</p>
<p>For example:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Conda
Conda<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>libnetcdf<span class="pl-pds">"</span></span>, <span class="pl-c1">:my_env</span>)
Conda<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>libnetcdf<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>/path/to/directory<span class="pl-pds">"</span></span>)
Conda<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>libnetcdf<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>/path/to/directory<span class="pl-pds">"</span></span>; channel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>anaconda<span class="pl-pds">"</span></span>)</pre></div>
<p>(NOTE: If you are installing Python packages for use with
<a href="https://github.com/JuliaPy/PyCall.jl">PyCall</a>, you must use the root
environment.)</p>
<h2><a id="user-content-bindeps-integration-using-condajl-as-a-package-author" class="anchor" aria-hidden="true" href="#bindeps-integration-using-condajl-as-a-package-author"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>BinDeps integration: using Conda.jl as a package author</h2>
<p>Conda.jl can be used as a <code>Provider</code> for
<a href="https://github.com/JuliaLang/BinDeps.jl">BinDeps</a> with the
<a href="https://github.com/JuliaPackaging/CondaBinDeps.jl">CondaBinDeps</a>
package.</p>
<h2><a id="user-content-using-a-pre-existing-conda-installation" class="anchor" aria-hidden="true" href="#using-a-pre-existing-conda-installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using a pre-existing Conda installation</h2>
<p>To use a pre-existing Conda installation, first create an environment for
<code>Conda.jl</code> and then set the <code>CONDA_JL_HOME</code> environment variable to the full
path of the environment.
(You have to rebuild <code>Conda.jl</code> and many of the packages that use it after this.)
In Julia, run:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">run</span>(<span class="pl-s"><span class="pl-pds">`</span>conda create -n conda_jl python conda<span class="pl-pds">`</span></span>)

julia<span class="pl-k">&gt;</span> ENV[<span class="pl-s"><span class="pl-pds">"</span>CONDA_JL_HOME<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>/path/to/miniconda/envs/conda_jl<span class="pl-pds">"</span></span>  <span class="pl-c"><span class="pl-c">#</span> change this to your path</span>

pkg<span class="pl-k">&gt;</span> build Conda</pre></div>
<h2><a id="user-content-using-python-2" class="anchor" aria-hidden="true" href="#using-python-2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using Python 2</h2>
<p>By default, the Conda.jl package installs Python 3,
and this version of Python is used for all Python dependencies.  If you want to
use Python 2 instead, set <code>CONDA_JL_VERSION</code> to <code>"2"</code> <em>prior to installing Conda</em>.
(This only needs to be done once; Conda subsequently remembers the version setting.)</p>
<p>Once you have installed Conda and run its Miniconda installer, the Python version
cannot be changed without deleting your existing Miniconda installation.
If you set <code>ENV["CONDA_JL_VERSION"]="2"</code> and run <code>Pkg.build("Conda")</code>, it will
tell you how to delete your existing Miniconda installation if needed.</p>
<p>Most users will not need to use Python 2. This is provided primarily for developers wishing to test their packages for both Python 2 and Python, e.g. by setting the <code>CONDA_JL_VERSION</code>
variable on <a href="https://docs.travis-ci.com/user/environment-variables/" rel="nofollow">TravisCI</a> and/or <a href="https://www.appveyor.com/docs/build-configuration/#environment-variables" rel="nofollow">AppVeyor</a>.</p>
<h2><a id="user-content-bugs-and-suggestions" class="anchor" aria-hidden="true" href="#bugs-and-suggestions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Bugs and suggestions</h2>
<p>Conda has been tested on Linux, OS X, and Windows.</p>
<p>Please report any bug or suggestion as an
<a href="https://github.com/JuliaPy/Conda.jl/issues">github issue</a></p>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>License</h2>
<p>The Conda.jl package is licensed under the MIT Expat license, and is copyrighted
by Guillaume Fraux and contributors.</p>
</article></div>