<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-raycastworlds" class="anchor" aria-hidden="true" href="#raycastworlds"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RayCastWorlds</h1>
<p dir="auto">This package provides simple first-person 3D games that can also be used as reinforcement learning environments. It is inspired by <a href="https://github.com/deepmind/lab">DeepMind Lab</a>.</p>
<h2 dir="auto"><a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Table of Contents</h2>
<ul dir="auto">
<li><a href="#getting-started">Getting Started</a></li>
<li><a href="#notes">Notes</a></li>
</ul>
<p dir="auto"><a href="#list-of-environments">List of Environments</a></p>
<ol dir="auto">
<li><a href="#singleroom">SingleRoom</a></li>
</ol>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting Started</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import RayCastWorlds as RCW

env = RCW.SingleRoomModule.SingleRoom()

# reset the game. All environments are randomized

RCW.reset!(env)

# get names of actions that can be performed in this environment

RCW.get_action_names(env)

# perform actions in the environment

RCW.act!(env, 1) # move forward
RCW.act!(env, 2) # move backward
RCW.act!(env, 3) # turn left
RCW.act!(env, 4) # turn right

# interactively play the game
# keybindings:
# `q`: quit
# `r`: reset
# `w`: move forward
# `s`: move backward
# `a`: turn left
# `d`: turn right
# `v`: toggle top view and camera view

RCW.play!(env)

# use the RLBase API

import ReinforcementLearningBase as RLBase

# wrap a game instance from this package to create an RLBase compatible environment

rlbase_env = RCW.RLBaseEnv(env)

# perform RLBase operations on the wrapped environment

RLBase.reset!(rlbase_env)
state = RLBase.state(rlbase_env)
action_space = RLBase.action_space(rlbase_env)
reward = RLBase.reward(rlbase_env)
done = RLBase.is_terminated(rlbase_env)

rlbase_env(1) # move forward
rlbase_env(2) # move backward
rlbase_env(3) # turn left
rlbase_env(4) # turn right"><pre><span class="pl-k">import</span> RayCastWorlds <span class="pl-k">as</span> RCW

env <span class="pl-k">=</span> RCW<span class="pl-k">.</span>SingleRoomModule<span class="pl-k">.</span><span class="pl-c1">SingleRoom</span>()

<span class="pl-c"><span class="pl-c">#</span> reset the game. All environments are randomized</span>

RCW<span class="pl-k">.</span><span class="pl-c1">reset!</span>(env)

<span class="pl-c"><span class="pl-c">#</span> get names of actions that can be performed in this environment</span>

RCW<span class="pl-k">.</span><span class="pl-c1">get_action_names</span>(env)

<span class="pl-c"><span class="pl-c">#</span> perform actions in the environment</span>

RCW<span class="pl-k">.</span><span class="pl-c1">act!</span>(env, <span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">#</span> move forward</span>
RCW<span class="pl-k">.</span><span class="pl-c1">act!</span>(env, <span class="pl-c1">2</span>) <span class="pl-c"><span class="pl-c">#</span> move backward</span>
RCW<span class="pl-k">.</span><span class="pl-c1">act!</span>(env, <span class="pl-c1">3</span>) <span class="pl-c"><span class="pl-c">#</span> turn left</span>
RCW<span class="pl-k">.</span><span class="pl-c1">act!</span>(env, <span class="pl-c1">4</span>) <span class="pl-c"><span class="pl-c">#</span> turn right</span>

<span class="pl-c"><span class="pl-c">#</span> interactively play the game</span>
<span class="pl-c"><span class="pl-c">#</span> keybindings:</span>
<span class="pl-c"><span class="pl-c">#</span> `q`: quit</span>
<span class="pl-c"><span class="pl-c">#</span> `r`: reset</span>
<span class="pl-c"><span class="pl-c">#</span> `w`: move forward</span>
<span class="pl-c"><span class="pl-c">#</span> `s`: move backward</span>
<span class="pl-c"><span class="pl-c">#</span> `a`: turn left</span>
<span class="pl-c"><span class="pl-c">#</span> `d`: turn right</span>
<span class="pl-c"><span class="pl-c">#</span> `v`: toggle top view and camera view</span>

RCW<span class="pl-k">.</span><span class="pl-c1">play!</span>(env)

<span class="pl-c"><span class="pl-c">#</span> use the RLBase API</span>

<span class="pl-k">import</span> ReinforcementLearningBase <span class="pl-k">as</span> RLBase

<span class="pl-c"><span class="pl-c">#</span> wrap a game instance from this package to create an RLBase compatible environment</span>

rlbase_env <span class="pl-k">=</span> RCW<span class="pl-k">.</span><span class="pl-c1">RLBaseEnv</span>(env)

<span class="pl-c"><span class="pl-c">#</span> perform RLBase operations on the wrapped environment</span>

RLBase<span class="pl-k">.</span><span class="pl-c1">reset!</span>(rlbase_env)
state <span class="pl-k">=</span> RLBase<span class="pl-k">.</span><span class="pl-c1">state</span>(rlbase_env)
action_space <span class="pl-k">=</span> RLBase<span class="pl-k">.</span><span class="pl-c1">action_space</span>(rlbase_env)
reward <span class="pl-k">=</span> RLBase<span class="pl-k">.</span><span class="pl-c1">reward</span>(rlbase_env)
done <span class="pl-k">=</span> RLBase<span class="pl-k">.</span><span class="pl-c1">is_terminated</span>(rlbase_env)

<span class="pl-c1">rlbase_env</span>(<span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">#</span> move forward</span>
<span class="pl-c1">rlbase_env</span>(<span class="pl-c1">2</span>) <span class="pl-c"><span class="pl-c">#</span> move backward</span>
<span class="pl-c1">rlbase_env</span>(<span class="pl-c1">3</span>) <span class="pl-c"><span class="pl-c">#</span> turn left</span>
<span class="pl-c1">rlbase_env</span>(<span class="pl-c1">4</span>) <span class="pl-c"><span class="pl-c">#</span> turn right</span></pre></div>
<h2 dir="auto"><a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Notes</h2>
<h3 dir="auto"><a id="user-content-raycaster" class="anchor" aria-hidden="true" href="#raycaster"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RayCaster</h3>
<p dir="auto">The core raycasting algorithm is implemented in the <a href="https://github.com/Sid-Bhatia-0/RayCaster.jl"><code>RayCaster</code></a> package.</p>
<h3 dir="auto"><a id="user-content-units" class="anchor" aria-hidden="true" href="#units"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Units</h3>
<p dir="auto">There are 4 types of units used throughout the code:</p>
<ol dir="auto">
<li><code>wu</code>: Stands for world units. These are usually floating point numbers representing positions in the real world.</li>
<li><code>tu</code>: Stands for tile units. These are integers representing positions on the tile map.</li>
<li><code>pu</code>: Stands for pixel units. These are integers representing positions on the visualization image.</li>
<li><code>au</code>: Stands for angle units. These are integers representing angles from 0 to <code>num_directions</code>.</li>
</ol>
<p dir="auto">The height of the tile map correponds to the x-axis of the coordinate system (often indexed with <code>i</code>) and width correponds to the y-axis (often indexed with <code>j</code>). This keeps the coordinate system right-handed.</p>
<h2 dir="auto"><a id="user-content-list-of-environments" class="anchor" aria-hidden="true" href="#list-of-environments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>List of Environments</h2>
<ol dir="auto">
<li>
<h3 dir="auto"><a id="user-content-singleroom" class="anchor" aria-hidden="true" href="#singleroom"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SingleRoom</h3>
<p dir="auto">The objective of the agent is to navigate its way to the goal. When the agent tries to move into the goal tile, it receives a reward of 1 and the environment terminates.</p>
<p dir="auto">Camera view:</p>
 <a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/32610387/128851560-4c713b0b-cf9f-4eed-bf60-439d456ab5f6.png"><img src="https://user-images.githubusercontent.com/32610387/128851560-4c713b0b-cf9f-4eed-bf60-439d456ab5f6.png" style="max-width: 100%;"></a>
<p dir="auto">Top view:</p>
 <a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/32610387/128851489-befdb69e-157c-48ea-b6ac-7447e8018d93.png"><img src="https://user-images.githubusercontent.com/32610387/128851489-befdb69e-157c-48ea-b6ac-7447e8018d93.png" style="max-width: 100%;"></a>
</li>
</ol>
</article></div>