<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-stridedviews" class="anchor" aria-hidden="true" href="#stridedviews"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>StridedViews</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Coverage</strong></th>
<th align="center"><strong>Quality assurance</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://github.com/Jutho/StridedViews.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/Jutho/StridedViews.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="CI" style="max-width: 100%;"></a> <a href="https://github.com/Jutho/StridedViews.jl/actions?query=workflow%3A%22CI+%28Julia+nightly%29%22"><img src="https://github.com/Jutho/StridedViews.jl/workflows/CI%20(Julia%20nightly)/badge.svg" alt="CI (Julia nightly)" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/Jutho/StridedViews.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e9007e359ee6f36d8dfce910c6620f228b51636c8d07d447c77f7b5cacbe8aff/68747470733a2f2f636f6465636f762e696f2f67682f4a7574686f2f5374726964656456696577732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/Jutho/StridedViews.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/JuliaTesting/Aqua.jl"><img src="https://raw.githubusercontent.com/JuliaTesting/Aqua.jl/master/badge.svg" alt="Aqua QA" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>


<p dir="auto">StridedViews.jl exports a single struct type <code>StridedView</code> for representing a strided view
over a contiguous parrent array, as represented by the abstract type <code>DenseArray</code>.</p>
<p dir="auto">See <a href="http://github.com/Jutho/Strided.jl">Strided.jl</a> for more functionality.</p>
<hr>
<p dir="auto">The type <code>StridedView</code> provides a view into a parent array of type <code>DenseArray</code> such that
the resulting view is strided, i.e. any dimension has an associated stride, such that e.g.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="getindex(A, i₁, i₂, i₃, ...) = A.op(A.parent[offset + 1 + (i₁-1)*s₁ + (i₂-1)*s₂ + (i₃-1)*s₃ + ...])"><pre><span class="pl-en">getindex</span>(A, i₁, i₂, i₃, <span class="pl-k">...</span>) <span class="pl-k">=</span> A<span class="pl-k">.</span><span class="pl-c1">op</span>(A<span class="pl-k">.</span>parent[offset <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> (i₁<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>s₁ <span class="pl-k">+</span> (i₂<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>s₂ <span class="pl-k">+</span> (i₃<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>s₃ <span class="pl-k">+</span> <span class="pl-k">...</span>])</pre></div>
<p dir="auto">with <code>sⱼ = stride(A, iⱼ)</code>. There are no further assumptions on the strides, e.g. they are
not assumed to be monotonously increasing or have <code>s₁ == 1</code>. Furthermore, <code>A.op</code> can be any
of the operations <code>identity</code>, <code>conj</code>, <code>transpose</code> or <code>adjoint</code> (the latter two are
equivalent to the former two if <code>eltype(A) &lt;: Number</code>). Since these operations are their own
inverse, they are also used in the corresponding <code>setindex!</code>.</p>
<p dir="auto">This definition enables a <code>StridedView</code> to be lazy (i.e. returns just another <code>StridedView</code>
over the same parent data) under application of <code>conj</code>, <code>transpose</code>, <code>adjoint</code>,
<code>permutedims</code> and indexing (<code>getindex</code>) with <code>Union{Integer, Colon, AbstractRange{&lt;:Integer}}</code> (a.k.a slicing). The function <code>sview</code> is exported to directly
create a sliced (and thus strided) view over a given parent array.</p>
<p dir="auto">Furthermore, the strided structure can be retained under certain <code>reshape</code> operations, but
not all of them. Any dimension can always be split into smaller dimensions, but two
subsequent dimensions <code>i</code> and <code>i+1</code> can only be joined if <code>stride(A,i+1) == size(A,i)*stride(A,i)</code>. Instead of overloading <code>reshape</code>, Strided.jl provides a separate
function <code>sreshape</code> which returns a <code>StridedView</code> over the same parent data, or throws a
runtime error if this is impossible.</p>
</article></div>