<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-financialmontecarlojl-" class="anchor" aria-hidden="true" href="#financialmontecarlojl-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FinancialMonteCarlo.jl <a target="_blank" rel="noopener noreferrer" href="etc/logo.png"><img src="etc/logo.png" width="40" style="max-width: 100%;"></a></h1>
<p dir="auto"><a href="https://rcalxrc08.gitlab.io/FinancialMonteCarlo.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://gitlab.com/rcalxrc08/FinancialMonteCarlo.jl/commits/master" rel="nofollow"><img src="https://camo.githubusercontent.com/36f5a49465973da2486378c74d0036b33b41e7d7933ca1886f2c3964824aa6de/68747470733a2f2f6769746c61622e636f6d2f7263616c78726330382f46696e616e6369616c4d6f6e74654361726c6f2e6a6c2f6261646765732f6d61737465722f706970656c696e652e737667" alt="pipeline status" data-canonical-src="https://gitlab.com/rcalxrc08/FinancialMonteCarlo.jl/badges/master/pipeline.svg" style="max-width: 100%;"></a> <a href="https://codecov.io/gl/rcalxrc08/FinancialMonteCarlo.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2e00483138156efd4ef203191a24d2db2bebbe56f58c797bfb2b8885b43fc93d/68747470733a2f2f636f6465636f762e696f2f676c2f7263616c78726330382f46696e616e6369616c4d6f6e74654361726c6f2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d5079705a696e5a4b7142" alt="codecov" data-canonical-src="https://codecov.io/gl/rcalxrc08/FinancialMonteCarlo.jl/branch/master/graph/badge.svg?token=PypZinZKqB" style="max-width: 100%;"></a></p>
<h5 dir="auto"><a id="user-content-this-is-a-julia-package-containing-some-useful-financial-function-for-pricing-and-risk-management-for-equity-products" class="anchor" aria-hidden="true" href="#this-is-a-julia-package-containing-some-useful-financial-function-for-pricing-and-risk-management-for-equity-products"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>This is a Julia package containing some useful Financial function for Pricing and Risk Management for Equity products.</h5>
<p dir="auto">It currently contains the following capabilities:</p>
<ul dir="auto">
<li>Support for the following Single Name Models:
<ul dir="auto">
<li>Black Scholes</li>
<li>Kou</li>
<li>Merton</li>
<li>Normal Inverse Gaussian</li>
<li>Variance Gamma</li>
<li>Heston</li>
<li>LogNormal Mixture</li>
<li>Shifted LogNormal Mixture</li>
</ul>
</li>
<li>Support for Multivariate processes through Gaussian Copula</li>
<li>Support for non costant zero rates and dividends</li>
<li>Support for the following Option families:
<ul dir="auto">
<li>European Options</li>
<li>Barrier Options</li>
<li>Asian Options</li>
<li>Bermudan Options (Using Longstaff-Schwartz)</li>
<li>American Options (Using Longstaff-Schwartz)</li>
</ul>
</li>
<li>Partial Support for the following Parallelization:
<ul dir="auto">
<li>CUDA using  <a href="https://github.com/JuliaGPU/CUDA.jl">CUDA.jl</a></li>
<li>Thread based (Native julia)</li>
<li>Process based (Native julia)</li>
</ul>
</li>
</ul>
<p dir="auto">It also supports the pricing directly from the definition of the Stochastic Differential Equation, using the package <a href="https://github.com/JuliaDiffEq/DifferentialEquations.jl">DifferentiatialEquations.jl</a>.</p>
<p dir="auto">Currently supports <a href="https://github.com/JuliaDiff/DualNumbers.jl">DualNumbers.jl</a>, <a href="https://github.com/JuliaDiff/HyperDualNumbers.jl">HyperDualNumbers.jl</a>, <a href="https://github.com/JuliaDiff/TaylorSeries.jl">TaylorSeries.jl</a>, <a href="https://github.com/JuliaDiff/ForwardDiff.jl">ForwardDiff.jl</a> and <a href="https://github.com/JuliaDiff/ReverseDiff.jl">ReverseDiff.jl</a>
for Automatic Differentiation (where it makes sense).</p>
<h2 dir="auto"><a id="user-content-how-to-install" class="anchor" aria-hidden="true" href="#how-to-install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to Install</h2>
<p dir="auto">To install the package simply type on the Julia REPL the following:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add FinancialMonteCarlo"><pre>] add FinancialMonteCarlo</pre></div>
<h2 dir="auto"><a id="user-content-how-to-test" class="anchor" aria-hidden="true" href="#how-to-test"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to Test</h2>
<p dir="auto">After the installation, to test the package type on the Julia REPL the following:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] test FinancialMonteCarlo"><pre>] test FinancialMonteCarlo</pre></div>
<h2 dir="auto"><a id="user-content-hello-world-pricing-european-call-option-in-black-scholes-model" class="anchor" aria-hidden="true" href="#hello-world-pricing-european-call-option-in-black-scholes-model"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hello World: Pricing European Call Option in Black Scholes Model</h2>
<p dir="auto">The following example shows how to price a european call option with underlying varying according to the Black Scholes Model, given the volatility:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="#Import the Package
using FinancialMonteCarlo;

#Define Spot Datas
S0=100.0;
K=100.0;
r=0.02;
T=1.0;
d=0.01;
D=90.0;
#Define FinancialMonteCarlo Parameters
Nsim=10000;
Nstep=30;
#Define Model Parameters
σ=0.2;
#Build the Structs
mcConfig=MonteCarloConfiguration(Nsim,Nstep); #Configurator
zeroRate=ZeroRate(r);
underlying=Underlying(S0,d); #Underlying relative data

#Define The Option
EU_payoff=EuropeanOption(T,K)
#Define the Model
Model=BlackScholesProcess(σ,underlying);

#Price
@show EuPrice=pricer(Model,zeroRate,mcConfig,EU_payoff);"><pre><span class="pl-c"><span class="pl-c">#</span>Import the Package</span>
<span class="pl-k">using</span> FinancialMonteCarlo;

<span class="pl-c"><span class="pl-c">#</span>Define Spot Datas</span>
S0<span class="pl-k">=</span><span class="pl-c1">100.0</span>;
K<span class="pl-k">=</span><span class="pl-c1">100.0</span>;
r<span class="pl-k">=</span><span class="pl-c1">0.02</span>;
T<span class="pl-k">=</span><span class="pl-c1">1.0</span>;
d<span class="pl-k">=</span><span class="pl-c1">0.01</span>;
D<span class="pl-k">=</span><span class="pl-c1">90.0</span>;
<span class="pl-c"><span class="pl-c">#</span>Define FinancialMonteCarlo Parameters</span>
Nsim<span class="pl-k">=</span><span class="pl-c1">10000</span>;
Nstep<span class="pl-k">=</span><span class="pl-c1">30</span>;
<span class="pl-c"><span class="pl-c">#</span>Define Model Parameters</span>
σ<span class="pl-k">=</span><span class="pl-c1">0.2</span>;
<span class="pl-c"><span class="pl-c">#</span>Build the Structs</span>
mcConfig<span class="pl-k">=</span><span class="pl-c1">MonteCarloConfiguration</span>(Nsim,Nstep); <span class="pl-c"><span class="pl-c">#</span>Configurator</span>
zeroRate<span class="pl-k">=</span><span class="pl-c1">ZeroRate</span>(r);
underlying<span class="pl-k">=</span><span class="pl-c1">Underlying</span>(S0,d); <span class="pl-c"><span class="pl-c">#</span>Underlying relative data</span>

<span class="pl-c"><span class="pl-c">#</span>Define The Option</span>
EU_payoff<span class="pl-k">=</span><span class="pl-c1">EuropeanOption</span>(T,K)
<span class="pl-c"><span class="pl-c">#</span>Define the Model</span>
Model<span class="pl-k">=</span><span class="pl-c1">BlackScholesProcess</span>(σ,underlying);

<span class="pl-c"><span class="pl-c">#</span>Price</span>
<span class="pl-c1">@show</span> EuPrice<span class="pl-k">=</span><span class="pl-c1">pricer</span>(Model,zeroRate,mcConfig,EU_payoff);</pre></div>
<h2 dir="auto"><a id="user-content-curve-support" class="anchor" aria-hidden="true" href="#curve-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Curve Support</h2>
<p dir="auto">Non constant zero rates and dividend are managed.
An implied curve is built at time zero, such implied curve is able to return the right implied zero/dividend at a given time,
Without the need to carry the integral structure of the curve.
No support for multicurrency.</p>
<h2 dir="auto"><a id="user-content-contracts-algebra" class="anchor" aria-hidden="true" href="#contracts-algebra"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contracts Algebra</h2>
<p dir="auto">Contracts that refer to the same underlying can be sum togheter in order to build a "new instrument".
In this sense assuming the same underlying, the set of contracts form a vectorial space over "Real" Numbers.</p>
<h2 dir="auto"><a id="user-content-market-data-and-multivariate-support" class="anchor" aria-hidden="true" href="#market-data-and-multivariate-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Market Data and Multivariate Support</h2>
<p dir="auto">A market data set is a dictionary containing all of the process for which we have a view (or a model). ( "KEY" =&gt; MODEL)
The portofolio is a dictionary as well but it carries the structure of the portfolio. ( "KEY" =&gt; CONTRACTS_ON_MODEL)</p>
<h2 dir="auto"><a id="user-content-keep-in-mind" class="anchor" aria-hidden="true" href="#keep-in-mind"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Keep in mind</h2>
<p dir="auto">There are few things that you should keep in mind when using this library:</p>
<ul dir="auto">
<li>First Order Automatic Differentiation is enabled for any kind of option, also for such that there is no sense (e.g. Binary, Barriers).</li>
<li>Second Order Automatic Differentiation is enabled for any kind of option but the results are useless most of the time.</li>
</ul>
</article></div>