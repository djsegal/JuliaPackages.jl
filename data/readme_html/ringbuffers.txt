<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-ringbuffers" class="anchor" aria-hidden="true" href="#ringbuffers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>RingBuffers</h1>
<p><a href="https://travis-ci.org/JuliaAudio/RingBuffers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6dac41efa55585b716945b8e7f7a8cf4b2740a64/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961417564696f2f52696e67427566666572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaAudio/RingBuffers.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/ssfrr/ringbuffers-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f9f34900de22fb174be2bae6565e4e8cb894b240/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6c706a63316d76397374626b646869683f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/lpjc1mv9stbkdhih?svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/github/JuliaAudio/RingBuffers.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/2c9525b81514d0ea7bcf697f79adfdd3c00a1f4d/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c6961417564696f2f52696e67427566666572732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/JuliaAudio/RingBuffers.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package provides the <code>RingBuffer</code> type, which is a circular, fixed-size multi-channel buffer.</p>
<p>This package implements <code>read</code>, <code>read!</code>, and <code>write</code> methods on the <code>RingBuffer</code> type, and supports reading and writing NxM <code>AbstractArray</code> subtypes, where N is the channel count and M is the length in frames. It also supports reading and writing from <code>AbstractVector</code>s, in which case the memory is treated as a raw buffer with interleaved data.</p>
<p>Under the hood this package uses the <code>pa_ringbuffer</code> C implementation from PortAudio, which is a lock-free single-reader single-writer ringbuffer. The benefit of building on this is that you can write C modules for other libraries that can communicate with Julia over this lock-free ringbuffer using the <code>portaudio.h</code> header file. See the <a href="https://github.com/JuliaAudio/PortAudio.jl">PortAudio</a> library for an example of using this to pass data between Julia's main thread and an audio callback in a different thread.</p>
</article></div>