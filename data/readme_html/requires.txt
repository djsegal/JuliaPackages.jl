<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h3 dir="auto"><a id="user-content-note-this-page-is-for-julia-07-and-higher" class="anchor" aria-hidden="true" href="#note-this-page-is-for-julia-07-and-higher"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Note: this page is for Julia 0.7 and higher</h3>
<p dir="auto">For older versions of Julia, see <a href="https://github.com/MikeInnes/Requires.jl/blob/5683745f03cbea41f6f053182461173e236fdd94/README.md">https://github.com/MikeInnes/Requires.jl/blob/5683745f03cbea41f6f053182461173e236fdd94/README.md</a></p>
<h1 dir="auto"><a id="user-content-requiresjl" class="anchor" aria-hidden="true" href="#requiresjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Requires.jl</h1>
<p dir="auto"><a href="https://travis-ci.org/MikeInnes/Requires.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/29376de27868854a72218c048e75d3abefd4f70e12aca66f04e94f4860259a7f/68747470733a2f2f7472617669732d63692e6f72672f4d696b65496e6e65732f52657175697265732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/MikeInnes/Requires.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto"><em>Requires</em> is a Julia package that will magically make loading packages
faster, maybe. It supports specifying glue code in packages which will
load automatically when another package is loaded, so that explicit
dependencies (and long load times) can be avoided.</p>
<p dir="auto">Suppose you've written a package called <code>MyPkg</code>. <code>MyPkg</code> has core functionality that it always provides;
but suppose you want to provide additional functionality if the <code>Gadfly</code> package is also loaded.
Requires.jl exports a macro, <code>@require</code>, that allows you to specify that some code is conditional on having both packages available.</p>
<p dir="auto"><code>@require</code> must be within the <a href="https://docs.julialang.org/en/v1/manual/modules/#Module-initialization-and-precompilation-1" rel="nofollow"><code>__init__</code></a> method for your module.
Here's an example that will create a new method of a function called <code>myfunction</code> only when both packages are present:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="module MyPkg

# lots of code

myfunction(::MyType) = Textual()

function __init__()
    @require Gadfly=&quot;c91e804a-d5a3-530f-b6f0-dfbca275c004&quot; myfunction(::Gadfly.Plot) = Graphical()
end

end # module"><pre><span class="pl-k">module</span> MyPkg

<span class="pl-c"><span class="pl-c">#</span> lots of code</span>

<span class="pl-en">myfunction</span>(<span class="pl-k">::</span><span class="pl-c1">MyType</span>) <span class="pl-k">=</span> <span class="pl-c1">Textual</span>()

<span class="pl-k">function</span> <span class="pl-en">__init__</span>()
    <span class="pl-c1">@require</span> Gadfly<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>c91e804a-d5a3-530f-b6f0-dfbca275c004<span class="pl-pds">"</span></span> <span class="pl-en">myfunction</span>(<span class="pl-k">::</span><span class="pl-c1">Gadfly.Plot</span>) <span class="pl-k">=</span> <span class="pl-c1">Graphical</span>()
<span class="pl-k">end</span>

<span class="pl-k">end</span> <span class="pl-c"><span class="pl-c">#</span> module</span></pre></div>
<p dir="auto">The string is Gadfly's UUID; this information may be obtained
by finding the package in the registry (<a href="https://github.com/JuliaRegistries/General">JuliaRegistries</a> for public packages).
Note that the <code>Gadfly.Plot</code> type may not be available when you load <code>MyPkg</code>, but <code>@require</code>
handles this situation without trouble.</p>
<p dir="auto">For larger amounts of code you can use <code>include</code> as the argument to the <code>@require</code> statement:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function __init__()
    @require Gadfly=&quot;c91e804a-d5a3-530f-b6f0-dfbca275c004&quot; include(&quot;glue.jl&quot;)
end"><pre><span class="pl-k">function</span> <span class="pl-en">__init__</span>()
    <span class="pl-c1">@require</span> Gadfly<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>c91e804a-d5a3-530f-b6f0-dfbca275c004<span class="pl-pds">"</span></span> <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span>glue.jl<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
<p dir="auto">and this will trigger the loading and evaluation of <code>"glue.jl"</code> in <code>MyPkg</code> whenever Gadfly is loaded.
You can even use</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function __init__()
    @require Gadfly=&quot;c91e804a-d5a3-530f-b6f0-dfbca275c004&quot; @eval using MyGluePkg
end"><pre><span class="pl-k">function</span> <span class="pl-en">__init__</span>()
    <span class="pl-c1">@require</span> Gadfly<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>c91e804a-d5a3-530f-b6f0-dfbca275c004<span class="pl-pds">"</span></span> <span class="pl-c1">@eval</span> <span class="pl-k">using</span> MyGluePkg
<span class="pl-k">end</span></pre></div>
<p dir="auto">if you wish to exploit precompilation for the new code.</p>
<p dir="auto">In the <code>@require</code> block, or any included files, you can use or import the package, but note that you must use the syntax <code>using .Gadfly</code> or <code>import .Gadfly</code>, rather than the usual syntax. Otherwise you will get a warning about Gadfly not being in dependencies.</p>
<p dir="auto"><code>@require</code>d packages can be added to the <code>test</code> environment of a Julia project for integration tests, or directly to the project to document compatible versions in the <code>[compat]</code> section of <code>Project.toml</code>.</p>
<h2 dir="auto"><a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Demo</h2>
<p dir="auto">For a complete demo, consider the following file named <code>"Reqs.jl"</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="module Reqs

using Requires

function __init__()
    @require JSON=&quot;682c06a0-de6a-54ab-a142-c8b1cf79cde6&quot; @eval using Colors
end

end"><pre><span class="pl-k">module</span> Reqs

<span class="pl-k">using</span> Requires

<span class="pl-k">function</span> <span class="pl-en">__init__</span>()
    <span class="pl-c1">@require</span> JSON<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>682c06a0-de6a-54ab-a142-c8b1cf79cde6<span class="pl-pds">"</span></span> <span class="pl-c1">@eval</span> <span class="pl-k">using</span> Colors
<span class="pl-k">end</span>

<span class="pl-k">end</span></pre></div>
<p dir="auto">Here's a session that shows how <code>Colors</code> is only loaded after you've imported <code>JSON</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; include(&quot;Reqs.jl&quot;)
Main.Reqs

julia&gt; using Main.Reqs

julia&gt; Reqs.Colors
ERROR: UndefVarError: Colors not defined

julia&gt; using JSON

julia&gt; Reqs.Colors
Colors

julia&gt; Reqs.Colors.RGB(1,0,0)
RGB{N0f8}(1.0,0.0,0.0)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span>Reqs.jl<span class="pl-pds">"</span></span>)
Main<span class="pl-k">.</span>Reqs

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Main<span class="pl-k">.</span>Reqs

julia<span class="pl-k">&gt;</span> Reqs<span class="pl-k">.</span>Colors
ERROR<span class="pl-k">:</span> UndefVarError<span class="pl-k">:</span> Colors not defined

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> JSON

julia<span class="pl-k">&gt;</span> Reqs<span class="pl-k">.</span>Colors
Colors

julia<span class="pl-k">&gt;</span> Reqs<span class="pl-k">.</span>Colors<span class="pl-k">.</span><span class="pl-c1">RGB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)
<span class="pl-c1">RGB</span><span class="pl-c1">{N0f8}</span>(<span class="pl-c1">1.0</span>,<span class="pl-c1">0.0</span>,<span class="pl-c1">0.0</span>)</pre></div>
<p dir="auto">Note that if <code>Reqs</code> were a registered package you could replace the first two commands with <code>using Reqs</code>.</p>
<h2 dir="auto"><a id="user-content-multiple-requirements" class="anchor" aria-hidden="true" href="#multiple-requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Multiple requirements</h2>
<p dir="auto">In the case that a feature depends on multiple packages, you can do the following trick:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="module TestRequires

using Requires

function __init__()
    @require Images=&quot;916415d5-f1e6-5110-898d-aaa5f9f070e0&quot; begin
        @require Revise=&quot;295af30f-e4ad-537b-8983-00126c2a3abe&quot; println(&quot;Got both!&quot;)
    end
end

end # module"><pre><span class="pl-k">module</span> TestRequires

<span class="pl-k">using</span> Requires

<span class="pl-k">function</span> <span class="pl-en">__init__</span>()
    <span class="pl-c1">@require</span> Images<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>916415d5-f1e6-5110-898d-aaa5f9f070e0<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@require</span> Revise<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>295af30f-e4ad-537b-8983-00126c2a3abe<span class="pl-pds">"</span></span> <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Got both!<span class="pl-pds">"</span></span>)
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-k">end</span> <span class="pl-c"><span class="pl-c">#</span> module</span></pre></div>
<p dir="auto">The code will only be loaded in the presence of both Images.jl and Revise.jl:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using TestRequires
[ Info: Precompiling TestRequires [eb9e79a2-1324-11e9-3469-91075b92f61d]

julia&gt; using Images

julia&gt; using Revise
[ Info: Recompiling stale cache file /tmp/pkgs/compiled/v1.0/Revise/M1Qoh.ji for Revise [295af30f-e4ad-537b-8983-00126c2a3abe]
Got both!"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> TestRequires
[ Info<span class="pl-k">:</span> Precompiling TestRequires [eb9e79a2<span class="pl-k">-</span><span class="pl-c1">1324</span><span class="pl-k">-</span><span class="pl-c1">11e9</span><span class="pl-k">-</span><span class="pl-c1">3469</span><span class="pl-k">-</span><span class="pl-c1">91075</span>b92f61d]

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Images

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Revise
[ Info<span class="pl-k">:</span> Recompiling stale cache file <span class="pl-k">/</span>tmp<span class="pl-k">/</span>pkgs<span class="pl-k">/</span>compiled<span class="pl-k">/</span>v1.<span class="pl-c1">0</span><span class="pl-k">/</span>Revise<span class="pl-k">/</span>M1Qoh<span class="pl-k">.</span>ji <span class="pl-k">for</span> Revise [<span class="pl-c1">295</span>af30f<span class="pl-k">-</span>e4ad<span class="pl-k">-</span><span class="pl-c1">537</span>b<span class="pl-k">-</span><span class="pl-c1">8983</span><span class="pl-k">-</span><span class="pl-c1">00126</span>c2a3abe]
Got both!</pre></div>
<h2 dir="auto"><a id="user-content-receiving-notifications-in-other-packages" class="anchor" aria-hidden="true" href="#receiving-notifications-in-other-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Receiving notifications in other packages</h2>
<p dir="auto">Other packages can be informed about Requires' actions. To implement this, add a function</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="add_require(sourcefile, modcaller, id, modname, expr)"><pre><span class="pl-c1">add_require</span>(sourcefile, modcaller, id, modname, expr)</pre></div>
<p dir="auto">to your package. The arguments will have the following types:</p>
<ul dir="auto">
<li><code>sourcefile</code>: a string, the full path to the file that contained the <code>@require</code> statement</li>
<li><code>modcaller</code>: the active module from which the <code>@require</code> was issued</li>
<li><code>id</code>: a string representing the UUID of the package that triggered this <code>@require</code> block (e.g.,
the uuid string from <code>@require Gadfly="c91e804a-d5a3-530f-b6f0-dfbca275c004"</code>)</li>
<li><code>modname</code>: a string representing the name of the package that triggered this <code>@require</code> block
(e.g., <code>"Gadfly"</code> in the example above)</li>
<li><code>expr</code>: the expression in the <code>@require</code> block</li>
</ul>
<p dir="auto">Once you've added this, append the <code>PkgId</code> of your package to <code>Requires.notified_pkgs</code>
in a pull request to Requires.</p>
</article></div>