<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h2><a id="user-content-brownian" class="anchor" aria-hidden="true" href="#brownian"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Brownian</h2>
<p><a href="https://travis-ci.org/UniversityofWarwick/Brownian.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/bb9f2c26f7c74346b2fb06b7fa61798b3402cdb3/68747470733a2f2f7472617669732d63692e6f72672f556e69766572736974796f665761727769636b2f42726f776e69616e2e6a6c2e706e67" alt="Build Status" data-canonical-src="https://travis-ci.org/UniversityofWarwick/Brownian.jl.png" style="max-width:100%;"></a></p>
<p>The Julia <code>Brownian</code> package is aimed at providing a centralized repository of algorithms for simulating Brownian-based
stochastic processes. More precisely, the package currently provides routines for random sampling from</p>
<ul>
<li>one-dimensional Brownian motion via random walk,</li>
<li>one-dimensional fractional Brownian motion (FBM) and one-dimensional fractional Gaussian noise (FGN) via the Cholesky
decomposition method or the Davies-Harte method, which makes use of fast Fourier transforms,</li>
<li>one-dimensional Riemann-Liouville fractional Brownian motion (FBM) via an exact discrete method.</li>
</ul>
<p>The future roadmap would be to provide implementations for sampling from</p>
<ul>
<li>one-dimensional Brownian motion via Brownian bridge and via multivariate normals,</li>
<li>one-dimensional fractional Brownian motion using the Hosking method,</li>
<li>multidimensional Brownian and fractional Brownian motion,</li>
<li>reflected Brownian motion (RBM).</li>
</ul>
<p>Willing developers are welcome to contribute to the package.</p>
<h3><a id="user-content-short-tutorial" class="anchor" aria-hidden="true" href="#short-tutorial"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Short tutorial</h3>
<h3><a id="user-content-example-1-simulation-of-brownian-motion" class="anchor" aria-hidden="true" href="#example-1-simulation-of-brownian-motion"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example 1: simulation of Brownian motion</h3>
<p>To simulate Brownian motion at the time points (0, 0.1, 0.5, 0.75, 1), use the following snippet:</p>
<pre><code>using Brownian

p = BrownianMotion([0, 0.1, 0.5, 0.75, 1])

rand(p)
</code></pre>
<h3><a id="user-content-example-2-simulation-of-fbm-and-fgn" class="anchor" aria-hidden="true" href="#example-2-simulation-of-fbm-and-fgn"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example 2: simulation of FBM and FGN</h3>
<p>Suppose that interest is in simulating fractional Brownian motion with Hurst index equal to 0.4 in the time interval
[0, 1] with a time step of 1/2^n for some natural n (for example n=10).</p>
<pre><code>using Brownian

p = FBM(0:1/2^10:1, 0.4)

# Using the Davies-Harte algorithm, which relies on fast Fourier transforms (FFT)
rand(p)

# Using a method based on the Cholesky decomposition of the covariance matrix of FBM
rand(p, method=:chol)

# Using an exact discrete method for simulating Riemann-Liouville FBM
rand(p, method=:rl)
</code></pre>
<p>To simulate fractional Gaussian noise with the same Hurst index,</p>
<pre><code># Using the Davies-Harte algorithm
rand(p, fbm=false)

# Using the Cholesky method
rand(p, fbm=false, method=:chol)
</code></pre>
<p>Note that fractional Brownian motion is obtained from fractional Gaussian noise by taking cumulative sums (and
conversely FGN is computed from FBM by differencing).</p>
</article></div>