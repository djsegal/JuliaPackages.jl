<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-simplecaching" class="anchor" aria-hidden="true" href="#simplecaching"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SimpleCaching</h1>
<p dir="auto"><a href="https://ferdiu.github.io/SimpleCaching.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://ferdiu.github.io/SimpleCaching.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://cirrus-ci.com/github/ferdiu/SimpleCaching.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1e1a81db49a4c78345f1da093bfd5717768dbc81121efc85616b4e82c59df0aa/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f6665726469752f53696d706c6543616368696e672e6a6c2e737667" alt="Build Status" data-canonical-src="https://api.cirrus-ci.com/github/ferdiu/SimpleCaching.jl.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides two macros used to cache result(s) of function calls.</p>
<p dir="auto">The cached file will survive the julia session so it will be automatically loaded from the
disk even after a restart of the julia session.</p>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(url=&quot;https://github.com/ferdiu/SimpleCaching.jl.git&quot;)
using SimpleCaching"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/ferdiu/SimpleCaching.jl.git<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> SimpleCaching</pre></div>
<h2 dir="auto"><a id="user-content-caching-function-result-using-serialize" class="anchor" aria-hidden="true" href="#caching-function-result-using-serialize"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Caching function result using Serialize</h2>
<p dir="auto">For large files or complicated structers it is advised to cache results using the macro
<code>@scache</code> which provides faster serialization and smaller files on disk at the cost of less
portability (see <a href="https://docs.julialang.org/en/v1/stdlib/Serialization/" rel="nofollow">Serialization</a>).</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using SimpleCaching

julia&gt; SimpleCaching.settings.log = true;

julia&gt; @scache &quot;cute-cube&quot; &quot;./&quot; fill(0, 3, 3, 3)
● [ 2022-12-09 15:39:42 ] Computing cute-cube...
● [ 2022-12-09 15:39:42 ] Computed cute-cube in 0.009 seconds (00:00:00)
● [ 2022-12-09 15:39:44 ] Saving cute-cube to file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld[.tmp]...
3×3×3 Array{Int64, 3}:
[:, :, 1] =
 0  0  0
 0  0  0
 0  0  0

[:, :, 2] =
 0  0  0
 0  0  0
 0  0  0

[:, :, 3] =
 0  0  0
 0  0  0
 0  0  0

julia&gt; @scache &quot;cute-cube&quot; &quot;./&quot; fill(0, 3, 3, 3)
● [ 2022-12-09 15:39:56 ] Loading cute-cube from file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld...
3×3×3 Array{Int64, 3}:
[:, :, 1] =
 0  0  0
 0  0  0
 0  0  0

[:, :, 2] =
 0  0  0
 0  0  0
 0  0  0

[:, :, 3] =
 0  0  0
 0  0  0
 0  0  0
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SimpleCaching

julia<span class="pl-k">&gt;</span> SimpleCaching<span class="pl-k">.</span>settings<span class="pl-k">.</span>log <span class="pl-k">=</span> <span class="pl-c1">true</span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@scache</span> <span class="pl-s"><span class="pl-pds">"</span>cute-cube<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>./<span class="pl-pds">"</span></span> <span class="pl-c1">fill</span>(<span class="pl-c1">0</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>)
● [ <span class="pl-c1">2022</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">09</span> <span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">39</span><span class="pl-k">:</span><span class="pl-c1">42</span> ] Computing cute<span class="pl-k">-</span>cube<span class="pl-k">...</span>
● [ <span class="pl-c1">2022</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">09</span> <span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">39</span><span class="pl-k">:</span><span class="pl-c1">42</span> ] Computed cute<span class="pl-k">-</span>cube <span class="pl-k">in</span> <span class="pl-c1">0.009</span> seconds (<span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">00</span>)
● [ <span class="pl-c1">2022</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">09</span> <span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">39</span><span class="pl-k">:</span><span class="pl-c1">44</span> ] Saving cute<span class="pl-k">-</span>cube to file <span class="pl-k">./</span>cute<span class="pl-k">-</span>cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a<span class="pl-k">.</span>jld[<span class="pl-k">.</span>tmp]<span class="pl-k">.</span><span class="pl-k">..</span>
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Int64, <span class="pl-c1">3</span>}<span class="pl-k">:</span>
[:, :, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

[:, :, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

[:, :, <span class="pl-c1">3</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@scache</span> <span class="pl-s"><span class="pl-pds">"</span>cute-cube<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>./<span class="pl-pds">"</span></span> <span class="pl-c1">fill</span>(<span class="pl-c1">0</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>)
● [ <span class="pl-c1">2022</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">09</span> <span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">39</span><span class="pl-k">:</span><span class="pl-c1">56</span> ] Loading cute<span class="pl-k">-</span>cube from file <span class="pl-k">./</span>cute<span class="pl-k">-</span>cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a<span class="pl-k">.</span>jld<span class="pl-k">...</span>
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Int64, <span class="pl-c1">3</span>}<span class="pl-k">:</span>
[:, :, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

[:, :, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

[:, :, <span class="pl-c1">3</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
</pre></div>
<h3 dir="auto"><a id="user-content-conditional-caching" class="anchor" aria-hidden="true" href="#conditional-caching"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Conditional caching</h3>
<p dir="auto">It is possible to cache the result of a function call based on the value returned by an
expression using the macro "@scache_if" as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; @scache_if true &quot;cute-cube&quot; &quot;./&quot; fill(0, 3, 3, 3)
● [ 2022-12-09 15:41:54 ] Loading cute-cube from file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld...
3×3×3 Array{Int64, 3}:
[:, :, 1] =
 0  0  0
 0  0  0
 0  0  0

[:, :, 2] =
 0  0  0
 0  0  0
 0  0  0

[:, :, 3] =
 0  0  0
 0  0  0
 0  0  0"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@scache_if</span> <span class="pl-c1">true</span> <span class="pl-s"><span class="pl-pds">"</span>cute-cube<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>./<span class="pl-pds">"</span></span> <span class="pl-c1">fill</span>(<span class="pl-c1">0</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>)
● [ <span class="pl-c1">2022</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">09</span> <span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">41</span><span class="pl-k">:</span><span class="pl-c1">54</span> ] Loading cute<span class="pl-k">-</span>cube from file <span class="pl-k">./</span>cute<span class="pl-k">-</span>cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a<span class="pl-k">.</span>jld<span class="pl-k">...</span>
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Int64, <span class="pl-c1">3</span>}<span class="pl-k">:</span>
[:, :, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

[:, :, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

[:, :, <span class="pl-c1">3</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span></pre></div>
<p dir="auto">but passing a <code>false</code> <code>condition</code> (note there is no loading log):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; @scache_if false &quot;cute-cube&quot; &quot;./&quot; fill(0, 3, 3, 3)
3×3×3 Array{Int64, 3}:
[:, :, 1] =
 0  0  0
 0  0  0
 0  0  0

[:, :, 2] =
 0  0  0
 0  0  0
 0  0  0

[:, :, 3] =
 0  0  0
 0  0  0
 0  0  0
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@scache_if</span> <span class="pl-c1">false</span> <span class="pl-s"><span class="pl-pds">"</span>cute-cube<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>./<span class="pl-pds">"</span></span> <span class="pl-c1">fill</span>(<span class="pl-c1">0</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>)
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Int64, <span class="pl-c1">3</span>}<span class="pl-k">:</span>
[:, :, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

[:, :, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

[:, :, <span class="pl-c1">3</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
</pre></div>
<p dir="auto">just substitute an expression for <code>true</code> and <code>false</code>.</p>
<h2 dir="auto"><a id="user-content-caching-function-result-using-jld2" class="anchor" aria-hidden="true" href="#caching-function-result-using-jld2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Caching function result using JLD2</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using SimpleCaching

julia&gt; SimpleCaching.settings.log = true;

julia&gt; @scachejld &quot;cute-cube&quot; &quot;./&quot; fill(0, 3, 3, 3)
● [ 2022-12-09 15:40:45 ] Computing cute-cube...
● [ 2022-12-09 15:40:45 ] Computed cute-cube in 0.0 seconds (00:00:00)
● [ 2022-12-09 15:40:45 ] Saving cute-cube to file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld[.tmp]...
3×3×3 Array{Int64, 3}:
[:, :, 1] =
 0  0  0
 0  0  0
 0  0  0

[:, :, 2] =
 0  0  0
 0  0  0
 0  0  0

[:, :, 3] =
 0  0  0
 0  0  0
 0  0  0

julia&gt; @scachejld &quot;cute-cube&quot; &quot;./&quot; fill(0, 3, 3, 3)
● [ 2022-12-09 15:40:47 ] Loading cute-cube from file ./cute-cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a.jld...
3×3×3 Array{Int64, 3}:
[:, :, 1] =
 0  0  0
 0  0  0
 0  0  0

[:, :, 2] =
 0  0  0
 0  0  0
 0  0  0

[:, :, 3] =
 0  0  0
 0  0  0
 0  0  0
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SimpleCaching

julia<span class="pl-k">&gt;</span> SimpleCaching<span class="pl-k">.</span>settings<span class="pl-k">.</span>log <span class="pl-k">=</span> <span class="pl-c1">true</span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@scachejld</span> <span class="pl-s"><span class="pl-pds">"</span>cute-cube<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>./<span class="pl-pds">"</span></span> <span class="pl-c1">fill</span>(<span class="pl-c1">0</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>)
● [ <span class="pl-c1">2022</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">09</span> <span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">40</span><span class="pl-k">:</span><span class="pl-c1">45</span> ] Computing cute<span class="pl-k">-</span>cube<span class="pl-k">...</span>
● [ <span class="pl-c1">2022</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">09</span> <span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">40</span><span class="pl-k">:</span><span class="pl-c1">45</span> ] Computed cute<span class="pl-k">-</span>cube <span class="pl-k">in</span> <span class="pl-c1">0.0</span> seconds (<span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">00</span>)
● [ <span class="pl-c1">2022</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">09</span> <span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">40</span><span class="pl-k">:</span><span class="pl-c1">45</span> ] Saving cute<span class="pl-k">-</span>cube to file <span class="pl-k">./</span>cute<span class="pl-k">-</span>cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a<span class="pl-k">.</span>jld[<span class="pl-k">.</span>tmp]<span class="pl-k">.</span><span class="pl-k">..</span>
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Int64, <span class="pl-c1">3</span>}<span class="pl-k">:</span>
[:, :, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

[:, :, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

[:, :, <span class="pl-c1">3</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@scachejld</span> <span class="pl-s"><span class="pl-pds">"</span>cute-cube<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>./<span class="pl-pds">"</span></span> <span class="pl-c1">fill</span>(<span class="pl-c1">0</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>)
● [ <span class="pl-c1">2022</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">09</span> <span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">40</span><span class="pl-k">:</span><span class="pl-c1">47</span> ] Loading cute<span class="pl-k">-</span>cube from file <span class="pl-k">./</span>cute<span class="pl-k">-</span>cube_4bbf9c2851f2c2b3954448f1a8085f6e3d40085add71f19640343885a8b7bd6a<span class="pl-k">.</span>jld<span class="pl-k">...</span>
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Int64, <span class="pl-c1">3</span>}<span class="pl-k">:</span>
[:, :, <span class="pl-c1">1</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

[:, :, <span class="pl-c1">2</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

[:, :, <span class="pl-c1">3</span>] <span class="pl-k">=</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
</pre></div>
<p dir="auto">Conditional caching is possible for JLD2 macro using <code>@scachejld_if</code>.</p>
</article></div>