<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-denumpyfyjl" class="anchor" aria-hidden="true" href="#denumpyfyjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Denumpyfy.jl</h1>
<p dir="auto">I hate translating numpy notebooks to Julia.</p>
<p dir="auto">I then spent <a href="https://xkcd.com/1205/" rel="nofollow">about 2 afternoons packing 20 regexes in to a trenchcoat</a> and calling it a Julia package so that others may join me in not fiddling with indexing of nasty, nasty "vectorized" code.</p>
<p dir="auto">My code is quite naive - it tries to be a bit smart about line by line regex replacing, and doesn't really handle global context or <code>self</code> rewriting - and likely won't. It was written with <strong>replacing tutorial numpy notebook tutorials in mind</strong>. If you are looking for something that is much more robust/heavy duty, please check out <a href="https://github.com/adsharma/py2many">Py2Jl.jl -&gt; py2many</a>. You can compare <code>Denumpyfy.jl</code> vs <code>py2many</code> with <code>puncture.jl</code> vs <code>tests/demopy2many.jl</code>, respectively. At time of writing, their AST parser is an unfinished copy/paste from their Rust transpiler, so please help out by filing PRs/issues over there.</p>
<p dir="auto">Use entirely at your own risk, and see some of the <code>tests/runtests.jl</code> to see what the package can help you out with.</p>
<p dir="auto">For example, this code in <code>test/puncture.py</code></p>
<div class="highlight highlight-source-python notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="for i in range(0, self.n_grid-1):
    for j in range(0, self.n_grid-1):
        for k in range(0, self.n_grid-1):
            delta_x = x[i, -1] ** 2 + y[j, -2] ** 2 + z[k, -3] ** 2"><pre><span class="pl-k">for</span> <span class="pl-s1">i</span> <span class="pl-c1">in</span> <span class="pl-en">range</span>(<span class="pl-c1">0</span>, <span class="pl-s1">self</span>.<span class="pl-s1">n_grid</span><span class="pl-c1">-</span><span class="pl-c1">1</span>):
    <span class="pl-k">for</span> <span class="pl-s1">j</span> <span class="pl-c1">in</span> <span class="pl-en">range</span>(<span class="pl-c1">0</span>, <span class="pl-s1">self</span>.<span class="pl-s1">n_grid</span><span class="pl-c1">-</span><span class="pl-c1">1</span>):
        <span class="pl-k">for</span> <span class="pl-s1">k</span> <span class="pl-c1">in</span> <span class="pl-en">range</span>(<span class="pl-c1">0</span>, <span class="pl-s1">self</span>.<span class="pl-s1">n_grid</span><span class="pl-c1">-</span><span class="pl-c1">1</span>):
            <span class="pl-s1">delta_x</span> <span class="pl-c1">=</span> <span class="pl-s1">x</span>[<span class="pl-s1">i</span>, <span class="pl-c1">-</span><span class="pl-c1">1</span>] <span class="pl-c1">**</span> <span class="pl-c1">2</span> <span class="pl-c1">+</span> <span class="pl-s1">y</span>[<span class="pl-s1">j</span>, <span class="pl-c1">-</span><span class="pl-c1">2</span>] <span class="pl-c1">**</span> <span class="pl-c1">2</span> <span class="pl-c1">+</span> <span class="pl-s1">z</span>[<span class="pl-s1">k</span>, <span class="pl-c1">-</span><span class="pl-c1">3</span>] <span class="pl-c1">**</span> <span class="pl-c1">2</span></pre></div>
<p dir="auto">will be turned into this with <code>denumpyfy("puncture.py")</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="for i in 1:self.n_grid
    for j in 1:self.n_grid
        for k in 1:self.n_grid
            Δ_x = x[i, end] ^ 2 + y[j, end-1] ^ 2 + z[k, end-2] ^ 2"><pre><span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>self<span class="pl-k">.</span>n_grid
    <span class="pl-k">for</span> j <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>self<span class="pl-k">.</span>n_grid
        <span class="pl-k">for</span> k <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>self<span class="pl-k">.</span>n_grid
            Δ_x <span class="pl-k">=</span> x[i, <span class="pl-c1">end</span>] <span class="pl-k">^</span> <span class="pl-c1">2</span> <span class="pl-k">+</span> y[j, <span class="pl-c1">end</span><span class="pl-k">-</span><span class="pl-c1">1</span>] <span class="pl-k">^</span> <span class="pl-c1">2</span> <span class="pl-k">+</span> z[k, <span class="pl-c1">end</span><span class="pl-k">-</span><span class="pl-c1">2</span>] <span class="pl-k">^</span> <span class="pl-c1">2</span></pre></div>
<p dir="auto">in a new file <code>puncture.jl</code>.</p>
<p dir="auto">There's <code>replace</code> rules for array indexing (with 1-index bumping), some ascii -&gt; Unicode replacements, <code>range(0,n-1):</code> to <code>1:n</code>, and the obvious arithmetic <code>**</code> to <code>^</code>.</p>
<p dir="auto">TL;DR:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="friendshipendedwithnumpy.jpg"><img src="friendshipendedwithnumpy.jpg" alt="You should be sponsoring me not reading this" title="No more need for vectorized code" style="max-width: 100%;"></a></p>
<hr>
<h3 dir="auto"><a id="user-content-sponsorship" class="anchor" aria-hidden="true" href="#sponsorship"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Sponsorship</h3>
<p dir="auto">If you want to see more of this work, consider sponsoring me via <a href="https://github.com/sponsors/miguelraz/">Github sponsors</a>.</p>
<h3 dir="auto"><a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgments</h3>
<p dir="auto">This work was done via nerdsnipe and support of <code>Brenhin Keller</code>.</p>
</article></div>