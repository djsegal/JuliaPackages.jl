<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://codecov.io/gh/corail-research/SeaPearl.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/38d4eeb30cd2ad1eecae3cb65eef27ff28dd4926cd7dd26f7ee80a7a61fa51db/68747470733a2f2f636f6465636f762e696f2f67682f636f7261696c2d72657365617263682f536561506561726c2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d324c51464232384c4856" alt="codecov" data-canonical-src="https://codecov.io/gh/corail-research/SeaPearl.jl/branch/master/graph/badge.svg?token=2LQFB28LHV" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/1a7fdad09eb2cde45a55ba0f6d0e9a2d9ef7ebc4b35cb0b14e2bfd03929cbf9d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f636f7261696c2d72657365617263682f536561506561726c2e6a6c"><img src="https://camo.githubusercontent.com/1a7fdad09eb2cde45a55ba0f6d0e9a2d9ef7ebc4b35cb0b14e2bfd03929cbf9d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f636f7261696c2d72657365617263682f536561506561726c2e6a6c" alt="license" data-canonical-src="https://img.shields.io/github/license/corail-research/SeaPearl.jl" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/aee4c4eaa36505953be8e92c01581f3b9db4a03cc68984ac4030b6a73d028aea/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f636f7261696c2d72657365617263682f536561506561726c2e6a6c2f646f63756d656e746174696f6e2e796d6c3f6c6162656c3d446f6373"><img src="https://camo.githubusercontent.com/aee4c4eaa36505953be8e92c01581f3b9db4a03cc68984ac4030b6a73d028aea/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f636f7261696c2d72657365617263682f536561506561726c2e6a6c2f646f63756d656e746174696f6e2e796d6c3f6c6162656c3d446f6373" alt="Docs" data-canonical-src="https://img.shields.io/github/actions/workflow/status/corail-research/SeaPearl.jl/documentation.yml?label=Docs" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/731f4b17b7a6c96f65e711c131dfc9ffeaea69fb1e4984af88f5c5672afbc107/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f636f7261696c2d72657365617263682f536561506561726c2e6a6c2f63692e796d6c3f6c6162656c3d4275696c6425323025324225323054657374"><img src="https://camo.githubusercontent.com/731f4b17b7a6c96f65e711c131dfc9ffeaea69fb1e4984af88f5c5672afbc107/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f636f7261696c2d72657365617263682f536561506561726c2e6a6c2f63692e796d6c3f6c6162656c3d4275696c6425323025324225323054657374" alt="Build" data-canonical-src="https://img.shields.io/github/actions/workflow/status/corail-research/SeaPearl.jl/ci.yml?label=Build%20%2B%20Test" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/69ed62db6c5858ab9775c70657fb173a0dc1e903ee2fe8612dd40c55e7392bec/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f636f7261696c2d72657365617263682f536561506561726c2e6a6c2f546167426f742e796d6c3f6c6162656c3d546167426f742532305472696767657273"><img src="https://camo.githubusercontent.com/69ed62db6c5858ab9775c70657fb173a0dc1e903ee2fe8612dd40c55e7392bec/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f636f7261696c2d72657365617263682f536561506561726c2e6a6c2f546167426f742e796d6c3f6c6162656c3d546167426f742532305472696767657273" alt="TagBot" data-canonical-src="https://img.shields.io/github/actions/workflow/status/corail-research/SeaPearl.jl/TagBot.yml?label=TagBot%20Triggers" style="max-width: 100%;"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="logo.png"><img src="logo.png" alt="drawing" width="200" style="max-width: 100%;"></a></p>
<p dir="auto">SeaPearl is a Constraint Programming solver that can use Reinforcement Learning agents as value-selection heuristics, using graphs as inputs for the agent's approximator. It is to be seen as a tool for researchers that gives the possibility to go above and beyond what has already been done with it.</p>
<p dir="auto">The paper accompanying this solver can be found on the <a href="https://arxiv.org/abs/2102.09193v1" rel="nofollow">arXiv</a>. If you use SeaPearl in your research, please cite our work.</p>
<p dir="auto">The RL agents are defined using <a href="https://github.com/JuliaReinforcementLearning/ReinforcementLearning.jl">ReinforcementLearning.jl</a>, their inputs are dealt with using  <a href="https://github.com/FluxML/Flux.jl">Flux.jl</a>. The CP part, inspired from <a href="http://www.minicp.org/" rel="nofollow">MiniCP</a>, is focused on readability. The code is meant to be clear and modular so that researchers could easily get access to CP data and use it as input for their ML model.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="]add SeaPearl"><pre>]add SeaPearl</pre></div>
<h2 dir="auto"><a id="user-content-use" class="anchor" aria-hidden="true" href="#use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Use</h2>
<p dir="auto">Working examples can be found in <a href="https://github.com/corail-research/SeaPearlZoo">SeaPearlZoo</a> and documentation can be found <a href="https://corail-research.github.io/SeaPearl.jl/dev/" rel="nofollow">here</a>.</p>
<p dir="auto">SeaPearl can be used either as a classic CP solver that uses predefined variable and value selection heuristics or as Reinforcement Learning driven CP solver that is capable of learning through solving automatically generated instances of a given problem (knapsack, tsptw, graphcoloring, EternityII ...).</p>
<h3 dir="auto"><a id="user-content-seapearl-as-a-classic-cp-solver-" class="anchor" aria-hidden="true" href="#seapearl-as-a-classic-cp-solver-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SeaPearl as a classic CP solver :</h3>
<p dir="auto">To use SeaPearl as a classic CP solver, one needs to  :</p>
<ol dir="auto">
<li>declare a variable selection heuristic :</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="YourVariableSelectionHeuristic{TakeObjective} &lt;: SeaPearl.AbstractVariableSelection{TakeObjective}"><pre>YourVariableSelectionHeuristic{TakeObjective} <span class="pl-k">&lt;:</span> <span class="pl-c1">SeaPearl.AbstractVariableSelection{TakeObjective}</span></pre></div>
<ol start="2" dir="auto">
<li>declare a value selection heuristic :</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="BasicHeuristic &lt;: ValueSelection"><pre>BasicHeuristic <span class="pl-k">&lt;:</span> <span class="pl-c1">ValueSelection</span></pre></div>
<ol start="3" dir="auto">
<li>create a Constraint Programming Model :</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="trailer = SeaPearl.Trailer()
model = SeaPearl.CPModel(trailer)

#create variable : 
SeaPearl.addVariable!(...)

#add constraints : 
SeaPearl.addConstraint!(model, SeaPearl.AbstractConstraint(...))

#add optionnal objective function : 
SeaPearl.addObjective!(model, ObjectiveVar)"><pre>trailer <span class="pl-k">=</span> SeaPearl<span class="pl-k">.</span><span class="pl-c1">Trailer</span>()
model <span class="pl-k">=</span> SeaPearl<span class="pl-k">.</span><span class="pl-c1">CPModel</span>(trailer)

<span class="pl-c"><span class="pl-c">#</span>create variable : </span>
SeaPearl<span class="pl-k">.</span><span class="pl-c1">addVariable!</span>(<span class="pl-k">...</span>)

<span class="pl-c"><span class="pl-c">#</span>add constraints : </span>
SeaPearl<span class="pl-k">.</span><span class="pl-c1">addConstraint!</span>(model, SeaPearl<span class="pl-k">.</span><span class="pl-c1">AbstractConstraint</span>(<span class="pl-k">...</span>))

<span class="pl-c"><span class="pl-c">#</span>add optionnal objective function : </span>
SeaPearl<span class="pl-k">.</span><span class="pl-c1">addObjective!</span>(model, ObjectiveVar)</pre></div>
<h3 dir="auto"><a id="user-content-seapearl-as-a-rl-driven-cp-solver-" class="anchor" aria-hidden="true" href="#seapearl-as-a-rl-driven-cp-solver-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SeaPearl as a RL-driven CP solver :</h3>
<p dir="auto">To use SeaPearl as a RL-driven CP solver, one needs to  :</p>
<ol dir="auto">
<li>declare a variable selection heuristic :</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="CustomVariableSelectionHeuristic{TakeObjective} &lt;: SeaPearl.AbstractVariableSelection{TakeObjective}"><pre>CustomVariableSelectionHeuristic{TakeObjective} <span class="pl-k">&lt;:</span> <span class="pl-c1">SeaPearl.AbstractVariableSelection{TakeObjective}</span></pre></div>
<ol start="2" dir="auto">
<li>declare a value selection learnedheuristic :</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="LearnedHeuristic{SR&lt;:AbstractStateRepresentation, R&lt;:AbstractReward, A&lt;:ActionOutput} &lt;: ValueSelection"><pre>LearnedHeuristic{SR<span class="pl-k">&lt;:</span><span class="pl-c1">AbstractStateRepresentation</span>, R<span class="pl-k">&lt;:</span><span class="pl-c1">AbstractReward</span>, A<span class="pl-k">&lt;:</span><span class="pl-c1">ActionOutput</span>} <span class="pl-k">&lt;:</span> <span class="pl-c1">ValueSelection</span></pre></div>
<ol start="3" dir="auto">
<li>define an agent :</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="agent = RL.Agent(
policy=(...),
trajectory=(...),
)"><pre>agent <span class="pl-k">=</span> RL<span class="pl-k">.</span><span class="pl-c1">Agent</span>(
policy<span class="pl-k">=</span>(<span class="pl-k">...</span>),
trajectory<span class="pl-k">=</span>(<span class="pl-k">...</span>),
)</pre></div>
<ol start="4" dir="auto">
<li><em>optionally</em>, declare a custom reward :</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="CustomReward &lt;: SeaPearl.AbstractReward "><pre>CustomReward <span class="pl-k">&lt;:</span> <span class="pl-c1">SeaPearl.AbstractReward</span> </pre></div>
<ol start="5" dir="auto">
<li><em>optionally</em>, declare a custom StateRepresentation ( instead of the Default tripartite-graph representation ) :</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="CustomStateRepresentation &lt;: SeaPearl.AbstractStateRepresentation"><pre>CustomStateRepresentation <span class="pl-k">&lt;:</span> <span class="pl-c1">SeaPearl.AbstractStateRepresentation</span></pre></div>
<ol start="6" dir="auto">
<li><em>optionally</em>, declare a custom featurization for the StateRepresentation :</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="CustomFeaturization &lt;: SeaPearl.AbstractFeaturization"><pre>CustomFeaturization <span class="pl-k">&lt;:</span> <span class="pl-c1">SeaPearl.AbstractFeaturization</span></pre></div>
<ol start="8" dir="auto">
<li>create a generator for your given problem, that will create different instances of the specific problem used during the learning process.</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="CustomProblemGenerator &lt;: AbstractModelGenerator"><pre>CustomProblemGenerator <span class="pl-k">&lt;:</span> <span class="pl-c1">AbstractModelGenerator</span></pre></div>
<ol start="9" dir="auto">
<li>set a number of training epochs, declare an evaluator, a Strategy, a metric for benchmarking</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="nb_epochs = 3000
CustomStrategy &lt;: SearchStrategy #DFS, RBS, ILDS 

CustomEvaluator &lt;: AbstractEvaluator #or use predefined one : SeaPearl.SameInstancesEvaluator(...)
function CustomMetricsFun"><pre>nb_epochs <span class="pl-k">=</span> <span class="pl-c1">3000</span>
CustomStrategy <span class="pl-k">&lt;:</span> <span class="pl-c1">SearchStrategy</span> <span class="pl-c"><span class="pl-c">#</span>DFS, RBS, ILDS </span>

CustomEvaluator <span class="pl-k">&lt;:</span> <span class="pl-c1">AbstractEvaluator</span> <span class="pl-c"><span class="pl-c">#</span>or use predefined one : SeaPearl.SameInstancesEvaluator(...)</span>
<span class="pl-k">function</span> CustomMetricsFun</pre></div>
<ol start="9" dir="auto">
<li>launch the training :</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="metricsArray, eval_metricsArray = SeaPearl.train!(
valueSelectionArray=valueSelectionArray,
generator=tsptw_generator,
nbEpisodes=nbEpisodes,
strategy=strategy,
eval_strategy=eval_strategy,
variableHeuristic=variableSelection,
out_solver = true,
verbose = true,
evaluator=SeaPearl.SameInstancesEvaluator(valueSelectionArray,tsptw_generator; evalFreq = evalFreq, nbInstances = nbInstances, evalTimeOut = evalTimeOut),
restartPerInstances = restartPerInstances
)"><pre>metricsArray, eval_metricsArray <span class="pl-k">=</span> SeaPearl<span class="pl-k">.</span><span class="pl-c1">train!</span>(
valueSelectionArray<span class="pl-k">=</span>valueSelectionArray,
generator<span class="pl-k">=</span>tsptw_generator,
nbEpisodes<span class="pl-k">=</span>nbEpisodes,
strategy<span class="pl-k">=</span>strategy,
eval_strategy<span class="pl-k">=</span>eval_strategy,
variableHeuristic<span class="pl-k">=</span>variableSelection,
out_solver <span class="pl-k">=</span> <span class="pl-c1">true</span>,
verbose <span class="pl-k">=</span> <span class="pl-c1">true</span>,
evaluator<span class="pl-k">=</span>SeaPearl<span class="pl-k">.</span><span class="pl-c1">SameInstancesEvaluator</span>(valueSelectionArray,tsptw_generator; evalFreq <span class="pl-k">=</span> evalFreq, nbInstances <span class="pl-k">=</span> nbInstances, evalTimeOut <span class="pl-k">=</span> evalTimeOut),
restartPerInstances <span class="pl-k">=</span> restartPerInstances
)</pre></div>
<p dir="auto">)</p>
<h2 dir="auto"><a id="user-content-contributing-to-seapearl" class="anchor" aria-hidden="true" href="#contributing-to-seapearl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing to SeaPearl</h2>
<p dir="auto">All contributions are welcome! Have a look at our <a href="https://github.com/corail-research/SeaPearl.jl/blob/master/CONTRIBUTING.md">contributing guidelines</a>.</p>
</article></div>