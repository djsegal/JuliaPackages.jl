<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-complexphaseportraitjl" class="anchor" aria-hidden="true" href="#complexphaseportraitjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ComplexPhasePortrait.jl</h1>
<p dir="auto"><a href="https://github.com/JuliaHolomorphic/ComplexPhasePortrait.jl/actions"><img src="https://github.com/JuliaHolomorphic/ComplexPhasePortrait.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaHolomorphic/ComplexPhasePortrait.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/66cd32c262785bc8d98e39d1bf9aebaeead081a1812ee3795e9162e3402447ee/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961486f6c6f6d6f72706869632f436f6d706c65785068617365506f7274726169742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaHolomorphic/ComplexPhasePortrait.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package is a <a href="http://julialang.org" rel="nofollow">Julia</a> implementation of the phase portrait ideas presented in Elias Wegert's book "<a href="http://www.visual.wegert.com" rel="nofollow">Visual Complex Functions</a>".</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">From the Julia command prompt:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.clone(&quot;git://github.com/JuliaHolomorphic/ComplexPhasePortrait.jl.git&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>git://github.com/JuliaHolomorphic/ComplexPhasePortrait.jl.git<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">There is so far one exported function, <code>portrait</code>, and here I will try to detail its use. First we need function data over a grid.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ComplexPhasePortrait

nx = 1000
x = range(-1, stop=1, length=nx)
Z = x' .+ reverse(x)*im

f = z -&gt; (z - 0.5im)^2 * (z + 0.5+0.5im)/z
fz = f.(Z)"><pre><span class="pl-k">using</span> ComplexPhasePortrait

nx <span class="pl-k">=</span> <span class="pl-c1">1000</span>
x <span class="pl-k">=</span> <span class="pl-c1">range</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>, stop<span class="pl-k">=</span><span class="pl-c1">1</span>, length<span class="pl-k">=</span>nx)
Z <span class="pl-k">=</span> x<span class="pl-k">'</span> <span class="pl-k">.+</span> <span class="pl-c1">reverse</span>(x)<span class="pl-k">*</span>im

f <span class="pl-k">=</span> z <span class="pl-k">-&gt;</span> (z <span class="pl-k">-</span> <span class="pl-c1">0.5im</span>)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> (z <span class="pl-k">+</span> <span class="pl-c1">0.5</span><span class="pl-k">+</span><span class="pl-c1">0.5im</span>)<span class="pl-k">/</span>z
fz <span class="pl-k">=</span> <span class="pl-c1">f</span>.(Z)</pre></div>
<p dir="auto">Now a basic phase plot.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="img = portrait(fz)"><pre>img <span class="pl-k">=</span> <span class="pl-c1">portrait</span>(fz)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="doc/figures/proper.png"><img src="doc/figures/proper.png" alt="proper phase plot" style="max-width: 100%;"></a></p>
<p dir="auto">Now for a basic plot using <a href="http://dlmf.nist.gov/help/vrml/aboutcolor" rel="nofollow">NIST coloring</a>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="img = portrait(fz, ctype=&quot;nist&quot;)"><pre>img <span class="pl-k">=</span> <span class="pl-c1">portrait</span>(fz, ctype<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>nist<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="doc/figures/nist.png"><img src="doc/figures/nist.png" alt="nist coloring" style="max-width: 100%;"></a></p>
<p dir="auto">Lines of constant phase are given by</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="img = portrait(fz, PTstepphase)"><pre>img <span class="pl-k">=</span> <span class="pl-c1">portrait</span>(fz, PTstepphase)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="doc/figures/stepphase.png"><img src="doc/figures/stepphase.png" alt="constant phase" style="max-width: 100%;"></a></p>
<p dir="auto">Lines of constant modulus are given by</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="img = portrait(fz, PTstepmod)"><pre>img <span class="pl-k">=</span> <span class="pl-c1">portrait</span>(fz, PTstepmod)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="doc/figures/stepmod.png"><img src="doc/figures/stepmod.png" alt="constant modulus" style="max-width: 100%;"></a></p>
<p dir="auto">Finally, a conformal grid is given by</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="img = portrait(fz, PTcgrid)"><pre>img <span class="pl-k">=</span> <span class="pl-c1">portrait</span>(fz, PTcgrid)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="doc/figures/cgrid.png"><img src="doc/figures/cgrid.png" alt="conformal grid" style="max-width: 100%;"></a></p>
</article></div>