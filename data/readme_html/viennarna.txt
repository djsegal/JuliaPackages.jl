<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-julia-interface-to-the-viennarna-library" class="anchor" aria-hidden="true" href="#julia-interface-to-the-viennarna-library"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Julia interface to the ViennaRNA library</h1>
<p dir="auto">Unofficial Julia interface to the
<a href="https://github.com/ViennaRNA/ViennaRNA">ViennaRNA</a> library for RNA
secondary structure prediction and analysis.  Please cite the original
ViennaRNA publications if you use this library.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Install ViennaRNA from the Julia package REPL, which can be accessed
by pressing <code>]</code> from the Julia REPL:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="add ViennaRNA"><pre class="notranslate"><code>add ViennaRNA
</code></pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ViennaRNA, Unitful"><pre><span class="pl-k">using</span> ViennaRNA, Unitful</pre></div>
<p dir="auto">The <code>Unitful</code> library is needed to be able to specify units with
<code>@u_str</code>, e.g. <code>4u"kcal/mol"</code> or <code>37u"°C"</code>.  You can get the degree
symbol <code>°</code> by typing <code>\degree</code> and pressing the TAB key in the REPL or
in an editor with Julia syntax support.</p>
<p dir="auto">The original C API functions can be found in the submodule
<code>ViennaRNA.LibRNA</code>.  Most functions can be called with a String
containing the RNA sequence instead of a <code>FoldCompound</code>,
e.g. <code>mfe("GGGAAACCC")</code>.</p>
<h3 dir="auto"><a id="user-content-foldcompound" class="anchor" aria-hidden="true" href="#foldcompound"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FoldCompound</h3>
<p dir="auto">A <code>FoldCompound</code> encapsulates nucleic acid strands and model details,
such as energy parameters, temperature, etc.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="fc = FoldCompound(&quot;GGGGGAAAAACCCCCC&quot;;
                  options=[:mfe, :pf],
                  temperature=37u&quot;°C&quot;,
                  uniq_ML=true,
                  circular=false)"><pre>fc <span class="pl-k">=</span> <span class="pl-c1">FoldCompound</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGGGAAAAACCCCCC<span class="pl-pds">"</span></span>;
                  options<span class="pl-k">=</span>[<span class="pl-c1">:mfe</span>, <span class="pl-c1">:pf</span>],
                  temperature<span class="pl-k">=</span><span class="pl-c1">37</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>°C<span class="pl-pds">"</span></span>,
                  uniq_ML<span class="pl-k">=</span><span class="pl-c1">true</span>,
                  circular<span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<p dir="auto">Important keyword arguments</p>
<ul dir="auto">
<li>
<p dir="auto"><code>options</code> is a subset of <code>[:default, :eval_only, :hybrid, :mfe, :pf, :window]</code>.</p>
</li>
<li>
<p dir="auto"><code>temperature</code> is used to rescale the free energies with the formula
<code>ΔG = ΔH - TΔS</code> (the energy parameter sets contain enthalpy and
entropy contributions). The default is <code>37u"°C"</code></p>
</li>
</ul>
<p dir="auto">Model details (additional keyword arguments):</p>
<ul dir="auto">
<li><code>circular</code>: determines if the RNA strand is circular, i.e. the
5'-end and 3'-end are covalently bonded. Default is <code>false</code>.</li>
<li><code>dangles</code>: how to treat dangling base pairs in multiloops and the
exterior loop. Can be 0, 1, 2, or 3. See ViennaRNA docs for
details. Default is <code>2</code>.</li>
<li><code>gquadruplex</code>: allow G-quadruplexes in predictions. Default is
<code>false</code>.</li>
<li><code>log_ML</code>: use logarithmic energy model for multiloops. Default is
<code>false</code>.</li>
<li><code>max_bp_span</code>: maximum number of bases over which a basepair can
span. Default value is <code>-1</code> (which means unlimited).</li>
<li><code>min_loop_length</code>: the minimum size of a loop (without the closing
base pair). Default is <code>3</code>.</li>
<li><code>no_GU_basepairs</code>: disallow G-U basepairs. Default is <code>false</code>.</li>
<li><code>no_GU_closure</code>: disallow G-U basepairs as closing pairs for
loops. Default is <code>false</code>.</li>
<li><code>no_lonely_pairs</code>: disallow isolated base pairs. Default is <code>false</code>.</li>
<li><code>special_hairpins</code>: use special hairpin energies for certain tri-,
tetra- and hexloops. Default is <code>true</code>.</li>
<li><code>uniq_ML</code>: use unique decomposition for multiloops, needed for
<code>sample_structures</code> and <code>subopt</code>. Default is <code>false</code>.</li>
<li><code>window_size</code>: window size to be used for local calculations
performed in a window moving over the sequence. This value is
ignored unless the <code>:window</code> option is set in the <code>FoldCompound</code>
<code>options</code>. The default value for <code>window_size</code> is <code>-1</code>.</li>
</ul>
<h4 dir="auto"><a id="user-content-changing-the-energy-parameter-set" class="anchor" aria-hidden="true" href="#changing-the-energy-parameter-set"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Changing the energy parameter set</h4>
<p dir="auto">ViennaRNA stores energy parameters in global variables after loading
them from a file.  Each time a new <code>FoldCompound</code> is created, the
parameters are copied from the global variables and saved inside the
<code>FoldCompound</code>.</p>
<p dir="auto">The global variables storing energy parameters can be changed by
calling a function specific to each parameter set, or via a Symbol
with <code>ViennaRNA.params_load(:RNA_Turner1999)</code>. Subsequent calls to
<code>FoldCompound</code> will use the new parameters and store a copy of the
parameters in the newly created <code>FoldCompound</code>.</p>
<p dir="auto">The default energy set loaded on startup is <code>:RNA_Turner2004</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ViennaRNA.params_load_defaults()  # default is :RNA_Turner2004
ViennaRNA.params_load_DNA_Mathews1999()
ViennaRNA.params_load_DNA_Mathews2004()
ViennaRNA.params_load_RNA_Andronescu2007()
ViennaRNA.params_load_RNA_Langdon2018()
ViennaRNA.params_load_RNA_Turner1999()
ViennaRNA.params_load_RNA_Turner2004()
ViennaRNA.params_load_RNA_misc_special_hairpins()

ViennaRNA.params_load(:DNA_Mathews2004)
# Options are
#   :DNA_Mathews1999, :DNA_Mathews2004,
#   :RNA_Andronescu2007, :RNA_Langdon2018,
#   :RNA_Turner1999, :RNA_Turner2004"><pre>ViennaRNA<span class="pl-k">.</span><span class="pl-c1">params_load_defaults</span>()  <span class="pl-c"><span class="pl-c">#</span> default is :RNA_Turner2004</span>
ViennaRNA<span class="pl-k">.</span><span class="pl-c1">params_load_DNA_Mathews1999</span>()
ViennaRNA<span class="pl-k">.</span><span class="pl-c1">params_load_DNA_Mathews2004</span>()
ViennaRNA<span class="pl-k">.</span><span class="pl-c1">params_load_RNA_Andronescu2007</span>()
ViennaRNA<span class="pl-k">.</span><span class="pl-c1">params_load_RNA_Langdon2018</span>()
ViennaRNA<span class="pl-k">.</span><span class="pl-c1">params_load_RNA_Turner1999</span>()
ViennaRNA<span class="pl-k">.</span><span class="pl-c1">params_load_RNA_Turner2004</span>()
ViennaRNA<span class="pl-k">.</span><span class="pl-c1">params_load_RNA_misc_special_hairpins</span>()

ViennaRNA<span class="pl-k">.</span><span class="pl-c1">params_load</span>(<span class="pl-c1">:DNA_Mathews2004</span>)
<span class="pl-c"><span class="pl-c">#</span> Options are</span>
<span class="pl-c"><span class="pl-c">#</span>   :DNA_Mathews1999, :DNA_Mathews2004,</span>
<span class="pl-c"><span class="pl-c">#</span>   :RNA_Andronescu2007, :RNA_Langdon2018,</span>
<span class="pl-c"><span class="pl-c">#</span>   :RNA_Turner1999, :RNA_Turner2004</span></pre></div>
<h4 dir="auto"><a id="user-content-multiple-strands" class="anchor" aria-hidden="true" href="#multiple-strands"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Multiple strands</h4>
<p dir="auto">Mutiple strands can be given by separating them with an <code>&amp;</code>, e.g.
<code>FoldCompound("GGGG&amp;CCCC")</code>.</p>
<h4 dir="auto"><a id="user-content-comparative-folding-with-an-msa-alifold" class="anchor" aria-hidden="true" href="#comparative-folding-with-an-msa-alifold"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Comparative folding with an MSA (alifold)</h4>
<p dir="auto">Pass multiple sequences to the FoldCompound constructor for comparative mode (alifold):
<code>FoldCompound(["GG-GAAAACCCC", "GCCGAAA-CGGC"])</code>.</p>
<p dir="auto">It is currently not possible to have multiple strands in alifold mode.</p>
<h3 dir="auto"><a id="user-content-minimum-free-energy-structure-mfe" class="anchor" aria-hidden="true" href="#minimum-free-energy-structure-mfe"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Minimum free energy structure (MFE)</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# please excuse the excess precision printed when displaying -9.4 kcal/mol
mfe(fc)  # =&gt; (&quot;(((((.....))))).&quot;, -9.399999618530273 kcal mol^-1)"><pre><span class="pl-c"><span class="pl-c">#</span> please excuse the excess precision printed when displaying -9.4 kcal/mol</span>
<span class="pl-c1">mfe</span>(fc)  <span class="pl-c"><span class="pl-c">#</span> =&gt; ("(((((.....))))).", -9.399999618530273 kcal mol^-1)</span></pre></div>
<h3 dir="auto"><a id="user-content-partition-function" class="anchor" aria-hidden="true" href="#partition-function"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Partition function</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="partfn(fc)  # =&gt; (&quot;(((((.....})))),&quot;, -9.81672180213034 kcal mol^-1)"><pre><span class="pl-c1">partfn</span>(fc)  <span class="pl-c"><span class="pl-c">#</span> =&gt; ("(((((.....})))),", -9.81672180213034 kcal mol^-1)</span></pre></div>
<h3 dir="auto"><a id="user-content-free-energy-change-of-folding-into-a-structure" class="anchor" aria-hidden="true" href="#free-energy-change-of-folding-into-a-structure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Free energy change of folding into a structure</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="energy(fc, &quot;((((.......)))).&quot;)  # =&gt; -6.199999809265137 kcal mol^-1"><pre><span class="pl-c1">energy</span>(fc, <span class="pl-s"><span class="pl-pds">"</span>((((.......)))).<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; -6.199999809265137 kcal mol^-1</span></pre></div>
<h3 dir="auto"><a id="user-content-basepair-probabilities" class="anchor" aria-hidden="true" href="#basepair-probabilities"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basepair probabilities</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="bpp(fc)  # =&gt; 16×16 Matrix{Float64}"><pre><span class="pl-c1">bpp</span>(fc)  <span class="pl-c"><span class="pl-c">#</span> =&gt; 16×16 Matrix{Float64}</span></pre></div>
<h3 dir="auto"><a id="user-content-boltzmann-probability-of-a-structure" class="anchor" aria-hidden="true" href="#boltzmann-probability-of-a-structure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Boltzmann probability of a structure</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="prob_of_structure(fc, &quot;(((((.....))))).&quot;)  # =&gt; 0.5085737925408758"><pre><span class="pl-c1">prob_of_structure</span>(fc, <span class="pl-s"><span class="pl-pds">"</span>(((((.....))))).<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; 0.5085737925408758</span></pre></div>
<h3 dir="auto"><a id="user-content-ensemble-defect" class="anchor" aria-hidden="true" href="#ensemble-defect"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Ensemble defect</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ensemble_defect(fc, &quot;(((((.....))))).&quot;)  # =&gt; 0.33085374128228884"><pre><span class="pl-c1">ensemble_defect</span>(fc, <span class="pl-s"><span class="pl-pds">"</span>(((((.....))))).<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; 0.33085374128228884</span></pre></div>
<h3 dir="auto"><a id="user-content-sample-structures-probabilistic--stochastic-backtrack" class="anchor" aria-hidden="true" href="#sample-structures-probabilistic--stochastic-backtrack"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Sample structures (probabilistic / stochastic backtrack)</h3>
<p dir="auto">Sample from Boltzmann ensemble of secondary structures</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="sample_structures(fc)                         # =&gt; [ &quot;((((......))))..&quot; ]
sample_structures(fc; options=:nonredundant,
                      num_samples=20)         # =&gt; 20-element Vector{String}"><pre><span class="pl-c1">sample_structures</span>(fc)                         <span class="pl-c"><span class="pl-c">#</span> =&gt; [ "((((......)))).." ]</span>
<span class="pl-c1">sample_structures</span>(fc; options<span class="pl-k">=</span><span class="pl-c1">:nonredundant</span>,
                      num_samples<span class="pl-k">=</span><span class="pl-c1">20</span>)         <span class="pl-c"><span class="pl-c">#</span> =&gt; 20-element Vector{String}</span></pre></div>
<h3 dir="auto"><a id="user-content-suboptimal-structures" class="anchor" aria-hidden="true" href="#suboptimal-structures"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Suboptimal structures</h3>
<p dir="auto">All suboptimal structures with energies delta above the MFE structure</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="subopt(fc; delta=4u&quot;kcal/mol&quot;)  # =&gt; Vector{Tuple{String, Quantity}}"><pre><span class="pl-c1">subopt</span>(fc; delta<span class="pl-k">=</span><span class="pl-c1">4</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>kcal/mol<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; Vector{Tuple{String, Quantity}}</span></pre></div>
<p dir="auto">Suboptimal structures with the method of Zuker</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="subopt_zuker(fc)  # =&gt; Vector{Tuple{String, Quantity}}"><pre><span class="pl-c1">subopt_zuker</span>(fc)  <span class="pl-c"><span class="pl-c">#</span> =&gt; Vector{Tuple{String, Quantity}}</span></pre></div>
<h3 dir="auto"><a id="user-content-sliding-window-prediction-of-mfe" class="anchor" aria-hidden="true" href="#sliding-window-prediction-of-mfe"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Sliding window prediction of MFE</h3>
<p dir="auto"><code>mfe_window</code> saves all the results in a <code>Vector</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="seq = &quot;G&quot;^50 * &quot;A&quot;^4 * &quot;C&quot;^50
mfe_window(seq; window_size=30)
fc = FoldCompound(seq; options=[:default, :window], window_size=30)
mfe_window(fc)  # =&gt; Vector{ResultWindowMFE}"><pre>seq <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>G<span class="pl-pds">"</span></span><span class="pl-k">^</span><span class="pl-c1">50</span> <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span><span class="pl-k">^</span><span class="pl-c1">4</span> <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>C<span class="pl-pds">"</span></span><span class="pl-k">^</span><span class="pl-c1">50</span>
<span class="pl-c1">mfe_window</span>(seq; window_size<span class="pl-k">=</span><span class="pl-c1">30</span>)
fc <span class="pl-k">=</span> <span class="pl-c1">FoldCompound</span>(seq; options<span class="pl-k">=</span>[<span class="pl-c1">:default</span>, <span class="pl-c1">:window</span>], window_size<span class="pl-k">=</span><span class="pl-c1">30</span>)
<span class="pl-c1">mfe_window</span>(fc)  <span class="pl-c"><span class="pl-c">#</span> =&gt; Vector{ResultWindowMFE}</span></pre></div>
<p dir="auto"><code>mfe_window_channel</code> returns a <code>Channel</code> that can be used to
iteratively process the results.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="seq = &quot;G&quot;^50 * &quot;A&quot;^4 * &quot;C&quot;^50
chan = mfe_window_channel(seq; window_size=30)
take!(chan)
fc = FoldCompound(seq; options=[:default, :window], window_size=30)
chan = mfe_window_channel(fc)
take!(chan)"><pre>seq <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>G<span class="pl-pds">"</span></span><span class="pl-k">^</span><span class="pl-c1">50</span> <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span><span class="pl-k">^</span><span class="pl-c1">4</span> <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>C<span class="pl-pds">"</span></span><span class="pl-k">^</span><span class="pl-c1">50</span>
chan <span class="pl-k">=</span> <span class="pl-c1">mfe_window_channel</span>(seq; window_size<span class="pl-k">=</span><span class="pl-c1">30</span>)
<span class="pl-c1">take!</span>(chan)
fc <span class="pl-k">=</span> <span class="pl-c1">FoldCompound</span>(seq; options<span class="pl-k">=</span>[<span class="pl-c1">:default</span>, <span class="pl-c1">:window</span>], window_size<span class="pl-k">=</span><span class="pl-c1">30</span>)
chan <span class="pl-k">=</span> <span class="pl-c1">mfe_window_channel</span>(fc)
<span class="pl-c1">take!</span>(chan)</pre></div>
<h3 dir="auto"><a id="user-content-neighboring-structures" class="anchor" aria-hidden="true" href="#neighboring-structures"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Neighboring structures</h3>
<p dir="auto">Move set to reach neighboring structures of a given structure</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="neighbors(fc, Pairtable(&quot;((.....))&quot;))  # =&gt; Vector{Vector{Tuple{Int,Int}}}"><pre><span class="pl-c1">neighbors</span>(fc, <span class="pl-c1">Pairtable</span>(<span class="pl-s"><span class="pl-pds">"</span>((.....))<span class="pl-pds">"</span></span>))  <span class="pl-c"><span class="pl-c">#</span> =&gt; Vector{Vector{Tuple{Int,Int}}}</span></pre></div>
<h3 dir="auto"><a id="user-content-basepair-distance-between-secondary-structures" class="anchor" aria-hidden="true" href="#basepair-distance-between-secondary-structures"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basepair distance between secondary structures</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="bp_distance(&quot;....&quot;, &quot;(())&quot;)  # =&gt; 2"><pre><span class="pl-c1">bp_distance</span>(<span class="pl-s"><span class="pl-pds">"</span>....<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>(())<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; 2</span></pre></div>
<h3 dir="auto"><a id="user-content-tree-edit-distance-between-secondary-structures" class="anchor" aria-hidden="true" href="#tree-edit-distance-between-secondary-structures"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tree edit distance between secondary structures</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="tree_edit_dist(&quot;(..)&quot;, &quot;....&quot;)  # =&gt; 4.0f0"><pre><span class="pl-c1">tree_edit_dist</span>(<span class="pl-s"><span class="pl-pds">"</span>(..)<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>....<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; 4.0f0</span></pre></div>
<h3 dir="auto"><a id="user-content-mean-basepair-distance" class="anchor" aria-hidden="true" href="#mean-basepair-distance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Mean basepair distance</h3>
<p dir="auto">Mean basepair distance of all structures to each other, weighted by
the structure's Boltzmann probabilities</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="mean_bp_distance(fc)  # =&gt; 5.266430215905888"><pre><span class="pl-c1">mean_bp_distance</span>(fc)  <span class="pl-c"><span class="pl-c">#</span> =&gt; 5.266430215905888</span></pre></div>
<h3 dir="auto"><a id="user-content-centroid-structure" class="anchor" aria-hidden="true" href="#centroid-structure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Centroid structure</h3>
<p dir="auto">Centroid structure of ensemble: structure with smallest sum of
base-pair distances weighted by Boltzmann probabilities:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="centroid(fc)  # =&gt; (&quot;(((((.....))))).&quot;, 4.799131457924728)"><pre><span class="pl-c1">centroid</span>(fc)  <span class="pl-c"><span class="pl-c">#</span> =&gt; ("(((((.....))))).", 4.799131457924728)</span></pre></div>
<h3 dir="auto"><a id="user-content-maximum-expected-accuracy-mea-structure" class="anchor" aria-hidden="true" href="#maximum-expected-accuracy-mea-structure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Maximum expected accuracy (MEA) structure</h3>
<p dir="auto">The gamma parameter trades off specificity (low gamma) and sensitivity (high gamma).</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="mea(fc; gamma=1.0)  # =&gt; (&quot;(((((.....))))).&quot;, 10.706348f0)"><pre><span class="pl-c1">mea</span>(fc; gamma<span class="pl-k">=</span><span class="pl-c1">1.0</span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; ("(((((.....))))).", 10.706348f0)</span></pre></div>
<h3 dir="auto"><a id="user-content-heat-capacity-calculation" class="anchor" aria-hidden="true" href="#heat-capacity-calculation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Heat capacity calculation</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# starting temperature, end temperature, temperature increment
heat_capacity(fc, 10u&quot;°C&quot;, 60u&quot;°C&quot;)  # =&gt; Vector{Tuple{Quantity,Quantity}}
heat_capacity(fc, 10u&quot;°C&quot;, 60u&quot;°C&quot;, 1u&quot;°C&quot;; mpoints=5)"><pre><span class="pl-c"><span class="pl-c">#</span> starting temperature, end temperature, temperature increment</span>
<span class="pl-c1">heat_capacity</span>(fc, <span class="pl-c1">10</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>°C<span class="pl-pds">"</span></span>, <span class="pl-c1">60</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>°C<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; Vector{Tuple{Quantity,Quantity}}</span>
<span class="pl-c1">heat_capacity</span>(fc, <span class="pl-c1">10</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>°C<span class="pl-pds">"</span></span>, <span class="pl-c1">60</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>°C<span class="pl-pds">"</span></span>, <span class="pl-c1">1</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>°C<span class="pl-pds">"</span></span>; mpoints<span class="pl-k">=</span><span class="pl-c1">5</span>)</pre></div>
<h3 dir="auto"><a id="user-content-plotting-structures" class="anchor" aria-hidden="true" href="#plotting-structures"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plotting structures</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# plot coordinates of a secondary structure, returns two arrays with
# x and y coordinates
plot_coords(&quot;(((...)))&quot;)  # =&gt; Tuple{Float32[], Float32[]}"><pre><span class="pl-c"><span class="pl-c">#</span> plot coordinates of a secondary structure, returns two arrays with</span>
<span class="pl-c"><span class="pl-c">#</span> x and y coordinates</span>
<span class="pl-c1">plot_coords</span>(<span class="pl-s"><span class="pl-pds">"</span>(((...)))<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; Tuple{Float32[], Float32[]}</span></pre></div>
<p dir="auto">See <a href="https://github.com/marcom/PlotRNA.jl">PlotRNA.jl</a> for more
secondary structure plotting functionality.</p>
<h3 dir="auto"><a id="user-content-inverse-folding--sequence-design" class="anchor" aria-hidden="true" href="#inverse-folding--sequence-design"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Inverse folding / sequence design</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="inverse_fold(&quot;AAAAAAA&quot;, &quot;((...))&quot;)     a# =&gt; (&quot;GCAAAGC&quot;, 2.0f0)
inverse_pf_fold(&quot;AAAAAAA&quot;, &quot;((...))&quot;)  # =&gt; (&quot;GCCAAGC&quot;, 2.0244526863098145 kcal mol^-1)"><pre><span class="pl-c1">inverse_fold</span>(<span class="pl-s"><span class="pl-pds">"</span>AAAAAAA<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>((...))<span class="pl-pds">"</span></span>)     a<span class="pl-c"><span class="pl-c">#</span> =&gt; ("GCAAAGC", 2.0f0)</span>
<span class="pl-c1">inverse_pf_fold</span>(<span class="pl-s"><span class="pl-pds">"</span>AAAAAAA<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>((...))<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; ("GCCAAGC", 2.0244526863098145 kcal mol^-1)</span></pre></div>
<h3 dir="auto"><a id="user-content-seeding-the-random-number-generator" class="anchor" aria-hidden="true" href="#seeding-the-random-number-generator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Seeding the random number generator</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ViennaRNA.init_rand_seed(42)"><pre>ViennaRNA<span class="pl-k">.</span><span class="pl-c1">init_rand_seed</span>(<span class="pl-c1">42</span>)</pre></div>
<h2 dir="auto"><a id="user-content-reducing-memory-usage" class="anchor" aria-hidden="true" href="#reducing-memory-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reducing memory usage</h2>
<p dir="auto">When creating many <code>FoldCompound</code>s, running <code>finalize</code> manually will
avoid excessive memory buildup.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="for i = 1:100_000
    fc = FoldCompound(&quot;ACGU&quot;)
    # do something with fc
    finalize(fc)
end"><pre><span class="pl-k">for</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100_000</span>
    fc <span class="pl-k">=</span> <span class="pl-c1">FoldCompound</span>(<span class="pl-s"><span class="pl-pds">"</span>ACGU<span class="pl-pds">"</span></span>)
    <span class="pl-c"><span class="pl-c">#</span> do something with fc</span>
    <span class="pl-c1">finalize</span>(fc)
<span class="pl-k">end</span></pre></div>
<h2 dir="auto"><a id="user-content-related-julia-packages" class="anchor" aria-hidden="true" href="#related-julia-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related Julia packages</h2>
<ul dir="auto">
<li><a href="https://github.com/marcom/RNAstructure.jl">RNAstructure.jl</a></li>
<li><a href="https://github.com/marcom/LinearFold.jl">LinearFold.jl</a></li>
<li><a href="https://github.com/marcom/PlotRNA.jl">PlotRNA.jl</a></li>
</ul>
</article></div>