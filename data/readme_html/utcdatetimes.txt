<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-utcdatetimes" class="anchor" aria-hidden="true" href="#utcdatetimes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>UTCDateTimes</h1>
<p dir="auto"><a href="https://invenia.github.io/UTCDateTimes.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://invenia.github.io/UTCDateTimes.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/invenia/UTCDateTimes.jl/actions/workflows/JuliaNightly.yml?query=branch%3Amain"><img src="https://github.com/invenia/UTCDateTimes.jl/actions/workflows/JuliaNightly.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/invenia/UTCDateTimes.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/95a96b6cd51450024e66219359506603dff3599b1491c4206a73d2b657e3c708/68747470733a2f2f636f6465636f762e696f2f67682f696e76656e69612f5554434461746554696d65732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/invenia/UTCDateTimes.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width: 100%;"></a></p>
<p dir="auto"><code>UTCDateTime</code> is a very simple time zone aware datetime representation that is always in the UTC time zone.
It implements (WIP) the same public API as <code>DateTime</code> and <code>ZonedDateTime</code>, and provides time zone aware interoperation with <code>ZonedDateTime</code>.
It provides substantial performance benefits over <a href="https://github.com/JuliaTime/TimeZones.jl"><code>ZonedDateTime</code></a> if you only need the UTC time zone.</p>
<p dir="auto">It is implemented as a thin wrapper around <code>DateTime</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="struct UTCDateTime &lt;: Dates.AbstractDateTime
    dt::DateTime
end"><pre><span class="pl-k">struct</span> UTCDateTime <span class="pl-k">&lt;:</span> <span class="pl-c1">Dates.AbstractDateTime</span>
    dt<span class="pl-k">::</span><span class="pl-c1">DateTime</span>
<span class="pl-k">end</span></pre></div>
<h2 dir="auto"><a id="user-content-performance-comparison" class="anchor" aria-hidden="true" href="#performance-comparison"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Performance Comparison</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using UTCDateTimes, TimeZones, Dates, BenchmarkTools

julia&gt; mathing(dt) = dt + Hour(3) - Day(1)
mathing (generic function with 1 method)

julia&gt; utcdt = UTCDateTime(2022); zdt = ZonedDateTime(2022, tz&quot;UTC&quot;); dt = DateTime(2022);

julia&gt; @benchmark mathing($zdt)
BenchmarkTools.Trial: 10000 samples with 998 evaluations.
 Range (min … max):  16.727 ns … 150.349 ns  ┊ GC (min … max): 0.00% … 0.00%
 Time  (median):     16.889 ns               ┊ GC (median):    0.00%
 Time  (mean ± σ):   20.212 ns ±   7.517 ns  ┊ GC (mean ± σ):  0.00% ± 0.00%

  █▁        ▁▁▁▁▂▂▃▂▂▁  ▁▂                                     ▁
  █████████████████████████▆▇▇▇▆▇▆██▇▇▆▆▆▆▆▆▆▆▅▅▅▆▅▅▄▄▁▆▄▅▄▅▄▄ █
  16.7 ns       Histogram: log(frequency) by time      51.5 ns &lt;

 Memory estimate: 0 bytes, allocs estimate: 0.

julia&gt; @benchmark mathing($dt)
BenchmarkTools.Trial: 10000 samples with 1000 evaluations.
 Range (min … max):  1.134 ns … 26.450 ns  ┊ GC (min … max): 0.00% … 0.00%
 Time  (median):     1.143 ns              ┊ GC (median):    0.00%
 Time  (mean ± σ):   1.206 ns ±  0.703 ns  ┊ GC (mean ± σ):  0.00% ± 0.00%

  █▆▁▁                                                       ▁
  █████▆▆▆▄▅▃▅▃▄▃▃▃▁▁▁▃▁▁▁▄▄▃▁▁▃▃▁▃▁▅▃▄▁▁▃▁▄▁▄▃▁▃▁▃▅▇█████▇▇ █
  1.13 ns      Histogram: log(frequency) by time     1.79 ns &lt;

 Memory estimate: 0 bytes, allocs estimate: 0.

julia&gt; @benchmark mathing($utcdt)
BenchmarkTools.Trial: 10000 samples with 1000 evaluations.
 Range (min … max):  1.134 ns … 46.650 ns  ┊ GC (min … max): 0.00% … 0.00%
 Time  (median):     1.144 ns              ┊ GC (median):    0.00%
 Time  (mean ± σ):   1.222 ns ±  0.828 ns  ┊ GC (mean ± σ):  0.00% ± 0.00%

  █▇▁ ▂▁                                          ▁▁▁▁▁▁     ▁
  ██████▇▆▆▄▅▇█▆▄▄▃▃▃▁▃▁▄▁▁▄▁▁▁▃▃▄▁▁▁▃▁▁▁▁▁▁▁▁▁▁▃▇█████████▇ █
  1.13 ns      Histogram: log(frequency) by time     1.82 ns &lt;

 Memory estimate: 0 bytes, allocs estimate: 0."><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> UTCDateTimes, TimeZones, Dates, BenchmarkTools

julia<span class="pl-k">&gt;</span> <span class="pl-en">mathing</span>(dt) <span class="pl-k">=</span> dt <span class="pl-k">+</span> <span class="pl-c1">Hour</span>(<span class="pl-c1">3</span>) <span class="pl-k">-</span> <span class="pl-c1">Day</span>(<span class="pl-c1">1</span>)
mathing (generic <span class="pl-k">function</span> with <span class="pl-c1">1</span> method)

julia<span class="pl-k">&gt;</span> utcdt <span class="pl-k">=</span> <span class="pl-c1">UTCDateTime</span>(<span class="pl-c1">2022</span>); zdt <span class="pl-k">=</span> <span class="pl-c1">ZonedDateTime</span>(<span class="pl-c1">2022</span>, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">tz</span>"</span>UTC<span class="pl-pds">"</span></span>); dt <span class="pl-k">=</span> <span class="pl-c1">DateTime</span>(<span class="pl-c1">2022</span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@benchmark</span> <span class="pl-c1">mathing</span>(<span class="pl-k">$</span>zdt)
BenchmarkTools<span class="pl-k">.</span>Trial<span class="pl-k">:</span> <span class="pl-c1">10000</span> samples with <span class="pl-c1">998</span> evaluations.
 Range (min … max)<span class="pl-k">:</span>  <span class="pl-c1">16.727</span> ns … <span class="pl-c1">150.349</span> ns  ┊ GC (min … max)<span class="pl-k">:</span> <span class="pl-c1">0.00</span><span class="pl-k">%</span> … <span class="pl-c1">0.00</span><span class="pl-k">%</span>
 Time  (median)<span class="pl-k">:</span>     <span class="pl-c1">16.889</span> ns               ┊ GC (median)<span class="pl-k">:</span>    <span class="pl-c1">0.00</span><span class="pl-k">%</span>
 Time  (mean ± σ)<span class="pl-k">:</span>   <span class="pl-c1">20.212</span> ns ±   <span class="pl-c1">7.517</span> ns  ┊ GC (mean ± σ)<span class="pl-k">:</span>  <span class="pl-c1">0.00</span><span class="pl-k">%</span> ± <span class="pl-c1">0.00</span><span class="pl-k">%</span>

  █▁        ▁▁▁▁▂▂▃▂▂▁  ▁▂                                     ▁
  █████████████████████████▆▇▇▇▆▇▆██▇▇▆▆▆▆▆▆▆▆▅▅▅▆▅▅▄▄▁▆▄▅▄▅▄▄ █
  <span class="pl-c1">16.7</span> ns       Histogram<span class="pl-k">:</span> <span class="pl-c1">log</span>(frequency) by time      <span class="pl-c1">51.5</span> ns <span class="pl-k">&lt;</span>

 Memory estimate<span class="pl-k">:</span> <span class="pl-c1">0</span> bytes, allocs estimate<span class="pl-k">:</span> <span class="pl-c1">0.</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@benchmark</span> <span class="pl-c1">mathing</span>(<span class="pl-k">$</span>dt)
BenchmarkTools<span class="pl-k">.</span>Trial<span class="pl-k">:</span> <span class="pl-c1">10000</span> samples with <span class="pl-c1">1000</span> evaluations.
 Range (min … max)<span class="pl-k">:</span>  <span class="pl-c1">1.134</span> ns … <span class="pl-c1">26.450</span> ns  ┊ GC (min … max)<span class="pl-k">:</span> <span class="pl-c1">0.00</span><span class="pl-k">%</span> … <span class="pl-c1">0.00</span><span class="pl-k">%</span>
 Time  (median)<span class="pl-k">:</span>     <span class="pl-c1">1.143</span> ns              ┊ GC (median)<span class="pl-k">:</span>    <span class="pl-c1">0.00</span><span class="pl-k">%</span>
 Time  (mean ± σ)<span class="pl-k">:</span>   <span class="pl-c1">1.206</span> ns ±  <span class="pl-c1">0.703</span> ns  ┊ GC (mean ± σ)<span class="pl-k">:</span>  <span class="pl-c1">0.00</span><span class="pl-k">%</span> ± <span class="pl-c1">0.00</span><span class="pl-k">%</span>

  █▆▁▁                                                       ▁
  █████▆▆▆▄▅▃▅▃▄▃▃▃▁▁▁▃▁▁▁▄▄▃▁▁▃▃▁▃▁▅▃▄▁▁▃▁▄▁▄▃▁▃▁▃▅▇█████▇▇ █
  <span class="pl-c1">1.13</span> ns      Histogram<span class="pl-k">:</span> <span class="pl-c1">log</span>(frequency) by time     <span class="pl-c1">1.79</span> ns <span class="pl-k">&lt;</span>

 Memory estimate<span class="pl-k">:</span> <span class="pl-c1">0</span> bytes, allocs estimate<span class="pl-k">:</span> <span class="pl-c1">0.</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@benchmark</span> <span class="pl-c1">mathing</span>(<span class="pl-k">$</span>utcdt)
BenchmarkTools<span class="pl-k">.</span>Trial<span class="pl-k">:</span> <span class="pl-c1">10000</span> samples with <span class="pl-c1">1000</span> evaluations.
 Range (min … max)<span class="pl-k">:</span>  <span class="pl-c1">1.134</span> ns … <span class="pl-c1">46.650</span> ns  ┊ GC (min … max)<span class="pl-k">:</span> <span class="pl-c1">0.00</span><span class="pl-k">%</span> … <span class="pl-c1">0.00</span><span class="pl-k">%</span>
 Time  (median)<span class="pl-k">:</span>     <span class="pl-c1">1.144</span> ns              ┊ GC (median)<span class="pl-k">:</span>    <span class="pl-c1">0.00</span><span class="pl-k">%</span>
 Time  (mean ± σ)<span class="pl-k">:</span>   <span class="pl-c1">1.222</span> ns ±  <span class="pl-c1">0.828</span> ns  ┊ GC (mean ± σ)<span class="pl-k">:</span>  <span class="pl-c1">0.00</span><span class="pl-k">%</span> ± <span class="pl-c1">0.00</span><span class="pl-k">%</span>

  █▇▁ ▂▁                                          ▁▁▁▁▁▁     ▁
  ██████▇▆▆▄▅▇█▆▄▄▃▃▃▁▃▁▄▁▁▄▁▁▁▃▃▄▁▁▁▃▁▁▁▁▁▁▁▁▁▁▃▇█████████▇ █
  <span class="pl-c1">1.13</span> ns      Histogram<span class="pl-k">:</span> <span class="pl-c1">log</span>(frequency) by time     <span class="pl-c1">1.82</span> ns <span class="pl-k">&lt;</span>

 Memory estimate<span class="pl-k">:</span> <span class="pl-c1">0</span> bytes, allocs estimate<span class="pl-k">:</span> <span class="pl-c1">0.</span></pre></div>
</article></div>