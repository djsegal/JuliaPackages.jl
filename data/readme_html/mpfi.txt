<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2 dir="auto"><a id="user-content-mpfijl" class="anchor" aria-hidden="true" href="#mpfijl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MPFI.jl</h2>
<h4 dir="auto"><a id="user-content-multiple-precision-floating-point-interval-library-for-julia" class="anchor" aria-hidden="true" href="#multiple-precision-floating-point-interval-library-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Multiple Precision Floating-point Interval library for Julia</h4>
<p dir="auto">This is a work-in-progress Julia package that wraps <a href="http://perso.ens-lyon.fr/nathalie.revol/software.html" rel="nofollow">MPFI</a>
for Julia. All functions should be available, except <code>mpfi_put_*</code> and <code>mpfi_urandom</code>.</p>
<h5 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h5>
<p dir="auto">The documentation is available at <a href="http://mpfijl.readthedocs.org/en/latest/" rel="nofollow">http://mpfijl.readthedocs.org/en/latest/</a></p>
<h5 dir="auto"><a id="user-content-some-examples" class="anchor" aria-hidden="true" href="#some-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Some examples</h5>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# MPFI uses BigFloats in its internal representation
# For convenience, let's just use 53 bits (as a Float64)
julia&gt; set_bigfloat_precision(53)
53

# The following creates an interval centered on 1.1.
# Since 1.1 isn't exactly representable as a floating-point number,
# the shortest interval that includes it is returned.
julia&gt; x = Interval(&quot;1.1&quot;)
[1.0999999999999999e+00, 1.1000000000000001e+00] with 53 bits of precision

# It is also possible to create an interval through its endpoints.
julia&gt; y = Interval(1, 2)
[1e+00, 2e+00] with 53 bits of precision

julia&gt; Interval(&quot;[1, 2]&quot;)
[1e+00, 2e+00] with 53 bits of precision

julia&gt; x + y
[2.0999999999999996e+00, 3.1000000000000001e+00] with 53 bits of precision"><pre><span class="pl-c"><span class="pl-c">#</span> MPFI uses BigFloats in its internal representation</span>
<span class="pl-c"><span class="pl-c">#</span> For convenience, let's just use 53 bits (as a Float64)</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_bigfloat_precision</span>(<span class="pl-c1">53</span>)
<span class="pl-c1">53</span>

<span class="pl-c"><span class="pl-c">#</span> The following creates an interval centered on 1.1.</span>
<span class="pl-c"><span class="pl-c">#</span> Since 1.1 isn't exactly representable as a floating-point number,</span>
<span class="pl-c"><span class="pl-c">#</span> the shortest interval that includes it is returned.</span>
julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">Interval</span>(<span class="pl-s"><span class="pl-pds">"</span>1.1<span class="pl-pds">"</span></span>)
[<span class="pl-c1">1.0999999999999999e+00</span>, <span class="pl-c1">1.1000000000000001e+00</span>] with <span class="pl-c1">53</span> bits of precision

<span class="pl-c"><span class="pl-c">#</span> It is also possible to create an interval through its endpoints.</span>
julia<span class="pl-k">&gt;</span> y <span class="pl-k">=</span> <span class="pl-c1">Interval</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>)
[<span class="pl-c1">1e+00</span>, <span class="pl-c1">2e+00</span>] with <span class="pl-c1">53</span> bits of precision

julia<span class="pl-k">&gt;</span> <span class="pl-c1">Interval</span>(<span class="pl-s"><span class="pl-pds">"</span>[1, 2]<span class="pl-pds">"</span></span>)
[<span class="pl-c1">1e+00</span>, <span class="pl-c1">2e+00</span>] with <span class="pl-c1">53</span> bits of precision

julia<span class="pl-k">&gt;</span> x <span class="pl-k">+</span> y
[<span class="pl-c1">2.0999999999999996e+00</span>, <span class="pl-c1">3.1000000000000001e+00</span>] with <span class="pl-c1">53</span> bits of precision</pre></div>
<p dir="auto">Warning: currently the return values and the error handling from MPFI are ignored.</p>
</article></div>