<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-chooseoptimizer" class="anchor" aria-hidden="true" href="#chooseoptimizer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ChooseOptimizer</h1>
<p dir="auto">This module is a tool to select different optimization engines when using <code>JuMP</code>
and to change solver options.</p>
<h2 dir="auto"><a id="user-content-selecting-and-using-a-solver" class="anchor" aria-hidden="true" href="#selecting-and-using-a-solver"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Selecting and using a solver</h2>
<p dir="auto">The <code>set_solver</code> function is used to select the optimization package
desired. Without any arguments it selects the <code>Cbc</code> optimizer. Otherwise,
<code>set_solver(NAME)</code> is used to choose the desired optimizer, e.g.,
<code>set_solver(Gurobi)</code>. (For this to work, this must follow
<code>using Gurboi</code>.)</p>
<p dir="auto">The function <code>get_solver</code> is a replacement for <code>JuMP</code>'s
<code>with_solver</code> function. Instead of this:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="MOD = Model(with_solver(Cbc.Optimizer))"><pre>MOD <span class="pl-k">=</span> <span class="pl-c1">Model</span>(<span class="pl-c1">with_solver</span>(Cbc<span class="pl-k">.</span>Optimizer))</pre></div>
<p dir="auto">we do this:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="set_solver(Cbc)
MOD = Model(get_solver())"><pre><span class="pl-c1">set_solver</span>(Cbc)
MOD <span class="pl-k">=</span> <span class="pl-c1">Model</span>(<span class="pl-c1">get_solver</span>())</pre></div>
<h2 dir="auto"><a id="user-content-selecting-and-using-solver-options" class="anchor" aria-hidden="true" href="#selecting-and-using-solver-options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Selecting and using solver options</h2>
<p dir="auto">Solver options can be set up using these functions:</p>
<ul dir="auto">
<li><code>set_solver_options(kwd, val)</code> adds the option whose name is
given by the symbol <code>kwd</code> to be the value <code>val</code>. To add several
options, use this several times.</li>
<li><code>set_solver_options(d::Dict)</code> adds all the key/value entries
in <code>d</code> as options by repeated calls to <code>set_solver_options(key,value)</code>.</li>
<li><code>clear_solver_options()</code> erases all solver options.</li>
<li><code>get_solver_options()</code> returns a dictionary of the options that
are currently set.</li>
</ul>
<p dir="auto">When a <code>JuMP</code> model is created using <code>Model(get_solver())</code> the
options are passed along.</p>
<p dir="auto">Note that each call to <code>set_solver</code> clears all options.</p>
<h2 dir="auto"><a id="user-content-verbose-output" class="anchor" aria-hidden="true" href="#verbose-output"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Verbose output</h2>
<p dir="auto">The <code>set_solver_verbose()</code> function can be used to tell the solver to
be verbose in its operation. Alternatively, <code>set_solver_verbose(false)</code>
suppresses output.</p>
<p dir="auto">The action of <code>set_solver_verbose</code> is through <code>set_solver_options</code>.</p>
<p dir="auto">At present, this function only knows how to do this for the <code>Cbc</code>, <code>CPLEX</code>, <code>GLPK</code>,
<code>Gurobi</code>, and <code>HiGHS</code> optimizers. It is easy, however, to add additional
solvers by modifying the file <code>set_verbose.jl</code> or in the REPL with a command
that looks like this:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ChooseOptimizer._solver_table[&quot;NAME&quot;] = (&quot;opt_name&quot;, yes_val, no_val)"><pre>ChooseOptimizer<span class="pl-k">.</span>_solver_table[<span class="pl-s"><span class="pl-pds">"</span>NAME<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> (<span class="pl-s"><span class="pl-pds">"</span>opt_name<span class="pl-pds">"</span></span>, yes_val, no_val)</pre></div>
<p dir="auto">where</p>
<ul dir="auto">
<li><code>NAME</code> is the name of the solver,</li>
<li><code>opt_name</code> is the option name that controls output for that solver,</li>
<li><code>yes_val</code> is the value for verbose output, and</li>
<li><code>no_val</code> is the value for supressing output.</li>
</ul>
</article></div>