<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-nanosoldierjl" class="anchor" aria-hidden="true" href="#nanosoldierjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Nanosoldier.jl</h1>
<p><a href="https://travis-ci.org/JuliaCI/Nanosoldier.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/19126be4d113fe900caad6baa5eb0eff502a5219/68747470733a2f2f7472617669732d63692e6f72672f4a756c696143492f4e616e6f736f6c646965722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaCI/Nanosoldier.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package contains the infrastructure powering the @nanosoldier CI bot used by the Julia language.</p>
<h2><a id="user-content-submitting-ci-jobs-via-comments" class="anchor" aria-hidden="true" href="#submitting-ci-jobs-via-comments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Submitting CI jobs via comments</h2>
<p>If you're a collaborator in the JuliaLang/julia repository, you can submit CI jobs to the Julia Lab's Nanosoldier cluster at MIT by commenting on commits or pull requests. The @nanosoldier bot looks for a special "trigger phrase" in your comment, and if the trigger phrase is found, it is parsed by the bot to configure and submit a CI job.</p>
<p>The trigger phrase syntax is:</p>
<pre><code>@nanosoldier `command(args..., kwargs...)`
</code></pre>
<p>Here's an example of a comment that might trigger a benchmarking job from a commit:</p>
<pre><code>Let's see whether the commit I'm commenting on is faster than the master branch for the linear algebra benchmarks:

@nanosoldier `runbenchmarks("linalg", vs = ":master")`
</code></pre>
<p>When a job is completed, @nanosoldier will reply to your comment to tell you how the job went and link you to any relevant results.</p>
<p><strong>Note that only one job can be triggered per comment.</strong></p>
<h2><a id="user-content-available-job-types" class="anchor" aria-hidden="true" href="#available-job-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Available job types</h2>
<p>CI jobs are implemented in this package as subtypes of <code>Nanosoldier.AbstractJob</code>. See <a href="https://github.com/JuliaCI/Nanosoldier.jl/blob/master/src/jobs/jobs.jl">here</a> for a description of the interface new job types need to implement.</p>
<h3><a id="user-content-benchmarkjob" class="anchor" aria-hidden="true" href="#benchmarkjob"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>BenchmarkJob</code></h3>
<h4><a id="user-content-execution-cycle" class="anchor" aria-hidden="true" href="#execution-cycle"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Execution Cycle</h4>
<p>A <code>BenchmarkJob</code> has the following execution cycle:</p>
<ol>
<li>Pull in the JuliaLang/julia repository and build the commit specified by the context of the trigger phrase.</li>
<li>Using the new Julia build, fetch the <code>nanosoldier</code> branch of the <a href="https://github.com/JuliaCI/BaseBenchmarks.jl">BaseBenchmarks</a> repository and run the benchmarks specified by the trigger phrase.</li>
<li>If the trigger phrase specifies a commit to compare against, build that version of Julia and perform step 2 using the comparison build.</li>
<li>Upload a markdown report to the <a href="https://github.com/JuliaCI/BaseBenchmarkReports">BaseBenchmarkReports</a> repository.</li>
</ol>
<h4><a id="user-content-trigger-syntax" class="anchor" aria-hidden="true" href="#trigger-syntax"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Trigger Syntax</h4>
<p>A <code>BenchmarkJob</code> is triggered with the following syntax:</p>
<pre><code>@nanosoldier `runbenchmarks(tag_predicate, vs = "ref")`
</code></pre>
<p>The <code>vs</code> keyword argument is optional, and is used to determine whether or not the comparison step (step 3 above) is performed.</p>
<p>The tag predicate is used to decide which benchmarks to run, and supports the syntax defined by the <a href="https://github.com/JuliaCI/BenchmarkTools.jl/blob/master/doc/manual.md#indexing-into-a-benchmarkgroup-using-tagged">tagging system</a> implemented in the <a href="https://github.com/JuliaCI/BenchmarkTools.jl">BenchmarkTools</a> package. Additionally, you can run all benchmarks by using the keyword <code>ALL</code>, e.g. <code>runbenchmarks(ALL)</code>.</p>
<p>The <code>vs</code> keyword argument takes a reference string which can points to a Julia commit to compare against. The following syntax is supported for reference string:</p>
<ul>
<li><code>":branch"</code>: the head commit of the branch named <code>branch</code> in the current repository (<code>JuliaLang/julia</code>)</li>
<li><code>"@sha"</code>: the commit specified by <code>sha</code> in the current repository (<code>JuliaLang/julia</code>)</li>
<li><code>"#tag"</code>: the commit pointed to by the tag named <code>tag</code> in the current repository (<code>JuliaLang/julia</code>)</li>
<li><code>"owner/repo:branch"</code>: the head commit of the branch named <code>branch</code> in the repository <code>owner/repo</code></li>
<li><code>"owner/repo@sha"</code>: the commit specified by <code>sha</code> in the repository <code>owner/repo</code></li>
<li><code>"owner/repo#tag"</code>: the commit pointed to by the tag named <code>tag</code> in the repository <code>owner/repo</code></li>
</ul>
<h4><a id="user-content-benchmark-results" class="anchor" aria-hidden="true" href="#benchmark-results"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Benchmark Results</h4>
<p>Once a <code>BenchmarkJob</code> is complete, the results are uploaded to the
<a href="https://github.com/JuliaCI/BaseBenchmarkReports">BaseBenchmarkReports</a> repository. Each job
has its own directory for results. This directory contains the following items:</p>
<ul>
<li><code>report.md</code> is a markdown report that summarizes the job results</li>
<li><code>data.tar.gz</code> contains raw timing data in JSON format. To untar this file, run
<code>tar -xzvf data.tar.gz</code>. You can analyze this data using the
<a href="https://github.com/JuliaCI/BaseBenchmarkReports">BenchmarkTools</a> package.</li>
<li><code>logs</code> is a directory containing the build logs and benchmark execution logs for the job.</li>
</ul>
<h4><a id="user-content-comment-examples" class="anchor" aria-hidden="true" href="#comment-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Comment Examples</h4>
<p>Here are some examples of comments that trigger a <code>BenchmarkJob</code> in various contexts:</p>
<pre><code>I want to run benchmarks tagged "array" on the current commit.

@nanosoldier `runbenchmarks("array")`

If this comment is on a specific commit, benchmarks will run on that commit. If
it's in a PR, they will run on the head/merge commit of the PR. If it's on a diff,
they will run on the commit associated with the diff.
</code></pre>
<pre><code>I want to run benchmarks tagged "array" on the current commit, and compare the results
with the results of running benchmarks on commit 858dee2b09d6a01cb5a2e4fb2444dd6bed469b7f.

@nanosoldier `runbenchmarks("array", vs = "@858dee2b09d6a01cb5a2e4fb2444dd6bed469b7f")`
</code></pre>
<pre><code>I want to run benchmarks tagged "array", but not "simd" or "linalg", on the
current commit. I want to compare the results against those of the release-0.4
branch.

@nanosoldier `runbenchmarks("array" &amp;&amp; !("simd" || "linalg"), vs = ":release-0.4")`
</code></pre>
<pre><code>I want to run all benchmarks on the current commit. I want to compare the results
against a commit on my fork.

@nanosoldier `runbenchmarks(ALL, vs = "ararslan/julia@c70ab26bb677c92f0d8e0ae41c3035217a4b111f")`
</code></pre>
<pre><code>I want to run all benchmarks on the current commit. I want to compare the results
against the head commit of my fork's branch.

@nanosoldier `runbenchmarks(ALL, vs = "ararslan/julia:mybranch")`
</code></pre>
<h3><a id="user-content-pkgevaljob" class="anchor" aria-hidden="true" href="#pkgevaljob"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>PkgEvalJob</code></h3>
<h4><a id="user-content-execution-cycle-1" class="anchor" aria-hidden="true" href="#execution-cycle-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Execution Cycle</h4>
<p>A <code>PkgEvalJob</code> has the following execution cycle:</p>
<ol>
<li>Pull in the JuliaLang/julia repository and build the commit specified by the context of the trigger phrase.</li>
<li>Using the new Julia build, test the packages from the <a href="https://github.com/JuliaRegistries/General">General</a> registry as specified by the trigger phrase.</li>
<li>If the trigger phrase specifies a commit to compare against, build that version of Julia and perform step 2 using the comparison build.</li>
<li>Upload a markdown report to the <a href="https://github.com/JuliaCI/BaseBenchmarkReports">BaseBenchmarkReports</a> repository.</li>
</ol>
<h4><a id="user-content-trigger-syntax-1" class="anchor" aria-hidden="true" href="#trigger-syntax-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Trigger Syntax</h4>
<p>A <code>PkgEvalJob</code> is triggered with the following syntax:</p>
<pre><code>@nanosoldier `runtests(package_selection, vs = "ref")`
</code></pre>
<p>The package selection argument is used to decide which packages to test. It should be a list of package names, e.g. <code>["Example"]</code>, that will be looked up in the registry. Additionally, you can test all packages in the registry by using the keyword <code>ALL</code>, e.g. <code>runtests(ALL)</code>.</p>
<p>The <code>vs</code> keyword argument is optional, and is used to determine whether or not the comparison step (step 3 above) is performed. Its syntax is identical to the <code>BenchmarkJob</code> <code>vs</code> keyword argument.</p>
<h4><a id="user-content-benchmark-results-1" class="anchor" aria-hidden="true" href="#benchmark-results-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Benchmark Results</h4>
<p>Once a <code>PkgEvalJob</code> is complete, the results are uploaded to the
<a href="https://github.com/JuliaCI/BaseBenchmarkReports">BaseBenchmarkReports</a> repository. Each job
has its own directory for results. This directory contains the following items:</p>
<ul>
<li><code>report.md</code> is a markdown report that summarizes the job results</li>
<li><code>data.tar.gz</code> contains raw test data as Feather files encoding a DataFrame. To untar this file, run
<code>tar -xzvf data.tar.gz</code>.</li>
<li><code>logs</code> is a directory containing the test logs for the job.</li>
</ul>
<h2><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Acknowledgements</h2>
<p>The development of the Nanosoldier benchmarking platform was supported in part by the US
Army Research Office through the Institute for Soldier Nanotechnologies under Contract
No. W911NF-07-D0004.</p>
</article></div>