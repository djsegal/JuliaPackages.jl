<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-modecouplingtheoryjl" class="anchor" aria-hidden="true" href="#modecouplingtheoryjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ModeCouplingTheory.jl</h1>
<p dir="auto"><a href="https://github.com/IlianPihlajamaa/ModeCouplingTheory.jl/actions"><img src="https://github.com/IlianPihlajamaa/ModeCouplingTheory.jl/workflows/CI/badge.svg" alt="Build status (Github Actions)" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/IlianPihlajamaa/ModeCouplingTheory.jl?branch=main" rel="nofollow"><img src="https://camo.githubusercontent.com/9190e66d79472f7259242f105c970d3e3e9749685e879bbb8361328ff4d9c456/687474703a2f2f636f6465636f762e696f2f6769746875622f496c69616e5069686c616a616d61612f4d6f6465436f75706c696e675468656f72792e6a6c2f636f7665726167652e7376673f6272616e63683d6d61696e" alt="codecov.io" data-canonical-src="http://codecov.io/github/IlianPihlajamaa/ModeCouplingTheory.jl/coverage.svg?branch=main" style="max-width: 100%;"></a>
<a href="https://IlianPihlajamaa.github.io/ModeCouplingTheory.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://IlianPihlajamaa.github.io/ModeCouplingTheory.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://pkgs.genieframework.com?packages=ModeCouplingTheory" rel="nofollow"><img src="https://camo.githubusercontent.com/010b03ca0bae4c41b7a6497e90b9a6968da053fe85249c533696351c8992d4c1/68747470733a2f2f736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f706b67732e67656e69656672616d65776f726b2e636f6d2f6170692f76312f62616467652f4d6f6465436f75706c696e675468656f7279" alt="Downloads" data-canonical-src="https://shields.io/endpoint?url=https://pkgs.genieframework.com/api/v1/badge/ModeCouplingTheory" style="max-width: 100%;"></a></p>
<p dir="auto">A generic and fast solver of mode-coupling theory-like integrodifferential equations. It uses the algorithm outlined in <a href="https://iopscience.iop.org/article/10.1088/0953-8984/3/26/022/meta" rel="nofollow">Fuchs et al.</a> to solve equations of the form
<math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="c4fc3b9d663c59022f1ee97adc1380c0">$$\alpha \ddot{F}(t) + \beta \dot{F}(t) + \gamma F(t) + \delta + \int_0^t d\tau K(t-\tau)\dot{F}(\tau) = 0, $$</math-renderer>
in which <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="c4fc3b9d663c59022f1ee97adc1380c0">$\alpha$</math-renderer>, <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="c4fc3b9d663c59022f1ee97adc1380c0">$\beta$</math-renderer>, <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="c4fc3b9d663c59022f1ee97adc1380c0">$\gamma$</math-renderer>, and <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="c4fc3b9d663c59022f1ee97adc1380c0">$\delta$</math-renderer> are (possibly time-dependent) coefficients, and <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="c4fc3b9d663c59022f1ee97adc1380c0">$K(t) = K(F(t), t)$</math-renderer> is a memory kernel that may nonlinearly depend on <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="c4fc3b9d663c59022f1ee97adc1380c0">$F(t)$</math-renderer>. This package exports some commonly used memory kernels, but it is straightforward to define your own. The solver is differentiable and works for scalar- and vector-valued functions <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="c4fc3b9d663c59022f1ee97adc1380c0">$F(t)$</math-renderer>. For more information see the <a href="https://IlianPihlajamaa.github.io/ModeCouplingTheory.jl/dev" rel="nofollow">Documentation</a>.</p>
<h1 dir="auto">
<a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h1>
<p dir="auto">To install the package run:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import Pkg
Pkg.add(&quot;ModeCouplingTheory&quot;)"><pre><span class="pl-k">import</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>ModeCouplingTheory<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">In order to install and use it from Python, see the <a href="https://ilianpihlajamaa.github.io/ModeCouplingTheory.jl/dev/FromPython.html" rel="nofollow">From Python</a> page of the documentation.</p>
<h1 dir="auto">
<a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example usage:</h1>
<p dir="auto">We can use one of the predefined memory kernels</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using ModeCouplingTheory
julia&gt; ν = 3.999
3.999

julia&gt; kernel = SchematicF2Kernel(ν)
SchematicF2Kernel{Float64}(3.999)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ModeCouplingTheory
julia<span class="pl-k">&gt;</span> ν <span class="pl-k">=</span> <span class="pl-c1">3.999</span>
<span class="pl-c1">3.999</span>

julia<span class="pl-k">&gt;</span> kernel <span class="pl-k">=</span> <span class="pl-c1">SchematicF2Kernel</span>(ν)
<span class="pl-c1">SchematicF2Kernel</span><span class="pl-c1">{Float64}</span>(<span class="pl-c1">3.999</span>)</pre></div>
<p dir="auto">This kernel evaluates <code>K(t) = ν F(t)^2</code> when called.</p>
<p dir="auto">We can now define the equation we want to solve as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; α = 1.0; β = 0.0; γ = 1.0; δ = 0.0; F0 = 1.0; ∂F0 = 0.0;
julia&gt; equation = MemoryEquation(α, β, γ, δ, F0, ∂F0, kernel);"><pre>julia<span class="pl-k">&gt;</span> α <span class="pl-k">=</span> <span class="pl-c1">1.0</span>; β <span class="pl-k">=</span> <span class="pl-c1">0.0</span>; γ <span class="pl-k">=</span> <span class="pl-c1">1.0</span>; δ <span class="pl-k">=</span> <span class="pl-c1">0.0</span>; F0 <span class="pl-k">=</span> <span class="pl-c1">1.0</span>; ∂F0 <span class="pl-k">=</span> <span class="pl-c1">0.0</span>;
julia<span class="pl-k">&gt;</span> equation <span class="pl-k">=</span> <span class="pl-c1">MemoryEquation</span>(α, β, γ, δ, F0, ∂F0, kernel);</pre></div>
<p dir="auto">Which we can solve by calling <code>solve</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; sol = solve(equation);
julia&gt; using Plots
julia&gt; plot(log10.(sol.t), sol.F)"><pre>julia<span class="pl-k">&gt;</span> sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(equation);
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Plots
julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(<span class="pl-c1">log10</span>.(sol<span class="pl-k">.</span>t), sol<span class="pl-k">.</span>F)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="readmefig.png"><img src="readmefig.png" alt="image" style="max-width: 100%;"></a></p>
<p dir="auto">Please open an issue if anything is unclear in the documentation, if any unexpected errors arise or for feature requests (such as additional kernels). PRs are of course also welcome.</p>
</article></div>