<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-bigo" class="anchor" aria-hidden="true" href="#bigo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>BigO</h1>
<p dir="auto"><a href="https://endremborza.github.io/BigO.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://endremborza.github.io/BigO.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/endremborza/BigO.jl/actions"><img src="https://github.com/endremborza/BigO.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/endremborza/BigO.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/dacaff3e4d06e133333180f1e1fdb5abdf874384030bd111ff5772396a9dd678/68747470733a2f2f636f6465636f762e696f2f67682f656e6472656d626f727a612f4269674f2e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/endremborza/BigO.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Julia library for complexity plotting and estimation</p>
<h2 dir="auto"><a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quickstart</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Random
using BigO



function lamesort!(a)
    for i in axes(a,1)
        for j in 1:i
            if a[i] &lt; a[j]
                 a[j], a[i] = a[i], a[j]
            end
        end
    end
end

function _merge(a1::AbstractArray{T, 1}, a2::AbstractArray{T, 1}) where {T}
    n1, n2 = size(a1,1), size(a2,1)
    n = n1 + n2
    out = Array{T,1}(undef, n)
    i, j = 1, 1
    while i + j &lt;= n + 1
        if (i &gt; n1) e = a2[j]; j += 1
        elseif (j &gt; n2) e = a1[i]; i += 1
        elseif (a1[i] &gt; a2[j]) e = a2[j]; j += 1
        else e = a1[i]; i += 1 end
        out[i+j - 2 ] = e
    end
    return out
end

function mergesort(a)
    n = size(a, 1)
    n == 1 &amp;&amp; return a
    h = n รท 2
    return _merge(mergesort(a[1:h]), mergesort(a[h+1:n]))
end


report = RunReport([mergesort, lamesort!], randperm, 100:1000:10100, seconds=0.2; samples=200)
report |&gt; bigos"><pre><span class="pl-k">using</span> Random
<span class="pl-k">using</span> BigO



<span class="pl-k">function</span> <span class="pl-en">lamesort!</span>(a)
    <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">axes</span>(a,<span class="pl-c1">1</span>)
        <span class="pl-k">for</span> j <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>i
            <span class="pl-k">if</span> a[i] <span class="pl-k">&lt;</span> a[j]
                 a[j], a[i] <span class="pl-k">=</span> a[i], a[j]
            <span class="pl-k">end</span>
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">_merge</span>(a1<span class="pl-k">::</span><span class="pl-c1">AbstractArray{T, 1}</span>, a2<span class="pl-k">::</span><span class="pl-c1">AbstractArray{T, 1}</span>) <span class="pl-k">where</span> {T}
    n1, n2 <span class="pl-k">=</span> <span class="pl-c1">size</span>(a1,<span class="pl-c1">1</span>), <span class="pl-c1">size</span>(a2,<span class="pl-c1">1</span>)
    n <span class="pl-k">=</span> n1 <span class="pl-k">+</span> n2
    out <span class="pl-k">=</span> <span class="pl-c1">Array</span><span class="pl-c1">{T,1}</span>(undef, n)
    i, j <span class="pl-k">=</span> <span class="pl-c1">1</span>, <span class="pl-c1">1</span>
    <span class="pl-k">while</span> i <span class="pl-k">+</span> j <span class="pl-k">&lt;=</span> n <span class="pl-k">+</span> <span class="pl-c1">1</span>
        <span class="pl-k">if</span> (i <span class="pl-k">&gt;</span> n1) e <span class="pl-k">=</span> a2[j]; j <span class="pl-k">+=</span> <span class="pl-c1">1</span>
        <span class="pl-k">elseif</span> (j <span class="pl-k">&gt;</span> n2) e <span class="pl-k">=</span> a1[i]; i <span class="pl-k">+=</span> <span class="pl-c1">1</span>
        <span class="pl-k">elseif</span> (a1[i] <span class="pl-k">&gt;</span> a2[j]) e <span class="pl-k">=</span> a2[j]; j <span class="pl-k">+=</span> <span class="pl-c1">1</span>
        <span class="pl-k">else</span> e <span class="pl-k">=</span> a1[i]; i <span class="pl-k">+=</span> <span class="pl-c1">1</span> <span class="pl-k">end</span>
        out[i<span class="pl-k">+</span>j <span class="pl-k">-</span> <span class="pl-c1">2</span> ] <span class="pl-k">=</span> e
    <span class="pl-k">end</span>
    <span class="pl-k">return</span> out
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">mergesort</span>(a)
    n <span class="pl-k">=</span> <span class="pl-c1">size</span>(a, <span class="pl-c1">1</span>)
    n <span class="pl-k">==</span> <span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">return</span> a
    h <span class="pl-k">=</span> n <span class="pl-k">รท</span> <span class="pl-c1">2</span>
    <span class="pl-k">return</span> <span class="pl-c1">_merge</span>(<span class="pl-c1">mergesort</span>(a[<span class="pl-c1">1</span><span class="pl-k">:</span>h]), <span class="pl-c1">mergesort</span>(a[h<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">:</span>n]))
<span class="pl-k">end</span>


report <span class="pl-k">=</span> <span class="pl-c1">RunReport</span>([mergesort, lamesort!], randperm, <span class="pl-c1">100</span><span class="pl-k">:</span><span class="pl-c1">1000</span><span class="pl-k">:</span><span class="pl-c1">10100</span>, seconds<span class="pl-k">=</span><span class="pl-c1">0.2</span>; samples<span class="pl-k">=</span><span class="pl-c1">200</span>)
report <span class="pl-k">|&gt;</span> bigos</pre></div>
<blockquote>
<p dir="auto">Dict{String,String} with 2 entries:
"mergesort" =&gt; "O(n log n)"
"lamesort!" =&gt; "O(n^p)"</p>
</blockquote>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Plots
report |&gt; plot"><pre><span class="pl-k">using</span> Plots
report <span class="pl-k">|&gt;</span> plot</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/demo-sort.png"><img src="docs/src/demo-sort.png" alt="plot" style="max-width: 100%;"></a></p>
</article></div>