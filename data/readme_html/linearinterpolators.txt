<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-linearinterpolators" class="anchor" aria-hidden="true" href="#linearinterpolators"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LinearInterpolators</h1>
<p dir="auto"><a href="https://emmt.github.io/LinearInterpolators.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Doc. Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="./LICENSE.md"><img src="https://camo.githubusercontent.com/bbf49a2eb96e6f718803f2493bd7aa3baae61abb09b7f8fc185a94e08c504dc6/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c6174" alt="License" data-canonical-src="http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat" style="max-width: 100%;"></a>
<a href="https://github.com/emmt/LinearInterpolators.jl/actions/workflows/CI.yml?query=branch%3Amaster"><img src="https://github.com/emmt/LinearInterpolators.jl/actions/workflows/CI.yml/badge.svg?branch=master" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://ci.appveyor.com/project/emmt/LinearInterpolators-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/9ce7ee8dd263ef9b8b556dc4da63cb3f204c0234d5a092a1ad8a0099f2313219/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f656d6d742f4c696e656172496e746572706f6c61746f72732e6a6c3f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/emmt/LinearInterpolators.jl?branch=master" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/emmt/LinearInterpolators.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/6227c7279a4a61288ef6ce0aea4a3c34cfe4bec79631eef8dbd71aedd424f181/687474703a2f2f636f6465636f762e696f2f6769746875622f656d6d742f4c696e656172496e746572706f6c61746f72732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Coverage" data-canonical-src="http://codecov.io/github/emmt/LinearInterpolators.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">The <code>LinearInterpolators</code> package provides many linear interpolation methods
for <a href="https://julialang.org/" rel="nofollow">Julia</a>.  These interpolations are <em>linear</em> in the sense
that the result depends linearly on the input.</p>
<p dir="auto">The documentation for the master version is <a href="https://emmt.github.io/LinearInterpolators.jl/dev" rel="nofollow">here</a>.</p>
<h2 dir="auto"><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h2>
<ul dir="auto">
<li>
<p dir="auto">Separable interpolations are supported for arrays of any dimensionality.
Interpolation kernels can be different along each interpolated dimension.</p>
</li>
<li>
<p dir="auto">For 2D arrays, interpolations may be separable or not (<em>e.g.</em> to apply an
image rotation).</p>
</li>
<li>
<p dir="auto">Undimensional interpolations may be used to produce multi-dimensional
results.</p>
</li>
<li>
<p dir="auto">Many interpolation kernels are provided by the package
<a href="https://github.com/emmt/InterpolationKernels.jl"><code>InterpolationKernels</code></a>
(B-splines of degree 0 to 3, cardinal cubic splines, Catmull-Rom spline,
Mitchell &amp; Netravali spline, Lanczos resampling kernels of arbitrary size,
<em>etc.</em>).</p>
</li>
<li>
<p dir="auto"><strong>Interpolators</strong> are linear maps such as the ones defined by the
<a href="https://github.com/emmt/LazyAlgebra.jl"><code>LazyAlgebra</code></a> framework.</p>
<ul dir="auto">
<li>
<p dir="auto">Applying the adjoint of interpolators is fully supported.  This can be
exploited for iterative fitting of data given an interpolated model.</p>
</li>
<li>
<p dir="auto">Interpolators may have coefficients computed <em>on the fly</em> or tabulated
(that is computed once).  The former requires almost no memory but can be
slower than the latter if the same interpolation is applied more than once.</p>
</li>
</ul>
</li>
</ul>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The easiest way to install <code>LinearInterpolators</code> is via Julia's package manager:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
pkg&quot;add LinearInterpolators&quot;"><pre><span class="pl-k">using</span> Pkg
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add LinearInterpolators<span class="pl-pds">"</span></span></pre></div>
</article></div>