<div id="readme" class="org" data-path="README.org"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mutablenamedtuplesjl" class="anchor" aria-hidden="true" href="#mutablenamedtuplesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MutableNamedTuples.jl</h1>
<p dir="auto">Sometimes you want a named tuple, but <a href="https://discourse.julialang.org/t/alternative-to-mutable-named-tuple/38375" rel="nofollow">mutable</a>. This works by wrapping
  a named tuple where all the elements are mutable <code>Ref</code> s  and then
  pretending that it’s elements are that contents of the <code>Ref</code> s  instead.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using MutableNamedTuples

julia&gt; mnt = MutableNamedTuple(a=1, b= 2)
MutableNamedTuple(a = 1, b = 2)

julia&gt; mnt.a = 2
2

julia&gt; mnt
MutableNamedTuple(a = 2, b = 2)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MutableNamedTuples

julia<span class="pl-k">&gt;</span> mnt <span class="pl-k">=</span> <span class="pl-c1">MutableNamedTuple</span>(a<span class="pl-k">=</span><span class="pl-c1">1</span>, b<span class="pl-k">=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">MutableNamedTuple</span>(a <span class="pl-k">=</span> <span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> mnt<span class="pl-k">.</span>a <span class="pl-k">=</span> <span class="pl-c1">2</span>
<span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> mnt
<span class="pl-c1">MutableNamedTuple</span>(a <span class="pl-k">=</span> <span class="pl-c1">2</span>, b <span class="pl-k">=</span> <span class="pl-c1">2</span>)</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; const MNT = MutableNamedTuple
MutableNamedTuple

julia&gt; A = [MNT(a = 1, b=2) MNT(a=3, b=6)
            MNT(a =-1, b=4) MNT(a=1, b=1)]
2×2 Array{MutableNamedTuple{(:a, :b),Tuple{Base.RefValue{Int64},Base.RefValue{Int64}}},2}:
 MutableNamedTuple(a = 1, b = 2)   MutableNamedTuple(a = 3, b = 6)
 MutableNamedTuple(a = -1, b = 4)  MutableNamedTuple(a = 1, b = 1)

julia&gt; A[1, 1].a = 100
100

julia&gt; A
2×2 Array{MutableNamedTuple{(:a, :b),Tuple{Base.RefValue{Int64},Base.RefValue{Int64}}},2}:
 MutableNamedTuple(a = 100, b = 2)  MutableNamedTuple(a = 3, b = 6)
 MutableNamedTuple(a = -1, b = 4)   MutableNamedTuple(a = 1, b = 1)   "><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">const</span> MNT <span class="pl-k">=</span> MutableNamedTuple
MutableNamedTuple

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> [<span class="pl-c1">MNT</span>(a <span class="pl-k">=</span> <span class="pl-c1">1</span>, b<span class="pl-k">=</span><span class="pl-c1">2</span>) <span class="pl-c1">MNT</span>(a<span class="pl-k">=</span><span class="pl-c1">3</span>, b<span class="pl-k">=</span><span class="pl-c1">6</span>)
            <span class="pl-c1">MNT</span>(a <span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>, b<span class="pl-k">=</span><span class="pl-c1">4</span>) <span class="pl-c1">MNT</span>(a<span class="pl-k">=</span><span class="pl-c1">1</span>, b<span class="pl-k">=</span><span class="pl-c1">1</span>)]
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">2</span> Array{MutableNamedTuple{(<span class="pl-c1">:a</span>, <span class="pl-c1">:b</span>),Tuple{Base<span class="pl-k">.</span>RefValue{Int64},Base<span class="pl-k">.</span>RefValue{Int64}}},<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">MutableNamedTuple</span>(a <span class="pl-k">=</span> <span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-c1">2</span>)   <span class="pl-c1">MutableNamedTuple</span>(a <span class="pl-k">=</span> <span class="pl-c1">3</span>, b <span class="pl-k">=</span> <span class="pl-c1">6</span>)
 <span class="pl-c1">MutableNamedTuple</span>(a <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-c1">4</span>)  <span class="pl-c1">MutableNamedTuple</span>(a <span class="pl-k">=</span> <span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> A[<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]<span class="pl-k">.</span>a <span class="pl-k">=</span> <span class="pl-c1">100</span>
<span class="pl-c1">100</span>

julia<span class="pl-k">&gt;</span> A
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">2</span> Array{MutableNamedTuple{(<span class="pl-c1">:a</span>, <span class="pl-c1">:b</span>),Tuple{Base<span class="pl-k">.</span>RefValue{Int64},Base<span class="pl-k">.</span>RefValue{Int64}}},<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">MutableNamedTuple</span>(a <span class="pl-k">=</span> <span class="pl-c1">100</span>, b <span class="pl-k">=</span> <span class="pl-c1">2</span>)  <span class="pl-c1">MutableNamedTuple</span>(a <span class="pl-k">=</span> <span class="pl-c1">3</span>, b <span class="pl-k">=</span> <span class="pl-c1">6</span>)
 <span class="pl-c1">MutableNamedTuple</span>(a <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-c1">4</span>)   <span class="pl-c1">MutableNamedTuple</span>(a <span class="pl-k">=</span> <span class="pl-c1">1</span>, b <span class="pl-k">=</span> <span class="pl-c1">1</span>)   </pre></div>
<p dir="auto">You should probably use <a href="https://github.com/JuliaArrays/StructArrays.jl">StructArrays.jl</a> though.</p>
</article></div>