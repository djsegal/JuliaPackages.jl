<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-fastcgijl" class="anchor" aria-hidden="true" href="#fastcgijl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FastCGI.jl</h1>
<p><a href="https://travis-ci.org/tanmaykm/FastCGI.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/37bf8bc8a910fd11caf4d94789dc4ea37310e56f/68747470733a2f2f7472617669732d63692e6f72672f74616e6d61796b6d2f466173744347492e6a6c2e706e67" alt="Build Status" data-canonical-src="https://travis-ci.org/tanmaykm/FastCGI.jl.png" style="max-width:100%;"></a></p>
<p><a href="https://coveralls.io/github/tanmaykm/FastCGI.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/4cd2e919241200054ec942ecc239033e727625de/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f74616e6d61796b6d2f466173744347492e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/tanmaykm/FastCGI.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>FastCGI is a binary protocol for interfacing interactive programs with a web server. It is a variation on the earlier Common Gateway Interface (CGI). FastCGI's main aim is to reduce the overhead related to interfacing between web server and CGI programs, allowing a server to handle more web page requests per unit of time.</p>
<p>FastCGI Specification: <a href="http://www.mit.edu/~yandros/doc/specs/fcgi-spec.html" rel="nofollow">http://www.mit.edu/~yandros/doc/specs/fcgi-spec.html</a></p>
<p>FastCGI.jl is a package that implements a Julia FastCGI client and server. Additionally, it allows Julia functions to be used to respond directly to requests, which can be significantly faster and more efficient.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples:</h2>
<h3><a id="user-content-using-the-server" class="anchor" aria-hidden="true" href="#using-the-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Using the server</h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FastCGI

julia<span class="pl-k">&gt;</span> server <span class="pl-k">=</span> <span class="pl-c1">FCGIServer</span>(<span class="pl-s"><span class="pl-pds">"</span>/var/run/fcgi/fcgi.socket<span class="pl-pds">"</span></span>)
<span class="pl-c1">FCGIServer</span>(<span class="pl-k">/</span>var<span class="pl-k">/</span>run<span class="pl-k">/</span>fcgi<span class="pl-k">/</span>fcgi<span class="pl-k">.</span>socket, open)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">process</span>(server)
┌ Info<span class="pl-k">:</span> processing
│   SCRIPT_FILENAME <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>...<span class="pl-pds">"</span></span>
└   SCRIPT_NAME <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>...<span class="pl-pds">"</span></span>
<span class="pl-k">...</span></pre></div>
<h3><a id="user-content-using-the-client" class="anchor" aria-hidden="true" href="#using-the-client"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Using the client</h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FastCGI

julia<span class="pl-k">&gt;</span> client <span class="pl-k">=</span> <span class="pl-c1">FCGIClient</span>(<span class="pl-s"><span class="pl-pds">"</span>/var/run/fcgi/fcgi.socket<span class="pl-pds">"</span></span>)
<span class="pl-c1">FCGIClient</span>(<span class="pl-k">/</span>var<span class="pl-k">/</span>run<span class="pl-k">/</span>fcgi<span class="pl-k">/</span>fcgi<span class="pl-k">.</span>socket, open)

julia<span class="pl-k">&gt;</span> headers <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>SCRIPT_FILENAME<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>/fcgihome/hello.sh<span class="pl-pds">"</span></span>);

julia<span class="pl-k">&gt;</span> request <span class="pl-k">=</span> <span class="pl-c1">FCGIRequest</span>(; headers<span class="pl-k">=</span>headers)
<span class="pl-c1">FCGIRequest</span>(complete<span class="pl-k">=</span><span class="pl-c1">false</span>, keepconn<span class="pl-k">=</span><span class="pl-c1">false</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">process</span>(client, request);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">wait</span>(request<span class="pl-k">.</span>isdone)

julia<span class="pl-k">&gt;</span> response <span class="pl-k">=</span> <span class="pl-c1">String</span>(<span class="pl-c1">take!</span>(request<span class="pl-k">.</span>out));</pre></div>
<h3><a id="user-content-hooking-up-julia-functions" class="anchor" aria-hidden="true" href="#hooking-up-julia-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Hooking up Julia functions</h3>
<p>FastCGI.jl server allows you to hook up a Julia function as a responder, instead of having to spawn an external process. This is much more efficient and fast. This can be an easy way to hook up a Julia backend to existing web servers like <a href="https://www.nginx.com/" rel="nofollow">Nginx</a>, <a href="https://httpd.apache.org/" rel="nofollow">Apache</a> or <a href="https://en.wikipedia.org/wiki/FastCGI#Web_servers_that_implement_FastCGI" rel="nofollow">others</a>.</p>
<p>To enable this mode, switch the runner to <code>FastCGI.FunctionRunner</code>:</p>
<div class="highlight highlight-source-julia"><pre>FastCGI<span class="pl-k">.</span><span class="pl-c1">set_server_runner</span>(FastCGI<span class="pl-k">.</span>FunctionRunner)</pre></div>
<p>Define the method that would respond to requests:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> <span class="pl-en">fastcgi_responder</span>(params, in, out, err)
    <span class="pl-c"><span class="pl-c">#</span> params: a Dict{String,String} with all fastcgi request parameters</span>
    <span class="pl-c"><span class="pl-c">#</span> in: input stream to be read from</span>
    <span class="pl-c"><span class="pl-c">#</span> out: output stream to write response to</span>
    <span class="pl-c"><span class="pl-c">#</span> err: error stream to write errors to</span>

    <span class="pl-c"><span class="pl-c">#</span> return the exit code that needs to be sent as the response</span>
    <span class="pl-k">return</span> <span class="pl-c1">0</span>
<span class="pl-k">end</span></pre></div>
<p>Send requests as usual, ensuring that the <code>SCRIPT_FILENAME</code> parameter in requests contains the fully qualified function name to invoke.</p>
<h3><a id="user-content-handling-timeouts" class="anchor" aria-hidden="true" href="#handling-timeouts"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Handling Timeouts</h3>
<p>There is no timeout imposed on the scripts by default. But a fixed timeout can be imposed on the scripts by configuring the <code>Runner</code> appropriately.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> set up a FunctionRunner with 10 second timeout</span>
FastCGI<span class="pl-k">.</span><span class="pl-c1">set_server_runner</span>(()<span class="pl-k">-&gt;</span>FastCGI<span class="pl-k">.</span><span class="pl-c1">FunctionRunner</span>(<span class="pl-c1">10</span>))

<span class="pl-c"><span class="pl-c">#</span> set up a ProcessRunner with 5 second timeout</span>
FastCGI<span class="pl-k">.</span><span class="pl-c1">set_server_runner</span>(()<span class="pl-k">-&gt;</span>FastCGI<span class="pl-k">.</span><span class="pl-c1">ProcessRunner</span>(<span class="pl-c1">5</span>))</pre></div>
<p>The server will terminate requests running longer than the timeout configured. A response code of 408 (Request Timeout) will be returned.</p>
</article></div>