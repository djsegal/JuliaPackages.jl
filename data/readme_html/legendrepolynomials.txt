<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-legendrepolynomialsjl" class="anchor" aria-hidden="true" href="#legendrepolynomialsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LegendrePolynomials.jl</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/jishnub/LegendrePolynomials.jl/workflows/CI/badge.svg?branch=master"><img src="https://github.com/jishnub/LegendrePolynomials.jl/workflows/CI/badge.svg?branch=master" alt="CI" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/jishnub/LegendrePolynomials.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f6af0214a262a1a2dc14ac3f64b2d265ce0a2eaaed0e8f7dbfafb75329fb1be2/68747470733a2f2f636f6465636f762e696f2f67682f6a6973686e75622f4c6567656e647265506f6c796e6f6d69616c732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d50474d52676574596d7a" alt="codecov" data-canonical-src="https://codecov.io/gh/jishnub/LegendrePolynomials.jl/branch/master/graph/badge.svg?token=PGMRgetYmz" style="max-width:100%;"></a>
<a href="https://jishnub.github.io/LegendrePolynomials.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://jishnub.github.io/LegendrePolynomials.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="dev" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>Iterative computation of Legendre Polynomials</p>
<h1><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Getting Started</h1>
<h2><a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installing</h2>
<p>To install the package, run</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="] add LegendrePolynomials
"><pre>] add LegendrePolynomials</pre></div>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick start</h2>
<p>To compute the Legendre polynomials for a given argument <code>x</code> and a degree <code>l</code>, use <code>Pl(x,l)</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; Pl(0.5, 20)
-0.04835838106737356
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Pl</span>(<span class="pl-c1">0.5</span>, <span class="pl-c1">20</span>)
<span class="pl-k">-</span><span class="pl-c1">0.04835838106737356</span></pre></div>
<p>To compute the n-th derivative of the Legendre polynomial of degree <code>l</code> at the argument <code>x</code>, use <code>dnPl(x, l, n)</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; dnPl(0.5, 10, 5)
-61760.91796875
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">dnPl</span>(<span class="pl-c1">0.5</span>, <span class="pl-c1">10</span>, <span class="pl-c1">5</span>)
<span class="pl-k">-</span><span class="pl-c1">61760.91796875</span></pre></div>
<p>To compute all the polynomials for <code>0 &lt;= l &lt;= lmax</code>, use <code>collectPl(x; lmax)</code></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; collectPl(0.5, lmax = 5)
6-element OffsetArray(::Array{Float64,1}, 0:5) with eltype Float64 with indices 0:5:
  1.0
  0.5
 -0.125
 -0.4375
 -0.2890625
  0.08984375
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">collectPl</span>(<span class="pl-c1">0.5</span>, lmax <span class="pl-k">=</span> <span class="pl-c1">5</span>)
<span class="pl-c1">6</span><span class="pl-k">-</span>element <span class="pl-c1">OffsetArray</span>(<span class="pl-k">::</span><span class="pl-c1">Array{Float64,1}</span>, <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">5</span>) with eltype Float64 with indices <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">5</span><span class="pl-k">:</span>
  <span class="pl-c1">1.0</span>
  <span class="pl-c1">0.5</span>
 <span class="pl-k">-</span><span class="pl-c1">0.125</span>
 <span class="pl-k">-</span><span class="pl-c1">0.4375</span>
 <span class="pl-k">-</span><span class="pl-c1">0.2890625</span>
  <span class="pl-c1">0.08984375</span></pre></div>
<p>To compute all the n-th derivatives for <code>0 &lt;= l &lt;= lmax</code>, use <code>collectdnPl(x; n, lmax)</code></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; collectdnPl(0.5, lmax = 5, n = 3)
6-element OffsetArray(::Array{Float64,1}, 0:5) with eltype Float64 with indices 0:5:
  0.0
  0.0
  0.0
 15.0
 52.5
 65.625
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">collectdnPl</span>(<span class="pl-c1">0.5</span>, lmax <span class="pl-k">=</span> <span class="pl-c1">5</span>, n <span class="pl-k">=</span> <span class="pl-c1">3</span>)
<span class="pl-c1">6</span><span class="pl-k">-</span>element <span class="pl-c1">OffsetArray</span>(<span class="pl-k">::</span><span class="pl-c1">Array{Float64,1}</span>, <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">5</span>) with eltype Float64 with indices <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">5</span><span class="pl-k">:</span>
  <span class="pl-c1">0.0</span>
  <span class="pl-c1">0.0</span>
  <span class="pl-c1">0.0</span>
 <span class="pl-c1">15.0</span>
 <span class="pl-c1">52.5</span>
 <span class="pl-c1">65.625</span></pre></div>
<p>Check the documentation for other usage.</p>
<h1><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h1>
<p>This project is licensed under the MIT License - see the <a href="https://github.com/jishnub/LegendrePolynomials.jl/blob/master/LICENSE">LICENSE</a> file for details.</p>
</article></div>