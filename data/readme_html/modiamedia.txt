<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-modiamedia" class="anchor" aria-hidden="true" href="#modiamedia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ModiaMedia</h1>
<p dir="auto"><a href="https://modiasim.github.io/ModiaMedia.jl/latest/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="Latest" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package  provides thermodynamic property models for use with <a href="https://github.com/ModiaSim/Modia.jl">Modia</a>
and other Julia packages. The initial goal is to achieve a similar functionality as
<a href="https://doc.modelica.org/Modelica%203.2.3/Resources/helpDymola/Modelica_Media.html#Modelica.Media" rel="nofollow">Modelica.Media</a>,
the standard media library for Modelica models, but with improvements based on Julia features
such as multiple dispatch.</p>
<p dir="auto">This package is under development and it is planned to provide all thermodynamic property models from
<a href="https://doc.modelica.org/Modelica%203.2.3/Resources/helpDymola/Modelica_Media.html#Modelica.Media" rel="nofollow">Modelica.Media</a>
in this package.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">This package is currently under development and is not yet registered.
Julia 1.7 is required. Installation is performed via:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]add https://github.com/ModiaSim/ModiaMedia.jl"><pre>julia<span class="pl-k">&gt;</span> ]add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>ModiaSim<span class="pl-k">/</span>ModiaMedia<span class="pl-k">.</span>jl</pre></div>
<p dir="auto">ModiaMedia performs plotting via <a href="https://github.com/ModiaSim/SignalTables.jl">SignalTables.jl</a>.</p>
<p dir="auto">Version 0.1.0 of the package is described in <a href="https://ep.liu.se/ecp/157/060/ecp19157060.pdf" rel="nofollow">Otter et al. (2019)</a>.
Current version 0.2.0-dev has been (partially) adapted to <a href="https://github.com/ModiaSim/SignalTables.jl">SignalTables.jl</a>.</p>
<h2 dir="auto"><a id="user-content-use" class="anchor" aria-hidden="true" href="#use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Use</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="  using ModiaMedia

  # Define thermodynamic property model to be used
  Medium = getMedium(&quot;N2&quot;);

  # Define the operating point where the medium shall be evaluated.
  p = 1e5    # in [Pa]
  T = 300.0  # in [K]

  # Set the medium-specific thermodynamic state from p and T
  # (could be also set from p,h, or p,s, or d,T, or
  # p,T,X, or p,h,X, or p,s,X, or d,T,X)
  state = setState_pT(Medium, p, T)

  # Update a state object with new values
  setState_pT!(state, p, T)

  # Call media functions (here to compute density and specific enthalpy)
  d = density(state)
  h = specificEnthalpy(state)

  # Print computed values
  println(&quot;data for p=$p, T=$T:&quot;)
  println(&quot;density          = &quot;, d)
  println(&quot;specificEnthalpy = &quot;, h)

  # List the available media
  listMedia()

  # Plot the most important characteristics of the medium
  using SignalTables
  usePlotPackage(&quot;PyPlot&quot;)   # for details see SignalTables
  @usingPlotPackage          # using SignalTablesInterface_PyPlot
  standardPlot(Medium, plot)"><pre>  <span class="pl-k">using</span> ModiaMedia

  <span class="pl-c"><span class="pl-c">#</span> Define thermodynamic property model to be used</span>
  Medium <span class="pl-k">=</span> <span class="pl-c1">getMedium</span>(<span class="pl-s"><span class="pl-pds">"</span>N2<span class="pl-pds">"</span></span>);

  <span class="pl-c"><span class="pl-c">#</span> Define the operating point where the medium shall be evaluated.</span>
  p <span class="pl-k">=</span> <span class="pl-c1">1e5</span>    <span class="pl-c"><span class="pl-c">#</span> in [Pa]</span>
  T <span class="pl-k">=</span> <span class="pl-c1">300.0</span>  <span class="pl-c"><span class="pl-c">#</span> in [K]</span>

  <span class="pl-c"><span class="pl-c">#</span> Set the medium-specific thermodynamic state from p and T</span>
  <span class="pl-c"><span class="pl-c">#</span> (could be also set from p,h, or p,s, or d,T, or</span>
  <span class="pl-c"><span class="pl-c">#</span> p,T,X, or p,h,X, or p,s,X, or d,T,X)</span>
  state <span class="pl-k">=</span> <span class="pl-c1">setState_pT</span>(Medium, p, T)

  <span class="pl-c"><span class="pl-c">#</span> Update a state object with new values</span>
  <span class="pl-c1">setState_pT!</span>(state, p, T)

  <span class="pl-c"><span class="pl-c">#</span> Call media functions (here to compute density and specific enthalpy)</span>
  d <span class="pl-k">=</span> <span class="pl-c1">density</span>(state)
  h <span class="pl-k">=</span> <span class="pl-c1">specificEnthalpy</span>(state)

  <span class="pl-c"><span class="pl-c">#</span> Print computed values</span>
  <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>data for p=<span class="pl-v">$p</span>, T=<span class="pl-v">$T</span>:<span class="pl-pds">"</span></span>)
  <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>density          = <span class="pl-pds">"</span></span>, d)
  <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>specificEnthalpy = <span class="pl-pds">"</span></span>, h)

  <span class="pl-c"><span class="pl-c">#</span> List the available media</span>
  <span class="pl-c1">listMedia</span>()

  <span class="pl-c"><span class="pl-c">#</span> Plot the most important characteristics of the medium</span>
  <span class="pl-k">using</span> SignalTables
  <span class="pl-c1">usePlotPackage</span>(<span class="pl-s"><span class="pl-pds">"</span>PyPlot<span class="pl-pds">"</span></span>)   <span class="pl-c"><span class="pl-c">#</span> for details see SignalTables</span>
  <span class="pl-c1">@usingPlotPackage</span>          <span class="pl-c"><span class="pl-c">#</span> using SignalTablesInterface_PyPlot</span>
  <span class="pl-c1">standardPlot</span>(Medium, plot)</pre></div>
<p dir="auto">The last command results in the following plot:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/a99383b8ef0c0a9c89e63b6368f2eac100c0d582ac12605252c1ad766c3d11a3/68747470733a2f2f4d6f64696153696d2e6769746875622e696f2f4d6f6469614d656469612e6a6c2f7265736f75726365732f696d616765732f4e322e706e67"><img src="https://camo.githubusercontent.com/a99383b8ef0c0a9c89e63b6368f2eac100c0d582ac12605252c1ad766c3d11a3/68747470733a2f2f4d6f64696153696d2e6769746875622e696f2f4d6f6469614d656469612e6a6c2f7265736f75726365732f696d616765732f4e322e706e67" alt="standardPlot" data-canonical-src="https://ModiaSim.github.io/ModiaMedia.jl/resources/images/N2.png" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-main-developers" class="anchor" aria-hidden="true" href="#main-developers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Main Developers</h2>
<ul dir="auto">
<li><a href="https://rmc.dlr.de/sr/en/staff/martin.otter/" rel="nofollow">Martin Otter</a> (<a href="https://www.dlr.de/sr/en" rel="nofollow">DLR - Institute of System Dynamics and Control</a>)</li>
<li>Hilding Elmqvist (<a href="http://www.mogram.net/" rel="nofollow">Mogram</a>),</li>
<li><a href="http://www.merl.com/people/laughman" rel="nofollow">Chris Laughman</a> (<a href="http://www.merl.com/" rel="nofollow">MERL</a>).</li>
<li>All the content of ModiaMedia is based on
<a href="https://doc.modelica.org/Modelica%203.2.3/Resources/helpDymola/Modelica_Media.html#Modelica.Media" rel="nofollow">Modelica.Media</a>
which was and is developed from many people.</li>
</ul>
<p dir="auto">License: MIT (expat)</p>
</article></div>