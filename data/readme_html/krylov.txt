<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-krylovjl-a-julia-basket-of-hand-picked-krylov-methods" class="anchor" aria-hidden="true" href="#krylovjl-a-julia-basket-of-hand-picked-krylov-methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Krylov.jl: A Julia basket of hand-picked Krylov methods</h1>
<p><a href="https://doi.org/10.5281/zenodo.3548984" rel="nofollow"><img src="https://camo.githubusercontent.com/34d8e25896cf1b3772647144e67a41334032b828/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e333534383938342e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.3548984.svg" style="max-width:100%;"></a></p>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Travis, AppVeyor and Cirrus build statuses</strong></th>
<th align="center"><strong>Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://JuliaSmoothOptimizers.github.io/Krylov.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://travis-ci.org/JuliaSmoothOptimizers/Krylov.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/67bcf6f260dd3ca8a2ab94e93b00364cfd8d1c5a/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4a756c6961536d6f6f74684f7074696d697a6572732f4b72796c6f762e6a6c3f6c6f676f3d747261766973" alt="Build Status" data-canonical-src="https://img.shields.io/travis/JuliaSmoothOptimizers/Krylov.jl?logo=travis" style="max-width:100%;"></a> <a href="https://ci.appveyor.com/project/dpo/krylov-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2f7027649bdb1b260028bcc1500ace0b726fc881/68747470733a2f2f696d672e736869656c64732e696f2f6369727275732f6769746875622f4a756c6961536d6f6f74684f7074696d697a6572732f4b72796c6f762e6a6c3f6c6f676f3d6170707665796f72" alt="Build status" data-canonical-src="https://img.shields.io/cirrus/github/JuliaSmoothOptimizers/Krylov.jl?logo=appveyor" style="max-width:100%;"></a> <a href="https://cirrus-ci.com/github/JuliaSmoothOptimizers/Krylov.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f7be66a577b97e1ddfbcd12a624f813b9959df17/68747470733a2f2f696d672e736869656c64732e696f2f6369727275732f6769746875622f4a756c6961536d6f6f74684f7074696d697a6572732f4b72796c6f762e6a6c3f6c6f676f3d4369727275732532304349" alt="Build Status" data-canonical-src="https://img.shields.io/cirrus/github/JuliaSmoothOptimizers/Krylov.jl?logo=Cirrus%20CI" style="max-width:100%;"></a></td>
<td align="center"><a href="https://coveralls.io/github/JuliaSmoothOptimizers/Krylov.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/8fb4c8a8dd551d28f6d1efd5f84c73c4f917e5fc/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c6961536d6f6f74684f7074696d697a6572732f4b72796c6f762e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaSmoothOptimizers/Krylov.jl/badge.svg?branch=master" style="max-width:100%;"></a> <a href="https://codecov.io/github/JuliaSmoothOptimizers/Krylov.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/069aa7eff0493d964d4e12c57b80b1bc350b094c/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c6961536d6f6f74684f7074696d697a6572732f4b72796c6f762e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/JuliaSmoothOptimizers/Krylov.jl/coverage.svg?branch=master" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-content" class="anchor" aria-hidden="true" href="#content"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Content</h2>
<p>This package provides implementations of certain of the most useful Krylov method for a variety of problems:</p>
<ol>
<li>Square or rectangular full-rank systems</li>
</ol>
<p align="center">
  <b><i>Ax = b</i></b>
</p>
<p>should be solved when <strong><em>b</em></strong> lies in the range space of <strong><em>A</em></strong>. This situation occurs when</p>
<ul>
<li><strong><em>A</em></strong> is square and nonsingular,</li>
<li><strong><em>A</em></strong> is tall and has full column rank and <strong><em>b</em></strong> lies in the range of <strong><em>A</em></strong>.</li>
</ul>
<ol start="2">
<li>Linear least-squares problems</li>
</ol>
<p align="center">
  minimize ‖<b><i>b</i></b> - <b><i>Ax</i></b>‖
</p>
<p>should be solved when <strong><em>b</em></strong> is not in the range of <strong><em>A</em></strong> (inconsistent systems), regardless of the shape and rank of <strong><em>A</em></strong>. This situation mainly occurs when</p>
<ul>
<li><strong><em>A</em></strong> is square and singular,</li>
<li><strong><em>A</em></strong> is tall and thin.</li>
</ul>
<p>Underdetermined sytems are less common but also occur.</p>
<p>If there are infinitely many such <strong><em>x</em></strong> (because <strong><em>A</em></strong> is column rank-deficient), one with minimum norm is identified</p>
<p align="center">
  minimize ‖<b><i>x</i></b>‖   subject to   <b><i>x</i></b> ∈ argmin ‖<b><i>b</i></b> - <b><i>Ax</i></b>‖.
</p>
<ol start="3">
<li>Linear least-norm problems</li>
</ol>
<p align="center">
  minimize ‖<b><i>x</i></b>‖   subject to   <b><i>Ax = b</i></b>
</p>
<p>sould be solved when <strong><em>A</em></strong> is column rank-deficient but <strong><em>b</em></strong> is in the range of <strong><em>A</em></strong> (consistent systems), regardless of the shape of <strong><em>A</em></strong>.
This situation mainly occurs when</p>
<ul>
<li><strong><em>A</em></strong> is square and singular,</li>
<li><strong><em>A</em></strong> is short and wide.</li>
</ul>
<p>Overdetermined sytems are less common but also occur.</p>
<ol start="4">
<li>Adjoint systems</li>
</ol>
<p align="center">
  <b><i>Ax = b</i></b>   and   <b><i>Aᵀy = c</i></b>
</p>
<p>where <strong><em>A</em></strong> can have any shape.</p>
<ol start="5">
<li>Saddle-point or symmetric quasi-definite (SQD) systems</li>
</ol>
<p align="center">
  [<b><i>M </i></b>   <b><i> A</i></b>]  [<b><i>x</i></b>]            =           [<b><i>b</i></b>]
  <br>
  [<b><i>Aᵀ</i></b>        <b><i>-N</i></b>]  [<b><i>y</i></b>]    [<b><i>c</i></b>]
</p>
<p>where <strong><em>A</em></strong> can have any shape.</p>
<p>Krylov solvers are particularly appropriate in situations where such problems must be solved but a factorization is not possible, either because:</p>
<ul>
<li><strong><em>A</em></strong> is not available explicitly,</li>
<li><strong><em>A</em></strong> would be dense or would consume an excessive amount of memory if it were materialized,</li>
<li>factors would consume an excessive amount of memory.</li>
</ul>
<p>Iterative methods are recommended in either of the following situations:</p>
<ul>
<li>the problem is sufficiently large that a factorization is not feasible or would be slow,</li>
<li>an effective preconditioner is known in cases where the problem has unfavorable spectral structure,</li>
<li>the operator can be represented efficiently as a sparse matrix,</li>
<li>the operator is <em>fast</em>, i.e., can be applied with better complexity than if it were materialized as a matrix. Certain fast operators would materialize as <em>dense</em> matrices.</li>
</ul>
<h2><a id="user-content-how-to-install" class="anchor" aria-hidden="true" href="#how-to-install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How to Install</h2>
<p>Krylov can be installed and tested through the Julia package manager:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> add Krylov
pkg<span class="pl-k">&gt;</span> test Krylov</pre></div>
</article></div>