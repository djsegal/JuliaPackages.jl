<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-charsetencodings" class="anchor" aria-hidden="true" href="#charsetencodings"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CharSetEncodings</h1>
<p dir="auto"><a href="https://github.com/JuliaString/CharSetEncodings.jl.git"><img src="https://camo.githubusercontent.com/b86e4af65cf9ea51be01f24b0d2d642e7b4b168c617c5b63b338b04e1eae795b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f4a756c6961537472696e672f43686172536574456e636f64696e67732e6a6c2e737667" alt="" data-canonical-src="https://img.shields.io/github/release/JuliaString/CharSetEncodings.jl.svg" style="max-width: 100%;"></a> <a href="https://github.com/JuliaString/CharSetEncodings.jl.git"><img src="https://camo.githubusercontent.com/55267b036d2d723c22d4b2139a19c354984785797807dbee75ac98780e21ccb7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f4a756c6961537472696e672f43686172536574456e636f64696e67732e6a6c2e737667" alt="" data-canonical-src="https://img.shields.io/github/release-date/JuliaString/CharSetEncodings.jl.svg" style="max-width: 100%;"></a> <a href="LICENSE.md"><img src="https://camo.githubusercontent.com/bbf49a2eb96e6f718803f2493bd7aa3baae61abb09b7f8fc185a94e08c504dc6/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c6174" alt="" data-canonical-src="http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat" style="max-width: 100%;"></a> <a href="https://github.com/JuliaString/CharSetEncodings.jl/issues"><img src="https://camo.githubusercontent.com/f5054ffcd4245c10d3ec85ef059e07aacf787b560f83ad4aec2236364437d097/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174" alt="contributions welcome" data-canonical-src="https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat" style="max-width: 100%;"></a></p>
<table>
<thead>
<tr>
<th align="center"><strong>Julia Version</strong></th>
<th align="center"><strong>Unit Tests</strong></th>
<th align="center"><strong>Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://github.com/JuliaLang/Julia"><img src="https://camo.githubusercontent.com/514feca078cec1d0f876174356358ac616bed330b2a880fa65daca3148ead714/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f4a756c69614c616e672f6a756c69612e737667" alt="" data-canonical-src="https://img.shields.io/github/release/JuliaLang/julia.svg" style="max-width: 100%;"></a></td>
<td align="center">[![][]][]</td>
<td align="center"><a href="https://codecov.io/gh/JuliaString/CharSetEncodings.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/09e5cbdc25a15414f061cd0f23f38965a3822bdfc616e60aba1c04b131f99d80/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961537472696e672f43686172536574456e636f64696e67732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaString/CharSetEncodings.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></td>
</tr>
<tr>
<td align="center">Julia Latest</td>
<td align="center"><a href="https://github.com/JuliaString/CharSetEncodings.jl.git"><img src="https://camo.githubusercontent.com/bffde5d19b03f5035e4c2b6b150d38d39e367cb0fc1e98c9ac76a8415eaeb94f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636865636b732d7374617475732f4a756c6961537472696e672f43686172536574456e636f64696e67732e6a6c2f6d6173746572" alt="" data-canonical-src="https://img.shields.io/github/checks-status/JuliaString/CharSetEncodings.jl/master" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/JuliaString/CharSetEncodings.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/09e5cbdc25a15414f061cd0f23f38965a3822bdfc616e60aba1c04b131f99d80/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961537472696e672f43686172536574456e636f64696e67732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaString/CharSetEncodings.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Architecture</h2>
<p dir="auto">This provides the basic types and mode methods for dealing with character sets, encodings,
and character set encodings.</p>
<h2 dir="auto"><a id="user-content-types" class="anchor" aria-hidden="true" href="#types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Types</h2>
<p dir="auto">Currently, there are the following types:</p>
<ul dir="auto">
<li><code>CodeUnitTypes</code>  a Union of the 3 codeunit types (UInt8, UInt16, UInt32) for convenience</li>
<li><code>CharSet</code>        a struct type, which is parameterized by the name of the character set and the type needed to represent a code point</li>
<li><code>Encoding</code>       a struct type, parameterized by the name of the encoding</li>
</ul>
<h2 dir="auto"><a id="user-content-built-in-character-sets--character-set-encodings" class="anchor" aria-hidden="true" href="#built-in-character-sets--character-set-encodings"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Built-in Character Sets / Character Set Encodings</h2>
<ul dir="auto">
<li>
<p dir="auto"><code>Binary</code>  For storing non-textual data as a sequence of bytes, 0-0xff</p>
</li>
<li>
<p dir="auto"><code>ASCII</code>   ASCII (Unicode subset, 0-0x7f)</p>
</li>
<li>
<p dir="auto"><code>Latin</code>   Latin-1 (ISO-8859-1) (Unicode subset, 0-0xff)</p>
</li>
<li>
<p dir="auto"><code>UCS2</code>    UCS-2 (Unicode subset, 0-0xd7ff, 0xe000-0xffff, BMP only, no surrogates)</p>
</li>
<li>
<p dir="auto"><code>UTF32</code>   UTF-32 (Full Unicode, 0-0xd7ff, 0xe000-0x10ffff)</p>
</li>
<li>
<p dir="auto"><code>UniPlus</code> Unvalidated Unicode (i.e. like <code>String</code>, can contain invalid codepoints)</p>
</li>
<li>
<p dir="auto"><code>Text1</code>   Unknown 1-byte character set</p>
</li>
<li>
<p dir="auto"><code>Text2</code>   Unknown 2-byte character set</p>
</li>
<li>
<p dir="auto"><code>Text4</code>   Unknown 4-byte character set</p>
</li>
</ul>
<h2 dir="auto"><a id="user-content-built-in-encodings" class="anchor" aria-hidden="true" href="#built-in-encodings"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Built-in Encodings</h2>
<ul dir="auto">
<li><code>UTF8Encoding</code></li>
<li><code>Native1Byte</code></li>
<li><code>Native2Byte</code></li>
<li><code>Native4Byte</code></li>
<li><code>NativeUTF16</code></li>
<li><code>Swapped4Byte</code></li>
<li><code>Swapped2Byte</code></li>
<li><code>SwappedUTF16</code></li>
<li><code>LE2</code></li>
<li><code>BE2</code></li>
<li><code>LE4</code></li>
<li><code>BE4</code></li>
<li><code>UTF16LE</code></li>
<li><code>UTF16BE</code></li>
<li><code>2Byte</code></li>
<li><code>4Byte</code></li>
<li><code>UTF16</code></li>
</ul>
<h2 dir="auto"><a id="user-content-built-in-cses" class="anchor" aria-hidden="true" href="#built-in-cses"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Built-in CSEs</h2>
<ul dir="auto">
<li>
<p dir="auto"><code>BinaryCSE</code>, <code>Text1CSE</code>, <code>ASCIICSE</code>, <code>LatinCSE</code></p>
</li>
<li>
<p dir="auto"><code>Text2CSE</code>, <code>UCS2CSE</code></p>
</li>
<li>
<p dir="auto"><code>Text4CSE</code>, <code>UTF32CSE</code></p>
</li>
<li>
<p dir="auto"><code>UTF8CSE</code>    <code>UTF32CharSet</code>, all valid, using <code>UTF8Encoding</code>,
conforming to the Unicode Organization's standard,
i.e. no long encodings, surrogates, or invalid bytes.</p>
</li>
<li>
<p dir="auto"><code>RawUTF8CSE</code> <code>UniPlusCharSet</code>, not validated, using <code>UTF8Encoding</code>,
may have invalid sequences, long encodings, encode surrogates and characters
up to <code>0x7fffffff</code></p>
</li>
<li>
<p dir="auto"><code>UTF16CSE</code>   <code>UTF32CharSet</code>, all valid, using <code>UTF16</code> Encoding (native order),
conforming to the Unicode standard, i.e. no out of order or isolated surrogates.</p>
</li>
</ul>
<h2 dir="auto"><a id="user-content-internal-unicode-subset-types" class="anchor" aria-hidden="true" href="#internal-unicode-subset-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Internal Unicode subset types</h2>
<ul dir="auto">
<li><code>_LatinCSE</code>   Indicates has at least 1 character &gt; 0x7f, all &lt;= 0xff</li>
<li><code>_UCS2CSE</code>    Indicates has at least 1 character &gt; 0xff, all &lt;= 0xffff</li>
<li><code>_UTF32CSE</code>   Indicates has at least 1 non-BMP character</li>
</ul>
<h2 dir="auto"><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>API</h2>
<p dir="auto">The <code>cse</code> function returns the character set encoding for a string type, string.
Returns <code>RawUTF8CSE</code> as a fallback for <code>AbstractString</code> (i.e. same as <code>String</code>)
The <code>charset</code> function returns the character set for a string type, string, character type, or character.
The <code>encoding</code> function returns the encoding for a type or string.
The <code>codeunit</code> function returns the code unit used for a character set encoding
The <code>cs"..."</code> string macro creates a CharSet type with that name
The <code>enc"..."</code> string macro creates an Encoding type with that name
The <code>@cse(cs, enc)</code> macro creates a character set encoding with the given character set and encoding</p>
<p dir="auto">Also Exports the helpful constant <code>Bool</code> flags <code>BIG_ENDIAN</code> and <code>LITTLE_ENDIAN</code></p>
</article></div>