<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-dash-vtk" class="anchor" aria-hidden="true" href="#dash-vtk"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Dash VTK</h1>
<p dir="auto"><em>Dash VTK lets you integrate the <code>vtk.js</code> visualization pipeline directly into your Dash app. It is powered by <a href="https://github.com/Kitware/react-vtk-js/"><code>react-vtk-js</code></a>.</em></p>
<table>
<thead>
<tr>
<th><a target="_blank" rel="noopener noreferrer" href="https://github.com/plotly/dash-vtk/blob/master/demos/usage-algorithm/demo.jpg?raw=true"><img src="https://github.com/plotly/dash-vtk/raw/master/demos/usage-algorithm/demo.jpg?raw=true" alt="" style="max-width: 100%;"></a></th>
<th><a target="_blank" rel="noopener noreferrer" href="https://github.com/plotly/dash-vtk/blob/master/demos/pyvista-point-cloud/demo.jpg?raw=true"><img src="https://github.com/plotly/dash-vtk/raw/master/demos/pyvista-point-cloud/demo.jpg?raw=true" alt="" style="max-width: 100%;"></a></th>
<th><a target="_blank" rel="noopener noreferrer" href="https://github.com/plotly/dash-vtk/blob/master/demos/pyvista-terrain-following-mesh/demo.jpg?raw=true"><img src="https://github.com/plotly/dash-vtk/raw/master/demos/pyvista-terrain-following-mesh/demo.jpg?raw=true" alt="" style="max-width: 100%;"></a></th>
</tr>
</thead>
<tbody>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/plotly/dash-vtk/blob/master/demos/volume-rendering/demo.jpg?raw=true"><img src="https://github.com/plotly/dash-vtk/raw/master/demos/volume-rendering/demo.jpg?raw=true" alt="" style="max-width: 100%;"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/plotly/dash-vtk/blob/master/demos/usage-vtk-cfd/demo.jpg?raw=true"><img src="https://github.com/plotly/dash-vtk/raw/master/demos/usage-vtk-cfd/demo.jpg?raw=true" alt="" style="max-width: 100%;"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/plotly/dash-vtk/blob/master/demos/synthetic-volume-rendering/demo.jpg?raw=true"><img src="https://github.com/plotly/dash-vtk/raw/master/demos/synthetic-volume-rendering/demo.jpg?raw=true" alt="" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<ul dir="auto">
<li><a href="https://dash.plotly.com/vtk" rel="nofollow">Docs</a></li>
<li><a href="https://dash-gallery.plotly.host/dash-vtk-explorer/" rel="nofollow">Demo Explorer</a></li>
<li><a href="https://github.com/plotly/dash-vtk">Repository</a></li>
<li><a href="https://go.plotly.com/dash-vtk" rel="nofollow">Webinar</a></li>
</ul>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting started</h2>
<h3 dir="auto"><a id="user-content-quickstart-python" class="anchor" aria-hidden="true" href="#quickstart-python"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quickstart (Python)</h3>
<p dir="auto">First, install the library through <code>pip</code>:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pip install dash-vtk"><pre class="notranslate"><code>pip install dash-vtk
</code></pre></div>
<p dir="auto">Then, create a file called <code>app.py</code> and add the following example:</p>
<div class="highlight highlight-source-python notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import dash
import dash_vtk
import dash_html_components as html

app = dash.Dash(__name__)

app.layout = html.Div(
    style={&quot;width&quot;: &quot;100%&quot;, &quot;height&quot;: &quot;calc(100vh - 16px)&quot;},
    children=dash_vtk.View([
        dash_vtk.GeometryRepresentation([
            dash_vtk.Algorithm(
                vtkClass=&quot;vtkConeSource&quot;,
                state={&quot;resolution&quot;: 64, &quot;capping&quot;: False},
            )
        ]),
    ]),
)

if __name__ == &quot;__main__&quot;:
    app.run_server(debug=True)"><pre><span class="pl-k">import</span> <span class="pl-s1">dash</span>
<span class="pl-k">import</span> <span class="pl-s1">dash_vtk</span>
<span class="pl-k">import</span> <span class="pl-s1">dash_html_components</span> <span class="pl-k">as</span> <span class="pl-s1">html</span>

<span class="pl-s1">app</span> <span class="pl-c1">=</span> <span class="pl-s1">dash</span>.<span class="pl-v">Dash</span>(<span class="pl-s1">__name__</span>)

<span class="pl-s1">app</span>.<span class="pl-s1">layout</span> <span class="pl-c1">=</span> <span class="pl-s1">html</span>.<span class="pl-v">Div</span>(
    <span class="pl-s1">style</span><span class="pl-c1">=</span>{<span class="pl-s">"width"</span>: <span class="pl-s">"100%"</span>, <span class="pl-s">"height"</span>: <span class="pl-s">"calc(100vh - 16px)"</span>},
    <span class="pl-s1">children</span><span class="pl-c1">=</span><span class="pl-s1">dash_vtk</span>.<span class="pl-v">View</span>([
        <span class="pl-s1">dash_vtk</span>.<span class="pl-v">GeometryRepresentation</span>([
            <span class="pl-s1">dash_vtk</span>.<span class="pl-v">Algorithm</span>(
                <span class="pl-s1">vtkClass</span><span class="pl-c1">=</span><span class="pl-s">"vtkConeSource"</span>,
                <span class="pl-s1">state</span><span class="pl-c1">=</span>{<span class="pl-s">"resolution"</span>: <span class="pl-c1">64</span>, <span class="pl-s">"capping"</span>: <span class="pl-c1">False</span>},
            )
        ]),
    ]),
)

<span class="pl-k">if</span> <span class="pl-s1">__name__</span> <span class="pl-c1">==</span> <span class="pl-s">"__main__"</span>:
    <span class="pl-s1">app</span>.<span class="pl-en">run_server</span>(<span class="pl-s1">debug</span><span class="pl-c1">=</span><span class="pl-c1">True</span>)</pre></div>
<p dir="auto">Now, simply run the app:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="python app.py"><pre class="notranslate"><code>python app.py
</code></pre></div>
<p dir="auto">For a more detailed example, see <code>usage.py</code>.</p>
<h3 dir="auto"><a id="user-content-quickstart-r" class="anchor" aria-hidden="true" href="#quickstart-r"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quickstart (R)</h3>
<p dir="auto">First, install the package from GitHub (the package is not yet available via CRAN):</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="remotes::install_github(&quot;plotly/dash-vtk&quot;)"><pre class="notranslate"><code>remotes::install_github("plotly/dash-vtk")
</code></pre></div>
<p dir="auto">then, create your component and add it to your layout:</p>
<div class="highlight highlight-source-r notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="library(dash)
library(dashVtk)
library(dashHtmlComponents)

app &lt;- Dash$new()

app$layout(htmlDiv(
    style = list(&quot;width&quot; = &quot;100%&quot;, &quot;height&quot; = &quot;calc(100vh - 16px)&quot;),
    children = vtkView(list(
        vtkGeometryRepresentation(
            vtkAlgorithm(
                vtkClass = &quot;vtkConeSource&quot;,
                state = list(&quot;resolution&quot; = 64, &quot;capping&quot; = FALSE),
            )
        )
    )
)

app$run_server()"><pre>library(<span class="pl-smi">dash</span>)
library(<span class="pl-smi">dashVtk</span>)
library(<span class="pl-smi">dashHtmlComponents</span>)

<span class="pl-smi">app</span> <span class="pl-k">&lt;-</span> <span class="pl-smi">Dash</span><span class="pl-k">$</span>new()

<span class="pl-smi">app</span><span class="pl-k">$</span>layout(htmlDiv(
    <span class="pl-v">style</span> <span class="pl-k">=</span> <span class="pl-k">list</span>(<span class="pl-s"><span class="pl-pds">"</span>width<span class="pl-pds">"</span></span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>100%<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>height<span class="pl-pds">"</span></span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>calc(100vh - 16px)<span class="pl-pds">"</span></span>),
    <span class="pl-v">children</span> <span class="pl-k">=</span> vtkView(<span class="pl-k">list</span>(
        vtkGeometryRepresentation(
            vtkAlgorithm(
                <span class="pl-v">vtkClass</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>vtkConeSource<span class="pl-pds">"</span></span>,
                <span class="pl-v">state</span> <span class="pl-k">=</span> <span class="pl-k">list</span>(<span class="pl-s"><span class="pl-pds">"</span>resolution<span class="pl-pds">"</span></span> <span class="pl-k">=</span> <span class="pl-c1">64</span>, <span class="pl-s"><span class="pl-pds">"</span>capping<span class="pl-pds">"</span></span> <span class="pl-k">=</span> <span class="pl-c1">FALSE</span>),
            )
        )
    )
)

<span class="pl-smi">app</span><span class="pl-k">$</span>run_server()</pre></div>
<h3 dir="auto"><a id="user-content-quickstart-julia" class="anchor" aria-hidden="true" href="#quickstart-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quickstart (Julia)</h3>
<p dir="auto">First, install the package -- until it's published via the Registrator, you may install the current version via GitHub URL instead:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(PackageSpec(url=&quot;https://github.com/plotly/dash-vtk.git&quot;))"><pre class="notranslate"><code>using Pkg
Pkg.add(PackageSpec(url="https://github.com/plotly/dash-vtk.git"))
</code></pre></div>
<p dir="auto">then, create your component and add it to your layout:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Dash, DashVtk, DashHtmlComponents

app = dash();

app.layout = html_div(style = (width = &quot;100%&quot;, height = &quot;calc(100vh - 16px)&quot;,)) do
    vtk_view(
        vtk_geometryrepresentation(
            vtk_algorithm(
                vtkClass = &quot;vtkConeSource&quot;,
                state = (resolution = 64, capping = false)
            )
        )
    )
end;

run_server(app)"><pre><span class="pl-k">using</span> Dash, DashVtk, DashHtmlComponents

app <span class="pl-k">=</span> <span class="pl-c1">dash</span>();

app<span class="pl-k">.</span>layout <span class="pl-k">=</span> <span class="pl-c1">html_div</span>(style <span class="pl-k">=</span> (width <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>100%<span class="pl-pds">"</span></span>, height <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>calc(100vh - 16px)<span class="pl-pds">"</span></span>,)) <span class="pl-k">do</span>
    <span class="pl-c1">vtk_view</span>(
        <span class="pl-c1">vtk_geometryrepresentation</span>(
            <span class="pl-c1">vtk_algorithm</span>(
                vtkClass <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>vtkConeSource<span class="pl-pds">"</span></span>,
                state <span class="pl-k">=</span> (resolution <span class="pl-k">=</span> <span class="pl-c1">64</span>, capping <span class="pl-k">=</span> <span class="pl-c1">false</span>)
            )
        )
    )
<span class="pl-k">end</span>;

<span class="pl-c1">run_server</span>(app)</pre></div>
<h2 dir="auto"><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing</h2>
<p dir="auto">See <a href="./docs/CONTRIBUTING.md">docs/CONTRIBUTING.md</a> to learn about:</p>
<ul dir="auto">
<li>Setting up the environment</li>
<li>Coding Style</li>
<li>Code quality &amp; design</li>
<li>Tests</li>
<li>Publishing</li>
</ul>
<h2 dir="auto"><a id="user-content-running-the-demos" class="anchor" aria-hidden="true" href="#running-the-demos"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Running the demos</h2>
<p dir="auto">First clone the project (replace <code>&lt;name&gt;</code> with the desired demo):</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/plotly/dash-vtk.git
cd dash-vtk/demos/&lt;name&gt;/"><pre>git clone https://github.com/plotly/dash-vtk.git
<span class="pl-c1">cd</span> dash-vtk/demos/<span class="pl-k">&lt;</span>name<span class="pl-k">&gt;</span>/</pre></div>
<p dir="auto">Create a venv and install the requirements:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="python -m venv venv
source venv/bin/activate  # for Windows, use venv\Scripts\activate.bat
pip install -e ../../  # IMPORTANT! If you skip you will get the pip version of dash-vtk
pip install -r requirements.txt"><pre>python -m venv venv
<span class="pl-c1">source</span> venv/bin/activate  <span class="pl-c"><span class="pl-c">#</span> for Windows, use venv\Scripts\activate.bat</span>
pip install -e ../../  <span class="pl-c"><span class="pl-c">#</span> IMPORTANT! If you skip you will get the pip version of dash-vtk</span>
pip install -r requirements.txt</pre></div>
<p dir="auto">Run the demo:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="python app.py"><pre>python app.py</pre></div>
<h3 dir="auto"><a id="user-content-python-environments" class="anchor" aria-hidden="true" href="#python-environments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Python environments</h3>
<p dir="auto">Depending on your Python environment, you may run into deployment issue related to the vtk version that get pulled in.</p>
<p dir="auto">Ideally we want a version of vtk equal or newer than 9. When using such version of VTK, <code>dash-vtk</code> won't even try to load the rendering module of VTK and if OpenGL is not available on your system everything will still be fine.</p>
<p dir="auto">On the other hand, if you are running python-3.6 and/or pip-18 or less and you don't upgrade your pip version, you will only be able to use <code>vtk&lt;=8.1.2</code>. With vtk 8, there is no way to prevent the loading of the GL library which means that you will have to install libGL on your system, or you will run into errors like this:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="  File &quot;.../python/lib/python3.6/site-packages/vtkmodules/all.py&quot;, line 29, in &lt;module&gt;
    from .vtkRenderingOpenGL2 import *
ImportError: libGL.so.1: cannot open shared object file: No such file or directory
[2021-02-08 18:36:15 +0000] [10] [INFO] Worker exiting (pid: 10)"><pre class="notranslate"><code>  File ".../python/lib/python3.6/site-packages/vtkmodules/all.py", line 29, in &lt;module&gt;
    from .vtkRenderingOpenGL2 import *
ImportError: libGL.so.1: cannot open shared object file: No such file or directory
[2021-02-08 18:36:15 +0000] [10] [INFO] Worker exiting (pid: 10)
</code></pre></div>
<p dir="auto">or this:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="  File &quot;.../python3.7/site-packages/vtk/__init__.py&quot;, line 12, in &lt;module&gt;
    from .vtkOpenGLKit import *
  File &quot;.../python3.7/site-packages/vtk/vtkOpenGLKit.py&quot;, line 9, in &lt;module&gt;
    from vtkOpenGLKitPython import *
ModuleNotFoundError: No module named 'vtkOpenGLKitPython'"><pre class="notranslate"><code>  File ".../python3.7/site-packages/vtk/__init__.py", line 12, in &lt;module&gt;
    from .vtkOpenGLKit import *
  File ".../python3.7/site-packages/vtk/vtkOpenGLKit.py", line 9, in &lt;module&gt;
    from vtkOpenGLKitPython import *
ModuleNotFoundError: No module named 'vtkOpenGLKitPython'
</code></pre></div>
<p dir="auto">Heroku and Dash Enterprise handle it is slightly different because you will have to install <code>libgl1-mesa-glx</code> via some <code>apt</code> files. In the case of Heroku, you will have to use a <a href="https://elements.heroku.com/buildpacks/heroku/heroku-buildpack-apt" rel="nofollow">buildpack</a> and add <code>libgl1-mesa-glx</code> to a <code>Aptfile</code> located in the root of your project. In the case of Dash Enterprise, you do not need to change the buildpack (it is handled automatically) but you will need to add <code>libgl1-mesa-glx</code> to a <code>apt-packages</code> file instead of <code>Aptfile</code>; see <a href="https://github.com/plotly/dash-sample-apps/blob/master/apps/dash-vtk-explorer/apt-packages">this app</a> as an example.</p>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<p dir="auto">You can find the complete API reference in <a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md"><code>docs/REFERENCES.md</code></a> for each of the following components:</p>
<ul dir="auto">
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#Algorithm">Algorithm</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#Calculator">Calculator</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#CellData">CellData</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#DataArray">DataArray</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#FieldData">FieldData</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#GeometryRepresentation">GeometryRepresentation</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#ImageData">ImageData</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#PointCloudRepresentation">PointCloudRepresentation</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#PointData">PointData</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#PolyData">PolyData</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#Reader">Reader</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#ShareDataSet">ShareDataSet</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#SliceRepresentation">SliceRepresentation</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#View">View</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#VolumeController">VolumeController</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#VolumeDataRepresentation">VolumeDataRepresentation</a></li>
<li><a href="https://github.com/plotly/dash-vtk/blob/master/docs/REFERENCES.md#VolumeRepresentation">VolumeRepresentation</a></li>
</ul>
<h2 dir="auto"><a id="user-content-demos" class="anchor" aria-hidden="true" href="#demos"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Demos</h2>
<h3 dir="auto"><a id="user-content-usage-for-dash_vtkalgorithm" class="anchor" aria-hidden="true" href="#usage-for-dash_vtkalgorithm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage for <code>dash_vtk.Algorithm</code></h3>
<ul dir="auto">
<li><a href="https://github.com/plotly/dash-vtk/tree/master/demos/usage-algorithm">Code</a></li>
<li><a href="https://dash-gallery.plotly.host/dash-vtk-explorer/usage-algorithm" rel="nofollow">Online Demo</a></li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/plotly/dash-vtk/blob/master/demos/usage-algorithm/demo.jpg?raw=true"><img src="https://github.com/plotly/dash-vtk/raw/master/demos/usage-algorithm/demo.jpg?raw=true" alt="" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-point-cloud-with-pyvista" class="anchor" aria-hidden="true" href="#point-cloud-with-pyvista"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Point Cloud with PyVista</h3>
<ul dir="auto">
<li><a href="https://github.com/plotly/dash-vtk/tree/master/demos/pyvista-point-cloud">Code</a></li>
<li><a href="https://dash-gallery.plotly.host/dash-vtk-explorer/pyvista-point-cloud" rel="nofollow">Online Demo</a></li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/plotly/dash-vtk/blob/master/demos/pyvista-point-cloud/demo.jpg?raw=true"><img src="https://github.com/plotly/dash-vtk/raw/master/demos/pyvista-point-cloud/demo.jpg?raw=true" alt="" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-terrain-deformation-using-pyvista-and-dash-vtk" class="anchor" aria-hidden="true" href="#terrain-deformation-using-pyvista-and-dash-vtk"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Terrain deformation using PyVista and dash-vtk</h3>
<ul dir="auto">
<li><a href="https://github.com/plotly/dash-vtk/tree/master/demos/pyvista-terrain-following-mesh">Code</a></li>
<li><a href="https://dash-gallery.plotly.host/dash-vtk-explorer/pyvista-terrain-following-mesh" rel="nofollow">Online Demo</a></li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/plotly/dash-vtk/blob/master/demos/pyvista-terrain-following-mesh/demo.jpg?raw=true"><img src="https://github.com/plotly/dash-vtk/raw/master/demos/pyvista-terrain-following-mesh/demo.jpg?raw=true" alt="" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-volume-rendering" class="anchor" aria-hidden="true" href="#volume-rendering"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Volume Rendering</h3>
<ul dir="auto">
<li><a href="https://github.com/plotly/dash-vtk/tree/master/demos/volume-rendering">Code</a></li>
<li><a href="https://dash-gallery.plotly.host/dash-vtk-explorer/volume-rendering" rel="nofollow">Online Demo</a></li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/plotly/dash-vtk/blob/master/demos/volume-rendering/demo.jpg?raw=true"><img src="https://github.com/plotly/dash-vtk/raw/master/demos/volume-rendering/demo.jpg?raw=true" alt="A demo of the volume-rendering app" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-vtk-for-data-processing-and-dash-vtk-for-rendering" class="anchor" aria-hidden="true" href="#vtk-for-data-processing-and-dash-vtk-for-rendering"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>VTK for data processing and dash-vtk for rendering</h3>
<ul dir="auto">
<li><a href="https://github.com/plotly/dash-vtk/tree/master/demos/usage-vtk-cfd">Code</a></li>
<li><a href="https://dash-gallery.plotly.host/dash-vtk-explorer/usage-vtk-cfd" rel="nofollow">Online Demo</a></li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/plotly/dash-vtk/blob/master/demos/usage-vtk-cfd/demo.jpg?raw=true"><img src="https://github.com/plotly/dash-vtk/raw/master/demos/usage-vtk-cfd/demo.jpg?raw=true" alt="A demo of the usage-vtk-cfd app" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-synthetic-volume-rendering" class="anchor" aria-hidden="true" href="#synthetic-volume-rendering"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Synthetic Volume Rendering</h3>
<ul dir="auto">
<li><a href="https://github.com/plotly/dash-vtk/tree/master/demos/synthetic-volume-rendering">Code</a></li>
<li><a href="https://dash-gallery.plotly.host/dash-vtk-explorer/synthetic-volume-rendering" rel="nofollow">Online Demo</a></li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/plotly/dash-vtk/blob/master/demos/synthetic-volume-rendering/demo.jpg?raw=true"><img src="https://github.com/plotly/dash-vtk/raw/master/demos/synthetic-volume-rendering/demo.jpg?raw=true" alt="A demo of the synthetic-volume-rendering app" style="max-width: 100%;"></a></p>
</article></div>