<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-weakvaluedicts" class="anchor" aria-hidden="true" href="#weakvaluedicts"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>WeakValueDicts</h1>
<p dir="auto"><a href="https://travis-ci.com/travigd/WeakValueDicts.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d250a8a46784df51afbdf15a866cb6adbd40693d3caee90af29d5e7c39864812/68747470733a2f2f7472617669732d63692e636f6d2f747261766967642f5765616b56616c756544696374732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/travigd/WeakValueDicts.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/travigd/WeakValueDicts.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c8041a8225af6b9c1b50549756e1201bce29aaece97e946d6535da51a2ceaa01/68747470733a2f2f636f6465636f762e696f2f67682f747261766967642f5765616b56616c756544696374732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/travigd/WeakValueDicts.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using WeakValueDicts

julia&gt; mutable struct MyStruct
           value::Any
       end

julia&gt; wvd = WeakValueDict()
WeakValueDict{Any,Any} with 0 entries

# Hold an explicit reference to an instance of MyStruct so it wont be GC'd
julia&gt; foo = MyStruct(&quot;foo&quot;)
MyStruct(&quot;foo&quot;)

julia&gt; wvd[&quot;foo&quot;] = foo
MyStruct(&quot;foo&quot;)

julia&gt; wvd[&quot;foo&quot;]
MyStruct(&quot;foo&quot;)

# Clear the reference and run the garbage collector
julia&gt; foo = nothing

julia&gt; Base.GC.gc(true)

# We no longer have a foo entry in the dict because it was finalized (GC'd)
julia&gt; wvd[&quot;foo&quot;]
ERROR: KeyError: key &quot;foo&quot; not found"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> WeakValueDicts

julia<span class="pl-k">&gt;</span> <span class="pl-k">mutable struct</span> MyStruct
           value<span class="pl-k">::</span><span class="pl-c1">Any</span>
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> wvd <span class="pl-k">=</span> <span class="pl-c1">WeakValueDict</span>()
WeakValueDict{Any,Any} with <span class="pl-c1">0</span> entries

<span class="pl-c"><span class="pl-c">#</span> Hold an explicit reference to an instance of MyStruct so it wont be GC'd</span>
julia<span class="pl-k">&gt;</span> foo <span class="pl-k">=</span> <span class="pl-c1">MyStruct</span>(<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>)
<span class="pl-c1">MyStruct</span>(<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> wvd[<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> foo
<span class="pl-c1">MyStruct</span>(<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> wvd[<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>]
<span class="pl-c1">MyStruct</span>(<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Clear the reference and run the garbage collector</span>
julia<span class="pl-k">&gt;</span> foo <span class="pl-k">=</span> <span class="pl-c1">nothing</span>

julia<span class="pl-k">&gt;</span> Base<span class="pl-k">.</span>GC<span class="pl-k">.</span><span class="pl-c1">gc</span>(<span class="pl-c1">true</span>)

<span class="pl-c"><span class="pl-c">#</span> We no longer have a foo entry in the dict because it was finalized (GC'd)</span>
julia<span class="pl-k">&gt;</span> wvd[<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>]
ERROR<span class="pl-k">:</span> KeyError<span class="pl-k">:</span> key <span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span> not found</pre></div>
<h2 dir="auto"><a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Limitations</h2>
<p dir="auto">Note: All values in <code>WeakValueDict</code>s must be mutable due to how Julia implements finalizers.
Mutable datatypes include <code>String</code>, <code>Array</code>, and mutable structs but excludes types such as <code>Int</code> and immutable structs (i.e., structs without the <code>mutable</code> keyword).</p>
</article></div>