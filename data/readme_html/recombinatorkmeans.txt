<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-recombinatorkmeansjl" class="anchor" aria-hidden="true" href="#recombinatorkmeansjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RecombinatorKMeans.jl</h1>
<p dir="auto">This code implements the recombinator-k-means method described in the paper
<em>"Recombinator-k-means: An evolutionary algorithm that exploits k-means++ for recombination"</em> by C. Baldassi
submitted for publication, (2019) (<a href="https://arxiv.org/abs/1905.00531" rel="nofollow">arXiv</a>).</p>
<p dir="auto">The code is written in <a href="https://julialang.org" rel="nofollow">Julia</a>. It requires Julia 1.6 or later.</p>
<p dir="auto">It provides four main optimization methods, which are exported from the package:</p>
<ul dir="auto">
<li><code>kmeans</code> is a standard implementation of Lloyd's algorithm for k-means; it can use either uniform
of k-means++ initialization (the latter in the improved version that is also used by scikit-learn)</li>
<li><code>reckmeans</code> is the recombinator-k-means method described in the paper</li>
<li><code>gakmeans</code> is the genetic algorithm with pairwise-nearest-neighbor crossover proposed in <a href="https://www.sciencedirect.com/science/article/abs/pii/S0167865599001336" rel="nofollow">this paper</a></li>
<li><code>rswapkmeans</code> is the random-swap algorithm proposed in <a href="https://link.springer.com/article/10.1186/s40537-018-0122-y" rel="nofollow">this paper</a></li>
</ul>
<p dir="auto">It also provides two functions to compute the centroid index as defined in <a href="https://www.sciencedirect.com/science/article/abs/pii/S0031320314001150" rel="nofollow">this paper</a>, an
asymmetric one called <code>CI</code> and a symmetric one called <code>CI_sym</code>. These are not exported.</p>
<p dir="auto">It also provides a function to compute the variation of information metric to quantify the
distance between two partitions as defined in <a href="https://www.sciencedirect.com/science/article/pii/S0047259X06002016?via%3Dihub" rel="nofollow">this paper</a>. The function is called <code>VI</code> and is
not exported.</p>
<h3 dir="auto"><a id="user-content-installation-and-setup" class="anchor" aria-hidden="true" href="#installation-and-setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation and setup</h3>
<p dir="auto">To install the module, just clone it from GitHub into some directory. Then enter in such directory
and run julia with the "project" option:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="$ julia --project"><pre class="notranslate"><code>$ julia --project
</code></pre></div>
<p dir="auto">(Alternatively, if you start Julia from some other directory, you can press <kbd>;</kbd> to enter
in shell mode, <code>cd</code> into the project's directory, enter in pkg mode with <kbd>]</kbd> and use the
<code>activate</code> command.)</p>
<p dir="auto">The first time you do this, you will then need to setup the project's environment. To do that,
when you're in the Julia REPL, press the <kbd>]</kbd> key to enter in pkg mode, then resolve the
dependencies:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="(RecombinatorKMeans) pkg&gt; resolve"><pre class="notranslate"><code>(RecombinatorKMeans) pkg&gt; resolve
</code></pre></div>
<p dir="auto">This should download all the required packages. You can subsequently type <code>test</code> to check that
everything works. After this, you can press the backspace key to get back to the standard Julia
prompt, and load the package:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using RecombinatorKMeans"><pre class="notranslate"><code>julia&gt; using RecombinatorKMeans
</code></pre></div>
<h3 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h3>
<p dir="auto">The format of the data must be a <code>Matrix{Float64}</code> with the data points organized by column.
(Typically, this means that if you're reading a dataset you'll need to transpose it. See for
example the <code>runfile.jl</code> script in the <code>test</code> directory.)</p>
<p dir="auto">These four functions are available once you load the package: <code>kmeans</code>, <code>reckmeans</code>, <code>gakmeans</code> and
<code>rswapkmeans</code>. You can use the Julia help (press the <kbd>?</kbd> key in the REPL) to see their
documentation.</p>
<p dir="auto">The <code>reckmeans</code> and <code>gakmeans</code> functions will run in parallel if there are threads available:
either run Julia with the <code>-t</code> option or use the <code>JULIA_NUM_THREADS</code> environment variable.</p>
<h3 dir="auto"><a id="user-content-reproducing-the-results-in-the-paper" class="anchor" aria-hidden="true" href="#reproducing-the-results-in-the-paper"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reproducing the results in the paper</h3>
<p dir="auto">For the purpose of complete reproducibility, you can check out the tag <code>paper-v5</code> of the repository,
which will get you the version of the code used to collect the results in the <a href="https://arxiv.org/abs/1905.00531" rel="nofollow">paper</a>.
Also, the repository includes a file "Manifest_20220103.toml" that specifies the exact version of
the dependencies that were used. You can use it to overwrite your "Manifest.toml" file and then
call <code>instantiate</code> in pkg mode to reproduce the same environment. Note that the version of Julia
should be the same as that in the paper too.</p>
<h2 dir="auto"><a id="user-content-licence" class="anchor" aria-hidden="true" href="#licence"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Licence</h2>
<p dir="auto">The code is released under the MIT licence.</p>
<p dir="auto">The k-means++ code was first written from scratch from <a href="https://scholar.google.com/scholar?cluster=16794944444927209316" rel="nofollow">the k-means++ paper</a>, then improved
after reading the corresponding <a href="https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/cluster/_kmeans.py">scikit-learn's code</a>, then heavily modified.  The
scikit-learn's version was first coded by Jan Schlueter as a port of some other code that is now
lost.</p>
<p dir="auto">The genetic algorithm code was written from scratch from <a href="https://www.sciencedirect.com/science/article/abs/pii/S0167865599001336" rel="nofollow">the paper</a>; the accompanying C code
available at <a href="https://archive.uef.fi/en/web/machine-learning/software/" rel="nofollow">the repository</a> was inspected to check some finer details of the behavior, but
none of the code was used.</p>
</article></div>