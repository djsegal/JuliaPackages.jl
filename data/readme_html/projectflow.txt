<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-projectflow" class="anchor" aria-hidden="true" href="#projectflow"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ProjectFlow</h1>
<p><a href="https://DataPsycho.github.io/ProjectFlow.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://DataPsycho.github.io/ProjectFlow.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/DataPsycho/ProjectFlow.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/245d0f88e0c5dca4a791d6abe2904764671a76b1e914160f32f3e081e613d03a/68747470733a2f2f7472617669732d63692e636f6d2f4461746150737963686f2f50726f6a656374466c6f772e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/DataPsycho/ProjectFlow.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/DataPsycho/ProjectFlow.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/bd8b512880d7a915b10f9a7d1ec8295a8e19dedecb4298a0cec8821c24d92320/68747470733a2f2f636f6465636f762e696f2f67682f4461746150737963686f2f50726f6a656374466c6f772e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/DataPsycho/ProjectFlow.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>ProjectFlow is a ad-hoc analytics project manager. Upon creating a new type
<code>Project</code> and providing it to <code>initiate</code> function will crate all necessary
directory into local machine to start working on the project.</p>
<h2><a id="user-content-steps" class="anchor" aria-hidden="true" href="#steps"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Steps:</h2>
<ul>
<li>First we need to create a profile which ProjectFlow will use to set up initial
directories. Profile should be stored in <code>/home/username/.projectflow/</code> directory.
inside of <code>.projectflow</code> we will create a file called <code>profiles</code> and add the
profile name and properties. Inside of priofile file should looks like this:</li>
</ul>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="[default]
project_root=/home/datapsycho/JuliaProjects/adhocs
projects_dir=projects
data_dir=datalake
insights_dir=insights
insights_viz_dir=vizfiles
insights_data_dir=datafiles

"><pre><code>[default]
project_root=/home/datapsycho/JuliaProjects/adhocs
projects_dir=projects
data_dir=datalake
insights_dir=insights
insights_viz_dir=vizfiles
insights_data_dir=datafiles

</code></pre></div>
<p>The convention must be followed and all these directory map should be there.
Here it say our project root where all the projects will be created. Our raw data
will be stored in <code>datalake</code> our visuals will be stored in <code>insights/vizfiles</code>
and our post analysis report data will be stored in <code>insights/datafiles</code>.</p>
<p><strong>The Root Project folders must be created before going to next step. which is
<code>JuliaProjects/adhocs</code> in the examples.</strong></p>
<ul>
<li>Next we have to create type called project and run the <code>Initiate</code> method.
Either it will crate a new project or it will load the paths of existing
project.</li>
</ul>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using ProjectFlow

p = ProjectFlow.Project(
    id=&quot;xyz&quot;,
    name=&quot;My Fancy? *Project1 2 &quot;,
    template=&quot;jl&quot;,
    profile=&quot;default&quot;
)

datalake, iviz, idata = initiate(p)
"><pre><code>using ProjectFlow

p = ProjectFlow.Project(
    id="xyz",
    name="My Fancy? *Project1 2 ",
    template="jl",
    profile="default"
)

datalake, iviz, idata = initiate(p)
</code></pre></div>
<p>The following execution will create the directories in <code>adhocs</code> directory such
as:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="JuliaProjects/adhocs/
├── datalake
│   └── 2020-07-18_My_Fancy_Project_xyz
├── insights
│   └── 2020-07-18_My_Fancy_Project_xyz
│       ├── datafiles
│       └── vizfiles
└── projects
    └── 2020-07-18_My_Fancy_Project_xyz
        └── code.jl
"><pre><code>JuliaProjects/adhocs/
├── datalake
│   └── 2020-07-18_My_Fancy_Project_xyz
├── insights
│   └── 2020-07-18_My_Fancy_Project_xyz
│       ├── datafiles
│       └── vizfiles
└── projects
    └── 2020-07-18_My_Fancy_Project_xyz
        └── code.jl
</code></pre></div>
<ul>
<li>Inside of the code.jl there will already boiler plate code to start project.</li>
</ul>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="# Project Name:
# Regular Imports
using ProjectFlow

p = Project(
    id=&quot;xyz&quot;,
    name=&quot;My Fancy? *Project1 2 &quot;,
    template=&quot;jl&quot;,
    profile=&quot;default&quot;
)

datalake, idata, iviz = initiate(p)
"><pre><code># Project Name:
# Regular Imports
using ProjectFlow

p = Project(
    id="xyz",
    name="My Fancy? *Project1 2 ",
    template="jl",
    profile="default"
)

datalake, idata, iviz = initiate(p)
</code></pre></div>
<p>Which is the starting point of start writing adhoc dataanalytics single file
project.</p>
<p><em>You might want to create a separate environment for whole adhocs project and
an initializer jl file  filled up with init code and use it every time
before starting a new project.</em></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# initializer.jl file
using ProjectFlow

p = ProjectFlow.Project(
    id=&quot;xyz&quot;,
    name=&quot;My Fancy? *Project1 2 &quot;,
    template=&quot;jl&quot;,
    profile=&quot;default&quot;
)

datalake, iviz, idata = initiate(p)
"><pre><span class="pl-c"><span class="pl-c">#</span> initializer.jl file</span>
<span class="pl-k">using</span> ProjectFlow

p <span class="pl-k">=</span> ProjectFlow<span class="pl-k">.</span><span class="pl-c1">Project</span>(
    id<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>xyz<span class="pl-pds">"</span></span>,
    name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>My Fancy? *Project1 2 <span class="pl-pds">"</span></span>,
    template<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>jl<span class="pl-pds">"</span></span>,
    profile<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>
)

datalake, iviz, idata <span class="pl-k">=</span> <span class="pl-c1">initiate</span>(p)</pre></div>
</article></div>