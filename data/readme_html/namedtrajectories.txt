<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-namedtrajectoriesjl" class="anchor" aria-hidden="true" href="#namedtrajectoriesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>NamedTrajectories.jl</h1>
<p dir="auto"><a href="https://aarontrowbridge.github.io/NamedTrajectories.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://aarontrowbridge.github.io/NamedTrajectories.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/aarontrowbridge/NamedTrajectories.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/aarontrowbridge/NamedTrajectories.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/aarontrowbridge/NamedTrajectories.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/68eceed0fd17e87e71dcd3b02d9c9760a34020b45a649c5c3961e4f5344c96f3/68747470733a2f2f636f6465636f762e696f2f67682f6161726f6e74726f776272696467652f4e616d65645472616a6563746f726965732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/aarontrowbridge/NamedTrajectories.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><strong>NamedTrajectories.jl</strong> is a package for working with trajectories of named variables. It is designed to be used with <a href="https://github.com/aarontrowbridge/QuantumCollocation.jl">QuantumCollocation.jl</a> and <a href="https://github.com/aarontrowbridge/IterativeLearningControl.jl">IterativeLearningControl.jl</a>.</p>
<h2 dir="auto"><a id="user-content-notice" class="anchor" aria-hidden="true" href="#notice"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Notice!</h2>
<p dir="auto">This package is under active development and issues may arise -- please be patient and report any issues you find!</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">NamedTrajectories.jl is now registered! Install with</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(NamedTrajectories)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(NamedTrajectories)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">Users can define <code>NamedTrajectory</code> types which have lots of useful functionality. For example, you can access the data by name or index.  In the case of an index, a <code>KnotPoint</code> is returned which contains the data for that timestep.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using NamedTrajectories

# define number of timesteps and timestep
T = 10
dt = 0.1

# build named tuple of components and data matrices
components = (
    x = rand(3, T),
    u = rand(2, T),
)

# build trajectory
traj = NamedTrajectory(components; timestep=dt, controls=:u)

# access data by name
traj.x # returns 3x10 matrix of x data
traj.u # returns 2x10 matrix of u data

z1 = traj[1] # returns KnotPoint with x and u data

z1.x # returns 3 element vector of x data at timestep 1
z1.u # returns 2 element vector of u data at timestep 1

traj.data # returns data as 5x10 matrix
traj.names # returns names as tuple (:x, :u)

# simple build in plotting
plot(traj)"><pre><span class="pl-k">using</span> NamedTrajectories

<span class="pl-c"><span class="pl-c">#</span> define number of timesteps and timestep</span>
T <span class="pl-k">=</span> <span class="pl-c1">10</span>
dt <span class="pl-k">=</span> <span class="pl-c1">0.1</span>

<span class="pl-c"><span class="pl-c">#</span> build named tuple of components and data matrices</span>
components <span class="pl-k">=</span> (
    x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">3</span>, T),
    u <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">2</span>, T),
)

<span class="pl-c"><span class="pl-c">#</span> build trajectory</span>
traj <span class="pl-k">=</span> <span class="pl-c1">NamedTrajectory</span>(components; timestep<span class="pl-k">=</span>dt, controls<span class="pl-k">=</span><span class="pl-c1">:u</span>)

<span class="pl-c"><span class="pl-c">#</span> access data by name</span>
traj<span class="pl-k">.</span>x <span class="pl-c"><span class="pl-c">#</span> returns 3x10 matrix of x data</span>
traj<span class="pl-k">.</span>u <span class="pl-c"><span class="pl-c">#</span> returns 2x10 matrix of u data</span>

z1 <span class="pl-k">=</span> traj[<span class="pl-c1">1</span>] <span class="pl-c"><span class="pl-c">#</span> returns KnotPoint with x and u data</span>

z1<span class="pl-k">.</span>x <span class="pl-c"><span class="pl-c">#</span> returns 3 element vector of x data at timestep 1</span>
z1<span class="pl-k">.</span>u <span class="pl-c"><span class="pl-c">#</span> returns 2 element vector of u data at timestep 1</span>

traj<span class="pl-k">.</span>data <span class="pl-c"><span class="pl-c">#</span> returns data as 5x10 matrix</span>
traj<span class="pl-k">.</span>names <span class="pl-c"><span class="pl-c">#</span> returns names as tuple (:x, :u)</span>

<span class="pl-c"><span class="pl-c">#</span> simple build in plotting</span>
<span class="pl-c1">plot</span>(traj)</pre></div>
<p dir="auto">This script generates the following plot as demonstrated in <a href="examples/notebooks/demo.ipynb">demo.ipynb</a>
<a target="_blank" rel="noopener noreferrer" href="examples/notebooks/demo.png"><img src="examples/notebooks/demo.png" alt="" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-plotting" class="anchor" aria-hidden="true" href="#plotting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plotting</h2>
<p dir="auto">See plotting function in <a href="src/plotting.jl">plotting.jl</a> for more details.</p>
<p dir="auto">Documentation coming soon!</p>
</article></div>