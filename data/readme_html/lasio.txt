<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-lasio" class="anchor" aria-hidden="true" href="#lasio"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>LasIO</h1>
<p><a href="https://travis-ci.com/github/visr/LasIO.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/01e6bac79c18cb9e755fcb96290f0878ec072a4d/68747470733a2f2f7472617669732d63692e636f6d2f766973722f4c6173494f2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/visr/LasIO.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/visr/lasio-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/7304c04059e61dbec78535efde0eec78f6170caf/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f766973722f4c6173494f2e6a6c3f7376673d74727565266272616e63683d6d6173746572" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/visr/LasIO.jl?svg=true&amp;branch=master" style="max-width:100%;"></a></p>
<p>Julia package for reading and writing the LAS lidar format.</p>
<p>This is a pure Julia package for reading and writing ASPRS <code>.las</code> files. Currently only LAS versions 1.1 - 1.3 and point formats 0 - 3 are supported. For LAZ support see below.</p>
<p>If the file fits into memory, it can be loaded using</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> FileIO, LasIO
header, points <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>test.las<span class="pl-pds">"</span></span>)</pre></div>
<p>where <code>header</code> is of type <code>LasHeader</code>, and, if it is point format 3, <code>points</code> is a <code>Vector{LasPoint3}</code>. <code>LasPoint3</code> is an immutable that directly corresponds to the binary data in the LAS file. Use functions like <code>xcoord(p::LasPoint, header::LasHeader)</code> to take out the desired items in the point.</p>
<p>If the file does not fit into memory, it can be memory mapped using</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> FileIO, LasIO
header, points <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>test.las<span class="pl-pds">"</span></span>, mmap<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<p>where <code>points</code> is now a memory mapped <code>PointVector{LasPoint3}</code> which behaves in the same way as the <code>Vector{LasPoint3}</code>, but reads the points on the fly from disk when indexed, not allocating the complete vector beforehand.</p>
<p>See <code>test/runtests.jl</code> for other usages.</p>
<h2><a id="user-content-laz-support" class="anchor" aria-hidden="true" href="#laz-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>LAZ support</h2>
<p>We advise to use <a href="https://github.com/evetion/LazIO.jl">LazIO</a>, which works out of the box and is compatible with LasIO.</p>
<p>The compressed LAZ format is supported by LasIO itself, but requires the user to make sure the <code>laszip</code> executable can be found in the PATH. LAZ files are piped through <code>laszip</code> to provide reading and writing capability. <code>laszip</code> is not distributed with this package. One way to get it is to download <code>LAStools</code> from <a href="https://rapidlasso.com/" rel="nofollow">https://rapidlasso.com/</a>. The LAStools ZIP file already contains <code>laszip.exe</code> for Windows, for Linux or Mac it needs to be compiled first. When this is done this should work just like with LAS:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> FileIO, LasIO
header, points <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>test.laz<span class="pl-pds">"</span></span>)</pre></div>
</article></div>