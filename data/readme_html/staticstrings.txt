<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-staticstringsjl" class="anchor" aria-hidden="true" href="#staticstringsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>StaticStrings.jl</h1>
<p dir="auto"><a href="https://mkitti.github.io/StaticStrings.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://mkitti.github.io/StaticStrings.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/mkitti/StaticStrings.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/mkitti/StaticStrings.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/mkitti/StaticStrings.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/862fefe2ff4a9926cbcf27af7626b2b7838d6bdfebbfe5a096b622f144068925/68747470733a2f2f636f6465636f762e696f2f67682f6d6b697474692f537461746963537472696e67732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/mkitti/StaticStrings.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Fixed-length strings wrapping a <code>NTuple</code> for Julia.</p>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto">StaticStrings.jl implements several <code>AbstractString</code> subtypes that wrap a <code>NTuple{N,UInt8}</code>. An <code>AbstractStaticString</code> is a <code>AbstractString</code> with <code>N</code> codeunits.</p>
<p dir="auto">The concrete subtypes of <code>AbstractStaticString</code> are as follows.</p>
<ol dir="auto">
<li><code>StaticString{N}</code> is just a wrapper of a <code>NTuple{N,UInt8}</code> of exactly <code>N</code> codeunits, padded with <code>\0</code>, nul, bytes.</li>
<li><code>SubStaticString{N, R}</code> is a wrapper of a <code>NTuple{N,UInt8}</code> of up to <code>N</code> codeunits, with a unit range indicating a subset of codeunits.</li>
<li><code>CStaticString{N}</code> is similar to a <code>StaticString</code> but requires all the NUL bytes to be terminal codeunits. The struct also contains an extra terminal NUL.</li>
<li><code>PaddedStaticString{N,PAD}</code> is siimlar to <code>StaticString</code> but is padded with an arbitrary byte codeunit.</li>
</ol>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting Started</h3>
<p dir="auto">To start we create a basic static string of fixed size. A normal Julia <code>String</code> has variable size. "Hello world!" has 12 ASCII characters and thus 12 UTF-8 code units. Using the <code>static"Hello world!"</code> static string macro let's us easily construct the string of type <code>StaticString{12}</code>. Like a StaticArray from StaticArrays.jl, the UTF-8 codeunit capacity is specified in the type. Internally, <code>StaticString{12}</code> just wraps a <code>NTuple{12,UInt8}</code>. Below we see the string is printed as <code>static"Hello World!"12</code> where the trailing number indicates the number of code units.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using StaticStrings

julia&gt; static&quot;Hello world!&quot;
static&quot;Hello world!&quot;12

julia&gt; static&quot;Hello world!&quot; |&gt; typeof
StaticString{12}"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> StaticStrings

julia<span class="pl-k">&gt;</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hello world!<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hello world!<span class="pl-pds">"</span></span><span class="pl-c1">12</span>

julia<span class="pl-k">&gt;</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hello world!<span class="pl-pds">"</span></span> <span class="pl-k">|&gt;</span> typeof
StaticString{<span class="pl-c1">12</span>}</pre></div>
<p dir="auto">The number of code units can also be explicitly specified. If the specified length is longer than needed, additional NUL bytes will be appended. Printing the string will stop at the first NUL byte.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; static&quot;Hello world!&quot;12
static&quot;Hello world!&quot;12

julia&gt; static&quot;Hello world!&quot;31
static&quot;Hello world!\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&quot;31

julia&gt; print(static&quot;Hello world!&quot;31, static&quot; Bye!&quot;)
Hello world! Bye!"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hello world!<span class="pl-pds">"</span></span><span class="pl-c1">12</span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hello world!<span class="pl-pds">"</span></span><span class="pl-c1">12</span>

julia<span class="pl-k">&gt;</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hello world!<span class="pl-pds">"</span></span><span class="pl-c1">31</span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hello world!<span class="pl-cce">\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0</span><span class="pl-pds">"</span></span><span class="pl-c1">31</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">print</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hello world!<span class="pl-pds">"</span></span><span class="pl-c1">31</span>, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span> Bye!<span class="pl-pds">"</span></span>)
Hello world! Bye!</pre></div>
<h3 dir="auto"><a id="user-content-calling-c-code" class="anchor" aria-hidden="true" href="#calling-c-code"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Calling C code</h3>
<p dir="auto">One particular application for these fixed length strings is calling C code. The <code>CStaticString</code> provides a variant that ensures a terminal NUL byte and ensures that no terminal NUL bytes are contained in the string.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; cs = cstatic&quot;Hello world!\n&quot;
cstatic&quot;Hello world!&quot;13

julia&gt; ccall(:printf, Cint, (Ptr{Cchar},), cs)
Hello world!
13

julia&gt; ccall(:printf, Cint, (Ptr{CStaticString{13}},), Ref(cs))
Hello world!
13"><pre>julia<span class="pl-k">&gt;</span> cs <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">cstatic</span>"</span>Hello world!<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">cstatic</span>"</span>Hello world!<span class="pl-pds">"</span></span><span class="pl-c1">13</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">ccall</span>(<span class="pl-c1">:printf</span>, Cint, (Ptr{Cchar},), cs)
Hello world!
<span class="pl-c1">13</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">ccall</span>(<span class="pl-c1">:printf</span>, Cint, (Ptr{CStaticString{<span class="pl-c1">13</span>}},), <span class="pl-c1">Ref</span>(cs))
Hello world!
<span class="pl-c1">13</span></pre></div>
<h3 dir="auto"><a id="user-content-changing-the-padding" class="anchor" aria-hidden="true" href="#changing-the-padding"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Changing the padding</h3>
<p dir="auto">Another variant is the <code>PaddedStaticString</code>. The last code unit in the provided string is used as padding. We can see the effect of the padding by converting it to a <code>StaticString</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ps = padded&quot;Hello &quot;20
padded&quot;Hello &quot;20

julia&gt; StaticString(ps)
static&quot;Hello               &quot;20"><pre>julia<span class="pl-k">&gt;</span> ps <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">padded</span>"</span>Hello <span class="pl-pds">"</span></span><span class="pl-c1">20</span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">padded</span>"</span>Hello <span class="pl-pds">"</span></span><span class="pl-c1">20</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">StaticString</span>(ps)
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hello               <span class="pl-pds">"</span></span><span class="pl-c1">20</span></pre></div>
<h3 dir="auto"><a id="user-content-compact-array-layout" class="anchor" aria-hidden="true" href="#compact-array-layout"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Compact Array Layout</h3>
<p dir="auto">One advantage of <code>StaticString</code> over <code>String</code> is that the fixed size allows for a simple and compact array layout. Unlike InlineStrings.jl, the strings can be any fixed size.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; strings = StaticString{5}[&quot;Hello&quot;, &quot;Bye&quot;]
2-element Vector{StaticString{5}}:
 static&quot;Hello&quot;5
 static&quot;Bye\0\0&quot;5

julia&gt; push!(strings, &quot;Hola&quot;)
3-element Vector{StaticString{5}}:
 static&quot;Hello&quot;5
 static&quot;Bye\0\0&quot;5
 static&quot;Hola\0&quot;5

julia&gt; unsafe_load(pointer(strings,1))
static&quot;Hello&quot;5

julia&gt; unsafe_load(pointer(strings,2))
static&quot;Bye\0\0&quot;5

julia&gt; unsafe_load(pointer(strings,3))
static&quot;Hola\0&quot;5

julia&gt; sizeof(strings)
15"><pre>julia<span class="pl-k">&gt;</span> strings <span class="pl-k">=</span> StaticString{<span class="pl-c1">5</span>}[<span class="pl-s"><span class="pl-pds">"</span>Hello<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Bye<span class="pl-pds">"</span></span>]
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{StaticString{<span class="pl-c1">5</span>}}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hello<span class="pl-pds">"</span></span><span class="pl-c1">5</span>
 <span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Bye<span class="pl-cce">\0\0</span><span class="pl-pds">"</span></span><span class="pl-c1">5</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">push!</span>(strings, <span class="pl-s"><span class="pl-pds">"</span>Hola<span class="pl-pds">"</span></span>)
<span class="pl-c1">3</span><span class="pl-k">-</span>element Vector{StaticString{<span class="pl-c1">5</span>}}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hello<span class="pl-pds">"</span></span><span class="pl-c1">5</span>
 <span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Bye<span class="pl-cce">\0\0</span><span class="pl-pds">"</span></span><span class="pl-c1">5</span>
 <span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hola<span class="pl-cce">\0</span><span class="pl-pds">"</span></span><span class="pl-c1">5</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">unsafe_load</span>(<span class="pl-c1">pointer</span>(strings,<span class="pl-c1">1</span>))
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hello<span class="pl-pds">"</span></span><span class="pl-c1">5</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">unsafe_load</span>(<span class="pl-c1">pointer</span>(strings,<span class="pl-c1">2</span>))
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Bye<span class="pl-cce">\0\0</span><span class="pl-pds">"</span></span><span class="pl-c1">5</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">unsafe_load</span>(<span class="pl-c1">pointer</span>(strings,<span class="pl-c1">3</span>))
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">static</span>"</span>Hola<span class="pl-cce">\0</span><span class="pl-pds">"</span></span><span class="pl-c1">5</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sizeof</span>(strings)
<span class="pl-c1">15</span></pre></div>
<h2 dir="auto"><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Status</h2>
<p dir="auto">As of September 2022, this is currently under initial development.</p>
<h2 dir="auto"><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related Packages</h2>
<ol dir="auto">
<li><a href="https://github.com/JuliaStrings/InlineStrings.jl">InlineStrings.jl</a> implements a form of static strings using primitives. This is facilitates high performance parsing.</li>
<li><a href="https://github.com/brenhinkeller/StaticTools.jl">StaticTools.jl</a> provides tools for static compilation. The package provides a different implementation of StaticString.</li>
</ol>
<p dir="auto">The ability of StaticStrings.jl to compose with these packages is being evaluated. Initial tests have been written.</p>
</article></div>