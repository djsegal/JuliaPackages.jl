<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-parametricmachinesdemos" class="anchor" aria-hidden="true" href="#parametricmachinesdemos"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ParametricMachinesDemos</h1>
<p dir="auto"><a href="https://github.com/BeaverResearch/ParametricMachinesDemos.jl/actions?query=workflow%3ACI+branch%3Amain"><img src="https://github.com/BeaverResearch/ParametricMachinesDemos.jl/workflows/CI/badge.svg?branch=main" alt="CI" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/BeaverResearch/ParametricMachinesDemos.jl?branch=main" rel="nofollow"><img src="https://camo.githubusercontent.com/1bf642f7147c02a015ec316cd8d922621848281cafc96fbef54d77ad2d4ab5db/687474703a2f2f636f6465636f762e696f2f6769746875622f42656176657252657365617263682f506172616d65747269634d616368696e657344656d6f732e6a6c2f636f7665726167652e7376673f6272616e63683d6d61696e" alt="codecov.io" data-canonical-src="http://codecov.io/github/BeaverResearch/ParametricMachinesDemos.jl/coverage.svg?branch=main" style="max-width: 100%;"></a></p>
<p dir="auto">This repository contains some examples of <em>parametric machines</em>:</p>
<ul dir="auto">
<li><code>DenseMachine</code>,</li>
<li><code>ConvMachine</code>,</li>
<li><code>RecurMachine</code>.</li>
</ul>
<h2 dir="auto"><a id="user-content-reproducing-figures" class="anchor" aria-hidden="true" href="#reproducing-figures"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reproducing figures</h2>
<p dir="auto">To reproduce figures (relative to the parametric machines manuscript), clone the repository.
Then, from the top-level, initialize Julia (version 1.7.2 was used) with the <code>figures</code> project:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia --project=figures"><pre class="notranslate"><code>julia --project=figures
</code></pre></div>
<p dir="auto">Use <code>Pkg.instantiate</code> to install all required dependencies.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; import Pkg; Pkg.instantiate()"><pre lang="julia-repl" class="notranslate"><code>julia&gt; import Pkg; Pkg.instantiate()
</code></pre></div>
<p dir="auto">Run</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; include(&quot;figures/run_benchmarks.jl&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span>figures/run_benchmarks.jl<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">to generate the benchmark results (note that this requires CUDA).</p>
<p dir="auto">Finally, run</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; include(&quot;figures/benchmarks.jl&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span>figures/benchmarks.jl<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">and</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; include(&quot;figures/depthsequence.jl&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span>figures/depthsequence.jl<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">to generate the figures.</p>
</article></div>