<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-meddle" class="anchor" aria-hidden="true" href="#meddle"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Meddle</h1>
<hr>
<blockquote>
<p><strong>2015-09-03</strong>:
This package is deprecated, and does not have an active maintainer.
It is not recommended for use in new projects.
Commit access may be given to anyone interested in taking on reviving,
maintaining, or furthering development.
If you are interested, please submit a PR that updates the package.
An alternative package is <a href="https://github.com/JuliaWeb/Mux.jl">Mux.jl</a>.</p>
</blockquote>
<hr>
<p><a href="http://pkg.julialang.org/?pkg=Meddle&amp;ver=0.3" rel="nofollow"><img src="https://camo.githubusercontent.com/e7293d1bacc675de0ba13df38ea0bf9a2207a96c/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f4d6564646c655f302e332e737667" alt="Meddle" data-canonical-src="http://pkg.julialang.org/badges/Meddle_0.3.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=Meddle&amp;ver=0.4" rel="nofollow"><img src="https://camo.githubusercontent.com/68c3e49910674675b886899420660fed013af262/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f4d6564646c655f302e342e737667" alt="Meddle" data-canonical-src="http://pkg.julialang.org/badges/Meddle_0.4.svg" style="max-width:100%;"></a></p>
<p>Meddle is a middleware stack for use with <a href="https://github.com/JuliaWeb/HttpServer.jl">HttpServer.jl</a>.</p>
<p><strong>Installation</strong>: <code>Pkg.add("Meddle")</code></p>
<p>##Example:</p>
<p>Define a 'stack' of middleware through which incoming <code>Requests</code> are processed:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> HttpServer
<span class="pl-k">using</span> Meddle

stack <span class="pl-k">=</span> <span class="pl-c1">middleware</span>(DefaultHeaders, URLDecoder, CookieDecoder, <span class="pl-c1">FileServer</span>(<span class="pl-c1">pwd</span>()), NotFound)
http <span class="pl-k">=</span> <span class="pl-c1">HttpHandler</span>((req, res)<span class="pl-k">-&gt;</span>Meddle<span class="pl-k">.</span><span class="pl-c1">handle</span>(stack, <span class="pl-c1">MeddleRequest</span>(req, <span class="pl-c1">Dict</span><span class="pl-c1">{Symbol,Any}</span>()), res))

<span class="pl-k">for</span> event <span class="pl-k">in</span> <span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">"</span>connect read write close error<span class="pl-pds">"</span></span>)
    http<span class="pl-k">.</span>events[event] <span class="pl-k">=</span> (event<span class="pl-k">-&gt;</span>(client, args<span class="pl-k">...</span>)<span class="pl-k">-&gt;</span><span class="pl-c1">println</span>(client<span class="pl-k">.</span>id,<span class="pl-s"><span class="pl-pds">"</span>: <span class="pl-v">$event</span><span class="pl-pds">"</span></span>))(event)
<span class="pl-k">end</span>
http<span class="pl-k">.</span>events[<span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> (client, err)<span class="pl-k">-&gt;</span><span class="pl-c1">println</span>(err)
http<span class="pl-k">.</span>events[<span class="pl-s"><span class="pl-pds">"</span>listen<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> (port)<span class="pl-k">-&gt;</span><span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Listening on <span class="pl-v">$port</span>...<span class="pl-pds">"</span></span>)

server <span class="pl-k">=</span> <span class="pl-c1">Server</span>(http)
<span class="pl-c1">run</span>(server, <span class="pl-c1">8000</span>)</pre></div>
<pre><code>:::::::::::::
::         ::
:: Made at ::
::         ::
:::::::::::::
     ::
Hacker School
:::::::::::::
</code></pre>
</article></div>