<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-symatajl" class="anchor" aria-hidden="true" href="#symatajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Symata.jl</h1>
<p><em>Symbolic mathematics language</em></p>
<p>Linux, OSX: <a href="https://travis-ci.org/jlapeyre/Symata.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5a0fb87f703b14681cc0b5dc48efb8cab735267d4a91915100d1a36e717aad89/68747470733a2f2f7472617669732d63692e6f72672f6a6c6170657972652f53796d6174612e6a6c2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/jlapeyre/Symata.jl.svg" style="max-width:100%;"></a>
 
Windows: <a href="https://ci.appveyor.com/project/jlapeyre/symata-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ceff19ee49f41ad2e936a408bfd3c9ce9c1e13c917cc4454c043068e0507c0bb/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6a6c6170657972652f53796d6174612e6a6c3f6272616e63683d6d6173746572267376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/jlapeyre/Symata.jl?branch=master&amp;svg=true" style="max-width:100%;"></a>
     
<a href="https://coveralls.io/github/jlapeyre/Symata.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/9b98af45f52b59157f96ea6e76eb350e0ca70093871ea6895b09a76750a01fc9/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6a6c6170657972652f53796d6174612e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/jlapeyre/Symata.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/jlapeyre/Symata.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/3f2aec2b39dccfa2522462061cc63976d5c18110902c34337949e6eb1201025d/687474703a2f2f636f6465636f762e696f2f6769746875622f6a6c6170657972652f53796d6174612e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/jlapeyre/Symata.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<ul>
<li><a href="#examples-and-help">Examples and help</a></li>
<li><a href="#what-is-symata">What is Symata?</a></li>
<li><a href="#installing">Installing</a></li>
<li><a href="#running-symata">Running Symata</a></li>
<li><a href="#new-instant-symata">NEW! Instant Symata</a></li>
<li><a href="#tests">Tests</a></li>
</ul>
<h2><a id="user-content-examples-and-help" class="anchor" aria-hidden="true" href="#examples-and-help"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples and help</h2>
<ul>
<li><a href="http://nbviewer.jupyter.org/github/jlapeyre/Symata.jl/tree/master/TutorialNotebooks/" rel="nofollow">Static snapshots of Symata tutorial notebooks</a>
at <code>nbviewer.jupyter.org</code>. These are the same notebooks found in the <a href="TutorialNotebooks/">TutorialNotebooks</a> directory
in this repositoy. But the rendering at <code>nbviewer</code> is better.</li>
<li><a href="symata_test/">Symata-language test directory</a> (note this is <code>symata_test</code>, not <code>test</code>)</li>
<li><a href="symsrc/autoloaded.sj">Symata functions written in Symata</a>.</li>
<li>When running Symata
<ul>
<li><code>TAB</code> completion</li>
<li><code>? Topic</code> (with completion)</li>
<li><code>h"word"</code> regular expression search</li>
<li><code>Help()</code> and <code>Help(topic)</code></li>
</ul>
</li>
<li><a href="https://github.com/PtFEM/NumericalMethodsforEngineers.jl">NumericalMethodsforEngineers.jl</a> uses
Symata. Example code is found in
<ul>
<li><a href="https://github.com/PtFEM/NumericalMethodsforEngineers.jl/tree/master/examples/ch04">examples/ch04/</a></li>
<li><a href="https://github.com/PtFEM/NumericalMethodsforEngineers.jl/blob/master/examples/ch07/WRM/Ex.7.13.function.jl">Ex.7.13.function.jl</a></li>
<li>Several files in the <a href="https://github.com/PtFEM/NumericalMethodsforEngineers.jl/tree/master/test">test directory</a></li>
</ul>
</li>
<li>If you have a question or a request, or want to contribute,
please <a href="https://github.com/jlapeyre/Symata.jl/issues">open an issue</a> here on github.</li>
</ul>
<h2><a id="user-content-what-is-symata" class="anchor" aria-hidden="true" href="#what-is-symata"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>What is Symata?</h2>
<ul>
<li>
<p>a language for symbolic computations and mathematics, where, for
the most part, "mathematics" means what it typically
does for a scientist or engineer.</p>
</li>
<li>
<p>a language based mostly on expressions, on "evaluating" and
rewriting them, like Wolfram, Maple, or Maxima. It is neither a language,
nor an extension of a language, that is mostly procedural, or designed
around data types and functions, or a hierarchy of classes, etc.,
like C or Python or Java. Nor is it language like Sage;
that is, one meant to provide a unifying interface to a number of
mathematics languages with various programming models.</p>
</li>
<li>
<p>meant to be useful to people who do not like to program computers, as
well as those who do. The former includes people who prefer not to
think about classes, methods, objects, dispatch, stack traces, etc.</p>
</li>
</ul>
<p>Symata is largely modeled on the pattern matching and evaluation sequence of
Mathematica. Evaluation, pattern matching, flow control, etc. are
written in Julia. Much of the mathematics and symbolic manipulation is
achieved by wrapping SymPy. There are more than 600 functions
implemented, including integration, transformation of special
functions, expression manipulation, writing and reading expressions to
and from a file etc.</p>

<h2><a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installing</h2>
<p>Symata is a registered module. It can be installed like this</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(v0.7) pkg&gt; add Symata
julia&gt; using Symata
symata&gt; Help()    # type '=' alone on a line to enter symata mode
"><pre>(v0.<span class="pl-c1">7</span>) pkg<span class="pl-k">&gt;</span> add Symata
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Symata
symata<span class="pl-k">&gt;</span> <span class="pl-c1">Help</span>()    <span class="pl-c"><span class="pl-c">#</span> type '=' alone on a line to enter symata mode</span></pre></div>
<p><code>Symata</code> can be installed on Linux, OSX, and Windows.</p>
<p><code>Symata</code> depends on the <a href="https://github.com/stevengj/PyCall.jl"><code>PyCall</code></a> package and
the python <a href="http://www.sympy.org/en/index.html" rel="nofollow">SymPy</a> module. You can install SymPy
via <code>pip install sympy</code>. Symata is compatible with SymPy v1.0 and v1.2 (and probably v1.1).</p>
<p>Alternatively, you may install SymPy via <code>Conda.jl</code>.
When you load <code>Symata</code> with <code>using Symata</code>, <code>sympy</code> is installed automatically via <code>PyCall</code>, which uses <a href="https://github.com/JuliaPy/Conda.jl"><code>Conda</code></a>. However, to do this, <code>PyCall</code> must be configured to not use you system version of <code>python</code>.
If you do not have <code>PyCall</code> installed, do this</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ENV[&quot;PYTHON&quot;]=&quot;&quot;
julia&gt; Pkg.add(&quot;PyCall&quot;)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>PYTHON<span class="pl-pds">"</span></span>]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>
julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>PyCall<span class="pl-pds">"</span></span>)</pre></div>
<p>If you <em>do</em> have <code>PyCall</code> installed, but it is configured to use your system <code>python</code>, reconfigure
it like this.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ENV[&quot;PYTHON&quot;]=&quot;&quot;
julia&gt; Pkg.build(&quot;PyCall&quot;)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>PYTHON<span class="pl-pds">"</span></span>]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>
julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">build</span>(<span class="pl-s"><span class="pl-pds">"</span>PyCall<span class="pl-pds">"</span></span>)</pre></div>
<p>If you use linux, you may have your distribution's <code>sympy</code> package installed and it may be
out of date. In this case, try the procedure above, and/or try removing your distribution's <code>sympy</code> package.</p>
<h4><a id="user-content-note" class="anchor" aria-hidden="true" href="#note"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>note</h4>
<p><code>SymPy</code>, or <code>sympy</code>, here refers to the python <a href="http://www.sympy.org/en/index.html" rel="nofollow">SymPy</a> distribution
(sometimes called sympy), <em>not</em> the Julia package <code>SymPy</code>. <code>Symata</code> does not require the Julia package
<a href="https://github.com/jverzani/SymPy.jl">SymPy.jl</a>, which has a different goal.</p>
<p>Symata requires <code>mpmath</code> package for python. This
should be automatically installed when installing <code>sympy</code> via
<code>PyCall</code> as described above. This also works on OSX.
However, if you use <code>pip</code>, you should just be able to run <code>pip install mpmath</code>.</p>
<h2><a id="user-content-running-symata" class="anchor" aria-hidden="true" href="#running-symata"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Running Symata</h2>
<p>See <a href="#new-instant-symata">below</a> for instructions on precompiling Symata to get more-or-less instant start up and many precompiled
function calls.</p>
<p>Three environments for running <code>Symata</code> are supported: the <code>Julia</code> REPL, <code>Jupyter</code>, and a dumb terminal.</p>
<h3><a id="user-content-symata-repl-mode" class="anchor" aria-hidden="true" href="#symata-repl-mode"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Symata REPL mode</h3>
<p>A <code>Symata</code> mode is added to the <code>Julia</code> REPL. Enter the mode by typing <code>=</code> as the first character. Exit
the mode by typing <code>backspace</code> as the first character.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Symata

symata 1&gt;     # after entering `=`
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Symata

symata <span class="pl-c1">1</span><span class="pl-k">&gt;</span>     <span class="pl-c"><span class="pl-c">#</span> after entering `=`</span></pre></div>
<p>Under some circumstances, e.g. when using <code>PackageCompiler</code>, the <code>Symata</code> repl is not initialized after the module is loaded.
You can initialize it with the exported Julia command <code>run_repl</code>. After this, the repl is entered with the <code>=</code> key.
An executable <a href="./scripts/symata"><code>./scripts/symata</code></a> is included. It is a (UNIX
sh) shell script that just starts julia, loads the module, and enters <code>Symata</code> mode.
There is also a script <a href="./scripts/symatap"><code>./scripts/symatap</code></a> for starting from an image
with Symata precompiled. (See below.)
Switch between <code>Julia</code> and <code>Symata</code> modes by typing <code>=</code>, or backspace, as the first character on a line.
You can do tab completion to see a list of functions and symbols.</p>
<h3><a id="user-content-jupyter--ijulia" class="anchor" aria-hidden="true" href="#jupyter--ijulia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Jupyter / IJulia</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="In [1]:  using Symata

In [2]:  Expand((a+b)^2)

Out[2]:  a^2 + 2a*b + b^2

In [3]:  Julia()   # return to Julia mode
"><pre>In [<span class="pl-c1">1</span>]<span class="pl-k">:</span>  <span class="pl-k">using</span> Symata

In [<span class="pl-c1">2</span>]<span class="pl-k">:</span>  <span class="pl-c1">Expand</span>((a<span class="pl-k">+</span>b)<span class="pl-k">^</span><span class="pl-c1">2</span>)

Out[<span class="pl-c1">2</span>]<span class="pl-k">:</span>  a<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">2</span>a<span class="pl-k">*</span>b <span class="pl-k">+</span> b<span class="pl-k">^</span><span class="pl-c1">2</span>

In [<span class="pl-c1">3</span>]<span class="pl-k">:</span>  <span class="pl-c1">Julia</span>()   <span class="pl-c"><span class="pl-c">#</span> return to Julia mode</span></pre></div>
<p>In <code>Jupyter</code>, the <code>Symata</code> expressions <code>In(n)</code> and <code>Out(n)</code> reevaluate the input and output cells. TAB completion
works in <code>Jupyter</code>. To see a list of all possible completions, type <code>*[TAB]</code>.</p>
<h3><a id="user-content-dumb-terminal" class="anchor" aria-hidden="true" href="#dumb-terminal"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Dumb terminal</h3>
<p>If you do <code>using Symata</code> in a dumb terminal, the <code>Symata</code> prompt should appear automatically.</p>
<h3><a id="user-content-sympy-shell" class="anchor" aria-hidden="true" href="#sympy-shell"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>sympy shell</h3>
<p>From the julia prompt, type <code>isympy()</code> to enter the sympy shell.</p>
<h2><a id="user-content-new-instant-symata" class="anchor" aria-hidden="true" href="#new-instant-symata"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>NEW! Instant Symata</h2>
<p>You can precompile Symata. It will load very quickly and be generally much more responsive.
The script <a href="./scripts/gen_compile_symata.sh"><code>./scripts/gen_compile_symata.sh</code></a> writes a Julia image.
The shell script <a href="./scripts/symatap"><code>./scripts/symatap</code></a> runs Julia with this image and immediately
enters the Symata repl. See the contents of these files if you can't run shell scripts on
your platform.</p>
<h3><a id="user-content-instant-symata-with-jupyter" class="anchor" aria-hidden="true" href="#instant-symata-with-jupyter"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Instant Symata with Jupyter</h3>
<p>You can install a Jupyter kernel using the precompiled image.
You must <em>not</em> insert any whitespace between <code>-J</code> and the path to the image.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using IJulia
julia&gt; installkernel(&quot;Symata&quot;, &quot;-J/home/username/path/to/symataimage.so&quot;)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> IJulia
julia<span class="pl-k">&gt;</span> <span class="pl-c1">installkernel</span>(<span class="pl-s"><span class="pl-pds">"</span>Symata<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>-J/home/username/path/to/symataimage.so<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-tests" class="anchor" aria-hidden="true" href="#tests"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Tests</h2>
<p>Run the test suite from the <code>symata</code> prompt with <code>Tests()</code>.
This runs tests in the <a href="symata_test/">symata_test directory</a>
<code>Pkg.test("Symata")</code> runs the same test suite from <code>Julia</code> and
some Julia-level unit tests, as well.</p>











</article></div>