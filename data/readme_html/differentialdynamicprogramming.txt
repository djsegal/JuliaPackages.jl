<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-differentialdynamicprogramming" class="anchor" aria-hidden="true" href="#differentialdynamicprogramming"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DifferentialDynamicProgramming</h1>
<p><a href="https://travis-ci.org/baggepinnen/DifferentialDynamicProgramming.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0941f602c44d0be4bc2352942db9238c2b8c75cd/68747470733a2f2f7472617669732d63692e6f72672f626167676570696e6e656e2f446966666572656e7469616c44796e616d696350726f6772616d6d696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/baggepinnen/DifferentialDynamicProgramming.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://coveralls.io/github/baggepinnen/DifferentialDynamicProgramming.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/2324adc834c95230ae450310c704383c09e7c9a4/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f626167676570696e6e656e2f446966666572656e7469616c44796e616d696350726f6772616d6d696e672e6a6c2f62616467652e706e673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/baggepinnen/DifferentialDynamicProgramming.jl/badge.png?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>The package is registered and can be added with<br>
<code>] add DifferentialDynamicProgramming</code><br>
The latest version is formally compatible with Julia v1.1+ (but probably works well for julia v1.0 as well if you <code>dev</code> it).</p>
<h2><a id="user-content-demo-functions" class="anchor" aria-hidden="true" href="#demo-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Demo functions</h2>
<p>The following demo functions are provided</p>
<p><code>demo_linear()</code>     To run the iLQG DDP algorithm on a simple linear problem<br>
<code>demoQP</code>            To solve a demo quadratic program<br>
<code>demo_pendcart()</code>   Where a pendulum attached to a cart is simulated.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<h3><a id="user-content-demo-linear" class="anchor" aria-hidden="true" href="#demo-linear"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Demo linear</h3>
<p>See demo file <code>demo_linear.jl</code> for a usage example.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> make stable linear dynamics</span>
h <span class="pl-k">=</span> <span class="pl-c1">.01</span>         <span class="pl-c"><span class="pl-c">#</span> time step</span>
n <span class="pl-k">=</span> <span class="pl-c1">10</span>          <span class="pl-c"><span class="pl-c">#</span> state dimension</span>
m <span class="pl-k">=</span> <span class="pl-c1">2</span>           <span class="pl-c"><span class="pl-c">#</span> control dimension</span>
A <span class="pl-k">=</span> <span class="pl-c1">randn</span>(n,n)
A <span class="pl-k">=</span> A<span class="pl-k">-</span>A<span class="pl-k">'</span>        <span class="pl-c"><span class="pl-c">#</span> skew-symmetric = pure imaginary eigenvalues</span>
A <span class="pl-k">=</span> <span class="pl-c1">exp</span>(h<span class="pl-k">*</span>A)    <span class="pl-c"><span class="pl-c">#</span> discrete time</span>
B <span class="pl-k">=</span> h<span class="pl-k">*</span><span class="pl-c1">randn</span>(n,m)

<span class="pl-c"><span class="pl-c">#</span> quadratic costs</span>
Q    <span class="pl-k">=</span> h<span class="pl-k">*</span><span class="pl-c1">eye</span>(n)
R    <span class="pl-k">=</span> <span class="pl-c1">.1</span><span class="pl-k">*</span>h<span class="pl-k">*</span><span class="pl-c1">eye</span>(m)

<span class="pl-c"><span class="pl-c">#</span> control limits</span>
lims <span class="pl-k">=</span> [] <span class="pl-c"><span class="pl-c">#</span>ones(m,1)*[-1 1]*.6</span>

T    <span class="pl-k">=</span> <span class="pl-c1">1000</span>             <span class="pl-c"><span class="pl-c">#</span> horizon</span>
x0   <span class="pl-k">=</span> <span class="pl-c1">ones</span>(n,<span class="pl-c1">1</span>)        <span class="pl-c"><span class="pl-c">#</span> initial state</span>
u0   <span class="pl-k">=</span> <span class="pl-c1">.1</span><span class="pl-k">*</span><span class="pl-c1">randn</span>(m,T)    <span class="pl-c"><span class="pl-c">#</span> initial controls</span>

<span class="pl-c"><span class="pl-c">#</span> optimization problem</span>
N    <span class="pl-k">=</span> T<span class="pl-k">+</span><span class="pl-c1">1</span>
fx   <span class="pl-k">=</span> A
fu   <span class="pl-k">=</span> B
cxx  <span class="pl-k">=</span> Q
cxu  <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(<span class="pl-c1">size</span>(B))
cuu  <span class="pl-k">=</span> R

<span class="pl-c"><span class="pl-c">#</span> Specify dynamics functions</span>
<span class="pl-k">function</span> <span class="pl-en">lin_dyn_df</span>(x,u,Q,R)
    u[<span class="pl-c1">isnan</span>(u)] <span class="pl-k">=</span> <span class="pl-c1">0</span>
    cx  <span class="pl-k">=</span> Q<span class="pl-k">*</span>x
    cu  <span class="pl-k">=</span> R<span class="pl-k">*</span>u
    fxx<span class="pl-k">=</span>fxu<span class="pl-k">=</span>fuu <span class="pl-k">=</span> []
    <span class="pl-k">return</span> fx,fu,fxx,fxu,fuu,cx,cu,cxx,cxu,cuu
<span class="pl-k">end</span>
<span class="pl-k">function</span> <span class="pl-en">lin_dyn_f</span>(x,u,A,B)
    u[<span class="pl-c1">isnan</span>(u)] <span class="pl-k">=</span> <span class="pl-c1">0</span>
    xnew <span class="pl-k">=</span> A<span class="pl-k">*</span>x <span class="pl-k">+</span> B<span class="pl-k">*</span>u
    <span class="pl-k">return</span> xnew
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">lin_dyn_cost</span>(x,u,Q)
    c <span class="pl-k">=</span> <span class="pl-c1">0.5</span><span class="pl-k">*</span><span class="pl-c1">sum</span>(x<span class="pl-k">.*</span>(Q<span class="pl-k">*</span>x)) <span class="pl-k">+</span> <span class="pl-c1">0.5</span><span class="pl-k">*</span><span class="pl-c1">sum</span>(u<span class="pl-k">.*</span>(R<span class="pl-k">*</span>u))
    <span class="pl-k">return</span> c
<span class="pl-k">end</span>

<span class="pl-en">f</span>(x,u,i)     <span class="pl-k">=</span> <span class="pl-c1">lin_dyn_f</span>(x,u,A,B,Q,R)
<span class="pl-en">costfun</span>(x,u) <span class="pl-k">=</span> <span class="pl-c1">lin_dyn_cost</span>(x,u,Q)
<span class="pl-en">df</span>(x,u)      <span class="pl-k">=</span> <span class="pl-c1">lin_dyn_df</span>(x,u,Q,R)

<span class="pl-c"><span class="pl-c">#</span> run the optimization</span>

<span class="pl-c1">@time</span> x, u, L, Vx, Vxx, cost, otrace <span class="pl-k">=</span> <span class="pl-c1">iLQG</span>(f, costfun ,df, x0, u0, lims<span class="pl-k">=</span>lims);</pre></div>
<h3><a id="user-content-demo-pendulum-on-cart" class="anchor" aria-hidden="true" href="#demo-pendulum-on-cart"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Demo pendulum on cart</h3>
<p>There is an additional demo function <code>demo_pendcart()</code>, where a pendulum attached to a cart is simulated. In this example, regular LQG control fails in stabilizing the pendulum at the upright position due to control limitations. The DDP-based optimization solves this by letting the pendulum fall, and increases the energy in the pendulum during the fall such that it will stay upright after one revolution.</p>
<p><a target="_blank" rel="noopener noreferrer" href="images/states_pendcart.png"><img src="images/states_pendcart.png" alt="window" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="images/control_pendcart.png"><img src="images/control_pendcart.png" alt="window" style="max-width:100%;"></a></p>
<h1><a id="user-content-citing" class="anchor" aria-hidden="true" href="#citing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Citing</h1>
<p>This code consists of a port and extensions of a MATLAB library provided by the autors of</p>
<pre><code>BIBTeX:
@INPROCEEDINGS{
  author    = {Tassa, Y. and Mansard, N. and Todorov, E.},
  booktitle = {Robotics and Automation (ICRA), 2014 IEEE International Conference on},
  title     = {Control-Limited Differential Dynamic Programming},
  year      = {2014}, month={May}, doi={10.1109/ICRA.2014.6907001}}
  http://www.mathworks.com/matlabcentral/fileexchange/52069-ilqg-ddp-trajectory-optimization
  http://www.cs.washington.edu/people/postdocs/tassa/
</code></pre>
<p>The code above was extended with KL-divergence constrained optimization for the thesis
<a href="https://www.control.lth.se/staff/fredrik-bagge-carlson/" rel="nofollow">Bagge Carlson, F.</a>, <a href="https://lup.lub.lu.se/search/publication/ffb8dc85-ce12-4f75-8f2b-0881e492f6c0" rel="nofollow">"Machine Learning and System Identification for Estimation in Physical Systems"</a> (PhD Thesis 2018).</p>
<div class="highlight highlight-text-bibtex"><pre><span class="pl-k">@thesis</span>{<span class="pl-en">bagge2018</span>,
  <span class="pl-s">title</span>        = <span class="pl-s"><span class="pl-pds">{</span>Machine Learning and System Identification for Estimation in Physical Systems<span class="pl-pds">}</span></span>,
  <span class="pl-s">author</span>       = <span class="pl-s"><span class="pl-pds">{</span>Bagge Carlson, Fredrik<span class="pl-pds">}</span></span>,
  <span class="pl-s">keyword</span>      = <span class="pl-s"><span class="pl-pds">{</span>Machine Learning,System Identification,Robotics,Spectral estimation,Calibration,State estimation<span class="pl-pds">}</span></span>,
  <span class="pl-s">month</span>        = <span class="pl-s"><span class="pl-pds">{</span>12<span class="pl-pds">}</span></span>,
  <span class="pl-s">type</span>         = <span class="pl-s"><span class="pl-pds">{</span>PhD Thesis<span class="pl-pds">}</span></span>,
  <span class="pl-s">number</span>       = <span class="pl-s"><span class="pl-pds">{</span>TFRT-1122<span class="pl-pds">}</span></span>,
  <span class="pl-s">institution</span>  = <span class="pl-s"><span class="pl-pds">{</span>Dept. Automatic Control, Lund University, Sweden<span class="pl-pds">}</span></span>,
  <span class="pl-s">year</span>         = <span class="pl-s"><span class="pl-pds">{</span>2018<span class="pl-pds">}</span></span>,
  <span class="pl-s">url</span>          = <span class="pl-s"><span class="pl-pds">{</span>https://lup.lub.lu.se/search/publication/ffb8dc85-ce12-4f75-8f2b-0881e492f6c0<span class="pl-pds">}</span></span>,
}</pre></div>
</article></div>