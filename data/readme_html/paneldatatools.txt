<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-paneldatatools" class="anchor" aria-hidden="true" href="#paneldatatools"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PanelDataTools</h1>
<p dir="auto"><a href="https://github.com/eirikbrandsaas/PanelDataTools.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/eirikbrandsaas/PanelDataTools.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/eirikbrandsaas/PanelDataTools.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/15ed5645ea2e3bc98907ec45a104cad33c9e1acdefc3d1dc51831ff65ecfc8be/68747470733a2f2f636f6465636f762e696f2f67682f656972696b6272616e64736161732f50616e656c44617461546f6f6c732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/eirikbrandsaas/PanelDataTools.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto">This package aims to introduce some convenience tools for working with Panel Data in the <code>DataFrames.jl</code> world in Julia. The package currently supports lags, leads, diffs, seasonal diffs, and spell analysis.</p>
<p dir="auto">The package is inspired by Stata's great panel data features such as <code>tsspell</code> and lag/lead/difference operators <code>L.</code>, <code>F.</code>,<code>S.</code>, and <code>D.</code>. It relies on <a href="https://github.com/JuliaData/DataFrames.jl"><code>DataFrames.jl</code></a> and <a href="https://github.com/FuZhiyu/PanelShift.jl/blob/master/src/PanelShift.jl"><code>PanelShift.jl</code></a>. The goal is to provide results that are correct and easy to obtain.</p>
<h2 dir="auto"><a id="user-content-workflow" class="anchor" aria-hidden="true" href="#workflow"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Workflow:</h2>
<ol dir="auto">
<li>First set the <code>:id</code> and <code>:t</code> variables using <code>paneldf!(df::DataFrame, id::Symbol, t::Symbol)</code></li>
<li>To find the lagged <code>:x</code> column use <code>lag!(df,:x)</code>.
<ul dir="auto">
<li>If you don't want to store metadata you can pass the <code>id</code> and <code>t</code> column names directly: <code>lag!(df,:id,:t,:a))</code></li>
</ul>
</li>
<li>See below for examples of lags, leads, and diffs (where you can specify multiple colomns or time gaps), how to find spells (e.g., unemployment spells), how to fill time gaps, and giving names to new columns</li>
</ol>
<h3 dir="auto"><a id="user-content-examples-working-with-datestime" class="anchor" aria-hidden="true" href="#examples-working-with-datestime"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples working with Dates/Time:</h3>
<p dir="auto">The default time gap ("Delta") is 1 oneunit as determined by <code>oneunit()</code>. For <code>Int</code>, <code>Date</code>, and <code>DateTime</code> this defaults to <code>1</code>, <code>1 day</code>, and <code>1 millisecond</code>, respectively. If these are not the gaps you want, you must specify the correct gaps.</p>
<p dir="auto">For example, here we have daily data with many gaps:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using PanelDataTools,DataFrames,Dates
df = DataFrame(id=fill(1,4),
    t=[Date(2000,1,1),Date(2000,1,2),Date(2000,2,1),Date(2001,1,1)],
    a=[0,1,1,1])
paneldf!(df,:id,:t)

panel variable: id
 time variable: t
         delta: 1 day"><pre><span class="pl-k">using</span> PanelDataTools,DataFrames,Dates
df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(id<span class="pl-k">=</span><span class="pl-c1">fill</span>(<span class="pl-c1">1</span>,<span class="pl-c1">4</span>),
    t<span class="pl-k">=</span>[<span class="pl-c1">Date</span>(<span class="pl-c1">2000</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>),<span class="pl-c1">Date</span>(<span class="pl-c1">2000</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>),<span class="pl-c1">Date</span>(<span class="pl-c1">2000</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>),<span class="pl-c1">Date</span>(<span class="pl-c1">2001</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>)],
    a<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>])
<span class="pl-c1">paneldf!</span>(df,<span class="pl-c1">:id</span>,<span class="pl-c1">:t</span>)

panel variable<span class="pl-k">:</span> id
 time variable<span class="pl-k">:</span> t
         delta<span class="pl-k">:</span> <span class="pl-c1">1</span> day</pre></div>
<p dir="auto">Next, we create lags of a with various gaps</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="lag!(df,:a,Day(1),name=&quot;L(Day=1)&quot;)
lag!(df,:a,Month(1),name=&quot;L(Month=1)&quot;)
lag!(df,:a,Day(366),name=&quot;L(Day=366)&quot;) # 366 days = one year (2000 was a leap year)
lag!(df,:a,Month(12),name=&quot;L(Month=12)&quot;) # 12 months = one year
lag!(df,:a,Year(1),name=&quot;L(Year=1)&quot;)
lag!(df,:a) # Default (picks time gap of 1 day and names the column &quot;L1a&quot;)
display(df)"><pre><span class="pl-c1">lag!</span>(df,<span class="pl-c1">:a</span>,<span class="pl-c1">Day</span>(<span class="pl-c1">1</span>),name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>L(Day=1)<span class="pl-pds">"</span></span>)
<span class="pl-c1">lag!</span>(df,<span class="pl-c1">:a</span>,<span class="pl-c1">Month</span>(<span class="pl-c1">1</span>),name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>L(Month=1)<span class="pl-pds">"</span></span>)
<span class="pl-c1">lag!</span>(df,<span class="pl-c1">:a</span>,<span class="pl-c1">Day</span>(<span class="pl-c1">366</span>),name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>L(Day=366)<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> 366 days = one year (2000 was a leap year)</span>
<span class="pl-c1">lag!</span>(df,<span class="pl-c1">:a</span>,<span class="pl-c1">Month</span>(<span class="pl-c1">12</span>),name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>L(Month=12)<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> 12 months = one year</span>
<span class="pl-c1">lag!</span>(df,<span class="pl-c1">:a</span>,<span class="pl-c1">Year</span>(<span class="pl-c1">1</span>),name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>L(Year=1)<span class="pl-pds">"</span></span>)
<span class="pl-c1">lag!</span>(df,<span class="pl-c1">:a</span>) <span class="pl-c"><span class="pl-c">#</span> Default (picks time gap of 1 day and names the column "L1a")</span>
<span class="pl-c1">display</span>(df)</pre></div>
<p dir="auto">which gives:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="4×9 DataFrame
 Row │ id     t           a      L(Day=1)  L(Month=1)  L(Day=366)  L(Month=12)  L(Year=1)  L1a     
     │ Int64  Date        Int64  Int64?    Int64?      Int64?      Int64?       Int64?     Int64?  
─────┼─────────────────────────────────────────────────────────────────────────────────────────────
   1 │     1  2000-01-01      0   missing     missing     missing      missing    missing  missing 
   2 │     1  2000-01-02      1         0     missing     missing      missing    missing        0
   3 │     1  2000-02-01      1   missing           0     missing      missing    missing  missing 
   4 │     1  2001-01-01      1   missing     missing           0            0          0  missing 
"><pre><span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">9</span> DataFrame
 Row │ id     t           a      <span class="pl-c1">L</span>(Day<span class="pl-k">=</span><span class="pl-c1">1</span>)  <span class="pl-c1">L</span>(Month<span class="pl-k">=</span><span class="pl-c1">1</span>)  <span class="pl-c1">L</span>(Day<span class="pl-k">=</span><span class="pl-c1">366</span>)  <span class="pl-c1">L</span>(Month<span class="pl-k">=</span><span class="pl-c1">12</span>)  <span class="pl-c1">L</span>(Year<span class="pl-k">=</span><span class="pl-c1">1</span>)  L1a     
     │ Int64  Date        Int64  Int64?    Int64?      Int64?      Int64?       Int64?     Int64?  
─────┼─────────────────────────────────────────────────────────────────────────────────────────────
   <span class="pl-c1">1</span> │     <span class="pl-c1">1</span>  <span class="pl-c1">2000</span><span class="pl-k">-</span><span class="pl-c1">01</span><span class="pl-k">-</span><span class="pl-c1">01</span>      <span class="pl-c1">0</span>   <span class="pl-c1">missing</span>     <span class="pl-c1">missing</span>     <span class="pl-c1">missing</span>      <span class="pl-c1">missing</span>    <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span> 
   <span class="pl-c1">2</span> │     <span class="pl-c1">1</span>  <span class="pl-c1">2000</span><span class="pl-k">-</span><span class="pl-c1">01</span><span class="pl-k">-</span><span class="pl-c1">02</span>      <span class="pl-c1">1</span>         <span class="pl-c1">0</span>     <span class="pl-c1">missing</span>     <span class="pl-c1">missing</span>      <span class="pl-c1">missing</span>    <span class="pl-c1">missing</span>        <span class="pl-c1">0</span>
   <span class="pl-c1">3</span> │     <span class="pl-c1">1</span>  <span class="pl-c1">2000</span><span class="pl-k">-</span><span class="pl-c1">02</span><span class="pl-k">-</span><span class="pl-c1">01</span>      <span class="pl-c1">1</span>   <span class="pl-c1">missing</span>           <span class="pl-c1">0</span>     <span class="pl-c1">missing</span>      <span class="pl-c1">missing</span>    <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span> 
   <span class="pl-c1">4</span> │     <span class="pl-c1">1</span>  <span class="pl-c1">2001</span><span class="pl-k">-</span><span class="pl-c1">01</span><span class="pl-k">-</span><span class="pl-c1">01</span>      <span class="pl-c1">1</span>   <span class="pl-c1">missing</span>     <span class="pl-c1">missing</span>           <span class="pl-c1">0</span>            <span class="pl-c1">0</span>          <span class="pl-c1">0</span>  <span class="pl-c1">missing</span> 
</pre></div>
<h3 dir="auto"><a id="user-content-shifts-leads-and-lags" class="anchor" aria-hidden="true" href="#shifts-leads-and-lags"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Shifts: Leads and Lags</h3>
<p dir="auto">Easily create leads, lags, diffs, and seasonal diffs from panels:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using PanelDataTools, DataFrames
df = DataFrame(id = [1,1,1,2,2,2], t = [1,2,3,1,2,3], a = [0,0,1,1,1,0])
paneldf!(df,:id,:t)

lag!(df,:a)
lead!(df,:a)
lead!(df,:a,2) # last argument is how many lags
display(df)
6×6 DataFrame
 Row │ id     t      a      L1a      F1a      F2a
     │ Int64  Int64  Int64  Int64?   Int64?   Int64?
─────┼────────────────────────────────────────────────
   1 │     1      1      0  missing        0        1
   2 │     1      2      0        0        1  missing
   3 │     1      3      1        0  missing  missing
   4 │     2      1      1  missing        1        0
   5 │     2      2      1        1        0  missing
   6 │     2      3      0        1  missing  missing"><pre><span class="pl-k">using</span> PanelDataTools, DataFrames
df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(id <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>], t <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], a <span class="pl-k">=</span> [<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>])
<span class="pl-c1">paneldf!</span>(df,<span class="pl-c1">:id</span>,<span class="pl-c1">:t</span>)

<span class="pl-c1">lag!</span>(df,<span class="pl-c1">:a</span>)
<span class="pl-c1">lead!</span>(df,<span class="pl-c1">:a</span>)
<span class="pl-c1">lead!</span>(df,<span class="pl-c1">:a</span>,<span class="pl-c1">2</span>) <span class="pl-c"><span class="pl-c">#</span> last argument is how many lags</span>
<span class="pl-c1">display</span>(df)
<span class="pl-c1">6</span><span class="pl-k">×</span><span class="pl-c1">6</span> DataFrame
 Row │ id     t      a      L1a      F1a      F2a
     │ Int64  Int64  Int64  Int64?   Int64?   Int64?
─────┼────────────────────────────────────────────────
   <span class="pl-c1">1</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">1</span>      <span class="pl-c1">0</span>  <span class="pl-c1">missing</span>        <span class="pl-c1">0</span>        <span class="pl-c1">1</span>
   <span class="pl-c1">2</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">2</span>      <span class="pl-c1">0</span>        <span class="pl-c1">0</span>        <span class="pl-c1">1</span>  <span class="pl-c1">missing</span>
   <span class="pl-c1">3</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">3</span>      <span class="pl-c1">1</span>        <span class="pl-c1">0</span>  <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span>
   <span class="pl-c1">4</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">1</span>      <span class="pl-c1">1</span>  <span class="pl-c1">missing</span>        <span class="pl-c1">1</span>        <span class="pl-c1">0</span>
   <span class="pl-c1">5</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">2</span>      <span class="pl-c1">1</span>        <span class="pl-c1">1</span>        <span class="pl-c1">0</span>  <span class="pl-c1">missing</span>
   <span class="pl-c1">6</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">3</span>      <span class="pl-c1">0</span>        <span class="pl-c1">1</span>  <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span></pre></div>
<p dir="auto">or as a one-liner specifying multiple lead lags OR multiplate variables at a specific shift:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="lag!(df,:id,:t,:a,[-2,-1,1]) # -2 and -1 becomes leads of a
lead!(df,:id,:t,:a,[-1,1,2]) # -1 becomes a lag
lag!(df,:id,:t,[:a,:b,:c],2) # Find lags of a,b, and c"><pre><span class="pl-c1">lag!</span>(df,<span class="pl-c1">:id</span>,<span class="pl-c1">:t</span>,<span class="pl-c1">:a</span>,[<span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>]) <span class="pl-c"><span class="pl-c">#</span> -2 and -1 becomes leads of a</span>
<span class="pl-c1">lead!</span>(df,<span class="pl-c1">:id</span>,<span class="pl-c1">:t</span>,<span class="pl-c1">:a</span>,[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>]) <span class="pl-c"><span class="pl-c">#</span> -1 becomes a lag</span>
<span class="pl-c1">lag!</span>(df,<span class="pl-c1">:id</span>,<span class="pl-c1">:t</span>,[<span class="pl-c1">:a</span>,<span class="pl-c1">:b</span>,<span class="pl-c1">:c</span>],<span class="pl-c1">2</span>) <span class="pl-c"><span class="pl-c">#</span> Find lags of a,b, and c</span></pre></div>
<h3 dir="auto"><a id="user-content-differences" class="anchor" aria-hidden="true" href="#differences"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Differences</h3>
<p dir="auto">There is also support for "seasonal" and difference operators mimicking Stata's <code>S.x</code> and <code>D.x</code> syntax:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="df = DataFrame(id = [1,1,1,2,2,2], t = [1,2,3,1,2,3], a = [1,1,1,1,0,0])
paneldf!(df,:id,:t)
diff!(df,:a,1)
diff!(df,:a,2)
seasdiff!(df,:a,1)
seasdiff!(df,:a,2)
display(df)
 Row │ id     t      a      D1a      D2a      S1a      S2a
     │ Int64  Int64  Int64  Int64?   Int64?   Int64?   Int64?
─────┼─────────────────────────────────────────────────────────
   1 │     1      1      1  missing  missing  missing  missing
   2 │     1      2      1        0  missing        0  missing
   3 │     1      3      1        0        0        0        0
   4 │     2      1      1  missing  missing  missing  missing
   5 │     2      2      0       -1  missing       -1  missing
   6 │     2      3      0        0        1        0       -1"><pre>df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(id <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>], t <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], a <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>])
<span class="pl-c1">paneldf!</span>(df,<span class="pl-c1">:id</span>,<span class="pl-c1">:t</span>)
<span class="pl-c1">diff!</span>(df,<span class="pl-c1">:a</span>,<span class="pl-c1">1</span>)
<span class="pl-c1">diff!</span>(df,<span class="pl-c1">:a</span>,<span class="pl-c1">2</span>)
<span class="pl-c1">seasdiff!</span>(df,<span class="pl-c1">:a</span>,<span class="pl-c1">1</span>)
<span class="pl-c1">seasdiff!</span>(df,<span class="pl-c1">:a</span>,<span class="pl-c1">2</span>)
<span class="pl-c1">display</span>(df)
 Row │ id     t      a      D1a      D2a      S1a      S2a
     │ Int64  Int64  Int64  Int64?   Int64?   Int64?   Int64?
─────┼─────────────────────────────────────────────────────────
   <span class="pl-c1">1</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">1</span>      <span class="pl-c1">1</span>  <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span>
   <span class="pl-c1">2</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">2</span>      <span class="pl-c1">1</span>        <span class="pl-c1">0</span>  <span class="pl-c1">missing</span>        <span class="pl-c1">0</span>  <span class="pl-c1">missing</span>
   <span class="pl-c1">3</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">3</span>      <span class="pl-c1">1</span>        <span class="pl-c1">0</span>        <span class="pl-c1">0</span>        <span class="pl-c1">0</span>        <span class="pl-c1">0</span>
   <span class="pl-c1">4</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">1</span>      <span class="pl-c1">1</span>  <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span>  <span class="pl-c1">missing</span>
   <span class="pl-c1">5</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">2</span>      <span class="pl-c1">0</span>       <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-c1">missing</span>       <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-c1">missing</span>
   <span class="pl-c1">6</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">3</span>      <span class="pl-c1">0</span>        <span class="pl-c1">0</span>        <span class="pl-c1">1</span>        <span class="pl-c1">0</span>       <span class="pl-k">-</span><span class="pl-c1">1</span></pre></div>
<h3 dir="auto"><a id="user-content-provide-names" class="anchor" aria-hidden="true" href="#provide-names"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Provide Names</h3>
<p dir="auto">You can also create new variable names by adding the <code>name="FancyName"</code> keyword argument:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="lag!(df,:a,name=&quot;FancyName&quot;)"><pre><span class="pl-c1">lag!</span>(df,<span class="pl-c1">:a</span>,name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>FancyName<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Note that this only works operating over a single column.</p>
<h3 dir="auto"><a id="user-content-spells" class="anchor" aria-hidden="true" href="#spells"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Spells</h3>
<p dir="auto">or to obtain spells as in <code>tsspell</code> in Stata:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="df = DataFrame(id = [1,1,1,2,2,2], t = [1,2,3,1,2,3], a = [0,0,1,1,1,0])
paneldf!(df,:id,:t)
spell!(df,:a)
display(df)
6×6 DataFrame
 Row │ id     t      a      _spell  _seq
     │ Int64  Int64  Int64  Int64   Int64
─────┼────────────────────────────────────
   1 │     1      1      0       1      1
   2 │     1      2      0       1      2
   3 │     1      3      1       2      1
   4 │     2      1      1       1      1
   5 │     2      2      1       1      2
   6 │     2      3      0       2      1"><pre>df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(id <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>], t <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], a <span class="pl-k">=</span> [<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>])
<span class="pl-c1">paneldf!</span>(df,<span class="pl-c1">:id</span>,<span class="pl-c1">:t</span>)
<span class="pl-c1">spell!</span>(df,<span class="pl-c1">:a</span>)
<span class="pl-c1">display</span>(df)
<span class="pl-c1">6</span><span class="pl-k">×</span><span class="pl-c1">6</span> DataFrame
 Row │ id     t      a      _spell  _seq
     │ Int64  Int64  Int64  Int64   Int64
─────┼────────────────────────────────────
   <span class="pl-c1">1</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">1</span>      <span class="pl-c1">0</span>       <span class="pl-c1">1</span>      <span class="pl-c1">1</span>
   <span class="pl-c1">2</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">2</span>      <span class="pl-c1">0</span>       <span class="pl-c1">1</span>      <span class="pl-c1">2</span>
   <span class="pl-c1">3</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">3</span>      <span class="pl-c1">1</span>       <span class="pl-c1">2</span>      <span class="pl-c1">1</span>
   <span class="pl-c1">4</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">1</span>      <span class="pl-c1">1</span>       <span class="pl-c1">1</span>      <span class="pl-c1">1</span>
   <span class="pl-c1">5</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">2</span>      <span class="pl-c1">1</span>       <span class="pl-c1">1</span>      <span class="pl-c1">2</span>
   <span class="pl-c1">6</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">3</span>      <span class="pl-c1">0</span>       <span class="pl-c1">2</span>      <span class="pl-c1">1</span></pre></div>
<h3 dir="auto"><a id="user-content-filling-in-gaps-tsfill" class="anchor" aria-hidden="true" href="#filling-in-gaps-tsfill"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Filling in gaps (<code>tsfill</code>)</h3>
<p dir="auto"><code>tsfill</code> is used to fill in gaps of the time variable. You do not need to use it to construct the correct leads, lags or differences.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="df = DataFrame(id = [1,1,2,2,2], t = [1,3,1,2,3], a = [1,1,1,0,0]) # Note, missing t=2 for id=1
paneldf!(df,:id,:t)
dfn = tsfill(df) # Since tsfill extends columns in the DataFrame is does not operate inplace
6×3 DataFrame
 Row │ id     t      a
     │ Int64  Int64  Int64?
─────┼───────────────────────
   1 │     1      1        1
   2 │     1      2  missing
   3 │     1      3        1
   4 │     2      1        1
   5 │     2      2        0
   6 │     2      3        0"><pre>df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(id <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>], t <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">3</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], a <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]) <span class="pl-c"><span class="pl-c">#</span> Note, missing t=2 for id=1</span>
<span class="pl-c1">paneldf!</span>(df,<span class="pl-c1">:id</span>,<span class="pl-c1">:t</span>)
dfn <span class="pl-k">=</span> <span class="pl-c1">tsfill</span>(df) <span class="pl-c"><span class="pl-c">#</span> Since tsfill extends columns in the DataFrame is does not operate inplace</span>
<span class="pl-c1">6</span><span class="pl-k">×</span><span class="pl-c1">3</span> DataFrame
 Row │ id     t      a
     │ Int64  Int64  Int64?
─────┼───────────────────────
   <span class="pl-c1">1</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">1</span>        <span class="pl-c1">1</span>
   <span class="pl-c1">2</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">2</span>  <span class="pl-c1">missing</span>
   <span class="pl-c1">3</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">3</span>        <span class="pl-c1">1</span>
   <span class="pl-c1">4</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">1</span>        <span class="pl-c1">1</span>
   <span class="pl-c1">5</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">2</span>        <span class="pl-c1">0</span>
   <span class="pl-c1">6</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">3</span>        <span class="pl-c1">0</span></pre></div>
<p dir="auto">or maybe you want to fill in with time gaps of 0.5:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="dfn_half = tsfill(df,0.5)
 Row │ id     t        a       
     │ Int64  Float64  Int64?  
─────┼─────────────────────────
   1 │     1      1.0        1
   2 │     1      1.5  missing 
   3 │     1      2.0  missing 
   ⋮      ⋮       ⋮        ⋮
   9 │     2      2.5  missing 
  10 │     2      3.0        0"><pre>dfn_half <span class="pl-k">=</span> <span class="pl-c1">tsfill</span>(df,<span class="pl-c1">0.5</span>)
 Row │ id     t        a       
     │ Int64  Float64  Int64?  
─────┼─────────────────────────
   <span class="pl-c1">1</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">1.0</span>        <span class="pl-c1">1</span>
   <span class="pl-c1">2</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">1.5</span>  <span class="pl-c1">missing</span> 
   <span class="pl-c1">3</span> │     <span class="pl-c1">1</span>      <span class="pl-c1">2.0</span>  <span class="pl-c1">missing</span> 
   ⋮      ⋮       ⋮        ⋮
   <span class="pl-c1">9</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">2.5</span>  <span class="pl-c1">missing</span> 
  <span class="pl-c1">10</span> │     <span class="pl-c1">2</span>      <span class="pl-c1">3.0</span>        <span class="pl-c1">0</span></pre></div>
<h2 dir="auto"><a id="user-content-relevant-links-and-packages" class="anchor" aria-hidden="true" href="#relevant-links-and-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Relevant links and packages</h2>
<ul dir="auto">
<li><a href="https://github.com/JuliaStats/GLM.jl"><code>GLM.jl</code></a></li>
<li><a href="https://github.com/FixedEffects/FixedEffectModels.jl"><code>FixedEffectsModels.jl</code></a></li>
<li><a href="https://github.com/Nosferican/Econometrics.jl"><code>Econometrics.jl</code></a></li>
<li><a href="https://github.com/jmboehm/Douglass.jl"><code>Douglass.jl</code></a></li>
<li><a href="https://github.com/matthieugomez/PeriodicalDates.jl"><code>PeriodicalDates.jl</code></a></li>
<li><a href="https://github.com/xKDR/TSx.jl"><code>TSx.jl</code></a></li>
<li>More? Please add other packages here.</li>
</ul>
<h2 dir="auto"><a id="user-content-possible-future-features" class="anchor" aria-hidden="true" href="#possible-future-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Possible future features</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Link with <code>GLM</code> or <code>FixedEffectModels</code> so that you can specify a model with lags (<code>Model(y ~ x + F.a</code>))</li>
</ul>
</article></div>