<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://github.com/bjack205/SolverLogging.jl/actions/workflows/CI.yml"><img src="https://github.com/bjack205/SolverLogging.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://bjack205.github.io/SolverLogging.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-solverloggingjl" class="anchor" aria-hidden="true" href="#solverloggingjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SolverLogging.jl</h1>
<p dir="auto">This package provides a logger that is designed for use in iterative solvers.
The logger presents data in a tabulated format, with each line representing
the data from an iteration of the solver. The key features of this package are:</p>
<ul dir="auto">
<li>
<p dir="auto">The ability to handle different verbosity levels. Assumes each verbosity level
contains all information from previous levels. Allows the user to scale the
information based on current needs.</p>
</li>
<li>
<p dir="auto">Precise control over output formatting. The location, column width, and entry
formatting for each field can be controlled.</p>
</li>
<li>
<p dir="auto">Color printing to the terminal thanks to <a href="https://github.com/KristofferC/Crayons.jl">Crayons.jl</a></p>
</li>
<li>
<p dir="auto">Conditional formatting that allows values to be automatically formatted
based on a the current value.</p>
</li>
</ul>
<h2 dir="auto"><a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quickstart</h2>
<p dir="auto">To use the default logger provided by the package, start by specifying the fields
you want to log:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using SolverLogging
SolverLogging.resetlogger!()  # good idea to always reset the global logger
setentry(&quot;iter&quot;, Int, width=5)
setentry(&quot;cost&quot;)
setentry(&quot;info&quot;, String, width=25) 
setentry(&quot;α&quot;, fmt=&quot;%6.4f&quot;)  # sets the numeric formatting
setentry(&quot;ΔJ&quot;, index=-2)    # sets it to penultimate column
setentry(&quot;tol&quot;, level=2)    # sets it to verbosity level 2  (prints less often)"><pre lang="@example" class="notranslate"><code>using SolverLogging
SolverLogging.resetlogger!()  # good idea to always reset the global logger
setentry("iter", Int, width=5)
setentry("cost")
setentry("info", String, width=25) 
setentry("α", fmt="%6.4f")  # sets the numeric formatting
setentry("ΔJ", index=-2)    # sets it to penultimate column
setentry("tol", level=2)    # sets it to verbosity level 2  (prints less often)
</code></pre></div>
<p dir="auto">After specifying the data we want to log, we log the data using the <a href="@ref"><code>@log</code></a>
macro:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@log &quot;iter&quot; 1
@log &quot;cost&quot; 10.2"><pre lang="@example" class="notranslate"><code>@log "iter" 1
@log "cost" 10.2
</code></pre></div>
<p dir="auto">Note this macro allows expressions:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="dJ = 1e-3
str = &quot;Some Error Code: &quot;
@log &quot;ΔJ&quot; dJ
@log &quot;info&quot; str * string(10)"><pre lang="@example" class="notranslate"><code>dJ = 1e-3
str = "Some Error Code: "
@log "ΔJ" dJ
@log "info" str * string(10)
</code></pre></div>
<p dir="auto">As a convenient shortcut, we if the local variable name matches the name of the field
we can just pass the local variable and the name will be automatically extracted:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="iter = 2
@log iter "><pre lang="@example" class="notranslate"><code>iter = 2
@log iter 
</code></pre></div>
<p dir="auto">To print the output use <a href="@ref"><code>printlog</code></a>:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="iter = 2
@log iter "><pre lang="@example" class="notranslate"><code>iter = 2
@log iter 
</code></pre></div>
<p dir="auto">which will automatically handle printing the header lines. Here we call it in a loop,
updating the iteration field each time:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="for iter = 1:15
    @log iter
    printlog()
end"><pre lang="@example" class="notranslate"><code>for iter = 1:15
    @log iter
    printlog()
end
</code></pre></div>
<h2 dir="auto"><a id="user-content-sample-output" class="anchor" aria-hidden="true" href="#sample-output"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Sample Output</h2>
<p dir="auto">A simple output with conditional formatting looks like this:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/bjack205/SolverLogging.jl/blob/master/docs/src/sample_output.png"><img src="https://github.com/bjack205/SolverLogging.jl/raw/master/docs/src/sample_output.png" alt="" style="max-width: 100%;"></a></p>
</article></div>