<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-abaqusreaderjl" class="anchor" aria-hidden="true" href="#abaqusreaderjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>AbaqusReader.jl</h1>
<p><a href="https://travis-ci.org/JuliaFEM/AbaqusReader.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b736c6354f2ab694d20dcf06b0451b75dc9b1744/68747470733a2f2f7472617669732d63692e6f72672f4a756c696146454d2f4162617175735265616465722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaFEM/AbaqusReader.jl.svg?branch=master" style="max-width:100%;"></a><a href="https://coveralls.io/github/JuliaFEM/AbaqusReader.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/1a28bb75d4efabcaf0075208dfc69dc678b0470e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c696146454d2f4162617175735265616465722e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaFEM/AbaqusReader.jl/badge.svg?branch=master" style="max-width:100%;"></a><a href="https://juliafem.github.io/AbaqusReader.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a><a href="https://juliafem.github.io/AbaqusReader.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>AbaqusReader.jl can be used to parse ABAQUS .inp file format. Two functions is exported:
<code>abaqus_read_mesh(filename::String)</code> can be used to parse mesh to simple Dict-based structure.
With function <code>abaqus_read_model(filename::String)</code> it's also possible to parse more information
from model, like boundary conditions and steps.</p>
<p>Reading mesh is made simple:</p>
<pre><code>julia&gt; using AbaqusReader
julia&gt; filename = Pkg.dir("AbaqusReader", "test", "test_parse_mesh", "cube_tet4.inp")
julia&gt; mesh = abaqus_read_mesh(filename)
Dict{String,Dict} with 7 entries:
  "nodes"         =&gt; Dict(7=&gt;[0.0, 10.0, 10.0],4=&gt;[10.0, 0.0, 0.0],9=&gt;[10.0, 10…
  "element_sets"  =&gt; Dict("CUBE"=&gt;[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1…
  "element_types" =&gt; Dict{Integer,Symbol}(Pair{Integer,Symbol}(2, :Tet4),Pair{I…
  "elements"      =&gt; Dict{Integer,Array{Integer,1}}(Pair{Integer,Array{Integer,…
  "surface_sets"  =&gt; Dict("LOAD"=&gt;Tuple{Int64,Symbol}[(16, :S1), (8, :S1)],"ORD…
  "surface_types" =&gt; Dict("LOAD"=&gt;:ELEMENT,"ORDER"=&gt;:ELEMENT)
  "node_sets"     =&gt; Dict("SYM23"=&gt;[5, 6, 7, 8],"SYM12"=&gt;[5, 6, 3, 4],"NALL"=&gt;[…
</code></pre>
<p>Like said, <code>mesh</code> is a simple dictionary containing other dictionaries like
<code>elements</code>, <code>nodes</code>, <code>element_sets</code> and so on. This is a good  starting point to
construct own finite element implementations based on real models done using ABAQUS.</p>
<p>If boundary conditions are also requested, <code>abaqus_read_model</code> must be used:</p>
<pre><code>julia&gt; model = abaqus_read_model("abaqus_file.inp")
</code></pre>
<p>This returns <code>AbaqusReader.Model</code> instance.</p>
<h2><a id="user-content-supported-elements" class="anchor" aria-hidden="true" href="#supported-elements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Supported elements</h2>
<ul>
<li>C3D4</li>
<li>C3D8</li>
<li>C3D10</li>
<li>C3D20</li>
<li>C3D20E</li>
<li>S3</li>
<li>STRI65</li>
<li>CPS4</li>
<li>T2D2</li>
<li>T3D2</li>
</ul>
</article></div>