<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a href="https://travis-ci.org/jmboehm/RegressionTables.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1408e0388a86f3818db45a1e28ef0b998f0d8da6/68747470733a2f2f7472617669732d63692e6f72672f6a6d626f65686d2f52656772657373696f6e5461626c65732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/jmboehm/RegressionTables.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://coveralls.io/github/jmboehm/RegressionTables.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/17724b2615fce52f232e13115b6dbb444dccc218/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a6d626f65686d2f52656772657373696f6e5461626c65732e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/jmboehm/RegressionTables.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a> <a href="http://codecov.io/github/jmboehm/RegressionTables.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/c3d015503e4a7b67f3598c5afbfb89ffd9e26ce0/687474703a2f2f636f6465636f762e696f2f6769746875622f6a6d626f65686d2f52656772657373696f6e5461626c65732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/jmboehm/RegressionTables.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-regressiontablesjl" class="anchor" aria-hidden="true" href="#regressiontablesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>RegressionTables.jl</h2>
<p>This package provides publication-quality regression tables for use with <a href="https://github.com/matthieugomez/FixedEffectModels.jl">FixedEffectModels.jl</a> and <a href="https://github.com/JuliaStats/GLM.jl">GLM.jl</a>.</p>
<p>In its objective it is similar to  (and heavily inspired by) the Stata command <a href="http://repec.sowi.unibe.ch/stata/estout/esttab.html" rel="nofollow"><code>esttab</code></a> and the R package <a href="https://cran.r-project.org/web/packages/stargazer/" rel="nofollow"><code>stargazer</code></a>.</p>
<p>To install the package, type in the Julia command prompt</p>
<pre><code>] add RegressionTables
</code></pre>
<h2><a id="user-content-a-brief-demonstration" class="anchor" aria-hidden="true" href="#a-brief-demonstration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>A brief demonstration</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> RegressionTables, DataFrames, FixedEffectModels, RDatasets

df <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>datasets<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>iris<span class="pl-pds">"</span></span>)
df[<span class="pl-c1">:SpeciesDummy</span>] <span class="pl-k">=</span> <span class="pl-c1">categorical</span>(df[<span class="pl-c1">:Species</span>])

rr1 <span class="pl-k">=</span> <span class="pl-c1">reg</span>(df, <span class="pl-c1">@formula</span>(SepalLength <span class="pl-k">~</span> SepalWidth <span class="pl-k">+</span> <span class="pl-c1">fe</span>(SpeciesDummy)))
rr2 <span class="pl-k">=</span> <span class="pl-c1">reg</span>(df, <span class="pl-c1">@formula</span>(SepalLength <span class="pl-k">~</span> SepalWidth <span class="pl-k">+</span> PetalLength <span class="pl-k">+</span> <span class="pl-c1">fe</span>(SpeciesDummy)))
rr3 <span class="pl-k">=</span> <span class="pl-c1">reg</span>(df, <span class="pl-c1">@formula</span>(SepalLength <span class="pl-k">~</span> SepalWidth <span class="pl-k">+</span> PetalLength <span class="pl-k">+</span> PetalWidth <span class="pl-k">+</span> <span class="pl-c1">fe</span>(SpeciesDummy)))
rr4 <span class="pl-k">=</span> <span class="pl-c1">reg</span>(df, <span class="pl-c1">@formula</span>(SepalWidth <span class="pl-k">~</span> SepalLength <span class="pl-k">+</span> PetalLength <span class="pl-k">+</span> PetalWidth <span class="pl-k">+</span> <span class="pl-c1">fe</span>(SpeciesDummy)))

<span class="pl-c1">regtable</span>(rr1,rr2,rr3,rr4; renderSettings <span class="pl-k">=</span> <span class="pl-c1">asciiOutput</span>())</pre></div>
<p>yields</p>
<pre><code>----------------------------------------------------------
                         SepalLength            SepalWidth
               ------------------------------   ----------
                    (1)        (2)        (3)          (4)
----------------------------------------------------------
SepalWidth     0.804***   0.432***   0.496***             
                (0.106)    (0.081)    (0.086)             
PetalLength               0.776***   0.829***      -0.188*
                           (0.064)    (0.069)      (0.083)
PetalWidth                            -0.315*     0.626***
                                      (0.151)      (0.123)
SepalLength                                       0.378***
                                                   (0.066)
----------------------------------------------------------
SpeciesDummy        Yes        Yes        Yes          Yes
----------------------------------------------------------
Estimator           OLS        OLS        OLS          OLS
----------------------------------------------------------
N                   150        150        150          150
R2                0.726      0.863      0.867        0.635
----------------------------------------------------------
</code></pre>
<p>LaTeX output can be generated by using</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">regtable</span>(rr1,rr2,rr3,rr4; renderSettings <span class="pl-k">=</span> <span class="pl-c1">latexOutput</span>())</pre></div>
<p>which yields</p>
<pre><code>\begin{tabular}{lrrrr}
\toprule
             &amp; \multicolumn{3}{c}{SepalLength} &amp; \multicolumn{1}{c}{SepalWidth} \\
\cmidrule(lr){2-4} \cmidrule(lr){5-5}
             &amp;      (1) &amp;      (2) &amp;       (3) &amp;                            (4) \\
\midrule
SepalWidth   &amp; 0.804*** &amp; 0.432*** &amp;  0.496*** &amp;                                \\
             &amp;  (0.106) &amp;  (0.081) &amp;   (0.086) &amp;                                \\
PetalLength  &amp;          &amp; 0.776*** &amp;  0.829*** &amp;                        -0.188* \\
             &amp;          &amp;  (0.064) &amp;   (0.069) &amp;                        (0.083) \\
PetalWidth   &amp;          &amp;          &amp;   -0.315* &amp;                       0.626*** \\
             &amp;          &amp;          &amp;   (0.151) &amp;                        (0.123) \\
SepalLength  &amp;          &amp;          &amp;           &amp;                       0.378*** \\
             &amp;          &amp;          &amp;           &amp;                        (0.066) \\
\midrule
SpeciesDummy &amp;      Yes &amp;      Yes &amp;       Yes &amp;                            Yes \\
\midrule
Estimator    &amp;      OLS &amp;      OLS &amp;       OLS &amp;                            OLS \\
\midrule
$N$          &amp;      150 &amp;      150 &amp;       150 &amp;                            150 \\
$R^2$        &amp;    0.726 &amp;    0.863 &amp;     0.867 &amp;                          0.635 \\
\bottomrule
\end{tabular}
</code></pre>
<p>Similarly, HTML tables can be created with <code>htmlOutput()</code>.</p>
<p>Send the output to a text file by passing the destination file string to the <code>asciiOutput()</code>, <code>latexOutput()</code>, or <code>htmlOutput()</code> functions:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">regtable</span>(rr1,rr2,rr3,rr4; renderSettings <span class="pl-k">=</span> <span class="pl-c1">latexOutput</span>(<span class="pl-s"><span class="pl-pds">"</span>myoutputfile.tex<span class="pl-pds">"</span></span>))</pre></div>
<p>then use <code>\input</code> in LaTeX to include that file in your code. Be sure to use the <code>booktabs</code> package:</p>
<div class="highlight highlight-text-tex-latex"><pre><span class="pl-k">\documentclass</span>{<span class="pl-c1">article</span>}
<span class="pl-k">\usepackage</span>{<span class="pl-c1">booktabs</span>}

<span class="pl-c1">\begin</span>{<span class="pl-smi">document</span>}

<span class="pl-c1">\begin</span>{<span class="pl-smi">table</span>}
<span class="pl-k">\label</span>{<span class="pl-v">tab:mytable</span>}
<span class="pl-k">\input</span>{<span class="pl-c1">myoutputfile</span>}
<span class="pl-c1">\end</span>{<span class="pl-smi">table</span>}

<span class="pl-c1">\end</span>{<span class="pl-smi">document</span>}</pre></div>
<p><code>regtable()</code> can also print <code>TableRegressionModel</code>'s from <a href="https://github.com/JuliaStats/GLM.jl">GLM.jl</a> (and output from other packages that produce <code>TableRegressionModel</code>'s):</p>
<div class="highlight highlight-source-julia"><pre>dobson <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(Counts <span class="pl-k">=</span> [<span class="pl-c1">18.</span>,<span class="pl-c1">17</span>,<span class="pl-c1">15</span>,<span class="pl-c1">20</span>,<span class="pl-c1">10</span>,<span class="pl-c1">20</span>,<span class="pl-c1">25</span>,<span class="pl-c1">13</span>,<span class="pl-c1">12</span>],
    Outcome <span class="pl-k">=</span> <span class="pl-c1">pool</span>(<span class="pl-c1">repeat</span>([<span class="pl-s"><span class="pl-pds">"</span>A<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>B<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>C<span class="pl-pds">"</span></span>], outer <span class="pl-k">=</span> <span class="pl-c1">3</span>)),
    Treatment <span class="pl-k">=</span> <span class="pl-c1">pool</span>(<span class="pl-c1">repeat</span>([<span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>c<span class="pl-pds">"</span></span>], inner <span class="pl-k">=</span> <span class="pl-c1">3</span>)))
lm1 <span class="pl-k">=</span> <span class="pl-c1">fit</span>(LinearModel, <span class="pl-c1">@formula</span>(SepalLength <span class="pl-k">~</span> SepalWidth), df)
gm1 <span class="pl-k">=</span> <span class="pl-c1">fit</span>(GeneralizedLinearModel, <span class="pl-c1">@formula</span>(Counts <span class="pl-k">~</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> Outcome <span class="pl-k">+</span> Treatment), dobson,
                  <span class="pl-c1">Poisson</span>())

<span class="pl-c1">regtable</span>(rr1,lm1,gm1; renderSettings <span class="pl-k">=</span> <span class="pl-c1">asciiOutput</span>())</pre></div>
<p>yields</p>
<pre><code>---------------------------------------------
                   SepalLength        Counts
               -------------------   --------
                    (1)        (2)        (3)
---------------------------------------------
(Intercept)    6.526***   6.526***   3.045***
                (0.479)    (0.479)    (0.171)
SepalWidth       -0.223     -0.223           
                (0.155)    (0.155)           
Outcome: B                             -0.454
                                      (0.202)
Outcome: C                             -0.293
                                      (0.193)
Treatment: b                            0.000
                                      (0.200)
Treatment: c                            0.000
                                      (0.200)
---------------------------------------------
Estimator           OLS        OLS         NL
---------------------------------------------
N                   150        150          9
R2                0.014      0.014           
---------------------------------------------
</code></pre>
<h2><a id="user-content-options" class="anchor" aria-hidden="true" href="#options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Options</h2>
<h3><a id="user-content-function-arguments" class="anchor" aria-hidden="true" href="#function-arguments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Function Arguments</h3>
<ul>
<li><code>rr::Union{FixedEffectModel,DataFrames.TableRegressionModel}...</code> are the <code>FixedEffectModel</code>s from <code>FixedEffectModels.jl</code> (or <code>TableRegressionModel</code>s from <code>GLM.jl</code>) that should be printed. Only required argument.</li>
<li><code>regressors</code> is a <code>Vector</code> of regressor names (<code>String</code>s) that should be shown, in that order. Defaults to an empty vector, in which case all regressors will be shown.</li>
<li><code>fixedeffects</code> is a <code>Vector</code> of FE names (<code>String</code>s) that should be shown, in that order. Defaults to an empty vector, in which case all FE's will be shown. Note that strings need to match the displayed label exactly, otherwise they will not be shown.</li>
<li><code>labels</code> is a <code>Dict</code> that contains displayed labels for variables (strings) and other text in the table. If no label for a variable is found, it default to variable names. See documentation for special values.</li>
<li><code>estimformat</code> is a <code>String</code> that describes the format of the estimate. Defaults to "%0.3f".</li>
<li><code>estim_decoration</code> is a <code>Function</code> that takes the formatted string and the p-value, and applies decorations (such as the beloved stars). Defaults to (* p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001).</li>
<li><code>statisticformat</code> is a <code>String</code> that describes the format of the number below the estimate (se/t). Defaults to "%0.4f".</li>
<li><code>below_statistic</code> is a <code>Symbol</code> that describes a statistic that should be shown below each point estimate. Recognized values are <code>:blank</code>, <code>:se</code>, and <code>:tstat</code>. Defaults to <code>:se</code>.</li>
<li><code>below_decoration</code> is a <code>Function</code> that takes the formatted statistic string, and applies a decorations. Defaults to round parentheses.</li>
<li><code>regression_statistics</code> is a <code>Vector</code> of <code>Symbol</code>s that describe statistics to be shown at the bottom of the table. Recognized symbols are <code>:nobs</code>, <code>:r2</code>, <code>:r2_a</code>, <code>:r2_within</code>, <code>:f</code>, <code>:p</code>, <code>:f_kp</code>, <code>:p_kp</code>, and <code>:dof</code>. Defaults to <code>[:nobs, :r2]</code>.</li>
<li><code>number_regressions</code> is a <code>Bool</code> that governs whether regressions should be numbered. Defaults to <code>true</code>.</li>
<li><code>number_regressions_decoration</code> is a <code>Function</code> that governs the decorations to the regression numbers. Defaults to <code>s -&gt; "($s)"</code>.</li>
<li><code>print_fe_section</code> is a <code>Bool</code> that governs whether a section on fixed effects should be shown. Defaults to <code>true</code>.</li>
<li><code>print_estimator_section</code>  is a <code>Bool</code> that governs whether to print a section on which estimator (OLS/IV) is used. Defaults to <code>true</code>.</li>
<li><code>standardize_coef</code> is a <code>Bool</code> that governs whether the table should show standardized coefficients. Note that this only works with <code>TableRegressionModel</code>s, and that only coefficient estimates and the <code>below_statistic</code> are being standardized (i.e. the R^2 etc still pertain to the non-standardized regression).</li>
<li><code>out_buffer</code> is an <code>IOBuffer</code> that the output gets sent to (unless an output file is specified, in which case the output is only sent to the file).</li>
<li><code>renderSettings::RenderSettings</code> is a <code>RenderSettings</code> composite type that governs how the table should be rendered. Standard supported types are ASCII (via <code>asciiOutput(outfile::String)</code>) and LaTeX (via <code>latexOutput(outfile::String)</code>). If no argument to these two functions are given, the output is sent to STDOUT. Defaults to ASCII with STDOUT.</li>
<li><code>transform_labels</code> is a function that is used to transform labels. For example, in order to escape certain LaTeX characters, use
<div class="highlight highlight-source-julia"><pre>repl_dict <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>&amp;<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\\</span>&amp;<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>%<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\\</span>%<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\$</span><span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\\\$</span><span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>#<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\\</span>#<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>_<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\\</span>_<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>{<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\\</span>{<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>}<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\\</span>}<span class="pl-pds">"</span></span>)
<span class="pl-k">function</span> <span class="pl-en">transform</span>(s, repl_dict<span class="pl-k">=</span>repl_dict)
    <span class="pl-k">for</span> (old, new) <span class="pl-k">in</span> repl_dict
        s <span class="pl-k">=</span> <span class="pl-c1">replace</span>.(s, <span class="pl-c1">Ref</span>(old <span class="pl-k">=&gt;</span> new))
    <span class="pl-k">end</span>
    s
<span class="pl-k">end</span>

<span class="pl-c1">regtable</span>(rr; renderSettings <span class="pl-k">=</span> <span class="pl-c1">latexOutput</span>(), transform_labels <span class="pl-k">=</span> transform)</pre></div>
Defaults to <code>identity</code>. The most common use case is probably to escape the ampersand <code>&amp;</code> in LaTeX, which is already implemented as <code>transform_labels = escape_ampersand</code>.</li>
</ul>
<h3><a id="user-content-label-codes" class="anchor" aria-hidden="true" href="#label-codes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Label Codes</h3>
<p>The following is the exhaustive list of strings that govern the output of labels. Use e.g.</p>
<div class="highlight highlight-source-julia"><pre>labels <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>__LABEL_STATISTIC_N__<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Number of observations<span class="pl-pds">"</span></span>)</pre></div>
<p>to change the label for the row showing the number of observations in each regression.</p>
<ul>
<li>
<p><code>__LABEL_ESTIMATOR__</code> (default: "Estimator")</p>
</li>
<li>
<p><code>__LABEL_ESTIMATOR_OLS__</code> (default: "OLS")</p>
</li>
<li>
<p><code>__LABEL_ESTIMATOR_IV__</code> (default: "IV")</p>
</li>
<li>
<p><code>__LABEL_ESTIMATOR_NL__</code> (default: "NL")</p>
</li>
<li>
<p><code>__LABEL_FE_YES__</code> (default: "Yes")</p>
</li>
<li>
<p><code>__LABEL_FE_NO__</code> (default: "")</p>
</li>
<li>
<p><code>__LABEL_STATISTIC_N__</code> (default: "N" in <code>asciiOutput()</code>)</p>
</li>
<li>
<p><code>__LABEL_STATISTIC_R2__</code> (default: "R2" in <code>asciiOutput()</code>)</p>
</li>
<li>
<p><code>__LABEL_STATISTIC_R2_A__</code> (default: "Adjusted R2" in <code>asciiOutput()</code>)</p>
</li>
<li>
<p><code>__LABEL_STATISTIC_R2_WITHIN__</code> (default: "Within-R2" in <code>asciiOutput()</code>)</p>
</li>
<li>
<p><code>__LABEL_STATISTIC_F__</code> (default: "F" in <code>asciiOutput()</code>)</p>
</li>
<li>
<p><code>__LABEL_STATISTIC_P__</code> (default: "F-test p value" in <code>asciiOutput()</code>)</p>
</li>
<li>
<p><code>__LABEL_STATISTIC_F_KP__</code> (default: "First-stage F statistic" in <code>asciiOutput()</code>)</p>
</li>
<li>
<p><code>__LABEL_STATISTIC_P_KP__</code> (default: "First-stage p value" in <code>asciiOutput()</code>)</p>
</li>
<li>
<p><code>__LABEL_STATISTIC_DOF__</code> (default: "Degrees of Freedom" in <code>asciiOutput()</code>)</p>
</li>
</ul>
</article></div>