<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-galacticoptimjl" class="anchor" aria-hidden="true" href="#galacticoptimjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GalacticOptim.jl</h1>
<p><a href="https://travis-ci.com/SciML/GalacticOptim.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c23b7ee0d231c04be946f41e4dbfbc03589ea64d/68747470733a2f2f7472617669732d63692e636f6d2f5363694d4c2f47616c61637469634f7074696d2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/SciML/GalacticOptim.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>GalacticOptim.jl is a package with a scope that is beyond your normal global optimization
package. GalacticOptim.jl seeks to bring together all of the optimization packages
it can find, local and global, into one unified Julia interface. This means, you
learn one package and you learn them all! GalacticOptim.jl adds a few high level
features, such as integrating with automatic differentiation, to make its usage
fairly simple for most cases, while allowing all of the options in a single
unified interface.</p>
<h4><a id="user-content-note-this-package-is-currently-in-development-and-is-not-released-the-readme-is-currently-a-development-roadmap" class="anchor" aria-hidden="true" href="#note-this-package-is-currently-in-development-and-is-not-released-the-readme-is-currently-a-development-roadmap"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Note: This package is currently in development and is not released. The README is currently a development roadmap.</h4>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> GalacticOptim
<span class="pl-en">rosenbrock</span>(x,p) <span class="pl-k">=</span>  (p[<span class="pl-c1">1</span>] <span class="pl-k">-</span> x[<span class="pl-c1">1</span>])<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> p[<span class="pl-c1">2</span>] <span class="pl-k">*</span> (x[<span class="pl-c1">2</span>] <span class="pl-k">-</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>
x0 <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(<span class="pl-c1">2</span>)
p  <span class="pl-k">=</span> [<span class="pl-c1">1.0</span>,<span class="pl-c1">100.0</span>]

prob <span class="pl-k">=</span> <span class="pl-c1">OptimizationProblem</span>(f,x0,p)
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob,<span class="pl-c1">BFGS</span>())

prob <span class="pl-k">=</span> <span class="pl-c1">OptimizationProblem</span>(f,lower_bounds<span class="pl-k">=</span>[<span class="pl-k">-</span><span class="pl-c1">1.0</span>,<span class="pl-k">-</span><span class="pl-c1">1.0</span>],upper_bounds<span class="pl-k">=</span>[<span class="pl-c1">1.0</span>,<span class="pl-c1">1.0</span>])
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob,<span class="pl-c1">BFGS</span>())

<span class="pl-k">using</span> BlackBoxOptim
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob,<span class="pl-c1">BBO</span>())

<span class="pl-k">using</span> Flux
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob,<span class="pl-c1">ADAM</span>(<span class="pl-c1">0.01</span>),maxiters <span class="pl-k">=</span> <span class="pl-c1">100</span>)</pre></div>
<h3><a id="user-content-automatic-differentiation-choices" class="anchor" aria-hidden="true" href="#automatic-differentiation-choices"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Automatic Differentiation Choices</h3>
<p>While one can fully define all of the derivative functions associated with
nonlinear constrained optimization directly, in many cases it's easiest to just
rely on automatic differentiation to derive those functions. In GalacticOptim.jl,
you can provide as few functions as you want, or give a differentiation library
choice.</p>
<ul>
<li><code>AutoForwardDiff()</code></li>
<li><code>AutoReverseDiff(compile=false)</code></li>
<li><code>AutoTracker()</code></li>
<li><code>AutoZygote()</code></li>
<li><code>AutoFiniteDiff()</code></li>
<li><code>AutoModelingToolkit()</code></li>
</ul>
<h3><a id="user-content-symbolic-dsl-interface" class="anchor" aria-hidden="true" href="#symbolic-dsl-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Symbolic DSL Interface</h3>
<p>Provided by ModelingToolkit.jl</p>
<h3><a id="user-content-api-documentation" class="anchor" aria-hidden="true" href="#api-documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>API Documentation</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">OptimizationFunction</span>(f;
                     grad <span class="pl-k">=</span> <span class="pl-c1">AutoForwardDiff</span>(),
                     hes <span class="pl-k">=</span> <span class="pl-c1">AutoForwardDiff</span>(),
                     eqconstraints <span class="pl-k">=</span> <span class="pl-c1">AutoForwardDiff</span>(),
                     neqconstraints <span class="pl-k">=</span> <span class="pl-c1">AutoForwardDiff</span>(),
                     eqconstraints_jac <span class="pl-k">=</span> <span class="pl-c1">AutoForwardDiff</span>(),
                     neqconstraints_jac <span class="pl-k">=</span> <span class="pl-c1">AutoForwardDiff</span>(),
                     colorvec,hessparsity,eqsparsity,neqsparsity)</pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">OptimizationProblem</span>(f,x0<span class="pl-k">=</span><span class="pl-c1">nothing</span>,p<span class="pl-k">=</span><span class="pl-c1">nothing</span>;
                    lower_bounds<span class="pl-k">=</span><span class="pl-c1">nothing</span>,
                    upper_bounds<span class="pl-k">=</span><span class="pl-c1">nothing</span>)</pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">solve</span>(prob,alg;kwargs<span class="pl-k">...</span>)</pre></div>
<p>Keyword arguments:</p>
<ul>
<li><code>maxiters</code></li>
<li><code>abstol</code></li>
<li><code>reltol</code></li>
</ul>
<p>Output Struct:</p>
</article></div>