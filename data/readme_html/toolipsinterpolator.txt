<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><div align="center" dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ChifiSource/image_dump/blob/main/toolips/toolipsinterpolator.png"><img src="https://github.com/ChifiSource/image_dump/raw/main/toolips/toolipsinterpolator.png" style="max-width: 100%;"></a></div>
<br>
<p dir="auto">The interpolator extension provides a single <code>Toolips.Servable</code>, the <code>InterpolatedFile</code>. This can be read from a directory, and is provided arguments to determine what to replace variable names with. Variable names are denoted with a <code>$</code>, much like in regular Julia.</p>
<ul dir="auto">
<li><a href="doc.toolips.app/extensions/toolips_interpolator">Documentation</a></li>
<li><a href="https://github.com/ChifiSource/Toolips.jl">Toolips</a></li>
<li><a href="https://toolips.app/?page=gallery&amp;selected=interpolator" rel="nofollow">Extension Gallery</a></li>
</ul>
<h5 dir="auto"><a id="user-content-indexhtml" class="anchor" aria-hidden="true" href="#indexhtml"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>index.html</h5>
<div class="highlight highlight-text-html-basic notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="&lt;h1&gt;Toolips interpolator example&lt;/h1&gt;
&lt;p&gt;$xis is the number&lt;/p&gt;
&lt;h3&gt; This should be a p:&lt;/h3&gt;
&lt;div align=&quot;center&quot;&gt;
$helloworld
&lt;/div&gt;
$mybutt
$regdiv
$myval"><pre><span class="pl-kos">&lt;</span><span class="pl-ent">h1</span><span class="pl-kos">&gt;</span>Toolips interpolator example<span class="pl-kos">&lt;/</span><span class="pl-ent">h1</span><span class="pl-kos">&gt;</span>
<span class="pl-kos">&lt;</span><span class="pl-ent">p</span><span class="pl-kos">&gt;</span>$xis is the number<span class="pl-kos">&lt;/</span><span class="pl-ent">p</span><span class="pl-kos">&gt;</span>
<span class="pl-kos">&lt;</span><span class="pl-ent">h3</span><span class="pl-kos">&gt;</span> This should be a p:<span class="pl-kos">&lt;/</span><span class="pl-ent">h3</span><span class="pl-kos">&gt;</span>
<span class="pl-kos">&lt;</span><span class="pl-ent">div</span> <span class="pl-c1">align</span>="<span class="pl-s">center</span>"<span class="pl-kos">&gt;</span>
$helloworld
<span class="pl-kos">&lt;/</span><span class="pl-ent">div</span><span class="pl-kos">&gt;</span>
$mybutt
$regdiv
$myval</pre></div>
<h5 dir="auto"><a id="user-content-myappjl" class="anchor" aria-hidden="true" href="#myappjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MyApp.jl</h5>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="module MyApp
using Toolips
using ToolipsInterpolator
# welcome to your new toolips project!
&quot;&quot;&quot;
home(c::Connection) -&gt; _
--------------------
The home function is served as a route inside of your server by default. To
    change this, view the start method below.
&quot;&quot;&quot;
function home(c::Connection)
    newp = p(&quot;helloworld&quot;, text = &quot;hello world!&quot;)
    myx = 5
    mybutt = button(&quot;mybutt&quot;, text = &quot;my button!&quot;)
    regdiv = div(&quot;regdiv&quot;)
    myval = &quot;what the heck&quot;
    intfile = InterpolatedFile(&quot;src/index.html&quot;, xis = myx, myval = myval,
    regdiv, mybutt, newp)
    write!(c, intfile)
end

fourofour = route(&quot;404&quot;) do c
    write!(c, p(&quot;404message&quot;, text = &quot;404, not found!&quot;))
end

routes = [route(&quot;/&quot;, home), fourofour]
extensions = Vector{ServerExtension}([Logger(), ])
&quot;&quot;&quot;
start(IP::String, PORT::Integer, ) -&gt; ::ToolipsServer
--------------------
The start function starts the WebServer.
&quot;&quot;&quot;
function start(IP::String = &quot;127.0.0.1&quot;, PORT::Integer = 8000)
     ws = WebServer(IP, PORT, routes = routes, extensions = extensions)
     ws.start(); ws
end
end # - module
"><pre><span class="pl-k">module</span> MyApp
<span class="pl-k">using</span> Toolips
<span class="pl-k">using</span> ToolipsInterpolator
<span class="pl-c"><span class="pl-c">#</span> welcome to your new toolips project!</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">home(c::Connection) -&gt; _</span>
<span class="pl-s">--------------------</span>
<span class="pl-s">The home function is served as a route inside of your server by default. To</span>
<span class="pl-s">    change this, view the start method below.</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-k">function</span> <span class="pl-en">home</span>(c<span class="pl-k">::</span><span class="pl-c1">Connection</span>)
    newp <span class="pl-k">=</span> <span class="pl-c1">p</span>(<span class="pl-s"><span class="pl-pds">"</span>helloworld<span class="pl-pds">"</span></span>, text <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>hello world!<span class="pl-pds">"</span></span>)
    myx <span class="pl-k">=</span> <span class="pl-c1">5</span>
    mybutt <span class="pl-k">=</span> <span class="pl-c1">button</span>(<span class="pl-s"><span class="pl-pds">"</span>mybutt<span class="pl-pds">"</span></span>, text <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>my button!<span class="pl-pds">"</span></span>)
    regdiv <span class="pl-k">=</span> <span class="pl-c1">div</span>(<span class="pl-s"><span class="pl-pds">"</span>regdiv<span class="pl-pds">"</span></span>)
    myval <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>what the heck<span class="pl-pds">"</span></span>
    intfile <span class="pl-k">=</span> <span class="pl-c1">InterpolatedFile</span>(<span class="pl-s"><span class="pl-pds">"</span>src/index.html<span class="pl-pds">"</span></span>, xis <span class="pl-k">=</span> myx, myval <span class="pl-k">=</span> myval,
    regdiv, mybutt, newp)
    <span class="pl-c1">write!</span>(c, intfile)
<span class="pl-k">end</span>

fourofour <span class="pl-k">=</span> <span class="pl-c1">route</span>(<span class="pl-s"><span class="pl-pds">"</span>404<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> c
    <span class="pl-c1">write!</span>(c, <span class="pl-c1">p</span>(<span class="pl-s"><span class="pl-pds">"</span>404message<span class="pl-pds">"</span></span>, text <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>404, not found!<span class="pl-pds">"</span></span>))
<span class="pl-k">end</span>

routes <span class="pl-k">=</span> [<span class="pl-c1">route</span>(<span class="pl-s"><span class="pl-pds">"</span>/<span class="pl-pds">"</span></span>, home), fourofour]
extensions <span class="pl-k">=</span> <span class="pl-c1">Vector</span><span class="pl-c1">{ServerExtension}</span>([<span class="pl-c1">Logger</span>(), ])
<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">start(IP::String, PORT::Integer, ) -&gt; ::ToolipsServer</span>
<span class="pl-s">--------------------</span>
<span class="pl-s">The start function starts the WebServer.</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-k">function</span> <span class="pl-en">start</span>(IP<span class="pl-k">::</span><span class="pl-c1">String</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>127.0.0.1<span class="pl-pds">"</span></span>, PORT<span class="pl-k">::</span><span class="pl-c1">Integer</span> <span class="pl-k">=</span> <span class="pl-c1">8000</span>)
     ws <span class="pl-k">=</span> <span class="pl-c1">WebServer</span>(IP, PORT, routes <span class="pl-k">=</span> routes, extensions <span class="pl-k">=</span> extensions)
     ws<span class="pl-k">.</span><span class="pl-c1">start</span>(); ws
<span class="pl-k">end</span>
<span class="pl-k">end</span> <span class="pl-c"><span class="pl-c">#</span> - module</span>
</pre></div>
</article></div>