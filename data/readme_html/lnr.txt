<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-lnr" class="anchor" aria-hidden="true" href="#lnr"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LNR</h1>
<p>LNR.jl implements a <code>LineNumberingReader</code> type which transparently wraps any other reader (<code>::IO</code>). It's intended for working with hand written text where line and column information is significant, and provides functions for working with this information.</p>
<p><code>LineNumberingReader</code>s can be created with either an IO object or a string as a parameter.</p>
<p>The <code>Cursor</code> type, which has the <code>line</code> and <code>column</code> fields, represents a position between two characters (and not the character itself). So <code>Cursor(n, m)</code> represents the position just before the <code>m</code>th character on line <code>n</code>. Comparisons are supported.</p>
<p>The <code>cursor</code> function gives the current position in the stream as a cursor. <code>seek</code> can be called as usual, but with a <code>Cursor</code> instead of an integer, to set the reader at any position in the file.</p>
<p>Other than that, standard IO functions are wrapped, so you can use a line reader as you would any other stream.</p>
</article></div>