<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-lnr" class="anchor" aria-hidden="true" href="#lnr"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>LNR</h1>
<p>LNR.jl implements a <code>LineNumberingReader</code> type which transparently wraps any other reader (<code>::IO</code>). It's intended for working with hand written text where line and column information is significant, and provides functions for working with this information.</p>
<p><code>LineNumberingReader</code>s can be created with either an IO object or a string as a parameter.</p>
<p>The <code>Cursor</code> type, which has the <code>line</code> and <code>column</code> fields, represents a position between two characters (and not the character itself). So <code>Cursor(n, m)</code> represents the position just before the <code>m</code>th character on line <code>n</code>. Comparisons are supported.</p>
<p>The <code>cursor</code> function gives the current position in the stream as a cursor. <code>seek</code> can be called as usual, but with a <code>Cursor</code> instead of an integer, to set the reader at any position in the file.</p>
<p>Other than that, standard IO functions are wrapped, so you can use a line reader as you would any other stream.</p>
</article></div>