<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-seissolxdmf" class="anchor" aria-hidden="true" href="#seissolxdmf"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SeisSolXDMF</h1>
<p dir="auto">A Julia library for reading SeisSol XDMF outputs (both POSIX and HDF5 are supported).</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SeisSolXDMF

# Parses the file
xdmf = XDMFFile(&quot;my-output.xdmf&quot;)

# Topology: Integer array of shape (nDims, nSimplices) where nDims is 3 (triangles) or 4 (simplices)
# Geometry: Float array of shape (3, nPoints)
topology, geometry = grid_of(xdmf)

# Returns a float array of nTimesteps elements containing the respective timestamps
timesteps = timesteps_of(xdmf)

# Read the values of variable &quot;u&quot; at timestep 3 into an array. (Timesteps are indexed starting at 1!)
u = data_of(xdmf, 3, &quot;u&quot;)"><pre><span class="pl-k">using</span> SeisSolXDMF

<span class="pl-c"><span class="pl-c">#</span> Parses the file</span>
xdmf <span class="pl-k">=</span> <span class="pl-c1">XDMFFile</span>(<span class="pl-s"><span class="pl-pds">"</span>my-output.xdmf<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Topology: Integer array of shape (nDims, nSimplices) where nDims is 3 (triangles) or 4 (simplices)</span>
<span class="pl-c"><span class="pl-c">#</span> Geometry: Float array of shape (3, nPoints)</span>
topology, geometry <span class="pl-k">=</span> <span class="pl-c1">grid_of</span>(xdmf)

<span class="pl-c"><span class="pl-c">#</span> Returns a float array of nTimesteps elements containing the respective timestamps</span>
timesteps <span class="pl-k">=</span> <span class="pl-c1">timesteps_of</span>(xdmf)

<span class="pl-c"><span class="pl-c">#</span> Read the values of variable "u" at timestep 3 into an array. (Timesteps are indexed starting at 1!)</span>
u <span class="pl-k">=</span> <span class="pl-c1">data_of</span>(xdmf, <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">"</span>u<span class="pl-pds">"</span></span>)</pre></div>
</article></div>