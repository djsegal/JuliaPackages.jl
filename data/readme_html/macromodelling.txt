<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-macromodellingjl" class="anchor" aria-hidden="true" href="#macromodellingjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MacroModelling.jl</h1>
<p dir="auto"><strong>Documentation</strong>: <a href="https://thorek1.github.io/MacroModelling.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://codecov.io/gh/thorek1/MacroModelling.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e43719343ebcbdeaad9a050c6e99073b79b50fe1846b96f1c5a4c8e87c7329f1/68747470733a2f2f636f6465636f762e696f2f67682f74686f72656b312f4d6163726f4d6f64656c6c696e672e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d514f414e4746354d5358" alt="codecov" data-canonical-src="https://codecov.io/gh/thorek1/MacroModelling.jl/branch/main/graph/badge.svg?token=QOANGF5MSX" style="max-width: 100%;"></a>
<a href="https://github.com/thorek1/MacroModelling.jl/actions/workflows/ci.yml"><img src="https://github.com/thorek1/MacroModelling.jl/actions/workflows/ci.yml/badge.svg?branch=main" alt="CI" style="max-width: 100%;"></a></p>

<p dir="auto"><strong>Author: Thore Kockerols (@thorek1)</strong></p>
<p dir="auto"><code>MacroModelling.jl</code> is a package for developing and solving dynamic stochastic general equilibrium (DSGE) models. The package provides functions for creating, calibrating, simulating and estimating discrete-time DSGE models.</p>
<p dir="auto">The goal of <code>MacroModelling.jl</code> is to reduce coding time and speed up model development.</p>
<p dir="auto">As of now the package can:</p>
<ul dir="auto">
<li>parse a model written with user friendly syntax (variables are followed by time indices <code>...[2], [1], [0], [-1], [-2]...</code>, or <code>[x]</code> for shocks)</li>
<li>(tries to) solve the model only knowing the model equations and parameter values (no steady state file needed)</li>
<li>calculate first, second, and third order perturbation solutions using (forward or reverse-mode) automatic differentiation (AD)</li>
<li>calculate (generalised) impulse response functions, simulate the model, or do conditional forecasts</li>
<li>calibrate parameters using (non stochastic) steady state relationships</li>
<li>match model moments</li>
<li>estimate the model on data (Kalman filter using first order perturbation)</li>
<li><strong>differentiate</strong> (forward AD) the model solution, Kalman filter loglikelihood (reverse-mode AD), model moments, steady state, <strong>with respect to the parameters</strong></li>
</ul>
<p dir="auto">The package is not:</p>
<ul dir="auto">
<li>guaranteed to find the non stochastic steady state (solving systems of nonlinear equations is an active area of research)</li>
<li>the fastest package around if you already have a fast way to find the NSSS (time to first plot is long, time to second plot (with new parameters) is very short)</li>
</ul>
<p dir="auto">For more details have a look at the <a href="https://thorek1.github.io/MacroModelling.jl/stable" rel="nofollow">documentation</a>.</p>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting started</h2>
<h3 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h3>
<p dir="auto"><code>MacroModelling.jl</code> requires <a href="https://julialang.org/downloads/" rel="nofollow"><code>julia</code></a> version 1.8 or higher and an IDE is recommended (e.g. <a href="https://code.visualstudio.com/download" rel="nofollow"><code>VS Code</code></a> with the <a href="https://marketplace.visualstudio.com/items?itemName=julialang.language-julia" rel="nofollow"><code>julia extension</code></a>).</p>
<p dir="auto">Once set up you can install <code>MacroModelling.jl</code> (and <code>StatsPlots</code> in order to plot) by typing the following in the Julia REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg; Pkg.add([&quot;MacroModelling&quot;, &quot;StatsPlots&quot;])"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>([<span class="pl-s"><span class="pl-pds">"</span>MacroModelling<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>StatsPlots<span class="pl-pds">"</span></span>])</pre></div>
<h3 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h3>
<p dir="auto">See below an implementation of a simple RBC model. You can find more detailed tutorials in the <a href="https://thorek1.github.io/MacroModelling.jl/stable" rel="nofollow">documentation</a>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using MacroModelling
import StatsPlots

@model RBC begin
    1  /  c[0] = (β  /  c[1]) * (α * exp(z[1]) * k[0]^(α - 1) + (1 - δ))
    c[0] + k[0] = (1 - δ) * k[-1] + q[0]
    q[0] = exp(z[0]) * k[-1]^α
    z[0] = ρ * z[-1] + std_z * eps_z[x]
end;

@parameters RBC begin
    std_z = 0.01
    ρ = 0.2
    δ = 0.02
    α = 0.5
    β = 0.95
end;

plot_irf(RBC)"><pre><span class="pl-k">using</span> MacroModelling
<span class="pl-k">import</span> StatsPlots

<span class="pl-c1">@model</span> RBC <span class="pl-k">begin</span>
    <span class="pl-c1">1</span>  <span class="pl-k">/</span>  c[<span class="pl-c1">0</span>] <span class="pl-k">=</span> (β  <span class="pl-k">/</span>  c[<span class="pl-c1">1</span>]) <span class="pl-k">*</span> (α <span class="pl-k">*</span> <span class="pl-c1">exp</span>(z[<span class="pl-c1">1</span>]) <span class="pl-k">*</span> k[<span class="pl-c1">0</span>]<span class="pl-k">^</span>(α <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">+</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> δ))
    c[<span class="pl-c1">0</span>] <span class="pl-k">+</span> k[<span class="pl-c1">0</span>] <span class="pl-k">=</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> δ) <span class="pl-k">*</span> k[<span class="pl-k">-</span><span class="pl-c1">1</span>] <span class="pl-k">+</span> q[<span class="pl-c1">0</span>]
    q[<span class="pl-c1">0</span>] <span class="pl-k">=</span> <span class="pl-c1">exp</span>(z[<span class="pl-c1">0</span>]) <span class="pl-k">*</span> k[<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">^</span>α
    z[<span class="pl-c1">0</span>] <span class="pl-k">=</span> ρ <span class="pl-k">*</span> z[<span class="pl-k">-</span><span class="pl-c1">1</span>] <span class="pl-k">+</span> std_z <span class="pl-k">*</span> eps_z[x]
<span class="pl-k">end</span>;

<span class="pl-c1">@parameters</span> RBC <span class="pl-k">begin</span>
    std_z <span class="pl-k">=</span> <span class="pl-c1">0.01</span>
    ρ <span class="pl-k">=</span> <span class="pl-c1">0.2</span>
    δ <span class="pl-k">=</span> <span class="pl-c1">0.02</span>
    α <span class="pl-k">=</span> <span class="pl-c1">0.5</span>
    β <span class="pl-k">=</span> <span class="pl-c1">0.95</span>
<span class="pl-k">end</span>;

<span class="pl-c1">plot_irf</span>(RBC)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/irf__RBC__eps_z__1.png"><img src="docs/src/assets/irf__RBC__eps_z__1.png" alt="RBC IRF" style="max-width: 100%;"></a></p>
<p dir="auto">The package contains the following models in the <code>models</code> folder:</p>
<ul dir="auto">
<li><a href="https://www.journals.uchicago.edu/doi/10.1086/511283" rel="nofollow">Aguiar and Gopinath (2007)</a> <code>Aguiar_Gopinath_2007.jl</code></li>
<li><a href="https://www.aeaweb.org/articles?id=10.1257/jel.52.3.679" rel="nofollow">Ascari and Sbordone (2014)</a> <code>Ascari_sbordone_2014.jl</code></li>
<li><a href="https://www.sciencedirect.com/science/article/abs/pii/S1094202511000433" rel="nofollow">Caldara et al. (2012)</a> <code>Caldara_et_al_2012.jl</code></li>
<li><a href="https://press.princeton.edu/books/hardcover/9780691164786/monetary-policy-inflation-and-the-business-cycle" rel="nofollow">Gali (2015)</a> - Chapter 3 <code>Gali_2015_chapter_3_nonlinear.jl</code></li>
<li><a href="https://crei.cat/wp-content/uploads/users/pages/roes8739.pdf" rel="nofollow">Gali and Monacelli (2005)</a> - CPI inflation-based Taylor rule <code>Gali_Monacelli_2005_CITR.jl</code></li>
<li><a href="https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1538-4616.2010.00331.x" rel="nofollow">Gerali, Neri, Sessa, and Signoretti (2010)</a> <code>GNSS_2010.jl</code></li>
<li><a href="https://faculty.washington.edu/ghiro/GhiroMeliQJE0805.pdf" rel="nofollow">Ghironi and Melitz (2005)</a> <code>Ghironi_Melitz_2005.jl</code></li>
<li><a href="http://irelandp.com/pubs/tshocksnk.pdf" rel="nofollow">Ireland (2004)</a> <code>Ireland_2004.jl</code></li>
<li><a href="https://www.aeaweb.org/articles?id=10.1257/aer.102.1.238" rel="nofollow">Jermann and Quadrini (2012)</a> - RBC <code>JQ_2012_RBC.jl</code></li>
<li><a href="https://www.ecb.europa.eu/pub/pdf/scpwps/ecbwp944.pdf" rel="nofollow">New Area-Wide Model (2008)</a> - Euro Area - US <code>NAWM_EAUS_2008.jl</code></li>
<li><a href="https://www.sciencedirect.com/science/article/abs/pii/S0022199602000569" rel="nofollow">Schmitt-Grohé and Uribe (2003)</a> - debt premium <code>SGU_2003_debt_premium.jl</code></li>
<li><a href="https://onlinelibrary.wiley.com/doi/abs/10.1002/jae.582" rel="nofollow">Schorfheide (2000)</a> <code>FS2000.jl</code></li>
<li><a href="https://onlinelibrary.wiley.com/doi/10.1162/154247603770383415" rel="nofollow">Smets and Wouters (2003)</a> <code>SW03.jl</code></li>
<li><a href="https://www.aeaweb.org/articles?id=10.1257/aer.97.3.586" rel="nofollow">Smets and Wouters (2007)</a> <code>SW07.jl</code></li>
</ul>
<h2 dir="auto"><a id="user-content-comparison-with-other-packages" class="anchor" aria-hidden="true" href="#comparison-with-other-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Comparison with other packages</h2>
<table>
<thead>
<tr>
<th></th>
<th>MacroModelling.jl</th>
<th><a href="https://www.dynare.org" rel="nofollow">dynare</a></th>
<th><a href="https://github.com/jmaih/RISE_toolbox">RISE</a></th>
<th><a href="https://github.com/Coksp1/NBTOOLBOX/tree/main/Documentation">NBTOOLBOX</a></th>
<th><a href="https://iris.igpmn.org" rel="nofollow">IRIS</a></th>
<th><a href="https://github.com/FRBNY-DSGE/DSGE.jl">DSGE.jl</a></th>
<th><a href="https://bankofcanada.github.io/DocsEcon.jl/dev/" rel="nofollow">StateSpaceEcon.jl</a></th>
<th><a href="https://github.com/RJDennis/SolveDSGE.jl">SolveDSGE.jl</a></th>
<th><a href="https://www.econforge.org/dolo.py/" rel="nofollow">dolo.py</a></th>
<th><a href="https://github.com/HighDimensionalEconLab/DifferentiableStateSpaceModels.jl">DifferentiableStateSpaceModels.jl</a></th>
<th><a href="http://gecon.r-forge.r-project.org" rel="nofollow">gEcon</a></th>
<th><a href="https://www.gdsge.com" rel="nofollow">GDSGE</a></th>
<th><a href="https://sites.google.com/site/orenlevintal/taylor-projection" rel="nofollow">Taylor Projection</a></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Host language</strong></td>
<td>julia</td>
<td>MATLAB</td>
<td>MATLAB</td>
<td>MATLAB</td>
<td>MATLAB</td>
<td>julia</td>
<td>julia</td>
<td>julia</td>
<td>Python</td>
<td>julia</td>
<td>R</td>
<td>MATLAB</td>
<td>MATLAB</td>
</tr>
<tr>
<td><strong>Non stochastic steady state solver</strong></td>
<td><em>symbolic</em> or numerical solver of independent blocks; symbolic removal of variables redundant in steady state; inclusion of calibration equations in problem</td>
<td>numerical solver of independent blocks or user-supplied values/functions</td>
<td>numerical solver of independent blocks or user-supplied values/functions</td>
<td>user-supplied steady state file or numerical solver</td>
<td>numerical solver of independent blocks or user-supplied values/functions</td>
<td></td>
<td>numerical solver of independent blocks or user-supplied values/functions</td>
<td>numerical solver</td>
<td>numerical solver or user supplied values/equations</td>
<td>numerical solver or user supplied values/equations</td>
<td>numerical solver; inclusion of calibration equations in problem</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>Automatic declaration of variables and parameters</strong></td>
<td>yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>Derivatives (Automatic Differentiation) wrt parameters</strong></td>
<td>yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>yes - for all 1st, 2nd order perturbation solution related output <em>if user supplied steady state equations</em></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>Perturbation solution order</strong></td>
<td>1, 2, 3</td>
<td>k</td>
<td>1 to 5</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1, 2, 3</td>
<td>1, 2, 3</td>
<td>1, 2</td>
<td>1</td>
<td></td>
<td>1 to 5</td>
</tr>
<tr>
<td><strong>Automatic derivation of first order conditions</strong></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>yes</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>Handles occasionally binding constraints</strong></td>
<td></td>
<td>yes</td>
<td>yes</td>
<td></td>
<td></td>
<td>yes</td>
<td></td>
<td>yes</td>
<td>yes</td>
<td></td>
<td></td>
<td>yes</td>
<td></td>
</tr>
<tr>
<td><strong>Global solution</strong></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>yes</td>
<td>yes</td>
<td></td>
<td></td>
<td>yes</td>
<td></td>
</tr>
<tr>
<td><strong>Estimation</strong></td>
<td>yes</td>
<td>yes</td>
<td>yes</td>
<td>yes</td>
<td>yes</td>
<td>yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>yes</td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>Balanced growth path</strong></td>
<td></td>
<td>yes</td>
<td>yes</td>
<td>yes</td>
<td>yes</td>
<td>yes</td>
<td>yes</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>Model input</strong></td>
<td>macro (julia)</td>
<td>text file</td>
<td>text file</td>
<td>text file</td>
<td>text file</td>
<td>text file</td>
<td>module (julia)</td>
<td>text file</td>
<td>text file</td>
<td>macro (julia)</td>
<td>text file</td>
<td>text file</td>
<td>text file</td>
</tr>
<tr>
<td><strong>Timing convention</strong></td>
<td>end-of-period</td>
<td>end-of-period</td>
<td>end-of-period</td>
<td>end-of-period</td>
<td>end-of-period</td>
<td></td>
<td>end-of-period</td>
<td>start-of-period</td>
<td>end-of-period</td>
<td>start-of-period</td>
<td>end-of-period</td>
<td>start-of-period</td>
<td>start-of-period</td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-bibliography" class="anchor" aria-hidden="true" href="#bibliography"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bibliography</h2>
<p dir="auto">Durbin, J, and Koopman, S. J. (2012), "Time Series Analysis by State Space Methods, 2nd edn", Oxford University Press.</p>
<p dir="auto">Levintal, O., (2017), "Fifth-Order Perturbation Solution to DSGE models", Journal of Economic Dynamics and Control, 80, pp. 1---16.</p>
<p dir="auto">Villemot, S., (2011), "Solving rational expectations models at first order: what Dynare does", Dynare Working Papers 2, CEPREMAP.</p>
</article></div>