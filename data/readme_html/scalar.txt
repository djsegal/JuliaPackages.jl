<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-scalar" class="anchor" aria-hidden="true" href="#scalar"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Scalar</h1>
<h3><a id="user-content-scalar-type-tools" class="anchor" aria-hidden="true" href="#scalar-type-tools"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Scalar Type Tools</h3>
<p><a href="https://travis-ci.org/sabjohnso/Scalar.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7f530c803f739a184a5fd6d418a2acfaea56db67/68747470733a2f2f7472617669732d63692e6f72672f7361626a6f686e736f2f5363616c61722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/sabjohnso/Scalar.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/sabjohnso/Scalar.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/99a7f0934d686771410e9eabb16b201fd08d8cb6/687474703a2f2f636f6465636f762e696f2f6769746875622f7361626a6f686e736f2f5363616c61722e6a6c2f636f6e7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/sabjohnso/Scalar.jl/converage.svg?branch=master" style="max-width:100%;"></a></p>
<p><code>Scalar</code> is a <a href="http://julialang.org" rel="nofollow">Julia</a> package to facilitate the generation of scalar types.  Primarily,Scalar defines an abstract type, <code>AbstractScalar</code>, and a number of methods overloaded for that for its subtypes.  The list of overloaded methods includes the following: <code>size</code>, <code>eltype</code>, <code>ndims</code>, <code>length</code>, <code>endof</code>, <code>getindex</code>, <code>first</code>, <code>last</code>, <code>start</code>, <code>next</code>, <code>done</code>, <code>isempty</code>, <code>map</code>, <code>filter</code>.  These methods are a subset of the methods defined for the abstract type <code>Number</code>, where those methods that imply a numerical nature of the subtypes are excluded.  Additionally, the method <code>filter</code> is included here, where it was not specifically defined for <code>Number</code>.</p>
<p>Dual licensing (GPLv3, alternate commercial) - See LICENSE.md</p>
<p><strong>Installation</strong>: <code>julia&gt; Pkg.clone( "https://github.com/sabjohnso/Scalar.jl" )</code></p>
<h3><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Getting Started</h3>
<p>To define a new scalar type:</p>
<div class="highlight highlight-source-julia"><pre>type MyScalar <span class="pl-k">&lt;:</span> <span class="pl-c1">AbstractScalar</span>
<span class="pl-k">end</span>

<span class="pl-k">using</span> Base<span class="pl-k">.</span>Test
a <span class="pl-k">=</span> <span class="pl-c1">MyScalar</span>()
<span class="pl-c1">@test</span> <span class="pl-c1">length</span>( a ) <span class="pl-k">==</span> <span class="pl-c1">1</span>
<span class="pl-c1">@test</span> <span class="pl-c1">size</span>( a ) <span class="pl-k">==</span> ()
<span class="pl-c1">@test</span> <span class="pl-c1">map</span>( identity, a ) <span class="pl-k">==</span> a
<span class="pl-c1">@test</span> <span class="pl-c1">filter</span>( x<span class="pl-k">-&gt;</span><span class="pl-c1">isa</span>( x, MyScalar ), a ) <span class="pl-k">==</span> a
<span class="pl-c1">@test</span> <span class="pl-c1">filter</span>( x<span class="pl-k">-&gt;</span><span class="pl-k">!</span> <span class="pl-c1">isa</span>( x, MyScalar ) <span class="pl-k">==</span> <span class="pl-c1">nothing</span></pre></div>
</article></div>