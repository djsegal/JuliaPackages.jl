<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-pajaritojl" class="anchor" aria-hidden="true" href="#pajaritojl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Pajarito.jl</h1>
<p dir="auto"><a href="https://github.com/jump-dev/Pajarito.jl/actions?query=workflow%3ACI"><img src="https://github.com/jump-dev/Pajarito.jl/workflows/CI/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/jump-dev/Pajarito.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3d3543b536a01bdff3dd61e10d44f2d8e2527445816eb6e3a621b71ac1715295/68747470733a2f2f636f6465636f762e696f2f67682f6a756d702d6465762f50616a617269746f2e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/jump-dev/Pajarito.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Pajarito is a <strong>mixed-integer convex programming</strong> (MICP) solver package written
in <a href="http://julialang.org/" rel="nofollow">Julia</a>.</p>
<p dir="auto">MICP problems are convex except for restrictions that some variables take binary
or integer values.</p>
<p dir="auto">Pajarito solves MICP problems in conic form, by constructing sequential
polyhedral outer approximations of the conic feasible set.</p>
<p dir="auto">The underlying algorithm has theoretical finite-time convergence under
reasonable assumptions.</p>
<p dir="auto">Pajarito accesses state-of-the-art MILP solvers and continuous conic solvers
through <a href="https://github.com/jump-dev/MathOptInterface.jl">MathOptInterface</a>.</p>
<h2 dir="auto"><a id="user-content-pavito" class="anchor" aria-hidden="true" href="#pavito"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Pavito</h2>
<p dir="auto">For algorithms that use a derivative-based nonlinear programming (NLP) solver
(for example, Ipopt) instead of a conic solver, use <a href="https://github.com/jump-dev/Pavito.jl">Pavito</a>.</p>
<p dir="auto">Pavito is a convex mixed-integer nonlinear programming (convex MINLP) solver.
Because Pavito relies on gradient cuts, it can fail near points of
non-differentiability. Pajarito may be more robust than Pavito on non-smooth
problems.</p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto"><code>Pajarito.jl</code> is licensed under the <a href="https://github.com/jump-dev/Pajarito.jl/blob/master/LICENSE.md">MPL 2.0 license</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Install Pajarito using <code>Pkg.add</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import Pkg
Pkg.add(&quot;Pajarito&quot;)"><pre><span class="pl-k">import</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Pajarito<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-mip-and-continuous-solvers" class="anchor" aria-hidden="true" href="#mip-and-continuous-solvers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MIP and continuous solvers</h2>
<p dir="auto">The algorithm implemented by Pajarito itself is relatively simple, and most of
the hard work is performed by the MIP outer approximation (OA) solver and the
continuous conic solver.</p>
<p dir="auto">Therefore, in addition to installing Pajarito, you must also install a
mixed-integer linear programming solver and a continuous conic solver.</p>
<p dir="auto"><strong>The performance of Pajarito depends on these two types of solvers.</strong></p>
<p dir="auto">The OA solver (typically a mixed-integer linear solver) is specified by the
<code>oa_solver</code> option. You must first load the Julia package that provides this
solver, for example, <code>using Gurobi</code>. The continuous conic solver is specified by
the <code>conic_solver</code> option.</p>
<p dir="auto">See JuMP's <a href="https://jump.dev/JuMP.jl/stable/installation/#Supported-solvers" rel="nofollow">list of supported solvers</a>.</p>
<h2 dir="auto"><a id="user-content-use-with-jump" class="anchor" aria-hidden="true" href="#use-with-jump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Use with JuMP</h2>
<p dir="auto">To use Pajarito with JuMP, use:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JuMP, Pajarito, HiGHS, Hypatia
model = Model(
    optimizer_with_attributes(
        Pajarito.Optimizer,
        &quot;oa_solver&quot; =&gt; optimizer_with_attributes(
            HiGHS.Optimizer,
            MOI.Silent() =&gt; true,
            &quot;mip_feasibility_tolerance&quot; =&gt; 1e-8,
            &quot;mip_rel_gap&quot; =&gt; 1e-6,
        ),
        &quot;conic_solver&quot; =&gt;
            optimizer_with_attributes(Hypatia.Optimizer, MOI.Silent() =&gt; true),
    )
)
set_attribute(model, &quot;time_limit&quot;, 60)"><pre><span class="pl-k">using</span> JuMP, Pajarito, HiGHS, Hypatia
model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(
    <span class="pl-c1">optimizer_with_attributes</span>(
        Pajarito<span class="pl-k">.</span>Optimizer,
        <span class="pl-s"><span class="pl-pds">"</span>oa_solver<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">optimizer_with_attributes</span>(
            HiGHS<span class="pl-k">.</span>Optimizer,
            MOI<span class="pl-k">.</span><span class="pl-c1">Silent</span>() <span class="pl-k">=&gt;</span> <span class="pl-c1">true</span>,
            <span class="pl-s"><span class="pl-pds">"</span>mip_feasibility_tolerance<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1e-8</span>,
            <span class="pl-s"><span class="pl-pds">"</span>mip_rel_gap<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1e-6</span>,
        ),
        <span class="pl-s"><span class="pl-pds">"</span>conic_solver<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span>
            <span class="pl-c1">optimizer_with_attributes</span>(Hypatia<span class="pl-k">.</span>Optimizer, MOI<span class="pl-k">.</span><span class="pl-c1">Silent</span>() <span class="pl-k">=&gt;</span> <span class="pl-c1">true</span>),
    )
)
<span class="pl-c1">set_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>time_limit<span class="pl-pds">"</span></span>, <span class="pl-c1">60</span>)</pre></div>
<h2 dir="auto"><a id="user-content-options" class="anchor" aria-hidden="true" href="#options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Options</h2>
<p dir="auto">We list Pajarito's options below.</p>
<ul dir="auto">
<li><code>verbose::Bool</code> toggles printing</li>
<li><code>tol_feas::Float64</code> is the feasibility tolerance for conic constraints</li>
<li><code>tol_rel_gap::Float64</code> is the relative optimality gap tolerance</li>
<li><code>tol_abs_gap::Float64</code> is the absolute optimality gap tolerance</li>
<li><code>time_limit::Float64</code> sets the time limit (in seconds)</li>
<li><code>iteration_limit::Int</code> sets the iteration limit (for the iterative method)</li>
<li><code>use_iterative_method::Union{Nothing,Bool}</code> toggles the iterative algorithm;
if <code>nothing</code> is specified, Pajarito defaults to the OA-solver-driven (single
tree) algorithm if lazy callbacks are supported by the OA solver</li>
<li><code>use_extended_form::Bool</code> toggles the use of extended formulations for the
second-order cone</li>
<li><code>solve_relaxation::Bool</code> toggles solution of the continuous conic relaxation</li>
<li><code>solve_subproblems::Bool</code> toggles solution of the continuous conic subproblems</li>
<li><code>use_init_fixed_oa::Bool</code> toggles initial fixed OA cuts</li>
<li><code>oa_solver::Union{Nothing,MOI.OptimizerWithAttributes}</code> is the OA solver</li>
<li><code>conic_solver::Union{Nothing,MOI.OptimizerWithAttributes}</code> is the conic solver</li>
</ul>
<p dir="auto"><strong>Pajarito may require tuning of parameters to improve convergence.</strong></p>
<p dir="auto">For example, it often helps to tighten the OA solver's integrality tolerance.
OA solver and conic solver options must be specified directly to those solvers.</p>
<p dir="auto">Note: if <code>solve_subproblems</code> is true, Pajarito usually returns a solution
constructed from one of the conic solver's feasible solutions; since the conic
solver is not subject to the same feasibility tolerances as the OA solver,
Pajarito's solution will not necessarily satisfy <code>tol_feas</code>.</p>
<h2 dir="auto"><a id="user-content-cone-interface" class="anchor" aria-hidden="true" href="#cone-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Cone interface</h2>
<p dir="auto">Pajarito has a generic cone interface (see the <a href="https://github.com/jump-dev/Pajarito.jl/tree/main/src/Cones">cones folder</a>
that allows the user to add support for new convex cones.</p>
<p dir="auto">To illustrate, in the experimental package <a href="https://github.com/chriscoey/PajaritoExtras.jl">PajaritoExtras</a>
we have extended Pajarito by adding support for several cones recognized by
<a href="https://github.com/chriscoey/Hypatia.jl">Hypatia.jl</a> (a continuous conic solver
with its own generic cone interface).</p>
<p dir="auto">The examples folder of PajaritoExtras also contains many applied mixed-integer
convex problems that are solved using Pajarito.</p>
<h2 dir="auto"><a id="user-content-bug-reports-and-support" class="anchor" aria-hidden="true" href="#bug-reports-and-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bug reports and support</h2>
<p dir="auto">Please report any issues via the GitHub
<a href="https://github.com/jump-dev/Pajarito.jl/issues">issue tracker</a>.</p>
<p dir="auto">All types of issues are welcome and encouraged; this includes bug reports,
documentation typos, and feature requests. The <a href="https://discourse.julialang.org/c/domain/opt" rel="nofollow">Optimization (Mathematical)</a>
category on Discourse is appropriate for general discussion.</p>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<p dir="auto">If you find Pajarito useful in your work, we kindly request that you cite the
following paper (<a href="http://arxiv.org/abs/1808.05290" rel="nofollow">arXiv preprint</a>), which is
recommended reading for advanced users:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@article{CoeyLubinVielma2020,
    title={Outer approximation with conic certificates for mixed-integer convex problems},
    author={Coey, Chris and Lubin, Miles and Vielma, Juan Pablo},
    journal={Mathematical Programming Computation},
    volume={12},
    number={2},
    pages={249--293},
    year={2020},
    publisher={Springer}
}"><pre class="notranslate"><code>@article{CoeyLubinVielma2020,
    title={Outer approximation with conic certificates for mixed-integer convex problems},
    author={Coey, Chris and Lubin, Miles and Vielma, Juan Pablo},
    journal={Mathematical Programming Computation},
    volume={12},
    number={2},
    pages={249--293},
    year={2020},
    publisher={Springer}
}
</code></pre></div>
<p dir="auto">Note this paper describes a legacy MathProgBase version of Pajarito, which is
available on the <a href="https://github.com/jump-dev/Pajarito.jl/tree/mathprogbase"><code>mathprogbase</code> branch</a>
of this repository. Starting with version v0.8.0, Pajarito supports
MathOptInterface instead of MathProgBase.</p>
</article></div>