<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h2><a id="user-content-finitestatemachine" class="anchor" aria-hidden="true" href="#finitestatemachine"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>FiniteStateMachine</h2>
<p><a href="https://travis-ci.org/tinybike/FiniteStateMachine.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/94b2fc9e07a79f60e56089a3ffdf0160e647d112/68747470733a2f2f7472617669732d63692e6f72672f74696e7962696b652f46696e69746553746174654d616368696e652e6a6c2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/tinybike/FiniteStateMachine.jl.svg" style="max-width:100%;"></a> <a href="https://coveralls.io/github/tinybike/FiniteStateMachine.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/929f749619a58f5e1be86a469028c66f97ca0758/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f74696e7962696b652f46696e69746553746174654d616368696e652e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/tinybike/FiniteStateMachine.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a> <a href="http://pkg.julialang.org/?pkg=FiniteStateMachine" rel="nofollow"><img src="https://camo.githubusercontent.com/28bfbcf85c3eec99618db44728eb5857f5da57e2/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f46696e69746553746174654d616368696e655f302e342e737667" alt="FiniteStateMachine" data-canonical-src="http://pkg.julialang.org/badges/FiniteStateMachine_0.4.svg" style="max-width:100%;"></a> <a href="http://pkg.julialang.org/?pkg=FiniteStateMachine" rel="nofollow"><img src="https://camo.githubusercontent.com/c4656c020d92b99f8fa78c3007f03a1ce6e95b08/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f46696e69746553746174654d616368696e655f302e352e737667" alt="FiniteStateMachine" data-canonical-src="http://pkg.julialang.org/badges/FiniteStateMachine_0.5.svg" style="max-width:100%;"></a></p>
<p>A simple finite state machine library for Julia, based on Jake Gordon's <a href="https://github.com/jakesgordon/javascript-state-machine">javascript-state-machine</a>.</p>
<h3><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h3>
<pre><code>julia&gt; Pkg.add("FiniteStateMachine")
</code></pre>
<h3><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h3>
<p><code>StateMachine</code> objects are set up using the <code>state_machine</code> function, which takes a "model" describing your state machine's layout as input.</p>
<pre><code>julia&gt; using FiniteStateMachine

julia&gt; fsm = state_machine({
    "initial" =&gt; "first",
    "final" =&gt; "fourth",
    "events" =&gt; [{
            "name" =&gt; "hop",
            "from" =&gt; "first",
            "to" =&gt; "second",
        }, {
            "name" =&gt; "skip",
            "from" =&gt; "second",
            "to" =&gt; "third",
        }, {
            "name" =&gt; "jump",
            "from" =&gt; "third",
            "to" =&gt; "fourth",
        },
    ],
    "callbacks" =&gt; {
        "onbeforeevent" =&gt; (fsm::StateMachine, args...) -&gt; 1+1,
    },
})
</code></pre>
<p>Events are called using the <code>fire</code> function:</p>
<pre><code>julia&gt; fsm.current
"first"

julia&gt; fire(fsm, "hop")

julia&gt; fsm.current
"second"

julia&gt; fire(fsm, "skip")

julia&gt; fsm.current
"third"

julia&gt; fire(fsm, "jump")

julia&gt; fsm.current
"fourth"

julia&gt; fire(fsm, "finished")
true
</code></pre>
<p>Unless other specified, a special "startup" event fires automatically when the state machine is created.</p>
<p>The "initial" field can be either a string, or a dict specifying: <code>state</code> (the name of the state in which to start), <code>event</code> (the startup event), and/or <code>defer</code> (set to <code>true</code> if the startup event should <em>not</em> be fired automatically when the state machine is created).</p>
<p>Supports multiple source states, for example, the following code allows "hop" to take place from either the "first" or "third" states:</p>
<pre><code>"events" =&gt; [{
    "name" =&gt; "hop",
    "from" =&gt; ["first", "third"],
    "to" =&gt; "second",
},
</code></pre>
<h3><a id="user-content-tests" class="anchor" aria-hidden="true" href="#tests"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Tests</h3>
<p>Unit tests are located in <code>test/</code>.  To run the tests:</p>
<pre><code>$ julia test/runtests.jl
</code></pre>
</article></div>