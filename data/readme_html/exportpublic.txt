<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-exportpublicjl-easily-hide-your-implementation-details" class="anchor" aria-hidden="true" href="#exportpublicjl-easily-hide-your-implementation-details"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ExportPublic.jl: Easily hide your implementation details</h1>
<p dir="auto">This is a fork of <a href="https://github.com/JKRT/ExportAll.jl/"><code>ExportAll.jl</code></a>
that helps you write modules with public and private symbols.</p>
<p dir="auto">If something starts with an underscore <code>_</code>, it will <strong>not</strong> be exported.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="module SimpleMathExample
  using ExportPublic

  _secret_pi = 22/7                         # Private
  my_pi = _secret_pi                        # Public

  function add_squared(a::Int, b::Int)      # Public
    _squared(a) + _squared(b)
  end

  function _squared(a::Int)                 # Private
    a ^ 2
  end

  @exportPublic()                           # &lt;--- Export our Public symbols
end"><pre><span class="pl-k">module</span> SimpleMathExample
  <span class="pl-k">using</span> ExportPublic

  _secret_pi <span class="pl-k">=</span> <span class="pl-c1">22</span><span class="pl-k">/</span><span class="pl-c1">7</span>                         <span class="pl-c"><span class="pl-c">#</span> Private</span>
  my_pi <span class="pl-k">=</span> _secret_pi                        <span class="pl-c"><span class="pl-c">#</span> Public</span>

  <span class="pl-k">function</span> <span class="pl-en">add_squared</span>(a<span class="pl-k">::</span><span class="pl-c1">Int</span>, b<span class="pl-k">::</span><span class="pl-c1">Int</span>)      <span class="pl-c"><span class="pl-c">#</span> Public</span>
    <span class="pl-c1">_squared</span>(a) <span class="pl-k">+</span> <span class="pl-c1">_squared</span>(b)
  <span class="pl-k">end</span>

  <span class="pl-k">function</span> <span class="pl-en">_squared</span>(a<span class="pl-k">::</span><span class="pl-c1">Int</span>)                 <span class="pl-c"><span class="pl-c">#</span> Private</span>
    a <span class="pl-k">^</span> <span class="pl-c1">2</span>
  <span class="pl-k">end</span>

  <span class="pl-c1">@exportPublic</span>()                           <span class="pl-c"><span class="pl-c">#</span> &lt;--- Export our Public symbols</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">The "<em>Public</em>" symbols are automatically exported:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; include(&quot;SimpleMathExample.jl&quot;)
julia&gt; using .SimpleMathExample
julia&gt; add_squared(5, 5)
50
julia&gt; my_pi
3.142857142857143
julia&gt; _secret_pi
ERROR: UndefVarError: _secret_pi not defined
julia&gt; _squared(5)
ERROR: UndefVarError: _squared not defined"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span>SimpleMathExample.jl<span class="pl-pds">"</span></span>)
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> <span class="pl-k">.</span>SimpleMathExample
julia<span class="pl-k">&gt;</span> <span class="pl-c1">add_squared</span>(<span class="pl-c1">5</span>, <span class="pl-c1">5</span>)
<span class="pl-c1">50</span>
julia<span class="pl-k">&gt;</span> my_pi
<span class="pl-c1">3.142857142857143</span>
julia<span class="pl-k">&gt;</span> _secret_pi
ERROR<span class="pl-k">:</span> UndefVarError<span class="pl-k">:</span> _secret_pi not defined
julia<span class="pl-k">&gt;</span> <span class="pl-c1">_squared</span>(<span class="pl-c1">5</span>)
ERROR<span class="pl-k">:</span> UndefVarError<span class="pl-k">:</span> _squared not defined</pre></div>
</article></div>