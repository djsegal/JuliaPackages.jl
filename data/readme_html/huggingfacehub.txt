<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content--huggingfacehubjl" class="anchor" aria-hidden="true" href="#-huggingfacehubjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><g-emoji class="g-emoji" alias="hugs" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f917.png">ðŸ¤—</g-emoji> HuggingFaceHub.jl</h1>
<p dir="auto">A Julia package to interact with the <a href="https://huggingface.co/" rel="nofollow">Hugging Face Hub</a>.</p>
<ul dir="auto">
<li>Search for repos (models, datasets and spaces).</li>
<li>Get repo metadata.</li>
<li>Download and upload files.</li>
<li>Supports private repos.</li>
<li>Call the Inference API to easily make model predictions.</li>
</ul>
<h2 dir="auto"><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; add HuggingFaceHub"><pre lang="julia-repl" class="notranslate"><code>pkg&gt; add HuggingFaceHub
</code></pre></div>
<h2 dir="auto"><a id="user-content-tutorial" class="anchor" aria-hidden="true" href="#tutorial"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tutorial</h2>
<p dir="auto">HuggingFaceHub does not export any functions, so it is convenient to import it as <code>HF</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import HuggingFaceHub as HF"><pre><span class="pl-k">import</span> HuggingFaceHub <span class="pl-k">as</span> HF</pre></div>
<p dir="auto">Here we search for models called 'distilbert', taking the top 5 by number of downloads.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="models = HF.search(HF.Model, search=&quot;distilbert&quot;, sort=&quot;downloads&quot;, direction=-1, limit=5)"><pre>models <span class="pl-k">=</span> HF<span class="pl-k">.</span><span class="pl-c1">search</span>(HF<span class="pl-k">.</span>Model, search<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>distilbert<span class="pl-pds">"</span></span>, sort<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>downloads<span class="pl-pds">"</span></span>, direction<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>, limit<span class="pl-k">=</span><span class="pl-c1">5</span>)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="5-element Vector{HuggingFaceHub.Model}:
 &quot;distilbert-base-uncased-finetuned-sst-2-english&quot;
 &quot;distilbert-base-uncased&quot;
 &quot;distilbert-base-multilingual-cased&quot;
 &quot;distilbert-base-cased-distilled-squad&quot;
 &quot;sentence-transformers/msmarco-distilbert-base-v4&quot;"><pre class="notranslate"><code>5-element Vector{HuggingFaceHub.Model}:
 "distilbert-base-uncased-finetuned-sst-2-english"
 "distilbert-base-uncased"
 "distilbert-base-multilingual-cased"
 "distilbert-base-cased-distilled-squad"
 "sentence-transformers/msmarco-distilbert-base-v4"
</code></pre></div>
<p dir="auto">Now we select a single model from the list, which displays some more information.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="model = models[2]"><pre>model <span class="pl-k">=</span> models[<span class="pl-c1">2</span>]</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="HuggingFaceHub.Model:
  id = &quot;distilbert-base-uncased&quot;
  private = false
  pipeline_tag = &quot;fill-mask&quot;"><pre class="notranslate"><code>HuggingFaceHub.Model:
  id = "distilbert-base-uncased"
  private = false
  pipeline_tag = "fill-mask"
</code></pre></div>
<p dir="auto">Models returned from searching do not contain much information. The <code>info</code> function gets all
the information.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="model = HF.info(model)"><pre>model <span class="pl-k">=</span> HF<span class="pl-k">.</span><span class="pl-c1">info</span>(model)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="HuggingFaceHub.Model:
  id = &quot;distilbert-base-uncased&quot;
  sha = &quot;043235d6088ecd3dd5fb5ca3592b6913fd516027&quot;
  revision = &quot;main&quot;
  lastModified = Dates.DateTime(&quot;2022-05-31T19:08:36&quot;)
  private = false
  files = [&quot;.gitattributes&quot;, &quot;LICENSE&quot;, &quot;README.md&quot;, &quot;config.json&quot;, &quot;flax_model.msgpack&quot;, &quot;pytorch_model.bin&quot;, &quot;rust_model.ot&quot;, &quot;tf_model.h5&quot;, &quot;tokenizer.json&quot;, &quot;tokenizer_config.json&quot;, &quot;vocab.txt&quot;]
  pipeline_tag = &quot;fill-mask&quot;
  tags = [&quot;pytorch&quot;, &quot;tf&quot;, &quot;jax&quot;, &quot;rust&quot;, &quot;distilbert&quot;, &quot;fill-mask&quot;, &quot;en&quot;, &quot;dataset:bookcorpus&quot;, &quot;dataset:wikipedia&quot;, &quot;arxiv:1910.01108&quot;, &quot;transformers&quot;, &quot;exbert&quot;, &quot;license:apache-2.0&quot;, &quot;autotrain_compatible&quot;, &quot;infinity_compatible&quot;]
  downloads = 7214355
  library_name = &quot;transformers&quot;
  mask_token = &quot;[MASK]&quot;
  likes = 64
  config = Dict{String, Any}(&quot;model_type&quot; =&gt; &quot;distilbert&quot;, &quot;architectures&quot; =&gt; Any[&quot;DistilBertForMaskedLM&quot;])
  cardData = Dict{String, Any}(&quot;language&quot; =&gt; &quot;en&quot;, &quot;tags&quot; =&gt; Any[&quot;exbert&quot;], &quot;license&quot; =&gt; &quot;apache-2.0&quot;, &quot;datasets&quot; =&gt; Any[&quot;bookcorpus&quot;, &quot;wikipedia&quot;])
  transformersInfo = Dict{String, Any}(&quot;pipeline_tag&quot; =&gt; &quot;fill-mask&quot;, &quot;processor&quot; =&gt; &quot;AutoTokenizer&quot;, &quot;auto_model&quot; =&gt; &quot;AutoModelForMaskedLM&quot;)"><pre class="notranslate"><code>HuggingFaceHub.Model:
  id = "distilbert-base-uncased"
  sha = "043235d6088ecd3dd5fb5ca3592b6913fd516027"
  revision = "main"
  lastModified = Dates.DateTime("2022-05-31T19:08:36")
  private = false
  files = [".gitattributes", "LICENSE", "README.md", "config.json", "flax_model.msgpack", "pytorch_model.bin", "rust_model.ot", "tf_model.h5", "tokenizer.json", "tokenizer_config.json", "vocab.txt"]
  pipeline_tag = "fill-mask"
  tags = ["pytorch", "tf", "jax", "rust", "distilbert", "fill-mask", "en", "dataset:bookcorpus", "dataset:wikipedia", "arxiv:1910.01108", "transformers", "exbert", "license:apache-2.0", "autotrain_compatible", "infinity_compatible"]
  downloads = 7214355
  library_name = "transformers"
  mask_token = "[MASK]"
  likes = 64
  config = Dict{String, Any}("model_type" =&gt; "distilbert", "architectures" =&gt; Any["DistilBertForMaskedLM"])
  cardData = Dict{String, Any}("language" =&gt; "en", "tags" =&gt; Any["exbert"], "license" =&gt; "apache-2.0", "datasets" =&gt; Any["bookcorpus", "wikipedia"])
  transformersInfo = Dict{String, Any}("pipeline_tag" =&gt; "fill-mask", "processor" =&gt; "AutoTokenizer", "auto_model" =&gt; "AutoModelForMaskedLM")
</code></pre></div>
<p dir="auto">We see in <code>model.files</code> that there is a <code>config.json</code> file. Let's download it and take a
look.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="HF.file_download(model, &quot;config.json&quot;) |&gt; read |&gt; String |&gt; print"><pre>HF<span class="pl-k">.</span><span class="pl-c1">file_download</span>(model, <span class="pl-s"><span class="pl-pds">"</span>config.json<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> read <span class="pl-k">|&gt;</span> String <span class="pl-k">|&gt;</span> print</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="{
  &quot;activation&quot;: &quot;gelu&quot;,
  &quot;architectures&quot;: [
    &quot;DistilBertForMaskedLM&quot;
  ],
  &quot;attention_dropout&quot;: 0.1,
  &quot;dim&quot;: 768,
  &quot;dropout&quot;: 0.1,
  &quot;hidden_dim&quot;: 3072,
  &quot;initializer_range&quot;: 0.02,
  &quot;max_position_embeddings&quot;: 512,
  &quot;model_type&quot;: &quot;distilbert&quot;,
  &quot;n_heads&quot;: 12,
  &quot;n_layers&quot;: 6,
  &quot;pad_token_id&quot;: 0,
  &quot;qa_dropout&quot;: 0.1,
  &quot;seq_classif_dropout&quot;: 0.2,
  &quot;sinusoidal_pos_embds&quot;: false,
  &quot;tie_weights_&quot;: true,
  &quot;transformers_version&quot;: &quot;4.10.0.dev0&quot;,
  &quot;vocab_size&quot;: 30522
}"><pre class="notranslate"><code>{
  "activation": "gelu",
  "architectures": [
    "DistilBertForMaskedLM"
  ],
  "attention_dropout": 0.1,
  "dim": 768,
  "dropout": 0.1,
  "hidden_dim": 3072,
  "initializer_range": 0.02,
  "max_position_embeddings": 512,
  "model_type": "distilbert",
  "n_heads": 12,
  "n_layers": 6,
  "pad_token_id": 0,
  "qa_dropout": 0.1,
  "seq_classif_dropout": 0.2,
  "sinusoidal_pos_embds": false,
  "tie_weights_": true,
  "transformers_version": "4.10.0.dev0",
  "vocab_size": 30522
}
</code></pre></div>
<p dir="auto">Now let's use the Hugging Face Inference API to make some predictions. We see from
<code>model.pipeline_tag</code> that this model is for the Fill Mask task, and we see from
<code>model.mask_token</code> that <code>[MASK]</code> is the mask token.</p>
<p dir="auto">If this step doesn't work, you probably need to authenticate yourself. See the Tokens
section below.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="HF.infer(model, &quot;The meaning of life is [MASK].&quot;)"><pre>HF<span class="pl-k">.</span><span class="pl-c1">infer</span>(model, <span class="pl-s"><span class="pl-pds">"</span>The meaning of life is [MASK].<span class="pl-pds">"</span></span>)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="5-element Vector{NamedTuple{(:score, :sequence, :token, :token_str), Tuple{Float64, String, Int64, String}}}:
 (score = 0.3163859248161316, sequence = &quot;the meaning of life is unknown.&quot;, token = 4242, token_str = &quot;unknown&quot;)
 (score = 0.07957715541124344, sequence = &quot;the meaning of life is unclear.&quot;, token = 10599, token_str = &quot;unclear&quot;)
 (score = 0.03341785818338394, sequence = &quot;the meaning of life is uncertain.&quot;, token = 9662, token_str = &quot;uncertain&quot;)
 (score = 0.03218647092580795, sequence = &quot;the meaning of life is ambiguous.&quot;, token = 20080, token_str = &quot;ambiguous&quot;)
 (score = 0.02055794931948185, sequence = &quot;the meaning of life is simple.&quot;, token = 3722, token_str = &quot;simple&quot;)"><pre class="notranslate"><code>5-element Vector{NamedTuple{(:score, :sequence, :token, :token_str), Tuple{Float64, String, Int64, String}}}:
 (score = 0.3163859248161316, sequence = "the meaning of life is unknown.", token = 4242, token_str = "unknown")
 (score = 0.07957715541124344, sequence = "the meaning of life is unclear.", token = 10599, token_str = "unclear")
 (score = 0.03341785818338394, sequence = "the meaning of life is uncertain.", token = 9662, token_str = "uncertain")
 (score = 0.03218647092580795, sequence = "the meaning of life is ambiguous.", token = 20080, token_str = "ambiguous")
 (score = 0.02055794931948185, sequence = "the meaning of life is simple.", token = 3722, token_str = "simple")
</code></pre></div>
<h2 dir="auto"><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>API</h2>
<p dir="auto">Read the docstrings for more information about each function.</p>
<h3 dir="auto"><a id="user-content-repositories" class="anchor" aria-hidden="true" href="#repositories"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Repositories</h3>
<ul dir="auto">
<li><code>Model()</code>: Type representing a model.</li>
<li><code>Dataset()</code>: Type representing a dataset.</li>
<li><code>Space()</code>: Type representing a space.</li>
<li><code>search(repotype)</code>: Search for repos of the given type.</li>
<li><code>info(repo)</code> or <code>info(repotype, id)</code>: Information about a repo.</li>
<li><code>create(repo)</code> or <code>create(repotype, id)</code>: Create a new repo.</li>
<li><code>delete(repo)</code> or <code>delete(repotype, id)</code>: Delete a repo.</li>
<li><code>update(repo)</code> or <code>update(repotype, id)</code>: Update metadata on a repo.</li>
<li><code>move(repo, dest)</code> or <code>move(repotype, id, dest)</code>: Move a repo.</li>
</ul>
<h3 dir="auto"><a id="user-content-other-metadata" class="anchor" aria-hidden="true" href="#other-metadata"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Other Metadata</h3>
<ul dir="auto">
<li><code>tags(repotype)</code>: Dict of groups of tags.</li>
<li><code>metrics()</code>: List of metrics.</li>
</ul>
<h3 dir="auto"><a id="user-content-files" class="anchor" aria-hidden="true" href="#files"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Files</h3>
<ul dir="auto">
<li><code>file_download(repo, path)</code>: Download a file from a repo, return its local path.</li>
<li><code>file_upload(repo, path, file)</code>: Upload a file to a repo.</li>
<li><code>file_delete(repo, path)</code>: Delete a file from a repo.</li>
</ul>
<h3 dir="auto"><a id="user-content-users--tokens" class="anchor" aria-hidden="true" href="#users--tokens"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Users / Tokens</h3>
<p dir="auto">Some operations, such as modifying a repo or accessing a private repo, require you to
authenticate yourself using a token.</p>
<p dir="auto">You can generate a token at <a href="https://huggingface.co/settings/tokens" rel="nofollow">Hugging Face settings</a>,
then copy it, call <code>token_prompt()</code> and paste the token. The token will be saved to disk so
you only need to do this once.</p>
<p dir="auto">Alternatively you can set the token in the environment variable <code>HUGGING_FACE_HUB_TOKEN</code>.</p>
<ul dir="auto">
<li><code>whoami()</code>: Get info about the current user.</li>
<li><code>token()</code>: Get the current token.</li>
<li><code>token_set(token)</code>: Set the token.</li>
<li><code>token_prompt()</code>: Set the token from a prompt.</li>
<li><code>token_file()</code>: The file where the token is saved.</li>
</ul>
<h3 dir="auto"><a id="user-content-clients" class="anchor" aria-hidden="true" href="#clients"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Clients</h3>
<p dir="auto">A client controls things like the URL of the Hugging Face REST API and the token to
authenticate with.</p>
<p dir="auto">There is a global default client, which is suitable for most users. But you may also create
new clients and pass them as the <code>client</code> keyword argument to most other functions.</p>
<ul dir="auto">
<li><code>client()</code>: Get the default client.</li>
<li><code>Client()</code>: Construct a new client.</li>
</ul>
<h3 dir="auto"><a id="user-content-inference-api" class="anchor" aria-hidden="true" href="#inference-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Inference API</h3>
<p dir="auto">Refer to <a href="https://huggingface.co/docs/api-inference/detailed_parameters" rel="nofollow">the Inference API documentation</a>
for details about inputs and parameters.</p>
<ul dir="auto">
<li><code>infer(model, inputs)</code>: Call the Inference API, return the inference results.</li>
</ul>
</article></div>