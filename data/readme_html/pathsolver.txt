<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><strong>PATHSolver.jl was completely re-written between v0.6 and v1.0. It now uses PATH
v5.0 binaries, and integrates directly into JuMP. At this point, PATHSolver.jl only supports modeling linear problems. For nonlinear problems, use <a href="https://github.com/chkwon/Complementarity.jl">Complementarity.jl</a>.</strong></p>
<p><strong>To revert to the old API, use:</strong></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="import Pkg
Pkg.add(Pkg.PackageSpec(name = &quot;PATHSolver&quot;, version = v&quot;0.6.2&quot;))
"><pre><span class="pl-k">import</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(Pkg<span class="pl-k">.</span><span class="pl-c1">PackageSpec</span>(name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>PATHSolver<span class="pl-pds">"</span></span>, version <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">v</span>"</span>0.6.2<span class="pl-pds">"</span></span>))</pre></div>
<p><strong>Then restart Julia for the change to take effect. The old documentation and
source code is available <a href="https://github.com/chkwon/PATHSolver.jl/tree/path-solver-v0">on the <code>path-solver-v0</code> branch</a>.</strong></p>
<h1><a id="user-content-pathsolverjl" class="anchor" aria-hidden="true" href="#pathsolverjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>PATHSolver.jl</h1>
<p>A Julia interface to the <a href="http://pages.cs.wisc.edu/~ferris/path.html" rel="nofollow">PATH solver</a>.</p>
<p><a href="https://github.com/chkwon/PATHSolver.jl/actions?query=workflow%3ACI"><img src="https://github.com/chkwon/PATHSolver.jl/workflows/CI/badge.svg?branch=master" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/chkwon/PATHSolver.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ae896248e2e51dd5bd2e3ef89718744bef97da18e153fa7d60e342f1bb5397f8/68747470733a2f2f636f6465636f762e696f2f67682f63686b776f6e2f50415448536f6c7665722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/chkwon/PATHSolver.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Install <code>PATHSolver.jl</code> as follows:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="import Pkg; Pkg.add(&quot;PATHSolver&quot;)
"><pre><span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>PATHSolver<span class="pl-pds">"</span></span>)</pre></div>
<p>By default, <code>PATHSolver.jl</code> will download a copy of the underlying PATH solver.
To use a different version of PATH, see the Manual Installation section below.</p>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p>Without a license, the PATH Solver can solve problem instances up to with up
to 300 variables and 2000 non-zeros. For larger problems,
<a href="http://pages.cs.wisc.edu/~ferris/path/julia/LICENSE" rel="nofollow">this web page</a> provides a
temporary license that is valid for a year.</p>
<p>You can either store the license in the <code>PATH_LICENSE_STRING</code> environment
variable, or you can use the <code>PATHSolver.c_api_License_SetString</code> function
immediately after importing the <code>PATHSolver</code> package:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using PATHSolver
PATHSolver.c_api_License_SetString(&quot;&lt;LICENSE STRING&gt;&quot;)
"><pre><span class="pl-k">using</span> PATHSolver
PATHSolver<span class="pl-k">.</span><span class="pl-c1">c_api_License_SetString</span>(<span class="pl-s"><span class="pl-pds">"</span>&lt;LICENSE STRING&gt;<span class="pl-pds">"</span></span>)</pre></div>
<p>where <code>&lt;LICENSE STRING&gt;</code> is replaced by the current license string.</p>
<h2><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example usage</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using JuMP, PATHSolver

julia&gt; M = [
           0  0 -1 -1
           0  0  1 -2
           1 -1  2 -2
           1  2 -2  4
       ]
4×4 Array{Int64,2}:
 0   0  -1  -1
 0   0   1  -2
 1  -1   2  -2
 1   2  -2   4

julia&gt; q = [2, 2, -2, -6]
4-element Array{Int64,1}:
  2
  2
 -2
 -6

julia&gt; model = Model(PATHSolver.Optimizer)
A JuMP Model
Feasibility problem with:
Variables: 0
Model mode: AUTOMATIC
CachingOptimizer state: EMPTY_OPTIMIZER
Solver name: Path 5.0.00

julia&gt; set_optimizer_attribute(model, &quot;output&quot;, &quot;no&quot;)

julia&gt; @variable(model, x[1:4] &gt;= 0)
4-element Array{VariableRef,1}:
 x[1]
 x[2]
 x[3]
 x[4]

julia&gt; @constraint(model, M * x .+ q ⟂ x)
[-x[3] - x[4] + 2, x[3] - 2 x[4] + 2, x[1] - x[2] + 2 x[3] - 2 x[4] - 2, x[1] + 2 x[2] - 2 x[3] + 4 x[4] - 6, x[1], x[2], x[3], x[4]] ∈ MOI.Complements(4)

julia&gt; optimize!(model)
Reading options file /var/folders/bg/dzq_hhvx1dxgy6gb5510pxj80000gn/T/tmpiSsCRO
Read of options file complete.

Path 5.0.00 (Mon Aug 19 10:57:18 2019)
Written by Todd Munson, Steven Dirkse, Youngdae Kim, and Michael Ferris

julia&gt; value.(x)
4-element Array{Float64,1}:
 2.8
 0.0
 0.7999999999999998
 1.2

julia&gt; termination_status(model)
LOCALLY_SOLVED::TerminationStatusCode = 4
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> JuMP, PATHSolver

julia<span class="pl-k">&gt;</span> M <span class="pl-k">=</span> [
           <span class="pl-c1">0</span>  <span class="pl-c1">0</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">-</span><span class="pl-c1">1</span>
           <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span> <span class="pl-k">-</span><span class="pl-c1">2</span>
           <span class="pl-c1">1</span> <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-c1">2</span> <span class="pl-k">-</span><span class="pl-c1">2</span>
           <span class="pl-c1">1</span>  <span class="pl-c1">2</span> <span class="pl-k">-</span><span class="pl-c1">2</span>  <span class="pl-c1">4</span>
       ]
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">4</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0</span>   <span class="pl-c1">0</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>
 <span class="pl-c1">0</span>   <span class="pl-c1">0</span>   <span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">2</span>
 <span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">2</span>  <span class="pl-k">-</span><span class="pl-c1">2</span>
 <span class="pl-c1">1</span>   <span class="pl-c1">2</span>  <span class="pl-k">-</span><span class="pl-c1">2</span>   <span class="pl-c1">4</span>

julia<span class="pl-k">&gt;</span> q <span class="pl-k">=</span> [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">6</span>]
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{Int64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
  <span class="pl-c1">2</span>
  <span class="pl-c1">2</span>
 <span class="pl-k">-</span><span class="pl-c1">2</span>
 <span class="pl-k">-</span><span class="pl-c1">6</span>

julia<span class="pl-k">&gt;</span> model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(PATHSolver<span class="pl-k">.</span>Optimizer)
A JuMP Model
Feasibility problem with<span class="pl-k">:</span>
Variables<span class="pl-k">:</span> <span class="pl-c1">0</span>
Model mode<span class="pl-k">:</span> AUTOMATIC
CachingOptimizer state<span class="pl-k">:</span> EMPTY_OPTIMIZER
Solver name<span class="pl-k">:</span> Path <span class="pl-c1">5.0</span>.<span class="pl-c1">00</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">set_optimizer_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>output<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>no<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@variable</span>(model, x[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">4</span>] <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>)
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{VariableRef,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 x[<span class="pl-c1">1</span>]
 x[<span class="pl-c1">2</span>]
 x[<span class="pl-c1">3</span>]
 x[<span class="pl-c1">4</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@constraint</span>(model, M <span class="pl-k">*</span> x <span class="pl-k">.+</span> q ⟂ x)
[<span class="pl-k">-</span>x[<span class="pl-c1">3</span>] <span class="pl-k">-</span> x[<span class="pl-c1">4</span>] <span class="pl-k">+</span> <span class="pl-c1">2</span>, x[<span class="pl-c1">3</span>] <span class="pl-k">-</span> <span class="pl-c1">2</span> x[<span class="pl-c1">4</span>] <span class="pl-k">+</span> <span class="pl-c1">2</span>, x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> x[<span class="pl-c1">2</span>] <span class="pl-k">+</span> <span class="pl-c1">2</span> x[<span class="pl-c1">3</span>] <span class="pl-k">-</span> <span class="pl-c1">2</span> x[<span class="pl-c1">4</span>] <span class="pl-k">-</span> <span class="pl-c1">2</span>, x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> <span class="pl-c1">2</span> x[<span class="pl-c1">2</span>] <span class="pl-k">-</span> <span class="pl-c1">2</span> x[<span class="pl-c1">3</span>] <span class="pl-k">+</span> <span class="pl-c1">4</span> x[<span class="pl-c1">4</span>] <span class="pl-k">-</span> <span class="pl-c1">6</span>, x[<span class="pl-c1">1</span>], x[<span class="pl-c1">2</span>], x[<span class="pl-c1">3</span>], x[<span class="pl-c1">4</span>]] <span class="pl-k">∈</span> MOI<span class="pl-k">.</span><span class="pl-c1">Complements</span>(<span class="pl-c1">4</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">optimize!</span>(model)
Reading options file <span class="pl-k">/</span>var<span class="pl-k">/</span>folders<span class="pl-k">/</span>bg<span class="pl-k">/</span>dzq_hhvx1dxgy6gb5510pxj80000gn<span class="pl-k">/</span>T<span class="pl-k">/</span>tmpiSsCRO
Read of options file complete.

Path <span class="pl-c1">5.0</span>.<span class="pl-c1">00</span> (Mon Aug <span class="pl-c1">19</span> <span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">57</span><span class="pl-k">:</span><span class="pl-c1">18</span> <span class="pl-c1">2019</span>)
Written by Todd Munson, Steven Dirkse, Youngdae Kim, and Michael Ferris

julia<span class="pl-k">&gt;</span> <span class="pl-c1">value</span>.(x)
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">2.8</span>
 <span class="pl-c1">0.0</span>
 <span class="pl-c1">0.7999999999999998</span>
 <span class="pl-c1">1.2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">termination_status</span>(model)
LOCALLY_SOLVED<span class="pl-k">::</span><span class="pl-c1">TerminationStatusCode</span> <span class="pl-k">=</span> <span class="pl-c1">4</span></pre></div>
<h2><a id="user-content-factorization-methods" class="anchor" aria-hidden="true" href="#factorization-methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Factorization methods</h2>
<p>By default, <code>PATHSolver.jl</code> will download the <a href="https://web.stanford.edu/group/SOL/software/lusol/" rel="nofollow">LUSOL</a>
shared library. To use LUSOL, set the following options:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="model = Model(PATHSolver.Optimizer)
set_optimizer_attribute(model, &quot;factorization_method&quot;, &quot;blu_lusol&quot;)
set_optimizer_attribute(model, &quot;factorization_library_name&quot;, PATHSolver.LUSOL_LIBRARY_PATH)
"><pre>model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(PATHSolver<span class="pl-k">.</span>Optimizer)
<span class="pl-c1">set_optimizer_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>factorization_method<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>blu_lusol<span class="pl-pds">"</span></span>)
<span class="pl-c1">set_optimizer_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>factorization_library_name<span class="pl-pds">"</span></span>, PATHSolver<span class="pl-k">.</span>LUSOL_LIBRARY_PATH)</pre></div>
<p>To use <code>factorization_method umfpack</code> you will need the umfpack shared lib that
is available directly from the <a href="http://faculty.cse.tamu.edu/davis/suitesparse.html" rel="nofollow">developers of that code for academic use</a>.</p>
<h2><a id="user-content-manual-installation" class="anchor" aria-hidden="true" href="#manual-installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Manual installation</h2>
<p>By default <code>PATHSolver.jl</code> will download a copy of the <code>libpath</code> library. If you
already have one installed and want to use that, set the <code>PATH_JL_LOCATION</code>
environment variable to point to the <code>libpath50.xx</code> library, then run
<code>Pkg.build("PATHSolver")</code>.</p>
</article></div>