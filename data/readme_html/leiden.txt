<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-leiden" class="anchor" aria-hidden="true" href="#leiden"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Leiden</h1>
<p><a href="https://travis-ci.com/bicycle1885/Leiden.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cad5dd0ca64f9922d94b41ab4312c1158930d4ed/68747470733a2f2f7472617669732d63692e636f6d2f62696379636c65313838352f4c656964656e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/bicycle1885/Leiden.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/bicycle1885/Leiden.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2ee53f6b82e6006dabc5f3d856d0602e203c8b31/68747470733a2f2f636f6465636f762e696f2f67682f62696379636c65313838352f4c656964656e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/bicycle1885/Leiden.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>A Julia implementation of the Leiden algorithm for community detection.</p>
<p>Traag, Vincent A., Ludo Waltman, and Nees Jan van Eck. "From Louvain to Leiden: guaranteeing well-connected communities." <em>Scientific reports</em> 9 (2019).
<a href="https://doi.org/10.1038/s41598-019-41695-z" rel="nofollow">https://doi.org/10.1038/s41598-019-41695-z</a></p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Create an adjacent matrix.</span>
<span class="pl-k">using</span> SparseArrays
A <span class="pl-k">=</span> <span class="pl-c1">spzeros</span>(<span class="pl-c1">6</span>, <span class="pl-c1">6</span>)
edges <span class="pl-k">=</span> [
    (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>),
    (<span class="pl-c1">2</span>, <span class="pl-c1">3</span>),
    (<span class="pl-c1">3</span>, <span class="pl-c1">1</span>),
    (<span class="pl-c1">4</span>, <span class="pl-c1">5</span>),
    (<span class="pl-c1">5</span>, <span class="pl-c1">6</span>),
    (<span class="pl-c1">6</span>, <span class="pl-c1">4</span>),
    (<span class="pl-c1">1</span>, <span class="pl-c1">4</span>),
]
<span class="pl-k">for</span> (u, v) <span class="pl-k">in</span> edges
    A[u,v] <span class="pl-k">=</span> A[v,u] <span class="pl-k">=</span> <span class="pl-c1">1</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Run the Leiden algorithm.</span>
<span class="pl-k">using</span> Random
<span class="pl-k">using</span> Leiden
Random<span class="pl-k">.</span><span class="pl-c1">seed!</span>(<span class="pl-c1">1234</span>)
result <span class="pl-k">=</span> Leiden<span class="pl-k">.</span><span class="pl-c1">leiden</span>(A, resolution <span class="pl-k">=</span> <span class="pl-c1">0.25</span>)
<span class="pl-c1">@show</span> result
<span class="pl-c"><span class="pl-c">#</span> result = (quality = 4.5, partition = Array{Int64,1}[[1, 2, 3], [4, 5, 6]])</span></pre></div>
</article></div>