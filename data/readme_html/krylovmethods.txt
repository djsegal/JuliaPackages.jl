<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a href="https://travis-ci.org/JuliaInv/KrylovMethods.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b27ffa530186485d4534b86ff8cd49e8fc33bfec/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961496e762f4b72796c6f764d6574686f64732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaInv/KrylovMethods.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/lruthotto/krylovmethods-jl-qowll" rel="nofollow"><img src="https://camo.githubusercontent.com/1c78238f1e7c0ab470df790ccdc04d5b6e1c9623/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f72637778617261746976646b776277703f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/rcwxarativdkwbwp?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaInv/KrylovMethods.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/d41e3ea5d581d2fc45bc025c5e4271e3b75d26f5/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c6961496e762f4b72796c6f764d6574686f64732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaInv/KrylovMethods.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<h1><a id="user-content-krylovmethodsjl" class="anchor" aria-hidden="true" href="#krylovmethodsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>KrylovMethods.jl</h1>
<p>Released under the <a href="https://github.com/lruthotto/KrylovMethods.jl/blob/master/LICENSE">MIT License</a>.</p>
<p>Simple and fast Julia implementation of Krylov subspace methods for linear systems.</p>
<h2><a id="user-content-goals-and-guidelines" class="anchor" aria-hidden="true" href="#goals-and-guidelines"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Goals and Guidelines</h2>
<p>The main goal of this package is to derive simple and fast implementation of the most useful Krylov subspace methods.</p>
<p>Our main objectives are:</p>
<ul>
<li><strong>speed</strong>: where try to minimize allocation costs and maximize the use of BLAS routines,</li>
<li><strong>memory efficiency</strong>: storing temporary variables and re-allocations are avoided,</li>
<li><strong>generality</strong>: where possible complex systems are supported,</li>
<li><strong>reliability</strong>: unit tests are provided.</li>
</ul>
</article></div>