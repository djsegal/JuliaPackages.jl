<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-convolutionaloperatorlearningjl" class="anchor" aria-hidden="true" href="#convolutionaloperatorlearningjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ConvolutionalOperatorLearning.jl</h1>
<p><a href="https://github.com/dahong67/ConvolutionalOperatorLearning.jl/actions"><img src="https://github.com/dahong67/ConvolutionalOperatorLearning.jl/workflows/CI/badge.svg" alt="CI" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/dahong67/ConvolutionalOperatorLearning.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/655b0dad92e3f271562b4448654502d003366cfe9747c6157bed87fb8f402337/68747470733a2f2f636f6465636f762e696f2f67682f6461686f6e6736372f436f6e766f6c7574696f6e616c4f70657261746f724c6561726e696e672e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/dahong67/ConvolutionalOperatorLearning.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Learn multi-dimensional convolutional analysis operators
(i.e., sparsifying filters) from data.
Based on the papers:</p>
<blockquote>
<p>Il Yong Chun and Jeffrey A. Fessler, "Convolutional analysis operator learning: Acceleration and convergence," IEEE Trans. Image Process., 29:2108-2122, 2020.
[Online] Available: <a href="http://arxiv.org/abs/1802.05584" rel="nofollow">http://arxiv.org/abs/1802.05584</a>.</p>
<p>Caroline Crockett, David Hong, Il Yong Chun, Jeffrey A. Fessler, "Incorporating handcrafted filters in convolutional analysis operator learning for ill-posed inverse problems," in Proc. IEEE CAMSAP, pp. 316-320, Guadeloupe, West Indies, Dec. 2019.</p>
<p>Il Yong Chun, David Hong, Ben Adcock, and Jeffrey A. Fessler, “Convolutional analysis operator learning: Dependence on training data,” IEEE Signal Process. Lett., 26(8):1137–1141, Aug. 2019.
[Online] Available: <a href="http://arxiv.org/abs/1902.08267" rel="nofollow">http://arxiv.org/abs/1902.08267</a>.</p>
</blockquote>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Install using Julia's Pkg REPL-mode
(hitting <code>]</code> as the first character of the command prompt):</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="(v1.1) pkg&gt; add ConvolutionalOperatorLearning
"><pre><code>(v1.1) pkg&gt; add ConvolutionalOperatorLearning
</code></pre></div>
<h2><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example usage</h2>
<p>Create <code>10</code> random <code>100 x 50</code> images</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; x = [randn(100,50) for _ in 1:10]
10-element Array{Array{Float64,2},1}:
 [-0.06103119834541305 0.17968724639365347 … -0.004269304417885406 -0.05473288638503366; -0.029082836823963076 -2.234356751701322 … 0.5306985197349057 0.5196510275200548; … ; 0.32864611768808494 -0.16509219769339606 … -0.7188306906351658 -1.3351708287182686; -0.8460760611398502 0.6741543032561107 … -1.7931435443456931 2.072398627809654]
 [-1.0823675555226044 1.8113983682279433 … -0.25814439615462886 -0.11342027638737794; -2.6512204811658844 0.6056278086922918 … 0.49428954950393583 0.9291513037613385; … ; 1.528072430975617 1.1576527001448074 … -0.13353151521165682 1.4552503091473545; -1.143499264158193 0.17686952628772404 … 0.5386755547858878 0.11253501428137602]       
 [-0.9748965681300071 -0.7942177416850443 … 0.647652241602665 -0.26162723540242966; -1.550320939343062 0.17934164372628594 … 0.07070502518981514 -0.3398872009535432; … ; -1.2000135265342693 -1.3040261404206082 … -0.537817304957513 -0.3194718348301661; -1.942367365002938 -0.8345181323639871 … -0.49691601543708913 0.13452223196414928]    
 [0.14109450766686116 -1.6227669465434267 … -0.14074338327795177 1.7247670372829123; -0.4530997280418346 1.2905655811601933 … -1.113412718124876 0.4224429822535648; … ; -0.8259273645794405 0.8120620193970456 … -0.15587253579758759 1.1574695830467834; 1.0788611984412293 1.2284093434139047 … 0.8824088821353901 0.3813812083882932]         
 [0.3918670037264455 0.22950182665140914 … 0.6770590224331631 -0.25256031424123226; 1.9204591807195388 -0.6076084890625175 … 1.0310040057616838 -1.7671208039765596; … ; 0.5799626195415907 0.569222606661083 … -0.6207019719221616 -0.20391984832884374; -0.9211372187326794 0.44983197168515526 … -0.5049251408980626 -0.17916820255012375]     
 [-1.2825390392798686 0.3693776463439366 … 0.42456048203585195 0.4091195519692529; 0.37893454217288014 0.33825718394132354 … -0.22838574521832017 -1.3427839180011332; … ; -0.803117711548536 1.3428601980024508 … -1.099475110503509 0.8837953536952086; -0.3160402227917924 1.7788621181954565 … -0.1181775330304786 0.051252762995059806]      
 [-0.21602745353895164 0.012000140979508711 … 0.896956844416174 0.22928973833631625; -0.7842241785543619 -0.32949835028447044 … -0.8048870286625319 0.16559858376597783; … ; 1.390319971887969 0.4193290677230986 … -0.749695268782869 -0.5448365210194996; 0.34791591520010057 0.2972162852854982 … -0.2026141522858165 1.3383401586637362]      
 [0.6594695901696367 1.5320772079720624 … -0.19847478092312748 -0.8653458363609802; 1.4585495614063246 -1.2300347093485384 … 2.1313306980929454 1.2275580250098121; … ; 0.9297648333661448 0.36369987357191985 … -2.196675279232564 0.852743816866466; -0.5375674199466393 0.923326234067758 … -0.16939398815990775 1.7503227614136636]           
 [0.12034611808950076 -1.1590390150338736 … -0.6039706346882843 -0.7583855141108757; -0.7606317585112351 0.9554944399438954 … 0.10425768324174194 -0.8995822359312021; … ; 0.5535277421769873 2.140671177435082 … -1.347488594326773 -0.2901472796237467; 1.4890853603600709 -0.6078320966265716 … 0.6995557559187338 1.797947737070229]          
 [-0.9218924802677713 0.4770979031282421 … -0.5055466339174239 0.8738141299971941; 0.73665174584806 2.1342570036702084 … -0.040302585687501044 -1.756282942531084; … ; -0.7406339259737408 0.8871629875178407 … 0.07589856412209975 1.204299863671966; -0.8082412377179505 -0.23452321526257708 … -0.39562475685025467 2.1299724960724045]
"><pre>julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> [<span class="pl-c1">randn</span>(<span class="pl-c1">100</span>,<span class="pl-c1">50</span>) <span class="pl-k">for</span> _ <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>]
<span class="pl-c1">10</span><span class="pl-k">-</span>element Array{Array{Float64,<span class="pl-c1">2</span>},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 [<span class="pl-k">-</span><span class="pl-c1">0.06103119834541305</span> <span class="pl-c1">0.17968724639365347</span> … <span class="pl-k">-</span><span class="pl-c1">0.004269304417885406</span> <span class="pl-k">-</span><span class="pl-c1">0.05473288638503366</span>; <span class="pl-k">-</span><span class="pl-c1">0.029082836823963076</span> <span class="pl-k">-</span><span class="pl-c1">2.234356751701322</span> … <span class="pl-c1">0.5306985197349057</span> <span class="pl-c1">0.5196510275200548</span>; … ; <span class="pl-c1">0.32864611768808494</span> <span class="pl-k">-</span><span class="pl-c1">0.16509219769339606</span> … <span class="pl-k">-</span><span class="pl-c1">0.7188306906351658</span> <span class="pl-k">-</span><span class="pl-c1">1.3351708287182686</span>; <span class="pl-k">-</span><span class="pl-c1">0.8460760611398502</span> <span class="pl-c1">0.6741543032561107</span> … <span class="pl-k">-</span><span class="pl-c1">1.7931435443456931</span> <span class="pl-c1">2.072398627809654</span>]
 [<span class="pl-k">-</span><span class="pl-c1">1.0823675555226044</span> <span class="pl-c1">1.8113983682279433</span> … <span class="pl-k">-</span><span class="pl-c1">0.25814439615462886</span> <span class="pl-k">-</span><span class="pl-c1">0.11342027638737794</span>; <span class="pl-k">-</span><span class="pl-c1">2.6512204811658844</span> <span class="pl-c1">0.6056278086922918</span> … <span class="pl-c1">0.49428954950393583</span> <span class="pl-c1">0.9291513037613385</span>; … ; <span class="pl-c1">1.528072430975617</span> <span class="pl-c1">1.1576527001448074</span> … <span class="pl-k">-</span><span class="pl-c1">0.13353151521165682</span> <span class="pl-c1">1.4552503091473545</span>; <span class="pl-k">-</span><span class="pl-c1">1.143499264158193</span> <span class="pl-c1">0.17686952628772404</span> … <span class="pl-c1">0.5386755547858878</span> <span class="pl-c1">0.11253501428137602</span>]       
 [<span class="pl-k">-</span><span class="pl-c1">0.9748965681300071</span> <span class="pl-k">-</span><span class="pl-c1">0.7942177416850443</span> … <span class="pl-c1">0.647652241602665</span> <span class="pl-k">-</span><span class="pl-c1">0.26162723540242966</span>; <span class="pl-k">-</span><span class="pl-c1">1.550320939343062</span> <span class="pl-c1">0.17934164372628594</span> … <span class="pl-c1">0.07070502518981514</span> <span class="pl-k">-</span><span class="pl-c1">0.3398872009535432</span>; … ; <span class="pl-k">-</span><span class="pl-c1">1.2000135265342693</span> <span class="pl-k">-</span><span class="pl-c1">1.3040261404206082</span> … <span class="pl-k">-</span><span class="pl-c1">0.537817304957513</span> <span class="pl-k">-</span><span class="pl-c1">0.3194718348301661</span>; <span class="pl-k">-</span><span class="pl-c1">1.942367365002938</span> <span class="pl-k">-</span><span class="pl-c1">0.8345181323639871</span> … <span class="pl-k">-</span><span class="pl-c1">0.49691601543708913</span> <span class="pl-c1">0.13452223196414928</span>]    
 [<span class="pl-c1">0.14109450766686116</span> <span class="pl-k">-</span><span class="pl-c1">1.6227669465434267</span> … <span class="pl-k">-</span><span class="pl-c1">0.14074338327795177</span> <span class="pl-c1">1.7247670372829123</span>; <span class="pl-k">-</span><span class="pl-c1">0.4530997280418346</span> <span class="pl-c1">1.2905655811601933</span> … <span class="pl-k">-</span><span class="pl-c1">1.113412718124876</span> <span class="pl-c1">0.4224429822535648</span>; … ; <span class="pl-k">-</span><span class="pl-c1">0.8259273645794405</span> <span class="pl-c1">0.8120620193970456</span> … <span class="pl-k">-</span><span class="pl-c1">0.15587253579758759</span> <span class="pl-c1">1.1574695830467834</span>; <span class="pl-c1">1.0788611984412293</span> <span class="pl-c1">1.2284093434139047</span> … <span class="pl-c1">0.8824088821353901</span> <span class="pl-c1">0.3813812083882932</span>]         
 [<span class="pl-c1">0.3918670037264455</span> <span class="pl-c1">0.22950182665140914</span> … <span class="pl-c1">0.6770590224331631</span> <span class="pl-k">-</span><span class="pl-c1">0.25256031424123226</span>; <span class="pl-c1">1.9204591807195388</span> <span class="pl-k">-</span><span class="pl-c1">0.6076084890625175</span> … <span class="pl-c1">1.0310040057616838</span> <span class="pl-k">-</span><span class="pl-c1">1.7671208039765596</span>; … ; <span class="pl-c1">0.5799626195415907</span> <span class="pl-c1">0.569222606661083</span> … <span class="pl-k">-</span><span class="pl-c1">0.6207019719221616</span> <span class="pl-k">-</span><span class="pl-c1">0.20391984832884374</span>; <span class="pl-k">-</span><span class="pl-c1">0.9211372187326794</span> <span class="pl-c1">0.44983197168515526</span> … <span class="pl-k">-</span><span class="pl-c1">0.5049251408980626</span> <span class="pl-k">-</span><span class="pl-c1">0.17916820255012375</span>]     
 [<span class="pl-k">-</span><span class="pl-c1">1.2825390392798686</span> <span class="pl-c1">0.3693776463439366</span> … <span class="pl-c1">0.42456048203585195</span> <span class="pl-c1">0.4091195519692529</span>; <span class="pl-c1">0.37893454217288014</span> <span class="pl-c1">0.33825718394132354</span> … <span class="pl-k">-</span><span class="pl-c1">0.22838574521832017</span> <span class="pl-k">-</span><span class="pl-c1">1.3427839180011332</span>; … ; <span class="pl-k">-</span><span class="pl-c1">0.803117711548536</span> <span class="pl-c1">1.3428601980024508</span> … <span class="pl-k">-</span><span class="pl-c1">1.099475110503509</span> <span class="pl-c1">0.8837953536952086</span>; <span class="pl-k">-</span><span class="pl-c1">0.3160402227917924</span> <span class="pl-c1">1.7788621181954565</span> … <span class="pl-k">-</span><span class="pl-c1">0.1181775330304786</span> <span class="pl-c1">0.051252762995059806</span>]      
 [<span class="pl-k">-</span><span class="pl-c1">0.21602745353895164</span> <span class="pl-c1">0.012000140979508711</span> … <span class="pl-c1">0.896956844416174</span> <span class="pl-c1">0.22928973833631625</span>; <span class="pl-k">-</span><span class="pl-c1">0.7842241785543619</span> <span class="pl-k">-</span><span class="pl-c1">0.32949835028447044</span> … <span class="pl-k">-</span><span class="pl-c1">0.8048870286625319</span> <span class="pl-c1">0.16559858376597783</span>; … ; <span class="pl-c1">1.390319971887969</span> <span class="pl-c1">0.4193290677230986</span> … <span class="pl-k">-</span><span class="pl-c1">0.749695268782869</span> <span class="pl-k">-</span><span class="pl-c1">0.5448365210194996</span>; <span class="pl-c1">0.34791591520010057</span> <span class="pl-c1">0.2972162852854982</span> … <span class="pl-k">-</span><span class="pl-c1">0.2026141522858165</span> <span class="pl-c1">1.3383401586637362</span>]      
 [<span class="pl-c1">0.6594695901696367</span> <span class="pl-c1">1.5320772079720624</span> … <span class="pl-k">-</span><span class="pl-c1">0.19847478092312748</span> <span class="pl-k">-</span><span class="pl-c1">0.8653458363609802</span>; <span class="pl-c1">1.4585495614063246</span> <span class="pl-k">-</span><span class="pl-c1">1.2300347093485384</span> … <span class="pl-c1">2.1313306980929454</span> <span class="pl-c1">1.2275580250098121</span>; … ; <span class="pl-c1">0.9297648333661448</span> <span class="pl-c1">0.36369987357191985</span> … <span class="pl-k">-</span><span class="pl-c1">2.196675279232564</span> <span class="pl-c1">0.852743816866466</span>; <span class="pl-k">-</span><span class="pl-c1">0.5375674199466393</span> <span class="pl-c1">0.923326234067758</span> … <span class="pl-k">-</span><span class="pl-c1">0.16939398815990775</span> <span class="pl-c1">1.7503227614136636</span>]           
 [<span class="pl-c1">0.12034611808950076</span> <span class="pl-k">-</span><span class="pl-c1">1.1590390150338736</span> … <span class="pl-k">-</span><span class="pl-c1">0.6039706346882843</span> <span class="pl-k">-</span><span class="pl-c1">0.7583855141108757</span>; <span class="pl-k">-</span><span class="pl-c1">0.7606317585112351</span> <span class="pl-c1">0.9554944399438954</span> … <span class="pl-c1">0.10425768324174194</span> <span class="pl-k">-</span><span class="pl-c1">0.8995822359312021</span>; … ; <span class="pl-c1">0.5535277421769873</span> <span class="pl-c1">2.140671177435082</span> … <span class="pl-k">-</span><span class="pl-c1">1.347488594326773</span> <span class="pl-k">-</span><span class="pl-c1">0.2901472796237467</span>; <span class="pl-c1">1.4890853603600709</span> <span class="pl-k">-</span><span class="pl-c1">0.6078320966265716</span> … <span class="pl-c1">0.6995557559187338</span> <span class="pl-c1">1.797947737070229</span>]          
 [<span class="pl-k">-</span><span class="pl-c1">0.9218924802677713</span> <span class="pl-c1">0.4770979031282421</span> … <span class="pl-k">-</span><span class="pl-c1">0.5055466339174239</span> <span class="pl-c1">0.8738141299971941</span>; <span class="pl-c1">0.73665174584806</span> <span class="pl-c1">2.1342570036702084</span> … <span class="pl-k">-</span><span class="pl-c1">0.040302585687501044</span> <span class="pl-k">-</span><span class="pl-c1">1.756282942531084</span>; … ; <span class="pl-k">-</span><span class="pl-c1">0.7406339259737408</span> <span class="pl-c1">0.8871629875178407</span> … <span class="pl-c1">0.07589856412209975</span> <span class="pl-c1">1.204299863671966</span>; <span class="pl-k">-</span><span class="pl-c1">0.8082412377179505</span> <span class="pl-k">-</span><span class="pl-c1">0.23452321526257708</span> … <span class="pl-k">-</span><span class="pl-c1">0.39562475685025467</span> <span class="pl-c1">2.1299724960724045</span>]</pre></div>
<p>Create initial <code>3 x 3</code> filters, e.g., using DCT,</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using ConvolutionalOperatorLearning

julia&gt; H0 = generatefilters(:DCT,(3,3),form=:matrix)
9×9 Array{Float64,2}:
 0.111111   0.136083      0.0785674   0.136083      0.166667      0.096225      0.0785674   0.096225      0.0555556
 0.111111  -1.74455e-17  -0.157135    0.136083     -2.13663e-17  -0.19245       0.0785674  -1.23358e-17  -0.111111
 0.111111  -0.136083      0.0785674   0.136083     -0.166667      0.096225      0.0785674  -0.096225      0.0555556
 0.111111   0.136083      0.0785674  -1.74455e-17  -2.13663e-17  -1.23358e-17  -0.157135   -0.19245      -0.111111
 0.111111  -1.74455e-17  -0.157135   -1.74455e-17   2.7391e-33    2.46716e-17  -0.157135    2.46716e-17   0.222222
 0.111111  -0.136083      0.0785674  -1.74455e-17   2.13663e-17  -1.23358e-17  -0.157135    0.19245      -0.111111
 0.111111   0.136083      0.0785674  -0.136083     -0.166667     -0.096225      0.0785674   0.096225      0.0555556
 0.111111  -1.74455e-17  -0.157135   -0.136083      2.13663e-17   0.19245       0.0785674  -1.23358e-17  -0.111111
 0.111111  -0.136083      0.0785674  -0.136083      0.166667     -0.096225      0.0785674  -0.096225      0.0555556
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ConvolutionalOperatorLearning

julia<span class="pl-k">&gt;</span> H0 <span class="pl-k">=</span> <span class="pl-c1">generatefilters</span>(<span class="pl-c1">:DCT</span>,(<span class="pl-c1">3</span>,<span class="pl-c1">3</span>),form<span class="pl-k">=</span><span class="pl-c1">:matrix</span>)
<span class="pl-c1">9</span><span class="pl-k">×</span><span class="pl-c1">9</span> Array{Float64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0.111111</span>   <span class="pl-c1">0.136083</span>      <span class="pl-c1">0.0785674</span>   <span class="pl-c1">0.136083</span>      <span class="pl-c1">0.166667</span>      <span class="pl-c1">0.096225</span>      <span class="pl-c1">0.0785674</span>   <span class="pl-c1">0.096225</span>      <span class="pl-c1">0.0555556</span>
 <span class="pl-c1">0.111111</span>  <span class="pl-k">-</span><span class="pl-c1">1.74455e-17</span>  <span class="pl-k">-</span><span class="pl-c1">0.157135</span>    <span class="pl-c1">0.136083</span>     <span class="pl-k">-</span><span class="pl-c1">2.13663e-17</span>  <span class="pl-k">-</span><span class="pl-c1">0.19245</span>       <span class="pl-c1">0.0785674</span>  <span class="pl-k">-</span><span class="pl-c1">1.23358e-17</span>  <span class="pl-k">-</span><span class="pl-c1">0.111111</span>
 <span class="pl-c1">0.111111</span>  <span class="pl-k">-</span><span class="pl-c1">0.136083</span>      <span class="pl-c1">0.0785674</span>   <span class="pl-c1">0.136083</span>     <span class="pl-k">-</span><span class="pl-c1">0.166667</span>      <span class="pl-c1">0.096225</span>      <span class="pl-c1">0.0785674</span>  <span class="pl-k">-</span><span class="pl-c1">0.096225</span>      <span class="pl-c1">0.0555556</span>
 <span class="pl-c1">0.111111</span>   <span class="pl-c1">0.136083</span>      <span class="pl-c1">0.0785674</span>  <span class="pl-k">-</span><span class="pl-c1">1.74455e-17</span>  <span class="pl-k">-</span><span class="pl-c1">2.13663e-17</span>  <span class="pl-k">-</span><span class="pl-c1">1.23358e-17</span>  <span class="pl-k">-</span><span class="pl-c1">0.157135</span>   <span class="pl-k">-</span><span class="pl-c1">0.19245</span>      <span class="pl-k">-</span><span class="pl-c1">0.111111</span>
 <span class="pl-c1">0.111111</span>  <span class="pl-k">-</span><span class="pl-c1">1.74455e-17</span>  <span class="pl-k">-</span><span class="pl-c1">0.157135</span>   <span class="pl-k">-</span><span class="pl-c1">1.74455e-17</span>   <span class="pl-c1">2.7391e-33</span>    <span class="pl-c1">2.46716e-17</span>  <span class="pl-k">-</span><span class="pl-c1">0.157135</span>    <span class="pl-c1">2.46716e-17</span>   <span class="pl-c1">0.222222</span>
 <span class="pl-c1">0.111111</span>  <span class="pl-k">-</span><span class="pl-c1">0.136083</span>      <span class="pl-c1">0.0785674</span>  <span class="pl-k">-</span><span class="pl-c1">1.74455e-17</span>   <span class="pl-c1">2.13663e-17</span>  <span class="pl-k">-</span><span class="pl-c1">1.23358e-17</span>  <span class="pl-k">-</span><span class="pl-c1">0.157135</span>    <span class="pl-c1">0.19245</span>      <span class="pl-k">-</span><span class="pl-c1">0.111111</span>
 <span class="pl-c1">0.111111</span>   <span class="pl-c1">0.136083</span>      <span class="pl-c1">0.0785674</span>  <span class="pl-k">-</span><span class="pl-c1">0.136083</span>     <span class="pl-k">-</span><span class="pl-c1">0.166667</span>     <span class="pl-k">-</span><span class="pl-c1">0.096225</span>      <span class="pl-c1">0.0785674</span>   <span class="pl-c1">0.096225</span>      <span class="pl-c1">0.0555556</span>
 <span class="pl-c1">0.111111</span>  <span class="pl-k">-</span><span class="pl-c1">1.74455e-17</span>  <span class="pl-k">-</span><span class="pl-c1">0.157135</span>   <span class="pl-k">-</span><span class="pl-c1">0.136083</span>      <span class="pl-c1">2.13663e-17</span>   <span class="pl-c1">0.19245</span>       <span class="pl-c1">0.0785674</span>  <span class="pl-k">-</span><span class="pl-c1">1.23358e-17</span>  <span class="pl-k">-</span><span class="pl-c1">0.111111</span>
 <span class="pl-c1">0.111111</span>  <span class="pl-k">-</span><span class="pl-c1">0.136083</span>      <span class="pl-c1">0.0785674</span>  <span class="pl-k">-</span><span class="pl-c1">0.136083</span>      <span class="pl-c1">0.166667</span>     <span class="pl-k">-</span><span class="pl-c1">0.096225</span>      <span class="pl-c1">0.0785674</span>  <span class="pl-k">-</span><span class="pl-c1">0.096225</span>      <span class="pl-c1">0.0555556</span></pre></div>
<p>Run CAOL</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; λ = 1e-4      # regularization parameter
0.0001

julia&gt; CAOL(x,λ,(H0,(3,3)),maxiters=30)
9×9 Array{Float64,2}:
 0.111265   0.136016      0.0784865   0.136052      0.166719      0.0960939     0.0785114   0.0962194     0.0557584
 0.111156   5.02982e-5   -0.157221    0.135858     -3.13768e-5   -0.19253       0.0786885  -1.47525e-5   -0.110996
 0.111159  -0.136107      0.0785521   0.136102     -0.166563      0.0962433     0.0785622  -0.096378      0.0553945
 0.110976   0.136055      0.0786667   2.48235e-5    0.000248852  -0.000180995  -0.157047   -0.192529     -0.111196
 0.111119  -0.000109812  -0.157062   -0.000173108  -5.33203e-5   -7.34933e-5   -0.157193   -0.000328285   0.222228
 0.111348  -0.136088      0.0785111  -0.000119645   1.59918e-5   -0.000121294  -0.157086    0.192387     -0.111086
 0.111146   0.136012      0.0787575  -0.136207     -0.166629     -0.0961987     0.0785864   0.0959427     0.0557062
 0.111195   8.71936e-5   -0.157024   -0.136244      0.000148541   0.192415      0.0785643  -0.000150345  -0.111049
 0.110634  -0.136218      0.0786252  -0.136034      0.166755     -0.0962737     0.0786482  -0.0963271     0.0555741
"><pre>julia<span class="pl-k">&gt;</span> λ <span class="pl-k">=</span> <span class="pl-c1">1e-4</span>      <span class="pl-c"><span class="pl-c">#</span> regularization parameter</span>
<span class="pl-c1">0.0001</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">CAOL</span>(x,λ,(H0,(<span class="pl-c1">3</span>,<span class="pl-c1">3</span>)),maxiters<span class="pl-k">=</span><span class="pl-c1">30</span>)
<span class="pl-c1">9</span><span class="pl-k">×</span><span class="pl-c1">9</span> Array{Float64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0.111265</span>   <span class="pl-c1">0.136016</span>      <span class="pl-c1">0.0784865</span>   <span class="pl-c1">0.136052</span>      <span class="pl-c1">0.166719</span>      <span class="pl-c1">0.0960939</span>     <span class="pl-c1">0.0785114</span>   <span class="pl-c1">0.0962194</span>     <span class="pl-c1">0.0557584</span>
 <span class="pl-c1">0.111156</span>   <span class="pl-c1">5.02982e-5</span>   <span class="pl-k">-</span><span class="pl-c1">0.157221</span>    <span class="pl-c1">0.135858</span>     <span class="pl-k">-</span><span class="pl-c1">3.13768e-5</span>   <span class="pl-k">-</span><span class="pl-c1">0.19253</span>       <span class="pl-c1">0.0786885</span>  <span class="pl-k">-</span><span class="pl-c1">1.47525e-5</span>   <span class="pl-k">-</span><span class="pl-c1">0.110996</span>
 <span class="pl-c1">0.111159</span>  <span class="pl-k">-</span><span class="pl-c1">0.136107</span>      <span class="pl-c1">0.0785521</span>   <span class="pl-c1">0.136102</span>     <span class="pl-k">-</span><span class="pl-c1">0.166563</span>      <span class="pl-c1">0.0962433</span>     <span class="pl-c1">0.0785622</span>  <span class="pl-k">-</span><span class="pl-c1">0.096378</span>      <span class="pl-c1">0.0553945</span>
 <span class="pl-c1">0.110976</span>   <span class="pl-c1">0.136055</span>      <span class="pl-c1">0.0786667</span>   <span class="pl-c1">2.48235e-5</span>    <span class="pl-c1">0.000248852</span>  <span class="pl-k">-</span><span class="pl-c1">0.000180995</span>  <span class="pl-k">-</span><span class="pl-c1">0.157047</span>   <span class="pl-k">-</span><span class="pl-c1">0.192529</span>     <span class="pl-k">-</span><span class="pl-c1">0.111196</span>
 <span class="pl-c1">0.111119</span>  <span class="pl-k">-</span><span class="pl-c1">0.000109812</span>  <span class="pl-k">-</span><span class="pl-c1">0.157062</span>   <span class="pl-k">-</span><span class="pl-c1">0.000173108</span>  <span class="pl-k">-</span><span class="pl-c1">5.33203e-5</span>   <span class="pl-k">-</span><span class="pl-c1">7.34933e-5</span>   <span class="pl-k">-</span><span class="pl-c1">0.157193</span>   <span class="pl-k">-</span><span class="pl-c1">0.000328285</span>   <span class="pl-c1">0.222228</span>
 <span class="pl-c1">0.111348</span>  <span class="pl-k">-</span><span class="pl-c1">0.136088</span>      <span class="pl-c1">0.0785111</span>  <span class="pl-k">-</span><span class="pl-c1">0.000119645</span>   <span class="pl-c1">1.59918e-5</span>   <span class="pl-k">-</span><span class="pl-c1">0.000121294</span>  <span class="pl-k">-</span><span class="pl-c1">0.157086</span>    <span class="pl-c1">0.192387</span>     <span class="pl-k">-</span><span class="pl-c1">0.111086</span>
 <span class="pl-c1">0.111146</span>   <span class="pl-c1">0.136012</span>      <span class="pl-c1">0.0787575</span>  <span class="pl-k">-</span><span class="pl-c1">0.136207</span>     <span class="pl-k">-</span><span class="pl-c1">0.166629</span>     <span class="pl-k">-</span><span class="pl-c1">0.0961987</span>     <span class="pl-c1">0.0785864</span>   <span class="pl-c1">0.0959427</span>     <span class="pl-c1">0.0557062</span>
 <span class="pl-c1">0.111195</span>   <span class="pl-c1">8.71936e-5</span>   <span class="pl-k">-</span><span class="pl-c1">0.157024</span>   <span class="pl-k">-</span><span class="pl-c1">0.136244</span>      <span class="pl-c1">0.000148541</span>   <span class="pl-c1">0.192415</span>      <span class="pl-c1">0.0785643</span>  <span class="pl-k">-</span><span class="pl-c1">0.000150345</span>  <span class="pl-k">-</span><span class="pl-c1">0.111049</span>
 <span class="pl-c1">0.110634</span>  <span class="pl-k">-</span><span class="pl-c1">0.136218</span>      <span class="pl-c1">0.0786252</span>  <span class="pl-k">-</span><span class="pl-c1">0.136034</span>      <span class="pl-c1">0.166755</span>     <span class="pl-k">-</span><span class="pl-c1">0.0962737</span>     <span class="pl-c1">0.0786482</span>  <span class="pl-k">-</span><span class="pl-c1">0.0963271</span>     <span class="pl-c1">0.0555741</span></pre></div>
<p>The output has <code>9</code> filters of size <code>3 x 3</code>.</p>
<p><strong>TODO: Clean-up and add more examples, documentation</strong></p>
<h2><a id="user-content-optimization-problem-and-algorithm" class="anchor" aria-hidden="true" href="#optimization-problem-and-algorithm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Optimization problem and algorithm</h2>
<p><code>CAOL</code> attempts to minimize the following function
(written in partly Julia notation)</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="sum(1/2*norm(x[l]✪h[k] - z[l,k])^2 + λ*norm(z[l,k],0) for k in 1:K, l in 1:L)
"><pre><span class="pl-c1">sum</span>(<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">norm</span>(x[l]✪h[k] <span class="pl-k">-</span> z[l,k])<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> λ<span class="pl-k">*</span><span class="pl-c1">norm</span>(z[l,k],<span class="pl-c1">0</span>) <span class="pl-k">for</span> k <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>K, l <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>L)</pre></div>
<p>with respect to <code>z[l,k]</code> and <code>H = [vec(h[1]) ... vec(h[K])]</code> where</p>
<ul>
<li><code>H</code> is constrained to have (scaled) orthonormal columns,
i.e., <code>H'H == (1/R)*I</code>, where <code>R = size(H,1)</code></li>
<li><code>✪</code> denotes circular correlation, namely <code>xl ✪ hk</code> is an <code>OffsetArray</code>
indexed along each dimension of size <code>n</code> by lag in <code>0:n-1</code>,
where (for the one-dimensional case) the <code>i</code>th lag is
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(xl ✪ hk)[i] = sum(xpadl[j+i]*hk[j] for j in 1:R)
"><pre>(xl ✪ hk)[i] <span class="pl-k">=</span> <span class="pl-c1">sum</span>(xpadl[j<span class="pl-k">+</span>i]<span class="pl-k">*</span>hk[j] <span class="pl-k">for</span> j <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>R)</pre></div>
with <code>xpadl = padarray(xl,Pad(:circular, [...]))</code>
being a circularly padded version of <code>xl</code>.
This calculation is accomplished in-place with <code>ImageFiltering.jl</code> via
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="imfilter!(out,xpadl,(hk,),NoPad(),Algorithm.FIR())
"><pre><span class="pl-c1">imfilter!</span>(out,xpadl,(hk,),<span class="pl-c1">NoPad</span>(),Algorithm<span class="pl-k">.</span><span class="pl-c1">FIR</span>())</pre></div>
where <code>out</code> has axes of the form <code>0:n-1</code> in each dimension.</li>
</ul>
<p>The optimization is carried out via alternating minimization.</p>
<ol>
<li><strong>Sparse code update.</strong>
The objective is minimized with respect to <code>z[l,k]</code>
by hard-thresholding <code>x[l]✪h[k]</code> as follows</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="imfilter!(z[l,k],xpad[l],(h[k],),NoPad(),Algorithm.FIR())
z[l,k] .= hard.(z[l,k],sqrt(2λ))
"><pre><span class="pl-c1">imfilter!</span>(z[l,k],xpad[l],(h[k],),<span class="pl-c1">NoPad</span>(),Algorithm<span class="pl-k">.</span><span class="pl-c1">FIR</span>())
z[l,k] <span class="pl-k">.=</span> <span class="pl-c1">hard</span>.(z[l,k],<span class="pl-c1">sqrt</span>(<span class="pl-c1">2</span>λ))</pre></div>
<p>It turns out that only an accumulated version of <code>z[l,k]</code> is needed,
so the code only stores one at a time,
reusing the memory across <code>l</code> and <code>k</code> for efficiency.</p>
<ol start="2">
<li><strong>Filter update.</strong>
Minimizing the objective with respect to <code>H</code> turns out
to be a Procrustes problem and is solved by
the polar factor of</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="sum([XPADL'z[l,1] ... XPADL'z[l,K]] for l in 1:L)
"><pre><span class="pl-c1">sum</span>([XPADL<span class="pl-k">'</span>z[l,<span class="pl-c1">1</span>] <span class="pl-k">...</span> XPADL<span class="pl-k">'</span>z[l,K]] <span class="pl-k">for</span> l <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>L)</pre></div>
<p>where <code>XPADL</code> is the matrix such that <code>XPADL * h == xl ✪ h</code>.
In one dimension,</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="XPADL = [
xl[1] xl[2] ... xl[R-1] xl[R];
xl[2] xl[3] ... xl[R]   xl[1];
...
xl[n] xl[1] ... xl[R-2] xl[R-1]
]
"><pre>XPADL <span class="pl-k">=</span> [
xl[<span class="pl-c1">1</span>] xl[<span class="pl-c1">2</span>] <span class="pl-k">...</span> xl[R<span class="pl-k">-</span><span class="pl-c1">1</span>] xl[R];
xl[<span class="pl-c1">2</span>] xl[<span class="pl-c1">3</span>] <span class="pl-k">...</span> xl[R]   xl[<span class="pl-c1">1</span>];
<span class="pl-k">...</span>
xl[n] xl[<span class="pl-c1">1</span>] <span class="pl-k">...</span> xl[R<span class="pl-k">-</span><span class="pl-c1">2</span>] xl[R<span class="pl-k">-</span><span class="pl-c1">1</span>]
]</pre></div>
<p>yielding</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="XPADL' = [
xl[1]   xl[2] ... xl[n];
xl[2]   xl[3] ... xl[1];
...
xl[R-1] xl[R] ... xl[R-2]
xl[R]   xl[1] ... xl[R-1]
]
"><pre>XPADL<span class="pl-k">'</span> <span class="pl-k">=</span> [
xl[<span class="pl-c1">1</span>]   xl[<span class="pl-c1">2</span>] <span class="pl-k">...</span> xl[n];
xl[<span class="pl-c1">2</span>]   xl[<span class="pl-c1">3</span>] <span class="pl-k">...</span> xl[<span class="pl-c1">1</span>];
<span class="pl-k">...</span>
xl[R<span class="pl-k">-</span><span class="pl-c1">1</span>] xl[R] <span class="pl-k">...</span> xl[R<span class="pl-k">-</span><span class="pl-c1">2</span>]
xl[R]   xl[<span class="pl-c1">1</span>] <span class="pl-k">...</span> xl[R<span class="pl-k">-</span><span class="pl-c1">1</span>]
]</pre></div>
<p>so <code>XPADL'z</code> is another circular correlation
and can be accomplished in-place with <code>ImageFiltering.jl</code> via</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="imfilter!(out,xpad[l],(z[l,k],),NoPad(),Algorithm.FIR())
"><pre><span class="pl-c1">imfilter!</span>(out,xpad[l],(z[l,k],),<span class="pl-c1">NoPad</span>(),Algorithm<span class="pl-k">.</span><span class="pl-c1">FIR</span>())</pre></div>
<p>by having <code>out</code> be indexed from <code>1:r</code> in each dimension
where <code>r</code> is the size of the filters along that dimension.
Note that this convenient property is for correlation, and not convolution.</p>
<p><strong>TODO:</strong>
double check the derivation (especially <code>R</code>s and <code>K</code>s, and dimension &gt; 1),
write up the version for handcrafted filters,
and put into docs with LaTeX.</p>
<h2><a id="user-content-benchmarking" class="anchor" aria-hidden="true" href="#benchmarking"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Benchmarking</h2>
<p>A small benchmark script is in <code>benchmark/benchmarks.jl</code>.
To use this, you will need to install
<a href="https://github.com/JuliaCI/PkgBenchmark.jl"><code>PkgBenchmark.jl</code></a>
and <a href="https://www.github.com/JuliaCI/BenchmarkTools.jl"><code>BenchmarkTools.jl</code></a>.
Then run</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using PkgBenchmark
b = benchmarkpkg(&quot;ConvolutionalOperatorLearning&quot;)
export_markdown(stdout,b)
"><pre><span class="pl-k">using</span> PkgBenchmark
b <span class="pl-k">=</span> <span class="pl-c1">benchmarkpkg</span>(<span class="pl-s"><span class="pl-pds">"</span>ConvolutionalOperatorLearning<span class="pl-pds">"</span></span>)
<span class="pl-c1">export_markdown</span>(<span class="pl-c1">stdout</span>,b)</pre></div>
<p>to get a markdown representation of the results to <code>stdout</code>.</p>
<p>To benchmark against the previous commit use</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using PkgBenchmark
b = judge(&quot;ConvolutionalOperatorLearning&quot;,&quot;HEAD~1&quot;)
export_markdown(stdout,b)
"><pre><span class="pl-k">using</span> PkgBenchmark
b <span class="pl-k">=</span> <span class="pl-c1">judge</span>(<span class="pl-s"><span class="pl-pds">"</span>ConvolutionalOperatorLearning<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>HEAD~1<span class="pl-pds">"</span></span>)
<span class="pl-c1">export_markdown</span>(<span class="pl-c1">stdout</span>,b)</pre></div>
<p><strong>TODO:</strong> add more benchmarks, benchmark individual updates</p>
</article></div>