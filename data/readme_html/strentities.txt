<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-strentities" class="anchor" aria-hidden="true" href="#strentities"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>StrEntities</h1>
<p><a href="https://github.com/JuliaString/StrEntities.jl.git"><img src="https://camo.githubusercontent.com/18c626b148395d022cbe53c23399c45642e7d5efb8ca9210b3996deed8a3383a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f4a756c6961537472696e672f537472456e7469746965732e6a6c2e737667" alt="" data-canonical-src="https://img.shields.io/github/release/JuliaString/StrEntities.jl.svg" style="max-width:100%;"></a> <a href="https://github.com/JuliaString/StrEntities.jl.git"><img src="https://camo.githubusercontent.com/654594df7cf19ff27127e8f37b9f2e200a288962e4c57dda6fa664522955bcf2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f4a756c6961537472696e672f537472456e7469746965732e6a6c2e737667" alt="" data-canonical-src="https://img.shields.io/github/release-date/JuliaString/StrEntities.jl.svg" style="max-width:100%;"></a> <a href="LICENSE.md"><img src="https://camo.githubusercontent.com/bbf49a2eb96e6f718803f2493bd7aa3baae61abb09b7f8fc185a94e08c504dc6/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c6174" alt="" data-canonical-src="http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat" style="max-width:100%;"></a> <a href="https://github.com/JuliaString/StrEntities.jl/issues"><img src="https://camo.githubusercontent.com/f5054ffcd4245c10d3ec85ef059e07aacf787b560f83ad4aec2236364437d097/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174" alt="contributions welcome" data-canonical-src="https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat" style="max-width:100%;"></a></p>
<table>
<thead>
<tr>
<th align="center"><strong>Julia Version</strong></th>
<th align="center"><strong>Unit Tests</strong></th>
<th align="center"><strong>Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://github.com/JuliaLang/Julia"><img src="https://camo.githubusercontent.com/514feca078cec1d0f876174356358ac616bed330b2a880fa65daca3148ead714/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f4a756c69614c616e672f6a756c69612e737667" alt="" data-canonical-src="https://img.shields.io/github/release/JuliaLang/julia.svg" style="max-width:100%;"></a></td>
<td align="center"></td>
<td align="center"><a href="https://codecov.io/gh/JuliaString/StrEntities.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c62667a09de4dbb85c9fccfb9bf33db427d19d7ee76f580c5a85d5d85cd4d25a/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961537472696e672f537472456e7469746965732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaString/StrEntities.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="center">Julia Latest</td>
<td align="center"><a href="https://github.com/JuliaString/StrEntities.jl.git"><img src="https://camo.githubusercontent.com/6f60362b947cf39121d5d350f0c1e6bb601084709350e9993b359703a5345826/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636865636b732d7374617475732f4a756c6961537472696e672f537472456e7469746965732e6a6c2f6d6173746572" alt="" data-canonical-src="https://img.shields.io/github/checks-status/JuliaString/StrEntities.jl/master" style="max-width:100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/JuliaString/StrEntities.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c62667a09de4dbb85c9fccfb9bf33db427d19d7ee76f580c5a85d5d85cd4d25a/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961537472696e672f537472456e7469746965732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaString/StrEntities.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>StrEntities extends the string literals provided by the <a href="https://github.com/JuliaString/StrLiterals.jl">StrLiterals</a> package.
It adds support for HTML, LaTeX, Unicode and Emoji entities, provided by the packages:</p>
<ul>
<li><a href="https://github.com/JuliaString/HTML_Entities.jl">HTML_Entities</a></li>
<li><a href="https://github.com/JuliaString/LaTeX_Entities.jl">LaTeX_Entities</a></li>
<li><a href="https://github.com/JuliaString/Emoji_Entities.jl">Emoji_Entities</a></li>
<li><a href="https://github.com/JuliaString/Unicode_Entities.jl">Unicode_Entities</a></li>
</ul>
<p>This adds four ways of representing characters in the literal string,
<code>\:emojiname:</code>, <code>\&lt;latexname&gt;</code>, <code>\&amp;htmlname;</code> and <code>\N{UnicodeName}</code>.
This makes life a lot easier when you want to keep the text of a program in ASCII, and
also to be able to write programs using those characters that might not even display
correctly in their editor.</p>
<ul>
<li><code>\&lt;</code> followed by a LaTeX entity name followed by <code>&gt;</code> outputs that character or sequence if the name is valid.</li>
<li><code>\:</code> followed by an Emoji name followed by <code>:</code> outputs that character or sequence (if a valid name)</li>
<li><code>\&amp;</code> followed by an HTML entity name followed by <code>;</code> outputs that character or sequence (if a valid name)</li>
<li><code>\N{</code> followed by a Unicode entity name (case-insensitive!) followed by a <code>}</code> outputs that Unicode character (if a valid name)</li>
</ul>
</article></div>