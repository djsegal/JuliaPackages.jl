<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-financialportfoliosjl" class="anchor" aria-hidden="true" href="#financialportfoliosjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FinancialPortfolios.jl</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667"><img src="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-experimental-orange.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/tbeason/FinancialPortfolios.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/07ac766b938f5730807be10108ae3bcde03edec7c676d4d7c33911a858087f0a/68747470733a2f2f7472617669732d63692e636f6d2f74626561736f6e2f46696e616e6369616c506f7274666f6c696f732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/tbeason/FinancialPortfolios.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/tbeason/FinancialPortfolios.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/04e2dea4146603bbd29272d81de36606c5ece201b7df4fdd7adbb8966329f0c2/687474703a2f2f636f6465636f762e696f2f6769746875622f74626561736f6e2f46696e616e6369616c506f7274666f6c696f732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/tbeason/FinancialPortfolios.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>

<p>A minimalist Julia package for working with simple portfolios of financial assets. Really only provides the barebones.</p>
<h3><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h3>
<p>Example without rebalancing.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using FinancialPortfolios, DataFrames, Dictionaries

stockA = 0.06/12 .+ 0.1/sqrt(12) .* randn(120)
stockB = 0.01/12 .+ 0.02/sqrt(12) .* randn(120)

df = DataFrame(stockA=stockA,stockB=stockB)

FP = FinancialPortfolio(dictionary([&quot;stockA&quot;=&gt;0.8,&quot;stockB&quot;=&gt;0.2]))  # initial portfolio weights
df.portfolioreturns = [update!(FP,r) for r in eachrow(df)]
df
FP
"><pre><span class="pl-k">using</span> FinancialPortfolios, DataFrames, Dictionaries

stockA <span class="pl-k">=</span> <span class="pl-c1">0.06</span><span class="pl-k">/</span><span class="pl-c1">12</span> <span class="pl-k">.+</span> <span class="pl-c1">0.1</span><span class="pl-k">/</span><span class="pl-c1">sqrt</span>(<span class="pl-c1">12</span>) <span class="pl-k">.*</span> <span class="pl-c1">randn</span>(<span class="pl-c1">120</span>)
stockB <span class="pl-k">=</span> <span class="pl-c1">0.01</span><span class="pl-k">/</span><span class="pl-c1">12</span> <span class="pl-k">.+</span> <span class="pl-c1">0.02</span><span class="pl-k">/</span><span class="pl-c1">sqrt</span>(<span class="pl-c1">12</span>) <span class="pl-k">.*</span> <span class="pl-c1">randn</span>(<span class="pl-c1">120</span>)

df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(stockA<span class="pl-k">=</span>stockA,stockB<span class="pl-k">=</span>stockB)

FP <span class="pl-k">=</span> <span class="pl-c1">FinancialPortfolio</span>(<span class="pl-c1">dictionary</span>([<span class="pl-s"><span class="pl-pds">"</span>stockA<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">0.8</span>,<span class="pl-s"><span class="pl-pds">"</span>stockB<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">0.2</span>]))  <span class="pl-c"><span class="pl-c">#</span> initial portfolio weights</span>
df<span class="pl-k">.</span>portfolioreturns <span class="pl-k">=</span> [<span class="pl-c1">update!</span>(FP,r) <span class="pl-k">for</span> r <span class="pl-k">in</span> <span class="pl-c1">eachrow</span>(df)]
df
FP</pre></div>
<p>Example with rebalancing every January.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using FinancialPortfolios, DataFrames, Dictionaries


months = repeat(1:12,10)
stockA = 0.06/12 .+ 0.1/sqrt(12) .* randn(120)
stockB = 0.01/12 .+ 0.02/sqrt(12) .* randn(120)

df = DataFrame(month=months,stockA=stockA,stockB=stockB)
FP = FinancialPortfolio(dictionary([&quot;stockA&quot;=&gt;0.8,&quot;stockB&quot;=&gt;0.2]))  # initial portfolio weights

function runportfolio!(FP0,df0)
    T = nrow(df0)
    df0[!,:portfolioreturns] = missings(Float64,T)
    FPreb = copy(FP0)
    
    for row in eachrow(df0)
        if row.month == 1   # rebalances each January
            FP0 = copy(FPreb)
        end
        row.portfolioreturns = update!(FP0,row)
    end
    return FP0
end

runportfolio!(FP,df)
"><pre><span class="pl-k">using</span> FinancialPortfolios, DataFrames, Dictionaries


months <span class="pl-k">=</span> <span class="pl-c1">repeat</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">12</span>,<span class="pl-c1">10</span>)
stockA <span class="pl-k">=</span> <span class="pl-c1">0.06</span><span class="pl-k">/</span><span class="pl-c1">12</span> <span class="pl-k">.+</span> <span class="pl-c1">0.1</span><span class="pl-k">/</span><span class="pl-c1">sqrt</span>(<span class="pl-c1">12</span>) <span class="pl-k">.*</span> <span class="pl-c1">randn</span>(<span class="pl-c1">120</span>)
stockB <span class="pl-k">=</span> <span class="pl-c1">0.01</span><span class="pl-k">/</span><span class="pl-c1">12</span> <span class="pl-k">.+</span> <span class="pl-c1">0.02</span><span class="pl-k">/</span><span class="pl-c1">sqrt</span>(<span class="pl-c1">12</span>) <span class="pl-k">.*</span> <span class="pl-c1">randn</span>(<span class="pl-c1">120</span>)

df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(month<span class="pl-k">=</span>months,stockA<span class="pl-k">=</span>stockA,stockB<span class="pl-k">=</span>stockB)
FP <span class="pl-k">=</span> <span class="pl-c1">FinancialPortfolio</span>(<span class="pl-c1">dictionary</span>([<span class="pl-s"><span class="pl-pds">"</span>stockA<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">0.8</span>,<span class="pl-s"><span class="pl-pds">"</span>stockB<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">0.2</span>]))  <span class="pl-c"><span class="pl-c">#</span> initial portfolio weights</span>

<span class="pl-k">function</span> <span class="pl-en">runportfolio!</span>(FP0,df0)
    T <span class="pl-k">=</span> <span class="pl-c1">nrow</span>(df0)
    df0[<span class="pl-k">!</span>,<span class="pl-c1">:portfolioreturns</span>] <span class="pl-k">=</span> <span class="pl-c1">missings</span>(Float64,T)
    FPreb <span class="pl-k">=</span> <span class="pl-c1">copy</span>(FP0)
    
    <span class="pl-k">for</span> row <span class="pl-k">in</span> <span class="pl-c1">eachrow</span>(df0)
        <span class="pl-k">if</span> row<span class="pl-k">.</span>month <span class="pl-k">==</span> <span class="pl-c1">1</span>   <span class="pl-c"><span class="pl-c">#</span> rebalances each January</span>
            FP0 <span class="pl-k">=</span> <span class="pl-c1">copy</span>(FPreb)
        <span class="pl-k">end</span>
        row<span class="pl-k">.</span>portfolioreturns <span class="pl-k">=</span> <span class="pl-c1">update!</span>(FP0,row)
    <span class="pl-k">end</span>
    <span class="pl-k">return</span> FP0
<span class="pl-k">end</span>

<span class="pl-c1">runportfolio!</span>(FP,df)</pre></div>
</article></div>