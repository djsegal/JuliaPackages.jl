<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-hard-test-problems" class="anchor" aria-hidden="true" href="#hard-test-problems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hard Test Problems</h1>
<p dir="auto">This package implements challenging test problems for testing metaheuristics (evolutionary
algorithms) for single, multi-objective and bilevel optimization.</p>
<p dir="auto"><a href="https://github.com/jmejia8/HardTestProblems.jl/actions"><img src="https://github.com/jmejia8/HardTestProblems.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/jmejia8/HardTestProblems.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/785cc526bfe94863347bae4167ee4a90934d360149633c3221660a6474b3e2f5/68747470733a2f2f636f6465636f762e696f2f67682f6a6d656a6961382f486172645465737450726f626c656d732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/jmejia8/HardTestProblems.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Open the Julia (Julia 1.1 or Later) REPL and press <code>]</code> to open the Pkg prompt. To add this package, use the add command:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; add HardTestProblems"><pre class="notranslate"><code>pkg&gt; add HardTestProblems
</code></pre></div>
<p dir="auto">Or, equivalently, via the <code>Pkg</code> API:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import Pkg; Pkg.add(&quot;HardTestProblems&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>HardTestProblems<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Benchmarks</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> <a href="https://github.com/P-N-Suganthan/2021-RW-MOP">RW-MOP-2021</a>
Real world multi-objective Constrained Optimization Test Suite.</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> <a href="https://github.com/P-N-Suganthan/2020-Bound-Constrained-Opt-Benchmark">CEC2020-BC-SO</a>
Bound-constrained test problems for single-objective optimization.</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> <a href="https://doi.org/10.1016/j.amc.2021.126577" rel="nofollow">PMM</a> Pseudo-feasible solutions in evolutionary bilevel optimization: Test problems and performance assessment</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> <a href="https://doi.org/10.1109/CEC.2012.6256557" rel="nofollow">SMD</a> Scalable test problems for single-objective bilevel optimization.</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> <a href="https://github.com/P-N-Suganthan/CEC2017">CEC2017</a>   Competition on Constrained Real-Parameter Optimization.</li>
</ul>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-rw-mop-2021" class="anchor" aria-hidden="true" href="#rw-mop-2021"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RW-MOP-2021</h3>
<p dir="auto">Use the <code>get_RW_MOP_problem</code> to obtain the objective function and the corresponding
attributes:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using HardTestProblems

julia&gt; HardTestProblems.NAME_OF_PROBLEMS_RW_MOP_2021
50-element Vector{String}:
 &quot;pressure_vessel&quot;
 &quot;vibrating_platform&quot;
 &quot;two_bar_Truss_design_problems&quot;
 &quot;weldan_beam_design&quot;
 ⋮
 &quot;minimization_of_active_power_loss_in_islanded_microgrids_3&quot;
 &quot;power_distribution_system_planning&quot;

julia&gt; f, conf =  get_RW_MOP_problem(1);

julia&gt; conf
Dict{Symbol, Any} with 8 entries:
  :xmin     =&gt; [0.51, 0.51, 10.0, 10.0]
  :xmax     =&gt; [99.49, 99.49, 200.0, 200.0]
  :n        =&gt; 4
  :function =&gt; &quot;pressure_vessel&quot;
  :gn       =&gt; 2
  :hn       =&gt; 0
  :fn       =&gt; 2
  :nadir    =&gt; [3.59649e5, -7330.38]

julia&gt; f(conf[:xmin])
([12.40080078125, -7330.382858376184], [0.0329, 0.1305], [0.0])"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> HardTestProblems

julia<span class="pl-k">&gt;</span> HardTestProblems<span class="pl-k">.</span>NAME_OF_PROBLEMS_RW_MOP_2021
<span class="pl-c1">50</span><span class="pl-k">-</span>element Vector{String}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>pressure_vessel<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>vibrating_platform<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>two_bar_Truss_design_problems<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>weldan_beam_design<span class="pl-pds">"</span></span>
 ⋮
 <span class="pl-s"><span class="pl-pds">"</span>minimization_of_active_power_loss_in_islanded_microgrids_3<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>power_distribution_system_planning<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> f, conf <span class="pl-k">=</span>  <span class="pl-c1">get_RW_MOP_problem</span>(<span class="pl-c1">1</span>);

julia<span class="pl-k">&gt;</span> conf
Dict{Symbol, Any} with <span class="pl-c1">8</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">:xmin</span>     <span class="pl-k">=&gt;</span> [<span class="pl-c1">0.51</span>, <span class="pl-c1">0.51</span>, <span class="pl-c1">10.0</span>, <span class="pl-c1">10.0</span>]
  <span class="pl-c1">:xmax</span>     <span class="pl-k">=&gt;</span> [<span class="pl-c1">99.49</span>, <span class="pl-c1">99.49</span>, <span class="pl-c1">200.0</span>, <span class="pl-c1">200.0</span>]
  <span class="pl-c1">:n</span>        <span class="pl-k">=&gt;</span> <span class="pl-c1">4</span>
  <span class="pl-c1">:function</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>pressure_vessel<span class="pl-pds">"</span></span>
  <span class="pl-c1">:gn</span>       <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>
  <span class="pl-c1">:hn</span>       <span class="pl-k">=&gt;</span> <span class="pl-c1">0</span>
  <span class="pl-c1">:fn</span>       <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>
  <span class="pl-c1">:nadir</span>    <span class="pl-k">=&gt;</span> [<span class="pl-c1">3.59649e5</span>, <span class="pl-k">-</span><span class="pl-c1">7330.38</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">f</span>(conf[<span class="pl-c1">:xmin</span>])
([<span class="pl-c1">12.40080078125</span>, <span class="pl-k">-</span><span class="pl-c1">7330.382858376184</span>], [<span class="pl-c1">0.0329</span>, <span class="pl-c1">0.1305</span>], [<span class="pl-c1">0.0</span>])</pre></div>
<p dir="auto">Note that <code>f</code> is in the form <code>f(x) = Tuple([f1, f2,...], [g1, g2,...], [h1, h2,...])</code>.
A feasible solution is such that <code>gi &lt;= 0</code> and <code>hi = 0</code>.</p>
<h3 dir="auto"><a id="user-content-cec2020-bc-so" class="anchor" aria-hidden="true" href="#cec2020-bc-so"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CEC2020-BC-SO</h3>
<p dir="auto">You can do the following to obtain the problem information:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using HardTestProblems

julia&gt; HardTestProblems.NAME_OF_PROBLEMS_CEC2020
10-element Vector{String}:
 &quot;cec2020_f1&quot;
 &quot;cec2020_f2&quot;
  ⋮
  &quot;cec2020_f10&quot;

julia&gt; f, conf = get_cec2020_problem(1, n=10);

julia&gt; conf
Dict{Symbol, Any} with 8 entries:
  :xmin     =&gt; [-100.0, -100.0, -100.0, -100.0, -100.0, -100.0, -100.0, -100.0, -100.0, -100.0]
  :xmax     =&gt; [100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0]
  :n        =&gt; 10
  :minimum  =&gt; 100
  :function =&gt; &quot;cec2020_f1&quot;
  :gn       =&gt; 0
  :hn       =&gt; 0
  :fn       =&gt; 1

julia&gt; f(conf[:xmin])
2.0983079296144998e11"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> HardTestProblems

julia<span class="pl-k">&gt;</span> HardTestProblems<span class="pl-k">.</span>NAME_OF_PROBLEMS_CEC2020
<span class="pl-c1">10</span><span class="pl-k">-</span>element Vector{String}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>cec2020_f1<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>cec2020_f2<span class="pl-pds">"</span></span>
  ⋮
  <span class="pl-s"><span class="pl-pds">"</span>cec2020_f10<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> f, conf <span class="pl-k">=</span> <span class="pl-c1">get_cec2020_problem</span>(<span class="pl-c1">1</span>, n<span class="pl-k">=</span><span class="pl-c1">10</span>);

julia<span class="pl-k">&gt;</span> conf
Dict{Symbol, Any} with <span class="pl-c1">8</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">:xmin</span>     <span class="pl-k">=&gt;</span> [<span class="pl-k">-</span><span class="pl-c1">100.0</span>, <span class="pl-k">-</span><span class="pl-c1">100.0</span>, <span class="pl-k">-</span><span class="pl-c1">100.0</span>, <span class="pl-k">-</span><span class="pl-c1">100.0</span>, <span class="pl-k">-</span><span class="pl-c1">100.0</span>, <span class="pl-k">-</span><span class="pl-c1">100.0</span>, <span class="pl-k">-</span><span class="pl-c1">100.0</span>, <span class="pl-k">-</span><span class="pl-c1">100.0</span>, <span class="pl-k">-</span><span class="pl-c1">100.0</span>, <span class="pl-k">-</span><span class="pl-c1">100.0</span>]
  <span class="pl-c1">:xmax</span>     <span class="pl-k">=&gt;</span> [<span class="pl-c1">100.0</span>, <span class="pl-c1">100.0</span>, <span class="pl-c1">100.0</span>, <span class="pl-c1">100.0</span>, <span class="pl-c1">100.0</span>, <span class="pl-c1">100.0</span>, <span class="pl-c1">100.0</span>, <span class="pl-c1">100.0</span>, <span class="pl-c1">100.0</span>, <span class="pl-c1">100.0</span>]
  <span class="pl-c1">:n</span>        <span class="pl-k">=&gt;</span> <span class="pl-c1">10</span>
  <span class="pl-c1">:minimum</span>  <span class="pl-k">=&gt;</span> <span class="pl-c1">100</span>
  <span class="pl-c1">:function</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>cec2020_f1<span class="pl-pds">"</span></span>
  <span class="pl-c1">:gn</span>       <span class="pl-k">=&gt;</span> <span class="pl-c1">0</span>
  <span class="pl-c1">:hn</span>       <span class="pl-k">=&gt;</span> <span class="pl-c1">0</span>
  <span class="pl-c1">:fn</span>       <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">f</span>(conf[<span class="pl-c1">:xmin</span>])
<span class="pl-c1">2.0983079296144998e11</span></pre></div>
<p dir="auto">Each problems is defined for dimension <code>n in [2,5,10,15,20,30,50,100]</code>.</p>
<h3 dir="auto"><a id="user-content-pmm" class="anchor" aria-hidden="true" href="#pmm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PMM</h3>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using HardTestProblems

julia&gt; F, f, conf = PMM_get_problem(2,uldim=2,lldim=3);

julia&gt; conf
Dict{Symbol, Any} with 15 entries:
  :follower_optimum      =&gt; 0.0
  :n_inequality_follower =&gt; 0
  :xbest                 =&gt; [0.0, 0.0]
  :problem               =&gt; &quot;PMM2&quot;
  :n_equality_follower   =&gt; 0
  :lldim                 =&gt; 3
  :uldim                 =&gt; 2
  :n_equality_leader     =&gt; 0
  :n_inequality_leader   =&gt; 0
  :xmin                  =&gt; [-10.0, -10.0]
  :leader_optimum        =&gt; 0.0
  :xmax                  =&gt; [10.0, 10.0]
  :ymax                  =&gt; [10.0, 10.0, 10.0]
  :ymin                  =&gt; [-10.0, -10.0, -10.0]
  :ybest                 =&gt; [0.0, 1.41421, 1.73205]
"><pre class="notranslate"><code>julia&gt; using HardTestProblems

julia&gt; F, f, conf = PMM_get_problem(2,uldim=2,lldim=3);

julia&gt; conf
Dict{Symbol, Any} with 15 entries:
  :follower_optimum      =&gt; 0.0
  :n_inequality_follower =&gt; 0
  :xbest                 =&gt; [0.0, 0.0]
  :problem               =&gt; "PMM2"
  :n_equality_follower   =&gt; 0
  :lldim                 =&gt; 3
  :uldim                 =&gt; 2
  :n_equality_leader     =&gt; 0
  :n_inequality_leader   =&gt; 0
  :xmin                  =&gt; [-10.0, -10.0]
  :leader_optimum        =&gt; 0.0
  :xmax                  =&gt; [10.0, 10.0]
  :ymax                  =&gt; [10.0, 10.0, 10.0]
  :ymin                  =&gt; [-10.0, -10.0, -10.0]
  :ybest                 =&gt; [0.0, 1.41421, 1.73205]

</code></pre></div>
<h3 dir="auto"><a id="user-content-smd" class="anchor" aria-hidden="true" href="#smd"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SMD</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using HardTestProblems

julia&gt; F, f, conf = SMD_get_problem(12,uldim=2,lldim=3); # for SMD12

julia&gt; conf
Dict{Symbol, Any} with 14 entries:
  :follower_optimum      =&gt; 4.0
  :n_inequality_follower =&gt; 3
  :xbest                 =&gt; [1.0, 1.0]
  :n_equality_follower   =&gt; 0
  :lldim                 =&gt; 3
  :uldim                 =&gt; 2
  :n_equality_leader     =&gt; 0
  :n_inequality_leader   =&gt; 3
  :xmin                  =&gt; [-5.0, -1.0]
  :leader_optimum        =&gt; 3.0
  :xmax                  =&gt; [10.0, 1.0]
  :ymax                  =&gt; [10.0, 10.0, 0.785388]
  :ymin                  =&gt; [-5.0, -5.0, -0.785388]
  :ybest                 =&gt; [1.0, 1.0, 0.0]

julia&gt; F(conf[:xbest], conf[:ybest]) # upper level function
(3.0, [-0.0, -0.0, -1.0], [0.0])

julia&gt; f(conf[:xbest], conf[:ybest]) # lower level function
(4.0, [-0.0, -0.0, -0.0], [0.0])
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> HardTestProblems

julia<span class="pl-k">&gt;</span> F, f, conf <span class="pl-k">=</span> <span class="pl-c1">SMD_get_problem</span>(<span class="pl-c1">12</span>,uldim<span class="pl-k">=</span><span class="pl-c1">2</span>,lldim<span class="pl-k">=</span><span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">#</span> for SMD12</span>

julia<span class="pl-k">&gt;</span> conf
Dict{Symbol, Any} with <span class="pl-c1">14</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">:follower_optimum</span>      <span class="pl-k">=&gt;</span> <span class="pl-c1">4.0</span>
  <span class="pl-c1">:n_inequality_follower</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">3</span>
  <span class="pl-c1">:xbest</span>                 <span class="pl-k">=&gt;</span> [<span class="pl-c1">1.0</span>, <span class="pl-c1">1.0</span>]
  <span class="pl-c1">:n_equality_follower</span>   <span class="pl-k">=&gt;</span> <span class="pl-c1">0</span>
  <span class="pl-c1">:lldim</span>                 <span class="pl-k">=&gt;</span> <span class="pl-c1">3</span>
  <span class="pl-c1">:uldim</span>                 <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>
  <span class="pl-c1">:n_equality_leader</span>     <span class="pl-k">=&gt;</span> <span class="pl-c1">0</span>
  <span class="pl-c1">:n_inequality_leader</span>   <span class="pl-k">=&gt;</span> <span class="pl-c1">3</span>
  <span class="pl-c1">:xmin</span>                  <span class="pl-k">=&gt;</span> [<span class="pl-k">-</span><span class="pl-c1">5.0</span>, <span class="pl-k">-</span><span class="pl-c1">1.0</span>]
  <span class="pl-c1">:leader_optimum</span>        <span class="pl-k">=&gt;</span> <span class="pl-c1">3.0</span>
  <span class="pl-c1">:xmax</span>                  <span class="pl-k">=&gt;</span> [<span class="pl-c1">10.0</span>, <span class="pl-c1">1.0</span>]
  <span class="pl-c1">:ymax</span>                  <span class="pl-k">=&gt;</span> [<span class="pl-c1">10.0</span>, <span class="pl-c1">10.0</span>, <span class="pl-c1">0.785388</span>]
  <span class="pl-c1">:ymin</span>                  <span class="pl-k">=&gt;</span> [<span class="pl-k">-</span><span class="pl-c1">5.0</span>, <span class="pl-k">-</span><span class="pl-c1">5.0</span>, <span class="pl-k">-</span><span class="pl-c1">0.785388</span>]
  <span class="pl-c1">:ybest</span>                 <span class="pl-k">=&gt;</span> [<span class="pl-c1">1.0</span>, <span class="pl-c1">1.0</span>, <span class="pl-c1">0.0</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">F</span>(conf[<span class="pl-c1">:xbest</span>], conf[<span class="pl-c1">:ybest</span>]) <span class="pl-c"><span class="pl-c">#</span> upper level function</span>
(<span class="pl-c1">3.0</span>, [<span class="pl-k">-</span><span class="pl-c1">0.0</span>, <span class="pl-k">-</span><span class="pl-c1">0.0</span>, <span class="pl-k">-</span><span class="pl-c1">1.0</span>], [<span class="pl-c1">0.0</span>])

julia<span class="pl-k">&gt;</span> <span class="pl-c1">f</span>(conf[<span class="pl-c1">:xbest</span>], conf[<span class="pl-c1">:ybest</span>]) <span class="pl-c"><span class="pl-c">#</span> lower level function</span>
(<span class="pl-c1">4.0</span>, [<span class="pl-k">-</span><span class="pl-c1">0.0</span>, <span class="pl-k">-</span><span class="pl-c1">0.0</span>, <span class="pl-k">-</span><span class="pl-c1">0.0</span>], [<span class="pl-c1">0.0</span>])
</pre></div>
</article></div>