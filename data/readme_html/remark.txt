<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-remark" class="anchor" aria-hidden="true" href="#remark"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Remark</h1>
<p><a href="https://travis-ci.org/piever/Remark.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a11e4fceee7616daf28683d05a738b205ce2f098c4596332e90374ea73c8ff0d/68747470733a2f2f7472617669732d63692e6f72672f7069657665722f52656d61726b2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/piever/Remark.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/piever/Remark.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/4a0f1f055d7c1b5a9785de6b1e916dd3c09e6f6782fa6e46ee93944618fdb78e/687474703a2f2f636f6465636f762e696f2f6769746875622f7069657665722f52656d61726b2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/piever/Remark.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>A simple Julia package to create presentations from markdown using <a href="https://github.com/gnab/remark">Remark</a>.</p>
<h2><a id="user-content-example-use" class="anchor" aria-hidden="true" href="#example-use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example use</h2>
<p>To install type the following command in the Julia Pkg REPL</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(v1.0) pkg&gt; add Remark
"><pre>(v1.<span class="pl-c1">0</span>) pkg<span class="pl-k">&gt;</span> add Remark</pre></div>
<p>Check out the <a href="https://github.com/gnab/remark/wiki/Markdown">Remark docs</a> on how to write the markdown for a Remark slideshow. The most important thing is to use <code>---</code> to separate slides; an example markdown file can be found <a href="https://github.com/piever/Remark.jl/blob/master/examples/markdown/src/index.md">here</a>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="import Remark

# Generate a presentation (html+markdown) from the markdown template
# and save it in the folder &quot;presentation&quot;.
markdown_template = joinpath(dirname(dirname(pathof(Remark))), &quot;examples&quot;, &quot;markdown&quot;)
cp(markdown_template, &quot;presentation&quot;)
slideshowdir = Remark.slideshow(&quot;presentation&quot;,
                                options = Dict(&quot;ratio&quot; =&gt; &quot;16:9&quot;),
                                title = &quot;My beautiful slides&quot;)

# Open presentation in default browser.
Remark.open(slideshowdir)
"><pre><span class="pl-k">import</span> Remark

<span class="pl-c"><span class="pl-c">#</span> Generate a presentation (html+markdown) from the markdown template</span>
<span class="pl-c"><span class="pl-c">#</span> and save it in the folder "presentation".</span>
markdown_template <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">pathof</span>(Remark))), <span class="pl-s"><span class="pl-pds">"</span>examples<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>markdown<span class="pl-pds">"</span></span>)
<span class="pl-c1">cp</span>(markdown_template, <span class="pl-s"><span class="pl-pds">"</span>presentation<span class="pl-pds">"</span></span>)
slideshowdir <span class="pl-k">=</span> Remark<span class="pl-k">.</span><span class="pl-c1">slideshow</span>(<span class="pl-s"><span class="pl-pds">"</span>presentation<span class="pl-pds">"</span></span>,
                                options <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>ratio<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>16:9<span class="pl-pds">"</span></span>),
                                title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>My beautiful slides<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Open presentation in default browser.</span>
Remark<span class="pl-k">.</span><span class="pl-c1">open</span>(slideshowdir)</pre></div>
<p>The <code>presentation</code> folder will also include a <code>make.jl</code> file that can be used to automatically rebuild the presentation (it is enough to <code>include</code> it).
Of course, the <code>make.jl</code> file can be customized to fit your needs, e.g., setting keyword arguments of <code>Remark.slideshow</code> or activating a <code>Project.toml</code> file for reproducibility.</p>
<p>It is also possible to use a julia file as a starting point (i.e., <code>index.jl</code>), thanks to the <a href="https://github.com/fredrikekre/Literate.jl">Literate</a> package.
As explained in the Literate documentation, add a comment to slides corresponding to markdown. A slide separator is now <code># ---</code> for example.</p>
<p>To get started, simple do:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="import Remark

# Generate a presentation (html+markdown) from the julia template
# and save it in the folder &quot;julia_presentation&quot;.
julia_template = joinpath(dirname(dirname(pathof(Remark))), &quot;examples&quot;, &quot;julia&quot;)
cp(julia_template, &quot;julia_presentation&quot;)
slideshowdir = Remark.slideshow(&quot;julia_presentation&quot;,
                                options = Dict(&quot;ratio&quot; =&gt; &quot;16:9&quot;),
                                title = &quot;My beautiful slides&quot;)

# Open presentation in default browser.
Remark.open(slideshowdir)
"><pre><span class="pl-k">import</span> Remark

<span class="pl-c"><span class="pl-c">#</span> Generate a presentation (html+markdown) from the julia template</span>
<span class="pl-c"><span class="pl-c">#</span> and save it in the folder "julia_presentation".</span>
julia_template <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">pathof</span>(Remark))), <span class="pl-s"><span class="pl-pds">"</span>examples<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>julia<span class="pl-pds">"</span></span>)
<span class="pl-c1">cp</span>(julia_template, <span class="pl-s"><span class="pl-pds">"</span>julia_presentation<span class="pl-pds">"</span></span>)
slideshowdir <span class="pl-k">=</span> Remark<span class="pl-k">.</span><span class="pl-c1">slideshow</span>(<span class="pl-s"><span class="pl-pds">"</span>julia_presentation<span class="pl-pds">"</span></span>,
                                options <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>ratio<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>16:9<span class="pl-pds">"</span></span>),
                                title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>My beautiful slides<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Open presentation in default browser.</span>
Remark<span class="pl-k">.</span><span class="pl-c1">open</span>(slideshowdir)</pre></div>
<h2><a id="user-content-external-assets-styling-and-customization" class="anchor" aria-hidden="true" href="#external-assets-styling-and-customization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>External assets, styling, and customization</h2>
<p>If you need extra assets, simply add a <code>assets</code> folder inside <code>src</code>. It will be copied in the <code>build</code> folder automatically.</p>
<p>If you want to use a custom stylesheet rather than the default, simply add a <code>style.css</code> file in your <code>src</code> folder.
Your overall folder structure would be:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="presentation/
├── src/
│   └── index.md (or .jl)
│   └── style.css
│   └── assets/
├── build/ (generated by the package)
│   └── index.html
│   └── style.css
│   └── assets/
"><pre><code>presentation/
├── src/
│   └── index.md (or .jl)
│   └── style.css
│   └── assets/
├── build/ (generated by the package)
│   └── index.html
│   └── style.css
│   └── assets/
</code></pre></div>
<p>The title of the presentation can be customized via the <code>title</code> keyword.
<a href="https://github.com/gnab/remark/wiki/Configuration#api">Remark.js options</a> can be set using the <code>options</code> keyword.
<a href="https://github.com/JuliaDocs/Documenter.jl">Documenter</a> is run on the markdown by default: to keep the markdown as is, use <code>documenter=false</code>.</p>
<h2><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h2>
<ul>
<li>
<p>The <code>slideshow</code> command creates a slideshow that uses local javascript libraries: the resulting presentation folder can be opened offline.</p>
</li>
<li>
<p>All features of Documenter are automatically available here, for example use <code># hide</code> at the end of a line of code for it to not appear in the slideshow (useful for saving plots, see <a href="https://github.com/piever/Remark.jl/blob/master/examples/markdown/src/index.md">example</a>).</p>
</li>
</ul>
</article></div>