<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-lumberjackjl" class="anchor" aria-hidden="true" href="#lumberjackjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Lumberjack.jl</h1>
<p dir="auto"><a href="https://travis-ci.org/WestleyArgentum/Lumberjack.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e5753776f11b0085e519f2139e27799d51b41bd670d2371a9be75b6d76940837/68747470733a2f2f7472617669732d63692e6f72672f576573746c6579417267656e74756d2f4c756d6265726a61636b2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/WestleyArgentum/Lumberjack.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick Start</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;Lumberjack&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Lumberjack<span class="pl-pds">"</span></span>)</pre></div>
<h3 dir="auto"><a id="user-content-create-logs" class="anchor" aria-hidden="true" href="#create-logs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Create logs</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Lumberjack

julia&gt; debug(&quot;something innocuous happened!&quot;)
2013-12-02T19:39:16.123 UTC - debug:&quot;something innocuous happened!&quot;

julia&gt; info(&quot;using more memory!&quot;, {:mem_allocated =&gt; 9001, :mem_left =&gt; 22})
2013-12-02T19:39:21.345 UTC - info:&quot;using more memory!&quot; mem_allocated:9001 mem_left:22

julia&gt; warn(&quot;running really low on memory...&quot;, {:mem_left =&gt; &quot;22 k&quot;})
2013-12-02T19:39:44.456 UTC - warn:&quot;running really low on memory...&quot; mem_left:&quot;22 k&quot;

julia&gt; try
         error(&quot;OUT OF MEMORY - IT'S ALL OVER - ARRGGGHHHH&quot;)
       catch err
         # Acts like Base.error, throws an `ErrorException`
       end
2013-12-02T19:39:48.678 UTC - error:&quot;OUT OF MEMORY - IT'S ALL OVER - ARRGGGHHHH&quot;

julia&gt; log(&quot;info&quot;, &quot;use `log` for user-defined modes, or to be verbose.&quot;)
2013-12-12T23:58:56.890 UTC - info:&quot;use `log` for user-defined modes, or to be verbose.&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Lumberjack

julia<span class="pl-k">&gt;</span> <span class="pl-c1">debug</span>(<span class="pl-s"><span class="pl-pds">"</span>something innocuous happened!<span class="pl-pds">"</span></span>)
<span class="pl-c1">2013</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">02</span>T19<span class="pl-k">:</span><span class="pl-c1">39</span><span class="pl-k">:</span><span class="pl-c1">16.123</span> UTC <span class="pl-k">-</span> debug<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">"</span>something innocuous happened!<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">info</span>(<span class="pl-s"><span class="pl-pds">"</span>using more memory!<span class="pl-pds">"</span></span>, {<span class="pl-c1">:mem_allocated</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">9001</span>, <span class="pl-c1">:mem_left</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">22</span>})
<span class="pl-c1">2013</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">02</span>T19<span class="pl-k">:</span><span class="pl-c1">39</span><span class="pl-k">:</span><span class="pl-c1">21.345</span> UTC <span class="pl-k">-</span> info<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">"</span>using more memory!<span class="pl-pds">"</span></span> mem_allocated<span class="pl-k">:</span><span class="pl-c1">9001</span> mem_left<span class="pl-k">:</span><span class="pl-c1">22</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">"</span>running really low on memory...<span class="pl-pds">"</span></span>, {<span class="pl-c1">:mem_left</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>22 k<span class="pl-pds">"</span></span>})
<span class="pl-c1">2013</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">02</span>T19<span class="pl-k">:</span><span class="pl-c1">39</span><span class="pl-k">:</span><span class="pl-c1">44.456</span> UTC <span class="pl-k">-</span> warn<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">"</span>running really low on memory...<span class="pl-pds">"</span></span> mem_left<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">"</span>22 k<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">try</span>
         <span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">"</span>OUT OF MEMORY - IT'S ALL OVER - ARRGGGHHHH<span class="pl-pds">"</span></span>)
       <span class="pl-k">catch</span> err
         <span class="pl-c"><span class="pl-c">#</span> Acts like Base.error, throws an `ErrorException`</span>
       <span class="pl-k">end</span>
<span class="pl-c1">2013</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">02</span>T19<span class="pl-k">:</span><span class="pl-c1">39</span><span class="pl-k">:</span><span class="pl-c1">48.678</span> UTC <span class="pl-k">-</span> error<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">"</span>OUT OF MEMORY - IT'S ALL OVER - ARRGGGHHHH<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">"</span>info<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>use `log` for user-defined modes, or to be verbose.<span class="pl-pds">"</span></span>)
<span class="pl-c1">2013</span><span class="pl-k">-</span><span class="pl-c1">12</span><span class="pl-k">-</span><span class="pl-c1">12</span>T23<span class="pl-k">:</span><span class="pl-c1">58</span><span class="pl-k">:</span><span class="pl-c1">56.890</span> UTC <span class="pl-k">-</span> info<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">"</span>use `log` for user-defined modes, or to be verbose.<span class="pl-pds">"</span></span></pre></div>
<h3 dir="auto"><a id="user-content-add-and-remove-timbertrucks" class="anchor" aria-hidden="true" href="#add-and-remove-timbertrucks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Add and remove <code>TimberTrucks</code></h3>
<p dir="auto">Logs are brought to different output streams by <code>TimberTrucks</code>. To create a truck that will dump logs into a file, simply:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; add_truck(LumberjackTruck(&quot;mylogfile.log&quot;), &quot;my-file-logger&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">add_truck</span>(<span class="pl-c1">LumberjackTruck</span>(<span class="pl-s"><span class="pl-pds">"</span>mylogfile.log<span class="pl-pds">"</span></span>), <span class="pl-s"><span class="pl-pds">"</span>my-file-logger<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Now there is a truck named "my-file-logger", and it will write all of your logs to <code>mylogfile.log</code>. Your logs will still show up in the console, however, because -by default- there is a truck named "console" already hard at work. Remove it by calling:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; remove_truck(&quot;console&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">remove_truck</span>(<span class="pl-s"><span class="pl-pds">"</span>console<span class="pl-pds">"</span></span>)</pre></div>
<h3 dir="auto"><a id="user-content-manage-logging-modeslevels" class="anchor" aria-hidden="true" href="#manage-logging-modeslevels"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Manage logging modes/levels</h3>
<h4 dir="auto"><a id="user-content-defining-modes" class="anchor" aria-hidden="true" href="#defining-modes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Defining Modes</h4>
<p dir="auto">Timber trucks and saws can both be configured to work only at/above certain log levels/modes.</p>
<p dir="auto">There are 4 built-in modes: <code>["debug", "info", "warn", "error"]</code>. If you'd like to use logging levels/modes beyond the four default modes, you'll want to tell your lumber mill (Lumberjack's log controller) what order the modes are in. You can do this with a call to <code>configure</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; configure(; modes=[&quot;debug&quot;, &quot;info&quot;, &quot;notice&quot;, &quot;warn&quot;, &quot;error&quot;, &quot;crit&quot;, &quot;alert&quot;, &quot;emerg&quot;])"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">configure</span>(; modes<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>debug<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>info<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>notice<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>crit<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>alert<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>emerg<span class="pl-pds">"</span></span>])</pre></div>
<p dir="auto">This way, if you only want a truck to log something at warning-level or above and it sees a "notice" message, the truck will know not to log it.</p>
<h4 dir="auto"><a id="user-content-timber-truck-modes" class="anchor" aria-hidden="true" href="#timber-truck-modes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Timber Truck Modes</h4>
<p dir="auto">Each timber truck is configured to log messages <em>at or above</em> a certain level/mode, and by default they will log everything. To create a timber truck that will only record warnings and errors, you can:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; add_truck(LumberjackTruck(STDOUT, &quot;warn&quot;), &quot;dangerous-logger&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">add_truck</span>(<span class="pl-c1">LumberjackTruck</span>(STDOUT, <span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>), <span class="pl-s"><span class="pl-pds">"</span>dangerous-logger<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Or to configure an existing truck, you can call <code>configure</code> and specify the truck in question:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; configure(timber_truck; mode = &quot;warn&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">configure</span>(timber_truck; mode <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">For additional examples, see the <a href="#log-level-example">Log Level Example</a> below.</p>
<h4 dir="auto"><a id="user-content-saw-modes" class="anchor" aria-hidden="true" href="#saw-modes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Saw Modes</h4>
<p dir="auto">When saws are added, they can also be configured such that they are only included for logs at or above a certain level. For example, you may want to include a stack trace for each log that's a warning or above:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; add_saw(Saw(Lumberjack.stacktrace_saw, &quot;warn&quot;))"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">add_saw</span>(<span class="pl-c1">Saw</span>(Lumberjack<span class="pl-k">.</span>stacktrace_saw, <span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>))</pre></div>
<p dir="auto">For additional examples, see the <a href="#log-level-example">Log Level Example</a> below.</p>
<h3 dir="auto"><a id="user-content-logging-options" class="anchor" aria-hidden="true" href="#logging-options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Logging Options</h3>
<p dir="auto"><code>Lumberjack.add_truck</code> provides an optional third <code>Dict</code> argument. Possible keys are:</p>
<h4 dir="auto"><a id="user-content-is_colorized" class="anchor" aria-hidden="true" href="#is_colorized"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>is_colorized</h4>
<p dir="auto">Colors can be added enabled using the following:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="add_truck(LumberjackTruck(STDOUT, nothing, {:is_colorized =&gt; true}), &quot;console&quot;)"><pre><span class="pl-c1">add_truck</span>(<span class="pl-c1">LumberjackTruck</span>(STDOUT, <span class="pl-c1">nothing</span>, {<span class="pl-c1">:is_colorized</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">true</span>}), <span class="pl-s"><span class="pl-pds">"</span>console<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="img/colors.png"><img src="img/colors.png" alt="colors" style="max-width: 100%;"></a></p>
<p dir="auto">By default the following colors are used:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="{&quot;debug&quot; =&gt; :cyan, &quot;info&quot; =&gt; :blue, &quot;warn&quot; =&gt; :yellow, &quot;error&quot; =&gt; :red}"><pre>{<span class="pl-s"><span class="pl-pds">"</span>debug<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:cyan</span>, <span class="pl-s"><span class="pl-pds">"</span>info<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:blue</span>, <span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:yellow</span>, <span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:red</span>}</pre></div>
<h4 dir="auto"><a id="user-content-colors" class="anchor" aria-hidden="true" href="#colors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>colors</h4>
<p dir="auto">Custom colors/log levels can also be specified:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="add_truck(LumberjackTruck(STDOUT, nothing, :colors =&gt; {&quot;debug&quot; =&gt; :black, &quot;info&quot; =&gt; :blue, &quot;warn&quot; =&gt; :yellow, &quot;error&quot; =&gt; :red, &quot;crazy&quot; =&gt; :green}), &quot;console&quot;)"><pre><span class="pl-c1">add_truck</span>(<span class="pl-c1">LumberjackTruck</span>(STDOUT, <span class="pl-c1">nothing</span>, <span class="pl-c1">:colors</span> <span class="pl-k">=&gt;</span> {<span class="pl-s"><span class="pl-pds">"</span>debug<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:black</span>, <span class="pl-s"><span class="pl-pds">"</span>info<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:blue</span>, <span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:yellow</span>, <span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:red</span>, <span class="pl-s"><span class="pl-pds">"</span>crazy<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:green</span>}), <span class="pl-s"><span class="pl-pds">"</span>console<span class="pl-pds">"</span></span>)</pre></div>
<h4 dir="auto"><a id="user-content-uppercase" class="anchor" aria-hidden="true" href="#uppercase"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>uppercase</h4>
<p dir="auto">Log levels can be made uppercase (INFO vs info, etc.) with the following option:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="add_truck(LumberjackTruck(STDOUT, nothing, {:uppercase =&gt; true}), &quot;console&quot;)"><pre><span class="pl-c1">add_truck</span>(<span class="pl-c1">LumberjackTruck</span>(STDOUT, <span class="pl-c1">nothing</span>, {<span class="pl-c1">:uppercase</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">true</span>}), <span class="pl-s"><span class="pl-pds">"</span>console<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Architecture</h2>
<p dir="auto">There are three main components of Lumberjack.jl that you can manipulate:</p>
<h3 dir="auto"><a id="user-content-lumbermill" class="anchor" aria-hidden="true" href="#lumbermill"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LumberMill</h3>
<p dir="auto">A lumber mill holds information needed to manage the whole process of creating and storing logs. There is a global <code>_lumber_mill</code> inside the <code>Lumberjack</code> module and, in all likelyhood, you wont need to create another. All exported api methods that accept a <code>LumberMill</code> will be overloaded to use <code>_lumber_mill</code> by default.</p>
<h3 dir="auto"><a id="user-content-saw-functions" class="anchor" aria-hidden="true" href="#saw-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Saw functions</h3>
<p dir="auto">A saw function simply takes in a dict of parameters, adds or removes things, and then returns the dict back. By default, the <code>date_saw</code> is applied to logs that come in and appends <code>date =&gt; DateTime.now()</code>.</p>
<h3 dir="auto"><a id="user-content-timbertruck" class="anchor" aria-hidden="true" href="#timbertruck"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TimberTruck</h3>
<p dir="auto">Timber trucks are used to send logs to their final destinations (files, the console, etc). A timber truck inherits from the abstract type <code>TimberTruck</code> and overloads the <code>log(t::TimberTruck, args::Dict)</code> function. By default, the framework will create a <code>LumberjackLog</code> truck that will print <code>args</code> as a string of <code>key:value</code> pairs to STDOUT.</p>
<h2 dir="auto"><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>API</h2>
<h3 dir="auto"><a id="user-content-logging" class="anchor" aria-hidden="true" href="#logging"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Logging</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="log(lm::LumberMill, mode::String, msg::String, args::Dict)"><pre><span class="pl-c1">log</span>(lm<span class="pl-k">::</span><span class="pl-c1">LumberMill</span>, mode<span class="pl-k">::</span><span class="pl-c1">String</span>, msg<span class="pl-k">::</span><span class="pl-c1">String</span>, args<span class="pl-k">::</span><span class="pl-c1">Dict</span>)</pre></div>
<ul dir="auto">
<li><code>mode</code> is a string like "debug", "info", "warn", "error", etc</li>
<li><code>msg</code> is an explanative message about what happened</li>
<li><code>args</code> is an optional dictionary of data to be recorded alongside <code>msg</code></li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="debug(lm::LumberMill, msg::String, args::Dict)
info(lm::LumberMill, msg::String, args::Dict)
warn(lm::LumberMill, msg::String, args::Dict)
error(lm::LumberMill, msg::String, args::Dict)"><pre><span class="pl-c1">debug</span>(lm<span class="pl-k">::</span><span class="pl-c1">LumberMill</span>, msg<span class="pl-k">::</span><span class="pl-c1">String</span>, args<span class="pl-k">::</span><span class="pl-c1">Dict</span>)
<span class="pl-c1">info</span>(lm<span class="pl-k">::</span><span class="pl-c1">LumberMill</span>, msg<span class="pl-k">::</span><span class="pl-c1">String</span>, args<span class="pl-k">::</span><span class="pl-c1">Dict</span>)
<span class="pl-c1">warn</span>(lm<span class="pl-k">::</span><span class="pl-c1">LumberMill</span>, msg<span class="pl-k">::</span><span class="pl-c1">String</span>, args<span class="pl-k">::</span><span class="pl-c1">Dict</span>)
<span class="pl-c1">error</span>(lm<span class="pl-k">::</span><span class="pl-c1">LumberMill</span>, msg<span class="pl-k">::</span><span class="pl-c1">String</span>, args<span class="pl-k">::</span><span class="pl-c1">Dict</span>)</pre></div>
<ul dir="auto">
<li>each call <code>log</code> with <code>mode</code> filled in appropriately</li>
</ul>
<h3 dir="auto"><a id="user-content-saws" class="anchor" aria-hidden="true" href="#saws"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Saws</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="add_saw(lm::LumberMill, saw::Saw, index::Integer)
add_saw(lm::LumberMill, saw_fn::Function, index::Integer)"><pre><span class="pl-c1">add_saw</span>(lm<span class="pl-k">::</span><span class="pl-c1">LumberMill</span>, saw<span class="pl-k">::</span><span class="pl-c1">Saw</span>, index<span class="pl-k">::</span><span class="pl-c1">Integer</span>)
<span class="pl-c1">add_saw</span>(lm<span class="pl-k">::</span><span class="pl-c1">LumberMill</span>, saw_fn<span class="pl-k">::</span><span class="pl-c1">Function</span>, index<span class="pl-k">::</span><span class="pl-c1">Integer</span>)</pre></div>
<ul dir="auto">
<li><code>index</code> is optional and will default to the end of the saw list</li>
</ul>
<p dir="auto">Typically when adding a saw you will simply specify the saw function itself, but if you'd like to limit your saw to certain logging levels/modes then you'll want to use the <code>Lumberjack.Saw</code> type. See the <a href="#log-level-example">Log Level Example</a> below.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="remove_saw(lm::LumberMill, index)"><pre><span class="pl-c1">remove_saw</span>(lm<span class="pl-k">::</span><span class="pl-c1">LumberMill</span>, index)</pre></div>
<ul dir="auto">
<li><code>index</code> is optional, by default the last saw in the list will be removed</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="remove_saws(lm::LumberMill)  # removes ALL saws currently in use"><pre><span class="pl-c1">remove_saws</span>(lm<span class="pl-k">::</span><span class="pl-c1">LumberMill</span>)  <span class="pl-c"><span class="pl-c">#</span> removes ALL saws currently in use</span></pre></div>
<h3 dir="auto"><a id="user-content-trucks" class="anchor" aria-hidden="true" href="#trucks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Trucks</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="add_truck(lm::LumberMill, truck::TimberTruck, name)"><pre><span class="pl-c1">add_truck</span>(lm<span class="pl-k">::</span><span class="pl-c1">LumberMill</span>, truck<span class="pl-k">::</span><span class="pl-c1">TimberTruck</span>, name)</pre></div>
<ul dir="auto">
<li><code>name</code> is optional and will default to a unique id</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="remove_truck(lm::LumberMill, name)"><pre><span class="pl-c1">remove_truck</span>(lm<span class="pl-k">::</span><span class="pl-c1">LumberMill</span>, name)</pre></div>
<ul dir="auto">
<li><code>name</code> is the id associated with the truck to be removed</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="remove_trucks(lm::LumberMill)  # removes ALL trucks currently in use"><pre><span class="pl-c1">remove_trucks</span>(lm<span class="pl-k">::</span><span class="pl-c1">LumberMill</span>)  <span class="pl-c"><span class="pl-c">#</span> removes ALL trucks currently in use</span></pre></div>
<h3 dir="auto"><a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Configuration</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="configure(lm::LumberMill; modes = [&quot;debug&quot;, &quot;info&quot;, &quot;warn&quot;, &quot;error&quot;])"><pre><span class="pl-c1">configure</span>(lm<span class="pl-k">::</span><span class="pl-c1">LumberMill</span>; modes <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>debug<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>info<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span>])</pre></div>
<ul dir="auto">
<li><code>modes</code> is an ordered array of logging levels</li>
</ul>
<h2 dir="auto"><a id="user-content-recipes-and-examples" class="anchor" aria-hidden="true" href="#recipes-and-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Recipes and Examples</h2>
<h3 dir="auto"><a id="user-content-including-additional-fields" class="anchor" aria-hidden="true" href="#including-additional-fields"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Including Additional Fields</h3>
<p dir="auto">Additional parameters may be specified in calls to <code>log</code> (and <code>debug</code>, <code>info</code>, <code>warn</code>, and <code>error</code>) by passing a <code>Dict</code> as the final positional argument. This is useful if you'd like to specify values for fields other than <code>mode</code> and <code>msg</code> that are not provided by saws.</p>
<p dir="auto">These additional parameters can also be specified with keyword arguments:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Lumberjack

# The easy way.
julia&gt; Lumberjack.warn(&quot;Something happened.&quot;; id=&quot;LoggingTest&quot;, impact=&quot;None, really.&quot;, resolve=&quot;Next steps.&quot;, cause=&quot;Needed an example.&quot;)
2015-11-16T15:23:54 - warn: Something happened. resolve: &quot;Next steps.&quot; id: &quot;LoggingTest&quot; cause: &quot;Needed an example.&quot; impact: &quot;None, really.&quot;

# The hard(er) way.
julia&gt; Lumberjack.warn(&quot;Something happened.&quot;, Dict{Any, Any}(:id=&gt;&quot;LoggingTest&quot;, :impact=&gt;&quot;None, really.&quot;, :resolve=&gt;&quot;Next steps.&quot;, :cause=&gt;&quot;Needed an example.&quot;))
2015-11-16T15:24:54 - warn: Something happened. resolve: &quot;Next steps.&quot; id: &quot;LoggingTest&quot; cause: &quot;Needed an example.&quot; impact: &quot;None, really.&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Lumberjack

<span class="pl-c"><span class="pl-c">#</span> The easy way.</span>
julia<span class="pl-k">&gt;</span> Lumberjack<span class="pl-k">.</span><span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">"</span>Something happened.<span class="pl-pds">"</span></span>; id<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>LoggingTest<span class="pl-pds">"</span></span>, impact<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>None, really.<span class="pl-pds">"</span></span>, resolve<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Next steps.<span class="pl-pds">"</span></span>, cause<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Needed an example.<span class="pl-pds">"</span></span>)
<span class="pl-c1">2015</span><span class="pl-k">-</span><span class="pl-c1">11</span><span class="pl-k">-</span><span class="pl-c1">16</span>T15<span class="pl-k">:</span><span class="pl-c1">23</span><span class="pl-k">:</span><span class="pl-c1">54</span> <span class="pl-k">-</span> warn<span class="pl-k">:</span> Something happened. resolve<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>Next steps.<span class="pl-pds">"</span></span> id<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>LoggingTest<span class="pl-pds">"</span></span> cause<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>Needed an example.<span class="pl-pds">"</span></span> impact<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>None, really.<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> The hard(er) way.</span>
julia<span class="pl-k">&gt;</span> Lumberjack<span class="pl-k">.</span><span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">"</span>Something happened.<span class="pl-pds">"</span></span>, <span class="pl-c1">Dict</span><span class="pl-c1">{Any, Any}</span>(<span class="pl-c1">:id</span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>LoggingTest<span class="pl-pds">"</span></span>, <span class="pl-c1">:impact</span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>None, really.<span class="pl-pds">"</span></span>, <span class="pl-c1">:resolve</span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Next steps.<span class="pl-pds">"</span></span>, <span class="pl-c1">:cause</span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Needed an example.<span class="pl-pds">"</span></span>))
<span class="pl-c1">2015</span><span class="pl-k">-</span><span class="pl-c1">11</span><span class="pl-k">-</span><span class="pl-c1">16</span>T15<span class="pl-k">:</span><span class="pl-c1">24</span><span class="pl-k">:</span><span class="pl-c1">54</span> <span class="pl-k">-</span> warn<span class="pl-k">:</span> Something happened. resolve<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>Next steps.<span class="pl-pds">"</span></span> id<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>LoggingTest<span class="pl-pds">"</span></span> cause<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>Needed an example.<span class="pl-pds">"</span></span> impact<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>None, really.<span class="pl-pds">"</span></span></pre></div>
<h3 dir="auto"><a id="user-content-log-level-example" class="anchor" aria-hidden="true" href="#log-level-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Log Level Example</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Lumberjack

# We already have console output of all modes/log levels via the default console truck.

# Define some additional log levels.
julia&gt; configure(; modes=[&quot;debug&quot;, &quot;info&quot;, &quot;warn&quot;, &quot;error&quot;, &quot;crit&quot;])

# Let's add a truck that will ignore debug/info messages (only outputting info-level and up).
julia&gt; add_truck(LumberjackTruck(STDOUT, &quot;info&quot;), &quot;new-logger&quot;)
Lumberjack.LumberjackTruck(Base.TTY(open, 0 bytes waiting),&quot;info&quot;,Dict{Any,Any}(:is_colorized=&gt;false,:uppercase=&gt;false))

# Let's add another that will only output logs at warning-level and above.
julia&gt; add_truck(JsonTruck(STDOUT, &quot;warn&quot;), &quot;json-logger&quot;)
Lumberjack.JsonTruck(Base.TTY(open, 0 bytes waiting),&quot;warn&quot;)

# Add the function call saw to each log entry that is error-level or above.
add_saw(Saw(Lumberjack.fn_call_saw, &quot;error&quot;))
2-element Array{Lumberjack.Saw,1}:
 Lumberjack.Saw(Lumberjack.msec_date_saw,nothing)
 Lumberjack.Saw(Lumberjack.fn_call_saw,&quot;error&quot;)

# Crticial messages will show up for all three trucks: json-logger, new-logger, console (default).
julia&gt; log(&quot;crit&quot;, &quot;Message&quot;)
{&quot;date&quot;:&quot;2015-11-19T11:24:31&quot;,&quot;lookup&quot;:{&quot;name&quot;:&quot;eval_user_input&quot;,&quot;file&quot;:&quot;REPL.jl&quot;,&quot;line&quot;:62},&quot;msg&quot;:&quot;Message&quot;,&quot;mode&quot;:&quot;crit&quot;}
2015-11-19T11:24:31 - eval_user_input@REPL.jl:62 - crit: Message
2015-11-19T11:24:31 - eval_user_input@REPL.jl:62 - crit: Message

# Warning messages also show up for all trucks (but without function call information).
julia&gt; log(&quot;warn&quot;, &quot;Message&quot;)
{&quot;date&quot;:&quot;2015-11-19T11:24:49&quot;,&quot;msg&quot;:&quot;Message&quot;,&quot;mode&quot;:&quot;warn&quot;}
2015-11-19T11:24:49 - warn: Message
2015-11-19T11:24:49 - warn: Message

# Info is less important than a warning, so won't show up for new-logger.
julia&gt; log(&quot;info&quot;, &quot;Something&quot;)
2015-11-19T11:25:52 - info: Message
2015-11-19T11:25:52 - info: Message

# Debug level isn't important enough to log for either json-logger or new-logger.
julia&gt; log(&quot;debug&quot;, &quot;Not very important&quot;)
2015-11-19T11:26:16 - debug: Not very important"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Lumberjack

<span class="pl-c"><span class="pl-c">#</span> We already have console output of all modes/log levels via the default console truck.</span>

<span class="pl-c"><span class="pl-c">#</span> Define some additional log levels.</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">configure</span>(; modes<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>debug<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>info<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>crit<span class="pl-pds">"</span></span>])

<span class="pl-c"><span class="pl-c">#</span> Let's add a truck that will ignore debug/info messages (only outputting info-level and up).</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">add_truck</span>(<span class="pl-c1">LumberjackTruck</span>(STDOUT, <span class="pl-s"><span class="pl-pds">"</span>info<span class="pl-pds">"</span></span>), <span class="pl-s"><span class="pl-pds">"</span>new-logger<span class="pl-pds">"</span></span>)
Lumberjack<span class="pl-k">.</span><span class="pl-c1">LumberjackTruck</span>(Base<span class="pl-k">.</span><span class="pl-c1">TTY</span>(open, <span class="pl-c1">0</span> bytes waiting),<span class="pl-s"><span class="pl-pds">"</span>info<span class="pl-pds">"</span></span>,<span class="pl-c1">Dict</span><span class="pl-c1">{Any,Any}</span>(<span class="pl-c1">:is_colorized</span><span class="pl-k">=&gt;</span><span class="pl-c1">false</span>,<span class="pl-c1">:uppercase</span><span class="pl-k">=&gt;</span><span class="pl-c1">false</span>))

<span class="pl-c"><span class="pl-c">#</span> Let's add another that will only output logs at warning-level and above.</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">add_truck</span>(<span class="pl-c1">JsonTruck</span>(STDOUT, <span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>), <span class="pl-s"><span class="pl-pds">"</span>json-logger<span class="pl-pds">"</span></span>)
Lumberjack<span class="pl-k">.</span><span class="pl-c1">JsonTruck</span>(Base<span class="pl-k">.</span><span class="pl-c1">TTY</span>(open, <span class="pl-c1">0</span> bytes waiting),<span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Add the function call saw to each log entry that is error-level or above.</span>
<span class="pl-c1">add_saw</span>(<span class="pl-c1">Saw</span>(Lumberjack<span class="pl-k">.</span>fn_call_saw, <span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span>))
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{Lumberjack<span class="pl-k">.</span>Saw,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 Lumberjack<span class="pl-k">.</span><span class="pl-c1">Saw</span>(Lumberjack<span class="pl-k">.</span>msec_date_saw,<span class="pl-c1">nothing</span>)
 Lumberjack<span class="pl-k">.</span><span class="pl-c1">Saw</span>(Lumberjack<span class="pl-k">.</span>fn_call_saw,<span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Crticial messages will show up for all three trucks: json-logger, new-logger, console (default).</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">"</span>crit<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Message<span class="pl-pds">"</span></span>)
{<span class="pl-s"><span class="pl-pds">"</span>date<span class="pl-pds">"</span></span>:<span class="pl-s"><span class="pl-pds">"</span>2015-11-19T11:24:31<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>lookup<span class="pl-pds">"</span></span>:{<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span>:<span class="pl-s"><span class="pl-pds">"</span>eval_user_input<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>file<span class="pl-pds">"</span></span>:<span class="pl-s"><span class="pl-pds">"</span>REPL.jl<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>line<span class="pl-pds">"</span></span>:<span class="pl-c1">62</span>},<span class="pl-s"><span class="pl-pds">"</span>msg<span class="pl-pds">"</span></span>:<span class="pl-s"><span class="pl-pds">"</span>Message<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>mode<span class="pl-pds">"</span></span>:<span class="pl-s"><span class="pl-pds">"</span>crit<span class="pl-pds">"</span></span>}
<span class="pl-c1">2015</span><span class="pl-k">-</span><span class="pl-c1">11</span><span class="pl-k">-</span><span class="pl-c1">19</span>T11<span class="pl-k">:</span><span class="pl-c1">24</span><span class="pl-k">:</span><span class="pl-c1">31</span> <span class="pl-k">-</span> eval_user_input<span class="pl-c1">@REPL</span><span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">62</span> <span class="pl-k">-</span> crit<span class="pl-k">:</span> Message
<span class="pl-c1">2015</span><span class="pl-k">-</span><span class="pl-c1">11</span><span class="pl-k">-</span><span class="pl-c1">19</span>T11<span class="pl-k">:</span><span class="pl-c1">24</span><span class="pl-k">:</span><span class="pl-c1">31</span> <span class="pl-k">-</span> eval_user_input<span class="pl-c1">@REPL</span><span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">62</span> <span class="pl-k">-</span> crit<span class="pl-k">:</span> Message

<span class="pl-c"><span class="pl-c">#</span> Warning messages also show up for all trucks (but without function call information).</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Message<span class="pl-pds">"</span></span>)
{<span class="pl-s"><span class="pl-pds">"</span>date<span class="pl-pds">"</span></span>:<span class="pl-s"><span class="pl-pds">"</span>2015-11-19T11:24:49<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>msg<span class="pl-pds">"</span></span>:<span class="pl-s"><span class="pl-pds">"</span>Message<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>mode<span class="pl-pds">"</span></span>:<span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>}
<span class="pl-c1">2015</span><span class="pl-k">-</span><span class="pl-c1">11</span><span class="pl-k">-</span><span class="pl-c1">19</span>T11<span class="pl-k">:</span><span class="pl-c1">24</span><span class="pl-k">:</span><span class="pl-c1">49</span> <span class="pl-k">-</span> warn<span class="pl-k">:</span> Message
<span class="pl-c1">2015</span><span class="pl-k">-</span><span class="pl-c1">11</span><span class="pl-k">-</span><span class="pl-c1">19</span>T11<span class="pl-k">:</span><span class="pl-c1">24</span><span class="pl-k">:</span><span class="pl-c1">49</span> <span class="pl-k">-</span> warn<span class="pl-k">:</span> Message

<span class="pl-c"><span class="pl-c">#</span> Info is less important than a warning, so won't show up for new-logger.</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">"</span>info<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Something<span class="pl-pds">"</span></span>)
<span class="pl-c1">2015</span><span class="pl-k">-</span><span class="pl-c1">11</span><span class="pl-k">-</span><span class="pl-c1">19</span>T11<span class="pl-k">:</span><span class="pl-c1">25</span><span class="pl-k">:</span><span class="pl-c1">52</span> <span class="pl-k">-</span> info<span class="pl-k">:</span> Message
<span class="pl-c1">2015</span><span class="pl-k">-</span><span class="pl-c1">11</span><span class="pl-k">-</span><span class="pl-c1">19</span>T11<span class="pl-k">:</span><span class="pl-c1">25</span><span class="pl-k">:</span><span class="pl-c1">52</span> <span class="pl-k">-</span> info<span class="pl-k">:</span> Message

<span class="pl-c"><span class="pl-c">#</span> Debug level isn't important enough to log for either json-logger or new-logger.</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">"</span>debug<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Not very important<span class="pl-pds">"</span></span>)
<span class="pl-c1">2015</span><span class="pl-k">-</span><span class="pl-c1">11</span><span class="pl-k">-</span><span class="pl-c1">19</span>T11<span class="pl-k">:</span><span class="pl-c1">26</span><span class="pl-k">:</span><span class="pl-c1">16</span> <span class="pl-k">-</span> debug<span class="pl-k">:</span> Not very important</pre></div>
<h3 dir="auto"><a id="user-content-syslog-and-stack-trace-example" class="anchor" aria-hidden="true" href="#syslog-and-stack-trace-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Syslog and Stack Trace Example</h3>
<p dir="auto">Please note that syslog output is only available on systems that have <code>logger</code> utility installed. (This should include both Linux and OS X, but typically excludes Windows.)</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Lumberjack

# Configure Lumberjack to recognize all Syslog log levels.
julia&gt; configure(; modes=[&quot;debug&quot;, &quot;info&quot;, &quot;notice&quot;, &quot;warn&quot;, &quot;error&quot;, &quot;crit&quot;, &quot;alert&quot;, &quot;emerg&quot;])

# Output to syslog on facility &quot;local0&quot;, with tag &quot;julia&quot;, and include Julia's process ID.
julia&gt; syslog_io = Syslog(:local0, &quot;julia&quot;, true)
Lumberjack.Syslog(:local0,&quot;julia&quot;,63474)

# Send logs in JSON format to syslog_io, but only if they're warnings or above.
julia&gt; add_truck(JsonTruck(syslog_io, &quot;warn&quot;), &quot;syslog-json&quot;)
Lumberjack.JsonTruck(Lumberjack.Syslog(:local0,&quot;julia&quot;,63474),&quot;warn&quot;)

# Add a stacktrace to each log entry that is error-level or above.
add_saw(Saw(Lumberjack.stacktrace_saw, &quot;error&quot;))
2-element Array{Lumberjack.Saw,1}:
 Lumberjack.Saw(Lumberjack.msec_date_saw,nothing)
 Lumberjack.Saw(Lumberjack.stacktrace_saw,&quot;error&quot;)

julia&gt; log(&quot;crit&quot;, &quot;Error message!&quot;)		# Includes stack trace.
julia&gt; log(&quot;warn&quot;, &quot;Warning message!&quot;)		# No stack trace.
julia&gt; log(&quot;notice&quot;, &quot;Notice message!&quot;)		# Not logged."><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Lumberjack

<span class="pl-c"><span class="pl-c">#</span> Configure Lumberjack to recognize all Syslog log levels.</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">configure</span>(; modes<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>debug<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>info<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>notice<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>crit<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>alert<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>emerg<span class="pl-pds">"</span></span>])

<span class="pl-c"><span class="pl-c">#</span> Output to syslog on facility "local0", with tag "julia", and include Julia's process ID.</span>
julia<span class="pl-k">&gt;</span> syslog_io <span class="pl-k">=</span> <span class="pl-c1">Syslog</span>(<span class="pl-c1">:local0</span>, <span class="pl-s"><span class="pl-pds">"</span>julia<span class="pl-pds">"</span></span>, <span class="pl-c1">true</span>)
Lumberjack<span class="pl-k">.</span><span class="pl-c1">Syslog</span>(<span class="pl-c1">:local0</span>,<span class="pl-s"><span class="pl-pds">"</span>julia<span class="pl-pds">"</span></span>,<span class="pl-c1">63474</span>)

<span class="pl-c"><span class="pl-c">#</span> Send logs in JSON format to syslog_io, but only if they're warnings or above.</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">add_truck</span>(<span class="pl-c1">JsonTruck</span>(syslog_io, <span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>), <span class="pl-s"><span class="pl-pds">"</span>syslog-json<span class="pl-pds">"</span></span>)
Lumberjack<span class="pl-k">.</span><span class="pl-c1">JsonTruck</span>(Lumberjack<span class="pl-k">.</span><span class="pl-c1">Syslog</span>(<span class="pl-c1">:local0</span>,<span class="pl-s"><span class="pl-pds">"</span>julia<span class="pl-pds">"</span></span>,<span class="pl-c1">63474</span>),<span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Add a stacktrace to each log entry that is error-level or above.</span>
<span class="pl-c1">add_saw</span>(<span class="pl-c1">Saw</span>(Lumberjack<span class="pl-k">.</span>stacktrace_saw, <span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span>))
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{Lumberjack<span class="pl-k">.</span>Saw,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 Lumberjack<span class="pl-k">.</span><span class="pl-c1">Saw</span>(Lumberjack<span class="pl-k">.</span>msec_date_saw,<span class="pl-c1">nothing</span>)
 Lumberjack<span class="pl-k">.</span><span class="pl-c1">Saw</span>(Lumberjack<span class="pl-k">.</span>stacktrace_saw,<span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">"</span>crit<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Error message!<span class="pl-pds">"</span></span>)		<span class="pl-c"><span class="pl-c">#</span> Includes stack trace.</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">"</span>warn<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Warning message!<span class="pl-pds">"</span></span>)		<span class="pl-c"><span class="pl-c">#</span> No stack trace.</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">"</span>notice<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Notice message!<span class="pl-pds">"</span></span>)		<span class="pl-c"><span class="pl-c">#</span> Not logged.</span></pre></div>
<p dir="auto">Run <code>tail /var/log/system.log</code> (modifying as needed, depeding on where your system stores its logs) and you should see something like this:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Nov 17 15:00:03 localhost julia[63474]: {&quot;stacktrace&quot;:[{&quot;name&quot;:&quot;eval_user_input&quot;,&quot;file&quot;:&quot;REPL.jl&quot;,&quot;line&quot;:62},{&quot;name&quot;:&quot;anonymous&quot;,&quot;file&quot;:&quot;REPL.jl&quot;,&quot;line&quot;:92}],&quot;date&quot;:&quot;2015-11-17T15:00:03&quot;,&quot;msg&quot;:&quot;Error message!&quot;,&quot;mode&quot;:&quot;error&quot;}
Nov 17 15:00:45 localhost julia[63474]: {&quot;date&quot;:&quot;2015-11-17T15:00:45&quot;,&quot;msg&quot;:&quot;Warning message!&quot;,&quot;mode&quot;:&quot;warn&quot;}"><pre class="notranslate"><code>Nov 17 15:00:03 localhost julia[63474]: {"stacktrace":[{"name":"eval_user_input","file":"REPL.jl","line":62},{"name":"anonymous","file":"REPL.jl","line":92}],"date":"2015-11-17T15:00:03","msg":"Error message!","mode":"error"}
Nov 17 15:00:45 localhost julia[63474]: {"date":"2015-11-17T15:00:45","msg":"Warning message!","mode":"warn"}
</code></pre></div>
<p dir="auto">The info message is missing because we set our truck to only output logs at warning level and above.</p>
<p dir="auto">Note that BSD's <code>logger</code> (used on OS X) will append a second process ID, which is the PID of the <code>logger</code> tool itself.</p>
</article></div>