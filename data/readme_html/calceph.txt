<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a href="https://travis-ci.org/JuliaAstro/CALCEPH.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6a7d8761834cf320d4173448d23f94eb8691daf3/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961417374726f2f43414c434550482e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaAstro/CALCEPH.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/bgodard/calceph-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cc60a7dcdaf4d34c0eda52d34a6656a17ec1b4f2/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f32347278776e636e72696a326f30636f3f7376673d74727565" alt="AppVoyer" data-canonical-src="https://ci.appveyor.com/api/projects/status/24rxwncnrij2o0co?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaAstro/CALCEPH.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/48a2337ee574b6fdc4637696631da1ec63328bf1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c6961417374726f2f43414c434550482e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaAstro/CALCEPH.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaAstro/CALCEPH.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/41637266c7c082ca719a17ea554e883dd79b6702/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c6961417374726f2f43414c434550482e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaAstro/CALCEPH.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://JuliaAstro.github.io/CALCEPH.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://JuliaAstro.github.io/CALCEPH.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>This is a julia wrapper for <a href="https://www.imcce.fr/inpop/calceph/" rel="nofollow">CALCEPH</a> a C library for reading planetary ephemeris files, such as <a href="https://www.imcce.fr/inpop" rel="nofollow">INPOPxx</a>, JPL DExxx and SPICE ephemeris files.</p>
<p><a href="https://www.imcce.fr/inpop/calceph/" rel="nofollow">CALCEPH</a> C library is developped by <a href="https://www.imcce.fr/" rel="nofollow">IMCCE</a>.</p>
<h1><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Quick start</h1>
<p>In the Julia interpreter, run:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CALCEPH<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> CALCEPH

<span class="pl-c"><span class="pl-c">#</span> ephemeris kernels can be downloaded from many different sources</span>
<span class="pl-c1">download</span>(<span class="pl-s"><span class="pl-pds">"</span>ftp://ftp.imcce.fr/pub/ephem/planets/inpop13c/inpop13c_TDB_m100_p100_tt.dat<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>planets.dat<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> create an ephemeris context</span>
eph <span class="pl-k">=</span> <span class="pl-c1">Ephem</span>(<span class="pl-s"><span class="pl-pds">"</span>planets.dat<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> prefetch ephemeris files data to main memory for faster access</span>
<span class="pl-c1">prefetch</span>(eph)

<span class="pl-c"><span class="pl-c">#</span> retrieve constants from ephemeris as a dictionary</span>
con <span class="pl-k">=</span> <span class="pl-c1">constants</span>(eph)
<span class="pl-c"><span class="pl-c">#</span> list the constants</span>
<span class="pl-c1">keys</span>(con)
<span class="pl-c"><span class="pl-c">#</span> get the sun J2</span>
J2sun <span class="pl-k">=</span> con[<span class="pl-c1">:J2SUN</span>]

<span class="pl-c"><span class="pl-c">#</span> retrieve the position, velocity and acceleration of Earth (geocenter) relative</span>
<span class="pl-c"><span class="pl-c">#</span> to the Earth-Moon system barycenter in kilometers, kilometers per second and</span>
<span class="pl-c"><span class="pl-c">#</span> kilometers per second square at JD= 2451624.5 TDB timescale</span>
<span class="pl-c"><span class="pl-c">#</span> for best accuracy the first time argument should be the integer part and the</span>
<span class="pl-c"><span class="pl-c">#</span> delta the fractional part</span>
<span class="pl-c"><span class="pl-c">#</span> when using NAIF identification numbers, useNaifId has to be added to</span>
<span class="pl-c"><span class="pl-c">#</span> the units argument.</span>
pva<span class="pl-k">=</span><span class="pl-c1">compute</span>(eph,<span class="pl-c1">2451624.0</span>,<span class="pl-c1">0.5</span>,naifId<span class="pl-k">.</span>id[<span class="pl-c1">:earth</span>],naifId<span class="pl-k">.</span>id[<span class="pl-c1">:emb</span>],
                        useNaifId<span class="pl-k">+</span>unitKM<span class="pl-k">+</span>unitSec,<span class="pl-c1">2</span>)
position<span class="pl-k">=</span>pva[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>]
velocity<span class="pl-k">=</span>pva[<span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">6</span>]
acceleration<span class="pl-k">=</span>pva[<span class="pl-c1">7</span><span class="pl-k">:</span><span class="pl-c1">end</span>]

<span class="pl-c"><span class="pl-c">#</span> what is the NAIF identification number for Deimos</span>
id_deimos <span class="pl-k">=</span> naifId<span class="pl-k">.</span>id[<span class="pl-c1">:deimos</span>]

<span class="pl-c"><span class="pl-c">#</span> what does NAIF ID 0 correspond to?</span>
names_0 <span class="pl-k">=</span> naifId<span class="pl-k">.</span>names[<span class="pl-c1">0</span>]
</pre></div>
<h1><a id="user-content-why-use-calceph" class="anchor" aria-hidden="true" href="#why-use-calceph"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Why use CALCEPH?</h1>
<p>CALCEPH functionality is also provided by <a href="https://naif.jpl.nasa.gov/naif/toolkit.html" rel="nofollow">NAIF SPICE Toolkit</a>. However CALCEPH has several advantages over the SPICE toolkit, mainly:</p>
<ul>
<li>It can handle multiple ephemeris contexts.</li>
<li>It is thread safe (if using one context per thread).</li>
<li>It can compute higher order derivatives (acceleration and jerk) approximation using differentiation of the interpolation polynomials.</li>
<li>Its ephemeris computation interface expects the time separated in two double precision floating point numbers. This can be used to achieve higher precision in timetag (this can have a significant impact when modeling Doppler observations from a deep space probe).</li>
</ul>
<p>But CALCEPH does not support all functions of the SPICE toolkit. If you need more functionalities <a href="https://github.com/JuliaAstrodynamics/SPICE.jl">SPICE.jl</a> is a Julia wrapper for the SPICE toolkit.</p>
</article></div>