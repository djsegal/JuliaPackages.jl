<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-ccdreductionjl" class="anchor" aria-hidden="true" href="#ccdreductionjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CCDReduction.jl</h1>
<p><a href="https://travis-ci.com/juliaastro/CCDReduction.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e754e75023de1f6e3b21250e11ace4903ff2321c/68747470733a2f2f7472617669732d63692e636f6d2f6a756c6961617374726f2f434344526564756374696f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/juliaastro/CCDReduction.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/a72cbed494c3f2660db30ffc215eabdf5e9ea555/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f432f434344526564756374696f6e2e737667" alt="PkgEval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/C/CCDReduction.svg" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/juliaastro/CCDReduction.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/22ff22009e7c3562538a1fa8266d90c6eee66461/68747470733a2f2f636f6465636f762e696f2f67682f6a756c6961617374726f2f434344526564756374696f6e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/juliaastro/CCDReduction.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://opensource.org/licenses/MIT" rel="nofollow"><img src="https://camo.githubusercontent.com/3ccf4c50a1576b0dd30b286717451fa56b783512/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-MIT-yellow.svg" style="max-width:100%;"></a></p>
<p><a href="https://juliaastro.github.io/CCDReduction.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://juliaastro.github.io/CCDReduction.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<p>A package for performing CCD data reduction and processing.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>For in-depth API infromation and usage examples, please see the <a href="https://juliaastro.github.io/CCDReduction.jl/dev" rel="nofollow">documentation</a>. You'll recognize most of the familiar reduction operations allow us to quickly and easily operate on data.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> CCDReduction

noise <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">512</span>, <span class="pl-c1">512</span>)
bias_frame <span class="pl-k">=</span> <span class="pl-c1">reshape</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">262144</span>, <span class="pl-c1">512</span>, <span class="pl-c1">512</span>) <span class="pl-k">|&gt;</span> collect
img <span class="pl-k">=</span> <span class="pl-c1">reshape</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">262144</span>, <span class="pl-c1">512</span>, <span class="pl-c1">512</span>) <span class="pl-k">.+</span> noise

<span class="pl-c1">subtract_bias</span>(img, bias_frame)</pre></div>
<p>In addition to working on array-like data, we can directly load from a <code>FITSIO.ImageHDU</code> or from a filename</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> FITSIO

<span class="pl-c"><span class="pl-c">#</span> make fits file</span>
bias_frame <span class="pl-k">=</span> <span class="pl-c1">reshape</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">262144</span>, <span class="pl-c1">512</span>, <span class="pl-c1">512</span>) <span class="pl-k">|&gt;</span> collect
<span class="pl-c1">FITS</span>(<span class="pl-s"><span class="pl-pds">"</span>master_bias.fits<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> f
    <span class="pl-c1">write</span>(f, bias_frame)
<span class="pl-k">end</span>
img <span class="pl-k">=</span> <span class="pl-c1">10</span> <span class="pl-k">.*</span> <span class="pl-c1">randn</span>(<span class="pl-c1">512</span>, <span class="pl-c1">512</span>)
debiased <span class="pl-k">=</span> <span class="pl-c1">subtract_bias</span>(img, <span class="pl-s"><span class="pl-pds">"</span>master_bias.fits<span class="pl-pds">"</span></span>)</pre></div>
<p>Finally, we can use function chaining (or tools like <a href="https://github.com/c42f/Underscores.jl">Underscores.jl</a>) for creating a simple processing pipeline!</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Underscores

<span class="pl-c"><span class="pl-c">#</span> 5 science frames</span>
imgs <span class="pl-k">=</span> (<span class="pl-c1">10</span> <span class="pl-k">.*</span> <span class="pl-c1">randn</span>(<span class="pl-c1">512</span>, <span class="pl-c1">524</span>) <span class="pl-k">for</span> _ <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>)

<span class="pl-c"><span class="pl-c">#</span> create pipeline using Underscores.jl</span>
<span class="pl-en">pipeline</span>(img) <span class="pl-k">=</span> <span class="pl-c1">@_</span> img <span class="pl-k">|&gt;</span>
    <span class="pl-c1">subtract_overscan</span>(__, (:, <span class="pl-c1">513</span><span class="pl-k">:</span><span class="pl-c1">524</span>)) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">trim</span>(__, (:, <span class="pl-c1">513</span><span class="pl-k">:</span><span class="pl-c1">524</span>)) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">subtract_bias</span>(__, <span class="pl-s"><span class="pl-pds">"</span>master_bias.fits<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> apply pipeline to images using broadcast syntax</span>
calib_imgs <span class="pl-k">=</span> <span class="pl-c1">pipeline</span>.(imgs)</pre></div>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p>This work is distributed under the MIT license. See <a href="LICENSE">LICENSE</a> for more information.</p>
</article></div>