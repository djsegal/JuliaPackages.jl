<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-ccdreductionjl" class="anchor" aria-hidden="true" href="#ccdreductionjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CCDReduction.jl</h1>
<p dir="auto"><a href="https://github.com/juliaastro/CCDReduction.jl/actions"><img src="https://github.com/juliaastro/CCDReduction.jl/workflows/CI/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/40f61927f174578b91e0417164a487b8a80b97780b7e94e70197daf0bfd57c69/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f432f434344526564756374696f6e2e737667" alt="PkgEval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/C/CCDReduction.svg" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/juliaastro/CCDReduction.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/19983cef054a9722170a9f56228ef98df83a229fae4ce996335b942b5ed6e983/68747470733a2f2f636f6465636f762e696f2f67682f6a756c6961617374726f2f434344526564756374696f6e2e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/juliaastro/CCDReduction.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://opensource.org/licenses/MIT" rel="nofollow"><img src="https://camo.githubusercontent.com/78f47a09877ba9d28da1887a93e5c3bc2efb309c1e910eb21135becd2998238a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" alt="License" data-canonical-src="https://img.shields.io/badge/License-MIT-yellow.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://juliaastro.github.io/CCDReduction.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://juliaastro.github.io/CCDReduction.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">A package for performing CCD data reduction and processing.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">For in-depth API infromation and usage examples, please see the <a href="https://juliaastro.github.io/CCDReduction.jl/dev" rel="nofollow">documentation</a>. You'll recognize most of the familiar reduction operations allow us to quickly and easily operate on data.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using CCDReduction

noise = randn(512, 512)
bias_frame = reshape(1:262144, 512, 512) |&gt; collect
img = reshape(1:262144, 512, 512) .+ noise

subtract_bias(img, bias_frame)"><pre><span class="pl-k">using</span> CCDReduction

noise <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">512</span>, <span class="pl-c1">512</span>)
bias_frame <span class="pl-k">=</span> <span class="pl-c1">reshape</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">262144</span>, <span class="pl-c1">512</span>, <span class="pl-c1">512</span>) <span class="pl-k">|&gt;</span> collect
img <span class="pl-k">=</span> <span class="pl-c1">reshape</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">262144</span>, <span class="pl-c1">512</span>, <span class="pl-c1">512</span>) <span class="pl-k">.+</span> noise

<span class="pl-c1">subtract_bias</span>(img, bias_frame)</pre></div>
<p dir="auto">In addition to working on array-like data, we can directly load from a <code>FITSIO.ImageHDU</code> or from a filename</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using FITSIO

# make fits file
bias_frame = reshape(1:262144, 512, 512) |&gt; collect
FITS(&quot;master_bias.fits&quot;, &quot;w&quot;) do f
    write(f, bias_frame)
end
img = 10 .* randn(512, 512)
debiased = subtract_bias(img, &quot;master_bias.fits&quot;)"><pre><span class="pl-k">using</span> FITSIO

<span class="pl-c"><span class="pl-c">#</span> make fits file</span>
bias_frame <span class="pl-k">=</span> <span class="pl-c1">reshape</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">262144</span>, <span class="pl-c1">512</span>, <span class="pl-c1">512</span>) <span class="pl-k">|&gt;</span> collect
<span class="pl-c1">FITS</span>(<span class="pl-s"><span class="pl-pds">"</span>master_bias.fits<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> f
    <span class="pl-c1">write</span>(f, bias_frame)
<span class="pl-k">end</span>
img <span class="pl-k">=</span> <span class="pl-c1">10</span> <span class="pl-k">.*</span> <span class="pl-c1">randn</span>(<span class="pl-c1">512</span>, <span class="pl-c1">512</span>)
debiased <span class="pl-k">=</span> <span class="pl-c1">subtract_bias</span>(img, <span class="pl-s"><span class="pl-pds">"</span>master_bias.fits<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Finally, we can use function chaining (or tools like <a href="https://github.com/c42f/Underscores.jl">Underscores.jl</a>) for creating a simple processing pipeline!</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Underscores

# 5 science frames
imgs = (10 .* randn(512, 524) for _ in 1:5)

# create pipeline using Underscores.jl
pipeline(img) = @_ img |&gt;
    subtract_overscan(__, (:, 513:524)) |&gt;
    trim(__, (:, 513:524)) |&gt;
    subtract_bias(__, &quot;master_bias.fits&quot;)

# apply pipeline to images using broadcast syntax
calib_imgs = pipeline.(imgs)"><pre><span class="pl-k">using</span> Underscores

<span class="pl-c"><span class="pl-c">#</span> 5 science frames</span>
imgs <span class="pl-k">=</span> (<span class="pl-c1">10</span> <span class="pl-k">.*</span> <span class="pl-c1">randn</span>(<span class="pl-c1">512</span>, <span class="pl-c1">524</span>) <span class="pl-k">for</span> _ <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>)

<span class="pl-c"><span class="pl-c">#</span> create pipeline using Underscores.jl</span>
<span class="pl-en">pipeline</span>(img) <span class="pl-k">=</span> <span class="pl-c1">@_</span> img <span class="pl-k">|&gt;</span>
    <span class="pl-c1">subtract_overscan</span>(__, (:, <span class="pl-c1">513</span><span class="pl-k">:</span><span class="pl-c1">524</span>)) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">trim</span>(__, (:, <span class="pl-c1">513</span><span class="pl-k">:</span><span class="pl-c1">524</span>)) <span class="pl-k">|&gt;</span>
    <span class="pl-c1">subtract_bias</span>(__, <span class="pl-s"><span class="pl-pds">"</span>master_bias.fits<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> apply pipeline to images using broadcast syntax</span>
calib_imgs <span class="pl-k">=</span> <span class="pl-c1">pipeline</span>.(imgs)</pre></div>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">This work is distributed under the MIT license. See <a href="LICENSE">LICENSE</a> for more information.</p>
</article></div>