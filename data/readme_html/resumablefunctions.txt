<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-resumablefunctions" class="anchor" aria-hidden="true" href="#resumablefunctions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ResumableFunctions</h1>
<p><a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/" rel="nofollow">C#</a> has a convenient way to create iterators using the <code>yield return</code> statement. The package <code>ResumableFunctions</code> provides the same functionality for the <a href="https://julialang.org" rel="nofollow">Julia language</a> by introducing the <code>@resumable</code> and the <code>@yield</code> macros. These macros can be used to replace the <code>Task</code> switching functions <code>produce</code> and <code>consume</code> which were deprecated in Julia v0.6. <code>Channels</code> are the preferred way for inter-task communication in julia v0.6+, but their performance is subpar for iterator applications. See <a href="#Benchmarks">the benchmarks section below</a>.</p>
<h2><a id="user-content-build-status--coverage" class="anchor" aria-hidden="true" href="#build-status--coverage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Build Status &amp; Coverage</h2>
<p><a href="https://travis-ci.org/BenLauwens/ResumableFunctions.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/424dd4d29c10495f24e6de6889f786cf000747af/68747470733a2f2f7472617669732d63692e6f72672f42656e4c617577656e732f526573756d61626c6546756e6374696f6e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/BenLauwens/ResumableFunctions.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/BenLauwens/resumablefunctions-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/df5cce6104114605ca6a19d15aa660a839ee42d0/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f36766d357930773571307577677637762f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/6vm5y0w5q0uwgv7v/branch/master?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/BenLauwens/ResumableFunctions.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/56e6771aeaa86e284ecc1640b7b44d0ecb0e4925/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f42656e4c617577656e732f526573756d61626c6546756e6374696f6e732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/BenLauwens/ResumableFunctions.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/benlauwens/ResumableFunctions.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/25c31c15c54abdcd611d67f0269d76f5aa9e1659/687474703a2f2f636f6465636f762e696f2f6769746875622f62656e6c617577656e732f526573756d61626c6546756e6374696f6e732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/benlauwens/ResumableFunctions.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p><a href="http://pkg.julialang.org/detail/ResumableFunctions" rel="nofollow"><img src="https://camo.githubusercontent.com/4c8ee0811f4f692fb1724bde328ebcc4f998dda6/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f526573756d61626c6546756e6374696f6e735f302e362e737667" alt="ResumableFunctions" data-canonical-src="http://pkg.julialang.org/badges/ResumableFunctions_0.6.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/detail/ResumableFunctions" rel="nofollow"><img src="https://camo.githubusercontent.com/4c0716272f4eed32141ee7cd66faf97284cbf33a/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f526573756d61626c6546756e6374696f6e735f302e372e737667" alt="ResumableFunctions" data-canonical-src="http://pkg.julialang.org/badges/ResumableFunctions_0.7.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/detail/ResumableFunctions" rel="nofollow"><img src="https://camo.githubusercontent.com/8825de52cddad4cfe3d713015234c207435089b2/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f526573756d61626c6546756e6374696f6e735f312e302e737667" alt="ResumableFunctions" data-canonical-src="http://pkg.julialang.org/badges/ResumableFunctions_1.0.svg" style="max-width:100%;"></a></p>
<p><code>ResumableFunctions</code> is a <a href="http://pkg.julialang.org" rel="nofollow">registered package</a> and can be installed by running:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>ResumableFunctions<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<p><a href="https://benlauwens.github.io/ResumableFunctions.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://benlauwens.github.io/ResumableFunctions.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ResumableFunctions

<span class="pl-c1">@resumable</span> <span class="pl-k">function</span> <span class="pl-en">fibonnaci</span>(n<span class="pl-k">::</span><span class="pl-c1">Int</span>) <span class="pl-k">::</span> <span class="pl-c1">Int</span>
  a <span class="pl-k">=</span> <span class="pl-c1">0</span>
  b <span class="pl-k">=</span> <span class="pl-c1">1</span>
  <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>n
    <span class="pl-c1">@yield</span> a
    a, b <span class="pl-k">=</span> b, a<span class="pl-k">+</span>b
  <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-k">for</span> fib <span class="pl-k">in</span> <span class="pl-c1">fibonnaci</span>(<span class="pl-c1">10</span>)
  <span class="pl-c1">println</span>(fib)
<span class="pl-k">end</span></pre></div>
<h2><a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Benchmarks</h2>
<p>The following block is the result of running <code>julia --project=. benchmark/benchmarks.jl</code> on a computer with the processor: <code>Intel(R) Core(TM) i5-5300U CPU @ 2.30GHz</code>. Julia version 1.1.1 was used.</p>
<pre><code>Direct:
  49.724 ns (0 allocations: 0 bytes)
ResumableFunctions:
  10.230 μs (281 allocations: 8.83 KiB)
Channels csize=0:
  305.877 μs (465 allocations: 8.84 KiB)
Channels csize=1:
  504.438 μs (379 allocations: 7.33 KiB)
Channels csize=20:
  87.889 μs (206 allocations: 5.06 KiB)
Channels csize=100:
  67.911 μs (198 allocations: 6.44 KiB)
Closure:
  2.437 μs (83 allocations: 1.31 KiB)
Closure optimised:
  245.676 ns (3 allocations: 64 bytes)
Closure statemachine:
  40.149 ns (0 allocations: 0 bytes)
Iteration protocol:
  63.635 ns (0 allocations: 0 bytes)
</code></pre>
<h2><a id="user-content-licence--references" class="anchor" aria-hidden="true" href="#licence--references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Licence &amp; References</h2>
<p><a href="LICENSE.md"><img src="https://camo.githubusercontent.com/4440d5deb3a53c4f8661ee765378e6071e7878e8/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c6174" alt="License" data-canonical-src="http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat" style="max-width:100%;"></a>
<a href="http://joss.theoj.org/papers/889b2faed426b978ee705689c8f8440b" rel="nofollow"><img src="https://camo.githubusercontent.com/6a9b8ea64ffd9494162ebab3dec161875535c9d9/687474703a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f38383962326661656434323662393738656537303536383963386638343430622f7374617475732e737667" alt="status" data-canonical-src="http://joss.theoj.org/papers/889b2faed426b978ee705689c8f8440b/status.svg" style="max-width:100%;"></a>
<a href="https://zenodo.org/badge/latestdoi/100050892" rel="nofollow"><img src="https://camo.githubusercontent.com/86f4b3036a77abe22f99b5c5e34d7b072cc98d20/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3130303035303839322e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/100050892.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Authors</h2>
<ul>
<li>Ben Lauwens, <a href="http://www.rma.ac.be" rel="nofollow">Royal Military Academy</a>, Brussels, Belgium.</li>
</ul>
<h2><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing</h2>
<ul>
<li>To discuss problems or feature requests, file an issue. For bugs, please include as much information as possible, including operating system, julia version, and version of <a href="https://github.com/MikeInnes/MacroTools.jl.git">MacroTools</a>.</li>
<li>To contribute, make a pull request. Contributions should include tests for any new features/bug fixes.</li>
</ul>
<h2><a id="user-content-release-notes" class="anchor" aria-hidden="true" href="#release-notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Release notes</h2>
<ul>
<li>
<p>2019: v0.5.1</p>
<ul>
<li>inference problem solved: force iterator next value to be of type <code>Union</code> of <code>Tuple</code> and <code>Nothing</code>.</li>
</ul>
</li>
<li>
<p>2019: v0.5.0 is Julia v1.2 compatible</p>
</li>
<li>
<p>2018: v0.4.2 prepare for Julia v1.1</p>
<ul>
<li>better inference caused a problem;).</li>
<li>iterator with a specified <code>rtype</code> is fixed.</li>
</ul>
</li>
<li>
<p>2018: v0.4.0 is Julia v1.0 compatible.</p>
</li>
<li>
<p>2018: v0.3.1 uses the new iteration protocol.</p>
<ul>
<li>the new iteration protocol is used for a <code>@resumable function</code> based iterator.</li>
<li>the <code>for</code> loop transformation implements also the new iteration protocol.</li>
</ul>
</li>
<li>
<p>2018: v0.3 is Julia v0.7 compatible.</p>
<ul>
<li>introduction of <code>let</code> block to allow variables not te be persisted between <code>@resumable function</code> calls (EXPERIMENTAL).</li>
<li>the <code>eltype</code> of a <code>@resumable function</code> based iterator is its return type if specified, otherwise <code>Any</code>.</li>
</ul>
</li>
<li>
<p>2018: v0.2 the iterator now behaves as a Python generator: only values that are explicitely yielded are generated; the return value is ignored and a warning is generated.</p>
</li>
<li>
<p>2017: v0.1 initial release that is Julia v0.6 compatible:</p>
<ul>
<li>Introduction of the <code>@resumable</code> and the <code>@yield</code> macros.</li>
<li>A <code>@resumable function</code> generates a type that implements the <a href="https://docs.julialang.org/en/stable/manual/interfaces/#man-interface-iteration-1" rel="nofollow">iterator</a> interface.</li>
<li>Parametric <code>@resumable functions</code> are supported.</li>
</ul>
</li>
</ul>
<h2><a id="user-content-caveats" class="anchor" aria-hidden="true" href="#caveats"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Caveats</h2>
<ul>
<li>In a <code>try</code> block only top level <code>@yield</code> statements are allowed.</li>
<li>In a <code>finally</code> block a <code>@yield</code> statement is not allowed.</li>
<li>An anonymous function can not contain a <code>@yield</code> statement.</li>
</ul>
</article></div>