<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-unitfulparsablestring----" class="anchor" aria-hidden="true" href="#unitfulparsablestring----"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>UnitfulParsableString <a href="https://github.com/michikawa07/UnitfulParsableString.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/michikawa07/UnitfulParsableString.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a> <a href="https://michikawa07.github.io/UnitfulParsableString.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://michikawa07.github.io/UnitfulParsableString.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a> <a href="https://travis-ci.com/michikawa07/UnitfulParsableString.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/72bce1515189593ab6a0d55da95617a7d938281ded4c9d51b8c1503210e9344f/68747470733a2f2f7472617669732d63692e636f6d2f6d696368696b61776130372f556e697466756c5061727361626c65537472696e672e6a6c2e7376673f6272616e63683d6d61696e" alt="Build Status" data-canonical-src="https://travis-ci.com/michikawa07/UnitfulParsableString.jl.svg?branch=main" style="max-width: 100%;"></a></h1>
<p dir="auto"><code>UnitfulParsableString.jl</code> expand <a href="https://github.com/PainterQubits/Unitful.jl">Unitful.jl</a> to add the method <code>Unitful.string</code> which convert <code>Quantity</code> (or some type) to parsable <code>String</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Unitful

julia&gt; string(1.0u&quot;m*s&quot;) 
&quot;1.0 m s&quot; # &lt;- julia cannot parse

julia&gt; string(1.0u&quot;m*s&quot;) |&gt; Unitful.uparse
ERROR: Base.Meta.ParseError(&quot;extra token \&quot;m\&quot; after end of expression&quot;)

julia&gt; using UnitfulParsableString

julia&gt; string(1.0u&quot;m*s&quot;)
&quot;1.0(m*s)&quot; # &lt;- julia can parse

julia&gt; string(1.0u&quot;m*s&quot;) |&gt; Unitful.uparse
1.0 m s"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Unitful

julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-c1">1.0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m*s<span class="pl-pds">"</span></span>) 
<span class="pl-s"><span class="pl-pds">"</span>1.0 m s<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> &lt;- julia cannot parse</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-c1">1.0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m*s<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> Unitful<span class="pl-k">.</span>uparse
ERROR<span class="pl-k">:</span> Base<span class="pl-k">.</span>Meta<span class="pl-k">.</span><span class="pl-c1">ParseError</span>(<span class="pl-s"><span class="pl-pds">"</span>extra token <span class="pl-cce">\"</span>m<span class="pl-cce">\"</span> after end of expression<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> UnitfulParsableString

julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-c1">1.0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m*s<span class="pl-pds">"</span></span>)
<span class="pl-s"><span class="pl-pds">"</span>1.0(m*s)<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> &lt;- julia can parse</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-c1">1.0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m*s<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> Unitful<span class="pl-k">.</span>uparse
<span class="pl-c1">1.0</span> m s</pre></div>
<h2 dir="auto"><a id="user-content-expression-of-unit" class="anchor" aria-hidden="true" href="#expression-of-unit"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Expression of Unit</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Unitful.string(unit::Unitlike)"><pre class="notranslate"><code>Unitful.string(unit::Unitlike)
</code></pre></div>
<p dir="auto">Values of <code>Unitful.Unitlike</code> subtypes are converted to <code>string</code> that julia can parse as following rules.</p>
<p dir="auto">Multi-units are expressed as basicaly separeted by <code>"*"</code>, but sometimes <code>"/"</code> is used exceptionally for simplicity, see below for details.
Exponents are expressed as <code>"^x"</code> or <code>"^-x"</code> (x &gt; 0) in principle, except for units with a rational exponent y, which are expressed by wrapping them in parentheses as <code>"^(y)"</code>.</p>
<h3 dir="auto"><a id="user-content-detail-of-separatoers" class="anchor" aria-hidden="true" href="#detail-of-separatoers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Detail of separatoers</h3>
<p dir="auto">When all exponential of the units is positive, all separates are <code>"*"</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; string(u&quot;m*s^2&quot;)
&quot;m*s^2&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m*s^2<span class="pl-pds">"</span></span>)
<span class="pl-s"><span class="pl-pds">"</span>m*s^2<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">When all exponential of the units is negative, all separates are <code>"*"</code> and the negative exponential is expressed as <code>"^-|w|"</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; string(u&quot;(m*s)^-1&quot;) # all exponents are negative
&quot;m^-1*s^-1&quot;                # -&gt; separater is &quot;*&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>(m*s)^-1<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> all exponents are negative</span>
<span class="pl-s"><span class="pl-pds">"</span>m^-1*s^-1<span class="pl-pds">"</span></span>                <span class="pl-c"><span class="pl-c">#</span> -&gt; separater is "*"</span></pre></div>
<p dir="auto">When both positive and negative exponentials coexist, if there are rational exponentials, all separates are <code>"*"</code> and the negative exponential is expressed as <code>"^-|w|"</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; string(u&quot;m^(1/2)*s^-2&quot;) # positive and negative exponent coexist
&quot;m^(1/2)*s^-2&quot;                 # if rational exponent exist -&gt; separater is &quot;*&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m^(1/2)*s^-2<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> positive and negative exponent coexist</span>
<span class="pl-s"><span class="pl-pds">"</span>m^(1/2)*s^-2<span class="pl-pds">"</span></span>                 <span class="pl-c"><span class="pl-c">#</span> if rational exponent exist -&gt; separater is "*"</span></pre></div>
<p dir="auto">When both positive and negative exponentials coexist, if not there are rational exponentials, the separates of the units with negative exponential are <code>"/"</code> and the negative exponential is expressed as <code>"^|w|"</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; string(u&quot;m*s^-2&quot;) # positive and negative exponent coexist
&quot;m/s^2&quot;                  # if rational exponent never exist -&gt; &quot;/&quot; can be use for separater"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m*s^-2<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> positive and negative exponent coexist</span>
<span class="pl-s"><span class="pl-pds">"</span>m/s^2<span class="pl-pds">"</span></span>                  <span class="pl-c"><span class="pl-c">#</span> if rational exponent never exist -&gt; "/" can be use for separater</span></pre></div>
<h3 dir="auto"><a id="user-content-detail-of-rational-exponents" class="anchor" aria-hidden="true" href="#detail-of-rational-exponents"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Detail of rational exponents</h3>
<p dir="auto">When the exponentials are rational, if the velue n//m is strictly same as n/m, it is expressed as "^(n/m)".</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; string(u&quot;m^(1//2)&quot; # 1//2 == 1/2
&quot;m^(1/2)&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m^(1//2)<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> 1//2 == 1/2</span>
<span class="pl-s"><span class="pl-pds">"</span>m^(1/2)<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">If not the velue n//m is strictly same as n/m, it is expressed as "^(n//m)".</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; string(u&quot;m^(1//3)&quot; # 1//3 != 1/3
&quot;m^(1//3)&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m^(1//3)<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> 1//3 != 1/3</span>
<span class="pl-s"><span class="pl-pds">"</span>m^(1//3)<span class="pl-pds">"</span></span></pre></div>
<h2 dir="auto"><a id="user-content-expression-of-quantity" class="anchor" aria-hidden="true" href="#expression-of-quantity"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Expression of Quantity</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Unitful.string(x::AbstractQuantity)"><pre class="notranslate"><code>Unitful.string(x::AbstractQuantity)
</code></pre></div>
<p dir="auto">Values of <code>Unitful.AbstractQuantity</code> subtypes to <code>string</code> that julia can parse as following rules.</p>
<p dir="auto">The <code>Unitful.Quantity</code> <code>x</code> have value and units (they can be get <code>x.val</code> and <code>unit(x)</code>).
Thus, the work of this function is simply shown as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="string( [&quot;(&quot;,] string(value), [&quot;)&quot;,] [&quot;*&quot;,] [&quot;(&quot;,] string(units) [,&quot;)&quot;] )"><pre><span class="pl-c1">string</span>( [<span class="pl-s"><span class="pl-pds">"</span>(<span class="pl-pds">"</span></span>,] <span class="pl-c1">string</span>(value), [<span class="pl-s"><span class="pl-pds">"</span>)<span class="pl-pds">"</span></span>,] [<span class="pl-s"><span class="pl-pds">"</span>*<span class="pl-pds">"</span></span>,] [<span class="pl-s"><span class="pl-pds">"</span>(<span class="pl-pds">"</span></span>,] <span class="pl-c1">string</span>(units) [,<span class="pl-s"><span class="pl-pds">"</span>)<span class="pl-pds">"</span></span>] )</pre></div>
<p dir="auto">The presence or absence of each bracket is determined by the return values of the <code>has_value_bracket(x)</code> and <code>has_unit_bracket(x)</code> functions.
And the sepaprator <code>"*"</code> is inserted, if <code>has_value_bracket(x) &amp;&amp; has_unit_bracket(x) == true</code>.</p>
<p dir="auto">The <code>has_value_bracket(x)</code> returns false if <code>string(x)</code> contains only digits, and true if it contains non-digits.
However, if <code>typeof(x)</code> is a specific type, the process is lightened by multiple dispatching.</p>
<p dir="auto">The <code>has_unit_bracket(x)</code> returns false if the <code>unit(x)</code> consists of single type unit, and true if it consists of multi type units.</p>
<p dir="auto">Note: see <code>Unitful.string(x::Unitlike)</code> about the string expression of unit</p>
<p dir="auto">At the case of <code>Int</code> the bracket is absence and, at the case of the unit consists of only <code>s</code> the bracket is absence.<br>
<code>has_value_bracket(x) = false</code> &amp;&amp; <code>has_unit_bracket(x) == false</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; string(u&quot;1s^2&quot;)	# u&quot;1s^2&quot; -&gt; 1 s²
&quot;1s^2&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>1s^2<span class="pl-pds">"</span></span>)	<span class="pl-c"><span class="pl-c">#</span> u"1s^2" -&gt; 1 s²</span>
<span class="pl-s"><span class="pl-pds">"</span>1s^2<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">At the case of <code>Float64</code> the bracket is absence and, at the case of the unit consists of <code>kg</code> and <code>m</code> the bracket is presence.<br>
<code>has_value_bracket(x) = false</code> &amp;&amp; <code>has_unit_bracket(x) == true</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; string(u&quot;1.0m*kg&quot;)	# u&quot;1.0m*kg&quot; -&gt; 1.0 kg m
&quot;1.0(kg*m)&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>1.0m*kg<span class="pl-pds">"</span></span>)	<span class="pl-c"><span class="pl-c">#</span> u"1.0m*kg" -&gt; 1.0 kg m</span>
<span class="pl-s"><span class="pl-pds">"</span>1.0(kg*m)<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">At the case of <code>Rational</code> the bracket is presence and, at the case of the unit consists of <code>m</code> the bracket is absence.<br>
<code>has_value_bracket(x) = true</code> &amp;&amp; <code>has_unit_bracket(x) == false</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; string((1//2)u&quot;m&quot;)	# (1//2)u&quot;m&quot; -&gt; 1//2 m
&quot;(1//2)m&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>((<span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">2</span>)<span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>)	<span class="pl-c"><span class="pl-c">#</span> (1//2)u"m" -&gt; 1//2 m</span>
<span class="pl-s"><span class="pl-pds">"</span>(1//2)m<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">At the case of <code>Rational</code> the bracket is presence and, at the case of the unit consists of <code>m</code> and <code>s</code> the bracket is presence.<br>
<code>has_value_bracket(x) = true</code> &amp;&amp; <code>has_unit_bracket(x) == true</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; string((1+2im)u&quot;m/s&quot;)	# (1+2im)u&quot;m/s&quot; -&gt; (1 + 2im) m s⁻¹
&quot;(1 + 2im)*(m/s)&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>((<span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2im</span>)<span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m/s<span class="pl-pds">"</span></span>)	<span class="pl-c"><span class="pl-c">#</span> (1+2im)u"m/s" -&gt; (1 + 2im) m s⁻¹</span>
<span class="pl-s"><span class="pl-pds">"</span>(1 + 2im)*(m/s)<span class="pl-pds">"</span></span></pre></div>
<h2 dir="auto"><a id="user-content-parsability" class="anchor" aria-hidden="true" href="#parsability"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Parsability</h2>
<h4 dir="auto"><a id="user-content-expamle" class="anchor" aria-hidden="true" href="#expamle"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>expamle</h4>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using UnitfulParsableString 

julia&gt; x = u&quot;1.0m^2/K^(1//3)&quot;
1.0 m² K⁻¹ᐟ³

julia&gt;  x |&gt; string |&gt; uparse == x
true

julia&gt; x = 2u&quot;m&quot;//3u&quot;s&quot;
2//3 m s⁻¹

julia&gt; x |&gt; string |&gt; uparse == x
true"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> UnitfulParsableString 

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>1.0m^2/K^(1//3)<span class="pl-pds">"</span></span>
<span class="pl-c1">1.0</span> m² K⁻¹ᐟ³

julia<span class="pl-k">&gt;</span>  x <span class="pl-k">|&gt;</span> string <span class="pl-k">|&gt;</span> uparse <span class="pl-k">==</span> x
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">2</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span><span class="pl-k">//</span><span class="pl-c1">3</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>s<span class="pl-pds">"</span></span>
<span class="pl-c1">2</span><span class="pl-k">//</span><span class="pl-c1">3</span> m s⁻¹

julia<span class="pl-k">&gt;</span> x <span class="pl-k">|&gt;</span> string <span class="pl-k">|&gt;</span> uparse <span class="pl-k">==</span> x
<span class="pl-c1">true</span></pre></div>
<p dir="auto">See more test/runtest.jl.</p>
<h2 dir="auto"><a id="user-content-note" class="anchor" aria-hidden="true" href="#note"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Note</h2>
<p dir="auto"><code>UnitfulParsableString.jl</code> not change the <code>display</code>, <code>show</code> and <code>print</code> functions about <code>Unitful.jl</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Unitful

julia&gt; 1.0u&quot;m&quot;
1.0 m

julia&gt; 1.0u&quot;m*s&quot;
1.0 m s

julia&gt; using UnitfulParsableString

julia&gt; 1.0u&quot;m&quot;
1.0 m

julia&gt; 1.0u&quot;m*s&quot;
1.0 m s"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Unitful

julia<span class="pl-k">&gt;</span> <span class="pl-c1">1.0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>
<span class="pl-c1">1.0</span> m

julia<span class="pl-k">&gt;</span> <span class="pl-c1">1.0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m*s<span class="pl-pds">"</span></span>
<span class="pl-c1">1.0</span> m s

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> UnitfulParsableString

julia<span class="pl-k">&gt;</span> <span class="pl-c1">1.0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>
<span class="pl-c1">1.0</span> m

julia<span class="pl-k">&gt;</span> <span class="pl-c1">1.0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m*s<span class="pl-pds">"</span></span>
<span class="pl-c1">1.0</span> m s</pre></div>
<h2 dir="auto"><a id="user-content-limitation" class="anchor" aria-hidden="true" href="#limitation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Limitation</h2>
<p dir="auto">This package not suppert  <code>Logscaled</code> units i.e., <code>Gain</code> or <code>Lebel</code> yet.</p>
<h2 dir="auto"><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related Packages</h2>
<ul dir="auto">
<li><a href="https://github.com/PainterQubits/Unitful.jl">Unitful.jl</a> - Implements dimensional numerical quantities for Julia</li>
</ul>
</article></div>