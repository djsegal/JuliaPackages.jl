<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-tabularmakie" class="anchor" aria-hidden="true" href="#tabularmakie"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TabularMakie</h1>
<p><a href="https://greimel.github.io/TabularMakie.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://greimel.github.io/TabularMakie.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/greimel/TabularMakie.jl/actions"><img src="https://github.com/greimel/TabularMakie.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/greimel/TabularMakie.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/72506f94023071a7476a37b47d059bd26b8f4597364ce763efa08532a74759dd/68747470733a2f2f636f6465636f762e696f2f67682f677265696d656c2f546162756c61724d616b69652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/greimel/TabularMakie.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>I wrote this package because I couldn't figure out how to fix some things in <a href="https://github.com/JuliaPlots/AlgebraOfGraphics.jl">AlgebraOfGraphics.jl</a> (see <a href="https://github.com/JuliaPlots/AlgebraOfGraphics.jl/issues/136">#136</a>).</p>
<p><strong>NOTE:</strong> Most of these things are fixed in AlgebraOfGraphics.jl 0.4.</p>
<h2><a id="user-content-an-example" class="anchor" aria-hidden="true" href="#an-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>An example</h2>
<details> <summary> Generate Data </summary>
<h3><a id="user-content-generate-data" class="anchor" aria-hidden="true" href="#generate-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Generate data</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using DataFrames, CategoricalArrays
using DataAPI: refarray

cs_df = let
	N = 100
	dummy_df = DataFrame(
		xxx = rand(N),
		yyy = rand(N),
		s_m  = rand(5:13, N),
		g_c  = rand([&quot;c 1&quot;, &quot;c 2&quot;, &quot;c 3&quot;], N) |&gt; categorical,
		g_lx = rand([&quot;lx 1&quot;, &quot;lx 2&quot;, &quot;lx 3&quot;], N) |&gt; categorical,
		g_m  = rand([&quot;m 1&quot;, &quot;m 2&quot;, &quot;m 3&quot;], N) |&gt; categorical
		)

	dummy_df[:,:s_c] = 2 .* rand(N) .+ refarray(dummy_df.g_lx)
	dummy_df
end
"><pre><span class="pl-k">using</span> DataFrames, CategoricalArrays
<span class="pl-k">using</span> DataAPI<span class="pl-k">:</span> refarray

cs_df <span class="pl-k">=</span> <span class="pl-k">let</span>
	N <span class="pl-k">=</span> <span class="pl-c1">100</span>
	dummy_df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(
		xxx <span class="pl-k">=</span> <span class="pl-c1">rand</span>(N),
		yyy <span class="pl-k">=</span> <span class="pl-c1">rand</span>(N),
		s_m  <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">13</span>, N),
		g_c  <span class="pl-k">=</span> <span class="pl-c1">rand</span>([<span class="pl-s"><span class="pl-pds">"</span>c 1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>c 2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>c 3<span class="pl-pds">"</span></span>], N) <span class="pl-k">|&gt;</span> categorical,
		g_lx <span class="pl-k">=</span> <span class="pl-c1">rand</span>([<span class="pl-s"><span class="pl-pds">"</span>lx 1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>lx 2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>lx 3<span class="pl-pds">"</span></span>], N) <span class="pl-k">|&gt;</span> categorical,
		g_m  <span class="pl-k">=</span> <span class="pl-c1">rand</span>([<span class="pl-s"><span class="pl-pds">"</span>m 1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>m 2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>m 3<span class="pl-pds">"</span></span>], N) <span class="pl-k">|&gt;</span> categorical
		)

	dummy_df[:,<span class="pl-c1">:s_c</span>] <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">.*</span> <span class="pl-c1">rand</span>(N) <span class="pl-k">.+</span> <span class="pl-c1">refarray</span>(dummy_df<span class="pl-k">.</span>g_lx)
	dummy_df
<span class="pl-k">end</span></pre></div>
</details>
<p>This is how you would create a quick plot where the axis are automatically labelled and legends are automatically created.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using TabularMakie, CairoMakie

fig = lplot(Scatter, cs_df,
	:xxx,
	:yyy;
	color = :s_c,
	marker = :g_m,
	markersize = :s_m,
	layout_wrap = :g_lx
  )
"><pre><span class="pl-k">using</span> TabularMakie, CairoMakie

fig <span class="pl-k">=</span> <span class="pl-c1">lplot</span>(Scatter, cs_df,
	<span class="pl-c1">:xxx</span>,
	<span class="pl-c1">:yyy</span>;
	color <span class="pl-k">=</span> <span class="pl-c1">:s_c</span>,
	marker <span class="pl-k">=</span> <span class="pl-c1">:g_m</span>,
	markersize <span class="pl-k">=</span> <span class="pl-c1">:s_m</span>,
	layout_wrap <span class="pl-k">=</span> <span class="pl-c1">:g_lx</span>
  )</pre></div>
<p>You can rename and transform variables on the fly using the <code>source =&gt; transformation =&gt; newname</code> syntax from <a href="https://github.com/JuliaData/DataFrames.jl">DataFrames.jl</a>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using CategoricalArrays: recode!

rec_1(x) = recode!(x, &quot;m 1&quot; =&gt; &quot;Nice name&quot;, &quot;m 2&quot; =&gt; &quot;Other&quot;)
rec_2(x) = recode!(x, &quot;lx 1&quot; =&gt; &quot;Panel 1&quot;)
minus1(x) = x .- 1

fig = lplot(Scatter, cs_df,
	:xxx =&gt; minus1,
	:yyy =&gt; ByRow(x -&gt; x + 1) =&gt; &quot;the y plus one&quot;;
	color = :s_c =&gt; &quot;hey there&quot;,
	marker = :g_m =&gt; rec_1 =&gt; &quot;bla&quot;,
	markersize = :s_m =&gt; :tada,
	layout_wrap = :g_lx =&gt; rec_2
  )


"><pre><span class="pl-k">using</span> CategoricalArrays<span class="pl-k">:</span> recode!

<span class="pl-en">rec_1</span>(x) <span class="pl-k">=</span> <span class="pl-c1">recode!</span>(x, <span class="pl-s"><span class="pl-pds">"</span>m 1<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Nice name<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>m 2<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Other<span class="pl-pds">"</span></span>)
<span class="pl-en">rec_2</span>(x) <span class="pl-k">=</span> <span class="pl-c1">recode!</span>(x, <span class="pl-s"><span class="pl-pds">"</span>lx 1<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Panel 1<span class="pl-pds">"</span></span>)
<span class="pl-en">minus1</span>(x) <span class="pl-k">=</span> x <span class="pl-k">.-</span> <span class="pl-c1">1</span>

fig <span class="pl-k">=</span> <span class="pl-c1">lplot</span>(Scatter, cs_df,
	<span class="pl-c1">:xxx</span> <span class="pl-k">=&gt;</span> minus1,
	<span class="pl-c1">:yyy</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">ByRow</span>(x <span class="pl-k">-&gt;</span> x <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>the y plus one<span class="pl-pds">"</span></span>;
	color <span class="pl-k">=</span> <span class="pl-c1">:s_c</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>hey there<span class="pl-pds">"</span></span>,
	marker <span class="pl-k">=</span> <span class="pl-c1">:g_m</span> <span class="pl-k">=&gt;</span> rec_1 <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>bla<span class="pl-pds">"</span></span>,
	markersize <span class="pl-k">=</span> <span class="pl-c1">:s_m</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">:tada</span>,
	layout_wrap <span class="pl-k">=</span> <span class="pl-c1">:g_lx</span> <span class="pl-k">=&gt;</span> rec_2
  )

</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/908ace64967fd1f015faffaac1dee1d87929416efeabd55151280b961a543b2d/68747470733a2f2f677265696d656c2e6769746875622e696f2f546162756c61724d616b69652e6a6c2f6465762f6669675f6373322e737667"><img src="https://camo.githubusercontent.com/908ace64967fd1f015faffaac1dee1d87929416efeabd55151280b961a543b2d/68747470733a2f2f677265696d656c2e6769746875622e696f2f546162756c61724d616b69652e6a6c2f6465762f6669675f6373322e737667" alt="" data-canonical-src="https://greimel.github.io/TabularMakie.jl/dev/fig_cs2.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-what-this-package-can-do-but-algebraofgraphics-cant" class="anchor" aria-hidden="true" href="#what-this-package-can-do-but-algebraofgraphics-cant"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>What this package can do but AlgebraOfGraphics can't</h2>
<ul>
<li><s> rename or transform variables on the fly (e.g. <code>:xxx =&gt; "name of x"</code> or <code>:yyy =&gt; ByRow(log)</code>) </s></li>
<li><s> supports <code>layout_wrap</code> (in addition to <code>layout_x</code> and <code>layout_y</code>) </s></li>
<li><s> generates legend for continuous aesthetics (e.g. markersize and linewidth) </s></li>
<li><s> generates a colorbar if <code>color</code> is provided with a continuous variable </s></li>
<li><s> adds a non-incremental mode for creating a plot, this allows creation of grouped bar plots </s></li>
<li><s> allows access of the legend to change position and attributes </s></li>
</ul>
<p>All these issues were fixed in AlgebraOfGraphics 0.4</p>
<h2><a id="user-content-what-this-package-cant-do-but-algebraofgraphics-can" class="anchor" aria-hidden="true" href="#what-this-package-cant-do-but-algebraofgraphics-can"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>What this package can't do but AlgebraOfGraphics can</h2>
<ul>
<li>combine different plots (e.g. <code>visual(Scatter) + linear</code>)</li>
<li>use other inputs than tables (the "slicing context")</li>
</ul>
<p>Open an issue if you find more.</p>
</article></div>