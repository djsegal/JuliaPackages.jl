<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-atiyahbottjl" class="anchor" aria-hidden="true" href="#atiyahbottjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AtiyahBott.jl</h1>
<p dir="auto"><a href="https://mgemath.github.io/AtiyahBott.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Doc" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://arxiv.org/abs/2105.11183" rel="nofollow"><img src="https://camo.githubusercontent.com/bc81a4e6de9d1b0e4e0bc7e8abba22b5525aa2a012b80bd6649c089d4a62dadb/68747470733a2f2f696d672e736869656c64732e696f2f776562736974653f75705f6d6573736167653d41727869762675726c3d687474707325334125324625324661727869762e6f7267253246616273253246323130352e3131313833" alt="Site" data-canonical-src="https://img.shields.io/website?up_message=Arxiv&amp;url=https%3A%2F%2Farxiv.org%2Fabs%2F2105.11183" style="max-width: 100%;"></a>
<a href="https://www.sciencedirect.com/science/article/pii/S0747717122000050" rel="nofollow"><img src="https://camo.githubusercontent.com/e18e11adc1222ac840e1d9d9156bdb1fcfc50620fb9e67d94b8098719923c4de/68747470733a2f2f696d672e736869656c64732e696f2f776562736974653f75705f6d6573736167653d4a53432675726c3d68747470732533412532462532467777772e736369656e63656469726563742e636f6d253246736369656e636525324661727469636c652532467069692532465330373437373137313232303030303530" alt="Site" data-canonical-src="https://img.shields.io/website?up_message=JSC&amp;url=https%3A%2F%2Fwww.sciencedirect.com%2Fscience%2Farticle%2Fpii%2FS0747717122000050" style="max-width: 100%;"></a></p>
<p dir="auto">This package contains an implementation of the Atiyah-Bott residue formula for the moduli space of genus 0 stable maps in the Julia language. The theory behind the package and the algorithm are described in the paper
"Effective computations of the Atiyah-Bott formula" by Giosuè Muratore and Csaba Schneider (<a href="https://doi.org/10.1016/j.jsc.2022.01.005" rel="nofollow">https://doi.org/10.1016/j.jsc.2022.01.005</a>).<br>
Full documentation is available here: <a href="https://mgemath.github.io/AtiyahBott.jl/" rel="nofollow">https://mgemath.github.io/AtiyahBott.jl/</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">In order to install this package, type:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg
julia&gt; Pkg.add(&quot;AtiyahBott&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg
julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>AtiyahBott<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">After the installation, simply type:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using AtiyahBott"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> AtiyahBott</pre></div>
<p dir="auto">every time you want to use the program.</p>
<p dir="auto">To use our code, you should first define the equivariant classes to be calculated as</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; P = ..."><pre>julia<span class="pl-k">&gt;</span> P <span class="pl-k">=</span> <span class="pl-k">...</span></pre></div>
<p dir="auto">After the "=", one has to write an expression in the equivariant classes. After P is defined, one has to call the
Atiyah-Bott formula by the command</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; AtiyahBottFormula(n,d,m,P);"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">AtiyahBottFormula</span>(n,d,m,P);</pre></div>
<p dir="auto">The full list of the currently supported equivariant classes is the following:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="O1_i(j)       (pull back of the line bundle O(1) with respect to the ev_j)
O1()           (product of all O1_i(j))
Incidency(r)    (class of curves meeting a linear subspace)
Hypersurface(b) (class of curves contained in a hypersurface of degree b)
Contact()        (class of contact curves)
R1(k)           (first derived functor of direct image of the pull back of O(-k))
Psi(a)        (cycle of psi-classes)
Jet(p,q)      (Euler class of the jet bundle J^p)"><pre><span class="pl-c1">O1_i</span>(j)       (pull back of the line bundle <span class="pl-c1">O</span>(<span class="pl-c1">1</span>) with respect to the ev_j)
<span class="pl-c1">O1</span>()           (product of all <span class="pl-c1">O1_i</span>(j))
<span class="pl-c1">Incidency</span>(r)    (class of curves meeting a linear subspace)
<span class="pl-c1">Hypersurface</span>(b) (class of curves contained <span class="pl-k">in</span> a hypersurface of degree b)
<span class="pl-c1">Contact</span>()        (class of contact curves)
<span class="pl-c1">R1</span>(k)           (first derived functor of direct image of the pull back of <span class="pl-c1">O</span>(<span class="pl-k">-</span>k))
<span class="pl-c1">Psi</span>(a)        (cycle of psi<span class="pl-k">-</span>classes)
<span class="pl-c1">Jet</span>(p,q)      (Euler class of the jet bundle J<span class="pl-k">^</span>p)</pre></div>
<p dir="auto">Brief descriptions on these functions can be obtained through the standard help functionality of Julia by typing "?" and then the name of the function.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="help?&gt; Psi"><pre>help?<span class="pl-k">&gt;</span> Psi</pre></div>
<p dir="auto">Note that computations can be faster using multi-threading. Visit <a href="https://docs.julialang.org/en/v1/manual/multi-threading/#man-multithreading" rel="nofollow">https://docs.julialang.org/en/v1/manual/multi-threading/#man-multithreading</a> to learn how to start Julia with multi-threading.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">In the following we list some geometrically meaning computations.</p>
<h3 dir="auto"><a id="user-content-curves-in-projective-spaces" class="anchor" aria-hidden="true" href="#curves-in-projective-spaces"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Curves in projective spaces</h3>
<p dir="auto">To compute the number of rational plane curves of degree d through 3d−1 general points, one may write:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; d = 1; #for other values of d, change this line
julia&gt; P = O1()^2;
julia&gt; AtiyahBottFormula(2,d,3*d-1,P);"><pre>julia<span class="pl-k">&gt;</span> d <span class="pl-k">=</span> <span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">#</span>for other values of d, change this line</span>
julia<span class="pl-k">&gt;</span> P <span class="pl-k">=</span> <span class="pl-c1">O1</span>()<span class="pl-k">^</span><span class="pl-c1">2</span>;
julia<span class="pl-k">&gt;</span> <span class="pl-c1">AtiyahBottFormula</span>(<span class="pl-c1">2</span>,d,<span class="pl-c1">3</span><span class="pl-k">*</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>,P);</pre></div>
<p dir="auto">Alternatively, one can perform such computation with zero marked points by typing:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; P = Incidency(2)^(3*d-1);
julia&gt; AtiyahBottFormula(2,d,0,P);"><pre>julia<span class="pl-k">&gt;</span> P <span class="pl-k">=</span> <span class="pl-c1">Incidency</span>(<span class="pl-c1">2</span>)<span class="pl-k">^</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>);
julia<span class="pl-k">&gt;</span> <span class="pl-c1">AtiyahBottFormula</span>(<span class="pl-c1">2</span>,d,<span class="pl-c1">0</span>,P);</pre></div>
<h3 dir="auto"><a id="user-content-curves-in-hypersurfaces" class="anchor" aria-hidden="true" href="#curves-in-hypersurfaces"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Curves in Hypersurfaces</h3>
<p dir="auto">The virtual number of rational degree d curves on a general complete intersection of type (2,3) in the projective space of dimension 5:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; d = 1; #for other values of d, change this line
julia&gt; P = Hypersurface([2,3]);
julia&gt; AtiyahBottFormula(5,d,0,P);"><pre>julia<span class="pl-k">&gt;</span> d <span class="pl-k">=</span> <span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">#</span>for other values of d, change this line</span>
julia<span class="pl-k">&gt;</span> P <span class="pl-k">=</span> <span class="pl-c1">Hypersurface</span>([<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]);
julia<span class="pl-k">&gt;</span> <span class="pl-c1">AtiyahBottFormula</span>(<span class="pl-c1">5</span>,d,<span class="pl-c1">0</span>,P);</pre></div>
<p dir="auto">The number of rational degree d curves on a cubic surface passing through d-1 points:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; d = 1; #for other values of d, change this line
julia&gt; P = Hypersurface(3)*(Incidency(2)//3)^(d-1);
julia&gt; AtiyahBottFormula(3,d,0,P);"><pre>julia<span class="pl-k">&gt;</span> d <span class="pl-k">=</span> <span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">#</span>for other values of d, change this line</span>
julia<span class="pl-k">&gt;</span> P <span class="pl-k">=</span> <span class="pl-c1">Hypersurface</span>(<span class="pl-c1">3</span>)<span class="pl-k">*</span>(<span class="pl-c1">Incidency</span>(<span class="pl-c1">2</span>)<span class="pl-k">//</span><span class="pl-c1">3</span>)<span class="pl-k">^</span>(d<span class="pl-k">-</span><span class="pl-c1">1</span>);
julia<span class="pl-k">&gt;</span> <span class="pl-c1">AtiyahBottFormula</span>(<span class="pl-c1">3</span>,d,<span class="pl-c1">0</span>,P);</pre></div>
<h3 dir="auto"><a id="user-content-tangency-conditions" class="anchor" aria-hidden="true" href="#tangency-conditions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tangency conditions</h3>
<p dir="auto">The number plane rational degree d curves through 3d-2 points and tangent to a line:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; d = 1; #for other values of d, change this line
julia&gt; P = Incidency(2)^(3*d-1)*Jet(1,1);
julia&gt; AtiyahBottFormula(2,d,1,P);"><pre>julia<span class="pl-k">&gt;</span> d <span class="pl-k">=</span> <span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">#</span>for other values of d, change this line</span>
julia<span class="pl-k">&gt;</span> P <span class="pl-k">=</span> <span class="pl-c1">Incidency</span>(<span class="pl-c1">2</span>)<span class="pl-k">^</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-c1">Jet</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>);
julia<span class="pl-k">&gt;</span> <span class="pl-c1">AtiyahBottFormula</span>(<span class="pl-c1">2</span>,d,<span class="pl-c1">1</span>,P);</pre></div>
<h3 dir="auto"><a id="user-content-hurwitz-numbers" class="anchor" aria-hidden="true" href="#hurwitz-numbers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hurwitz numbers</h3>
<p dir="auto">The weighted number of genus 0 degree d covers of the projective line, which are étale over a fixed point and with 2d-2 fixed finite simple ramification points, is:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; d = 1; #for other values of d, change this line
julia&gt; P = O1()*Psi(ones(Int,2*d-2));
julia&gt; AtiyahBottFormula(1,d,2*d-2,P);"><pre>julia<span class="pl-k">&gt;</span> d <span class="pl-k">=</span> <span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">#</span>for other values of d, change this line</span>
julia<span class="pl-k">&gt;</span> P <span class="pl-k">=</span> <span class="pl-c1">O1</span>()<span class="pl-k">*</span><span class="pl-c1">Psi</span>(<span class="pl-c1">ones</span>(Int,<span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">-</span><span class="pl-c1">2</span>));
julia<span class="pl-k">&gt;</span> <span class="pl-c1">AtiyahBottFormula</span>(<span class="pl-c1">1</span>,d,<span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">-</span><span class="pl-c1">2</span>,P);</pre></div>
<p dir="auto">See <a href="https://arxiv.org/pdf/math/0101147.pdf" rel="nofollow">https://arxiv.org/pdf/math/0101147.pdf</a>.</p>
<h2 dir="auto"><a id="user-content-future-goals" class="anchor" aria-hidden="true" href="#future-goals"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Future goals</h2>
<p dir="auto">The following may be future expansions of this program.</p>
<ul dir="auto">
<li>Support for positive genus curves.</li>
<li>Improve parallel acceleration.</li>
</ul>
<p dir="auto">If you have other suggestions, please raise an issue on github.</p>
<h1 dir="auto"><a id="user-content-citing" class="anchor" aria-hidden="true" href="#citing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citing</h1>
<p dir="auto">We encourage you to cite our work if you have used our package. See "Cite this repository" on this page.</p>
</article></div>