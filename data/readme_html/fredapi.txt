<div id="readme" class="md" data-path="readme.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-fredapijl" class="anchor" aria-hidden="true" href="#fredapijl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>FredApi.jl</h1>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/logo.png"><img src="docs/src/assets/logo.png" alt="&quot;logo&quot;" style="max-width:100%;"></a></p>
<p><code>FredApi.jl</code> offers the possibility to access the <a href="https://research.stlouisfed.org/docs/api/" rel="nofollow">FRED Developer API</a> in Julia.
This package is available in R as <a href="https://github.com/markushhh/FredApi">FredApi</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<pre lang="@julia"><code>add FredApi
</code></pre>
<p>or</p>
<pre lang="@julia"><code>add https://github.com/markushhh/FredApi.jl/
</code></pre>
<h2><a id="user-content-index" class="anchor" aria-hidden="true" href="#index"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Index</h2>
<p>The package contains following functions:</p>
<ul>
<li><code>set_api_key</code></li>
<li><code>get_symbols</code></li>
<li><code>search_symbol</code></li>
<li><code>get_release</code></li>
<li><code>get_metadata</code></li>
<li><code>get_category</code></li>
<li><code>get_sources</code></li>
<li><code>get_source</code></li>
</ul>
<h2><a id="user-content-set-up-an-envionment-variable-for-the-fred-api-key" class="anchor" aria-hidden="true" href="#set-up-an-envionment-variable-for-the-fred-api-key"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Set up an Envionment Variable for the FRED API key</h2>
<p>You can either set up an environment variable for the FRED API key called "API_FRED" or use a local environment variable when entering a new julia session with</p>
<pre lang="@julia"><code>set_api_key("YOUR_KEY")
</code></pre>
<p>where you manually replace <code>YOUR_KEY</code> with your private API key.
To set an environment variable under windows, open command prompt and type in <code>setx API_FRED "YOUR_KEY"</code> where <code>YOUR_KEY</code> must be replaced with your API key.
To open the command prompt press <code>Windows+R</code>, then type in <code>cmd</code> and press Enter.
To set an environment variable on an other OS follow <a href="https://lmgtfy.com/?qtype=search&amp;t=w&amp;segment=lmgtfy2&amp;is_ad=0&amp;gclid=&amp;q=how+to+set+environment+variable+&amp;as=0&amp;engine=&amp;media_type=" rel="nofollow">this</a> link and add your OS.
You can request a FRED API key at <a href="https://research.stlouisfed.org/useraccount/login/secure/" rel="nofollow">https://research.stlouisfed.org/useraccount/login/secure/</a>.</p>
<h2><a id="user-content-tutorial-and-workflow" class="anchor" aria-hidden="true" href="#tutorial-and-workflow"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Tutorial and Workflow</h2>
<pre lang="@julia"><code>using FredApi
set_api_key("API_FRED")
</code></pre>
<p>Following is an applied tutorial about how to use the package. Simply replace the symbol with your prefered symbol and run the function.</p>
<p>Download a full dataset with</p>
<pre lang="@julia"><code>get_symbols("GDPC1")
</code></pre>
<p>output</p>
<pre lang="@julia"><code>291×1 TimeArray{Float64,1,Date,Array{Float64,1}} 1947-01-01 to 2019-07-01
│            │ Value     │
├────────────┼───────────┤
│ 1947-01-01 │ 2033.061  │
│ 1947-04-01 │ 2027.639  │
│ 1947-07-01 │ 2023.452  │
│ 1947-10-01 │ 2055.103  │
│ 1948-01-01 │ 2086.017  │
│ 1948-04-01 │ 2120.45   │
│ 1948-07-01 │ 2132.598  │
│ 1948-10-01 │ 2134.981  │
│ 1949-01-01 │ 2105.562  │
   ⋮
│ 2017-10-01 │ 18322.464 │
│ 2018-01-01 │ 18438.254 │
│ 2018-04-01 │ 18598.135 │
│ 2018-07-01 │ 18732.72  │
│ 2018-10-01 │ 18783.548 │
│ 2019-01-01 │ 18927.281 │
│ 2019-04-01 │ 19021.86  │
│ 2019-07-01 │ 19121.112 │
</code></pre>
<p>Download a subsample</p>
<pre lang="@julia"><code>get_symbols("GDPC1", "2010-01-01", "2019-01-01")
</code></pre>
<p>output</p>
<pre lang="@julia"><code>37×1 TimeArray{Float64,1,Date,Array{Float64,1}} 2010-01-01 to 2019-01-01
│            │ Value     │
├────────────┼───────────┤
│ 2010-01-01 │ 15415.145 │
│ 2010-04-01 │ 15557.277 │
│ 2010-07-01 │ 15671.967 │
│ 2010-10-01 │ 15750.625 │
│ 2011-01-01 │ 15712.754 │
│ 2011-04-01 │ 15825.096 │
│ 2011-07-01 │ 15820.7   │
│ 2011-10-01 │ 16004.107 │
│ 2012-01-01 │ 16129.418 │
   ⋮
│ 2017-04-01 │ 18021.048 │
│ 2017-07-01 │ 18163.558 │
│ 2017-10-01 │ 18322.464 │
│ 2018-01-01 │ 18438.254 │
│ 2018-04-01 │ 18598.135 │
│ 2018-07-01 │ 18732.72  │
│ 2018-10-01 │ 18783.548 │
│ 2019-01-01 │ 18927.281 │
</code></pre>
<p>To change the time frame of the dataset, the <code>collapse()</code> function in <code>TimeSeries.jl</code> comes in really handy.</p>
<pre lang="@julia"><code>using TimeSeries

x = get_symbols("FEDFUNDS", "2000-01-01", "2019-01-01")

collapse(x, year, first)
</code></pre>
<p>output</p>
<pre lang="@julia"><code>20×1 TimeArray{Float64,1,Date,Array{Float64,1}} 2000-01-01 to 2019-01-01
│            │ Value │
├────────────┼───────┤
│ 2000-01-01 │ 5.45  │
│ 2001-01-01 │ 5.98  │
│ 2002-01-01 │ 1.73  │
│ 2003-01-01 │ 1.24  │
│ 2004-01-01 │ 1.0   │
│ 2005-01-01 │ 2.28  │
│ 2006-01-01 │ 4.29  │
│ 2007-01-01 │ 5.25  │
│ 2008-01-01 │ 3.94  │
   ⋮
│ 2012-01-01 │ 0.08  │
│ 2013-01-01 │ 0.14  │
│ 2014-01-01 │ 0.07  │
│ 2015-01-01 │ 0.11  │
│ 2016-01-01 │ 0.34  │
│ 2017-01-01 │ 0.65  │
│ 2018-01-01 │ 1.41  │
│ 2019-01-01 │ 2.4   │
</code></pre>
<p>To explore more options, go to <a href="https://github.com/JuliaStats/TimeSeries.jl/blob/master/docs/src/combine.md">TimeSeries.jl</a></p>
<pre lang="@julia"><code>using Plots

plot(x, legend = false)
</code></pre>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/plot.png"><img src="docs/src/assets/plot.png" alt="&quot;plot&quot;" style="max-width:100%;"></a></p>
<p>In case you do not know which ID a time series is associated with, you can search for it using the API. Let's have a look over an example. We would like to download the French Gross Domestic Product. We would use <code>search_symbol</code> and explore the results.</p>
<pre lang="@julia"><code>x = search_symbol("GDP", "France")
println(x)
</code></pre>
<p>The resulting DataFrame is sorted by popularity, you can always sort by any column you'd like by applying <code>sort!(x, j)</code> to sort by the <code>j</code>-th column.</p>
<pre><code>13×3 DataFrame
│ Row │ popularity │ title            │ id                                                                                                │
│     │ Int64      │ String           │ String                                                                                            │
├─────┼────────────┼──────────────────┼───────────────────────────────────────────────────────────────────────────────────────────────────┤
│ 1   │ 47         │ CLVMNACSCAB1GQFR │ Real Gross Domestic Product for France                                                            │
│ 2   │ 24         │ CPMNACSCAB1GQFR  │ Gross Domestic Product for France                                                                 │
│ 3   │ 20         │ NYGDPPCAPKDFRA   │ Constant GDP per capita for France                                                                │
│ 4   │ 16         │ RGDPNAFRA666NRUG │ Real GDP at Constant National Prices for France                                                   │
│ 5   │ 12         │ CLVMNACNSAB1GQFR │ Real Gross Domestic Product for France                                                            │
│ 6   │ 11         │ MKTGDPFRA646NWDB │ Gross Domestic Product for France                                                                 │
│ 7   │ 7          │ NAEXKP01FRQ661S  │ Gross Domestic Product by Expenditure in Constant Prices: Total Gross Domestic Product for France │
│ 8   │ 7          │ CPMNACNSAB1GQFR  │ Gross Domestic Product for France                                                                 │
│ 9   │ 5          │ NAEXKP01FRQ657S  │ Gross Domestic Product by Expenditure in Constant Prices: Total Gross Domestic Product for France │
│ 10  │ 5          │ NAEXKP01FRQ189S  │ Gross Domestic Product by Expenditure in Constant Prices: Total Gross Domestic Product for France │
│ 11  │ 3          │ NAEXKP01FRA189S  │ Gross Domestic Product by Expenditure in Constant Prices: Total Gross Domestic Product for France │
│ 12  │ 2          │ NAEXKP01FRA657S  │ Gross Domestic Product by Expenditure in Constant Prices: Total Gross Domestic Product for France │
│ 13  │ 1          │ NAEXKP01FRA661S  │ Gross Domestic Product by Expenditure in Constant Prices: Total Gross Domestic Product for France │
</code></pre>
<p>Let's take the most popular series <code>Real Gross Domestic Product for France</code> and get more information about it.</p>
<pre lang="@julia"><code>get_metadata("CLVMNACSCAB1GQFR")
</code></pre>
<p>output</p>
<pre><code>Metadata for: CLVMNACSCAB1GQFR
Title: Real Gross Domestic Product for France
Units: Millions of Chained 2010 Euros
Adjustment: Seasonally Adjusted
Frequency: Quarterly
Notes: Eurostat unit ID: CLV10_MNAC
Eurostat item ID = B1GQ
Eurostat country ID: FR

Seasonally and calendar adjusted data.

For euro area member states, the national currency series are converted into euros using the irrevocably fixed exchange rate. This preserves the same growth rates than for the previous national currency series. Both series coincide for years after accession to the euro area but differ for earlier years due to market exchange rate movements.

Copyright, European Union, http://ec.europa.eu, 1995-2016.Complete terms of use are available at http://ec.europa.eu/geninfo/legal_notices_en.htm#copyright
</code></pre>
<p>, to get release information about the series, run <code>get_release("CLVMNACSCAB1GQFR")</code></p>
<p>output:</p>
<pre><code>Dict{String,Any} with 6 entries:
  "realtime_start" =&gt; "2020-01-07"
  "name"           =&gt; "National Accounts - GDP (Eurostat)"
  "id"             =&gt; 267
  "realtime_end"   =&gt; "2020-01-07"
  "link"           =&gt; "http://appsso.eurostat.ec.europa.eu/nui/show.do?dataset=…
  "press_release"  =&gt; true
</code></pre>
<p>, to get the category run: <code>get_category("CLVMNACSCAB1GQFR")</code>. In this example we get <code>GDP</code>.</p>
<p>To get all sources from FRED, run <code>get_sources()</code> which results in</p>
<pre><code>89×3 DataFrame. Omitted printing of 1 columns
│ Row │ id    │ name                                                    │
│     │ Int64 │ String                                                  │
├─────┼───────┼─────────────────────────────────────────────────────────┤
│ 1   │ 1     │ Board of Governors of the Federal Reserve System (US)   │
│ 2   │ 3     │ Federal Reserve Bank of Philadelphia                    │
│ 3   │ 4     │ Federal Reserve Bank of St. Louis                       │
│ 4   │ 6     │ Federal Financial Institutions Examination Council (US) │
│ 5   │ 11    │ Dow Jones &amp; Company                                     │
│ 6   │ 14    │ University of Michigan                                  │
│ 7   │ 15    │ Council of Economic Advisers (US)                       │
⋮
│ 82  │ 129   │ Moody’s                                                 │
│ 83  │ 133   │ DHI Group, Inc.                                         │
│ 84  │ 135   │ Centers for Disease Control and Prevention     …
</code></pre>
<p>For more information about a source from FRED, run <code>get_source(1)</code> with an Integer specifying the source, e.g.</p>
<pre lang="@julia"><code>Dict{String,Any} with 5 entries:
  "realtime_start" =&gt; "2020-01-07"
  "name"           =&gt; "Board of Governors of the Federal Reserve System (US)"
  "id"             =&gt; 1
  "realtime_end"   =&gt; "2020-01-07"
  "link"           =&gt; "http://www.federalreserve.gov/"
</code></pre>
<h1><a id="user-content-each-comment-suggestion-or-pull-request-is-welcome" class="anchor" aria-hidden="true" href="#each-comment-suggestion-or-pull-request-is-welcome"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Each comment, suggestion or pull request is welcome!</h1>
</article></div>