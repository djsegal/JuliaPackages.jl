<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-acousticanalogiesjl-documentation" class="anchor" aria-hidden="true" href="#acousticanalogiesjl-documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AcousticAnalogies.jl Documentation</h1>
<p dir="auto"><a href="https://github.com/OpenMDAO/AcousticAnalogies.jl/actions/workflows/test.yaml"><img src="https://github.com/OpenMDAO/AcousticAnalogies.jl/actions/workflows/test.yaml/badge.svg" alt="Tests" style="max-width: 100%;"></a>
<a href="https://OpenMDAO.github.io/AcousticAnalogies.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><strong>Summary</strong>: A pure-Julia package for propeller/rotor blade noise prediction with acoustic analogies.</p>
<p dir="auto"><strong>What's an acoustic analogy?</strong></p>
<ul dir="auto">
<li>
<p dir="auto">TL;DR answer:</p>
<p dir="auto">An acoustic analogy is a noise prediction approach that takes information from
one area of the fluid domain (e.g., a propeller blade surface, or a fictitious
surface surrounding a complicated flow) and calculates the acoustics radiated
by the flow. The particular acoustic analogy implemented in <code>AcousticAnalogies.jl</code> is
especially well-suited for predicting tonal propeller/rotor noise, and has
features that ease its inclusion in gradient-based optimizations.</p>
</li>
<li>
<p dir="auto">Mathy answer:</p>
<p dir="auto">An acoustic analogy is a clever rearrangement of the Navier-Stokes equations,
the governing equations of fluid flow, into a form that looks like the classical
inhomogeneous wave equation. The inhomogeneous term represents sources of sound
in the flow. The wave equation can be solved using the appropriate <a href="https://en.wikipedia.org/wiki/Green%27s_function#Table_of_Green's_functions" rel="nofollow">Green's
function</a>,
which requires the evaluation of two surface integrals and a volume integral
(usually neglected). If the integration surface is taken to be a solid surface
in the fluid domain (e.g., a propeller blade), we can use the acoustic analogy
solution to predict the acoustics caused by the motion of and loading on the
integration surface.</p>
</li>
</ul>
<p dir="auto"><strong>Features</strong>:</p>
<ul dir="auto">
<li>Implementation of L. Lopes' compact form of Farassat's formulation 1A
(see
<a href="http://dx.doi.org/10.2514/6.2015-2673" rel="nofollow">http://dx.doi.org/10.2514/6.2015-2673</a>
or
<a href="http://dx.doi.org/10.2514/1.C034048" rel="nofollow">http://dx.doi.org/10.2514/1.C034048</a>
for details).</li>
<li>Support for stationary or constant-velocity moving observers, with an
explict calculation for the latter from D. Casalino
<a href="http://dx.doi.org/10.1016/S0022-460X(02)00986-0" rel="nofollow">http://dx.doi.org/10.1016/S0022-460X(02)00986-0</a>.</li>
<li>Thoroughly tested: unit tests for everything, and multiple comparisons of the entire
calculation to equivalent methods in NASA's ANOPP2 code.</li>
<li>Convenient, fast coordinate system transformations through
<a href="https://github.com/OpenMDAO/KinematicCoordinateTransformations.jl">KinematicCoordinateTransformations.jl</a>.</li>
<li>Written in pure Julia, and compatible with automatic differentiation (AD)
tools like <a href="https://github.com/JuliaDiff/ForwardDiff.jl">ForwardDiff.jl</a>.</li>
<li>Comprehensive docs (TODO).</li>
<li>Fast!</li>
</ul>
<p dir="auto"><strong>Installation</strong></p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="] registry add git@github.com:dingraha/DanielIngrahamRegistry.git  # Optional, but needed to resolve dependencies in the next step
] add AcousticAnalogies"><pre lang="julia-repl" class="notranslate"><code>] registry add git@github.com:dingraha/DanielIngrahamRegistry.git  # Optional, but needed to resolve dependencies in the next step
] add AcousticAnalogies
</code></pre></div>
<p dir="auto"><strong>Usage</strong></p>
<p dir="auto">See the docs.</p>
<h1 dir="auto"><a id="user-content-software-quality-assurance" class="anchor" aria-hidden="true" href="#software-quality-assurance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Software Quality Assurance</h1>
<ul dir="auto">
<li>This repository contains extensive tests run by GitHub Actions.</li>
<li>This repository only allows signed commits to be merged into the <code>main</code> branch.</li>
</ul>
</article></div>