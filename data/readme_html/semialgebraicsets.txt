<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-semialgebraicsets" class="anchor" aria-hidden="true" href="#semialgebraicsets"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SemialgebraicSets</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://github.com/JuliaAlgebra/SemialgebraicSets.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaAlgebra/SemialgebraicSets.jl/workflows/CI/badge.svg?branch=master" alt="Build Status" style="max-width: 100%;"></a></td>
</tr>
<tr>
<td align="center"><a href="http://codecov.io/github/JuliaAlgebra/SemialgebraicSets.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/560bb3ae4a8cb0f5ebdeada88a376401da40ff517a10b34ae7c0ae285fd6a41f/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c6961416c67656272612f53656d69616c67656272616963536574732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Codecov branch" data-canonical-src="http://codecov.io/github/JuliaAlgebra/SemialgebraicSets.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">Extension of MultivariatePolynomials to semialgebraic sets, i.e. sets defined by inequalities and equalities between polynomials.
The following example shows how to build an <a href="https://en.wikipedia.org/wiki/Algebraic_variety" rel="nofollow">algebraic set/algebraic variety</a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TypedPolynomials
@polyvar x y z
# Algebraic variety https://en.wikipedia.org/wiki/Algebraic_variety#/media/File:Elliptic_curve2.png
@set y^2 == x^3 - x
@set x^3 == 2x*y &amp;&amp; x^2*y == 2y^2 - x
@set x*y^2 == x*z - y &amp;&amp; x*y == z^2 &amp;&amp; x == y*z^4
@set x^4*y^2 == z^5 &amp;&amp; x^3*y^3 == 1 &amp;&amp; x^2*y^4 == 2z
@set x == z^2 &amp;&amp; y == z^3"><pre><span class="pl-k">using</span> TypedPolynomials
<span class="pl-c1">@polyvar</span> x y z
<span class="pl-c"><span class="pl-c">#</span> Algebraic variety https://en.wikipedia.org/wiki/Algebraic_variety#/media/File:Elliptic_curve2.png</span>
<span class="pl-c1">@set</span> y<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">==</span> x<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> x
<span class="pl-c1">@set</span> x<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">==</span> <span class="pl-c1">2</span>x<span class="pl-k">*</span>y <span class="pl-k">&amp;&amp;</span> x<span class="pl-k">^</span><span class="pl-c1">2</span><span class="pl-k">*</span>y <span class="pl-k">==</span> <span class="pl-c1">2</span>y<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> x
<span class="pl-c1">@set</span> x<span class="pl-k">*</span>y<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">==</span> x<span class="pl-k">*</span>z <span class="pl-k">-</span> y <span class="pl-k">&amp;&amp;</span> x<span class="pl-k">*</span>y <span class="pl-k">==</span> z<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">&amp;&amp;</span> x <span class="pl-k">==</span> y<span class="pl-k">*</span>z<span class="pl-k">^</span><span class="pl-c1">4</span>
<span class="pl-c1">@set</span> x<span class="pl-k">^</span><span class="pl-c1">4</span><span class="pl-k">*</span>y<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">==</span> z<span class="pl-k">^</span><span class="pl-c1">5</span> <span class="pl-k">&amp;&amp;</span> x<span class="pl-k">^</span><span class="pl-c1">3</span><span class="pl-k">*</span>y<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">==</span> <span class="pl-c1">1</span> <span class="pl-k">&amp;&amp;</span> x<span class="pl-k">^</span><span class="pl-c1">2</span><span class="pl-k">*</span>y<span class="pl-k">^</span><span class="pl-c1">4</span> <span class="pl-k">==</span> <span class="pl-c1">2</span>z
<span class="pl-c1">@set</span> x <span class="pl-k">==</span> z<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">==</span> z<span class="pl-k">^</span><span class="pl-c1">3</span></pre></div>
<p dir="auto">The following example shows how to build an <a href="http://www.mit.edu/~parrilo/cdc03_workshop/10_positivstellensatz_2003_12_07_02_screen.pdf" rel="nofollow">basic semialgebraic set</a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TypedPolynomials
@polyvar x y
@set x^2 + y^2 &lt;= 1 # Euclidean ball
# Cutting the algebraic variety https://en.wikipedia.org/wiki/Algebraic_variety#/media/File:Elliptic_curve2.png
@set y^2 == x^3 - x &amp;&amp; x &lt;= 0
@set y^2 == x^3 - x &amp;&amp; x &gt;= 1"><pre><span class="pl-k">using</span> TypedPolynomials
<span class="pl-c1">@polyvar</span> x y
<span class="pl-c1">@set</span> x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> y<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">&lt;=</span> <span class="pl-c1">1</span> <span class="pl-c"><span class="pl-c">#</span> Euclidean ball</span>
<span class="pl-c"><span class="pl-c">#</span> Cutting the algebraic variety https://en.wikipedia.org/wiki/Algebraic_variety#/media/File:Elliptic_curve2.png</span>
<span class="pl-c1">@set</span> y<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">==</span> x<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> x <span class="pl-k">&amp;&amp;</span> x <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span>
<span class="pl-c1">@set</span> y<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">==</span> x<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> x <span class="pl-k">&amp;&amp;</span> x <span class="pl-k">&gt;=</span> <span class="pl-c1">1</span></pre></div>
<h2 dir="auto"><a id="user-content-solving-systems-of-algebraic-equations" class="anchor" aria-hidden="true" href="#solving-systems-of-algebraic-equations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Solving systems of algebraic equations</h2>
<p dir="auto">Once the algebraic set has been created, you can check whether it is zero-dimensional and if it is the case, you can get the finite number of elements of the set simply by iterating over it, or by using <code>collect</code> to transform it into an array containing the solutions.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="V = @set y == x^2 &amp;&amp; z == x^3
iszerodimensional(V) # should return false
V = @set x^2 + x == 6 &amp;&amp; y == x+1
iszerodimensional(V) # should return true
collect(V) # should return [[2, 3], [-3, -2]]"><pre>V <span class="pl-k">=</span> <span class="pl-c1">@set</span> y <span class="pl-k">==</span> x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">&amp;&amp;</span> z <span class="pl-k">==</span> x<span class="pl-k">^</span><span class="pl-c1">3</span>
<span class="pl-c1">iszerodimensional</span>(V) <span class="pl-c"><span class="pl-c">#</span> should return false</span>
V <span class="pl-k">=</span> <span class="pl-c1">@set</span> x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x <span class="pl-k">==</span> <span class="pl-c1">6</span> <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">==</span> x<span class="pl-k">+</span><span class="pl-c1">1</span>
<span class="pl-c1">iszerodimensional</span>(V) <span class="pl-c"><span class="pl-c">#</span> should return true</span>
<span class="pl-c1">collect</span>(V) <span class="pl-c"><span class="pl-c">#</span> should return [[2, 3], [-3, -2]]</span></pre></div>
<p dir="auto">The code sample above solves the system of algbraic equations by first
computing a <em>Gr√∂bner basis</em> for the system, then the multiplication matrices
and then a Schur decomposition of a random combination of these matrices.
Additionally, SemialgebraicSets defines an interface that can be implemented by
other solvers for these systems as shown in the following subsections.</p>
<h3 dir="auto"><a id="user-content-solve-with-homotopycontinuationjl" class="anchor" aria-hidden="true" href="#solve-with-homotopycontinuationjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Solve with <a href="https://www.juliahomotopycontinuation.org/" rel="nofollow">HomotopyContinuation.jl</a></h3>
<p dir="auto">You can solve the system with
<a href="https://www.juliahomotopycontinuation.org/" rel="nofollow">homotopy continuation</a>
as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using HomotopyContinuation

julia&gt; solver = SemialgebraicSetsHCSolver(; compile = false)
SemialgebraicSetsHCSolver(; compile = false)

julia&gt; @polyvar x y
(x, y)

julia&gt; V = @set x^2 + x == 6 &amp;&amp; y == x+1 solver
Algebraic Set defined by 2 equalities
 x^2 + x - 6.0 = 0
 -x + y - 1.0 = 0

julia&gt; collect(V)
2-element Vector{Vector{Float64}}:
 [2.0, 3.0]
 [-3.0, -2.0]"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> HomotopyContinuation

julia<span class="pl-k">&gt;</span> solver <span class="pl-k">=</span> <span class="pl-c1">SemialgebraicSetsHCSolver</span>(; compile <span class="pl-k">=</span> <span class="pl-c1">false</span>)
<span class="pl-c1">SemialgebraicSetsHCSolver</span>(; compile <span class="pl-k">=</span> <span class="pl-c1">false</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@polyvar</span> x y
(x, y)

julia<span class="pl-k">&gt;</span> V <span class="pl-k">=</span> <span class="pl-c1">@set</span> x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x <span class="pl-k">==</span> <span class="pl-c1">6</span> <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">==</span> x<span class="pl-k">+</span><span class="pl-c1">1</span> solver
Algebraic Set defined by <span class="pl-c1">2</span> equalities
 x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x <span class="pl-k">-</span> <span class="pl-c1">6.0</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>
 <span class="pl-k">-</span>x <span class="pl-k">+</span> y <span class="pl-k">-</span> <span class="pl-c1">1.0</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">collect</span>(V)
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Vector{Float64}}<span class="pl-k">:</span>
 [<span class="pl-c1">2.0</span>, <span class="pl-c1">3.0</span>]
 [<span class="pl-k">-</span><span class="pl-c1">3.0</span>, <span class="pl-k">-</span><span class="pl-c1">2.0</span>]</pre></div>
<h3 dir="auto"><a id="user-content-solve-with-macaulaylab" class="anchor" aria-hidden="true" href="#solve-with-macaulaylab"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Solve with <a href="http://www.macaulaylab.net/" rel="nofollow">MacaulayLab</a></h3>
<p dir="auto">You can solve the system with
<a href="http://www.macaulaylab.net/" rel="nofollow">MacaulayLab</a> as follows.
First install <a href="https://github.com/blegat/MacaulayLab.jl">MacaulayLab.jl</a>
and then run the following:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using DynamicPolynomial, MacaulayLab, SemialgebraicSets

julia&gt; solver = MacaulayLab.Solver()
MacaulayLab.Solver()

julia&gt; V = @set x^2 + x == 6 &amp;&amp; y == x + 1 solver
Algebraic Set defined by 2 equalities
 x^2 + x - 6.0 = 0
 -x + y - 1.0 = 0

julia&gt; collect(V)
2-element Vector{Vector{Float64}}:
 [2.0000000000000004, 2.999999999999999]
 [-3.0000000000000004, -2.0000000000000004]"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> DynamicPolynomial, MacaulayLab, SemialgebraicSets

julia<span class="pl-k">&gt;</span> solver <span class="pl-k">=</span> MacaulayLab<span class="pl-k">.</span><span class="pl-c1">Solver</span>()
MacaulayLab<span class="pl-k">.</span><span class="pl-c1">Solver</span>()

julia<span class="pl-k">&gt;</span> V <span class="pl-k">=</span> <span class="pl-c1">@set</span> x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x <span class="pl-k">==</span> <span class="pl-c1">6</span> <span class="pl-k">&amp;&amp;</span> y <span class="pl-k">==</span> x <span class="pl-k">+</span> <span class="pl-c1">1</span> solver
Algebraic Set defined by <span class="pl-c1">2</span> equalities
 x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x <span class="pl-k">-</span> <span class="pl-c1">6.0</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>
 <span class="pl-k">-</span>x <span class="pl-k">+</span> y <span class="pl-k">-</span> <span class="pl-c1">1.0</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">collect</span>(V)
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Vector{Float64}}<span class="pl-k">:</span>
 [<span class="pl-c1">2.0000000000000004</span>, <span class="pl-c1">2.999999999999999</span>]
 [<span class="pl-k">-</span><span class="pl-c1">3.0000000000000004</span>, <span class="pl-k">-</span><span class="pl-c1">2.0000000000000004</span>]</pre></div>
</article></div>