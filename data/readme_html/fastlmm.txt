<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-fast-lmm-factored-spectrally-transformed-linear-mixed-models" class="anchor" aria-hidden="true" href="#fast-lmm-factored-spectrally-transformed-linear-mixed-models"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FaST-LMM: <em>Fa</em>ctored <em>S</em>pectrally <em>T</em>ransformed <em>L</em>inear <em>M</em>ixed <em>M</em>odels</h1>
<p><a href="https://travis-ci.org/sens/FaSTLMM.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5f68475b5198cec1f3c95e8a3c1f605563f62c91/68747470733a2f2f7472617669732d63692e6f72672f73656e732f466153544c4d4d2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/sens/FaSTLMM.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Genetic analysis in structured populations used mixed linear models
where the variance matrix of the error term is a linear combination of
an identity matrix and a positive definite matrix.</p>
<p>The linear model is of the familiar form: $$y = X \beta + e$$</p>
<ul>
<li>$y$: phenotype</li>
<li>$X$: covariates</li>
<li>$\beta$: fixed effects</li>
<li>$e$: error term</li>
</ul>
<p>Further $V(e) = \sigma_G^2 K + \sigma_E^2 I$, where $\sigma_G^2$ is
the genetic variance, $\sigma_E^2$ is the environmental variance, $K$
is the kinship matrix, and $I$ is the identity matrix.</p>
<p>The key idea in speeding up computations here is that by rotating the
phenotypes by the eigenvectors of $K$ we can transform estimation to a
weighted least squares problem.</p>
<p>This implementation is my attempt to learn Julia and numerical linear
algebra.  The code is being tested.</p>
<p>Guide to the directories:</p>
<ul>
<li><code>src</code>: Julia source code</li>
<li><code>data</code>: Example data for development and testing</li>
<li><code>test</code>: Code for testing</li>
<li><code>docs</code>: Notes on comparisons with other implementations</li>
</ul>
</article></div>