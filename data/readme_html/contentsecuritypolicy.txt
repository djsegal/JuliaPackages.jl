<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-contentsecuritypolicy" class="anchor" aria-hidden="true" href="#contentsecuritypolicy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ContentSecurityPolicy</h1>
<p dir="auto">A Julia library to aid the integration of <strong><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP" rel="nofollow">Content-Security-Policy</a></strong> headers into web applications.</p>
<p dir="auto"><strong>References</strong></p>
<ul dir="auto">
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP" rel="nofollow">MDN CSP</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html" rel="nofollow">OWASP CSP</a></li>
<li><a href="https://web.dev/strict-csp/#what-is-a-strict-content-security-policy" rel="nofollow">Strict CSP</a></li>
<li><a href="https://www.w3.org/TR/CSP3/" rel="nofollow">W3C CSP3</a></li>
<li><a href="https://csp.withgoogle.com/docs/index.html" rel="nofollow">csp.withgoogle</a></li>
<li><a href="https://scotthelme.co.uk/csp-cheat-sheet/" rel="nofollow">CSP cheatsheet</a></li>
<li><a href="https://github.com/paragonie/csp-builder">CSP-Builder</a></li>
<li><a href="https://django-csp.readthedocs.io/en/latest/" rel="nofollow">django-csp</a></li>
</ul>
<h2 dir="auto"><a id="user-content-project-status" class="anchor" aria-hidden="true" href="#project-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Project status</h2>
<p dir="auto">The package is under active development and changes may occur.</p>
<h3 dir="auto"><a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ToDo</h3>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Register package</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Improve support for csp-nonce and csp-hash</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Improve default strict policy and improve overall configurability</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Handle CSP violation reports</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Export nginx and Apache header configurations</li>
</ul>
<h2 dir="auto"><a id="user-content-contributions-suggestions-questions" class="anchor" aria-hidden="true" href="#contributions-suggestions-questions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributions, suggestions, questions</h2>
<p dir="auto">All are welcome, as well as feature requests and bug reports. Please open an issue, discussion topic or submit a PR.</p>
<h2 dir="auto"><a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Table of Contents</h2>
<ol dir="auto">
<li><a href="#installation">Installation</a></li>
<li><a href="#usage-examples">Usage examples</a></li>
<li><a href="#web-example">Web example</a></li>
<li><a href="#policy-from-a-json-file">Import from JSON</a></li>
<li><a href="#api-reference">API Reference</a></li>
</ol>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The package can be installed via package manager</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add ContentSecurityPolicy"><pre>pkg<span class="pl-k">&gt;</span> add ContentSecurityPolicy</pre></div>
<p dir="auto">It can also be installed by providing a <a href="https://pkgdocs.julialang.org/v1/managing-packages/#Adding-unregistered-packages" rel="nofollow">URL to the repository</a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add https://github.com/charlieIT/ContentSecurityPolicy.jl"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>charlieIT<span class="pl-k">/</span>ContentSecurityPolicy<span class="pl-k">.</span>jl</pre></div>
<h2 dir="auto"><a id="user-content-usage-examples" class="anchor" aria-hidden="true" href="#usage-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage examples</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ContentSecurityPolicy"><pre><span class="pl-k">using</span> ContentSecurityPolicy</pre></div>
<p dir="auto">Can be used as <code>CSP</code>, for name shortening purposes</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ContentSecurityPolicy
CSP.Policy()"><pre><span class="pl-k">using</span> ContentSecurityPolicy
CSP<span class="pl-k">.</span><span class="pl-c1">Policy</span>()</pre></div>
<h3 dir="auto"><a id="user-content-build-a-content-security-policy" class="anchor" aria-hidden="true" href="#build-a-content-security-policy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Build a Content Security Policy</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Policy(
   # Set fallback for all fetch directives
    &quot;default-src&quot;=&gt;&quot;*&quot;,
    # Set valid sources of images and favicons
    &quot;img-src&quot;=&gt;(&quot;'self'&quot;, &quot;data:&quot;),
    # Turn on https enforcement
    &quot;upgrade-insecure-requests&quot;=&gt;true,
    # Custom directives are supported, if needed
    &quot;some-custom-directive&quot;=&gt;[&quot;foo&quot;, &quot;bar&quot;]
)"><pre><span class="pl-c1">Policy</span>(
   <span class="pl-c"><span class="pl-c">#</span> Set fallback for all fetch directives</span>
    <span class="pl-s"><span class="pl-pds">"</span>default-src<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>*<span class="pl-pds">"</span></span>,
    <span class="pl-c"><span class="pl-c">#</span> Set valid sources of images and favicons</span>
    <span class="pl-s"><span class="pl-pds">"</span>img-src<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>(<span class="pl-s"><span class="pl-pds">"</span>'self'<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>data:<span class="pl-pds">"</span></span>),
    <span class="pl-c"><span class="pl-c">#</span> Turn on https enforcement</span>
    <span class="pl-s"><span class="pl-pds">"</span>upgrade-insecure-requests<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">true</span>,
    <span class="pl-c"><span class="pl-c">#</span> Custom directives are supported, if needed</span>
    <span class="pl-s"><span class="pl-pds">"</span>some-custom-directive<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>[<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span>]
)</pre></div>
<details>
<summary>Output</summary>
<div class="highlight highlight-source-json notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="{
    &quot;default-src&quot;: &quot;*&quot;,
    &quot;img-src&quot;: [
        &quot;'self'&quot;,
        &quot;data:&quot;
    ],
    &quot;upgrade-insecure-requests&quot;: true,
    &quot;some-custom-directive&quot;: [
        &quot;foo&quot;,
        &quot;bar&quot;
    ],
    &quot;report-only&quot;: false
}"><pre>{
    <span class="pl-ent">"default-src"</span>: <span class="pl-s"><span class="pl-pds">"</span>*<span class="pl-pds">"</span></span>,
    <span class="pl-ent">"img-src"</span>: [
        <span class="pl-s"><span class="pl-pds">"</span>'self'<span class="pl-pds">"</span></span>,
        <span class="pl-s"><span class="pl-pds">"</span>data:<span class="pl-pds">"</span></span>
    ],
    <span class="pl-ent">"upgrade-insecure-requests"</span>: <span class="pl-c1">true</span>,
    <span class="pl-ent">"some-custom-directive"</span>: [
        <span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>,
        <span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span>
    ],
    <span class="pl-ent">"report-only"</span>: <span class="pl-c1">false</span>
}</pre></div>
</details>
<p dir="auto">See also: <a href="#policy">Policy</a>, <a href="#strict-policy">Strict Policy</a>.</p>
<h3 dir="auto"><a id="user-content-edit-existing-policy" class="anchor" aria-hidden="true" href="#edit-existing-policy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Edit existing policy</h3>
<p dir="auto">Modify multiple directives at once</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Modify multiple directives at once
policy(
    # Pairs before kwargs
    &quot;script-src&quot; =&gt; (&quot;'unsafe-inline'&quot;, &quot;http://example.com&quot;),
    img_src = (&quot;'self'&quot;, &quot;data:&quot;)
)"><pre><span class="pl-c"><span class="pl-c">#</span> Modify multiple directives at once</span>
<span class="pl-c1">policy</span>(
    <span class="pl-c"><span class="pl-c">#</span> Pairs before kwargs</span>
    <span class="pl-s"><span class="pl-pds">"</span>script-src<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> (<span class="pl-s"><span class="pl-pds">"</span>'unsafe-inline'<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>http://example.com<span class="pl-pds">"</span></span>),
    img_src <span class="pl-k">=</span> (<span class="pl-s"><span class="pl-pds">"</span>'self'<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>data:<span class="pl-pds">"</span></span>)
)</pre></div>
<p dir="auto">Modify single directive</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Modify individually via directive name
policy[&quot;img-src&quot;] = CSP.wildcard # &quot;*&quot;"><pre><span class="pl-c"><span class="pl-c">#</span> Modify individually via directive name</span>
policy[<span class="pl-s"><span class="pl-pds">"</span>img-src<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> CSP<span class="pl-k">.</span>wildcard <span class="pl-c"><span class="pl-c">#</span> "*"</span></pre></div>
<h3 dir="auto"><a id="user-content-build-http-headers" class="anchor" aria-hidden="true" href="#build-http-headers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Build <code>http</code> headers</h3>
<p dir="auto"><strong>Content-Security-Policy</strong> header</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ContentSecurityPolicy, HTTP

HTTP.Header(Policy(default=true))"><pre><span class="pl-k">using</span> ContentSecurityPolicy, HTTP

HTTP<span class="pl-k">.</span><span class="pl-c1">Header</span>(<span class="pl-c1">Policy</span>(default<span class="pl-k">=</span><span class="pl-c1">true</span>))</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="&quot;Content-Security-Policy&quot; =&gt; &quot;base-uri none; default-src 'self'; frame-ancestors none; object-src none; report-to default; script-src 'strict-dynamic'&quot;"><pre><span class="pl-s"><span class="pl-pds">"</span>Content-Security-Policy<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>base-uri none; default-src 'self'; frame-ancestors none; object-src none; report-to default; script-src 'strict-dynamic'<span class="pl-pds">"</span></span></pre></div>
<p dir="auto"><strong>Report-Only</strong> header</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="policy = Policy(
        &quot;default-src&quot;=&gt;CSP.self,
        &quot;report-to&quot;=&gt;&quot;some-endpoint&quot;,
        report_only=true)
        
HTTP.Header(policy)"><pre>policy <span class="pl-k">=</span> <span class="pl-c1">Policy</span>(
        <span class="pl-s"><span class="pl-pds">"</span>default-src<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>CSP<span class="pl-k">.</span>self,
        <span class="pl-s"><span class="pl-pds">"</span>report-to<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>some-endpoint<span class="pl-pds">"</span></span>,
        report_only<span class="pl-k">=</span><span class="pl-c1">true</span>)
        
HTTP<span class="pl-k">.</span><span class="pl-c1">Header</span>(policy)</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="&quot;Content-Security-Policy-Report-Only&quot; =&gt; &quot;default-src 'self'; report-to some-endpoint&quot;"><pre><span class="pl-s"><span class="pl-pds">"</span>Content-Security-Policy-Report-Only<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>default-src 'self'; report-to some-endpoint<span class="pl-pds">"</span></span></pre></div>
<h3 dir="auto"><a id="user-content-build-meta-element" class="anchor" aria-hidden="true" href="#build-meta-element"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Build <code>&lt;meta&gt;</code> element</h3>
<p dir="auto">Construction will automatically ignore directives that are not supported in the <code>&lt;meta&gt;</code> element. Currently <code>[frame-ancestors, report-uri, report-to, sandbox]</code>.</p>
<p dir="auto">See also <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP" rel="nofollow">mdn csp directives</a>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="CSP.meta(Policy(report_to=&quot;default&quot;, default_src=&quot;'self'&quot;))"><pre>CSP<span class="pl-k">.</span><span class="pl-c1">meta</span>(<span class="pl-c1">Policy</span>(report_to<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>, default_src<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>'self'<span class="pl-pds">"</span></span>))</pre></div>
<div class="highlight highlight-text-xml notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="&lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;default-src 'self'&quot;&gt;"><pre>&lt;<span class="pl-ent">meta</span> <span class="pl-e">http-equiv</span>=<span class="pl-s"><span class="pl-pds">"</span>Content-Security-Policy<span class="pl-pds">"</span></span> <span class="pl-e">content</span>=<span class="pl-s"><span class="pl-pds">"</span>default-src 'self'<span class="pl-pds">"</span></span>&gt;</pre></div>
<h3 dir="auto"><a id="user-content-obtain-csp-header-as-dict" class="anchor" aria-hidden="true" href="#obtain-csp-header-as-dict"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Obtain CSP header as Dict</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="policy = csp(&quot;default-src&quot;=&gt;CSP.self, &quot;img-src&quot;=&gt;(CSP.self, CSP.data), &quot;report-uri&quot;=&gt;&quot;/api/reports&quot;)

CSP.http(policy)"><pre>policy <span class="pl-k">=</span> <span class="pl-c1">csp</span>(<span class="pl-s"><span class="pl-pds">"</span>default-src<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>CSP<span class="pl-k">.</span>self, <span class="pl-s"><span class="pl-pds">"</span>img-src<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>(CSP<span class="pl-k">.</span>self, CSP<span class="pl-k">.</span>data), <span class="pl-s"><span class="pl-pds">"</span>report-uri<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>/api/reports<span class="pl-pds">"</span></span>)

CSP<span class="pl-k">.</span><span class="pl-c1">http</span>(policy)</pre></div>
<details>
<summary>Output</summary>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="OrderedCollections.OrderedDict{String, Any} with 3 entries:
  &quot;img-src&quot;     =&gt; &quot;data: 'self'&quot;
  &quot;default-src&quot; =&gt; &quot;'self'&quot;
  &quot;report-uri&quot;  =&gt; &quot;/api/reports&quot;"><pre class="notranslate"><code>OrderedCollections.OrderedDict{String, Any} with 3 entries:
  "img-src"     =&gt; "data: 'self'"
  "default-src" =&gt; "'self'"
  "report-uri"  =&gt; "/api/reports"
</code></pre></div>
</details>
<h2 dir="auto"><a id="user-content-web-example" class="anchor" aria-hidden="true" href="#web-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Web example</h2>
<p dir="auto"><strong>Mockup</strong> web application with dynamic CSP policies, that can also receive CSP violation reports.</p>
<p dir="auto">The example app will allow route handlers to tailor the CSP Policy on each response.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ContentSecurityPolicy, Dates, HTTP, JSON3, Random, Sockets"><pre><span class="pl-k">using</span> ContentSecurityPolicy, Dates, HTTP, JSON3, Random, Sockets</pre></div>
<p dir="auto"><strong>Middleware for adding CSP header to each response</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="&quot;&quot;&quot;
A middleware that will set a restrictive default policy.

Allows route handlers to change the CSP Policy
&quot;&quot;&quot;
function CSPMiddleware(next)
    return function(request::HTTP.Request)

        function respond(response::HTTP.Response)
            timestamp = string(round(Int, datetime2unix(now())))
                
            # A default restrictive policy
            policy = csp(
                default = true, 
                default_src = &quot;'self'&quot;, 
                script_src = &quot;none&quot;,
                report_to = false,
                sandbox = true, 
                report_uri = &quot;/reports/$timestamp&quot;) # report to specific endpoint

            if !isnothing(request.context)
                if haskey(request.context, :csp)
                    # Acquire the policy defined by the route and log
                    route_policy = request.context[:csp]
                    @info &quot;Custom policy: $(string(route_policy))&quot;

                    # Merge default with handler provided policy
                    policy = policy(route_policy.directives...)
                end 
            end
            # Check whether header was not yet defined
            if !HTTP.hasheader(response, CSP.CSP_HEADER)
                # Set CSP policy header
                HTTP.setheader(response, HTTP.Header(policy))
            end
            return response
        end
	return respond(next(request))
    end
end"><pre><span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">A middleware that will set a restrictive default policy.</span>
<span class="pl-s"></span>
<span class="pl-s">Allows route handlers to change the CSP Policy</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-k">function</span> <span class="pl-en">CSPMiddleware</span>(next)
    <span class="pl-k">return</span> <span class="pl-k">function</span>(request<span class="pl-k">::</span><span class="pl-c1">HTTP.Request</span>)

        <span class="pl-k">function</span> <span class="pl-en">respond</span>(response<span class="pl-k">::</span><span class="pl-c1">HTTP.Response</span>)
            timestamp <span class="pl-k">=</span> <span class="pl-c1">string</span>(<span class="pl-c1">round</span>(Int, <span class="pl-c1">datetime2unix</span>(<span class="pl-c1">now</span>())))
                
            <span class="pl-c"><span class="pl-c">#</span> A default restrictive policy</span>
            policy <span class="pl-k">=</span> <span class="pl-c1">csp</span>(
                default <span class="pl-k">=</span> <span class="pl-c1">true</span>, 
                default_src <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>'self'<span class="pl-pds">"</span></span>, 
                script_src <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>none<span class="pl-pds">"</span></span>,
                report_to <span class="pl-k">=</span> <span class="pl-c1">false</span>,
                sandbox <span class="pl-k">=</span> <span class="pl-c1">true</span>, 
                report_uri <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>/reports/<span class="pl-v">$timestamp</span><span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> report to specific endpoint</span>

            <span class="pl-k">if</span> <span class="pl-k">!</span><span class="pl-c1">isnothing</span>(request<span class="pl-k">.</span>context)
                <span class="pl-k">if</span> <span class="pl-c1">haskey</span>(request<span class="pl-k">.</span>context, <span class="pl-c1">:csp</span>)
                    <span class="pl-c"><span class="pl-c">#</span> Acquire the policy defined by the route and log</span>
                    route_policy <span class="pl-k">=</span> request<span class="pl-k">.</span>context[<span class="pl-c1">:csp</span>]
                    <span class="pl-c1">@info</span> <span class="pl-s"><span class="pl-pds">"</span>Custom policy: <span class="pl-v">$(<span class="pl-c1">string</span>(route_policy))</span><span class="pl-pds">"</span></span>

                    <span class="pl-c"><span class="pl-c">#</span> Merge default with handler provided policy</span>
                    policy <span class="pl-k">=</span> <span class="pl-c1">policy</span>(route_policy<span class="pl-k">.</span>directives<span class="pl-k">...</span>)
                <span class="pl-k">end</span> 
            <span class="pl-k">end</span>
            <span class="pl-c"><span class="pl-c">#</span> Check whether header was not yet defined</span>
            <span class="pl-k">if</span> <span class="pl-k">!</span>HTTP<span class="pl-k">.</span><span class="pl-c1">hasheader</span>(response, CSP<span class="pl-k">.</span>CSP_HEADER)
                <span class="pl-c"><span class="pl-c">#</span> Set CSP policy header</span>
                HTTP<span class="pl-k">.</span><span class="pl-c1">setheader</span>(response, HTTP<span class="pl-k">.</span><span class="pl-c1">Header</span>(policy))
            <span class="pl-k">end</span>
            <span class="pl-k">return</span> response
        <span class="pl-k">end</span>
	<span class="pl-k">return</span> <span class="pl-c1">respond</span>(<span class="pl-c1">next</span>(request))
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto"><strong>Handler for posted csp violation reports</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="&quot;&quot;&quot;
Handle posted CSP Reports
&quot;&quot;&quot;
function report(request::HTTP.Request)
    report = String(request.body)
    # Each report is posted to /reports/{timestamp}
    timestamp = Base.parse(Int, request.context[:params][&quot;timestamp&quot;])
    # Log timestamp as Date
    println(string(&quot;Timestamp: &quot;, unix2datetime(timestamp)))
    # Log pretty json report
    JSON3.pretty(report)

    return HTTP.Response(200, report)
end"><pre><span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">Handle posted CSP Reports</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-k">function</span> <span class="pl-en">report</span>(request<span class="pl-k">::</span><span class="pl-c1">HTTP.Request</span>)
    report <span class="pl-k">=</span> <span class="pl-c1">String</span>(request<span class="pl-k">.</span>body)
    <span class="pl-c"><span class="pl-c">#</span> Each report is posted to /reports/{timestamp}</span>
    timestamp <span class="pl-k">=</span> Base<span class="pl-k">.</span><span class="pl-c1">parse</span>(Int, request<span class="pl-k">.</span>context[<span class="pl-c1">:params</span>][<span class="pl-s"><span class="pl-pds">"</span>timestamp<span class="pl-pds">"</span></span>])
    <span class="pl-c"><span class="pl-c">#</span> Log timestamp as Date</span>
    <span class="pl-c1">println</span>(<span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds">"</span>Timestamp: <span class="pl-pds">"</span></span>, <span class="pl-c1">unix2datetime</span>(timestamp)))
    <span class="pl-c"><span class="pl-c">#</span> Log pretty json report</span>
    JSON3<span class="pl-k">.</span><span class="pl-c1">pretty</span>(report)

    <span class="pl-k">return</span> HTTP<span class="pl-k">.</span><span class="pl-c1">Response</span>(<span class="pl-c1">200</span>, report)
<span class="pl-k">end</span></pre></div>
<p dir="auto"><strong>A page with restrictive csp policy</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function restrictive(request::HTTP.Request)
    # Obtain a nonce
    nonce = CSP.csp_nonce()
    # Set a policy allowing scripts with our nonce, also enabling scripts and modals in sandbox mode
    request.context[:csp] = csp(script_src=&quot;'nonce-$nonce'&quot;, sandbox=&quot;allow-scripts allow-modals&quot;)

    html = &quot;&quot;&quot;
    &lt;html&gt;
        &lt;body&gt;
            &lt;!-- This will execute --&gt;
            &lt;script type=&quot;text/javascript&quot;, nonce='$nonce'&gt;
                alert('I can execute!');
            &lt;/script&gt;
            
            &lt;!-- This should not execute --&gt;
            &lt;script type=&quot;text/javascript&quot;&gt;
                alert('Not authorised!');
            &lt;/script&gt;
        &lt;/body&gt;
    &lt;/html&gt;
    &quot;&quot;&quot;
    return HTTP.Response(200, html)
end"><pre><span class="pl-k">function</span> <span class="pl-en">restrictive</span>(request<span class="pl-k">::</span><span class="pl-c1">HTTP.Request</span>)
    <span class="pl-c"><span class="pl-c">#</span> Obtain a nonce</span>
    nonce <span class="pl-k">=</span> CSP<span class="pl-k">.</span><span class="pl-c1">csp_nonce</span>()
    <span class="pl-c"><span class="pl-c">#</span> Set a policy allowing scripts with our nonce, also enabling scripts and modals in sandbox mode</span>
    request<span class="pl-k">.</span>context[<span class="pl-c1">:csp</span>] <span class="pl-k">=</span> <span class="pl-c1">csp</span>(script_src<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>'nonce-<span class="pl-v">$nonce</span>'<span class="pl-pds">"</span></span>, sandbox<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>allow-scripts allow-modals<span class="pl-pds">"</span></span>)

    html <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">    &lt;html&gt;</span>
<span class="pl-s">        &lt;body&gt;</span>
<span class="pl-s">            &lt;!-- This will execute --&gt;</span>
<span class="pl-s">            &lt;script type="text/javascript", nonce='<span class="pl-v">$nonce</span>'&gt;</span>
<span class="pl-s">                alert('I can execute!');</span>
<span class="pl-s">            &lt;/script&gt;</span>
<span class="pl-s">            </span>
<span class="pl-s">            &lt;!-- This should not execute --&gt;</span>
<span class="pl-s">            &lt;script type="text/javascript"&gt;</span>
<span class="pl-s">                alert('Not authorised!');</span>
<span class="pl-s">            &lt;/script&gt;</span>
<span class="pl-s">        &lt;/body&gt;</span>
<span class="pl-s">    &lt;/html&gt;</span>
<span class="pl-s">    <span class="pl-pds">"""</span></span>
    <span class="pl-k">return</span> HTTP<span class="pl-k">.</span><span class="pl-c1">Response</span>(<span class="pl-c1">200</span>, html)
<span class="pl-k">end</span></pre></div>
<p dir="auto"><strong>A page with a more permissive csp policy</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function permissive(request::HTTP.Request)
    # Set permissive script-src to allow all inline scripts
    request.context[:csp] = csp(&quot;script-src&quot;=&gt;(&quot;'self'&quot;, &quot;'unsafe-inline'&quot;), &quot;sandbox&quot;=&gt;false)

    html = &quot;&quot;&quot;
    &lt;html&gt;
        &lt;body&gt;
            &lt;div id=&quot;hello&quot;&gt;&lt;/div&gt;
            &lt;script type=&quot;text/javascript&quot;&gt;
                document.getElementById('hello').innerHTML = 'Scripts can execute!';
            &lt;/script&gt;
            &lt;script type=&quot;text/javascript&quot;&gt;
                alert('Scripts can launch modals!');
            &lt;/script&gt;
        &lt;/body&gt;
    &lt;/html&gt;
    &quot;&quot;&quot;
    return HTTP.Response(200, html)
end"><pre><span class="pl-k">function</span> <span class="pl-en">permissive</span>(request<span class="pl-k">::</span><span class="pl-c1">HTTP.Request</span>)
    <span class="pl-c"><span class="pl-c">#</span> Set permissive script-src to allow all inline scripts</span>
    request<span class="pl-k">.</span>context[<span class="pl-c1">:csp</span>] <span class="pl-k">=</span> <span class="pl-c1">csp</span>(<span class="pl-s"><span class="pl-pds">"</span>script-src<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>(<span class="pl-s"><span class="pl-pds">"</span>'self'<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>'unsafe-inline'<span class="pl-pds">"</span></span>), <span class="pl-s"><span class="pl-pds">"</span>sandbox<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">false</span>)

    html <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">    &lt;html&gt;</span>
<span class="pl-s">        &lt;body&gt;</span>
<span class="pl-s">            &lt;div id="hello"&gt;&lt;/div&gt;</span>
<span class="pl-s">            &lt;script type="text/javascript"&gt;</span>
<span class="pl-s">                document.getElementById('hello').innerHTML = 'Scripts can execute!';</span>
<span class="pl-s">            &lt;/script&gt;</span>
<span class="pl-s">            &lt;script type="text/javascript"&gt;</span>
<span class="pl-s">                alert('Scripts can launch modals!');</span>
<span class="pl-s">            &lt;/script&gt;</span>
<span class="pl-s">        &lt;/body&gt;</span>
<span class="pl-s">    &lt;/html&gt;</span>
<span class="pl-s">    <span class="pl-pds">"""</span></span>
    <span class="pl-k">return</span> HTTP<span class="pl-k">.</span><span class="pl-c1">Response</span>(<span class="pl-c1">200</span>, html)
<span class="pl-k">end</span></pre></div>
<p dir="auto"><strong>Setup http routing</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="const csp_router = HTTP.Router()
HTTP.register!(csp_router, &quot;GET&quot;, &quot;/restrictive&quot;, restrictive)
HTTP.register!(csp_router, &quot;GET&quot;, &quot;/permissive&quot;, permissive)
# Handle incoming CSP reports
HTTP.register!(csp_router, &quot;POST&quot;, &quot;/reports/{timestamp}&quot;, report)

server = HTTP.serve!(csp_router |&gt; CSPMiddleware, ip&quot;0.0.0.0&quot;, 80)"><pre><span class="pl-k">const</span> csp_router <span class="pl-k">=</span> HTTP<span class="pl-k">.</span><span class="pl-c1">Router</span>()
HTTP<span class="pl-k">.</span><span class="pl-c1">register!</span>(csp_router, <span class="pl-s"><span class="pl-pds">"</span>GET<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>/restrictive<span class="pl-pds">"</span></span>, restrictive)
HTTP<span class="pl-k">.</span><span class="pl-c1">register!</span>(csp_router, <span class="pl-s"><span class="pl-pds">"</span>GET<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>/permissive<span class="pl-pds">"</span></span>, permissive)
<span class="pl-c"><span class="pl-c">#</span> Handle incoming CSP reports</span>
HTTP<span class="pl-k">.</span><span class="pl-c1">register!</span>(csp_router, <span class="pl-s"><span class="pl-pds">"</span>POST<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>/reports/{timestamp}<span class="pl-pds">"</span></span>, report)

server <span class="pl-k">=</span> HTTP<span class="pl-k">.</span><span class="pl-c1">serve!</span>(csp_router <span class="pl-k">|&gt;</span> CSPMiddleware, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">ip</span>"</span>0.0.0.0<span class="pl-pds">"</span></span>, <span class="pl-c1">80</span>)</pre></div>
<p dir="auto">See also: <a href="/examples/web">web example</a>.</p>
<h2 dir="auto"><a id="user-content-policy-from-a-json-file" class="anchor" aria-hidden="true" href="#policy-from-a-json-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Policy from a JSON file</h2>
<p dir="auto"><a href="/examples/conf.json">Example configuration.json</a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="policy = Policy(&quot;/path/to/conf.json&quot;)"><pre>policy <span class="pl-k">=</span> <span class="pl-c1">Policy</span>(<span class="pl-s"><span class="pl-pds">"</span>/path/to/conf.json<span class="pl-pds">"</span></span>)</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="policy[&quot;default-src&quot;]"><pre>policy[<span class="pl-s"><span class="pl-pds">"</span>default-src<span class="pl-pds">"</span></span>]</pre></div>
<details>
<summary>Output</summary>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="8-element Vector{String}:
 &quot;'unsafe-eval'&quot;
 &quot;'unsafe-inline'&quot;
 &quot;data:&quot;
 &quot;filesystem:&quot;
 &quot;about:&quot;
 &quot;blob:&quot;
 &quot;ws:&quot;
 &quot;wss:&quot;"><pre class="notranslate"><code>8-element Vector{String}:
 "'unsafe-eval'"
 "'unsafe-inline'"
 "data:"
 "filesystem:"
 "about:"
 "blob:"
 "ws:"
 "wss:"
</code></pre></div>
</details>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; policy[&quot;script-src&quot;]"><pre>julia<span class="pl-k">&gt;</span> policy[<span class="pl-s"><span class="pl-pds">"</span>script-src<span class="pl-pds">"</span></span>]</pre></div>
<details>
<summary>Output</summary>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="3-element Vector{String}:
 &quot;'unsafe-eval'&quot;
 &quot;'unsafe-inline'&quot;
 &quot;https://www.google-analytics.com&quot;"><pre class="notranslate"><code>3-element Vector{String}:
 "'unsafe-eval'"
 "'unsafe-inline'"
 "https://www.google-analytics.com"
</code></pre></div>
</details>
<h1 dir="auto"><a id="user-content-api-reference" class="anchor" aria-hidden="true" href="#api-reference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>API Reference</h1>
<h2 dir="auto"><a id="user-content-policy" class="anchor" aria-hidden="true" href="#policy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a href="@ref">Policy</a></h2>
<h3 dir="auto"><a id="user-content-strict-policy" class="anchor" aria-hidden="true" href="#strict-policy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Strict Policy</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="DEFAULT_POLICY"><pre>DEFAULT_POLICY</pre></div>
<p dir="auto"><em>Work in progress.</em> A default, restrictive policy based on various CSP recommendations. Used when creating a Policy where <code>default = true</code>.</p>
<p dir="auto"><strong>See also:</strong> <a href="https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html" rel="nofollow">OWASP CSP cheatsheet</a>, <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP" rel="nofollow">mdn csp docs</a>, <a href="https://csp.withgoogle.com/docs/index.html" rel="nofollow">csp.withgoogle.com</a>, <a href="https://storage.googleapis.com/pub-tools-public-publication-data/pdf/45542.pdf" rel="nofollow">CSP Is Dead, Long Live CSP!</a> and <a href="https://web.dev/strict-csp/" rel="nofollow">strict-csp</a>.</p>
<hr>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="const DirectiveTypes = Union{String, Set{String}, Vector{String}, Tuple, Bool}"><pre><span class="pl-k">const</span> DirectiveTypes <span class="pl-k">=</span> Union{String, Set{String}, Vector{String}, Tuple, Bool}</pre></div>
<p dir="auto">Defines acceptable values of a directive.</p>
<p dir="auto"><code>Empty</code> and <code>false</code> values are not considered when generating a CSP header.</p>
<hr>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Policy(directives::AbstractDict, report_only=false)"><pre><span class="pl-c1">Policy</span>(directives<span class="pl-k">::</span><span class="pl-c1">AbstractDict</span>, report_only<span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<table>
<thead>
<tr>
<th align="left">Parameter</th>
<th align="left">Type</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left"><code>directives</code></td>
<td align="left"><code>Dict{String, DirectiveTypes}</code></td>
<td align="left">Set of directives that configure your policy</td>
</tr>
<tr>
<td align="left"><code>report_only</code></td>
<td align="left"><code>Bool</code></td>
<td align="left"><strong>Optional</strong>  Whether to define Policy as <a href="Content-Security-Policy-Report-Only">report only</a>. Defaults to <code>false</code></td>
</tr>
</tbody>
</table>
<p dir="auto">Default constructor. Policies are empty by default.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Policy()"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Policy</span>()</pre></div>
<div class="highlight highlight-source-json notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="{
    &quot;report-only&quot;: false
}"><pre>{
    <span class="pl-ent">"report-only"</span>: <span class="pl-c1">false</span>
}</pre></div>
<hr>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Policy(directives::Pair...; default=false, report_only=false, kwargs...)"><pre><span class="pl-c1">Policy</span>(directives<span class="pl-k">::</span><span class="pl-c1">Pair...</span>; default<span class="pl-k">=</span><span class="pl-c1">false</span>, report_only<span class="pl-k">=</span><span class="pl-c1">false</span>, kwargs<span class="pl-k">...</span>)</pre></div>
<table>
<thead>
<tr>
<th align="left">Parameter</th>
<th align="left">Type</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left"><code>directives</code></td>
<td align="left"><code>Pair{String,DirectiveTypes}</code></td>
<td align="left">Individual policies as a Pair.</td>
</tr>
<tr>
<td align="left"><code>default</code></td>
<td align="left"><code>Bool</code></td>
<td align="left"><strong>Optional</strong>  Whether to add default directives and default values. Defaults to <code>false</code></td>
</tr>
<tr>
<td align="left"><code>report_only</code></td>
<td align="left"><code>Bool</code></td>
<td align="left"><strong>Optional</strong>  Whether to define Policy as <a href="Content-Security-Policy-Report-Only">report only</a>. Defaults to <code>false</code></td>
</tr>
<tr>
<td align="left"><code>kwargs</code></td>
<td align="left"><code>Directives</code></td>
<td align="left"><strong>Optional</strong> Directives as keyword arguments. Automatically replaces <code>_</code> with <code>-</code> in known directives.</td>
</tr>
</tbody>
</table>
<details>
<summary>Examples</summary>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Policy(&quot;script-src&quot;=&gt;&quot;https://example.com/&quot;, &quot;img-src&quot;=&gt;&quot;*&quot;, report_only=true)"><pre><span class="pl-c1">Policy</span>(<span class="pl-s"><span class="pl-pds">"</span>script-src<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>https://example.com/<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>img-src<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>*<span class="pl-pds">"</span></span>, report_only<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<div class="highlight highlight-source-json notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="{
    &quot;img-src&quot;: &quot;*&quot;,
    &quot;script-src&quot;: &quot;https://example.com/&quot;,
    &quot;report-only&quot;: true
}"><pre>{
    <span class="pl-ent">"img-src"</span>: <span class="pl-s"><span class="pl-pds">"</span>*<span class="pl-pds">"</span></span>,
    <span class="pl-ent">"script-src"</span>: <span class="pl-s"><span class="pl-pds">"</span>https://example.com/<span class="pl-pds">"</span></span>,
    <span class="pl-ent">"report-only"</span>: <span class="pl-c1">true</span>
}</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="policy = Policy(
     # Set default-src
     default_src = CSP.self, # &quot;'self'&quot;
     # Set report-uri
     report_uri = &quot;https://example.com&quot;,
     # Report endpoint
     report_to = &quot;default&quot;,
     sandbox = &quot;allow-downloads&quot;,
     # Turn on https enforcement
     upgrade_insecure_requests = true)"><pre>policy <span class="pl-k">=</span> <span class="pl-c1">Policy</span>(
     <span class="pl-c"><span class="pl-c">#</span> Set default-src</span>
     default_src <span class="pl-k">=</span> CSP<span class="pl-k">.</span>self, <span class="pl-c"><span class="pl-c">#</span> "'self'"</span>
     <span class="pl-c"><span class="pl-c">#</span> Set report-uri</span>
     report_uri <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>https://example.com<span class="pl-pds">"</span></span>,
     <span class="pl-c"><span class="pl-c">#</span> Report endpoint</span>
     report_to <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>,
     sandbox <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>allow-downloads<span class="pl-pds">"</span></span>,
     <span class="pl-c"><span class="pl-c">#</span> Turn on https enforcement</span>
     upgrade_insecure_requests <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<div class="highlight highlight-source-json notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="{
    &quot;upgrade-insecure-requests&quot;: true,
    &quot;default-src&quot;: &quot;'self'&quot;,
    &quot;report-to&quot;: &quot;default&quot;,
    &quot;sandbox&quot;: &quot;allow-downloads&quot;,
    &quot;report-uri&quot;: &quot;https://example.com&quot;,
    &quot;report-only&quot;: false
}"><pre>{
    <span class="pl-ent">"upgrade-insecure-requests"</span>: <span class="pl-c1">true</span>,
    <span class="pl-ent">"default-src"</span>: <span class="pl-s"><span class="pl-pds">"</span>'self'<span class="pl-pds">"</span></span>,
    <span class="pl-ent">"report-to"</span>: <span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>,
    <span class="pl-ent">"sandbox"</span>: <span class="pl-s"><span class="pl-pds">"</span>allow-downloads<span class="pl-pds">"</span></span>,
    <span class="pl-ent">"report-uri"</span>: <span class="pl-s"><span class="pl-pds">"</span>https://example.com<span class="pl-pds">"</span></span>,
    <span class="pl-ent">"report-only"</span>: <span class="pl-c1">false</span>
}</pre></div>
</details>
<hr>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Policy(json::String)"><pre><span class="pl-c1">Policy</span>(json<span class="pl-k">::</span><span class="pl-c1">String</span>)</pre></div>
<table>
<thead>
<tr>
<th align="left">Parameter</th>
<th align="left">Type</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left"><code>json</code></td>
<td align="left"><code>String</code></td>
<td align="left">Path to json file, or json string</td>
</tr>
</tbody>
</table>
<p dir="auto">Build a Policy from a JSON configuration.</p>
<p dir="auto">See also: <a href="#policy-from-a-json-file">Import from JSON</a></p>
<hr>
<h2 dir="auto"><a id="user-content-http" class="anchor" aria-hidden="true" href="#http"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a href="@ref">HTTP</a></h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="HTTP.Header(policy::Policy)"><pre>HTTP<span class="pl-k">.</span><span class="pl-c1">Header</span>(policy<span class="pl-k">::</span><span class="pl-c1">Policy</span>)</pre></div>
<table>
<thead>
<tr>
<th align="left">Parameter</th>
<th align="left">Type</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left"><code>policy</code></td>
<td align="left"><code>Policy</code></td>
<td align="left">A <code>Policy</code> instance</td>
</tr>
</tbody>
</table>
<p dir="auto">Build CSP Header</p>
<details>
<summary>Example</summary>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="HTTP.Header(Policy(default=true))"><pre>HTTP<span class="pl-k">.</span><span class="pl-c1">Header</span>(<span class="pl-c1">Policy</span>(default<span class="pl-k">=</span><span class="pl-c1">true</span>))</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="&quot;Content-Security-Policy&quot; =&gt; &quot;base-uri none; default-src 'self'; frame-ancestors none; object-src none; report-to default; script-src 'strict-dynamic'&quot;"><pre><span class="pl-s"><span class="pl-pds">"</span>Content-Security-Policy<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>base-uri none; default-src 'self'; frame-ancestors none; object-src none; report-to default; script-src 'strict-dynamic'<span class="pl-pds">"</span></span></pre></div>
</details>
<hr>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="CSP.meta(policy::Policy; except=CSP.META_EXCLUDED)"><pre>CSP<span class="pl-k">.</span><span class="pl-c1">meta</span>(policy<span class="pl-k">::</span><span class="pl-c1">Policy</span>; except<span class="pl-k">=</span>CSP<span class="pl-k">.</span>META_EXCLUDED)</pre></div>
<table>
<thead>
<tr>
<th align="left">Parameter</th>
<th align="left">Type</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left"><code>policy</code></td>
<td align="left"><code>Policy</code></td>
<td align="left">A <code>Policy</code> instance</td>
</tr>
<tr>
<td align="left"><code>except</code></td>
<td align="left"><code>Vector{String}</code></td>
<td align="left"><strong>Optional</strong> Set of directives to exclude from meta element. Defaults to CSP.META_EXCLUDED</td>
</tr>
</tbody>
</table>
<p dir="auto">Build <code>&lt;meta&gt;</code> element, ignoring directives in <code>except</code></p>
<details>
<summary>Example</summary>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="CSP.meta(Policy(report_to=&quot;default&quot;, default_src=&quot;'self'&quot;))"><pre>CSP<span class="pl-k">.</span><span class="pl-c1">meta</span>(<span class="pl-c1">Policy</span>(report_to<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>, default_src<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>'self'<span class="pl-pds">"</span></span>))</pre></div>
<div class="highlight highlight-text-xml notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="&lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;default-src 'self'&quot;&gt;"><pre>&lt;<span class="pl-ent">meta</span> <span class="pl-e">http-equiv</span>=<span class="pl-s"><span class="pl-pds">"</span>Content-Security-Policy<span class="pl-pds">"</span></span> <span class="pl-e">content</span>=<span class="pl-s"><span class="pl-pds">"</span>default-src 'self'<span class="pl-pds">"</span></span>&gt;</pre></div>
</details>
<hr>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="CSP.http(policy::Policy)"><pre>CSP<span class="pl-k">.</span><span class="pl-c1">http</span>(policy<span class="pl-k">::</span><span class="pl-c1">Policy</span>)</pre></div>
<table>
<thead>
<tr>
<th align="left">Parameter</th>
<th align="left">Type</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left"><code>policy</code></td>
<td align="left"><code>Policy</code></td>
<td align="left">A <code>Policy</code> instance</td>
</tr>
</tbody>
</table>
<p dir="auto">Obtain CSP headers as Dict</p>
<details>
<summary>Example</summary>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="policy = csp(&quot;default-src&quot;=&gt;CSP.self, &quot;img-src&quot;=&gt;(CSP.self, CSP.data), &quot;report-uri&quot;=&gt;&quot;/api/reports&quot;)

CSP.http(policy)"><pre>policy <span class="pl-k">=</span> <span class="pl-c1">csp</span>(<span class="pl-s"><span class="pl-pds">"</span>default-src<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>CSP<span class="pl-k">.</span>self, <span class="pl-s"><span class="pl-pds">"</span>img-src<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>(CSP<span class="pl-k">.</span>self, CSP<span class="pl-k">.</span>data), <span class="pl-s"><span class="pl-pds">"</span>report-uri<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>/api/reports<span class="pl-pds">"</span></span>)

CSP<span class="pl-k">.</span><span class="pl-c1">http</span>(policy)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="OrderedCollections.OrderedDict{String, Any} with 3 entries:
  &quot;img-src&quot;     =&gt; &quot;data: 'self'&quot;
  &quot;default-src&quot; =&gt; &quot;'self'&quot;
  &quot;report-uri&quot;  =&gt; &quot;/api/reports&quot;"><pre class="notranslate"><code>OrderedCollections.OrderedDict{String, Any} with 3 entries:
  "img-src"     =&gt; "data: 'self'"
  "default-src" =&gt; "'self'"
  "report-uri"  =&gt; "/api/reports"
</code></pre></div>
</details>
</article></div>