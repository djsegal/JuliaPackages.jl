<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-about" class="anchor" aria-hidden="true" href="#about"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>About</h1>
<p dir="auto">This is the Julia bindings for the fst format (<a href="http://www.fstpackage.org" rel="nofollow">http://www.fstpackage.org</a>) although the format was originally designed to work with R it is language independent.</p>
<h1 dir="auto"><a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to use</h1>
<p dir="auto">Install the package via the julia package manager:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="]add FstFileFormat"><pre>]add FstFileFormat</pre></div>
<p dir="auto">or press <code>]</code> to enter <code>pkg</code> mode</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add FstFileFormat"><pre>pkg<span class="pl-k">&gt;</span> add FstFileFormat</pre></div>
<p dir="auto">Then use it to read and write fst files:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using FstFileFormat
using DataFrames

# install the R fst package if not already installed
if !fst_installed()
    install_fst()
end


df = DataFrame(col1 = rand(1:5,1_000_000),
    col2 = rand(1:100, 1_000_000),
    col3 = rand(Bool, 1_000_000))


# df can be any object that DataFrames.DataFrame(df) can make into a DataFrame
# any IterableTables.jl compatible table like object is supported
FstFileFormat.write(df, &quot;df.fst&quot;)

# compression = 100; the highest
FstFileFormat.write(df, &quot;df.fst&quot;, 100)

# read the metadata
FstFileFormat.readmeta(&quot;df.fst&quot;)

# read the data
FstFileFormat.read(&quot;df.fst&quot;)

# read some columns
FstFileFormat.read(&quot;df.fst&quot;; columns = [&quot;col1&quot;, &quot;col2&quot;])

# read some rows
FstFileFormat.read(&quot;df.fst&quot;; from = 500, to = 1000)

# read some columns and rows up to 1000
FstFileFormat.read(&quot;df.fst&quot;; columns = [&quot;col1&quot;, &quot;col2&quot;], to = 1000)

# read some columns and rows from 500
FstFileFormat.read(&quot;df.fst&quot;; columns = [&quot;col1&quot;, &quot;col2&quot;], from = 500)

# read some columns and rows from 500 to 1000
FstFileFormat.read(&quot;df.fst&quot;; columns = [&quot;col1&quot;, &quot;col2&quot;], from = 500, to = 1000)
"><pre><span class="pl-k">using</span> FstFileFormat
<span class="pl-k">using</span> DataFrames

<span class="pl-c"><span class="pl-c">#</span> install the R fst package if not already installed</span>
<span class="pl-k">if</span> <span class="pl-k">!</span><span class="pl-c1">fst_installed</span>()
    <span class="pl-c1">install_fst</span>()
<span class="pl-k">end</span>


df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(col1 <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>,<span class="pl-c1">1_000_000</span>),
    col2 <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>, <span class="pl-c1">1_000_000</span>),
    col3 <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Bool, <span class="pl-c1">1_000_000</span>))


<span class="pl-c"><span class="pl-c">#</span> df can be any object that DataFrames.DataFrame(df) can make into a DataFrame</span>
<span class="pl-c"><span class="pl-c">#</span> any IterableTables.jl compatible table like object is supported</span>
FstFileFormat<span class="pl-k">.</span><span class="pl-c1">write</span>(df, <span class="pl-s"><span class="pl-pds">"</span>df.fst<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> compression = 100; the highest</span>
FstFileFormat<span class="pl-k">.</span><span class="pl-c1">write</span>(df, <span class="pl-s"><span class="pl-pds">"</span>df.fst<span class="pl-pds">"</span></span>, <span class="pl-c1">100</span>)

<span class="pl-c"><span class="pl-c">#</span> read the metadata</span>
FstFileFormat<span class="pl-k">.</span><span class="pl-c1">readmeta</span>(<span class="pl-s"><span class="pl-pds">"</span>df.fst<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> read the data</span>
FstFileFormat<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>df.fst<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> read some columns</span>
FstFileFormat<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>df.fst<span class="pl-pds">"</span></span>; columns <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>col1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>col2<span class="pl-pds">"</span></span>])

<span class="pl-c"><span class="pl-c">#</span> read some rows</span>
FstFileFormat<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>df.fst<span class="pl-pds">"</span></span>; from <span class="pl-k">=</span> <span class="pl-c1">500</span>, to <span class="pl-k">=</span> <span class="pl-c1">1000</span>)

<span class="pl-c"><span class="pl-c">#</span> read some columns and rows up to 1000</span>
FstFileFormat<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>df.fst<span class="pl-pds">"</span></span>; columns <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>col1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>col2<span class="pl-pds">"</span></span>], to <span class="pl-k">=</span> <span class="pl-c1">1000</span>)

<span class="pl-c"><span class="pl-c">#</span> read some columns and rows from 500</span>
FstFileFormat<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>df.fst<span class="pl-pds">"</span></span>; columns <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>col1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>col2<span class="pl-pds">"</span></span>], from <span class="pl-k">=</span> <span class="pl-c1">500</span>)

<span class="pl-c"><span class="pl-c">#</span> read some columns and rows from 500 to 1000</span>
FstFileFormat<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>df.fst<span class="pl-pds">"</span></span>; columns <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>col1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>col2<span class="pl-pds">"</span></span>], from <span class="pl-k">=</span> <span class="pl-c1">500</span>, to <span class="pl-k">=</span> <span class="pl-c1">1000</span>)
</pre></div>
<h1 dir="auto"><a id="user-content-build-status" class="anchor" aria-hidden="true" href="#build-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Build Status</h1>
<p dir="auto"><a href="https://travis-ci.org/xiaodaigh/FstFileFormat.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d5b491561d0685b7f8ce1d0b790ec2b173333f6ac209d1a119b560646f39ebc8/68747470733a2f2f7472617669732d63692e6f72672f7869616f64616967682f46737446696c65466f726d61742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/xiaodaigh/FstFileFormat.jl.svg?branch=master" style="max-width: 100%;"></a></p>
</article></div>