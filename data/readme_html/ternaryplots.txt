<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-ternaryplotsjl" class="anchor" aria-hidden="true" href="#ternaryplotsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TernaryPlots.jl</h1>
<p dir="auto">Ternary/simplex plotting recipe/addon for Plots.jl</p>
<p dir="auto">Please note: this package is currently in <em>very early development stage</em>, this README is currently up to date as of 07/08/2021, but may not be in the coming days as problems are fixed and features are added. Please feel free to contact me via email with any questions jacobusmmsmit a gmail d com or open an issue on this repository.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation:</h2>
<p dir="auto">In the REPL you can paste this code to install the package:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Pkg; pkg&quot;add TernaryPlots&quot;"><pre class="notranslate"><code>using Pkg; pkg"add TernaryPlots"
</code></pre></div>
<p dir="auto">and then load it with</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using TernaryPlots"><pre class="notranslate"><code>using TernaryPlots
</code></pre></div>
<h2 dir="auto"><a id="user-content-current-functionality" class="anchor" aria-hidden="true" href="#current-functionality"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Current functionality:</h2>
<ul dir="auto">
<li>Conversions between cartesian and ternary co-ordinates using the exported function <code>cart2tern</code> and <code>tern2cart</code></li>
<li>Construction of ternary axes using <code>ternary_axes</code>. (Currently not possible to reverse arrow/axis directions)</li>
</ul>
<h2 dir="auto"><a id="user-content-how-to-use-this-package" class="anchor" aria-hidden="true" href="#how-to-use-this-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to use this package:</h2>
<p dir="auto">This package provides a function (more precisely: a recipe) to construct ternary plots via converting ternary co-ordinates to cartesian and plotting them:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="push!(LOAD_PATH, &quot;src&quot;)
using Plots
using TernaryPlots
using CSV
using DataFrames


#Downloading Global whole-rock geochemical database compilation from zenodo.org
path = &quot;https://zenodo.org/record/3359791/files/major.csv?download=1&quot;
df = CSV.read(download(path), DataFrame)
df = coalesce.(df,0)
filter!(row -&gt; row[:sio2] &gt;= 0, df)
filter!(row -&gt; row[:al2o3] &gt;= 0, df)
filter!(row -&gt; row[:mgo] &gt;= 0, df)
filter!(row -&gt; (row[:sio2] .+ row[:al2o3] .+ row[:mgo]) &gt;= 0.9, df)
filter!(row -&gt; (row[:sio2] .+ row[:al2o3] .+ row[:mgo]) &lt;= 1.1, df)
compos = [df.sio2 df.al2o3 df.mgo]
a = [zeros(eltype(compos), size(compos, 1)) zeros(eltype(compos), size(compos, 1))]

for i in 1:size(compos,1)
    a[i,:] = collect(tern2cart(compos[i,:]))'
end

ternary_axes(
    title=&quot;Rocks&quot;,
    xguide=&quot;SiO2&quot;,
    yguide=&quot;Al2O3&quot;,
    zguide=&quot;MgO&quot;,
)

p = scatter!(a[:,1],a[:,2], legend=false)"><pre class="notranslate"><code>push!(LOAD_PATH, "src")
using Plots
using TernaryPlots
using CSV
using DataFrames


#Downloading Global whole-rock geochemical database compilation from zenodo.org
path = "https://zenodo.org/record/3359791/files/major.csv?download=1"
df = CSV.read(download(path), DataFrame)
df = coalesce.(df,0)
filter!(row -&gt; row[:sio2] &gt;= 0, df)
filter!(row -&gt; row[:al2o3] &gt;= 0, df)
filter!(row -&gt; row[:mgo] &gt;= 0, df)
filter!(row -&gt; (row[:sio2] .+ row[:al2o3] .+ row[:mgo]) &gt;= 0.9, df)
filter!(row -&gt; (row[:sio2] .+ row[:al2o3] .+ row[:mgo]) &lt;= 1.1, df)
compos = [df.sio2 df.al2o3 df.mgo]
a = [zeros(eltype(compos), size(compos, 1)) zeros(eltype(compos), size(compos, 1))]

for i in 1:size(compos,1)
    a[i,:] = collect(tern2cart(compos[i,:]))'
end

ternary_axes(
    title="Rocks",
    xguide="SiO2",
    yguide="Al2O3",
    zguide="MgO",
)

p = scatter!(a[:,1],a[:,2], legend=false)
</code></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/jacobusmmsmit/TernaryPlots.jl/blob/master/outputs/example_plot.png?raw=true"><img src="https://github.com/jacobusmmsmit/TernaryPlots.jl/raw/master/outputs/example_plot.png?raw=true" alt="" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-work-in-progress" class="anchor" aria-hidden="true" href="#work-in-progress"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Work in progress:</h2>
<ul dir="auto">
<li>Different axis scales (as opposed to just 0 to 1) and ability to update ticks after definition.</li>
<li>Performance improvements and code cleanup.</li>
<li>Documentation.</li>
<li>Plotting of ternary heatmaps by overloading <code>heatmap</code> on <code>Ternary_Axes</code>. Users will be able to define a function of cartesian co-ordinates or ternary co-ordinates:</li>
</ul>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content=" f = ((a, b, c) -&gt; 3a^2 + b - c) # Function of ternary co-ordinates
 g = (x,y) -&gt; f(cart2tern(x, y)...) # Same function, but taking ternary co-ordinates as input"><pre class="notranslate"><code> f = ((a, b, c) -&gt; 3a^2 + b - c) # Function of ternary co-ordinates
 g = (x,y) -&gt; f(cart2tern(x, y)...) # Same function, but taking ternary co-ordinates as input
</code></pre></div>
<ul dir="auto">
<li>Plotting of ternary histograms possibly simply by converting it into a heatmap and using the previous heatmap functionality.</li>
<li>Plotting of contour maps.</li>
</ul>
<h2 dir="auto"><a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Known issues:</h2>
<ul dir="auto">
<li>Rotation of labels is not consistent as you resize the graph, as such one needs to fiddle with the size parameter in order to get the angles correct, or specify them yourself.</li>
<li>The figures are off-centered.</li>
</ul>
<h2 dir="auto"><a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributions:</h2>
<ul dir="auto">
<li><a href="https://github.com/jacobusmmsmit">@jacobusmmsmit</a> - Author and maintainer</li>
<li><a href="https://github.com/Hasnep">@Hasnep</a> - Maintainer</li>
<li><a href="https://github.com/daschw">@daschw</a> - Major contributions to recipe implementation</li>
</ul>

</article></div>