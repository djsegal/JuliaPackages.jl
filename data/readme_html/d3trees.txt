<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-d3trees" class="anchor" aria-hidden="true" href="#d3trees"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>D3Trees</h1>
<p><a href="https://travis-ci.org/sisl/D3Trees.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/43b94f39fa9660b600551ded92934de55fce5fb2c5570f297c0b185868823bab/68747470733a2f2f7472617669732d63692e6f72672f7369736c2f443354726565732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/sisl/D3Trees.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/sisl/D3Trees.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/5a7462ea2e2f957238490d8a4ce03508a2655b0ca919a4e3e7dff333856f18e4/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f7369736c2f443354726565732e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/sisl/D3Trees.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/sisl/D3Trees.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/d00c7635ae6d3e2157eaf785687461723ce2ca3d73bb09d5cdf0da30b46e410a/687474703a2f2f636f6465636f762e696f2f6769746875622f7369736c2f443354726565732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/sisl/D3Trees.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Flexible interactive visualization for large trees using <a href="d3js.org">D3.js</a>.</p>
<p><a target="_blank" rel="noopener noreferrer" href="img/tree.png"><img src="img/tree.png" alt="Tree" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Pkg.add(&quot;D3Trees&quot;)
"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>D3Trees<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic Usage</h2>
<p>There are two ways to create a D3Tree object described below:</p>
<h3><a id="user-content-1-with-abstracttrees" class="anchor" aria-hidden="true" href="#1-with-abstracttrees"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>1) With AbstractTrees</h3>
<p>Any object that implements the interface from AbstractTrees can be given to the constructor: <code>D3Tree(object)</code>.</p>
<p>See the docstring (<code>julia&gt; ?D3Tree</code>) for information on how to control the style.</p>
<h3><a id="user-content-2-without-abstracttrees" class="anchor" aria-hidden="true" href="#2-without-abstracttrees"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>2) Without AbstractTrees</h3>
<p>The structure of a D3Tree is specified with <em>lists of children for each node</em> stored in a <code>Vector</code> of <code>Int</code> <code>Vector</code>s. For example</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="D3Tree([[2,3], [], [4], []])
"><pre><span class="pl-c1">D3Tree</span>([[<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], [], [<span class="pl-c1">4</span>], []])</pre></div>
<p>creates a tree with four nodes. Nodes 2 and 3 are children of node 1, and node 4 is the only child of node 3. Nodes 2 and 4 are childless.</p>
<h2><a id="user-content-displaying-trees" class="anchor" aria-hidden="true" href="#displaying-trees"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Displaying Trees</h2>
<p>In an IJulia notebook, the tree will automatically be displayed using D3.js. To get an interactive display in a chrome browser from the repl or a script, you can use the <code>inchrome</code> function. The <code>blink</code> function can also open it in a standalone window using the <code>Blink.jl</code> package.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="children = [[2,3], [4,5], [6,7], [8,9], [1], [], [], [], []]
t = D3Tree(children)

inchrome(t)
inbrowser(t, &quot;firefox&quot;)
"><pre>children <span class="pl-k">=</span> [[<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], [<span class="pl-c1">4</span>,<span class="pl-c1">5</span>], [<span class="pl-c1">6</span>,<span class="pl-c1">7</span>], [<span class="pl-c1">8</span>,<span class="pl-c1">9</span>], [<span class="pl-c1">1</span>], [], [], [], []]
t <span class="pl-k">=</span> <span class="pl-c1">D3Tree</span>(children)

<span class="pl-c1">inchrome</span>(t)
<span class="pl-c1">inbrowser</span>(t, <span class="pl-s"><span class="pl-pds">"</span>firefox<span class="pl-pds">"</span></span>)</pre></div>
<p>By clicking on the nodes, you can expand it to look like the image at the top of the page.</p>
<h2><a id="user-content-style-control" class="anchor" aria-hidden="true" href="#style-control"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Style Control</h2>
<p>Optional arguments control other aspects of the style (use <code>julia&gt; ?D3Tree</code> for a complete list), for example</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="children = [[2,3], [], [4], []]
text = [&quot;one\n(second line)&quot;, &quot;2&quot;, &quot;III&quot;, &quot;four&quot;]
style = [&quot;&quot;, &quot;fill:red&quot;, &quot;r:14&quot;, &quot;opacity:0.7&quot;]
link_style = [&quot;&quot;, &quot;stroke:blue&quot;, &quot;&quot;, &quot;stroke-width:10px&quot;]
tooltip = [&quot;pops&quot;, &quot;up&quot;, &quot;on&quot;, &quot;hover&quot;]
t = D3Tree(children,
           text=text,
           style=style,
           tooltip=tooltip,
           link_style=link_style,
           title=&quot;My Tree&quot;,
           init_expand=10)

inchrome(t)
"><pre>children <span class="pl-k">=</span> [[<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], [], [<span class="pl-c1">4</span>], []]
text <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>one<span class="pl-cce">\n</span>(second line)<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>III<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>four<span class="pl-pds">"</span></span>]
style <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>fill:red<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>r:14<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>opacity:0.7<span class="pl-pds">"</span></span>]
link_style <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>stroke:blue<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>stroke-width:10px<span class="pl-pds">"</span></span>]
tooltip <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>pops<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>up<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>on<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>hover<span class="pl-pds">"</span></span>]
t <span class="pl-k">=</span> <span class="pl-c1">D3Tree</span>(children,
           text<span class="pl-k">=</span>text,
           style<span class="pl-k">=</span>style,
           tooltip<span class="pl-k">=</span>tooltip,
           link_style<span class="pl-k">=</span>link_style,
           title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>My Tree<span class="pl-pds">"</span></span>,
           init_expand<span class="pl-k">=</span><span class="pl-c1">10</span>)

<span class="pl-c1">inchrome</span>(t)</pre></div>
<p>will yield</p>
<p><a target="_blank" rel="noopener noreferrer" href="img/styled_tree.png"><img src="img/styled_tree.png" alt="Expanded tree with style" style="max-width:100%;"></a></p>
<p>or, see <a href="https://nbviewer.jupyter.org/github/sisl/D3Trees.jl/blob/master/examples/hello.ipynb" rel="nofollow">examples/hello.ipynb</a></p>
<h2><a id="user-content-text-output" class="anchor" aria-hidden="true" href="#text-output"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Text output</h2>
<p>D3Trees also supports basic text output. This can be achieved by writing to an io object with the <code>text/plain</code> mime. This format is the automatic output if a D3Tree is created in the REPL:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; children = [[2,3], [4,5], [6,7], [8,9], [1], [], [], [], []];

julia&gt; t = D3Tree(children)
1
├──2
│  ├──4
│  │  ├──8 (0 children)
│  │  └──9 (0 children)
│  └──5
│     └──1 (2 children)
└──3
   ├──6
   └──7
"><pre><code>julia&gt; children = [[2,3], [4,5], [6,7], [8,9], [1], [], [], [], []];

julia&gt; t = D3Tree(children)
1
├──2
│  ├──4
│  │  ├──8 (0 children)
│  │  └──9 (0 children)
│  └──5
│     └──1 (2 children)
└──3
   ├──6
   └──7
</code></pre></div>
<h2><a id="user-content-browser-compatibility" class="anchor" aria-hidden="true" href="#browser-compatibility"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Browser compatibility</h2>
<p>This package works best in the Google chrome or chromium browser.</p>
<h2><a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Limitations</h2>
<ul>
<li>The tree is currently transmitted to the browser in one big json string, so it can be slow for large trees and cannot handle infinite trees.</li>
<li>This will not work offline because it downloads the D3 library on the fly (<a href="https://github.com/sisl/D3Trees.jl/issues/10">https://github.com/sisl/D3Trees.jl/issues/10</a>)</li>
</ul>
</article></div>