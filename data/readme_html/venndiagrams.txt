<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-venndiagrams" class="anchor" aria-hidden="true" href="#venndiagrams"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>VennDiagrams</h1>
<p dir="auto">Generate Venn diagrams in Julia. Uses the excellent
<a href="https://github.com/dcjones/Compose.jl">Compose</a> package.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using VennDiagrams

c1 = [0:5] # Can be any iterable
c2 = [3:10]

p = venn(c1, c2)
draw(PDF(&quot;beaut1.pdf&quot;, 8cm, 10cm), p)

c3 = [0:2:12]

p = venn(c1, c2, c3, proportional=false)
draw(PDF(&quot;beaut3.pdf&quot;, 8cm, 10cm), p)"><pre><span class="pl-k">using</span> VennDiagrams

c1 <span class="pl-k">=</span> [<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">5</span>] <span class="pl-c"><span class="pl-c">#</span> Can be any iterable</span>
c2 <span class="pl-k">=</span> [<span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">10</span>]

p <span class="pl-k">=</span> <span class="pl-c1">venn</span>(c1, c2)
<span class="pl-c1">draw</span>(<span class="pl-c1">PDF</span>(<span class="pl-s"><span class="pl-pds">"</span>beaut1.pdf<span class="pl-pds">"</span></span>, <span class="pl-c1">8</span>cm, <span class="pl-c1">10</span>cm), p)

c3 <span class="pl-k">=</span> [<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">12</span>]

p <span class="pl-k">=</span> <span class="pl-c1">venn</span>(c1, c2, c3, proportional<span class="pl-k">=</span><span class="pl-c1">false</span>)
<span class="pl-c1">draw</span>(<span class="pl-c1">PDF</span>(<span class="pl-s"><span class="pl-pds">"</span>beaut3.pdf<span class="pl-pds">"</span></span>, <span class="pl-c1">8</span>cm, <span class="pl-c1">10</span>cm), p)</pre></div>
<h2 dir="auto"><a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reference</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="venn(xs::Union(AbstractArray,Set)...;
proportional::Bool = true,
labels=Union(Bool,Vector{String}), 
colors=Union(Bool,Vector{ColorValue},Vector{AlphaColorValue}))"><pre class="notranslate"><code>venn(xs::Union(AbstractArray,Set)...;
proportional::Bool = true,
labels=Union(Bool,Vector{String}), 
colors=Union(Bool,Vector{ColorValue},Vector{AlphaColorValue}))
</code></pre></div>
<p dir="auto">Simply enough, everything is accessible through the <code>venn</code> function, with
optional selection of proportinality, labels, and colors.</p>
<p dir="auto">For more control of stroke, linewidth, font size/type, etc... use the
<code>compose</code> function to modify the venn diagram before plotting:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Compose

compose(p, stroke(&quot;black&quot;), linewidth(2mm))"><pre><span class="pl-k">using</span> Compose

<span class="pl-c1">compose</span>(p, <span class="pl-c1">stroke</span>(<span class="pl-s"><span class="pl-pds">"</span>black<span class="pl-pds">"</span></span>), <span class="pl-c1">linewidth</span>(<span class="pl-c1">2</span>mm))</pre></div>
</article></div>