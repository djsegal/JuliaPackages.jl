<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-visionjl" class="anchor" aria-hidden="true" href="#visionjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Vision.jl</h1>
<p dir="auto">A Julia package for easily interacting with the <a href="https://cloud.google.com/vision/" rel="nofollow">Google Vision API</a>.</p>
<p dir="auto">The package currently implements the following features:</p>
<ol dir="auto">
<li>
<p dir="auto"><code>makeRequestBody</code> - creates a request body for the Google Vision API from either a base 64 encoded image or a URI to an image containing one or more features.</p>
</li>
<li>
<p dir="auto"><code>visionFeature</code> - creates a <code>VisionFeature</code> object for use in the request body.</p>
</li>
<li>
<p dir="auto"><code>getResponse</code> - sends a request to the Google Vision API and returns the response.</p>
</li>
<li>
<p dir="auto"><code>parseFeatures</code> - parses the response from the Google Vision API, currently only supports <code>textAnnotations</code></p>
</li>
</ol>
<h2 dir="auto"><a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to use</h2>
<p dir="auto">Install "Vision" from the Julia package manager.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add Vision"><pre>] add Vision</pre></div>
<p dir="auto">Export your google API key to <code>JULIA_VISION_API_KEY</code> or manually override the URL used by <code>getResponse</code></p>
<h2 dir="auto"><a id="user-content-example-code-snippets" class="anchor" aria-hidden="true" href="#example-code-snippets"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example code snippets</h2>
<h3 dir="auto"><a id="user-content-using-base64-encoded-images" class="anchor" aria-hidden="true" href="#using-base64-encoded-images"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using base64 encoded images</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Vision
using Base64

image = base64encode(open(&quot;example.jpg&quot;, &quot;r&quot;))

requestBody = makeRequestBody(image, visionFeature(&quot;DOCUMENT_TEXT_DETECTION&quot;))

response = getResponse(requestBody)

println(parseFeatures(response))"><pre><span class="pl-k">using</span> Vision
<span class="pl-k">using</span> Base64

image <span class="pl-k">=</span> <span class="pl-c1">base64encode</span>(<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>example.jpg<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>r<span class="pl-pds">"</span></span>))

requestBody <span class="pl-k">=</span> <span class="pl-c1">makeRequestBody</span>(image, <span class="pl-c1">visionFeature</span>(<span class="pl-s"><span class="pl-pds">"</span>DOCUMENT_TEXT_DETECTION<span class="pl-pds">"</span></span>))

response <span class="pl-k">=</span> <span class="pl-c1">getResponse</span>(requestBody)

<span class="pl-c1">println</span>(<span class="pl-c1">parseFeatures</span>(response))</pre></div>
<h3 dir="auto"><a id="user-content-using-uris" class="anchor" aria-hidden="true" href="#using-uris"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using URI's</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Vision
using URIs

requestBody = makeRequestBody(
    URI(&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Julia_Programming_Language_Logo.svg/1920px-Julia_Programming_Language_Logo.svg.png&quot;),
    [
        visionFeature(&quot;LABEL_DETECTION&quot;, 50),
        visionFeature(&quot;TEXT_DETECTION&quot;, 50),
        visionFeature(&quot;LOGO_DETECTION&quot;, 1),
    ]
)
response = getResponse(requestBody)

println(parseFeatures(response))
"><pre><span class="pl-k">using</span> Vision
<span class="pl-k">using</span> URIs

requestBody <span class="pl-k">=</span> <span class="pl-c1">makeRequestBody</span>(
    <span class="pl-c1">URI</span>(<span class="pl-s"><span class="pl-pds">"</span>https://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Julia_Programming_Language_Logo.svg/1920px-Julia_Programming_Language_Logo.svg.png<span class="pl-pds">"</span></span>),
    [
        <span class="pl-c1">visionFeature</span>(<span class="pl-s"><span class="pl-pds">"</span>LABEL_DETECTION<span class="pl-pds">"</span></span>, <span class="pl-c1">50</span>),
        <span class="pl-c1">visionFeature</span>(<span class="pl-s"><span class="pl-pds">"</span>TEXT_DETECTION<span class="pl-pds">"</span></span>, <span class="pl-c1">50</span>),
        <span class="pl-c1">visionFeature</span>(<span class="pl-s"><span class="pl-pds">"</span>LOGO_DETECTION<span class="pl-pds">"</span></span>, <span class="pl-c1">1</span>),
    ]
)
response <span class="pl-k">=</span> <span class="pl-c1">getResponse</span>(requestBody)

<span class="pl-c1">println</span>(<span class="pl-c1">parseFeatures</span>(response))
</pre></div>
<p dir="auto">See <a href="https://docs.juliahub.com/Vision" rel="nofollow">Documentation</a> for more details.</p>
</article></div>