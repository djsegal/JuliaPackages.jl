<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-robuststats" class="anchor" aria-hidden="true" href="#robuststats"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RobustStats</h1>
<p dir="auto"><a href="https://travis-ci.org/maximsch2/RobustStats.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/072f1eb45fd55fa4ef0d6ab14c530c9061050a44363665b98c0f5bd531798105/68747470733a2f2f7472617669732d63692e6f72672f6d6178696d736368322f526f6275737453746174732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/maximsch2/RobustStats.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">This package contains a variety of functions from the field robust statistical methods. Many are estimators of location or dispersion; others estimate the standard error or the confidence intervals for the location or dispresion estimators, generally computed by the bootstrap method.</p>
<p dir="auto">Many functions in this package are based on the R package WRS (<a href="https://r-forge.r-project.org/projects/wrs/" rel="nofollow">an R-Forge repository</a>) by <a href="http://dornsife.usc.edu/cf/labs/wilcox/wilcox-faculty-display.cfm" rel="nofollow">Rand Wilcox</a>. Others were contributed by users as needed. <a href="#References">References</a> to the statistics literature can be found below.</p>
<p dir="auto">This package requires <code>Compat</code>, <code>Rmath</code>, <code>Dataframes</code>, and <code>Distributions</code>. They can be installed automatically, or by invoking <code>Pkg.add("packagename")</code>.</p>
<h2 dir="auto"><a id="user-content-estimators" class="anchor" aria-hidden="true" href="#estimators"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Estimators</h2>
<h3 dir="auto"><a id="user-content-location-estimators" class="anchor" aria-hidden="true" href="#location-estimators"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Location estimators:</h3>
<ul dir="auto">
<li><code>tmean(x, tr=0.2)</code>  - Trimmed mean: mean of data with the lowest and highest fraction <code>tr</code> of values omitted.</li>
<li><code>winmean(x, tr=0.2)</code>- Winsorized mean: mean of data with the lowest and highest fraction <code>tr</code> of values squashed to the 20%ile or 80%ile value, respectively.</li>
<li><code>tauloc(x)</code>         - Tau measure of location by Yohai and Zamar.</li>
<li><code>onestep(x)</code>        - One-step M-estimator of location using Huber's ψ</li>
<li><code>mom(x)</code>            - Modified one-step M-estimator of location (MOM)</li>
<li><code>bisquareWM(x)</code>     - Mean with weights given by the bisquare rho function.</li>
<li><code>huberWM(x)</code>        - Mean with weights given by Huber's rho function.</li>
<li><code>trimean(x)</code>        - Tukey's trimean, the average of the median and the midhinge.</li>
</ul>
<h3 dir="auto"><a id="user-content-dispersion-estimators" class="anchor" aria-hidden="true" href="#dispersion-estimators"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Dispersion estimators:</h3>
<ul dir="auto">
<li><code>winvar(x, tr=0.2)</code> - Winsorized variance.</li>
<li><code>wincov(x, y, tr=0.2)</code> - Winsorized covariance.</li>
<li><code>pbvar(x)</code>          - Percentage bend midvariance.</li>
<li><code>bivar(x)</code>          - Biweight midvariance.</li>
<li><code>tauvar(x)</code>         - Tau measure of scale by Yohai and Zamar.</li>
<li><code>iqrn(x)</code>           - Normalized inter-quartile range (normalized to equal σ for Gaussians).</li>
<li><code>shorthrange(x)</code>    - Length of the shortest closed interval containing at least half the data.</li>
<li><code>scaleQ(x)</code>         - Normalized Rousseeuw &amp; Croux Q statistic, from the 25%ile of all 2-point distances.</li>
<li><code>scaleS(x)</code>         - Normalized Rousseeuw &amp; Croux S statistic, from the median of the median of all 2-point distances.</li>
<li><code>shorthrange!(x)</code>, <code>scaleQ!(x)</code>, and <code>scaleS!(x)</code> are non-copying (that is, <code>x</code>-modifying) forms of the above.</li>
</ul>
<h3 dir="auto"><a id="user-content-confidence-interval-or-standard-error-estimates" class="anchor" aria-hidden="true" href="#confidence-interval-or-standard-error-estimates"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Confidence interval or standard error estimates:</h3>
<ul dir="auto">
<li><code>trimse(x)</code> - Standard error of the trimmed mean.</li>
<li><code>trimci(x)</code> - Confidence interval for the trimmed mean.</li>
<li><code>msmedse(x)</code> - Standard error of the median.</li>
<li><code>binomci(s,n)</code> - Binomial confidence interval (Pratt's method).</li>
<li><code>acbinomci(s,n)</code> - Binomial confidence interval (Agresti-Coull method).</li>
<li><code>sint(x)</code>  - Confidence interval for the median (with optional p-value).</li>
<li><code>momci(x)</code> - Confidence interval of the modified one-step M-estimator of location (MOM).</li>
<li><code>trimpb(x)</code> - Confidence interval for trimmed mean.</li>
<li><code>pcorb(x)</code> - Confidence intervale for Pearson's correlation coefficient.</li>
<li><code>yuend</code> - Compare the trimmed means of two dependent random variables.</li>
<li><code>bootstrapci(x, est=f)</code> - Compute a confidence interval for estimator <code>f(x)</code> by bootstrap methods.</li>
<li><code>bootstrapse(x, est=f)</code> - Compute a standard error of estimator <code>f(x)</code> by bootstrap methods.</li>
</ul>
<h3 dir="auto"><a id="user-content-utility-functions" class="anchor" aria-hidden="true" href="#utility-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Utility functions:</h3>
<ul dir="auto">
<li><code>winval(x, tr=0.2)</code>         - Return a Winsorized copy of the data.</li>
<li><code>idealf(x)</code>                 - Ideal fourths, interpolated 1st and 3rd quartiles.</li>
<li><code>outbox(x)</code>                 - Outlier detection.</li>
<li><code>hpsi(x)</code>                   - Huber's ψ function.</li>
<li><code>contam_randn</code>              - Contaminated normal distribution (generates random deviates).</li>
<li><code>_weightedhighmedian(x)</code>    - Weighted median (breaks ties by rounding up). Used in scaleQ.</li>
</ul>
<h3 dir="auto"><a id="user-content-recommendations" class="anchor" aria-hidden="true" href="#recommendations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Recommendations:</h3>
<p dir="auto">For location, consider the <code>bisquareWM</code> with k=3.9σ, if you can make any reasonable guess as to the "Gaussian-like width" σ (see dispersion estimators for this).  If not, <code>trimean</code> is a good second choice, though less efficient. Also, though the author personally has no experience with them, <code>tauloc</code>, <code>onestep</code>, and <code>mom</code> might be useful.</p>
<p dir="auto">For dispersion, the <code>scaleS</code> is a good general choice, though <code>scaleQ</code> is very efficient for nearly Gaussian data.  The MAD is the most robust though less efficient.  If scaleS doesn't work, then shorthrange is a good second choice.</p>
<p dir="auto">The first reference on scaleQ and scaleS (below) is a lengthy discussion of the tradeoffs among scaleQ, scaleS, shortest half, and median absolute deviation (MAD, see BaseStats.mad for Julia implementation). All four have the virtue of having the maximum possible breakdown point, 50%. This means that replacing up to 50% of the data with unbounded bad values leaves the statistic still bounded. The efficiency of Q is better than S and S is better than MAD (for Gaussian distributions), and the influence of a single bad point and the bias due to a fraction of bad points is only slightly larger on Q or S than on MAD. Unlike MAD, the other three do not implicitly assume a symmetric distribution.</p>
<p dir="auto">To choose between Q and S, the authors note that Q has higher statistical efficiency, but S is typically twice as fast to compute and has lower gross-error sensitivity. An interesting advantage of Q over the others is that its influence function is continuous. For a rough idea about the efficiency, the large-N limit of the standardized variance of each quantity is 2.722 for MAD, 1.714 for S, and 1.216 for Q, relative to 1.000 for the standard deviation (given Gaussian data). The paper gives the ratios for Cauchy and exponential distributions, too; the efficiency advantages of Q are less for Cauchy than for the other distributions.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="#Set up a sample dataset:
x=[1.672064, 0.7876588, 0.317322, 0.9721646, 0.4004206, 1.665123, 3.059971, 0.09459603, 1.27424, 3.522148,
   0.8211308, 1.328767, 2.825956, 0.1102891, 0.06314285, 2.59152, 8.624108, 0.6516885, 5.770285, 0.5154299]

julia&gt; mean(x)     #the mean of this dataset
1.853401259"><pre class="notranslate"><code>#Set up a sample dataset:
x=[1.672064, 0.7876588, 0.317322, 0.9721646, 0.4004206, 1.665123, 3.059971, 0.09459603, 1.27424, 3.522148,
   0.8211308, 1.328767, 2.825956, 0.1102891, 0.06314285, 2.59152, 8.624108, 0.6516885, 5.770285, 0.5154299]

julia&gt; mean(x)     #the mean of this dataset
1.853401259
</code></pre></div>
<h4 dir="auto"><a id="user-content-tmean-trimmed-mean" class="anchor" aria-hidden="true" href="#tmean-trimmed-mean"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>tmean</code>: trimmed mean</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; tmean(x)            #20% trimming by default
1.2921802666666669

julia&gt; tmean(x, tr=0)      #no trimming; the same as the output of mean()
1.853401259

julia&gt; tmean(x, tr=0.3)    #30% trimming
1.1466045875000002

julia&gt; tmean(x, tr=0.5)    #50% trimming, which gives you the median of the dataset.
1.1232023"><pre class="notranslate"><code>julia&gt; tmean(x)            #20% trimming by default
1.2921802666666669

julia&gt; tmean(x, tr=0)      #no trimming; the same as the output of mean()
1.853401259

julia&gt; tmean(x, tr=0.3)    #30% trimming
1.1466045875000002

julia&gt; tmean(x, tr=0.5)    #50% trimming, which gives you the median of the dataset.
1.1232023
</code></pre></div>
<h4 dir="auto"><a id="user-content-winval-winsorize-data" class="anchor" aria-hidden="true" href="#winval-winsorize-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>winval</code>: winsorize data</h4>
<p dir="auto">That is, return a copy of the input array, with the extreme low or high values
replaced by the lowest or highest non-extreme value, repectively. The fraction
considered extreme can be between 0 and 0.5, with 0.2 as the default.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; winval(x)           #20% winsorization; can be changed via the named argument `tr`.
20-element Any Array:
 1.67206
 0.787659
 0.400421
 0.972165
 ...
 0.651689
 2.82596
 0.51543"><pre class="notranslate"><code>julia&gt; winval(x)           #20% winsorization; can be changed via the named argument `tr`.
20-element Any Array:
 1.67206
 0.787659
 0.400421
 0.972165
 ...
 0.651689
 2.82596
 0.51543
</code></pre></div>
<h4 dir="auto"><a id="user-content-winmean-winvar-wincov-winsorized-mean-variance-and-covariance" class="anchor" aria-hidden="true" href="#winmean-winvar-wincov-winsorized-mean-variance-and-covariance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>winmean</code>, <code>winvar</code>, <code>wincov</code>: winsorized mean, variance, and covariance</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; winmean(x)          #20% winsorization; can be changed via the named argument `tr`.
1.4205834800000001
julia&gt; winvar(x)
0.998659015947531
julia&gt; wincov(x, x)
0.998659015947531
julia&gt; wincov(x, x.^2)
3.2819238397424004"><pre class="notranslate"><code>julia&gt; winmean(x)          #20% winsorization; can be changed via the named argument `tr`.
1.4205834800000001
julia&gt; winvar(x)
0.998659015947531
julia&gt; wincov(x, x)
0.998659015947531
julia&gt; wincov(x, x.^2)
3.2819238397424004
</code></pre></div>
<h4 dir="auto"><a id="user-content-trimse-estimated-standard-error-of-the-trimmed-mean" class="anchor" aria-hidden="true" href="#trimse-estimated-standard-error-of-the-trimmed-mean"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>trimse</code>: estimated standard error of the trimmed mean</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; trimse(x)           #20% winsorization; can be changed via the named argument `tr`.
0.3724280347984342"><pre class="notranslate"><code>julia&gt; trimse(x)           #20% winsorization; can be changed via the named argument `tr`.
0.3724280347984342
</code></pre></div>
<h4 dir="auto"><a id="user-content-trimci-1-α-confidence-interval-for-the-trimmed-mean" class="anchor" aria-hidden="true" href="#trimci-1-α-confidence-interval-for-the-trimmed-mean"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>trimci</code>: (1-α) confidence interval for the trimmed mean</h4>
<p dir="auto">Can be used for paired groups if <code>x</code> consists of the difference scores of two paired groups.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; trimci(x)                 #20% winsorization; can be changed via the named argument `tr`.
(1-α) confidence interval for the trimmed mean

Degrees of freedom:   11
Estimate:             1.292180
Statistic:            3.469611
Confidence interval:  0.472472       2.111889
p value:              0.005244"><pre class="notranslate"><code>julia&gt; trimci(x)                 #20% winsorization; can be changed via the named argument `tr`.
(1-α) confidence interval for the trimmed mean

Degrees of freedom:   11
Estimate:             1.292180
Statistic:            3.469611
Confidence interval:  0.472472       2.111889
p value:              0.005244
</code></pre></div>
<h4 dir="auto"><a id="user-content-idealf-the-ideal-fourths" class="anchor" aria-hidden="true" href="#idealf-the-ideal-fourths"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>idealf</code>: the ideal fourths:</h4>
<p dir="auto">Returns <code>(q1,q3)</code>, the 1st and 3rd quartiles. These will be a weighted sum of
the values that bracket the exact quartiles, analogous to how we handle the
median of an even-length array.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; idealf(x)
(0.4483411416666667,2.7282743333333332)"><pre class="notranslate"><code>julia&gt; idealf(x)
(0.4483411416666667,2.7282743333333332)
</code></pre></div>
<h4 dir="auto"><a id="user-content-pbvar-percentage-bend-midvariance" class="anchor" aria-hidden="true" href="#pbvar-percentage-bend-midvariance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>pbvar</code>: percentage bend midvariance</h4>
<p dir="auto">A robust estimator of scale (dispersion).
See <a href="http://www.itl.nist.gov/div898/software/dataplot/refman2/auxillar/pbendmv.htm" rel="nofollow">NIST ITL webpage</a> for more.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; pbvar(x)
2.0009575278957623"><pre class="notranslate"><code>julia&gt; pbvar(x)
2.0009575278957623
</code></pre></div>
<h4 dir="auto"><a id="user-content-bivar-biweight-midvariance" class="anchor" aria-hidden="true" href="#bivar-biweight-midvariance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>bivar</code>: biweight midvariance</h4>
<p dir="auto">A robust estimator of scale (dispersion).
See <a href="http://www.itl.nist.gov/div898/software/dataplot/refman2/auxillar/biwmidv.htm" rel="nofollow">NIST ITL webpage</a> for more.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; bivar(x)
1.5885279811329132"><pre class="notranslate"><code>julia&gt; bivar(x)
1.5885279811329132
</code></pre></div>
<h4 dir="auto"><a id="user-content-tauloc-tauvar-tau-measure-of-location-and-scale" class="anchor" aria-hidden="true" href="#tauloc-tauvar-tau-measure-of-location-and-scale"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>tauloc</code>, <code>tauvar</code>: tau measure of location and scale</h4>
<p dir="auto">Robust estimators of location and scale, with breakdown points of 50%.</p>
<p dir="auto">See Yohai and Zamar <em>JASA</em>, vol 83 (1988), pp 406-413 and  Maronna and Zamar <em>Technometrics</em>, vol 44 (2002), pp. 307-317.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; tauloc(x)       #the named argument `cval` is 4.5 by default.
1.2696652567510853
julia&gt; tauvar(x)
1.53008203090696"><pre class="notranslate"><code>julia&gt; tauloc(x)       #the named argument `cval` is 4.5 by default.
1.2696652567510853
julia&gt; tauvar(x)
1.53008203090696
</code></pre></div>
<h4 dir="auto"><a id="user-content-outbox-outlier-detection" class="anchor" aria-hidden="true" href="#outbox-outlier-detection"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>outbox</code>: outlier detection</h4>
<p dir="auto">Use a modified boxplot rule based on the ideal fourths; when the named argument <code>mbox</code> is set to <code>true</code>, a modification of the boxplot rule suggested by Carling (2000) is used.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; outbox(x)
Outlier detection method using
the ideal-fourths based boxplot rule

Outlier ID:         17
Outlier value:      8.62411
Number of outliers: 1
Non-outlier ID:     1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20"><pre class="notranslate"><code>julia&gt; outbox(x)
Outlier detection method using
the ideal-fourths based boxplot rule

Outlier ID:         17
Outlier value:      8.62411
Number of outliers: 1
Non-outlier ID:     1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20
</code></pre></div>
<h4 dir="auto"><a id="user-content-msmedse-standard-error-of-the-median" class="anchor" aria-hidden="true" href="#msmedse-standard-error-of-the-median"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>msmedse</code>: Standard error of the median</h4>
<p dir="auto">Return the standard error of the median, computed through the method recommended
by McKean and Schrader (1984).</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; msmedse(x)
0.4708261134886094"><pre class="notranslate"><code>julia&gt; msmedse(x)
0.4708261134886094
</code></pre></div>
<h4 dir="auto"><a id="user-content-binomci-acbinomci-binomial-confidence-interval" class="anchor" aria-hidden="true" href="#binomci-acbinomci-binomial-confidence-interval"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>binomci()</code>, <code>acbinomci()</code>: Binomial confidence interval</h4>
<p dir="auto">Compute the (1-α) confidence interval for p, the binomial probability of success, given
<code>s</code> successes in <code>n</code> trials. Instead of <code>s</code> and <code>n</code>, can use a vector <code>x</code> whose values are all
0 and 1, recording failure/success one trial at a time. Returns an object.</p>
<p dir="auto"><code>binomci</code> uses Pratt's method;
<code>acbinomci</code> uses a generalization of the Agresti-Coull method that was studied by Brown, Cai, &amp; DasGupta.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; binomci(2, 10)           # # of success and # of total trials are provided. By default alpha=.05
p_hat:               0.2000
confidence interval: 0.0274   0.5562
Sample size          10


julia&gt; trials=[1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0]
julia&gt; binomci(trials, alpha=0.01)    #trial results are provided in array form consisting of 1's and 0's.
 p_hat:               0.5000
 confidence interval: 0.1768   0.8495
 Sample size          12

julia&gt; acbinomci(2, 10)           # # of success and # of total trials are provided. By default alpha=.05
p_hat:               0.2000
confidence interval: 0.0459   0.5206
Sample size          10"><pre class="notranslate"><code>julia&gt; binomci(2, 10)           # # of success and # of total trials are provided. By default alpha=.05
p_hat:               0.2000
confidence interval: 0.0274   0.5562
Sample size          10


julia&gt; trials=[1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0]
julia&gt; binomci(trials, alpha=0.01)    #trial results are provided in array form consisting of 1's and 0's.
 p_hat:               0.5000
 confidence interval: 0.1768   0.8495
 Sample size          12

julia&gt; acbinomci(2, 10)           # # of success and # of total trials are provided. By default alpha=.05
p_hat:               0.2000
confidence interval: 0.0459   0.5206
Sample size          10
</code></pre></div>
<h4 dir="auto"><a id="user-content-sint" class="anchor" aria-hidden="true" href="#sint"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>sint()</code></h4>
<p dir="auto">Compute the confidence interval for the median. Optionally, uses the
Hettmansperger-Sheather interpolation method to also estimate a p-value.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; sint(x)
Confidence interval for the median

 Confidence interval:  0.547483       2.375232

julia&gt; sint(x, 0.6)
Confidence interval for the median with p-val

 Confidence interval:  0.547483       2.375232
 p value:              0.071861"><pre class="notranslate"><code>julia&gt; sint(x)
Confidence interval for the median

 Confidence interval:  0.547483       2.375232

julia&gt; sint(x, 0.6)
Confidence interval for the median with p-val

 Confidence interval:  0.547483       2.375232
 p value:              0.071861
</code></pre></div>
<h4 dir="auto"><a id="user-content-hpsi" class="anchor" aria-hidden="true" href="#hpsi"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>hpsi</code></h4>
<p dir="auto">Compute Huber's ψ. The default bending constant is 1.28.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; hpsi(x)
20-element Array{Float64,1}:
1.28
0.787659
0.317322
0.972165
0.400421
..."><pre class="notranslate"><code>julia&gt; hpsi(x)
20-element Array{Float64,1}:
1.28
0.787659
0.317322
0.972165
0.400421
...
</code></pre></div>
<h4 dir="auto"><a id="user-content-onestep" class="anchor" aria-hidden="true" href="#onestep"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>onestep</code></h4>
<p dir="auto">Compute one-step M-estimator of location using Huber's ψ. The default bending constant is 1.28.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; onestep(x)
1.3058109021286803"><pre class="notranslate"><code>julia&gt; onestep(x)
1.3058109021286803
</code></pre></div>
<h4 dir="auto"><a id="user-content-bootstrapci-bootstrapse" class="anchor" aria-hidden="true" href="#bootstrapci-bootstrapse"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>bootstrapci</code>, <code>bootstrapse</code></h4>
<p dir="auto">Compute a bootstrap, (1-α) confidence interval (<code>bootstrapci</code>) or a standard error (<code>bootstrapse</code>) for the measure of location corresponding to the argument <code>est</code>. By default, the median is used. Default α=0.05.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; ci = bootstrapci(x, est=onestep, nullvalue=0.6)
 Estimate:             1.305811
 Confidence interval:  0.687723       2.259071
 p value:              0.026000


julia&gt; se = bootstrapse(x, est=onestep)
0.41956761772722817"><pre class="notranslate"><code>julia&gt; ci = bootstrapci(x, est=onestep, nullvalue=0.6)
 Estimate:             1.305811
 Confidence interval:  0.687723       2.259071
 p value:              0.026000


julia&gt; se = bootstrapse(x, est=onestep)
0.41956761772722817
</code></pre></div>
<h4 dir="auto"><a id="user-content-mom-and-mom" class="anchor" aria-hidden="true" href="#mom-and-mom"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>mom</code> and <code>mom!</code></h4>
<p dir="auto">Returns a modified one-step M-estimator of location (MOM), which is the unweighted
mean of all values not more than (bend times the <code>mad(x)</code>) away from the data
median.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; mom(x)
1.2596462322222222"><pre class="notranslate"><code>julia&gt; mom(x)
1.2596462322222222
</code></pre></div>
<h4 dir="auto"><a id="user-content-momci" class="anchor" aria-hidden="true" href="#momci"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>momci</code></h4>
<p dir="auto">Compute the bootstrap (1-α) confidence interval for the MOM-estimator of location
based on Huber's ψ.  Default α=0.05.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; momci(x, seed=2, nboot=2000, nullvalue=0.6)
Estimate:             1.259646
Confidence interval:  0.504223       2.120979
p value:              0.131000"><pre class="notranslate"><code>julia&gt; momci(x, seed=2, nboot=2000, nullvalue=0.6)
Estimate:             1.259646
Confidence interval:  0.504223       2.120979
p value:              0.131000
</code></pre></div>
<h4 dir="auto"><a id="user-content-contam_randn" class="anchor" aria-hidden="true" href="#contam_randn"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>contam_randn</code></h4>
<p dir="auto">Create contaminated normal distributions. Most values will by from a N(0,1) zero-mean
unit-variance normal distribution. A fraction <code>epsilon</code> of all values will have <code>k</code>
times the standard devation of the others. Default: <code>epsilon=0.1</code> and <code>k=10</code>.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; srand(1);
julia&gt; std(contam_randn(2000))
3.516722458797104"><pre class="notranslate"><code>julia&gt; srand(1);
julia&gt; std(contam_randn(2000))
3.516722458797104
</code></pre></div>
<h4 dir="auto"><a id="user-content-trimpb" class="anchor" aria-hidden="true" href="#trimpb"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>trimpb</code></h4>
<p dir="auto">Compute a (1-α) confidence interval for a trimmed mean by bootstrap methods.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; trimpb(x, nullvalue=0.75)
 Estimate:             1.292180
 Confidence interval:  0.690539       2.196381
 p value:              0.086000"><pre class="notranslate"><code>julia&gt; trimpb(x, nullvalue=0.75)
 Estimate:             1.292180
 Confidence interval:  0.690539       2.196381
 p value:              0.086000
</code></pre></div>
<h4 dir="auto"><a id="user-content-pcorb" class="anchor" aria-hidden="true" href="#pcorb"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>pcorb</code></h4>
<p dir="auto">Compute a .95 confidence interval for Pearson's correlation coefficient. This function uses an adjusted percentile bootstrap method that gives good results when the error term is heteroscedastic.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; pcorb(x, x.^5)
 Estimate:             0.802639
 Confidence interval:  0.683700       0.963478"><pre class="notranslate"><code>julia&gt; pcorb(x, x.^5)
 Estimate:             0.802639
 Confidence interval:  0.683700       0.963478
</code></pre></div>
<h4 dir="auto"><a id="user-content-yuend" class="anchor" aria-hidden="true" href="#yuend"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>yuend</code></h4>
<p dir="auto">Compare the trimmed means of two dependent random variables using the data in x and y. The default amount of trimming is 20%.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; srand(3)
julia&gt; y2 = randn(20)+3;
julia&gt; yuend(x, y2)

Comparing the trimmed means of two dependent variables.

Sample size:          20
Degrees of freedom:   11
Estimate:            -1.547776
Standard error:       0.460304
Statistic:           -3.362507
Confidence interval: -2.560898      -0.534653
p value:              0.006336"><pre class="notranslate"><code>julia&gt; srand(3)
julia&gt; y2 = randn(20)+3;
julia&gt; yuend(x, y2)

Comparing the trimmed means of two dependent variables.

Sample size:          20
Degrees of freedom:   11
Estimate:            -1.547776
Standard error:       0.460304
Statistic:           -3.362507
Confidence interval: -2.560898      -0.534653
p value:              0.006336
</code></pre></div>
<h3 dir="auto"><a id="user-content-unmaintained-functions" class="anchor" aria-hidden="true" href="#unmaintained-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Unmaintained functions</h3>
<p dir="auto">See <code>UNMAINTAINED.md</code> for information about functions that the maintainers have not yet
understood but also not yet deleted entirely.</p>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ul dir="auto">
<li>
<p dir="auto">Percentage bend and related estimators come from L.H. Shoemaker and T.P. Hettmansperger <a href="https://doi.org/10.1093/biomet/69.1.47" rel="nofollow">"Robust estimates and tests for the one- and two-sample scale models"</a> in <em>Biometrika</em> Vol 69 (1982) pp. 47-53.</p>
</li>
<li>
<p dir="auto">Tau measures of location and scale are from V.J. Yohai and R.H. Zamar <a href="http://doi/10.1080/01621459.1988.10478611" rel="nofollow">"High Breakdown-Point Estimates of Regression by Means of the Minimization of an Efficient Scale"</a> in <em>J. American Statistical Assoc.</em> vol 83 (1988) pp. 406-413.</p>
</li>
<li>
<p dir="auto">The <code>outbox(..., mbox=true)</code> modification was suggested in K. Carling, <a href="http://dx.doi.org/10.1016/S0167-9473(99)00057-2" rel="nofollow">"Resistant outlier rules and the non-Gaussian case"</a> in <em>Computational Statistics and Data Analysis</em> vol 33 (2000), pp. 249-258. doi:10.1016/S0167-9473(99)00057-2</p>
</li>
<li>
<p dir="auto">The estimate of the standard error of the median, <code>msmedse(x)</code>, is computed by the method of J.W. McKean and
R.M. Schrader, <a href="http://dx.doi.org/10.1080/03610918408812413" rel="nofollow">"A comparison of methods for studentizing the sample median"</a> in <em>Communications in Statistics: Simulation and Computation</em> vol 13 (1984) pp. 751-773. doi:10.1080/03610918408812413</p>
</li>
<li>
<p dir="auto">For Pratt's method of computing binomial confidence intervals, see J.W. Pratt (1968) <a href="http://dx.doi.org/10.1080/01621459.1968.10480939" rel="nofollow">"A normal approximation for binomial, F, Beta, and other common, related tail probabilities, II"</a> <em>J. American Statistical Assoc.</em>, vol 63, pp. 1457- 1483, doi:10.1080/01621459.1968.10480939.  Also R.G. Newcombe <a href="http://dx.doi.org/10.1002/sim.4780131209" rel="nofollow">"Confidence Intervals for a binomial proportion"</a> <em>Stat. in Medicine</em> vol 13 (1994) pp 1283-1285, doi:10.1002/sim.4780131209.</p>
</li>
<li>
<p dir="auto">For the Agresti-Coull method of computing binomial confidence intervals, see L.D. Brown, T.T. Cai, &amp; A. DasGupta <a href="http://www.jstor.org/stable/2700007" rel="nofollow">"Confidence Intervals for a Binomial Proportion and Asymptotic Expansions"</a> in <em>Annals of Statistics</em>, vol 30 (2002), pp. 160-201.</p>
</li>
<li>
<p dir="auto">Shortest Half-range comes from P.J. Rousseeuw and A.M. Leroy, <a href="http://onlinelibrary.wiley.com/doi/10.1111/j.1467-9574.1988.tb01224.x/abstract" rel="nofollow">"A Robust Scale Estimator Based on the Shortest Half"</a> in <em>Statistica Neerlandica</em> Vol 42 (1988), pp. 103-116. doi:10.1111/j.1467-9574.1988.tb01224.x . See also R.D. Martin and R. H. Zamar, <a href="http://projecteuclid.org/euclid.aos/1176349161" rel="nofollow">"Bias-Robust Estimation of Scale"</a>  in <em>Annals of Statistics</em> Vol 21 (1993) pp. 991-1017.  doi:10.1214/aoe/1176349161</p>
</li>
<li>
<p dir="auto">Scale-Q and Scale-S statistics are described in P.J. Rousseeuw and C. Croux <a href="http://www.jstor.org/stable/2291267" rel="nofollow">"Alternatives to the Median Absolute Deviation"</a> in <em>J. American Statistical Assoc.</em> Vo 88 (1993) pp 1273-1283. The time-efficient algorithms for computing them appear in C. Croux and P.J. Rousseeuw, <a href="http://link.springer.com/chapter/10.1007/978-3-662-26811-7_58" rel="nofollow">"Time-Efficient Algorithms for Two Highly Robust Estimators of Scale"</a> in <em>Computational Statistics, Vol I</em> (1992), Y. Dodge and J. Whittaker editors, Heidelberg, Physica-Verlag, pp 411-428. If link fails, see ftp://ftp.win.ua.ac.be/pub/preprints/92/Timeff92.pdf</p>
</li>
</ul>
</article></div>