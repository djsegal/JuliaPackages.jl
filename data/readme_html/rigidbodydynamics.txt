<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-rigidbodydynamicsjl" class="anchor" aria-hidden="true" href="#rigidbodydynamicsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RigidBodyDynamics.jl</h1>
<p dir="auto"><a href="https://github.com/JuliaRobotics/RigidBodyDynamics.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaRobotics/RigidBodyDynamics.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/github/JuliaRobotics/RigidBodyDynamics.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/1d6d20c8d2112938ee78d27c765ced397d5dfb4fbd40a9558bc1648185b5fb58/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c6961526f626f746963732f5269676964426f647944796e616d6963732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/JuliaRobotics/RigidBodyDynamics.jl/coverage.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://JuliaRobotics.github.io/RigidBodyDynamics.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a>
<a href="https://JuliaRobotics.github.io/RigidBodyDynamics.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">RigidBodyDynamics.jl is a rigid body dynamics library in pure Julia. It aims to be <strong>user friendly</strong> and <a href="https://github.com/JuliaRobotics/RigidBodyDynamics.jl/blob/master/docs/src/benchmarks.md"><strong>performant</strong></a>, but also <strong>generic</strong> in the sense that the algorithms can be called with inputs of any (suitable) scalar types. This means that if fast numeric dynamics evaluations are required, a user can supply <code>Float64</code> or <code>Float32</code> inputs. However, if symbolic quantities are desired for analysis purposes, they can be obtained by calling the algorithms with e.g. <a href="https://github.com/JuliaPy/SymPy.jl"><code>SymPy.Sym</code></a> inputs. If gradients are required, e.g. the <a href="https://github.com/JuliaDiff/ForwardDiff.jl"><code>ForwardDiff.Dual</code></a> type, which implements forward-mode <a href="https://en.wikipedia.org/wiki/Automatic_differentiation" rel="nofollow">automatic differentiation</a>, can be used.</p>
<p dir="auto">See the <a href="https://JuliaRobotics.github.io/RigidBodyDynamics.jl/stable" rel="nofollow">latest stable documentation</a> for a list of features, installation instructions, and a quick-start guide. Installation should only take a couple of minutes, including installing Julia itself. The documentation includes various usage examples, starting with a <a href="http://www.juliarobotics.org/RigidBodyDynamics.jl/dev/generated/1.%20Quickstart%20-%20double%20pendulum/1.%20Quickstart%20-%20double%20pendulum/" rel="nofollow">quickstart guide</a>. These examples are also runnable locally as Jupyter notebooks; see <a href="https://github.com/JuliaRobotics/RigidBodyDynamics.jl/blob/master/examples/README.md">the readme in the examples directory</a> for instructions.</p>
<h2 dir="auto"><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related packages</h2>
<p dir="auto">RigidBodyDynamics.jl is part of the <a href="http://www.juliarobotics.org/" rel="nofollow">JuliaRobotics GitHub organization</a>.</p>
<p dir="auto">Packages built on top of RigidBodyDynamics.jl include:</p>
<ul dir="auto">
<li><a href="https://github.com/JuliaRobotics/RigidBodySim.jl">RigidBodySim.jl</a> - simulator built on top of RigidBodyDynamics.jl.</li>
<li><a href="https://github.com/JuliaRobotics/MeshCatMechanisms.jl">MeshCatMechanisms.jl</a> - 3D visualization of articulated mechanisms using MeshCat.jl (built on top of <a href="https://threejs.org/" rel="nofollow">three.js</a>) and RigidBodyDynamics.jl.</li>
<li><a href="https://github.com/rdeits/RigidBodyTreeInspector.jl">RigidBodyTreeInspector.jl</a> - 3D visualization of RigidBodyDynamics.jl <code>Mechanism</code>s using <a href="https://github.com/RobotLocomotion/director">Director</a>.</li>
<li><a href="https://github.com/JuliaRobotics/MotionCaptureJointCalibration.jl">MotionCaptureJointCalibration.jl</a> - kinematic calibration for robots using motion capture data, built on top of RigidBodyDynamics.jl</li>
<li><a href="https://github.com/tkoolen/QPControl.jl">QPControl.jl</a> - quadratic-programming-based robot controllers implemented using RigidBodyDynamics.jl.</li>
<li><a href="https://github.com/rdeits/StrandbeestRobot.jl">StrandbeestRobot.jl</a> - simulations of a 12-legged parallel walking mechanism inspired by Theo Jansens's <a href="https://www.strandbeest.com/" rel="nofollow">Strandbeest</a> using RigidBodyDynamics.jl.</li>
</ul>
<h2 dir="auto"><a id="user-content-talks--publications" class="anchor" aria-hidden="true" href="#talks--publications"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Talks / publications</h2>
<ul dir="auto">
<li>May 20, 2019: paper at ICRA 2019: <a href="https://www.researchgate.net/publication/331983442_Julia_for_robotics_simulation_and_real-time_control_in_a_high-level_programming_language" rel="nofollow">Julia for robotics: simulation and real-time control in a
high-level programming language</a>.</li>
<li>August 10, 2018: Robin Deits gave <a href="https://www.youtube.com/watch?v=dmWQtI3DFFo" rel="nofollow">a talk</a> at JuliaCon 2018 demonstrating RigidBodyDynamics.jl and related packages.</li>
<li>August 23, 2017: a video of a JuliaCon 2017 talk given by Robin Deits and Twan Koolen on using Julia for robotics <a href="https://www.youtube.com/watch?v=gPYc77M90Qg" rel="nofollow">has been uploaded</a>. It includes a brief demo of RigidBodyDynamics.jl and RigidBodyTreeInspector.jl. Note that RigidBodyDynamics.jl performance has significantly improved since this talk. The margins of the slides have unfortunately been cut off somewhat in the video.</li>
</ul>
</article></div>