<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-glycolysis" class="anchor" aria-hidden="true" href="#glycolysis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Glycolysis</h1>
<p dir="auto">Package for modeling mammalian glycolysis activity.<br>
See our <a href="https://www.biorxiv.org/content/10.1101/2022.12.28.522046" rel="nofollow">bioRxiv preprint</a> for examples of how to use this package to study glycolysis regulation.<br>
Code to reproduce all figures in the preprint is in <em>examples/biorxiv figures</em> folder.</p>
<p dir="auto">You can use it to simulate glycolysis using the following code:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Glycolysis, DifferentialEquations, CairoMakie

# Set ATPase rate to be equal to 10% of glycolysis Vmax which is set by HK1 Vmax
glycolysis_params.ATPase_Vmax = 0.1 * 2 * glycolysis_params.HK1_Vmax * glycolysis_params.HK1_Conc
prob = ODEProblem(glycolysis_ODEs, glycolysis_init_conc, (0, 100), glycolysis_params)

#Simulate glycolysis activity
sol = solve(prob, Rodas4(), abstol = 1e-12, reltol = 1e-5)

#List of all metabolites in the model can be found by running
propertynames(glycolysis_init_conc)

#Plot all [Metabolite] over time
fig = Figure()
ax = Axis(fig[1, 1], yscale = log10, xlabel = &quot;Time, min&quot;, ylabel = &quot;[Metabolite], M&quot;)
#Substitute :ATP, :ADP, :Phosphate for any metabolite(s) from propertynames(glycolysis_init_conc)
for metabolite in [:ATP, :ADP, :Phosphate]
    lines!(ax, sol.t, sol[metabolite, :], label = String(metabolite))
end
Legend(fig[1, 2], ax)
fig"><pre><span class="pl-k">using</span> Glycolysis, DifferentialEquations, CairoMakie

<span class="pl-c"><span class="pl-c">#</span> Set ATPase rate to be equal to 10% of glycolysis Vmax which is set by HK1 Vmax</span>
glycolysis_params<span class="pl-k">.</span>ATPase_Vmax <span class="pl-k">=</span> <span class="pl-c1">0.1</span> <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> glycolysis_params<span class="pl-k">.</span>HK1_Vmax <span class="pl-k">*</span> glycolysis_params<span class="pl-k">.</span>HK1_Conc
prob <span class="pl-k">=</span> <span class="pl-c1">ODEProblem</span>(glycolysis_ODEs, glycolysis_init_conc, (<span class="pl-c1">0</span>, <span class="pl-c1">100</span>), glycolysis_params)

<span class="pl-c"><span class="pl-c">#</span>Simulate glycolysis activity</span>
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob, <span class="pl-c1">Rodas4</span>(), abstol <span class="pl-k">=</span> <span class="pl-c1">1e-12</span>, reltol <span class="pl-k">=</span> <span class="pl-c1">1e-5</span>)

<span class="pl-c"><span class="pl-c">#</span>List of all metabolites in the model can be found by running</span>
<span class="pl-c1">propertynames</span>(glycolysis_init_conc)

<span class="pl-c"><span class="pl-c">#</span>Plot all [Metabolite] over time</span>
fig <span class="pl-k">=</span> <span class="pl-c1">Figure</span>()
ax <span class="pl-k">=</span> <span class="pl-c1">Axis</span>(fig[<span class="pl-c1">1</span>, <span class="pl-c1">1</span>], yscale <span class="pl-k">=</span> log10, xlabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Time, min<span class="pl-pds">"</span></span>, ylabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>[Metabolite], M<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span>Substitute :ATP, :ADP, :Phosphate for any metabolite(s) from propertynames(glycolysis_init_conc)</span>
<span class="pl-k">for</span> metabolite <span class="pl-k">in</span> [<span class="pl-c1">:ATP</span>, <span class="pl-c1">:ADP</span>, <span class="pl-c1">:Phosphate</span>]
    <span class="pl-c1">lines!</span>(ax, sol<span class="pl-k">.</span>t, sol[metabolite, :], label <span class="pl-k">=</span> <span class="pl-c1">String</span>(metabolite))
<span class="pl-k">end</span>
<span class="pl-c1">Legend</span>(fig[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>], ax)
fig</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/75404066/205350460-f73de619-14c3-42a4-95d7-7fa0d6e077ee.png"><img src="https://user-images.githubusercontent.com/75404066/205350460-f73de619-14c3-42a4-95d7-7fa0d6e077ee.png" width="500" style="max-width: 100%;"></a></p>
</article></div>