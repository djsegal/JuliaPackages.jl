<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-structviewsjl" class="anchor" aria-hidden="true" href="#structviewsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>StructViews.jl</h1>
<p><a href="https://travis-ci.org/Vitaliy-Yakovchuk/StructViews.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1204986d0f007e81e315ac44c7a23c525789d177/68747470733a2f2f7472617669732d63692e6f72672f566974616c69792d59616b6f766368756b2f53747275637456696577732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Vitaliy-Yakovchuk/StructViews.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/Vitaliy-Yakovchuk/structviews-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e6b6e2d16e730140acda3a638f83724acf3164c3/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3435346a756d636f61736e363235396d3f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/454jumcoasn6259m?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/Vitaliy-Yakovchuk/StructViews.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/45b99af6e644b287739ab2762d5a393572e5de32/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f566974616c69792d59616b6f766368756b2f53747275637456696577732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/Vitaliy-Yakovchuk/StructViews.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/Vitaliy-Yakovchuk/StructViews.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/404533ea72fc7549fc2e1db1592839dbfe9c03cc/68747470733a2f2f636f6465636f762e696f2f67682f566974616c69792d59616b6f766368756b2f53747275637456696577732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/Vitaliy-Yakovchuk/StructViews.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>This package introduces the types <code>StructView</code> and <code>FieldView</code> which are <code>AbstractArray</code>. <code>StructView</code> lets to view array of structs as struct of field arrays. All data are stored in the provided parent array. Parent array may be updated transparently via <code>StructView</code></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>StructViews<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-example-usage-to-view-point-coordinates" class="anchor" aria-hidden="true" href="#example-usage-to-view-point-coordinates"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example usage to view point coordinates</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> StructViews

julia<span class="pl-k">&gt;</span> <span class="pl-k">struct</span> Point
       x
       y
<span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> points <span class="pl-k">=</span> [<span class="pl-c1">Point</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">100</span>) <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>]
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{Point,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Point</span>(<span class="pl-c1">1</span>, <span class="pl-c1">101</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">2</span>, <span class="pl-c1">102</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">3</span>, <span class="pl-c1">103</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">4</span>, <span class="pl-c1">104</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">5</span>, <span class="pl-c1">105</span>)

julia<span class="pl-k">&gt;</span> view <span class="pl-k">=</span> <span class="pl-c1">StructView</span>(points)
<span class="pl-c1">5</span><span class="pl-k">-</span>element StructView{Point,<span class="pl-c1">1</span>,<span class="pl-c1">IndexLinear</span>()}<span class="pl-k">:</span>
 <span class="pl-c1">Point</span>(<span class="pl-c1">1</span>, <span class="pl-c1">101</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">2</span>, <span class="pl-c1">102</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">3</span>, <span class="pl-c1">103</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">4</span>, <span class="pl-c1">104</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">5</span>, <span class="pl-c1">105</span>)

julia<span class="pl-k">&gt;</span> view<span class="pl-k">.</span>x
<span class="pl-c1">5</span><span class="pl-k">-</span>element FieldView{Any,<span class="pl-c1">:x</span>,<span class="pl-c1">1</span>,<span class="pl-c1">IndexLinear</span>(),<span class="pl-c1">:immutable</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>
 <span class="pl-c1">5</span>

julia<span class="pl-k">&gt;</span> view<span class="pl-k">.</span>y
<span class="pl-c1">5</span><span class="pl-k">-</span>element FieldView{Any,<span class="pl-c1">:y</span>,<span class="pl-c1">1</span>,<span class="pl-c1">IndexLinear</span>(),<span class="pl-c1">:immutable</span>}<span class="pl-k">:</span>
 <span class="pl-c1">101</span>
 <span class="pl-c1">102</span>
 <span class="pl-c1">103</span>
 <span class="pl-c1">104</span>
 <span class="pl-c1">105</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">push!</span>(view, <span class="pl-c1">Point</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>))
<span class="pl-c1">6</span><span class="pl-k">-</span>element StructView{Point,<span class="pl-c1">1</span>,<span class="pl-c1">IndexLinear</span>()}<span class="pl-k">:</span>
 <span class="pl-c1">Point</span>(<span class="pl-c1">1</span>, <span class="pl-c1">101</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">2</span>, <span class="pl-c1">102</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">3</span>, <span class="pl-c1">103</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">4</span>, <span class="pl-c1">104</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">5</span>, <span class="pl-c1">105</span>)
 <span class="pl-c1">Point</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> points
<span class="pl-c1">6</span><span class="pl-k">-</span>element Array{Point,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Point</span>(<span class="pl-c1">1</span>, <span class="pl-c1">101</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">2</span>, <span class="pl-c1">102</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">3</span>, <span class="pl-c1">103</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">4</span>, <span class="pl-c1">104</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">5</span>, <span class="pl-c1">105</span>)
 <span class="pl-c1">Point</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">pop!</span>(view)
<span class="pl-c1">Point</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>)</pre></div>
<h2><a id="user-content-example-usage-to-view-point-coordinates-where-coordinates-are-complex-numbers" class="anchor" aria-hidden="true" href="#example-usage-to-view-point-coordinates-where-coordinates-are-complex-numbers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example usage to view point coordinates, where coordinates are complex numbers</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">struct</span> ComplexPoint
       x<span class="pl-k">::</span><span class="pl-c1">Complex{Int}</span>
       y<span class="pl-k">::</span><span class="pl-c1">Complex{Int}</span>
<span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> points <span class="pl-k">=</span> [<span class="pl-c1">ComplexPoint</span>(i <span class="pl-k">+</span> <span class="pl-c1">2im</span>, i <span class="pl-k">+</span> <span class="pl-c1">100im</span>) <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>]
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{ComplexPoint,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">4</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">4</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">5</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">5</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)

julia<span class="pl-k">&gt;</span> view <span class="pl-k">=</span> <span class="pl-c1">StructView</span>(points)
<span class="pl-c1">5</span><span class="pl-k">-</span>element StructView{ComplexPoint,<span class="pl-c1">1</span>,<span class="pl-c1">IndexLinear</span>()}<span class="pl-k">:</span>
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">4</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">4</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">5</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">5</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)

julia<span class="pl-k">&gt;</span> view<span class="pl-k">.</span>x
<span class="pl-c1">5</span><span class="pl-k">-</span>element StructView{Complex{Int64},<span class="pl-c1">1</span>,<span class="pl-c1">IndexLinear</span>()}<span class="pl-k">:</span>
 <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>
 <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>
 <span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>
 <span class="pl-c1">4</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>
 <span class="pl-c1">5</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>

julia<span class="pl-k">&gt;</span> view<span class="pl-k">.</span>y<span class="pl-k">.</span>re
<span class="pl-c1">5</span><span class="pl-k">-</span>element FieldView{Int64,<span class="pl-c1">:re</span>,<span class="pl-c1">1</span>,<span class="pl-c1">IndexLinear</span>(),<span class="pl-c1">:immutable</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>
 <span class="pl-c1">5</span></pre></div>
<h2><a id="user-content-example-usage-to-update-fields" class="anchor" aria-hidden="true" href="#example-usage-to-update-fields"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example usage to update fields</h2>
<p><code>StructView</code> lets you to update data in the parent array. If the data in the parent array is mutable the appropriate field will be updated. If the data type in the parant array is immutable the new objects with updated field will be set to the parent array.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> points <span class="pl-k">=</span> [<span class="pl-c1">ComplexPoint</span>(i <span class="pl-k">+</span> <span class="pl-c1">2im</span>, i <span class="pl-k">+</span> <span class="pl-c1">100im</span>) <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>]
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{ComplexPoint,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">4</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">4</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">5</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">5</span> <span class="pl-k">+</span> <span class="pl-c1">100im</span>)

julia<span class="pl-k">&gt;</span> view<span class="pl-k">.</span>y<span class="pl-k">.</span>im <span class="pl-k">.+</span><span class="pl-k">=</span> <span class="pl-c1">10000</span>
<span class="pl-c1">5</span><span class="pl-k">-</span>element FieldView{Int64,<span class="pl-c1">:im</span>,<span class="pl-c1">1</span>,<span class="pl-c1">IndexLinear</span>(),<span class="pl-c1">:immutable</span>}<span class="pl-k">:</span>
 <span class="pl-c1">10100</span>
 <span class="pl-c1">10100</span>
 <span class="pl-c1">10100</span>
 <span class="pl-c1">10100</span>
 <span class="pl-c1">10100</span>

julia<span class="pl-k">&gt;</span> points
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{ComplexPoint,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">10100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">10100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">10100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">4</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">4</span> <span class="pl-k">+</span> <span class="pl-c1">10100im</span>)
 <span class="pl-c1">ComplexPoint</span>(<span class="pl-c1">5</span> <span class="pl-k">+</span> <span class="pl-c1">2im</span>, <span class="pl-c1">5</span> <span class="pl-k">+</span> <span class="pl-c1">10100im</span>)</pre></div>
<h2><a id="user-content-example-usage-to-view-field" class="anchor" aria-hidden="true" href="#example-usage-to-view-field"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example usage to view field</h2>
<p><code>FieldView</code> is a simple field viewer of the array of struct</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">struct</span> Point
       x
       y
<span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> points <span class="pl-k">=</span> [<span class="pl-c1">Point</span>(i, i <span class="pl-k">+</span> <span class="pl-c1">100</span>) <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>]
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{Point,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Point</span>(<span class="pl-c1">1</span>, <span class="pl-c1">101</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">2</span>, <span class="pl-c1">102</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">3</span>, <span class="pl-c1">103</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">4</span>, <span class="pl-c1">104</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">5</span>, <span class="pl-c1">105</span>)

julia<span class="pl-k">&gt;</span> view <span class="pl-k">=</span> <span class="pl-c1">FieldView</span><span class="pl-c1">{:x}</span>(points)
<span class="pl-c1">5</span><span class="pl-k">-</span>element FieldView{Any,<span class="pl-c1">:x</span>,<span class="pl-c1">1</span>,<span class="pl-c1">IndexLinear</span>(),<span class="pl-c1">:immutable</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>
 <span class="pl-c1">5</span></pre></div>
<h2><a id="user-content-example-usage-to-update-field" class="anchor" aria-hidden="true" href="#example-usage-to-update-field"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example usage to update field</h2>
<p>Update logic is the same (mutate mutable objects or create a copy with updated field in the parant array)</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> view[<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">300</span>
<span class="pl-c1">300</span>

julia<span class="pl-k">&gt;</span> points
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{Point,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Point</span>(<span class="pl-c1">1</span>, <span class="pl-c1">101</span>)  
 <span class="pl-c1">Point</span>(<span class="pl-c1">300</span>, <span class="pl-c1">102</span>)
 <span class="pl-c1">Point</span>(<span class="pl-c1">3</span>, <span class="pl-c1">103</span>)  
 <span class="pl-c1">Point</span>(<span class="pl-c1">4</span>, <span class="pl-c1">104</span>)  
 <span class="pl-c1">Point</span>(<span class="pl-c1">5</span>, <span class="pl-c1">105</span>)  </pre></div>
</article></div>