<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-readvtkjl" class="anchor" aria-hidden="true" href="#readvtkjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ReadVTK.jl</h1>
<p dir="auto"><a href="https://juliavtk.github.io/ReadVTK.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Docs-stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://juliavtk.github.io/ReadVTK.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Docs-dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaVTK/ReadVTK.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaVTK/ReadVTK.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/JuliaVTK/ReadVTK.jl?branch=main" rel="nofollow"><img src="https://camo.githubusercontent.com/a24206ad6efecdc82caa92b44f5ccd33461b285956a58efb48d2925129fb6782/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c696156544b2f5265616456544b2e6a6c2f62616467652e7376673f6272616e63683d6d61696e" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/JuliaVTK/ReadVTK.jl/badge.svg?branch=main" style="max-width: 100%;"></a>
<a href="https://opensource.org/licenses/MIT" rel="nofollow"><img src="https://camo.githubusercontent.com/2da4b47047416995ad40532496f4b028e9aeca4a9ad036ed17bee5d2fb753b32/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d737563636573732e737667" alt="License: MIT" data-canonical-src="https://img.shields.io/badge/License-MIT-success.svg" style="max-width: 100%;"></a></p>

<p dir="auto">With <strong>ReadVTK.jl</strong> you can read in data from VTK XML files in Julia. It aims to complement
the excellent package <a href="https://github.com/JuliaVTK/WriteVTK.jl">WriteVTK.jl</a>.
ReadVTK is part of the <a href="https://github.com/JuliaVTK">JuliaVTK Framework</a>.</p>
<p dir="auto"><em>Note: ReadVTK was mainly motivated by wanting to write proper tests for
<a href="https://github.com/trixi-framework/Trixi2Vtk.jl">Trixi2Vtk.jl</a>.
A lot of useful features are still missing (see <a href="#what-does-not-work">below</a>),
and community contributions to improve this package are welcome!</em></p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">First, load the package with</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ReadVTK"><pre><span class="pl-k">using</span> ReadVTK</pre></div>
<p dir="auto">Open a VTK file by creating a <code>VTKFile</code> object and passing the filename to the
constructor:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="vtk = VTKFile(get_example_file(&quot;celldata_appended_binary_compressed.vtu&quot;))"><pre>vtk <span class="pl-k">=</span> <span class="pl-c1">VTKFile</span>(<span class="pl-c1">get_example_file</span>(<span class="pl-s"><span class="pl-pds">"</span>celldata_appended_binary_compressed.vtu<span class="pl-pds">"</span></span>))</pre></div>
<p dir="auto">To retrieve information about the cell data, use</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="cell_data = get_cell_data(vtk)"><pre>cell_data <span class="pl-k">=</span> <span class="pl-c1">get_cell_data</span>(vtk)</pre></div>
<p dir="auto">The return object of type <code>VTKCellData</code> allows access to the individual
<code>VTKDataArray</code>s using a dictionary-like syntax:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="element_ids = cell_data[&quot;element_ids&quot;]"><pre>element_ids <span class="pl-k">=</span> cell_data[<span class="pl-s"><span class="pl-pds">"</span>element_ids<span class="pl-pds">"</span></span>]</pre></div>
<p dir="auto">Finally, the actual data can be obtained by executing</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data = get_data(element_ids)"><pre>data <span class="pl-k">=</span> <span class="pl-c1">get_data</span>(element_ids)</pre></div>
<p dir="auto">Full example including REPL output:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using ReadVTK

julia&gt; vtk = VTKFile(get_example_file(&quot;celldata_appended_binary_compressed.vtu&quot;))
VTKFile(&quot;celldata_appended_binary_compressed.vtu&quot;, &lt;XMLDocument&gt;, &quot;UnstructuredGrid&quot;, &quot;1.0.0&quot;, &quot;LittleEndian&quot;, &quot;vtkZLibDataCompressor&quot;, &lt;appended_data&gt;, 4434, 3085)

julia&gt; cell_data = get_cell_data(vtk)
VTKData()

julia&gt; element_ids = cell_data[&quot;element_ids&quot;]
VTKDataArray(&quot;element_ids&quot;)

julia&gt; data = get_data(element_ids)
3085-element reinterpret(Int64, ::Vector{UInt8}):
    1
    2
    3
    ⋮
 3083
 3084
 3085"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ReadVTK

julia<span class="pl-k">&gt;</span> vtk <span class="pl-k">=</span> <span class="pl-c1">VTKFile</span>(<span class="pl-c1">get_example_file</span>(<span class="pl-s"><span class="pl-pds">"</span>celldata_appended_binary_compressed.vtu<span class="pl-pds">"</span></span>))
<span class="pl-c1">VTKFile</span>(<span class="pl-s"><span class="pl-pds">"</span>celldata_appended_binary_compressed.vtu<span class="pl-pds">"</span></span>, <span class="pl-k">&lt;</span>XMLDocument<span class="pl-k">&gt;</span>, <span class="pl-s"><span class="pl-pds">"</span>UnstructuredGrid<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>1.0.0<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>LittleEndian<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>vtkZLibDataCompressor<span class="pl-pds">"</span></span>, <span class="pl-k">&lt;</span>appended_data<span class="pl-k">&gt;</span>, <span class="pl-c1">4434</span>, <span class="pl-c1">3085</span>)

julia<span class="pl-k">&gt;</span> cell_data <span class="pl-k">=</span> <span class="pl-c1">get_cell_data</span>(vtk)
<span class="pl-c1">VTKData</span>()

julia<span class="pl-k">&gt;</span> element_ids <span class="pl-k">=</span> cell_data[<span class="pl-s"><span class="pl-pds">"</span>element_ids<span class="pl-pds">"</span></span>]
<span class="pl-c1">VTKDataArray</span>(<span class="pl-s"><span class="pl-pds">"</span>element_ids<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> data <span class="pl-k">=</span> <span class="pl-c1">get_data</span>(element_ids)
<span class="pl-c1">3085</span><span class="pl-k">-</span>element <span class="pl-c1">reinterpret</span>(Int64, <span class="pl-k">::</span><span class="pl-c1">Vector{UInt8}</span>)<span class="pl-k">:</span>
    <span class="pl-c1">1</span>
    <span class="pl-c1">2</span>
    <span class="pl-c1">3</span>
    ⋮
 <span class="pl-c1">3083</span>
 <span class="pl-c1">3084</span>
 <span class="pl-c1">3085</span></pre></div>
<p dir="auto">Further example VTK files can be found in the
<a href="https://github.com/JuliaVTK/ReadVTK_examples"><code>ReadVTK_examples</code> repository</a>.</p>
<h3 dir="auto"><a id="user-content-what-works" class="anchor" aria-hidden="true" href="#what-works"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>What works</h3>
<ul dir="auto">
<li>Reading in VTK XML files of type <code>UnstructuredGrid</code>, <code>StructuredGrid</code>, <code>RectilinearGrid</code>,<code>ImageData</code>, <code>PUnstructuredGrid</code>,<code>PStructuredGrid</code> <code>PRectilinearGrid</code>,<code>PImageData</code>, or <code>PolyData</code></li>
<li>Extracting cell or point data</li>
<li>Extracting point coordinates</li>
<li>Extracting information about cell types</li>
<li>Only for <code>ImageData</code>,<code>PImageData</code> files: get origin, spacing, and extent information</li>
<li>Only for <code>RectilinearGrid</code>,<code>PRectiLinearGrid</code> files: get 1D coordinate vectors</li>
<li>Only for <code>StructuredGrid</code>,<code>PStructuredGrid</code> files: get coordinate arrays</li>
<li>Reading <code>PolyData</code> files containing vortices, lines, and/or polygons</li>
<li>Reading <code>PVD</code> files</li>
<li>Reading ParaView VTK files that are <strong>in-line binary</strong> (experimental, only <code>UnstructuredGrid</code> type tested)</li>
</ul>
<h3 dir="auto"><a id="user-content-what-does-not-work" class="anchor" aria-hidden="true" href="#what-does-not-work"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>What does not work</h3>
<ul dir="auto">
<li>Reading VTK files not stored in the VTK XML format</li>
<li>Reading VTK files of other type than what is listed under <em>What works</em> above</li>
<li>Multiblock files</li>
<li>Different byte orders in file and host system</li>
<li>Probably reading from VTK files that were <em>not</em> created by <a href="https://github.com/JuliaVTK/WriteVTK.jl">WriteVTK.jl</a> will fail, specifically since
<ul dir="auto">
<li>compressed data is assumed to be stored as a single block</li>
<li>appended data is assumed to be stored as <code>raw</code></li>
<li><code>header_type</code> is hardcoded to <code>UInt64</code></li>
</ul>
</li>
<li>Extracting primitives from <code>PolyData</code> files other than vortices, lines, and/or polygons</li>
<li>Likely anything else that is not specifically mentioned under <em>What works</em></li>
</ul>
<h2 dir="auto"><a id="user-content-development" class="anchor" aria-hidden="true" href="#development"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Development</h2>
<p dir="auto">Helpful resources for working with (i.e., reading and writing) VTK XML files:</p>
<ul dir="auto">
<li>VTK file format documentation (incomplete!) as a <a href="http://vtk.org/VTK/img/file-formats.pdf" rel="nofollow">PDF</a></li>
<li>VTK XML formats <a href="https://vtk.org/Wiki/VTK_XML_Formats" rel="nofollow">wiki article</a></li>
<li><a href="https://mathema.tician.de/what-they-dont-tell-you-about-vtk-xml-binary-formats/" rel="nofollow">Blog post</a>
on encoding binary data</li>
<li>Mailing list <a href="https://public.kitware.com/pipermail/paraview/2005-April/001391.html" rel="nofollow">message</a>
on encoding binary data</li>
</ul>
<p dir="auto">We use <a href="https://github.com/domluna/JuliaFormatter.jl">JuliaFormatter.jl</a> to keep
a consistent code formatting. If you have installed JuliaFormatter.jl, just run</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JuliaFormatter; format(&quot;.&quot;)"><pre><span class="pl-k">using</span> JuliaFormatter; <span class="pl-c1">format</span>(<span class="pl-s"><span class="pl-pds">"</span>.<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">in the top-level directory of ReadVTK.jl to update the formatting.</p>
<h2 dir="auto"><a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Authors</h2>
<p dir="auto">ReadVTK is maintained by the
<a href="https://github.com/trixi-framework/Trixi.jl/blob/main/AUTHORS.md">Trixi authors</a>.
Its principal developers are
<a href="https://lakemper.eu" rel="nofollow">Michael Schlottke-Lakemper</a>
(RWTH Aachen University, Germany) and <a href="https://ranocha.de" rel="nofollow">Hendrik Ranocha</a>
(University of Hamburg, Germany).</p>
<p dir="auto">Further contributions to ReadVTK have been made by the following people:</p>
<ul dir="auto">
<li><a href="https://www.fing.edu.uy/~jorgepz/" rel="nofollow">Jorge Pérez Zerpa</a>
(Universidad de la República, Uruguay)</li>
<li><a href="https://www2.karlin.mff.cuni.cz/~kincl/" rel="nofollow">Ondřej Kincl</a>
(Charles University, Czech Republic)</li>
<li><a href="https://www.geosciences.uni-mainz.de/geophysics-and-geodynamics/team/univ-prof-dr-boris-kaus/" rel="nofollow">Boris Kaus</a>
(Johannes-Gutenberg University Mainz, Germany)</li>
<li><a href="https://volweb2.utk.edu/~mwhisena/" rel="nofollow">Matthew Whisenant</a>
(University of Tennessee, Knoxville)</li>
</ul>
<h2 dir="auto"><a id="user-content-license-and-contributing" class="anchor" aria-hidden="true" href="#license-and-contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License and contributing</h2>
<p dir="auto">ReadVTK is licensed under the MIT license (see <a href="LICENSE.md">LICENSE.md</a>).
Since ReadVTK is an open-source project, we are very happy to accept contributions
from the community. Please refer to <a href="CONTRIBUTING.md">CONTRIBUTING.md</a> for more details. To get in
touch with the developers, join us on Trixi's
<a href="https://join.slack.com/t/trixi-framework/shared_invite/zt-sgkc6ppw-6OXJqZAD5SPjBYqLd8MU~g" rel="nofollow">Slack workspace</a>
or
<a href="https://github.com/JuliaVTK/ReadVTK.jl/issues/new">create an issue</a>.</p>
<h2 dir="auto"><a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgments</h2>
<p dir="auto">This package would not exist without the nice work of
<a href="https://github.com/jipolanco">Juan Ignacio Polanco</a> and his cleanly written and well-documented package
<a href="https://github.com/JuliaVTK/WriteVTK.jl">WriteVTK.jl</a>.</p>
</article></div>