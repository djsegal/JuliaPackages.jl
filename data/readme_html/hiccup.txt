<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-hiccup" class="anchor" aria-hidden="true" href="#hiccup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hiccup</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;Hiccup&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Hiccup<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Hiccup.jl is a super-simple library designed to make making HTML easy in Julia. It's heavily inspired by Clojure's <a href="https://github.com/weavejester/hiccup">Hiccup</a> DSL.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Hiccup

julia&gt; Hiccup.div(&quot;#foo.bar&quot;, &quot;hi&quot;)
&lt;div class=&quot;bar&quot; id=&quot;foo&quot;&gt;hi&lt;/div&gt;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Hiccup

julia<span class="pl-k">&gt;</span> Hiccup<span class="pl-k">.</span><span class="pl-c1">div</span>(<span class="pl-s"><span class="pl-pds">"</span>#foo.bar<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>hi<span class="pl-pds">"</span></span>)
<span class="pl-k">&lt;</span>div class<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span> id<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span><span class="pl-k">&gt;</span>hi<span class="pl-k">&lt;</span><span class="pl-k">/</span>div<span class="pl-k">&gt;</span></pre></div>
<p dir="auto">HTML nodes are stored as the <code>Node{T}</code> type which renders itself smartly.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Node(:img, &quot;#id.class1.class2&quot;, Dict(:src=&gt;&quot;http://www.com&quot;))
&lt;img src=&quot;http://www.com&quot; id=&quot;id&quot; class=&quot;class1 class2&quot; /&gt;

julia&gt; tag(ans)
:img"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Node</span>(<span class="pl-c1">:img</span>, <span class="pl-s"><span class="pl-pds">"</span>#id.class1.class2<span class="pl-pds">"</span></span>, <span class="pl-c1">Dict</span>(<span class="pl-c1">:src</span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>http://www.com<span class="pl-pds">"</span></span>))
<span class="pl-k">&lt;</span>img src<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>http://www.com<span class="pl-pds">"</span></span> id<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>id<span class="pl-pds">"</span></span> class<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>class1 class2<span class="pl-pds">"</span></span> <span class="pl-k">/</span><span class="pl-k">&gt;</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">tag</span>(ans)
<span class="pl-c1">:img</span></pre></div>
<p dir="auto">A bunch of utility functions, with the names of tags, are provided which make this a bit more legible. You can import more with <code>@tags</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; @tags img, svg

julia&gt; svg(&quot;#id.class1.class2&quot;, Dict(:src=&gt;&quot;http://www.com&quot;))
&lt;svg class=&quot;class1 class2&quot; src=&quot;http://www.com&quot; id=&quot;id&quot;&gt;&lt;/svg&gt;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@tags</span> img, svg

julia<span class="pl-k">&gt;</span> <span class="pl-c1">svg</span>(<span class="pl-s"><span class="pl-pds">"</span>#id.class1.class2<span class="pl-pds">"</span></span>, <span class="pl-c1">Dict</span>(<span class="pl-c1">:src</span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>http://www.com<span class="pl-pds">"</span></span>))
<span class="pl-k">&lt;</span>svg class<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>class1 class2<span class="pl-pds">"</span></span> src<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>http://www.com<span class="pl-pds">"</span></span> id<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>id<span class="pl-pds">"</span></span><span class="pl-k">&gt;&lt;</span><span class="pl-k">/</span>svg<span class="pl-k">&gt;</span></pre></div>
<p dir="auto">And that's basically it.</p>
</article></div>