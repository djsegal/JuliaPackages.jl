<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-constrainedsystemsjl" class="anchor" aria-hidden="true" href="#constrainedsystemsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ConstrainedSystems.jl</h1>
<p dir="auto"><em>Tools for solving constrained dynamical systems</em></p>
<table>
<thead>
<tr>
<th align="center">Documentation</th>
<th align="center">Build Status</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://JuliaIBPM.github.io/ConstrainedSystems.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://JuliaIBPM.github.io/ConstrainedSystems.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/JuliaIBPM/ConstrainedSystems.jl/actions"><img src="https://github.com/JuliaIBPM/ConstrainedSystems.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/JuliaIBPM/ConstrainedSystems.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f7a724a80eeae1454951c6f65976e2877ea1a7d47726ad3ca8d8dc2cd9fe2516/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614942504d2f436f6e73747261696e656453797374656d732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaIBPM/ConstrainedSystems.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">This package contains several tools for solving and advancing (large-scale) dynamical systems with constraints. These systems generically have the form</p>
<p dir="auto">dy/dt = L y - B<sub>1</sub><sup>T</sup> z + r<sub>1</sub>(y,t)</p>
<p dir="auto">B<sub>2</sub> y = r<sub>2</sub>(y,t)</p>
<p dir="auto">y(0) = y<sub>0</sub></p>
<p dir="auto">where y is a state vector, L is a linear operator with an associated matrix exponential (integrating factor), and z is a constraint force vector (i.e., Lagrange multipliers).</p>
<p dir="auto">Some of the key components of this package are</p>
<ul dir="auto">
<li>
<p dir="auto">Tools for solving linear algebra problems with constraints and associated Lagrange multipliers, known generically as <em>saddle point systems</em>. The sizes of these systems might be large.</p>
</li>
<li>
<p dir="auto">Time integrators that can incorporate these constraints, such as half-explicit Runge-Kutta (HERK) and integrating factor Runge-Kutta (IFRK), or their combination (IF-HERK). These
extend the tools in the <a href="https://github.com/SciML/DifferentialEquations.jl">DifferentialEquations.jl</a> package, and utilize the same basic syntax for setting
up a problem and solving it.</p>
</li>
<li>
<p dir="auto">Allowance for variable constraint operators B<sub>1</sub><sup>T</sup> and B<sub>2</sub>,
through the use of a variable parameter argument and an associated parameter update
function.</p>
</li>
<li>
<p dir="auto">The ability to add an auxiliary (unconstrained) system of equations that the
constraint operators B<sub>1</sub><sup>T</sup> and B<sub>2</sub> depend upon.</p>
</li>
</ul>
<p dir="auto">The package is agnostic to the type of systems, and might arise from, e.g., fluid dynamics or rigid-body mechanics.</p>
</article></div>