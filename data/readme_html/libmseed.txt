<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-libmseedjl" class="anchor" aria-hidden="true" href="#libmseedjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LibMseed.jl</h1>
<p dir="auto"><a href="https://github.com/anowacki/LibMseed.jl/actions"><img src="https://github.com/anowacki/LibMseed.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/anowacki/LibMseed.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1833b5b3b4f80fd5cddd4119fb139f8e2d56039b7842b7be11b2a0da998086a7/68747470733a2f2f636f6465636f762e696f2f67682f616e6f7761636b692f4c69624d736565642e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d7a5a4c554e4133744a6b" alt="Code coverage" data-canonical-src="https://codecov.io/gh/anowacki/LibMseed.jl/branch/main/graph/badge.svg?token=zZLUNA3tJk" style="max-width: 100%;"></a></p>
<p dir="auto">LibMseed.jl is a Julia wrapper around the
<a href="https://github.com/iris-edu/libmseed">libmseed</a> library for reading
and writing data in the miniSEED format.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<h3 dir="auto"><a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Dependencies</h3>
<ul dir="auto">
<li>Julia v1.6 or later.</li>
</ul>
<h3 dir="auto"><a id="user-content-installation-instructions" class="anchor" aria-hidden="true" href="#installation-instructions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation instructions</h3>
<p dir="auto">You can install LibMseed.jl from Julia's package manager like so:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg; Pkg.add(url=&quot;https://github.com/anowacki/LibMseed.jl&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/anowacki/LibMseed.jl<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-using-the-package" class="anchor" aria-hidden="true" href="#using-the-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using the package</h2>
<p dir="auto"><code>LibMseed</code> exports several functions with common names, such as <code>read_file</code>
and <code>write_file</code>.  It is recommended to either explicitly import the functions
you need, or always prepend names with <code>LibMseed</code>.</p>
<h3 dir="auto"><a id="user-content-reading-data-from-disk" class="anchor" aria-hidden="true" href="#reading-data-from-disk"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reading data from disk</h3>
<p dir="auto">Use <code>read_file</code> function to read miniSEED data
from disk.  Here we assume you have a file called <code>example.mseed</code> in the
current dirctory.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import LibMseed

julia&gt; ms = LibMseed.read_file(&quot;example.mseed&quot;)
MseedTraceList:
 2 traces:
  &quot;FDSN:GB_CWF__B_H_Z&quot;: 2008-02-27T00:56:45.404999000 2008-02-27T00:57:45.384999000, 1 segments
  &quot;FDSN:GB_CWF__H_H_Z&quot;: 2008-02-27T00:56:45.409999000 2008-02-27T00:57:45.399999000, 1 segments"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> LibMseed

julia<span class="pl-k">&gt;</span> ms <span class="pl-k">=</span> LibMseed<span class="pl-k">.</span><span class="pl-c1">read_file</span>(<span class="pl-s"><span class="pl-pds">"</span>example.mseed<span class="pl-pds">"</span></span>)
MseedTraceList<span class="pl-k">:</span>
 <span class="pl-c1">2</span> traces<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>FDSN:GB_CWF__B_H_Z<span class="pl-pds">"</span></span>: <span class="pl-c1">2008</span><span class="pl-k">-</span><span class="pl-c1">02</span><span class="pl-k">-</span><span class="pl-c1">27</span>T00<span class="pl-k">:</span><span class="pl-c1">56</span><span class="pl-k">:</span><span class="pl-c1">45.404999000</span> <span class="pl-c1">2008</span><span class="pl-k">-</span><span class="pl-c1">02</span><span class="pl-k">-</span><span class="pl-c1">27</span>T00<span class="pl-k">:</span><span class="pl-c1">57</span><span class="pl-k">:</span><span class="pl-c1">45.384999000</span>, <span class="pl-c1">1</span> segments
  <span class="pl-s"><span class="pl-pds">"</span>FDSN:GB_CWF__H_H_Z<span class="pl-pds">"</span></span>: <span class="pl-c1">2008</span><span class="pl-k">-</span><span class="pl-c1">02</span><span class="pl-k">-</span><span class="pl-c1">27</span>T00<span class="pl-k">:</span><span class="pl-c1">56</span><span class="pl-k">:</span><span class="pl-c1">45.409999000</span> <span class="pl-c1">2008</span><span class="pl-k">-</span><span class="pl-c1">02</span><span class="pl-k">-</span><span class="pl-c1">27</span>T00<span class="pl-k">:</span><span class="pl-c1">57</span><span class="pl-k">:</span><span class="pl-c1">45.399999000</span>, <span class="pl-c1">1</span> segments</pre></div>
<h3 dir="auto"><a id="user-content-reading-data-from-memory" class="anchor" aria-hidden="true" href="#reading-data-from-memory"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reading data from memory</h3>
<p dir="auto">Use the unexported <code>LibMseed.read_buffer</code> function to read miniSEED data
from memory.  This data should be a <code>Vector</code> of <code>UInt8</code>s.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; data = read(&quot;example.mseed&quot;) # This may have been downloaded from the internet, for example
26624-element Vector{UInt8}
0x00
⋮
0x00

julia&gt; ms = LibMseed.read_buffer(data)
MseedTraceList:
 2 traces:
  &quot;FDSN:GB_CWF__B_H_Z&quot;: 2008-02-27T00:56:45.404999000 2008-02-27T00:57:45.384999000, 1 segments
  &quot;FDSN:GB_CWF__H_H_Z&quot;: 2008-02-27T00:56:45.409999000 2008-02-27T00:57:45.399999000, 1 segments"><pre>julia<span class="pl-k">&gt;</span> data <span class="pl-k">=</span> <span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>example.mseed<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> This may have been downloaded from the internet, for example</span>
<span class="pl-c1">26624</span><span class="pl-k">-</span>element Vector{UInt8}
<span class="pl-c1">0x00</span>
⋮
<span class="pl-c1">0x00</span>

julia<span class="pl-k">&gt;</span> ms <span class="pl-k">=</span> LibMseed<span class="pl-k">.</span><span class="pl-c1">read_buffer</span>(data)
MseedTraceList<span class="pl-k">:</span>
 <span class="pl-c1">2</span> traces<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>FDSN:GB_CWF__B_H_Z<span class="pl-pds">"</span></span>: <span class="pl-c1">2008</span><span class="pl-k">-</span><span class="pl-c1">02</span><span class="pl-k">-</span><span class="pl-c1">27</span>T00<span class="pl-k">:</span><span class="pl-c1">56</span><span class="pl-k">:</span><span class="pl-c1">45.404999000</span> <span class="pl-c1">2008</span><span class="pl-k">-</span><span class="pl-c1">02</span><span class="pl-k">-</span><span class="pl-c1">27</span>T00<span class="pl-k">:</span><span class="pl-c1">57</span><span class="pl-k">:</span><span class="pl-c1">45.384999000</span>, <span class="pl-c1">1</span> segments
  <span class="pl-s"><span class="pl-pds">"</span>FDSN:GB_CWF__H_H_Z<span class="pl-pds">"</span></span>: <span class="pl-c1">2008</span><span class="pl-k">-</span><span class="pl-c1">02</span><span class="pl-k">-</span><span class="pl-c1">27</span>T00<span class="pl-k">:</span><span class="pl-c1">56</span><span class="pl-k">:</span><span class="pl-c1">45.409999000</span> <span class="pl-c1">2008</span><span class="pl-k">-</span><span class="pl-c1">02</span><span class="pl-k">-</span><span class="pl-c1">27</span>T00<span class="pl-k">:</span><span class="pl-c1">57</span><span class="pl-k">:</span><span class="pl-c1">45.399999000</span>, <span class="pl-c1">1</span> segments</pre></div>
<h3 dir="auto"><a id="user-content-accessing-data" class="anchor" aria-hidden="true" href="#accessing-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Accessing data</h3>
<p dir="auto"><code>LibMseed.read_file</code> returns a <code>LibMseed.MseedTraceList</code>, which is a structure
holding an arbitrary number of traces (corresonding to individual channels),
each of which may hold an arbitrary number of segments.</p>
<p dir="auto">Access the traces within the <code>MseedTraceList</code> object via its <code>traces</code>
property:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ms.traces
2-element Vector{LibMseed.MseedTraceID}:
 LibMseed.MseedTraceID{Int32}(&quot;FDSN:GB_CWF__B_H_Z&quot;, NanosecondDateTime(&quot;2008-02-27T00:56:45.404999000&quot;), NanosecondDateTime(&quot;2008-02-27T00:57:45.384999000&quot;), LibMseed.MseedTraceSegment{Int32}[LibMseed.MseedTraceSegment{Int32}(NanosecondDateTime(&quot;2008-02-27T00:56:45.404999000&quot;), NanosecondDateTime(&quot;2008-02-27T00:57:45.384999000&quot;), 50.0, 3000, Int32[1466, 1466, 1453, 1449, 1449, 1443, 1441, 1443, 1444, 1439  …  -12421, -15146, 6993, 32994, 34813, 29718, 17484, 4468, 13498, 21614])])
 LibMseed.MseedTraceID{Int32}(&quot;FDSN:GB_CWF__H_H_Z&quot;, NanosecondDateTime(&quot;2008-02-27T00:56:45.409999000&quot;), NanosecondDateTime(&quot;2008-02-27T00:57:45.399999000&quot;), LibMseed.MseedTraceSegment{Int32}[LibMseed.MseedTraceSegment{Int32}(NanosecondDateTime(&quot;2008-02-27T00:56:45.409999000&quot;), NanosecondDateTime(&quot;2008-02-27T00:57:45.399999000&quot;), 100.0, 6000, Int32[1469, 1469, 1463, 1465, 1447, 1449, 1457, 1450, 1447, 1446  …  28750, 19408, 13748, 9836, -1323, 11130, 21097, 20900, 14103, 10817])])"><pre>julia<span class="pl-k">&gt;</span> ms<span class="pl-k">.</span>traces
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{LibMseed<span class="pl-k">.</span>MseedTraceID}<span class="pl-k">:</span>
 LibMseed<span class="pl-k">.</span><span class="pl-c1">MseedTraceID</span><span class="pl-c1">{Int32}</span>(<span class="pl-s"><span class="pl-pds">"</span>FDSN:GB_CWF__B_H_Z<span class="pl-pds">"</span></span>, <span class="pl-c1">NanosecondDateTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2008-02-27T00:56:45.404999000<span class="pl-pds">"</span></span>), <span class="pl-c1">NanosecondDateTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2008-02-27T00:57:45.384999000<span class="pl-pds">"</span></span>), LibMseed<span class="pl-k">.</span>MseedTraceSegment{Int32}[LibMseed<span class="pl-k">.</span><span class="pl-c1">MseedTraceSegment</span><span class="pl-c1">{Int32}</span>(<span class="pl-c1">NanosecondDateTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2008-02-27T00:56:45.404999000<span class="pl-pds">"</span></span>), <span class="pl-c1">NanosecondDateTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2008-02-27T00:57:45.384999000<span class="pl-pds">"</span></span>), <span class="pl-c1">50.0</span>, <span class="pl-c1">3000</span>, Int32[<span class="pl-c1">1466</span>, <span class="pl-c1">1466</span>, <span class="pl-c1">1453</span>, <span class="pl-c1">1449</span>, <span class="pl-c1">1449</span>, <span class="pl-c1">1443</span>, <span class="pl-c1">1441</span>, <span class="pl-c1">1443</span>, <span class="pl-c1">1444</span>, <span class="pl-c1">1439</span>  …  <span class="pl-k">-</span><span class="pl-c1">12421</span>, <span class="pl-k">-</span><span class="pl-c1">15146</span>, <span class="pl-c1">6993</span>, <span class="pl-c1">32994</span>, <span class="pl-c1">34813</span>, <span class="pl-c1">29718</span>, <span class="pl-c1">17484</span>, <span class="pl-c1">4468</span>, <span class="pl-c1">13498</span>, <span class="pl-c1">21614</span>])])
 LibMseed<span class="pl-k">.</span><span class="pl-c1">MseedTraceID</span><span class="pl-c1">{Int32}</span>(<span class="pl-s"><span class="pl-pds">"</span>FDSN:GB_CWF__H_H_Z<span class="pl-pds">"</span></span>, <span class="pl-c1">NanosecondDateTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2008-02-27T00:56:45.409999000<span class="pl-pds">"</span></span>), <span class="pl-c1">NanosecondDateTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2008-02-27T00:57:45.399999000<span class="pl-pds">"</span></span>), LibMseed<span class="pl-k">.</span>MseedTraceSegment{Int32}[LibMseed<span class="pl-k">.</span><span class="pl-c1">MseedTraceSegment</span><span class="pl-c1">{Int32}</span>(<span class="pl-c1">NanosecondDateTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2008-02-27T00:56:45.409999000<span class="pl-pds">"</span></span>), <span class="pl-c1">NanosecondDateTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2008-02-27T00:57:45.399999000<span class="pl-pds">"</span></span>), <span class="pl-c1">100.0</span>, <span class="pl-c1">6000</span>, Int32[<span class="pl-c1">1469</span>, <span class="pl-c1">1469</span>, <span class="pl-c1">1463</span>, <span class="pl-c1">1465</span>, <span class="pl-c1">1447</span>, <span class="pl-c1">1449</span>, <span class="pl-c1">1457</span>, <span class="pl-c1">1450</span>, <span class="pl-c1">1447</span>, <span class="pl-c1">1446</span>  …  <span class="pl-c1">28750</span>, <span class="pl-c1">19408</span>, <span class="pl-c1">13748</span>, <span class="pl-c1">9836</span>, <span class="pl-k">-</span><span class="pl-c1">1323</span>, <span class="pl-c1">11130</span>, <span class="pl-c1">21097</span>, <span class="pl-c1">20900</span>, <span class="pl-c1">14103</span>, <span class="pl-c1">10817</span>])])</pre></div>
<p dir="auto">Each trace is a <code>LibMseed.MseedTraceID</code> which has a single channel code.
It may be divided up into several non-contiguous segments, which can be
accessed by the <code>MseedTraceID</code>'s <code>segments</code> property:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ms.traces[1].segments
1-element Vector{LibMseed.MseedTraceSegment{Int32}}:
 LibMseed.MseedTraceSegment{Int32}(NanosecondDateTime(&quot;2008-02-27T00:56:45.404999000&quot;), NanosecondDateTime(&quot;2008-02-27T00:57:45.384999000&quot;), 50.0, 3000, Int32[1466, 1466, 1453, 1449, 1449, 1443, 1441, 1443, 1444, 1439  …  -12421, -15146, 6993, 32994, 34813, 29718, 17484, 4468, 13498, 21614])"><pre>julia<span class="pl-k">&gt;</span> ms<span class="pl-k">.</span>traces[<span class="pl-c1">1</span>]<span class="pl-k">.</span>segments
<span class="pl-c1">1</span><span class="pl-k">-</span>element Vector{LibMseed<span class="pl-k">.</span>MseedTraceSegment{Int32}}<span class="pl-k">:</span>
 LibMseed<span class="pl-k">.</span><span class="pl-c1">MseedTraceSegment</span><span class="pl-c1">{Int32}</span>(<span class="pl-c1">NanosecondDateTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2008-02-27T00:56:45.404999000<span class="pl-pds">"</span></span>), <span class="pl-c1">NanosecondDateTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2008-02-27T00:57:45.384999000<span class="pl-pds">"</span></span>), <span class="pl-c1">50.0</span>, <span class="pl-c1">3000</span>, Int32[<span class="pl-c1">1466</span>, <span class="pl-c1">1466</span>, <span class="pl-c1">1453</span>, <span class="pl-c1">1449</span>, <span class="pl-c1">1449</span>, <span class="pl-c1">1443</span>, <span class="pl-c1">1441</span>, <span class="pl-c1">1443</span>, <span class="pl-c1">1444</span>, <span class="pl-c1">1439</span>  …  <span class="pl-k">-</span><span class="pl-c1">12421</span>, <span class="pl-k">-</span><span class="pl-c1">15146</span>, <span class="pl-c1">6993</span>, <span class="pl-c1">32994</span>, <span class="pl-c1">34813</span>, <span class="pl-c1">29718</span>, <span class="pl-c1">17484</span>, <span class="pl-c1">4468</span>, <span class="pl-c1">13498</span>, <span class="pl-c1">21614</span>])</pre></div>
<p dir="auto">Here, the channel GB.CWF..BHZ has only one segment.  The raw data can
be obtained by accessing that segment's <code>data</code> property:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ms.traces[1].segments[1].data
3000-element Vector{Int32}:
   1466
   1466
      ⋮
  13498
  21614"><pre>julia<span class="pl-k">&gt;</span> ms<span class="pl-k">.</span>traces[<span class="pl-c1">1</span>]<span class="pl-k">.</span>segments[<span class="pl-c1">1</span>]<span class="pl-k">.</span>data
<span class="pl-c1">3000</span><span class="pl-k">-</span>element Vector{Int32}<span class="pl-k">:</span>
   <span class="pl-c1">1466</span>
   <span class="pl-c1">1466</span>
      ⋮
  <span class="pl-c1">13498</span>
  <span class="pl-c1">21614</span></pre></div>
<p dir="auto">Note that the data element type is a parameter of the channel's <code>MseedTraceID</code>
object and each segment of a trace must have the same element type.</p>
<h3 dir="auto"><a id="user-content-channel-naming-of-input-data" class="anchor" aria-hidden="true" href="#channel-naming-of-input-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Channel naming of input data</h3>
<p dir="auto">Channel names are simply read from the miniSEED file or data and may
or may not be in a standard SEED format.  However, you can use the
unexported <code>LibMseed.channel_code_parts</code> on a <code>MseedTraceID</code> or a string
to try and split the channel's ID into network, station, location and
channel as in traditional SEED conventions:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; LibMseed.channel_code_parts(ms.traces[1])
(net = &quot;GB&quot;, sta = &quot;CWF&quot;, loc = &quot;&quot;, cha = &quot;BHZ&quot;)"><pre>julia<span class="pl-k">&gt;</span> LibMseed<span class="pl-k">.</span><span class="pl-c1">channel_code_parts</span>(ms<span class="pl-k">.</span>traces[<span class="pl-c1">1</span>])
(net <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>GB<span class="pl-pds">"</span></span>, sta <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CWF<span class="pl-pds">"</span></span>, loc <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>, cha <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>BHZ<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><code>LibMseed.channel_code_parts</code> returns a named tuple with the component
parts.  If a trace ID doesn't seem to correspond to the
network-station-location-channel format, then the whole ID string is
returned in the <code>sta</code> field of the named tuple and all other fiels are
set to <code>nothing</code>.</p>
<h3 dir="auto"><a id="user-content-writing-data" class="anchor" aria-hidden="true" href="#writing-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Writing data</h3>
<p dir="auto">To write a continuous set of evenly-spaced samples to disk in miniSEED
format, use the unexported <code>LibMseed.write_file</code> function.</p>
<p dir="auto">Here we create some random data, set the necessary parameters (including
the date of the first sample) and write it to a new file, <code>"example2.mseed"</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Dates: DateTime

julia&gt; data = randn(1000);

julia&gt; sampling_rate = 100; # Hz

julia&gt; id = &quot;FDSN:XX_STA_00_H_H_Z&quot;;

julia&gt; starttime = DateTime(2000);

julia&gt; LibMseed.write_file(&quot;example2.mseed&quot;, data, sampling_rate, starttime, id)
2"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Dates<span class="pl-k">:</span> DateTime

julia<span class="pl-k">&gt;</span> data <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">1000</span>);

julia<span class="pl-k">&gt;</span> sampling_rate <span class="pl-k">=</span> <span class="pl-c1">100</span>; <span class="pl-c"><span class="pl-c">#</span> Hz</span>

julia<span class="pl-k">&gt;</span> id <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>FDSN:XX_STA_00_H_H_Z<span class="pl-pds">"</span></span>;

julia<span class="pl-k">&gt;</span> starttime <span class="pl-k">=</span> <span class="pl-c1">DateTime</span>(<span class="pl-c1">2000</span>);

julia<span class="pl-k">&gt;</span> LibMseed<span class="pl-k">.</span><span class="pl-c1">write_file</span>(<span class="pl-s"><span class="pl-pds">"</span>example2.mseed<span class="pl-pds">"</span></span>, data, sampling_rate, starttime, id)
<span class="pl-c1">2</span></pre></div>
<p dir="auto">If we wanted to add a separate segment of data for this channel, or a
different channel entirely, then we can call <code>write_file</code> again but
use the <code>append=true</code> keyword argument:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; data2 = randn(100)

julia&gt; starttime2 = DateTime(2000, 1, 1, 12);

julia&gt; LibMseed.write_file(&quot;example2.mseed&quot;, data2, sampling_rate, starttime2, id; append=true)
1

julia&gt; ms2 = LibMseed.read_file(&quot;example2.mseed&quot;)
MseedTraceList:
 1 trace:
  &quot;FDSN:XX_STA_00_H_H_Z&quot;: 2000-01-01T00:00:00.000000000 2000-01-01T12:00:00.990000000, 2 segments

julia&gt; segs = only(ms2.traces).segments;

julia&gt; getproperty.(segs, [:starttime :endtime]) # One row per segment, start and end time
2×2 Matrix{LibMseed.NanosecondDateTime}:
 2000-01-01T00:00:00.000000000  …  2000-01-01T00:00:09.990000000
 2000-01-01T12:00:00.000000000     2000-01-01T12:00:00.990000000"><pre>julia<span class="pl-k">&gt;</span> data2 <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">100</span>)

julia<span class="pl-k">&gt;</span> starttime2 <span class="pl-k">=</span> <span class="pl-c1">DateTime</span>(<span class="pl-c1">2000</span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">12</span>);

julia<span class="pl-k">&gt;</span> LibMseed<span class="pl-k">.</span><span class="pl-c1">write_file</span>(<span class="pl-s"><span class="pl-pds">"</span>example2.mseed<span class="pl-pds">"</span></span>, data2, sampling_rate, starttime2, id; append<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> ms2 <span class="pl-k">=</span> LibMseed<span class="pl-k">.</span><span class="pl-c1">read_file</span>(<span class="pl-s"><span class="pl-pds">"</span>example2.mseed<span class="pl-pds">"</span></span>)
MseedTraceList<span class="pl-k">:</span>
 <span class="pl-c1">1</span> trace<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>FDSN:XX_STA_00_H_H_Z<span class="pl-pds">"</span></span>: <span class="pl-c1">2000</span><span class="pl-k">-</span><span class="pl-c1">01</span><span class="pl-k">-</span><span class="pl-c1">01</span>T00<span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">00.000000000</span> <span class="pl-c1">2000</span><span class="pl-k">-</span><span class="pl-c1">01</span><span class="pl-k">-</span><span class="pl-c1">01</span>T12<span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">00.990000000</span>, <span class="pl-c1">2</span> segments

julia<span class="pl-k">&gt;</span> segs <span class="pl-k">=</span> <span class="pl-c1">only</span>(ms2<span class="pl-k">.</span>traces)<span class="pl-k">.</span>segments;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">getproperty</span>.(segs, [<span class="pl-c1">:starttime</span> <span class="pl-c1">:endtime</span>]) <span class="pl-c"><span class="pl-c">#</span> One row per segment, start and end time</span>
<span class="pl-c1">2</span><span class="pl-k">×</span><span class="pl-c1">2</span> Matrix{LibMseed<span class="pl-k">.</span>NanosecondDateTime}<span class="pl-k">:</span>
 <span class="pl-c1">2000</span><span class="pl-k">-</span><span class="pl-c1">01</span><span class="pl-k">-</span><span class="pl-c1">01</span>T00<span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">00.000000000</span>  …  <span class="pl-c1">2000</span><span class="pl-k">-</span><span class="pl-c1">01</span><span class="pl-k">-</span><span class="pl-c1">01</span>T00<span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">09.990000000</span>
 <span class="pl-c1">2000</span><span class="pl-k">-</span><span class="pl-c1">01</span><span class="pl-k">-</span><span class="pl-c1">01</span>T12<span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">00.000000000</span>     <span class="pl-c1">2000</span><span class="pl-k">-</span><span class="pl-c1">01</span><span class="pl-k">-</span><span class="pl-c1">01</span>T12<span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">00.990000000</span></pre></div>
<h4 dir="auto"><a id="user-content-note-on-channel-naming" class="anchor" aria-hidden="true" href="#note-on-channel-naming"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Note on channel naming</h4>
<p dir="auto">Note that the libmseed library requires that the trace ID has the form
shown above, i.e. <code>"FDSN:NET_STA_LOC_BAND_SOURCE_POSITION"</code>, otherwise
an error is thrown.</p>
<h3 dir="auto"><a id="user-content-time-resolution" class="anchor" aria-hidden="true" href="#time-resolution"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Time resolution</h3>
<p dir="auto">The time of the first sample (the <code>starttime</code> in the example above,
or the property <code>starttime</code> of a segment) is stored to nanosecond
precision in the miniSEED file.  The standard library <code>Dates</code> module
cannot handle nanosecond resolution <code>Dates.DateTime</code>s, and so time is
implemented in LibMseed.jl via the <code>LibMseed.NanosecondDateTime</code> type.</p>
<p dir="auto">You can convert a <code>NanosecondDateTime</code> to the nearest <code>Dates.DateTime</code>
(precise to the millisecond) with <code>LibMseed.nearest_datetime</code>.  Use
<code>Dates.Time</code> to obtain the time of day to full nanosecond resolution.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; t = ms.traces[1].segments[1].starttime
2008-02-27T00:56:45.404999000

julia&gt; LibMseed.nearest_datetime(t)
2008-02-27T00:56:45.405

julia&gt; using Dates: Time

julia&gt; Time(t)
00:56:45.404999"><pre>julia<span class="pl-k">&gt;</span> t <span class="pl-k">=</span> ms<span class="pl-k">.</span>traces[<span class="pl-c1">1</span>]<span class="pl-k">.</span>segments[<span class="pl-c1">1</span>]<span class="pl-k">.</span>starttime
<span class="pl-c1">2008</span><span class="pl-k">-</span><span class="pl-c1">02</span><span class="pl-k">-</span><span class="pl-c1">27</span>T00<span class="pl-k">:</span><span class="pl-c1">56</span><span class="pl-k">:</span><span class="pl-c1">45.404999000</span>

julia<span class="pl-k">&gt;</span> LibMseed<span class="pl-k">.</span><span class="pl-c1">nearest_datetime</span>(t)
<span class="pl-c1">2008</span><span class="pl-k">-</span><span class="pl-c1">02</span><span class="pl-k">-</span><span class="pl-c1">27</span>T00<span class="pl-k">:</span><span class="pl-c1">56</span><span class="pl-k">:</span><span class="pl-c1">45.405</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Dates<span class="pl-k">:</span> Time

julia<span class="pl-k">&gt;</span> <span class="pl-c1">Time</span>(t)
<span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">56</span><span class="pl-k">:</span><span class="pl-c1">45.404999</span></pre></div>
<h2 dir="auto"><a id="user-content-more-help" class="anchor" aria-hidden="true" href="#more-help"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>More help</h2>
<p dir="auto">Each of the functions described above is further documented via its
docstring.</p>
<h2 dir="auto"><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing</h2>
<p dir="auto">Pull requests to add functionality and fix bugs are welcome.  To report
a bug or feature request in the software, please
<a href="https://github.com/anowacki/LibMseed.jl/issues/new">open an issue</a>.</p>
</article></div>