<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-securesessions" class="anchor" aria-hidden="true" href="#securesessions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SecureSessions</h1>
<p><a href="https://travis-ci.org/JockLawrie/SecureSessions.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/48949e8c4b482819316596064e2049ac43d36fa94e0f150941eebf5a2882d41e/68747470733a2f2f7472617669732d63692e6f72672f4a6f636b4c61777269652f53656375726553657373696f6e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JockLawrie/SecureSessions.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=SecureSessions&amp;ver=0.4" rel="nofollow"><img src="https://camo.githubusercontent.com/a716228343735a4ca9ba79fe40a30e9e2fda1cbfb767eca1574573dce6b8f4cd/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f53656375726553657373696f6e735f302e342e737667" alt="SecureSessions" data-canonical-src="http://pkg.julialang.org/badges/SecureSessions_0.4.svg" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JockLawrie/SecureSessions.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/c5ba42bf34974ffcc36bb81c8349e1672bdcb6b00ea6990cf41c1d5451f928f0/687474703a2f2f636f6465636f762e696f2f6769746875622f4a6f636b4c61777269652f53656375726553657373696f6e732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="http://codecov.io/github/JockLawrie/SecureSessions.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-warning" class="anchor" aria-hidden="true" href="#warning"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>WARNING</h2>
<p><strong>The security of this implementation has not been reviewed by a security professional. Use at your own risk.</strong></p>
<h2><a id="user-content-functionality" class="anchor" aria-hidden="true" href="#functionality"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Functionality</h2>
<ul>
<li>Encrypted, tamper-proof cookies; used primarily for stateless secure sessions.</li>
<li>Password hashing; used for login.</li>
</ul>
<h2><a id="user-content-security-protocols" class="anchor" aria-hidden="true" href="#security-protocols"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Security Protocols</h2>
<p>For the current status of the security protocols used see <a href="https://github.com/JockLawrie/SecureSessions.jl/blob/master/docs/security_protocols.md">this doc</a>.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>The API is detailed below.</p>
<p>Basic examples are in test/runtests.jl.</p>
<p><a href="https://bitbucket.org/jocklawrie/skeleton-webapp.jl" rel="nofollow">This repo</a> contains example web applications:</p>
<ul>
<li>Example 5 demonstrates secure cookies.</li>
<li>Example 6 uses password hashing for login as well as secure cookies.</li>
</ul>
<p>See <code>docs/outline</code> for a description of these examples.</p>
<h2><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>API</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Pkg.add(&quot;SecureSessions&quot;)
using SecureSessions

##########################
### Secure cookies
##########################
username_is_permissible(username)    # Returns true if username adheres to a set of rules defined in the package.

# Create a secure cookie called &quot;sessionid&quot; and include it in the response.
# data is user-supplied, encrypted and included as part of the cookie value.
# For example, data may be a username.
create_secure_session_cookie(data, res::Response, &quot;sessionid&quot;)

# Extract and decrypt data from the &quot;sessionid&quot; cookie in the request.
# This is the same user-supplied data included during the cookie's construction.
get_session_cookie_data(req::Request, &quot;sessionid&quot;)

##########################
### Password storage
##########################
password_is_permissible(password)     # Returns true if password adheres to a set of rules defined in the package

# Store password...add salt, then hash, then store in type StoredPassword.
immutable StoredPassword
    salt::Array{UInt8, 1}
    hashed_password::Array{UInt8, 1}
end

# The constructor argument is an AbstractString
# A salt is randomly generated using a cryptographically secure RNG
sp = StoredPassword(password)
password_is_valid(password::AbstractString, sp::StoredPassword)    # Returns true if hash(sp.salt, password) == sp.hashed_password
"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>SecureSessions<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> SecureSessions

<span class="pl-c"><span class="pl-c">#</span>#########################</span>
<span class="pl-c"><span class="pl-c">#</span>## Secure cookies</span>
<span class="pl-c"><span class="pl-c">#</span>#########################</span>
<span class="pl-c1">username_is_permissible</span>(username)    <span class="pl-c"><span class="pl-c">#</span> Returns true if username adheres to a set of rules defined in the package.</span>

<span class="pl-c"><span class="pl-c">#</span> Create a secure cookie called "sessionid" and include it in the response.</span>
<span class="pl-c"><span class="pl-c">#</span> data is user-supplied, encrypted and included as part of the cookie value.</span>
<span class="pl-c"><span class="pl-c">#</span> For example, data may be a username.</span>
<span class="pl-c1">create_secure_session_cookie</span>(data, res<span class="pl-k">::</span><span class="pl-c1">Response</span>, <span class="pl-s"><span class="pl-pds">"</span>sessionid<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Extract and decrypt data from the "sessionid" cookie in the request.</span>
<span class="pl-c"><span class="pl-c">#</span> This is the same user-supplied data included during the cookie's construction.</span>
<span class="pl-c1">get_session_cookie_data</span>(req<span class="pl-k">::</span><span class="pl-c1">Request</span>, <span class="pl-s"><span class="pl-pds">"</span>sessionid<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span>#########################</span>
<span class="pl-c"><span class="pl-c">#</span>## Password storage</span>
<span class="pl-c"><span class="pl-c">#</span>#########################</span>
<span class="pl-c1">password_is_permissible</span>(password)     <span class="pl-c"><span class="pl-c">#</span> Returns true if password adheres to a set of rules defined in the package</span>

<span class="pl-c"><span class="pl-c">#</span> Store password...add salt, then hash, then store in type StoredPassword.</span>
immutable StoredPassword
    salt<span class="pl-k">::</span><span class="pl-c1">Array{UInt8, 1}</span>
    hashed_password<span class="pl-k">::</span><span class="pl-c1">Array{UInt8, 1}</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> The constructor argument is an AbstractString</span>
<span class="pl-c"><span class="pl-c">#</span> A salt is randomly generated using a cryptographically secure RNG</span>
sp <span class="pl-k">=</span> <span class="pl-c1">StoredPassword</span>(password)
<span class="pl-c1">password_is_valid</span>(password<span class="pl-k">::</span><span class="pl-c1">AbstractString</span>, sp<span class="pl-k">::</span><span class="pl-c1">StoredPassword</span>)    <span class="pl-c"><span class="pl-c">#</span> Returns true if hash(sp.salt, password) == sp.hashed_password</span></pre></div>
</article></div>