<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-sinefitjl" class="anchor" aria-hidden="true" href="#sinefitjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SineFit.jl</h1>
<p dir="auto"><a href="https://juliahub.com/ui/Packages/SineFit/wHoPL" rel="nofollow"><img src="https://camo.githubusercontent.com/ec35f10cb9e20acfc664095f0f0c98f54c37fbbe11d4aaa2ef39ac7aa5edd151/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f53696e654669742f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/SineFit/version.svg" style="max-width: 100%;"></a>
<a href="https://juliahub.com/docs/SineFit/" rel="nofollow">Documentation</a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="example.svg"><img src="example.svg" alt="Example plot" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides functions for estimating and accurately fitting a sine
function to a given signal.</p>
<p dir="auto">This is basically an improvement in robustness to only using <code>LsqFit</code>: clever
initial parameter guessing helps the least-squares fit converge quickly and
accurately.</p>
<h2 dir="auto"><a id="user-content-why" class="anchor" aria-hidden="true" href="#why"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Why?</h2>
<p dir="auto">Fitting a periodic function using FFT only doesn't always produce the correct frequency,
as a discrete Fourier transform has a discrete frequency resolution and thus
doesn't produce the correct frequency for all input data sets.</p>
<p dir="auto">Fitting a periodic function using LsqFit only doesn't always converge properly,
as there is e.g. not a unique phase shift fit parameter.</p>
<p dir="auto">Combining the two approaches, using an FFT to guess the initial fit parameters
and then using a least-squares function fit, produces accurate results most of
the time.</p>
</article></div>