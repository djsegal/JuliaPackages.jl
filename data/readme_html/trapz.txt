<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-trapzjl" class="anchor" aria-hidden="true" href="#trapzjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Trapz.jl</h1>
<p>A simple Julia package to perform trapezoidal integration over common Julia arrays.</p>
<p><a href="https://pkg.julialang.org/docs/Trapz" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="Docs" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/francescoalemanno/Trapz.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/82dd5039c6cebdd46cab8e539906f88e14ab8c30/68747470733a2f2f7472617669732d63692e636f6d2f6672616e636573636f616c656d616e6e6f2f547261707a2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/francescoalemanno/Trapz.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/francescoalemanno/Trapz.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e55a7766fb29d664ed57fe4d3d286714e70a412e/68747470733a2f2f636f6465636f762e696f2f67682f6672616e636573636f616c656d616e6e6f2f547261707a2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/francescoalemanno/Trapz.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>the package is now registered on Julia Registry, so it can be added as follows</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">import</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add Trapz<span class="pl-pds">"</span></span></pre></div>
<h2><a id="user-content-main-usage-example" class="anchor" aria-hidden="true" href="#main-usage-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Main Usage Example:</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Trapz

vx<span class="pl-k">=</span><span class="pl-c1">range</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,length<span class="pl-k">=</span><span class="pl-c1">100</span>)
vy<span class="pl-k">=</span><span class="pl-c1">range</span>(<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,length<span class="pl-k">=</span><span class="pl-c1">200</span>)
vz<span class="pl-k">=</span><span class="pl-c1">range</span>(<span class="pl-c1">0</span>,<span class="pl-c1">3</span>,length<span class="pl-k">=</span><span class="pl-c1">300</span>)
M<span class="pl-k">=</span>[x<span class="pl-k">^</span><span class="pl-c1">2</span><span class="pl-k">+</span>y<span class="pl-k">^</span><span class="pl-c1">2</span><span class="pl-k">+</span>z<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">for</span> x<span class="pl-k">=</span>vx,y<span class="pl-k">=</span>vy,z<span class="pl-k">=</span>vz]
I<span class="pl-k">=</span><span class="pl-c1">trapz</span>((vx,vy,vz),M)
<span class="pl-c1">print</span>(<span class="pl-s"><span class="pl-pds">"</span>result: <span class="pl-pds">"</span></span>,I)</pre></div>
<pre><code>result: 28.00030
</code></pre>
<h2><a id="user-content-example-usage-of-trapz-macro" class="anchor" aria-hidden="true" href="#example-usage-of-trapz-macro"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example Usage of <code>@trapz</code> macro:</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Trapz
<span class="pl-k">using</span> Printf
Base<span class="pl-k">.</span><span class="pl-en">show</span>(io<span class="pl-k">::</span><span class="pl-c1">IO</span>, f<span class="pl-k">::</span><span class="pl-c1">Float64</span>) <span class="pl-k">=</span> <span class="pl-c1">@printf</span>(io, <span class="pl-s"><span class="pl-pds">"</span>%1.5f<span class="pl-pds">"</span></span>, f)
<span class="pl-k">function</span> <span class="pl-en">test</span>(λ)
    R<span class="pl-k">=</span><span class="pl-c1">@trapz</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0.0001</span><span class="pl-k">:</span>π x (<span class="pl-c1">sin</span>(λ<span class="pl-k">*</span>x)<span class="pl-k">/</span><span class="pl-c1">2</span>, <span class="pl-c1">cos</span>(λ<span class="pl-k">*</span>x)<span class="pl-k">/</span><span class="pl-c1">2</span>, <span class="pl-c1">cos</span>(λ<span class="pl-k">*</span>x)<span class="pl-k">^</span><span class="pl-c1">2</span><span class="pl-k">/</span>π)
    <span class="pl-c1">print</span>(<span class="pl-s"><span class="pl-pds">"</span>λ = <span class="pl-pds">"</span></span>,λ,<span class="pl-s"><span class="pl-pds">"</span> result of integrals: <span class="pl-pds">"</span></span>,R)
<span class="pl-k">end</span>

<span class="pl-c1">test</span>(<span class="pl-c1">0.5</span>)</pre></div>
<pre><code>λ = 0.50000 result of integrals: (0.99995, 1.00000, 0.50000)
</code></pre>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">test</span>(<span class="pl-c1">1.0</span>)</pre></div>
<pre><code>λ = 1.00000 result of integrals: (1.00000, 0.00005, 0.49997)
</code></pre>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">test</span>(<span class="pl-c1">2.0</span>)</pre></div>
<pre><code>λ = 2.00000 result of integrals: (0.00000, -0.00005, 0.49997)
</code></pre>
<h1><a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Benchmarks</h1>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> BenchmarkTools
<span class="pl-c1">@btime</span> <span class="pl-c1">trapz</span>(<span class="pl-k">$</span>(vx,vy,vz),<span class="pl-k">$</span>M);</pre></div>
<pre><code>3.131 ms (4 allocations: 157.30 KiB)
</code></pre>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">@btime</span> <span class="pl-c1">trapz</span>(<span class="pl-k">$</span>(:,vy, vz),<span class="pl-k">$</span>M);</pre></div>
<pre><code>3.084 ms (3 allocations: 157.20 KiB)
</code></pre>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">@btime</span> <span class="pl-c1">trapz</span>(<span class="pl-k">$</span>(:,vy,:),<span class="pl-k">$</span>M);</pre></div>
<pre><code>4.090 ms (2 allocations: 234.45 KiB)
</code></pre>
<h1><a id="user-content-benchmarks--example-for-trapz-macro" class="anchor" aria-hidden="true" href="#benchmarks--example-for-trapz-macro"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Benchmarks &amp; example for <code>@trapz</code> macro</h1>
<p>in this example we are calculating 3 multidimensional integrals simultaneously, in other words we are calculating a multidimensional (3D) integral of a vector function</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> BenchmarkTools
vx<span class="pl-k">=</span><span class="pl-c1">range</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,length<span class="pl-k">=</span><span class="pl-c1">100</span>)
vy<span class="pl-k">=</span><span class="pl-c1">range</span>(<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,length<span class="pl-k">=</span><span class="pl-c1">200</span>)
vz<span class="pl-k">=</span><span class="pl-c1">range</span>(<span class="pl-c1">0</span>,<span class="pl-c1">3</span>,length<span class="pl-k">=</span><span class="pl-c1">300</span>)

<span class="pl-k">function</span> <span class="pl-en">integr</span>(vx,vy,vz)
    <span class="pl-c1">@trapz</span> vx x <span class="pl-c1">@trapz</span> vy y <span class="pl-c1">@trapz</span> vz z (x<span class="pl-k">*</span>x<span class="pl-k">+</span>y<span class="pl-k">*</span>y<span class="pl-k">+</span>z<span class="pl-k">*</span>z, x<span class="pl-k">*</span>y<span class="pl-k">*</span>z, <span class="pl-c1">cos</span>(x<span class="pl-k">*</span>y)<span class="pl-k">+</span><span class="pl-c1">cos</span>(x<span class="pl-k">*</span>z)<span class="pl-k">+</span><span class="pl-c1">cos</span>(y<span class="pl-k">*</span>z))
<span class="pl-k">end</span>

<span class="pl-c1">@btime</span> <span class="pl-c1">integr</span>(<span class="pl-k">$</span>vx,<span class="pl-k">$</span>vy,<span class="pl-k">$</span>vz)</pre></div>
<pre><code>129.633 ms (0 allocations: 0 bytes)
(28.00030, 4.50000, 9.93814)
</code></pre>
<h1><a id="user-content-comparison-to-numpy" class="anchor" aria-hidden="true" href="#comparison-to-numpy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Comparison to Numpy</h1>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> PyCall
np<span class="pl-k">=</span><span class="pl-c1">pyimport</span>(<span class="pl-s"><span class="pl-pds">"</span>numpy<span class="pl-pds">"</span></span>)

timenumpy <span class="pl-k">=</span> <span class="pl-c1">@belapsed</span> np<span class="pl-k">.</span><span class="pl-c1">trapz</span>(np<span class="pl-k">.</span><span class="pl-c1">trapz</span>(np<span class="pl-k">.</span><span class="pl-c1">trapz</span>(<span class="pl-k">$</span>M,<span class="pl-k">$</span>vz),<span class="pl-k">$</span>vy),<span class="pl-k">$</span>vx)
timejulia <span class="pl-k">=</span> <span class="pl-c1">@belapsed</span> <span class="pl-c1">trapz</span>(<span class="pl-k">$</span>(vx,vy,vz),<span class="pl-k">$</span>M)

how_faster<span class="pl-k">=</span>timenumpy<span class="pl-k">/</span>timejulia

<span class="pl-c1">print</span>(<span class="pl-s"><span class="pl-pds">"</span>Trapz.jl is ~ <span class="pl-pds">"</span></span>,how_faster,<span class="pl-s"><span class="pl-pds">"</span> times faster than numpy's trapz<span class="pl-pds">"</span></span>)</pre></div>
<pre><code>Trapz.jl is ~ 7.34493 times faster than numpy's trapz
</code></pre>
</article></div>