<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto">You probably don't want to use this. I spent a few minutes writing the most naive possible fuzzer, to see if it would turn up any bugs. Turns out, this terrible method can generate bugs faster than I can debug them. However, the general approach and the specific implementation are pretty lame. If you're looking at this, you probably want something like <a href="http://embed.cs.utah.edu/csmith/" rel="nofollow">Csmith</a> or <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=jsfunfuzz" rel="nofollow">jsfunfuzz</a>.</p>
<p dir="auto">I'm planning to, eventually, write a real fuzzer to see if something that generates random expressions turns up more bugs than this. Suggestions / pull requests welcome.</p>
<h3 dir="auto"><a id="user-content-confirmeddebugged-bugs" class="anchor" aria-hidden="true" href="#confirmeddebugged-bugs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Confirmed/debugged bugs</h3>
<p dir="auto"><a href="https://github.com/JuliaLang/julia/issues/8353" data-hovercard-type="issue" data-hovercard-url="/JuliaLang/julia/issues/8353/hovercard">8353: parser loses track of location when <code>parse</code> is called</a></p>
<p dir="auto"><a href="https://github.com/JuliaLang/julia/pull/8352" data-hovercard-type="pull_request" data-hovercard-url="/JuliaLang/julia/pull/8352/hovercard">8352: underspecified type for writemime</a></p>
<p dir="auto"><a href="https://github.com/JuliaLang/julia/issues/8341" data-hovercard-type="issue" data-hovercard-url="/JuliaLang/julia/issues/8341/hovercard">8341: EOF mixed up in unicode hangs parser</a></p>
<p dir="auto"><a href="https://github.com/JuliaLang/julia/issues/8329" data-hovercard-type="issue" data-hovercard-url="/JuliaLang/julia/issues/8329/hovercard">8329: changing number of BLAS threads before operation causes segfault</a></p>
<p dir="auto"><a href="https://github.com/JuliaLang/julia/pull/8302" data-hovercard-type="pull_request" data-hovercard-url="/JuliaLang/julia/pull/8302/hovercard">8302: array sized incorrectly</a></p>
<p dir="auto"><a href="https://github.com/JuliaLang/julia/issues/8286" data-hovercard-type="issue" data-hovercard-url="/JuliaLang/julia/issues/8286/hovercard">8286: exponent of large number causes crashes with SIGABRT</a></p>
<p dir="auto"><a href="https://github.com/JuliaLang/julia/issues/8277" data-hovercard-type="issue" data-hovercard-url="/JuliaLang/julia/issues/8277/hovercard">8277: code near exception incorrectly optimized out</a></p>
<p dir="auto"><a href="https://github.com/JuliaLang/julia/pull/8266" data-hovercard-type="pull_request" data-hovercard-url="/JuliaLang/julia/pull/8266/hovercard">8266: hang/bad result on ndigits</a></p>
<p dir="auto"><a href="https://github.com/JuliaLang/julia/pull/8241" data-hovercard-type="pull_request" data-hovercard-url="/JuliaLang/julia/pull/8241/hovercard">8241: hang/segfault on long symbol</a></p>
<p dir="auto"><a href="https://github.com/JuliaLang/julia/pull/8239" data-hovercard-type="pull_request" data-hovercard-url="/JuliaLang/julia/pull/8239/hovercard">8239: segfault on code_native/code_llvm</a></p>
<h3 dir="auto"><a id="user-content-todo-debug-these-bugs" class="anchor" aria-hidden="true" href="#todo-debug-these-bugs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TODO: debug these bugs</h3>
<p dir="auto"><code>searchindex</code> returns an unclear error message:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; searchindex(&quot;q8NWiRVEW3NRTGXW6At7qN5aU2dhJ0ZGHSMfcH50k1Xsn1HIiPNRO0NXVhafnLkEd55&quot;,&quot;wKPx3QydhlLKz3fZQK3fCVhl6ZwMoFDq18ti1Ozcswi\
Av0Yq4k9utZgoN4KhdvIJiUjQcTIFZyD1cNmdsf1PcmmXMeh10N1&quot;,-234321342423423234534534543)
ERROR: error compiling searchindex: error compiling _searchindex: cannot convert type to a julia type
 in searchindex at string.jl:307"><pre class="notranslate"><code>julia&gt; searchindex("q8NWiRVEW3NRTGXW6At7qN5aU2dhJ0ZGHSMfcH50k1Xsn1HIiPNRO0NXVhafnLkEd55","wKPx3QydhlLKz3fZQK3fCVhl6ZwMoFDq18ti1Ozcswi\
Av0Yq4k9utZgoN4KhdvIJiUjQcTIFZyD1cNmdsf1PcmmXMeh10N1",-234321342423423234534534543)
ERROR: error compiling searchindex: error compiling _searchindex: cannot convert type to a julia type
 in searchindex at string.jl:307
</code></pre></div>
<p dir="auto"><code>sprandn</code> with bad args can take an arbitraily long time before erroring out.</p>
<p dir="auto"><code>displayable</code> psuedo-randomly hangs.</p>
<p dir="auto"><code>addprocs</code> of negative <code>Int128</code> causes something crazy to happen.</p>
<p dir="auto"><code>replace</code> on string containing bad characters errors out instead of skipping past bad character. See <code>sandbox/3</code>.</p>
<h3 dir="auto"><a id="user-content-odd-non-bugs" class="anchor" aria-hidden="true" href="#odd-non-bugs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Odd non-bugs</h3>
<p dir="auto"><a href="https://groups.google.com/forum/#!topic/julia-users/ljQ-nHpXitU" rel="nofollow">Special casing of some operators</a></p>
<p dir="auto">Address space randomiziation causes some methods to be randomized across invocations of julia.</p>
</article></div>