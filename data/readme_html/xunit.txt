<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-xunitjl" class="anchor" aria-hidden="true" href="#xunitjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>XUnit.jl</h1>
<p dir="auto"><code>XUnit.jl</code> is a unit-testing framework for Julia.</p>
<p dir="auto">It is a drop-in replacement for the test macros of <code>Base.Test</code> supporting:</p>
<ul dir="auto">
<li>Basic progress indication</li>
<li>The ability to
<ul dir="auto">
<li>run tests sequentially</li>
<li>run tests in shuffled mode (sequentially, in random order)</li>
<li>run tests in parallel mode (using multiple threads)</li>
<li>run tests in distributed mode (using multiple processes)</li>
<li>run only a subset of test sets</li>
</ul>
</li>
<li>XUnit/JUnit style of reporting test results</li>
</ul>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;XUnit&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>XUnit<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto"><code>XUnit.jl</code> allows to organize your tests hierarchically.</p>
<p dir="auto">There are two concepts used for creating your test hierarchy:</p>
<ul dir="auto">
<li><code>test-set</code>: is used for grouping other <code>test-set</code>s and <code>test-case</code>s. It is important that a <code>test-set</code> doesn't contain any code related to specific tests directly in its body. You can create a <code>test-set</code> using the <code>@testset</code> macro.</li>
<li><code>test-case</code>: is used for declaring a unit-test. You can think of <code>test-case</code>s as leaves of your test hierarchy. You can create a <code>test-case</code> using the <code>@testcase</code> macro.</li>
</ul>
<p dir="auto">Executing the tests using <code>XUnit.jl</code> happens in two phases:</p>
<ul dir="auto">
<li>Scheduling: when Julia processes test hierarchy macros (<code>@testset</code> and <code>@testcase</code>), it doesn't immediately run <code>test-case</code>s. Instead, it creates the <code>test-set</code> hierarchy and also creates handles to <code>test-case</code>s.</li>
<li>Running: After scheduling the tests, you have the choice of running the tests using a <code>test-runner</code>. Each <code>test-runner</code> has a different strategy for running the tests (explained below).</li>
</ul>
<p dir="auto"><code>XUnit.jl</code> rewrites/re-exports <code>@testset</code> and <code>@test*</code> macros provided by <code>Base.Test</code> (and you need to use these macros directly from <code>XUnit</code> instead of <code>Test</code>).</p>
<p dir="auto">In addition, there is one more macro provided and also <code>@testset</code> is enhanced:</p>
<ul dir="auto">
<li><code>@testset</code>: is used for grouping other <code>@testset</code>s and <code>@testcase</code>s. This macro schedules the <code>@testcase</code>s in its body (and runs them at end). It is important that a <code>@testset</code> doesn't contain any code related to specific tests directly in its body. Still, <code>@testset</code> is backward compatible with <code>Base.Test</code>. The deferred execution of test-cases is a big differentiator between <code>XUnit.jl</code> and <code>Base.Test</code>. Even though you can drop-in replace <code>XUnit.jl</code> with <code>Base.Test</code>, but we strongly recommend to benefit from deferred execution in different modes (i.e., shuffled, parallel, or distributed). This is done by passing the <code>runner</code> keyword argument to <code>@testset</code>. You can find an example below.</li>
<li><code>@testcase</code>: is used for encapsulating a <code>test-case</code>. You can think of <code>@testcase</code>s as leaves of your test hierarchy. The body of a <code>@testcase</code> is not executed right away. Instead, it gets scheduled for being executed later.</li>
</ul>
<p dir="auto"><strong>Note</strong>: it's suggested that <code>@testcase</code>s become the leaf nodes of your test hierarchy. Even though, for now, you can have other <code>@testset</code>s or even <code>@testcase</code>s under a <code>@testcase</code>, where in this case, all those are considered the same (like a <code>@testset</code>). Those will only impact the reporting, but won't have any impact on the execution of the tests, as still the top-most <code>@testcase</code> gets scheduled for deferred execution.</p>
<p dir="auto"><strong>Note</strong>:the body of a <code>@testset</code> always gets executed at scheduling time, as it needs to gather possible underlying <code>@testcase</code>s. Thus, it's a good practice to put your tests under a <code>@testcase</code> (instead of putting them under a <code>@testset</code>), as any tests defined under a <code>@testset</code> are executed sequentially at scheduling time.</p>
<p dir="auto">After scheduling the tests (which happens by running the topmost <code>@testset</code>), the tests will run using the specified test-runner. You pass your desired test-runner as a keyword argument <code>runner</code> to the topmost <code>@testset</code> or <code>@testcase</code>. Here are the available test runners:</p>
<ul dir="auto">
<li><code>SequentialTestRunner</code>: this is the default test-runner, which behaves similarly to <code>Base.Test</code> and runs all your tests sequentially using a single thread of execution.</li>
<li><code>ShuffledTestRunner</code>: similar to <code>SequentialTestRunner</code>, it runs the tests using a single thread of execution, but it shuffles them and runs them in random order.</li>
<li><code>ParallelTestRunner</code>: runs your tests in parallel using multiple threads of execution. It runs the tests with all available Julia threads. Please refer to the <a href="https://docs.julialang.org/en/v1/manual/multi-threading/#Starting-Julia-with-multiple-threads" rel="nofollow">Julia documentation</a> to know about the possible ways to start Julia with multiple threads.</li>
</ul>
<p dir="auto">In the end, the test results are printed to the standard output (similar to <code>Base.Test</code>), but you can also get the XUnit/JUnit style of test reports (in <code>XML</code> format) by passing the <code>xml_report=true</code> keyword argument to the topmost <code>@testset</code> or <code>@testcase</code>. After calling this function on your test-suite, the results are available in a file determined by the <code>xml_output(testset)</code> function.</p>
<p dir="auto">Here is an example that tries to show the above explanations in practice:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using XUnit

function fn_throws()
    throw(KeyError(&quot;Test error!&quot;))
end

function fn_nothrows()
    return nothing
end

@testset runner=ParallelTestRunner() xml_report=true failure_handler=(testset) -&gt; run(`open ./$(xml_output(testset))`) &quot;Top Parent&quot; begin
    @testset &quot;XTest 1&quot; begin
        @testcase &quot;Child XTest 1&quot; begin
            @test 1 == 1
            @test 2 == 2
            @test 3 == 3
        end
        @testcase &quot;Child XTest 3&quot; begin
            test_println(&quot;You should only see me as part of Child XTest 3 output!&quot;)
            @test 4 == 4
            @test 5 == 5
            @test 2 * 2 == 5
            @test fn_throws()
            @test 9 == 9
            @test 10 == 10
        end
    end
    @testset &quot;XTest 2&quot; begin
        @testcase &quot;Child XTest 4&quot; begin
            @test 6 == 6
            @test 7 == 7
            @test_throws KeyError fn_throws()
            @test_throws KeyError fn_nothrows()
            @test 8 == 8
            @test 11 == 11
        end
        @testcase &quot;Child XTest 5&quot; begin
            @test 11 == 11
            @test 12 == 12
            @test 13 == 13
        end
        @testcase &quot;Child XTest 12&quot; begin
            @test 1211 == 1211
            @test 1212 == 1212 * 2
            @test 1213 == 1213
        end
    end
    @testset &quot;XTest 3&quot; begin
        @testset &quot;Child XTest 3&quot; begin
            @testcase &quot;Child XTest 3-1&quot; begin
                x = 31
                y = 52
                @assert 5 == 9
                @test x == 31
                @test 32 == 32
                @test y == 33
            end
            @testcase &quot;Child XTest 3-2&quot; begin
                @test 36 == 36
                @test 37 == 37
                @test fn_throws()
                @test 38 == 38
            end
        end
    end
end"><pre><span class="pl-k">using</span> XUnit

<span class="pl-k">function</span> <span class="pl-en">fn_throws</span>()
    <span class="pl-c1">throw</span>(<span class="pl-c1">KeyError</span>(<span class="pl-s"><span class="pl-pds">"</span>Test error!<span class="pl-pds">"</span></span>))
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">fn_nothrows</span>()
    <span class="pl-k">return</span> <span class="pl-c1">nothing</span>
<span class="pl-k">end</span>

<span class="pl-c1">@testset</span> runner<span class="pl-k">=</span><span class="pl-c1">ParallelTestRunner</span>() xml_report<span class="pl-k">=</span><span class="pl-c1">true</span> failure_handler<span class="pl-k">=</span>(testset) <span class="pl-k">-&gt;</span> <span class="pl-c1">run</span>(<span class="pl-s"><span class="pl-pds">`</span>open ./$(xml_output(testset))<span class="pl-pds">`</span></span>) <span class="pl-s"><span class="pl-pds">"</span>Top Parent<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
    <span class="pl-c1">@testset</span> <span class="pl-s"><span class="pl-pds">"</span>XTest 1<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@testcase</span> <span class="pl-s"><span class="pl-pds">"</span>Child XTest 1<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">1</span> <span class="pl-k">==</span> <span class="pl-c1">1</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">2</span> <span class="pl-k">==</span> <span class="pl-c1">2</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">3</span> <span class="pl-k">==</span> <span class="pl-c1">3</span>
        <span class="pl-k">end</span>
        <span class="pl-c1">@testcase</span> <span class="pl-s"><span class="pl-pds">"</span>Child XTest 3<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
            <span class="pl-c1">test_println</span>(<span class="pl-s"><span class="pl-pds">"</span>You should only see me as part of Child XTest 3 output!<span class="pl-pds">"</span></span>)
            <span class="pl-c1">@test</span> <span class="pl-c1">4</span> <span class="pl-k">==</span> <span class="pl-c1">4</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">5</span> <span class="pl-k">==</span> <span class="pl-c1">5</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">==</span> <span class="pl-c1">5</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">fn_throws</span>()
            <span class="pl-c1">@test</span> <span class="pl-c1">9</span> <span class="pl-k">==</span> <span class="pl-c1">9</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">10</span> <span class="pl-k">==</span> <span class="pl-c1">10</span>
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
    <span class="pl-c1">@testset</span> <span class="pl-s"><span class="pl-pds">"</span>XTest 2<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@testcase</span> <span class="pl-s"><span class="pl-pds">"</span>Child XTest 4<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">6</span> <span class="pl-k">==</span> <span class="pl-c1">6</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">7</span> <span class="pl-k">==</span> <span class="pl-c1">7</span>
            <span class="pl-c1">@test_throws</span> KeyError <span class="pl-c1">fn_throws</span>()
            <span class="pl-c1">@test_throws</span> KeyError <span class="pl-c1">fn_nothrows</span>()
            <span class="pl-c1">@test</span> <span class="pl-c1">8</span> <span class="pl-k">==</span> <span class="pl-c1">8</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">11</span> <span class="pl-k">==</span> <span class="pl-c1">11</span>
        <span class="pl-k">end</span>
        <span class="pl-c1">@testcase</span> <span class="pl-s"><span class="pl-pds">"</span>Child XTest 5<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">11</span> <span class="pl-k">==</span> <span class="pl-c1">11</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">12</span> <span class="pl-k">==</span> <span class="pl-c1">12</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">13</span> <span class="pl-k">==</span> <span class="pl-c1">13</span>
        <span class="pl-k">end</span>
        <span class="pl-c1">@testcase</span> <span class="pl-s"><span class="pl-pds">"</span>Child XTest 12<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">1211</span> <span class="pl-k">==</span> <span class="pl-c1">1211</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">1212</span> <span class="pl-k">==</span> <span class="pl-c1">1212</span> <span class="pl-k">*</span> <span class="pl-c1">2</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">1213</span> <span class="pl-k">==</span> <span class="pl-c1">1213</span>
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
    <span class="pl-c1">@testset</span> <span class="pl-s"><span class="pl-pds">"</span>XTest 3<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@testset</span> <span class="pl-s"><span class="pl-pds">"</span>Child XTest 3<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
            <span class="pl-c1">@testcase</span> <span class="pl-s"><span class="pl-pds">"</span>Child XTest 3-1<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
                x <span class="pl-k">=</span> <span class="pl-c1">31</span>
                y <span class="pl-k">=</span> <span class="pl-c1">52</span>
                <span class="pl-c1">@assert</span> <span class="pl-c1">5</span> <span class="pl-k">==</span> <span class="pl-c1">9</span>
                <span class="pl-c1">@test</span> x <span class="pl-k">==</span> <span class="pl-c1">31</span>
                <span class="pl-c1">@test</span> <span class="pl-c1">32</span> <span class="pl-k">==</span> <span class="pl-c1">32</span>
                <span class="pl-c1">@test</span> y <span class="pl-k">==</span> <span class="pl-c1">33</span>
            <span class="pl-k">end</span>
            <span class="pl-c1">@testcase</span> <span class="pl-s"><span class="pl-pds">"</span>Child XTest 3-2<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
                <span class="pl-c1">@test</span> <span class="pl-c1">36</span> <span class="pl-k">==</span> <span class="pl-c1">36</span>
                <span class="pl-c1">@test</span> <span class="pl-c1">37</span> <span class="pl-k">==</span> <span class="pl-c1">37</span>
                <span class="pl-c1">@test</span> <span class="pl-c1">fn_throws</span>()
                <span class="pl-c1">@test</span> <span class="pl-c1">38</span> <span class="pl-k">==</span> <span class="pl-c1">38</span>
            <span class="pl-k">end</span>
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">Sample output:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Running Top Parent tests...
  Running Top Parent/XTest 1 tests...
    Scheduling Top Parent/XTest 1/Child XTest 1 tests...
    Scheduling Top Parent/XTest 1/Child XTest 3 tests...
  Running Top Parent/XTest 2 tests...
    Scheduling Top Parent/XTest 2/Child XTest 4 tests...
    Scheduling Top Parent/XTest 2/Child XTest 5 tests...
    Scheduling Top Parent/XTest 2/Child XTest 12 tests...
  Running Top Parent/XTest 3 tests...
    Running Top Parent/XTest 3/Child XTest 3 tests...
      Scheduling Top Parent/XTest 3/Child XTest 3/Child XTest 3-1 tests...
      Scheduling Top Parent/XTest 3/Child XTest 3/Child XTest 3-2 tests...
-&gt; Running Top Parent/XTest 3/Child XTest 3/Child XTest 3-2 test-case (on tid=1)...
-&gt; Running Top Parent/XTest 3/Child XTest 3/Child XTest 3-1 test-case (on tid=1)...
-&gt; Running Top Parent/XTest 2/Child XTest 12 test-case (on tid=1)...
-&gt; Running Top Parent/XTest 2/Child XTest 5 test-case (on tid=1)...
-&gt; Running Top Parent/XTest 2/Child XTest 4 test-case (on tid=1)...
-&gt; Running Top Parent/XTest 1/Child XTest 3 test-case (on tid=1)...
-&gt; Running Top Parent/XTest 1/Child XTest 1 test-case (on tid=1)...
Child XTest 3: Test Failed at ./XUnit/test/unittests.jl:19
  Expression: 2 * 2 == 5
   Evaluated: 4 == 5
Child XTest 3: Error During Test at ./XUnit/test/unittests.jl:20
  Test threw exception
  Expression: fn_throws()
  KeyError: key &quot;Test error!&quot; not found
  Stacktrace:
   [1] fn_throws() at ./XUnit/test/unittests.jl:3
   [2] macro expansion at ./XUnit/test/unittests.jl:20 [inlined]
   [3] (::var&quot;#4#19&quot;)() at ./XUnit/src/XUnit.jl:590
   [4] run_single_testcase(::Array{XUnit.AsyncTestSuite,1}, ::XUnit._AsyncTestCase{XUnit.AsyncTestSuite}) at ./XUnit/src/test-runners.jl:278
   [5] macro expansion at ./XUnit/src/test-runners.jl:183 [inlined]
   [6] (::XUnit.var&quot;#54#threadsfor_fun#22&quot;{Array{XUnit.ScheduledTest,1},Base.Threads.Atomic{Int64},Bool,Nothing,UnitRange{Int64}})(::Bool) at ./threadingconstructs.jl:81
   [7] (::XUnit.var&quot;#54#threadsfor_fun#22&quot;{Array{XUnit.ScheduledTest,1},Base.Threads.Atomic{Int64},Bool,Nothing,UnitRange{Int64}})() at ./threadingconstructs.jl:48

Child XTest 4: Test Failed at ./XUnit/test/unittests.jl:30
  Expression: fn_nothrows()
    Expected: KeyError
  No exception thrown
Child XTest 12: Test Failed at ./XUnit/test/unittests.jl:41
  Expression: 1212 == 1212 * 2
   Evaluated: 1212 == 2424
Child XTest 3-1: Error During Test at ./XUnit/test/unittests.jl:48
  Got exception outside of a @test
  AssertionError: 5 == 9
  Stacktrace:
   [1] macro expansion at ./XUnit/test/unittests.jl:50 [inlined]
   [2] (::var&quot;#12#27&quot;)() at ./XUnit/src/XUnit.jl:590
   [3] run_single_testcase(::Array{XUnit.AsyncTestSuite,1}, ::XUnit._AsyncTestCase{XUnit.AsyncTestSuite}) at ./XUnit/src/test-runners.jl:278
   [4] macro expansion at ./XUnit/src/test-runners.jl:183 [inlined]
   [5] (::XUnit.var&quot;#54#threadsfor_fun#22&quot;{Array{XUnit.ScheduledTest,1},Base.Threads.Atomic{Int64},Bool,Nothing,UnitRange{Int64}})(::Bool) at ./threadingconstructs.jl:81
   [6] (::XUnit.var&quot;#54#threadsfor_fun#22&quot;{Array{XUnit.ScheduledTest,1},Base.Threads.Atomic{Int64},Bool,Nothing,UnitRange{Int64}})() at ./threadingconstructs.jl:48

Child XTest 3-2: Error During Test at ./XUnit/test/unittests.jl:58
  Test threw exception
  Expression: fn_throws()
  KeyError: key &quot;Test error!&quot; not found
  Stacktrace:
   [1] fn_throws() at ./XUnit/test/unittests.jl:3
   [2] macro expansion at ./XUnit/test/unittests.jl:58 [inlined]
   [3] (::var&quot;#14#29&quot;)() at ./XUnit/src/XUnit.jl:590
   [4] run_single_testcase(::Array{XUnit.AsyncTestSuite,1}, ::XUnit._AsyncTestCase{XUnit.AsyncTestSuite}) at ./XUnit/src/test-runners.jl:278
   [5] macro expansion at ./XUnit/src/test-runners.jl:183 [inlined]
   [6] (::XUnit.var&quot;#54#threadsfor_fun#22&quot;{Array{XUnit.ScheduledTest,1},Base.Threads.Atomic{Int64},Bool,Nothing,UnitRange{Int64}})(::Bool) at ./threadingconstructs.jl:81
   [7] (::XUnit.var&quot;#54#threadsfor_fun#22&quot;{Array{XUnit.ScheduledTest,1},Base.Threads.Atomic{Int64},Bool,Nothing,UnitRange{Int64}})() at ./threadingconstructs.jl:48

Test Summary:         | Pass  Fail  Error  Total
Top Parent            |   20     3      3     26
  XTest 1             |    7     1      1      9
    Child XTest 1     |    3                   3
    Child XTest 3     |    4     1      1      6
  XTest 2             |   10     2            12
    Child XTest 4     |    5     1             6
    Child XTest 5     |    3                   3
    Child XTest 12    |    2     1             3
  XTest 3             |    3            2      5
    Child XTest 3     |    3            2      5
      Child XTest 3-1 |                 1      1
      Child XTest 3-2 |    3            1      4
ERROR: LoadError: Some tests did not pass: 20 passed, 3 failed, 3 errored, 0 broken.
in expression starting at ./XUnit/test/unittests.jl:8"><pre>Running Top Parent tests<span class="pl-k">...</span>
  Running Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">1</span> tests<span class="pl-k">...</span>
    Scheduling Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">1</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">1</span> tests<span class="pl-k">...</span>
    Scheduling Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">1</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">3</span> tests<span class="pl-k">...</span>
  Running Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">2</span> tests<span class="pl-k">...</span>
    Scheduling Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">2</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">4</span> tests<span class="pl-k">...</span>
    Scheduling Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">2</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">5</span> tests<span class="pl-k">...</span>
    Scheduling Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">2</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">12</span> tests<span class="pl-k">...</span>
  Running Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">3</span> tests<span class="pl-k">...</span>
    Running Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">3</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">3</span> tests<span class="pl-k">...</span>
      Scheduling Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">3</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">3</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">3</span><span class="pl-k">-</span><span class="pl-c1">1</span> tests<span class="pl-k">...</span>
      Scheduling Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">3</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">3</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">3</span><span class="pl-k">-</span><span class="pl-c1">2</span> tests<span class="pl-k">...</span>
<span class="pl-k">-&gt;</span> Running Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">3</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">3</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">3</span><span class="pl-k">-</span><span class="pl-c1">2</span> test<span class="pl-k">-</span>case (on tid<span class="pl-k">=</span><span class="pl-c1">1</span>)<span class="pl-k">.</span><span class="pl-k">..</span>
<span class="pl-k">-&gt;</span> Running Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">3</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">3</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">3</span><span class="pl-k">-</span><span class="pl-c1">1</span> test<span class="pl-k">-</span>case (on tid<span class="pl-k">=</span><span class="pl-c1">1</span>)<span class="pl-k">.</span><span class="pl-k">..</span>
<span class="pl-k">-&gt;</span> Running Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">2</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">12</span> test<span class="pl-k">-</span>case (on tid<span class="pl-k">=</span><span class="pl-c1">1</span>)<span class="pl-k">.</span><span class="pl-k">..</span>
<span class="pl-k">-&gt;</span> Running Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">2</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">5</span> test<span class="pl-k">-</span>case (on tid<span class="pl-k">=</span><span class="pl-c1">1</span>)<span class="pl-k">.</span><span class="pl-k">..</span>
<span class="pl-k">-&gt;</span> Running Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">2</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">4</span> test<span class="pl-k">-</span>case (on tid<span class="pl-k">=</span><span class="pl-c1">1</span>)<span class="pl-k">.</span><span class="pl-k">..</span>
<span class="pl-k">-&gt;</span> Running Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">1</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">3</span> test<span class="pl-k">-</span>case (on tid<span class="pl-k">=</span><span class="pl-c1">1</span>)<span class="pl-k">.</span><span class="pl-k">..</span>
<span class="pl-k">-&gt;</span> Running Top Parent<span class="pl-k">/</span>XTest <span class="pl-c1">1</span><span class="pl-k">/</span>Child XTest <span class="pl-c1">1</span> test<span class="pl-k">-</span>case (on tid<span class="pl-k">=</span><span class="pl-c1">1</span>)<span class="pl-k">.</span><span class="pl-k">..</span>
Child XTest <span class="pl-c1">3</span><span class="pl-k">:</span> Test Failed at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>test<span class="pl-k">/</span>unittests<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">19</span>
  Expression<span class="pl-k">:</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">==</span> <span class="pl-c1">5</span>
   Evaluated<span class="pl-k">:</span> <span class="pl-c1">4</span> <span class="pl-k">==</span> <span class="pl-c1">5</span>
Child XTest <span class="pl-c1">3</span><span class="pl-k">:</span> Error During Test at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>test<span class="pl-k">/</span>unittests<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">20</span>
  Test threw exception
  Expression<span class="pl-k">:</span> <span class="pl-c1">fn_throws</span>()
  KeyError<span class="pl-k">:</span> key <span class="pl-s"><span class="pl-pds">"</span>Test error!<span class="pl-pds">"</span></span> not found
  Stacktrace<span class="pl-k">:</span>
   [<span class="pl-c1">1</span>] <span class="pl-c1">fn_throws</span>() at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>test<span class="pl-k">/</span>unittests<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">3</span>
   [<span class="pl-c1">2</span>] <span class="pl-k">macro</span> expansion at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>test<span class="pl-k">/</span>unittests<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">20</span> [inlined]
   [<span class="pl-c1">3</span>] (<span class="pl-k">::</span><span class="pl-c1">var"#4#19"</span>)() at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>src<span class="pl-k">/</span>XUnit<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">590</span>
   [<span class="pl-c1">4</span>] <span class="pl-c1">run_single_testcase</span>(<span class="pl-k">::</span><span class="pl-c1">Array{XUnit.AsyncTestSuite,1}</span>, <span class="pl-k">::</span><span class="pl-c1">XUnit._AsyncTestCase{XUnit.AsyncTestSuite}</span>) at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>src<span class="pl-k">/</span>test<span class="pl-k">-</span>runners<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">278</span>
   [<span class="pl-c1">5</span>] <span class="pl-k">macro</span> expansion at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>src<span class="pl-k">/</span>test<span class="pl-k">-</span>runners<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">183</span> [inlined]
   [<span class="pl-c1">6</span>] (<span class="pl-k">::</span><span class="pl-c1">XUnit.var"#54#threadsfor_fun#22"</span>{Array{XUnit<span class="pl-k">.</span>ScheduledTest,<span class="pl-c1">1</span>},Base<span class="pl-k">.</span>Threads<span class="pl-k">.</span>Atomic{Int64},Bool,Nothing,UnitRange{Int64}})(<span class="pl-k">::</span><span class="pl-c1">Bool</span>) at <span class="pl-k">./</span>threadingconstructs<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">81</span>
   [<span class="pl-c1">7</span>] (<span class="pl-k">::</span><span class="pl-c1">XUnit.var"#54#threadsfor_fun#22"</span>{Array{XUnit<span class="pl-k">.</span>ScheduledTest,<span class="pl-c1">1</span>},Base<span class="pl-k">.</span>Threads<span class="pl-k">.</span>Atomic{Int64},Bool,Nothing,UnitRange{Int64}})() at <span class="pl-k">./</span>threadingconstructs<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">48</span>

Child XTest <span class="pl-c1">4</span><span class="pl-k">:</span> Test Failed at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>test<span class="pl-k">/</span>unittests<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">30</span>
  Expression<span class="pl-k">:</span> <span class="pl-c1">fn_nothrows</span>()
    Expected<span class="pl-k">:</span> KeyError
  No exception thrown
Child XTest <span class="pl-c1">12</span><span class="pl-k">:</span> Test Failed at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>test<span class="pl-k">/</span>unittests<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">41</span>
  Expression<span class="pl-k">:</span> <span class="pl-c1">1212</span> <span class="pl-k">==</span> <span class="pl-c1">1212</span> <span class="pl-k">*</span> <span class="pl-c1">2</span>
   Evaluated<span class="pl-k">:</span> <span class="pl-c1">1212</span> <span class="pl-k">==</span> <span class="pl-c1">2424</span>
Child XTest <span class="pl-c1">3</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span> Error During Test at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>test<span class="pl-k">/</span>unittests<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">48</span>
  Got exception outside of a <span class="pl-c1">@test</span>
  AssertionError<span class="pl-k">:</span> <span class="pl-c1">5</span> <span class="pl-k">==</span> <span class="pl-c1">9</span>
  Stacktrace<span class="pl-k">:</span>
   [<span class="pl-c1">1</span>] <span class="pl-k">macro</span> expansion at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>test<span class="pl-k">/</span>unittests<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">50</span> [inlined]
   [<span class="pl-c1">2</span>] (<span class="pl-k">::</span><span class="pl-c1">var"#12#27"</span>)() at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>src<span class="pl-k">/</span>XUnit<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">590</span>
   [<span class="pl-c1">3</span>] <span class="pl-c1">run_single_testcase</span>(<span class="pl-k">::</span><span class="pl-c1">Array{XUnit.AsyncTestSuite,1}</span>, <span class="pl-k">::</span><span class="pl-c1">XUnit._AsyncTestCase{XUnit.AsyncTestSuite}</span>) at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>src<span class="pl-k">/</span>test<span class="pl-k">-</span>runners<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">278</span>
   [<span class="pl-c1">4</span>] <span class="pl-k">macro</span> expansion at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>src<span class="pl-k">/</span>test<span class="pl-k">-</span>runners<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">183</span> [inlined]
   [<span class="pl-c1">5</span>] (<span class="pl-k">::</span><span class="pl-c1">XUnit.var"#54#threadsfor_fun#22"</span>{Array{XUnit<span class="pl-k">.</span>ScheduledTest,<span class="pl-c1">1</span>},Base<span class="pl-k">.</span>Threads<span class="pl-k">.</span>Atomic{Int64},Bool,Nothing,UnitRange{Int64}})(<span class="pl-k">::</span><span class="pl-c1">Bool</span>) at <span class="pl-k">./</span>threadingconstructs<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">81</span>
   [<span class="pl-c1">6</span>] (<span class="pl-k">::</span><span class="pl-c1">XUnit.var"#54#threadsfor_fun#22"</span>{Array{XUnit<span class="pl-k">.</span>ScheduledTest,<span class="pl-c1">1</span>},Base<span class="pl-k">.</span>Threads<span class="pl-k">.</span>Atomic{Int64},Bool,Nothing,UnitRange{Int64}})() at <span class="pl-k">./</span>threadingconstructs<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">48</span>

Child XTest <span class="pl-c1">3</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">:</span> Error During Test at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>test<span class="pl-k">/</span>unittests<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">58</span>
  Test threw exception
  Expression<span class="pl-k">:</span> <span class="pl-c1">fn_throws</span>()
  KeyError<span class="pl-k">:</span> key <span class="pl-s"><span class="pl-pds">"</span>Test error!<span class="pl-pds">"</span></span> not found
  Stacktrace<span class="pl-k">:</span>
   [<span class="pl-c1">1</span>] <span class="pl-c1">fn_throws</span>() at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>test<span class="pl-k">/</span>unittests<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">3</span>
   [<span class="pl-c1">2</span>] <span class="pl-k">macro</span> expansion at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>test<span class="pl-k">/</span>unittests<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">58</span> [inlined]
   [<span class="pl-c1">3</span>] (<span class="pl-k">::</span><span class="pl-c1">var"#14#29"</span>)() at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>src<span class="pl-k">/</span>XUnit<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">590</span>
   [<span class="pl-c1">4</span>] <span class="pl-c1">run_single_testcase</span>(<span class="pl-k">::</span><span class="pl-c1">Array{XUnit.AsyncTestSuite,1}</span>, <span class="pl-k">::</span><span class="pl-c1">XUnit._AsyncTestCase{XUnit.AsyncTestSuite}</span>) at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>src<span class="pl-k">/</span>test<span class="pl-k">-</span>runners<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">278</span>
   [<span class="pl-c1">5</span>] <span class="pl-k">macro</span> expansion at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>src<span class="pl-k">/</span>test<span class="pl-k">-</span>runners<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">183</span> [inlined]
   [<span class="pl-c1">6</span>] (<span class="pl-k">::</span><span class="pl-c1">XUnit.var"#54#threadsfor_fun#22"</span>{Array{XUnit<span class="pl-k">.</span>ScheduledTest,<span class="pl-c1">1</span>},Base<span class="pl-k">.</span>Threads<span class="pl-k">.</span>Atomic{Int64},Bool,Nothing,UnitRange{Int64}})(<span class="pl-k">::</span><span class="pl-c1">Bool</span>) at <span class="pl-k">./</span>threadingconstructs<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">81</span>
   [<span class="pl-c1">7</span>] (<span class="pl-k">::</span><span class="pl-c1">XUnit.var"#54#threadsfor_fun#22"</span>{Array{XUnit<span class="pl-k">.</span>ScheduledTest,<span class="pl-c1">1</span>},Base<span class="pl-k">.</span>Threads<span class="pl-k">.</span>Atomic{Int64},Bool,Nothing,UnitRange{Int64}})() at <span class="pl-k">./</span>threadingconstructs<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">48</span>

Test Summary<span class="pl-k">:</span>         <span class="pl-k">|</span> Pass  Fail  Error  Total
Top Parent            <span class="pl-k">|</span>   <span class="pl-c1">20</span>     <span class="pl-c1">3</span>      <span class="pl-c1">3</span>     <span class="pl-c1">26</span>
  XTest <span class="pl-c1">1</span>             <span class="pl-k">|</span>    <span class="pl-c1">7</span>     <span class="pl-c1">1</span>      <span class="pl-c1">1</span>      <span class="pl-c1">9</span>
    Child XTest <span class="pl-c1">1</span>     <span class="pl-k">|</span>    <span class="pl-c1">3</span>                   <span class="pl-c1">3</span>
    Child XTest <span class="pl-c1">3</span>     <span class="pl-k">|</span>    <span class="pl-c1">4</span>     <span class="pl-c1">1</span>      <span class="pl-c1">1</span>      <span class="pl-c1">6</span>
  XTest <span class="pl-c1">2</span>             <span class="pl-k">|</span>   <span class="pl-c1">10</span>     <span class="pl-c1">2</span>            <span class="pl-c1">12</span>
    Child XTest <span class="pl-c1">4</span>     <span class="pl-k">|</span>    <span class="pl-c1">5</span>     <span class="pl-c1">1</span>             <span class="pl-c1">6</span>
    Child XTest <span class="pl-c1">5</span>     <span class="pl-k">|</span>    <span class="pl-c1">3</span>                   <span class="pl-c1">3</span>
    Child XTest <span class="pl-c1">12</span>    <span class="pl-k">|</span>    <span class="pl-c1">2</span>     <span class="pl-c1">1</span>             <span class="pl-c1">3</span>
  XTest <span class="pl-c1">3</span>             <span class="pl-k">|</span>    <span class="pl-c1">3</span>            <span class="pl-c1">2</span>      <span class="pl-c1">5</span>
    Child XTest <span class="pl-c1">3</span>     <span class="pl-k">|</span>    <span class="pl-c1">3</span>            <span class="pl-c1">2</span>      <span class="pl-c1">5</span>
      Child XTest <span class="pl-c1">3</span><span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">|</span>                 <span class="pl-c1">1</span>      <span class="pl-c1">1</span>
      Child XTest <span class="pl-c1">3</span><span class="pl-k">-</span><span class="pl-c1">2</span> <span class="pl-k">|</span>    <span class="pl-c1">3</span>            <span class="pl-c1">1</span>      <span class="pl-c1">4</span>
ERROR<span class="pl-k">:</span> LoadError<span class="pl-k">:</span> Some tests did not pass<span class="pl-k">:</span> <span class="pl-c1">20</span> passed, <span class="pl-c1">3</span> failed, <span class="pl-c1">3</span> errored, <span class="pl-c1">0</span> broken.
in expression starting at <span class="pl-k">./</span>XUnit<span class="pl-k">/</span>test<span class="pl-k">/</span>unittests<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">8</span></pre></div>
<h2 dir="auto"><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing</h2>
<p dir="auto">Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>
<p dir="auto">Please make sure to update the tests as appropriate.</p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto"><a href="https://choosealicense.com/licenses/mit/" rel="nofollow">MIT</a></p>
<h2 dir="auto"><a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Authors</h2>
<ul dir="auto">
<li><a href="mailto:mohammad.dashti%5Bat%5Drelational%5Bdot%5Dai">Mohammad Dashti</a></li>
<li><a href="mailto:todd.green%5Bat%5Drelational%5Bdot%5Dai">Todd J. Green</a></li>
</ul>
</article></div>