<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-ararforecast" class="anchor" aria-hidden="true" href="#ararforecast"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ArarForecast</h1>
<p dir="auto">Time series forecasting using ARAR Algorithm.
Ref: <a href="https://link.springer.com/book/10.1007/978-3-319-29854-2" rel="nofollow">Introduction to Time Series and Forecasting, Chapter: 10.1.The ARAR Algorithm</a> (Peter J. Brockwell Richard A. Davis (2016) )</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Pkg
 # dev version
Pkg.add(url = &quot;https://github.com/Akai01/ArarForecast.jl.git&quot;)"><pre class="notranslate"><code>using Pkg
 # dev version
Pkg.add(url = "https://github.com/Akai01/ArarForecast.jl.git")
</code></pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h4 dir="auto"><a id="user-content-load-packages" class="anchor" aria-hidden="true" href="#load-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Load packages</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using CSV
using Downloads
using DataFrames
using TimeSeries
using Dates
using ArarForecast"><pre class="notranslate"><code>using CSV
using Downloads
using DataFrames
using TimeSeries
using Dates
using ArarForecast
</code></pre></div>
<h4 dir="auto"><a id="user-content-download-and-load-the-data" class="anchor" aria-hidden="true" href="#download-and-load-the-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Download and load the data</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="dta = CSV.File(Downloads.download(&quot;https://raw.githubusercontent.com/Akai01/example-time-series-datasets/main/Data/AirPassengers.csv&quot;)) |&gt; DataFrame;
train = filter(row -&gt; row[&quot;ds&quot;] &lt; Date(1960,1,1), dta);
test = filter(row -&gt; row[&quot;ds&quot;] &gt;= Date(1960,1,1), dta);"><pre class="notranslate"><code>dta = CSV.File(Downloads.download("https://raw.githubusercontent.com/Akai01/example-time-series-datasets/main/Data/AirPassengers.csv")) |&gt; DataFrame;
train = filter(row -&gt; row["ds"] &lt; Date(1960,1,1), dta);
test = filter(row -&gt; row["ds"] &gt;= Date(1960,1,1), dta);
</code></pre></div>
<h4 dir="auto"><a id="user-content-create-a-timearray" class="anchor" aria-hidden="true" href="#create-a-timearray"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Create a TimeArray:</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="train = (date = train[:,&quot;ds&quot;], data = train[:, &quot;y&quot;]);
train = TimeArray(train; timestamp = :date);
test = (date = test[:,&quot;ds&quot;], test = test[:, &quot;y&quot;]);
test = TimeArray(test; timestamp = :date);
length(test)

## 12"><pre class="notranslate"><code>train = (date = train[:,"ds"], data = train[:, "y"]);
train = TimeArray(train; timestamp = :date);
test = (date = test[:,"ds"], test = test[:, "y"]);
test = TimeArray(test; timestamp = :date);
length(test)

## 12
</code></pre></div>
<p dir="auto">There are different ways to create a <code>TimeArray</code> see
<a href="https://juliastats.org/TimeSeries.jl/latest/timearray/" rel="nofollow">TimeSeries.jl</a>
package.</p>
<h4 dir="auto"><a id="user-content-forecasting" class="anchor" aria-hidden="true" href="#forecasting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Forecasting</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="fc = arar(;y = train, h = 12, freq = Month, level = [80, 95]);
typeof(fc)

## ArarForecast.Forecast"><pre class="notranslate"><code>fc = arar(;y = train, h = 12, freq = Month, level = [80, 95]);
typeof(fc)

## ArarForecast.Forecast
</code></pre></div>
<h4 dir="auto"><a id="user-content-plot-the-forecast-object" class="anchor" aria-hidden="true" href="#plot-the-forecast-object"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plot the Forecast Object</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="p = ArarForecast.plot(;object = fc)

## Plot{Plots.GRBackend() n=6}

using Plots
Plots.plot(p, test)"><pre class="notranslate"><code>p = ArarForecast.plot(;object = fc)

## Plot{Plots.GRBackend() n=6}

using Plots
Plots.plot(p, test)
</code></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./.github/images/Plots2-J1.png"><img src="./.github/images/Plots2-J1.png" width="600" style="max-width: 100%;"></a></p>
<h4 dir="auto"><a id="user-content-the-accuracy" class="anchor" aria-hidden="true" href="#the-accuracy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>The accuracy</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="accuracy(fc, test)

## (me = [-11.275515996902792], mae = [13.065720800742184], mape = [2.8577953269438026], mdae = [8.718991617233343], rmse = 18.21764747304158)"><pre class="notranslate"><code>accuracy(fc, test)

## (me = [-11.275515996902792], mae = [13.065720800742184], mape = [2.8577953269438026], mdae = [8.718991617233343], rmse = 18.21764747304158)
</code></pre></div>
<h3 dir="auto"><a id="user-content-benchmark-with-r-forecast-package-autoarima" class="anchor" aria-hidden="true" href="#benchmark-with-r-forecast-package-autoarima"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Benchmark with R forecast package auto.arima</h3>
<p dir="auto">Load the data in and create a ts object</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="library(magrittr)
dta = read.csv(&quot;https://raw.githubusercontent.com/Akai01/example-time-series-datasets/main/Data/AirPassengers.csv&quot;)%&gt;%
  dplyr::mutate(ds = as.Date(ds))
head(dta)

##           ds   y
## 1 1949-01-31 112
## 2 1949-02-28 118
## 3 1949-03-31 132
## 4 1949-04-30 129
## 5 1949-05-31 121
## 6 1949-06-30 135

train &lt;- dta%&gt;%dplyr::filter(ds &lt; as.Date(&quot;1960-01-01&quot;))

train_ts &lt;- train%&gt;%dplyr::select(-ds)%&gt;%
  ts(start = c(1949, 1), frequency = 12)

test &lt;- dta%&gt;%dplyr::filter(ds &gt;= as.Date(&quot;1960-01-01&quot;))

test_ts &lt;- test%&gt;%dplyr::select(-ds)%&gt;%
  ts(start = c(1960, 1), frequency = 12)"><pre class="notranslate"><code>library(magrittr)
dta = read.csv("https://raw.githubusercontent.com/Akai01/example-time-series-datasets/main/Data/AirPassengers.csv")%&gt;%
  dplyr::mutate(ds = as.Date(ds))
head(dta)

##           ds   y
## 1 1949-01-31 112
## 2 1949-02-28 118
## 3 1949-03-31 132
## 4 1949-04-30 129
## 5 1949-05-31 121
## 6 1949-06-30 135

train &lt;- dta%&gt;%dplyr::filter(ds &lt; as.Date("1960-01-01"))

train_ts &lt;- train%&gt;%dplyr::select(-ds)%&gt;%
  ts(start = c(1949, 1), frequency = 12)

test &lt;- dta%&gt;%dplyr::filter(ds &gt;= as.Date("1960-01-01"))

test_ts &lt;- test%&gt;%dplyr::select(-ds)%&gt;%
  ts(start = c(1960, 1), frequency = 12)
</code></pre></div>
<h4 dir="auto"><a id="user-content-train-and-forecast-12-months-ahead" class="anchor" aria-hidden="true" href="#train-and-forecast-12-months-ahead"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Train and forecast 12 months ahead:</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="fc &lt;- forecast::auto.arima(train_ts)%&gt;%
  forecast::forecast(h = 12)

## Registered S3 method overwritten by 'quantmod':
##   method            from
##   as.zoo.data.frame zoo"><pre class="notranslate"><code>fc &lt;- forecast::auto.arima(train_ts)%&gt;%
  forecast::forecast(h = 12)

## Registered S3 method overwritten by 'quantmod':
##   method            from
##   as.zoo.data.frame zoo
</code></pre></div>
<h4 dir="auto"><a id="user-content-plot-the-forecast" class="anchor" aria-hidden="true" href="#plot-the-forecast"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plot the forecast</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="forecast::autoplot(fc) + forecast::autolayer(test_ts)"><pre class="notranslate"><code>forecast::autoplot(fc) + forecast::autolayer(test_ts)
</code></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./.github/images/plotsR-1.png"><img src="./.github/images/plotsR-1.png" alt="" style="max-width: 100%;"></a></p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="forecast::accuracy(fc$mean, test_ts)

##                 ME    RMSE      MAE       MPE     MAPE       ACF1 Theil's U
## Test set -16.98639 23.9317 18.52768 -3.933491 4.182395 0.04802038 0.5336134"><pre class="notranslate"><code>forecast::accuracy(fc$mean, test_ts)

##                 ME    RMSE      MAE       MPE     MAPE       ACF1 Theil's U
## Test set -16.98639 23.9317 18.52768 -3.933491 4.182395 0.04802038 0.5336134
</code></pre></div>
<h4 dir="auto"><a id="user-content-accuracy-benchmark-r-forecastautoarima-418-vs-julia-ararforecast-285" class="anchor" aria-hidden="true" href="#accuracy-benchmark-r-forecastautoarima-418-vs-julia-ararforecast-285"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Accuracy Benchmark: R forecast::auto.arima 4.18 vs Julia ArarForecast 2.85</h4>
<h2 dir="auto"><a id="user-content-how-does-the-arar-algorithm-work" class="anchor" aria-hidden="true" href="#how-does-the-arar-algorithm-work"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How does the ARAR algorithm Work?</h2>
<h3 dir="auto"><a id="user-content-memory-shortening" class="anchor" aria-hidden="true" href="#memory-shortening"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Memory Shortening</h3>
<p dir="auto">The ARAR algorithm applies a memory-shortening transformation if the
underlying process of a given time series
<em>Y</em><sub><em>t</em></sub>, <em>t</em> = 1, 2, ..., <em>n</em> is “long-memory” then it fits an
autoregressive model.</p>
<p dir="auto">The algorithm follows five steps to classify <em>Y</em><sub><em>t</em></sub> and take
one of the following three actions:</p>
<ul dir="auto">
<li>L: declare <em>Y</em><sub><em>t</em></sub> as long memory and form
<em>Y</em><sub><em>t</em></sub> by
<em>Ỹ</em><sub><em>t</em></sub> = <em>Y</em><sub><em>t</em></sub> − <em>ϕ̂Y</em><sub><em>t</em> − <em>τ̂</em></sub></li>
<li>M: declare <em>Y</em><sub><em>t</em></sub> as moderately long memory and form
<em>Y</em><sub><em>t</em></sub> by
<em>Ỹ</em><sub><em>t</em></sub> = <em>Y</em><sub><em>t</em></sub> − <em>ϕ̂</em><sub>1</sub><em>Y</em><sub><em>t</em> − 1</sub> − <em>ϕ̂</em><sub>2</sub><em>Y</em><sub><em>t</em> − 2</sub></li>
<li>S: declare <em>Y</em><sub><em>t</em></sub> as short memory.</li>
</ul>
<p dir="auto">If <em>Y</em><sub><em>t</em></sub> declared to be <em>L</em> or <em>M</em> then the series
<em>Y</em><sub><em>t</em></sub> is transformed again until. The transformation process
continuous until the transformed series is classified as short memory.
However, the maximum number of transformation process is three, it is
very rare a time series require more than 2.</p>
<ul dir="auto">
<li>
<ol dir="auto">
<li>For each <em>τ</em> = 1, 2, ..., 15, we find the value
ϕ̂(<em>τ̂</em> ) of <em>ϕ̂</em> that minimizes <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/fd55bc5e50a7668ab51d65f2d742d0b4c6df7409368c2bfd06ed34c12dc45be5/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e696d6167653f253543626567696e2537426571756174696f6e2537442673706163653b2673706163653b2673706163653b2673706163653b455252282535437068692c2673706163653b253543746175292673706163653b3d2673706163653b2535436672616325374225354373756d5f253742743d2535437461752673706163653b2b312673706163653b2537442535452537426e2537442673706163653b253542595f253742742537442673706163653b2d2673706163653b2535437068692673706163653b595f253742742d253543746175253744253544253545322673706163653b25374425374225354373756d5f253742743d2535437461752673706163653b2b312673706163653b2537442535452537426e2537442673706163653b595f2537427425374425354525374232253744253744253543656e642537426571756174696f6e253744"><img src="https://camo.githubusercontent.com/fd55bc5e50a7668ab51d65f2d742d0b4c6df7409368c2bfd06ed34c12dc45be5/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e696d6167653f253543626567696e2537426571756174696f6e2537442673706163653b2673706163653b2673706163653b2673706163653b455252282535437068692c2673706163653b253543746175292673706163653b3d2673706163653b2535436672616325374225354373756d5f253742743d2535437461752673706163653b2b312673706163653b2537442535452537426e2537442673706163653b253542595f253742742537442673706163653b2d2673706163653b2535437068692673706163653b595f253742742d253543746175253744253544253545322673706163653b25374425374225354373756d5f253742743d2535437461752673706163653b2b312673706163653b2537442535452537426e2537442673706163653b595f2537427425374425354525374232253744253744253543656e642537426571756174696f6e253744" alt="formula" data-canonical-src="https://latex.codecogs.com/svg.image?%5Cbegin%7Bequation%7D&amp;space;&amp;space;&amp;space;&amp;space;ERR(%5Cphi,&amp;space;%5Ctau)&amp;space;=&amp;space;%5Cfrac%7B%5Csum_%7Bt=%5Ctau&amp;space;+1&amp;space;%7D%5E%7Bn%7D&amp;space;%5BY_%7Bt%7D&amp;space;-&amp;space;%5Cphi&amp;space;Y_%7Bt-%5Ctau%7D%5D%5E2&amp;space;%7D%7B%5Csum_%7Bt=%5Ctau&amp;space;+1&amp;space;%7D%5E%7Bn%7D&amp;space;Y_%7Bt%7D%5E%7B2%7D%7D%5Cend%7Bequation%7D" style="max-width: 100%;"></a>
then define Err(<em>τ</em>) = ERR(ϕ(<em>τ̂</em> ), <em>τ</em>) and
choose the lag <em>τ̂</em> to be the value of <em>τ</em> that minimizes
<em>E<strong>r</strong>r</em>(<em>τ</em>).</li>
</ol>
</li>
<li>
<ol start="2" dir="auto">
<li>If <em>E<strong>r</strong>r</em>(<em>τ̂</em>) ≤ 8/<em>n</em>, <em>Y</em><sub><em>t</em></sub> is a long-memory
series.</li>
</ol>
</li>
<li>
<ol start="3" dir="auto">
<li>If <em>ϕ̂</em>(<em>τ̂</em>) ≥ 0.93 and <em>τ̂</em> &gt; 2, <em>Y</em><sub><em>t</em></sub> is a
long-memory series.</li>
</ol>
</li>
<li>
<ol start="4" dir="auto">
<li>If <em>ϕ̂</em>(<em>τ̂</em>) ≥ 0.93 and <em>τ̂</em> = 1 or 2, <em>Y</em><sub><em>t</em></sub> is a
long-memory series.</li>
</ol>
</li>
<li>
<ol start="5" dir="auto">
<li>If <em>ϕ̂</em>(<em>τ̂</em>) &lt; 0.93, <em>Y</em><sub><em>t</em></sub> is a short-memory
series.</li>
</ol>
</li>
</ul>
<h3 dir="auto"><a id="user-content-subset-autoregressive-model" class="anchor" aria-hidden="true" href="#subset-autoregressive-model"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Subset Autoregressive Model:</h3>
<p dir="auto">In the following we will describe how ARAR algorithm fits an
autoregressive process to the mean-corrected series
<em>X</em><sub><em>t</em></sub> = <em>S</em><sub><em>t</em></sub> − <em>S̄</em>, <em>t</em> = <em>k</em> + 1, ..., <em>n</em>
where <em>S</em><sub><em>t</em></sub>, <em>t</em> = <em>k</em> + 1, ..., <em>n</em> is the memory-shortened
version of <em>Y</em><sub><em>t</em></sub> which derived from the five steps we
described above and <em>S̄</em> is the sample mean of
<em>S</em><sub><em>k</em> + 1</sub>, ..., <em>S</em><sub><em>n</em></sub>.</p>
<p dir="auto">The fitted model has the following form:</p>
<p dir="auto"><em>X</em><sub><em>t</em></sub> = <em>ϕ</em><sub>1</sub><em>X</em><sub>t</sub> − 1 + <em>ϕ</em><sub>1</sub><em>X</em><sub><em>t</em> − <em>l</em><sub>1</sub></sub> + <em>ϕ</em><sub>1</sub><em>X</em><sub><em>t</em> − <em>l</em><sub>1</sub></sub> + <em>ϕ</em><sub>1</sub><em>X</em><sub><em>t</em> − <em>l</em><sub>1</sub></sub> + <em>Z</em></p>
<p dir="auto">where <em>Z</em> ∼ <em>WN</em>(0,<em>σ</em><sup>2</sup>). The coefficients
<em>ϕ</em><sub><em>j</em></sub> and white noise variance <em>σ</em><sup>2</sup> can be
derived from the Yule-Walker equations for given lags
<em>l</em><sub>1</sub>, <em>l</em><sub>2</sub>, and <em>l</em><sub>3</sub>:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/cd22690e6081a11b5a7436607a173a7d0b227cf29fe257938c6fcbda9bbf9019/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e696d6167653f253543626567696e2537426571756174696f6e2537442673706163653b253543626567696e253742626d6174726978253744312673706163653b262673706163653b25354368617425374225354372686f253744286c5f312673706163653b2d2673706163653b31292673706163653b262673706163653b25354368617425374225354372686f253744286c5f322673706163653b2d2673706163653b31292673706163653b262673706163653b25354368617425374225354372686f253744286c5f332673706163653b2d2673706163653b312925354325354325354368617425374225354372686f253744286c5f312673706163653b2d2673706163653b31292673706163653b26312673706163653b262673706163653b25354368617425374225354372686f253744286c5f322673706163653b2d2673706163653b6c5f31292673706163653b262673706163653b25354368617425374225354372686f253744286c5f332673706163653b2d2673706163653b6c5f312925354325354325354368617425374225354372686f253744286c5f322673706163653b2d2673706163653b31292673706163653b262673706163653b25354368617425374225354372686f253744286c5f322673706163653b2d2673706163653b6c5f31292673706163653b262673706163653b312673706163653b262673706163653b25354368617425374225354372686f253744286c5f322673706163653b2d2673706163653b6c5f322925354325354325354368617425374225354372686f253744286c5f332673706163653b2d2673706163653b31292673706163653b262673706163653b25354368617425374225354372686f253744286c5f332673706163653b2d2673706163653b6c5f31292673706163653b262673706163653b25354368617425374225354372686f253744286c5f332673706163653b2d2673706163653b6c5f31292673706163653b262673706163653b31253543656e64253742626d61747269782537442a253543626567696e253742626d61747269782537442535437068695f253742312537442673706163653b2535432535432535437068695f2537426c5f312537442673706163653b2535432535432535437068695f2537426c5f322537442535432535432535437068695f2537426c5f33253744253543656e64253742626d61747269782537442673706163653b3d2673706163653b253543626567696e253742626d61747269782537442673706163653b25354368617425374225354372686f2537442831292673706163653b2535432673706163653b25354368617425374225354372686f253744286c5f31292673706163653b2535432673706163653b25354368617425374225354372686f253744286c5f32292535432673706163653b25354368617425374225354372686f253744286c5f33292673706163653b253543656e64253742626d6174726978253744253543656e642537426571756174696f6e253744"><img src="https://camo.githubusercontent.com/cd22690e6081a11b5a7436607a173a7d0b227cf29fe257938c6fcbda9bbf9019/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e696d6167653f253543626567696e2537426571756174696f6e2537442673706163653b253543626567696e253742626d6174726978253744312673706163653b262673706163653b25354368617425374225354372686f253744286c5f312673706163653b2d2673706163653b31292673706163653b262673706163653b25354368617425374225354372686f253744286c5f322673706163653b2d2673706163653b31292673706163653b262673706163653b25354368617425374225354372686f253744286c5f332673706163653b2d2673706163653b312925354325354325354368617425374225354372686f253744286c5f312673706163653b2d2673706163653b31292673706163653b26312673706163653b262673706163653b25354368617425374225354372686f253744286c5f322673706163653b2d2673706163653b6c5f31292673706163653b262673706163653b25354368617425374225354372686f253744286c5f332673706163653b2d2673706163653b6c5f312925354325354325354368617425374225354372686f253744286c5f322673706163653b2d2673706163653b31292673706163653b262673706163653b25354368617425374225354372686f253744286c5f322673706163653b2d2673706163653b6c5f31292673706163653b262673706163653b312673706163653b262673706163653b25354368617425374225354372686f253744286c5f322673706163653b2d2673706163653b6c5f322925354325354325354368617425374225354372686f253744286c5f332673706163653b2d2673706163653b31292673706163653b262673706163653b25354368617425374225354372686f253744286c5f332673706163653b2d2673706163653b6c5f31292673706163653b262673706163653b25354368617425374225354372686f253744286c5f332673706163653b2d2673706163653b6c5f31292673706163653b262673706163653b31253543656e64253742626d61747269782537442a253543626567696e253742626d61747269782537442535437068695f253742312537442673706163653b2535432535432535437068695f2537426c5f312537442673706163653b2535432535432535437068695f2537426c5f322537442535432535432535437068695f2537426c5f33253744253543656e64253742626d61747269782537442673706163653b3d2673706163653b253543626567696e253742626d61747269782537442673706163653b25354368617425374225354372686f2537442831292673706163653b2535432673706163653b25354368617425374225354372686f253744286c5f31292673706163653b2535432673706163653b25354368617425374225354372686f253744286c5f32292535432673706163653b25354368617425374225354372686f253744286c5f33292673706163653b253543656e64253742626d6174726978253744253543656e642537426571756174696f6e253744" alt="formula" data-canonical-src="https://latex.codecogs.com/svg.image?%5Cbegin%7Bequation%7D&amp;space;%5Cbegin%7Bbmatrix%7D1&amp;space;&amp;&amp;space;%5Chat%7B%5Crho%7D(l_1&amp;space;-&amp;space;1)&amp;space;&amp;&amp;space;%5Chat%7B%5Crho%7D(l_2&amp;space;-&amp;space;1)&amp;space;&amp;&amp;space;%5Chat%7B%5Crho%7D(l_3&amp;space;-&amp;space;1)%5C%5C%5Chat%7B%5Crho%7D(l_1&amp;space;-&amp;space;1)&amp;space;&amp;1&amp;space;&amp;&amp;space;%5Chat%7B%5Crho%7D(l_2&amp;space;-&amp;space;l_1)&amp;space;&amp;&amp;space;%5Chat%7B%5Crho%7D(l_3&amp;space;-&amp;space;l_1)%5C%5C%5Chat%7B%5Crho%7D(l_2&amp;space;-&amp;space;1)&amp;space;&amp;&amp;space;%5Chat%7B%5Crho%7D(l_2&amp;space;-&amp;space;l_1)&amp;space;&amp;&amp;space;1&amp;space;&amp;&amp;space;%5Chat%7B%5Crho%7D(l_2&amp;space;-&amp;space;l_2)%5C%5C%5Chat%7B%5Crho%7D(l_3&amp;space;-&amp;space;1)&amp;space;&amp;&amp;space;%5Chat%7B%5Crho%7D(l_3&amp;space;-&amp;space;l_1)&amp;space;&amp;&amp;space;%5Chat%7B%5Crho%7D(l_3&amp;space;-&amp;space;l_1)&amp;space;&amp;&amp;space;1%5Cend%7Bbmatrix%7D*%5Cbegin%7Bbmatrix%7D%5Cphi_%7B1%7D&amp;space;%5C%5C%5Cphi_%7Bl_1%7D&amp;space;%5C%5C%5Cphi_%7Bl_2%7D%5C%5C%5Cphi_%7Bl_3%7D%5Cend%7Bbmatrix%7D&amp;space;=&amp;space;%5Cbegin%7Bbmatrix%7D&amp;space;%5Chat%7B%5Crho%7D(1)&amp;space;%5C&amp;space;%5Chat%7B%5Crho%7D(l_1)&amp;space;%5C&amp;space;%5Chat%7B%5Crho%7D(l_2)%5C&amp;space;%5Chat%7B%5Crho%7D(l_3)&amp;space;%5Cend%7Bbmatrix%7D%5Cend%7Bequation%7D" style="max-width: 100%;"></a></p>
<p dir="auto">and <em>σ</em><sup>2</sup> = <em>γ̂</em>(0)[1−<em>ϕ</em><sub>1</sub><em>ρ̂</em>(1)] − <em>ϕ</em><sub><em>l</em><sub>1</sub></sub><em>ρ̂</em>(<em>l</em><sub>1</sub>)] − <em>ϕ</em><sub><em>l</em><sub>2</sub></sub><em>ρ̂</em>(<em>l</em><sub>2</sub>)] − <em>ϕ</em><sub><em>l</em><sub>3</sub></sub><em>ρ̂</em>(<em>l</em><sub>3</sub>)],
where <em>γ̂</em>(<em>j</em>) and <em>ρ̂</em>(<em>j</em>), <em>j</em> = 0, 1, 2, ..., are the sample
autocovariances and autocorelations of the series <em>X</em><sub><em>t</em></sub>.</p>
<p dir="auto">The algorithm computes the coefficients of <em>ϕ</em>(<em>j</em>) for each set of lags
where
1 &lt; <em>l</em><sub>1</sub> &lt; <em>l</em><sub>2</sub> &lt; <em>l</em><sub>3</sub> ≤ <em>m</em>
where m chosen to be 13 or 26. The algorithm selects the model that the
Yule-Walker estimate of <em>σ</em><sup>2</sup> is minimal.</p>
<h3 dir="auto"><a id="user-content-forecasting-1" class="anchor" aria-hidden="true" href="#forecasting-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Forecasting</h3>
<p dir="auto">If short-memory filter found in first step it has coefficients
<em>Ψ</em><sub>0</sub>, <em>Ψ</em><sub>1</sub>, ..., <em>Ψ</em><sub><em>k</em></sub>(<em>k</em>≥0) where
<em>Ψ</em><sub>0</sub> = 1. In this case the transforemed series can be
expressed as</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0e8e00e03d5d4b5ab0be13ef257c373844ebc0ce0f2c5511684b9cdb6418b424/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e696d6167653f253543626567696e2537426571756174696f6e2537442673706163653b2673706163653b2673706163653b2673706163653b535f742673706163653b3d2673706163653b253543507369284229595f742673706163653b3d2673706163653b595f742673706163653b2b2673706163653b2535435073695f312673706163653b595f253742742d312537442673706163653b2b2673706163653b2e2e2e2b2673706163653b2535435073695f6b2673706163653b595f253742742d6b253744253543656e642537426571756174696f6e253744"><img src="https://camo.githubusercontent.com/0e8e00e03d5d4b5ab0be13ef257c373844ebc0ce0f2c5511684b9cdb6418b424/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e696d6167653f253543626567696e2537426571756174696f6e2537442673706163653b2673706163653b2673706163653b2673706163653b535f742673706163653b3d2673706163653b253543507369284229595f742673706163653b3d2673706163653b595f742673706163653b2b2673706163653b2535435073695f312673706163653b595f253742742d312537442673706163653b2b2673706163653b2e2e2e2b2673706163653b2535435073695f6b2673706163653b595f253742742d6b253744253543656e642537426571756174696f6e253744" alt="formula" data-canonical-src="https://latex.codecogs.com/svg.image?%5Cbegin%7Bequation%7D&amp;space;&amp;space;&amp;space;&amp;space;S_t&amp;space;=&amp;space;%5CPsi(B)Y_t&amp;space;=&amp;space;Y_t&amp;space;+&amp;space;%5CPsi_1&amp;space;Y_%7Bt-1%7D&amp;space;+&amp;space;...+&amp;space;%5CPsi_k&amp;space;Y_%7Bt-k%7D%5Cend%7Bequation%7D" style="max-width: 100%;"></a></p>
<p dir="auto">where <em>Ψ</em>(<em>B</em>) = 1 + <em>Ψ</em><sub>1</sub><em>B</em> + ... + <em>Ψ</em><sub><em>k</em></sub><em>B</em><sup><em>k</em></sup>
is polynomial in the back-shift operator.</p>
<p dir="auto">If the coefficients of the subset autoregression found in the second
step it has coefficients
<em>ϕ</em><sub>1</sub>, <em>ϕ</em><sub><em>l</em><sub>1</sub></sub>, <em>ϕ</em><sub><em>l</em><sub>2</sub></sub>
and <em>ϕ</em><sub><em>l</em><sub>3</sub></sub> then the subset AR model for
<em>X</em><sub><em>t</em></sub> = <em>S</em><sub><em>t</em></sub> − <em>S̄</em> is</p>
<p dir="auto">where <em>Z</em><sub><em>t</em></sub> is a white-noise series with zero mean and
constant variance and
<em>ϕ</em>(<em>B</em>) = 1 − <em>ϕ</em><sub>1</sub><em>B</em> − <em>ϕ</em><sub><em>l</em><sub>1</sub></sub><em>B</em><sup><em>l</em><sub>1</sub></sup> − <em>ϕ</em><sub><em>l</em><sub>2</sub></sub><em>B</em><sup><em>l</em><sub>2</sub></sup> − <em>ϕ</em><sub><em>l</em><sub>3</sub></sub><em>B</em><sup><em>l</em><sub>3</sub></sup>.
From equation (1) and (2) one can obtain</p>
<p dir="auto">where <em>ξ</em>(<em>B</em>) = <em>Ψ</em>(<em>B</em>)<em>ϕ</em>(<em>B</em>).</p>
<p dir="auto">Assuming the fitted model in equation (3) is an appropriate model, and
<em>Z</em><sub><em>t</em></sub> is uncorrelated with <em>Y</em><sub><em>j</em></sub>, <em>j</em> &lt; <em>t</em>
∀<em>t</em> ∈ <em>T</em>, one can determine minimum mean squared error linear
predictors <em>P</em><sub><em>n</em></sub><em>Y</em><sub><em>n</em> + <em>h</em></sub> of
<em>Y</em><sub><em>n</em> + <em>h</em></sub> in terms of
1, <em>Y</em><sub>1</sub>, ..., <em>Y</em><sub><em>n</em></sub> for
<em>n</em> &gt; <em>k</em> + <em>l</em><sub>3</sub>, from recursions</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/29d4edd3092f76165ed6cd08b15683b877d8b1118d62acb22f4252e5b3296bb3/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e696d6167653f253543626567696e2537426571756174696f6e2537442673706163653b2673706163653b2673706163653b2673706163653b505f6e2673706163653b595f2537426e2b682537442673706163653b3d2673706163653b2d2673706163653b25354373756d5f2537426a2673706163653b3d2673706163653b312537442535452537426b2673706163653b2b2673706163653b6c5f332537442673706163653b25354378692673706163653b505f6e595f2537426e2b682d6a2537442673706163653b2b2673706163653b253543706869283129253543626172253742532537442c2673706163653b2673706163653b682535436765712673706163653b312c253543656e642537426571756174696f6e253744"><img src="https://camo.githubusercontent.com/29d4edd3092f76165ed6cd08b15683b877d8b1118d62acb22f4252e5b3296bb3/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e696d6167653f253543626567696e2537426571756174696f6e2537442673706163653b2673706163653b2673706163653b2673706163653b505f6e2673706163653b595f2537426e2b682537442673706163653b3d2673706163653b2d2673706163653b25354373756d5f2537426a2673706163653b3d2673706163653b312537442535452537426b2673706163653b2b2673706163653b6c5f332537442673706163653b25354378692673706163653b505f6e595f2537426e2b682d6a2537442673706163653b2b2673706163653b253543706869283129253543626172253742532537442c2673706163653b2673706163653b682535436765712673706163653b312c253543656e642537426571756174696f6e253744" alt="formula" data-canonical-src="https://latex.codecogs.com/svg.image?%5Cbegin%7Bequation%7D&amp;space;&amp;space;&amp;space;&amp;space;P_n&amp;space;Y_%7Bn+h%7D&amp;space;=&amp;space;-&amp;space;%5Csum_%7Bj&amp;space;=&amp;space;1%7D%5E%7Bk&amp;space;+&amp;space;l_3%7D&amp;space;%5Cxi&amp;space;P_nY_%7Bn+h-j%7D&amp;space;+&amp;space;%5Cphi(1)%5Cbar%7BS%7D,&amp;space;&amp;space;h%5Cgeq&amp;space;1,%5Cend%7Bequation%7D" style="max-width: 100%;"></a></p>
<p dir="auto">with the initial conditions
<em>P</em><sub><em>n</em></sub><em>Y</em><sub><em>n</em> + <em>h</em></sub> = <em>Y</em><sub><em>n</em> + <em>h</em></sub>, for
<em>h</em> ≤ 0.</p>
<h3 dir="auto"><a id="user-content-ref-brockwell-peter-j-and-richard-a-davis-introduction-to-time-series-and-forecasting-springer-2016" class="anchor" aria-hidden="true" href="#ref-brockwell-peter-j-and-richard-a-davis-introduction-to-time-series-and-forecasting-springer-2016"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Ref: Brockwell, Peter J, and Richard A. Davis. Introduction to Time Series and Forecasting. <a href="https://link.springer.com/book/10.1007/978-3-319-29854-2" rel="nofollow">Springer</a> (2016)</h3>
</article></div>