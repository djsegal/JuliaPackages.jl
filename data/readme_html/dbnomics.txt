<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p align="center">
<a target="_blank" rel="noopener noreferrer" href="docs/src/assets/logo.png"><img width="600px" src="docs/src/assets/logo.png" style="max-width:100%;"></a>
</p>
<h1><a id="user-content-dbnomicsjl" class="anchor" aria-hidden="true" href="#dbnomicsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DBnomics.jl</h1>
<h2><a id="user-content-dbnomics-julia-client" class="anchor" aria-hidden="true" href="#dbnomics-julia-client"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DBnomics Julia client</h2>
<p>This package provides you access to DBnomics data series. DBnomics is an open-source project with the goal of aggregating the world's economic data in one location, free of charge to the public. DBnomics covers hundreds of millions of series from international and national institutions (Eurostat, World Bank, IMF, ...).</p>
<p>To use this package, you have to provide the codes of the provider, dataset and series you want. You can retrieve them directly on the <a href="https://db.nomics.world/" rel="nofollow">website</a>.</p>
<p>To install <code>DBnomics.jl</code>, go to the package manager with <code>]</code> :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="add DBnomics
"><pre>add DBnomics</pre></div>
<p>or install the github version with :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="add https://github.com/s915/DBnomics.jl
"><pre>add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>s915<span class="pl-k">/</span>DBnomics<span class="pl-k">.</span>jl</pre></div>
<p>All the functions, and their names, are derived from the R package <a href="https://github.com/dbnomics/rdbnomics"><b>rdbnomics</b></a> which I also maintain.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<p>Fetch time series by <code>ids</code> :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Fetch one series from dataset 'Unemployment rate' (ZUTN) of AMECO provider :
df1 = rdb(ids = &quot;AMECO/ZUTN/EA19.1.0.0.0.ZUTN&quot;);

# Fetch two series from dataset 'Unemployment rate' (ZUTN) of AMECO provider :
df2 = rdb(ids = [&quot;AMECO/ZUTN/EA19.1.0.0.0.ZUTN&quot;, &quot;AMECO/ZUTN/DNK.1.0.0.0.ZUTN&quot;]);

# Fetch two series from different datasets of different providers :
df3 = rdb(ids = [&quot;AMECO/ZUTN/EA19.1.0.0.0.ZUTN&quot;, &quot;IMF/BOP/A.FR.BCA_BP6_EUR&quot;]);
"><pre><span class="pl-c"><span class="pl-c">#</span> Fetch one series from dataset 'Unemployment rate' (ZUTN) of AMECO provider :</span>
df1 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(ids <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>AMECO/ZUTN/EA19.1.0.0.0.ZUTN<span class="pl-pds">"</span></span>);

<span class="pl-c"><span class="pl-c">#</span> Fetch two series from dataset 'Unemployment rate' (ZUTN) of AMECO provider :</span>
df2 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(ids <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>AMECO/ZUTN/EA19.1.0.0.0.ZUTN<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>AMECO/ZUTN/DNK.1.0.0.0.ZUTN<span class="pl-pds">"</span></span>]);

<span class="pl-c"><span class="pl-c">#</span> Fetch two series from different datasets of different providers :</span>
df3 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(ids <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>AMECO/ZUTN/EA19.1.0.0.0.ZUTN<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>IMF/BOP/A.FR.BCA_BP6_EUR<span class="pl-pds">"</span></span>]);</pre></div>
<p>In the event that you only use the argument <code>ids</code>, you can drop it and run :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="df1 = rdb(&quot;AMECO/ZUTN/EA19.1.0.0.0.ZUTN&quot;);
"><pre>df1 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>AMECO/ZUTN/EA19.1.0.0.0.ZUTN<span class="pl-pds">"</span></span>);</pre></div>
<p>Fetch time series by <code>mask</code> :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Fetch one series from dataset 'Balance of Payments' (BOP) of IMF :
df1 = rdb(&quot;IMF&quot;, &quot;BOP&quot;, mask = &quot;A.FR.BCA_BP6_EUR&quot;);

# Fetch two series from dataset 'Balance of Payments' (BOP) of IMF :
df2 = rdb(&quot;IMF&quot;, &quot;BOP&quot;, mask = &quot;A.FR+ES.BCA_BP6_EUR&quot;);

# Fetch all series along one dimension from dataset 'Balance of Payments' (BOP) of IMF :
df3 = rdb(&quot;IMF&quot;, &quot;BOP&quot;, mask = &quot;A..BCA_BP6_EUR&quot;);

# Fetch series along multiple dimensions from dataset 'Balance of Payments' (BOP) of IMF :
df4 = rdb(&quot;IMF&quot;, &quot;BOP&quot;, mask = &quot;A.FR.BCA_BP6_EUR+IA_BP6_EUR&quot;);
"><pre><span class="pl-c"><span class="pl-c">#</span> Fetch one series from dataset 'Balance of Payments' (BOP) of IMF :</span>
df1 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>BOP<span class="pl-pds">"</span></span>, mask <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>A.FR.BCA_BP6_EUR<span class="pl-pds">"</span></span>);

<span class="pl-c"><span class="pl-c">#</span> Fetch two series from dataset 'Balance of Payments' (BOP) of IMF :</span>
df2 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>BOP<span class="pl-pds">"</span></span>, mask <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>A.FR+ES.BCA_BP6_EUR<span class="pl-pds">"</span></span>);

<span class="pl-c"><span class="pl-c">#</span> Fetch all series along one dimension from dataset 'Balance of Payments' (BOP) of IMF :</span>
df3 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>BOP<span class="pl-pds">"</span></span>, mask <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>A..BCA_BP6_EUR<span class="pl-pds">"</span></span>);

<span class="pl-c"><span class="pl-c">#</span> Fetch series along multiple dimensions from dataset 'Balance of Payments' (BOP) of IMF :</span>
df4 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>BOP<span class="pl-pds">"</span></span>, mask <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>A.FR.BCA_BP6_EUR+IA_BP6_EUR<span class="pl-pds">"</span></span>);</pre></div>
<p>In the event that you only use the arguments <code>provider_code</code>, <code>dataset_code</code> and <code>mask</code>, you can drop the name <code>mask</code> and run :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="df1 = rdb(&quot;IMF&quot;, &quot;BOP&quot;, &quot;A.FR.BCA_BP6_EUR&quot;);
"><pre>df1 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>BOP<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>A.FR.BCA_BP6_EUR<span class="pl-pds">"</span></span>);</pre></div>
<p>Fetch time series by <code>dimensions</code> :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Fetch one value of one dimension from dataset 'Unemployment rate' (ZUTN) of AMECO provider :
df1 = rdb(&quot;AMECO&quot;, &quot;ZUTN&quot;, dimensions = Dict(:geo =&gt; &quot;ea12&quot;));
# or
df1 = rdb(&quot;AMECO&quot;, &quot;ZUTN&quot;, dimensions = (geo = &quot;ea12&quot;,));

# Fetch two values of one dimension from dataset 'Unemployment rate' (ZUTN) of AMECO provider :
df2 = rdb(&quot;AMECO&quot;, &quot;ZUTN&quot;, dimensions = Dict(:geo =&gt; [&quot;ea12&quot;, &quot;dnk&quot;]));
# or
df2 = rdb(&quot;AMECO&quot;, &quot;ZUTN&quot;, dimensions = (geo = [&quot;ea12&quot;, &quot;dnk&quot;],));

# Fetch several values of several dimensions from dataset 'Doing business' (DB) of World Bank :
df3 = rdb(&quot;WB&quot;, &quot;DB&quot;, dimensions = Dict(:country =&gt; [&quot;DZ&quot;, &quot;PE&quot;], :indicator =&gt; [&quot;ENF.CONT.COEN.COST.ZS&quot;, &quot;IC.REG.COST.PC.FE.ZS&quot;]));
# or
df3 = rdb(&quot;WB&quot;, &quot;DB&quot;, dimensions = (country = [&quot;DZ&quot;, &quot;PE&quot;], indicator = [&quot;ENF.CONT.COEN.COST.ZS&quot;, &quot;IC.REG.COST.PC.FE.ZS&quot;]));
"><pre><span class="pl-c"><span class="pl-c">#</span> Fetch one value of one dimension from dataset 'Unemployment rate' (ZUTN) of AMECO provider :</span>
df1 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>AMECO<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>ZUTN<span class="pl-pds">"</span></span>, dimensions <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:geo</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>ea12<span class="pl-pds">"</span></span>));
<span class="pl-c"><span class="pl-c">#</span> or</span>
df1 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>AMECO<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>ZUTN<span class="pl-pds">"</span></span>, dimensions <span class="pl-k">=</span> (geo <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>ea12<span class="pl-pds">"</span></span>,));

<span class="pl-c"><span class="pl-c">#</span> Fetch two values of one dimension from dataset 'Unemployment rate' (ZUTN) of AMECO provider :</span>
df2 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>AMECO<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>ZUTN<span class="pl-pds">"</span></span>, dimensions <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:geo</span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">"</span>ea12<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>dnk<span class="pl-pds">"</span></span>]));
<span class="pl-c"><span class="pl-c">#</span> or</span>
df2 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>AMECO<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>ZUTN<span class="pl-pds">"</span></span>, dimensions <span class="pl-k">=</span> (geo <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>ea12<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>dnk<span class="pl-pds">"</span></span>],));

<span class="pl-c"><span class="pl-c">#</span> Fetch several values of several dimensions from dataset 'Doing business' (DB) of World Bank :</span>
df3 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>WB<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>DB<span class="pl-pds">"</span></span>, dimensions <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:country</span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">"</span>DZ<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>PE<span class="pl-pds">"</span></span>], <span class="pl-c1">:indicator</span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">"</span>ENF.CONT.COEN.COST.ZS<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>IC.REG.COST.PC.FE.ZS<span class="pl-pds">"</span></span>]));
<span class="pl-c"><span class="pl-c">#</span> or</span>
df3 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>WB<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>DB<span class="pl-pds">"</span></span>, dimensions <span class="pl-k">=</span> (country <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>DZ<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>PE<span class="pl-pds">"</span></span>], indicator <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>ENF.CONT.COEN.COST.ZS<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>IC.REG.COST.PC.FE.ZS<span class="pl-pds">"</span></span>]));</pre></div>
<p>Fetch time series with a <code>query</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Fetch one series from dataset 'WEO:2019-10 by countries' (WEO:2019-10) of IMF provider:
df1 = rdb(&quot;IMF&quot;, &quot;WEO:2019-10&quot;, query = &quot;France current account balance percent&quot;);

# Fetch series from dataset 'WEO:2019-10 by countries' (WEO:2019-10) of IMF provider:
df2 = rdb(&quot;IMF&quot;, &quot;WEO:2019-10&quot;, query = &quot;current account balance percent&quot;);
"><pre><span class="pl-c"><span class="pl-c">#</span> Fetch one series from dataset 'WEO:2019-10 by countries' (WEO:2019-10) of IMF provider:</span>
df1 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>WEO:2019-10<span class="pl-pds">"</span></span>, query <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>France current account balance percent<span class="pl-pds">"</span></span>);

<span class="pl-c"><span class="pl-c">#</span> Fetch series from dataset 'WEO:2019-10 by countries' (WEO:2019-10) of IMF provider:</span>
df2 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>WEO:2019-10<span class="pl-pds">"</span></span>, query <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>current account balance percent<span class="pl-pds">"</span></span>);</pre></div>
<p>Fetch one series from the dataset 'Doing Business' of WB provider with the link:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="df1 = rdb(api_link = &quot;https://api.db.nomics.world/v22/series/WB/DB?dimensions=%7B%22country%22%3A%5B%22FR%22%2C%22IT%22%2C%22ES%22%5D%7D&amp;q=IC.REG.PROC.FE.NO&amp;observations=1&amp;format=json&amp;align_periods=1&amp;offset=0&amp;facets=0&quot;);
"><pre>df1 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(api_link <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>https://api.db.nomics.world/v22/series/WB/DB?dimensions=%7B%22country%22%3A%5B%22FR%22%2C%22IT%22%2C%22ES%22%5D%7D&amp;q=IC.REG.PROC.FE.NO&amp;observations=1&amp;format=json&amp;align_periods=1&amp;offset=0&amp;facets=0<span class="pl-pds">"</span></span>);</pre></div>
<p>In the event that you only use the argument <code>api_link</code>, you can drop the name and run:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="df1 = rdb(&quot;https://api.db.nomics.world/v22/series/WB/DB?dimensions=%7B%22country%22%3A%5B%22FR%22%2C%22IT%22%2C%22ES%22%5D%7D&amp;q=IC.REG.PROC.FE.NO&amp;observations=1&amp;format=json&amp;align_periods=1&amp;offset=0&amp;facets=0&quot;);
"><pre>df1 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>https://api.db.nomics.world/v22/series/WB/DB?dimensions=%7B%22country%22%3A%5B%22FR%22%2C%22IT%22%2C%22ES%22%5D%7D&amp;q=IC.REG.PROC.FE.NO&amp;observations=1&amp;format=json&amp;align_periods=1&amp;offset=0&amp;facets=0<span class="pl-pds">"</span></span>);</pre></div>
<p>Fetch the available datasets of a provider</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Example with the IMF datasets:
df_datasets = rdb_datasets(&quot;IMF&quot;);

# Example with the IMF and BDF datasets:
df_datasets = rdb_datasets([&quot;IMF&quot;, &quot;BDF&quot;]);
"><pre><span class="pl-c"><span class="pl-c">#</span> Example with the IMF datasets:</span>
df_datasets <span class="pl-k">=</span> <span class="pl-c1">rdb_datasets</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>);

<span class="pl-c"><span class="pl-c">#</span> Example with the IMF and BDF datasets:</span>
df_datasets <span class="pl-k">=</span> <span class="pl-c1">rdb_datasets</span>([<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>BDF<span class="pl-pds">"</span></span>]);</pre></div>
<p>In the event that you only request the datasets for one provider, if you define
<code>simplify = true</code>, then the result will be a <code>DataFrame</code> not a <code>Dict</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="df_datasets = rdb_datasets(&quot;IMF&quot;, simplify = true);
"><pre>df_datasets <span class="pl-k">=</span> <span class="pl-c1">rdb_datasets</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, simplify <span class="pl-k">=</span> <span class="pl-c1">true</span>);</pre></div>
<p>Fetch the possible dimensions of available datasets of a provider</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Example for the dataset WEO:2019-10 of the IMF:
df_dimensions = rdb_dimensions(&quot;IMF&quot;, &quot;WEO:2019-10&quot;);
"><pre><span class="pl-c"><span class="pl-c">#</span> Example for the dataset WEO:2019-10 of the IMF:</span>
df_dimensions <span class="pl-k">=</span> <span class="pl-c1">rdb_dimensions</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>WEO:2019-10<span class="pl-pds">"</span></span>);</pre></div>
<p>In the event that you only request the dimensions for one dataset for one
provider, if you define <code>simplify = true</code>, then the result will be a <code>Dict</code> of
<code>DataFrame</code>s not a nested <code>Dict</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="df_dimensions = rdb_dimensions(&quot;IMF&quot;, &quot;WEO:2019-10&quot;, simplify = true);
"><pre>df_dimensions <span class="pl-k">=</span> <span class="pl-c1">rdb_dimensions</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>WEO:2019-10<span class="pl-pds">"</span></span>, simplify <span class="pl-k">=</span> <span class="pl-c1">true</span>);</pre></div>
<p>Fetch the number of series of available datasets of a provider</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Example for the dataset WEOAGG:2019-10 of the IMF:
df_series = rdb_series(&quot;IMF&quot;, &quot;WEOAGG:2019-10&quot;);

# With dimensions
df_series = rdb_series(&quot;IMF&quot;, &quot;WEO:2019-10&quot;, dimensions = Dict(Symbol(&quot;weo-country&quot;) =&gt; &quot;AGO&quot;));
df_series = rdb_series(&quot;IMF&quot;, &quot;WEO:2019-10&quot;, dimensions = Dict(Symbol(&quot;weo-subject&quot;) =&gt; &quot;NGDP_RPCH&quot;), simplify = true);

# With a query
df_series = rdb_series(&quot;IMF&quot;, &quot;WEO:2019-10&quot;, query = &quot;ARE&quot;);
df_series = rdb_series(&quot;IMF&quot;, [&quot;WEO:2019-10&quot;, &quot;WEOAGG:2019-10&quot;], query = &quot;NGDP_RPCH&quot;);
"><pre><span class="pl-c"><span class="pl-c">#</span> Example for the dataset WEOAGG:2019-10 of the IMF:</span>
df_series <span class="pl-k">=</span> <span class="pl-c1">rdb_series</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>WEOAGG:2019-10<span class="pl-pds">"</span></span>);

<span class="pl-c"><span class="pl-c">#</span> With dimensions</span>
df_series <span class="pl-k">=</span> <span class="pl-c1">rdb_series</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>WEO:2019-10<span class="pl-pds">"</span></span>, dimensions <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">Symbol</span>(<span class="pl-s"><span class="pl-pds">"</span>weo-country<span class="pl-pds">"</span></span>) <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>AGO<span class="pl-pds">"</span></span>));
df_series <span class="pl-k">=</span> <span class="pl-c1">rdb_series</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>WEO:2019-10<span class="pl-pds">"</span></span>, dimensions <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">Symbol</span>(<span class="pl-s"><span class="pl-pds">"</span>weo-subject<span class="pl-pds">"</span></span>) <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>NGDP_RPCH<span class="pl-pds">"</span></span>), simplify <span class="pl-k">=</span> <span class="pl-c1">true</span>);

<span class="pl-c"><span class="pl-c">#</span> With a query</span>
df_series <span class="pl-k">=</span> <span class="pl-c1">rdb_series</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>WEO:2019-10<span class="pl-pds">"</span></span>, query <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>ARE<span class="pl-pds">"</span></span>);
df_series <span class="pl-k">=</span> <span class="pl-c1">rdb_series</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, [<span class="pl-s"><span class="pl-pds">"</span>WEO:2019-10<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>WEOAGG:2019-10<span class="pl-pds">"</span></span>], query <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>NGDP_RPCH<span class="pl-pds">"</span></span>);</pre></div>
<p><g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png">⚠️</g-emoji> We ask the user to use this function parsimoniously because there are a huge amount
of series per dataset. Please only fetch for one dataset if you need it or
visit the website <a href="https://db.nomics.world" rel="nofollow">https://db.nomics.world</a>.</p>
<h2><a id="user-content-proxy-configuration" class="anchor" aria-hidden="true" href="#proxy-configuration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Proxy configuration</h2>
<p>When using the functions <code>rdb</code> or <code>rdb_...</code>, if you come across an error concerning your internet connection, you can get round this situation by :</p>
<ol>
<li>
<p>configuring <strong>curl</strong> of the function <code>HTTP.get</code> or <code>HTTP.post</code> to use a specific and authorized proxy.</p>
</li>
<li>
<p>using the functions <code>readlines</code> and <code>download</code> if you have problem with <code>HTTP.get</code>.</p>
</li>
</ol>
<h3><a id="user-content-configure-curl-to-use-a-specific-and-authorized-proxy" class="anchor" aria-hidden="true" href="#configure-curl-to-use-a-specific-and-authorized-proxy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Configure <strong>curl</strong> to use a specific and authorized proxy</h3>
<p>In <strong>DBnomics.jl</strong>, by default the function <code>HTTP.get</code> or <code>HTTP.post</code> are used to fetch the data. If a specific proxy must be used, it is possible to define it permanently with the package global variable <code>curl_config</code> or on the fly through the argument <code>curl_config</code>. In that way the object is passed to the keyword arguments of the function <code>HTTP.get</code> or <code>HTTP.post</code>.<br>
To see the available parameters, visit the website <a href="https://curl.haxx.se/libcurl/c/curl_easy_setopt.html" rel="nofollow"></a><a href="https://curl.haxx.se/libcurl/c/curl_easy_setopt.html" rel="nofollow">https://curl.haxx.se/libcurl/c/curl_easy_setopt.html</a>.<br>
Once they are chosen, you define the curl object as follows :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="h = Dict(:proxy =&gt; &quot;http://&lt;proxy&gt;:&lt;port&gt;&quot;);
"><pre>h <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:proxy</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>http://&lt;proxy&gt;:&lt;port&gt;<span class="pl-pds">"</span></span>);</pre></div>
<p>Regarding the functioning of <strong>HTTP.jl</strong>, you might need to modify another option to change the <em>db/editor.nomics.world</em> url from <em>https://</em> to <em>http://</em> (see <a href="https://github.com/JuliaWeb/HTTP.jl/pull/390">https://github.com/JuliaWeb/HTTP.jl/pull/390</a>) :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="DBnomics.options(&quot;secure&quot;, false);
"><pre>DBnomics<span class="pl-k">.</span><span class="pl-c1">options</span>(<span class="pl-s"><span class="pl-pds">"</span>secure<span class="pl-pds">"</span></span>, <span class="pl-c1">false</span>);</pre></div>
<h4><a id="user-content-set-the-connection-up-for-a-session" class="anchor" aria-hidden="true" href="#set-the-connection-up-for-a-session"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Set the connection up for a session</h4>
<p>The curl connection can be set up for a session by modifying the following package option :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="DBnomics.options(&quot;curl_config&quot;, h);
"><pre>DBnomics<span class="pl-k">.</span><span class="pl-c1">options</span>(<span class="pl-s"><span class="pl-pds">"</span>curl_config<span class="pl-pds">"</span></span>, h);</pre></div>
<p>After configuration, just use the standard functions of <strong>DBnomics.jl</strong> e.g. :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="df1 = rdb(ids = &quot;AMECO/ZUTN/EA19.1.0.0.0.ZUTN&quot;);
"><pre>df1 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(ids <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>AMECO/ZUTN/EA19.1.0.0.0.ZUTN<span class="pl-pds">"</span></span>);</pre></div>
<p>This option of the package can be disabled with :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="DBnomics.options(&quot;curl_config&quot;, nothing);
"><pre>DBnomics<span class="pl-k">.</span><span class="pl-c1">options</span>(<span class="pl-s"><span class="pl-pds">"</span>curl_config<span class="pl-pds">"</span></span>, <span class="pl-c1">nothing</span>);</pre></div>
<h4><a id="user-content-use-the-connection-only-for-a-function-call" class="anchor" aria-hidden="true" href="#use-the-connection-only-for-a-function-call"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Use the connection only for a function call</h4>
<p>If a complete configuration is not needed but just an "on the fly" execution, then use the argument <code>curl_config</code> of the functions <code>rdb</code> and <code>rdb_...</code> :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="df1 = rdb(ids = &quot;AMECO/ZUTN/EA19.1.0.0.0.ZUTN&quot;, curl_config = h);
"><pre>df1 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(ids <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>AMECO/ZUTN/EA19.1.0.0.0.ZUTN<span class="pl-pds">"</span></span>, curl_config <span class="pl-k">=</span> h);</pre></div>
<h3><a id="user-content-use-the-standard-functions-readlines-and-download" class="anchor" aria-hidden="true" href="#use-the-standard-functions-readlines-and-download"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Use the standard functions <code>readlines</code> and <code>download</code></h3>
<p>To retrieve the data <strong>DBnomics.jl</strong> can also use the standard functions <code>readlines</code> and <code>download</code>.</p>
<h4><a id="user-content-set-the-connection-up-for-a-session-1" class="anchor" aria-hidden="true" href="#set-the-connection-up-for-a-session-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Set the connection up for a session</h4>
<p>To activate this feature for a session, you need to enable an option of the package :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="DBnomics.options(&quot;use_readlines&quot;, true);
"><pre>DBnomics<span class="pl-k">.</span><span class="pl-c1">options</span>(<span class="pl-s"><span class="pl-pds">"</span>use_readlines<span class="pl-pds">"</span></span>, <span class="pl-c1">true</span>);</pre></div>
<p>And then use the standard function as follows :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="df1 = rdb(ids = &quot;AMECO/ZUTN/EA19.1.0.0.0.ZUTN&quot;);
"><pre>df1 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(ids <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>AMECO/ZUTN/EA19.1.0.0.0.ZUTN<span class="pl-pds">"</span></span>);</pre></div>
<p>This configuration can be disabled with :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="DBnomics.options(&quot;use_readlines&quot;, false);
"><pre>DBnomics<span class="pl-k">.</span><span class="pl-c1">options</span>(<span class="pl-s"><span class="pl-pds">"</span>use_readlines<span class="pl-pds">"</span></span>, <span class="pl-c1">false</span>);</pre></div>
<h4><a id="user-content-use-the-connection-only-for-a-function-call-1" class="anchor" aria-hidden="true" href="#use-the-connection-only-for-a-function-call-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Use the connection only for a function call</h4>
<p>If you just want to do it once, you may use the argument <code>use_readlines</code> of the functions <code>rdb</code> and <code>rdb_...</code> :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="df1 = rdb(ids = &quot;AMECO/ZUTN/EA19.1.0.0.0.ZUTN&quot;, use_readlines = true);
"><pre>df1 <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(ids <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>AMECO/ZUTN/EA19.1.0.0.0.ZUTN<span class="pl-pds">"</span></span>, use_readlines <span class="pl-k">=</span> <span class="pl-c1">true</span>);</pre></div>
<h2><a id="user-content-transform-time-series-with-filters" class="anchor" aria-hidden="true" href="#transform-time-series-with-filters"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Transform time series with filters</h2>
<p>The <strong>DBnomics.jl</strong> package can interact with the <em>Time Series Editor</em> of DBnomics to transform time series by applying filters to them.<br>
Available filters are listed on the filters page <a href="https://editor.nomics.world/filters" rel="nofollow">https://editor.nomics.world/filters</a>.</p>
<p>Here is an example of how to proceed to interpolate two annual time series with a monthly frequency, using a spline interpolation:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="filters = Dict(:code =&gt; &quot;interpolate&quot;, :parameters =&gt; Dict(:frequency =&gt; &quot;monthly&quot;, :method =&gt; &quot;spline&quot;));

df = rdb(ids = [&quot;AMECO/ZUTN/EA19.1.0.0.0.ZUTN&quot;, &quot;AMECO/ZUTN/DNK.1.0.0.0.ZUTN&quot;], filters = filters);
"><pre>filters <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:code</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>interpolate<span class="pl-pds">"</span></span>, <span class="pl-c1">:parameters</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:frequency</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>monthly<span class="pl-pds">"</span></span>, <span class="pl-c1">:method</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>spline<span class="pl-pds">"</span></span>));

df <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(ids <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>AMECO/ZUTN/EA19.1.0.0.0.ZUTN<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>AMECO/ZUTN/DNK.1.0.0.0.ZUTN<span class="pl-pds">"</span></span>], filters <span class="pl-k">=</span> filters);</pre></div>
<p>If you want to apply more than one filter, the <code>filters</code> argument will be a Tuple of valid filters:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="filter1 = Dict(:code =&gt; &quot;interpolate&quot;, :parameters =&gt; Dict(:frequency =&gt; &quot;monthly&quot;, :method =&gt; &quot;spline&quot;));
filter2 = Dict(:code =&gt; &quot;aggregate&quot;, :parameters =&gt; Dict(:frequency =&gt; &quot;bi-annual&quot;, :method =&gt; &quot;end_of_period&quot;));
filters = (filter1, filter2);

df = rdb(ids = [&quot;AMECO/ZUTN/EA19.1.0.0.0.ZUTN&quot;, &quot;AMECO/ZUTN/DNK.1.0.0.0.ZUTN&quot;], filters = filters);
"><pre>filter1 <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:code</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>interpolate<span class="pl-pds">"</span></span>, <span class="pl-c1">:parameters</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:frequency</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>monthly<span class="pl-pds">"</span></span>, <span class="pl-c1">:method</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>spline<span class="pl-pds">"</span></span>));
filter2 <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:code</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>aggregate<span class="pl-pds">"</span></span>, <span class="pl-c1">:parameters</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:frequency</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>bi-annual<span class="pl-pds">"</span></span>, <span class="pl-c1">:method</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>end_of_period<span class="pl-pds">"</span></span>));
filters <span class="pl-k">=</span> (filter1, filter2);

df <span class="pl-k">=</span> <span class="pl-c1">rdb</span>(ids <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>AMECO/ZUTN/EA19.1.0.0.0.ZUTN<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>AMECO/ZUTN/DNK.1.0.0.0.ZUTN<span class="pl-pds">"</span></span>], filters <span class="pl-k">=</span> filters);</pre></div>
<p>The <code>DataFrame</code> columns change a little bit when filters are used. There are two new columns:</p>
<ul>
<li><code>period_middle_day</code>: the middle day of <code>original_period</code> (can be useful when you compare graphically interpolated series and original ones).</li>
<li><code>filtered</code> (boolean): <code>true</code> if the series is filtered, <code>false</code> otherwise.</li>
</ul>
<p>The content of two columns are modified:</p>
<ul>
<li><code>series_code</code>: same as before for original series, but the suffix <code>_filtered</code> is added for filtered series.</li>
<li><code>series_name</code>: same as before for original series, but the suffix <code> (filtered)</code> is added for filtered series.</li>
</ul>
<h2><a id="user-content-transform-the-dataframe-object-into-a-timearray-object" class="anchor" aria-hidden="true" href="#transform-the-dataframe-object-into-a-timearray-object"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Transform the <code>DataFrame</code> object into a <code>TimeArray</code> object</h2>
<p>For some analysis, it is more convenient to have a <code>TimeArray</code> object instead of a <code>DataFrame</code> object. To transform
it, you can use the following functions :</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using DBnomics
using DataFrames
using TimeSeries

function to_namedtuples(x::DataFrames.DataFrame)
    nm = names(x)
    vl = try
        [x[!, col] for col in names(x)]
    catch
        [x[:, col] for col in names(x)]
    end
    nm = tuple(Symbol.(nm)...)
    vl = tuple(vl...)

    NamedTuple{nm}(vl)
end

function to_timeseries(
    x::DataFrames.DataFrame,
    index = :period, variable = :series_code, value = :value
)
    x = unstack(x, index, variable, value)
    x = to_namedtuples(x)
    x = TimeArray(x, timestamp = index)
    x
end

rdb(&quot;IMF&quot;, &quot;BOP&quot;, mask = &quot;A.FR+ES.BCA_BP6_EUR&quot;)
#&gt; 162×18 DataFrame. Omitted printing of 12 columns
#&gt; │ Row │ @frequency │ FREQ   │ Frequency │ INDICATOR   │ Indicator                          │ REF_AREA │
#&gt; │     │ String     │ String │ String    │ String      │ String                             │ String   │
#&gt; ├─────┼────────────┼────────┼───────────┼─────────────┼────────────────────────────────────┼──────────┤
#&gt; │ 1   │ annual     │ A      │ Annual    │ BCA_BP6_EUR │ Current Account, Total, Net, Euros │ ES       │
#&gt; │ 2   │ annual     │ A      │ Annual    │ BCA_BP6_EUR │ Current Account, Total, Net, Euros │ ES       │
#&gt; │ ... │ ...        │ ...    │ ...       │ ...         │ ...                                │ ...      │
#&gt; │ 161 │ annual     │ A      │ Annual    │ BCA_BP6_EUR │ Current Account, Total, Net, Euros │ FR       │
#&gt; │ 162 │ annual     │ A      │ Annual    │ BCA_BP6_EUR │ Current Account, Total, Net, Euros │ FR       │

to_timeseries(rdb(&quot;IMF&quot;, &quot;BOP&quot;, mask = &quot;A.FR+ES.BCA_BP6_EUR&quot;))
#&gt; 81×2 TimeArray{Union{Missing, Float64},2,Date,Array{Union{Missing, Float64},2}} 1940-01-01 to 2020-01-01
#&gt; │            │ A.ES.BCA_BP6_EUR │ A.FR.BCA_BP6_EUR │
#&gt; ├────────────┼──────────────────┼──────────────────┤
#&gt; │ 1940-01-01 │ missing          │ missing          │
#&gt; │ 1941-01-01 │ missing          │ missing          │
#&gt; │ 1942-01-01 │ missing          │ missing          │
#&gt; │ ...        │ ...              │ ...              │
#&gt; │ 2019-01-01 │ 24899.0          │ -16239.4         │
#&gt; │ 2020-01-01 │ missing          │ missing          │
"><pre><span class="pl-k">using</span> DBnomics
<span class="pl-k">using</span> DataFrames
<span class="pl-k">using</span> TimeSeries

<span class="pl-k">function</span> <span class="pl-en">to_namedtuples</span>(x<span class="pl-k">::</span><span class="pl-c1">DataFrames.DataFrame</span>)
    nm <span class="pl-k">=</span> <span class="pl-c1">names</span>(x)
    vl <span class="pl-k">=</span> <span class="pl-k">try</span>
        [x[<span class="pl-k">!</span>, col] <span class="pl-k">for</span> col <span class="pl-k">in</span> <span class="pl-c1">names</span>(x)]
    <span class="pl-k">catch</span>
        [x[:, col] <span class="pl-k">for</span> col <span class="pl-k">in</span> <span class="pl-c1">names</span>(x)]
    <span class="pl-k">end</span>
    nm <span class="pl-k">=</span> <span class="pl-c1">tuple</span>(<span class="pl-c1">Symbol</span>.(nm)<span class="pl-k">...</span>)
    vl <span class="pl-k">=</span> <span class="pl-c1">tuple</span>(vl<span class="pl-k">...</span>)

    <span class="pl-c1">NamedTuple</span><span class="pl-c1">{nm}</span>(vl)
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">to_timeseries</span>(
    x<span class="pl-k">::</span><span class="pl-c1">DataFrames.DataFrame</span>,
    index <span class="pl-k">=</span> <span class="pl-c1">:period</span>, variable <span class="pl-k">=</span> <span class="pl-c1">:series_code</span>, value <span class="pl-k">=</span> <span class="pl-c1">:value</span>
)
    x <span class="pl-k">=</span> <span class="pl-c1">unstack</span>(x, index, variable, value)
    x <span class="pl-k">=</span> <span class="pl-c1">to_namedtuples</span>(x)
    x <span class="pl-k">=</span> <span class="pl-c1">TimeArray</span>(x, timestamp <span class="pl-k">=</span> index)
    x
<span class="pl-k">end</span>

<span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>BOP<span class="pl-pds">"</span></span>, mask <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>A.FR+ES.BCA_BP6_EUR<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span>&gt; 162×18 DataFrame. Omitted printing of 12 columns</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │ Row │ @frequency │ FREQ   │ Frequency │ INDICATOR   │ Indicator                          │ REF_AREA │</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │     │ String     │ String │ String    │ String      │ String                             │ String   │</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; ├─────┼────────────┼────────┼───────────┼─────────────┼────────────────────────────────────┼──────────┤</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │ 1   │ annual     │ A      │ Annual    │ BCA_BP6_EUR │ Current Account, Total, Net, Euros │ ES       │</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │ 2   │ annual     │ A      │ Annual    │ BCA_BP6_EUR │ Current Account, Total, Net, Euros │ ES       │</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │ ... │ ...        │ ...    │ ...       │ ...         │ ...                                │ ...      │</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │ 161 │ annual     │ A      │ Annual    │ BCA_BP6_EUR │ Current Account, Total, Net, Euros │ FR       │</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │ 162 │ annual     │ A      │ Annual    │ BCA_BP6_EUR │ Current Account, Total, Net, Euros │ FR       │</span>

<span class="pl-c1">to_timeseries</span>(<span class="pl-c1">rdb</span>(<span class="pl-s"><span class="pl-pds">"</span>IMF<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>BOP<span class="pl-pds">"</span></span>, mask <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>A.FR+ES.BCA_BP6_EUR<span class="pl-pds">"</span></span>))
<span class="pl-c"><span class="pl-c">#</span>&gt; 81×2 TimeArray{Union{Missing, Float64},2,Date,Array{Union{Missing, Float64},2}} 1940-01-01 to 2020-01-01</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │            │ A.ES.BCA_BP6_EUR │ A.FR.BCA_BP6_EUR │</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; ├────────────┼──────────────────┼──────────────────┤</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │ 1940-01-01 │ missing          │ missing          │</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │ 1941-01-01 │ missing          │ missing          │</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │ 1942-01-01 │ missing          │ missing          │</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │ ...        │ ...              │ ...              │</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │ 2019-01-01 │ 24899.0          │ -16239.4         │</span>
<span class="pl-c"><span class="pl-c">#</span>&gt; │ 2020-01-01 │ missing          │ missing          │</span></pre></div>
<h2><a id="user-content-ps" class="anchor" aria-hidden="true" href="#ps"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>P.S.</h2>
<p>Visit <a href="https://db.nomics.world/" rel="nofollow"></a><a href="https://db.nomics.world/" rel="nofollow">https://db.nomics.world/</a> !</p>
</article></div>