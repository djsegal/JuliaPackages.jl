<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-scholp" class="anchor" aria-hidden="true" href="#scholp"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ScHoLP</h1>
<h3><a id="user-content-simplicial-closure-and-higher-order-link-prediction" class="anchor" aria-hidden="true" href="#simplicial-closure-and-higher-order-link-prediction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Simplicial closure and Higher-order Link Prediction</h3>
<p>For information on using this library, refer to the tutorial repository <a href="https://github.com/arbenson/ScHoLP-Tutorial">here</a>.</p>
<h5><a id="user-content-note-on-multi-threading" class="anchor" aria-hidden="true" href="#note-on-multi-threading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Note on multi-threading</h5>
<p>This library supports multithreading through Julia's Base.Threads. However, in some cases, it can conflict with the multithreading in BLAS routines. Essentially, these are cases where an iterative solver is used to solve a large number of linear systems and there is simple parallelism over the linear systems being solved. To avoid the conflicts with BLAS threading, here is an example of how one should start Julia.</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="export OPENBLAS_NUM_THREADS=1
export GOTO_NUM_THREADS=1
export OMP_NUM_THREADS=1
JULIA_NUM_THREADS=64 julia
"><pre><span class="pl-k">export</span> OPENBLAS_NUM_THREADS=1
<span class="pl-k">export</span> GOTO_NUM_THREADS=1
<span class="pl-k">export</span> OMP_NUM_THREADS=1
JULIA_NUM_THREADS=64 julia</pre></div>
</article></div>