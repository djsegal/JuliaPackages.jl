<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-xclipboardjl-copy-and-paste-in-julia-on-xwindows-systems" class="anchor" aria-hidden="true" href="#xclipboardjl-copy-and-paste-in-julia-on-xwindows-systems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>XClipboard.jl: Copy and paste in Julia on XWindows systems</h1>
<p>This is a partial translation of Ed Rosten's [x_clipboard]
(<a href="https://github.com/edrosten/x_clipboard">https://github.com/edrosten/x_clipboard</a>), a nearly complete
demonstration of how to use the clipboard and drag and drop in X11.</p>
<p>(See also <a href="http://www.edwardrosten.com/code/x11.html" rel="nofollow">here</a> for a nice
overview.)</p>
<p>At this point, only pasting into Julia is implemented.</p>
<p>Copy-and-paste in general (and on X11 in particular) is actually a
rather tedious experience.  It would be great if there were a higher
level, preferably cross-platform library which took care of this, but
as of mid-2013, I couldn't find one.</p>
<p>Note that Julia Base has a <code>clipboard()</code> command that already works for
text-based copying.  <code>xclipboard()</code> is meant to allow any kind of
data to be pasted, but currently, the parsing of non-text data is up
to the individual.</p>
<h1><a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Functions</h1>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="xclipboard([t1, [t2, ...]])   Get the current contents of the X11
                              clipboard, optionally specifying target
							  types.

xclipboard_targets()          Get a list of possible target types
                              for the current selection

decodemime(::MIME{mime}, x)   Used to decode a particular target
                              type.  Currently handles text, and
                              returns other target types as raw
                              byte arrays.
"><pre><span class="pl-c1">xclipboard</span>([t1, [t2, <span class="pl-k">...</span>]])   Get the current contents of the X11
                              clipboard, optionally specifying target
							  types.

<span class="pl-c1">xclipboard_targets</span>()          Get a list of possible target types
                              <span class="pl-k">for</span> the current selection

<span class="pl-c1">decodemime</span>(<span class="pl-k">::</span><span class="pl-c1">MIME{mime}</span>, x)   Used to decode a particular target
                              type.  Currently handles text, and
                              returns other target types as raw
                              byte arrays.</pre></div>
<h1><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h1>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using XClipboard

julia&gt; xclipboard_targets()
10-element Array{MIME{mime},1}:
 MIME type TIMESTAMP               
 MIME type TARGETS                 
 MIME type MULTIPLE                
 MIME type SAVE_TARGETS            
 MIME type UTF8_STRING             
 MIME type COMPOUND_TEXT           
 MIME type TEXT                    
 MIME type STRING                  
 MIME type text/plain;charset=utf-8
 MIME type text/plain              

julia&gt; xclipboard()
&quot;Julia: A fresh approach to technical computing&quot;

julia&gt; xclipboard(&quot;UTF8_STRING&quot;)
&quot;Julia: A fresh approach to technical computing&quot;

julia&gt; xclipboard(&quot;text/plain&quot;)
&quot;Julia: A fresh approach to technical computing&quot;

julia&gt; xclipboard(&quot;text&quot;)
ERROR: Requested clipboard target(s) not found.
 in xclipboard at /home/kmsquire/.julia/v0.3/XClipboard/src/XClipboard.jl:37
 in xclipboard at /home/kmsquire/.julia/v0.3/XClipboard/src/XClipboard.jl:45
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> XClipboard

julia<span class="pl-k">&gt;</span> <span class="pl-c1">xclipboard_targets</span>()
<span class="pl-c1">10</span><span class="pl-k">-</span>element Array{MIME{mime},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 MIME type TIMESTAMP               
 MIME type TARGETS                 
 MIME type MULTIPLE                
 MIME type SAVE_TARGETS            
 MIME type UTF8_STRING             
 MIME type COMPOUND_TEXT           
 MIME type TEXT                    
 MIME type STRING                  
 MIME type text<span class="pl-k">/</span>plain;charset<span class="pl-k">=</span>utf<span class="pl-k">-</span><span class="pl-c1">8</span>
 MIME type text<span class="pl-k">/</span>plain              

julia<span class="pl-k">&gt;</span> <span class="pl-c1">xclipboard</span>()
<span class="pl-s"><span class="pl-pds">"</span>Julia: A fresh approach to technical computing<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">xclipboard</span>(<span class="pl-s"><span class="pl-pds">"</span>UTF8_STRING<span class="pl-pds">"</span></span>)
<span class="pl-s"><span class="pl-pds">"</span>Julia: A fresh approach to technical computing<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">xclipboard</span>(<span class="pl-s"><span class="pl-pds">"</span>text/plain<span class="pl-pds">"</span></span>)
<span class="pl-s"><span class="pl-pds">"</span>Julia: A fresh approach to technical computing<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">xclipboard</span>(<span class="pl-s"><span class="pl-pds">"</span>text<span class="pl-pds">"</span></span>)
ERROR<span class="pl-k">:</span> Requested clipboard <span class="pl-c1">target</span>(s) not found.
 <span class="pl-k">in</span> xclipboard at <span class="pl-k">/</span>home<span class="pl-k">/</span>kmsquire<span class="pl-k">/</span><span class="pl-k">.</span>julia<span class="pl-k">/</span>v0.<span class="pl-c1">3</span><span class="pl-k">/</span>XClipboard<span class="pl-k">/</span>src<span class="pl-k">/</span>XClipboard<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">37</span>
 <span class="pl-k">in</span> xclipboard at <span class="pl-k">/</span>home<span class="pl-k">/</span>kmsquire<span class="pl-k">/</span><span class="pl-k">.</span>julia<span class="pl-k">/</span>v0.<span class="pl-c1">3</span><span class="pl-k">/</span>XClipboard<span class="pl-k">/</span>src<span class="pl-k">/</span>XClipboard<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">45</span></pre></div>
<h1><a id="user-content-misc" class="anchor" aria-hidden="true" href="#misc"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Misc</h1>
<ul>
<li>
<p>Binary data (such as images) can be received from the clipboard.
However, decoding is currently left up to the individual.</p>
</li>
<li>
<p>Images, in particular, seem to (almost?) always be available as
<code>image/bmp</code>; however, there is currently no <code>bmp</code> decoder in
Julia.</p>
</li>
</ul>
</article></div>