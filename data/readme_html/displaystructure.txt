<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 align="center"><a id="user-content---------" class="anchor" aria-hidden="true" href="#--------"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>
    <a target="_blank" rel="noopener noreferrer" href="gallery/logo.png"><img width="400" src="gallery/logo.png" alt="Display Structure" style="max-width:100%;"></a>
    <br>
</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a target="_blank" rel="noopener noreferrer" href="https://github.com/foldfelis/DisplayStructure.jl/workflows/CI/badge.svg"><img src="https://github.com/foldfelis/DisplayStructure.jl/workflows/CI/badge.svg" alt="CI" style="max-width:100%;"></a> <a href="https://codecov.io/gh/foldfelis/DisplayStructure.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3df318a20239cb1e5a3b4d88492aa81bf98e9505ff7c282b08fa446289993326/68747470733a2f2f636f6465636f762e696f2f67682f666f6c6466656c69732f446973706c61795374727563747572652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/foldfelis/DisplayStructure.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h1><a id="user-content-display-structure" class="anchor" aria-hidden="true" href="#display-structure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Display Structure</h1>
<p>DisplayArray provides arrays that index character in text width unit. And therefore maintains an immutable display size for terminal emulators.</p>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick start</h2>
<p>The package can be installed with the Julia package manager.
From the Julia REPL, type <code>]</code> to enter the Pkg REPL mode and run:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="pkg&gt; add DisplayStructure
"><pre>pkg<span class="pl-k">&gt;</span> add DisplayStructure</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<h3><a id="user-content-from-scratch" class="anchor" aria-hidden="true" href="#from-scratch"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>From scratch</h3>
<ol>
<li>Using package</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using DisplayStructure; const DS = DisplayStructure;
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> DisplayStructure; <span class="pl-k">const</span> DS <span class="pl-k">=</span> DisplayStructure;</pre></div>
<ol start="2">
<li>Declare an area</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; area = DS.DisplayArray(DS.Rectangle(20, 100))
DisplayArray(size=(20, 100), background char=Char(32))
"><pre>julia<span class="pl-k">&gt;</span> area <span class="pl-k">=</span> DS<span class="pl-k">.</span><span class="pl-c1">DisplayArray</span>(DS<span class="pl-k">.</span><span class="pl-c1">Rectangle</span>(<span class="pl-c1">20</span>, <span class="pl-c1">100</span>))
<span class="pl-c1">DisplayArray</span>(size<span class="pl-k">=</span>(<span class="pl-c1">20</span>, <span class="pl-c1">100</span>), background char<span class="pl-k">=</span><span class="pl-c1">Char</span>(<span class="pl-c1">32</span>))</pre></div>
<ol start="3">
<li>Declare a label</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; str = &quot;會動的字串&quot;; width = textwidth(str); label = DS.DisplayRow(width)
DisplayRow(size=10, background char=Char(32))

julia&gt; label[1:end] = str
&quot;會動的字串&quot;
"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>會動的字串<span class="pl-pds">"</span></span>; width <span class="pl-k">=</span> <span class="pl-c1">textwidth</span>(str); label <span class="pl-k">=</span> DS<span class="pl-k">.</span><span class="pl-c1">DisplayRow</span>(width)
<span class="pl-c1">DisplayRow</span>(size<span class="pl-k">=</span><span class="pl-c1">10</span>, background char<span class="pl-k">=</span><span class="pl-c1">Char</span>(<span class="pl-c1">32</span>))

julia<span class="pl-k">&gt;</span> label[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">end</span>] <span class="pl-k">=</span> str
<span class="pl-s"><span class="pl-pds">"</span>會動的字串<span class="pl-pds">"</span></span></pre></div>
<ol start="4">
<li>Render area and label</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; DS.render(area, pos=(1, 1)); DS.render(label, pos=(5, 5))
"><pre>julia<span class="pl-k">&gt;</span> DS<span class="pl-k">.</span><span class="pl-c1">render</span>(area, pos<span class="pl-k">=</span>(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>)); DS<span class="pl-k">.</span><span class="pl-c1">render</span>(label, pos<span class="pl-k">=</span>(<span class="pl-c1">5</span>, <span class="pl-c1">5</span>))</pre></div>
<blockquote>
<p><strong>Hint: The result may be different from the picture showing bellow. One may need to integrate <a href="https://github.com/foldfelis/Terming.jl">Terming.jl</a> to completely dominate terminal control.</strong></p>
</blockquote>
<h3><a id="user-content-with-displaystack" class="anchor" aria-hidden="true" href="#with-displaystack"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>With DisplayStack</h3>
<p>with <code>DisplayStack</code>, one can easily construct a hierarchical display structure.</p>
<ol>
<li>Using package</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using DisplayStructure; const DS = DisplayStructure;
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> DisplayStructure; <span class="pl-k">const</span> DS <span class="pl-k">=</span> DisplayStructure;</pre></div>
<ol start="2">
<li>Define a function that returns a <code>DisplayStack</code></li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; function gen_form()
    display_stack =  DS.DisplayStack()
    push!(display_stack, :form =&gt; DS.Panel(&quot;Title&quot;, [20, 100], [1, 1]))
    push!(display_stack, :str =&gt; DS.Label(&quot;會動的字串&quot;, [5, 5]))

    return display_stack
end;

julia&gt; form = gen_form();
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">function</span> <span class="pl-en">gen_form</span>()
    display_stack <span class="pl-k">=</span>  DS<span class="pl-k">.</span><span class="pl-c1">DisplayStack</span>()
    <span class="pl-c1">push!</span>(display_stack, <span class="pl-c1">:form</span> <span class="pl-k">=&gt;</span> DS<span class="pl-k">.</span><span class="pl-c1">Panel</span>(<span class="pl-s"><span class="pl-pds">"</span>Title<span class="pl-pds">"</span></span>, [<span class="pl-c1">20</span>, <span class="pl-c1">100</span>], [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]))
    <span class="pl-c1">push!</span>(display_stack, <span class="pl-c1">:str</span> <span class="pl-k">=&gt;</span> DS<span class="pl-k">.</span><span class="pl-c1">Label</span>(<span class="pl-s"><span class="pl-pds">"</span>會動的字串<span class="pl-pds">"</span></span>, [<span class="pl-c1">5</span>, <span class="pl-c1">5</span>]))

    <span class="pl-k">return</span> display_stack
<span class="pl-k">end</span>;

julia<span class="pl-k">&gt;</span> form <span class="pl-k">=</span> <span class="pl-c1">gen_form</span>();</pre></div>
<ol start="3">
<li>Render it!!</li>
</ol>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; DS.render(form)
"><pre>julia<span class="pl-k">&gt;</span> DS<span class="pl-k">.</span><span class="pl-c1">render</span>(form)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="gallery/usage.png"><img src="gallery/usage.png" alt="" style="max-width:100%;"></a></p>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<p>The <a href="example/example.jl">example</a> demonstrates a minimum viable product
that shows a border and a string. Integrate with <a href="https://gist.github.com/foldfelis/375dc13b2d3be792fdf029466d7761d0">keyboard key reading feature</a> (implemented under <a href="https://github.com/foldfelis/Terming.jl">Terming.jl</a>), the movable string can be controlled by pressing <code>w</code>, <code>s</code>, <code>a</code> and <code>d</code>, press <code>ESC</code> to quit.</p>
<p>It is recommended that one use <a href="https://github.com/KristofferC/Crayons.jl">Crayons.jl</a> to gain more decorations. A <a href="example/logo.jl">example</a> shows how to integrate with Crayons.</p>
</article></div>