<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-configenv" class="anchor" aria-hidden="true" href="#configenv"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ConfigEnv</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>JuliaHub</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://Arkoniak.github.io/ConfigEnv.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a><a href="https://Arkoniak.github.io/ConfigEnv.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/Arkoniak/ConfigEnv.jl/actions"><img src="https://github.com/Arkoniak/ConfigEnv.jl/workflows/CI/badge.svg" alt="Build" style="max-width: 100%;"></a><a href="https://codecov.io/gh/Arkoniak/ConfigEnv.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7b5ad179b487d90dbdd94ee4024d6ed942986ac0b9fb683fd7962b30b7b3485a/68747470733a2f2f636f6465636f762e696f2f67682f41726b6f6e69616b2f436f6e666967456e762e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/Arkoniak/ConfigEnv.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://juliahub.com/ui/Packages/ConfigEnv/y83nC" rel="nofollow"><img src="https://camo.githubusercontent.com/e0fd7e691501ecad84026db187ca937b2c111df318896a298ff00d0c764f5cbf/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f436f6e666967456e762f706b676576616c2e737667" alt="pkgeval" data-canonical-src="https://juliahub.com/docs/ConfigEnv/pkgeval.svg" style="max-width: 100%;"></a><a href="https://juliahub.com/ui/Packages/ConfigEnv/y83nC" rel="nofollow"><img src="https://camo.githubusercontent.com/6d0a5ebcdfd5e17eefc5f83cd054a29e2e18c640047067c295f214a1fc647a73/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f436f6e666967456e762f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/ConfigEnv/version.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto"><code>ConfigEnv.jl</code> is an environment configuration package that loads environment variables from a <code>.env</code> file into <a href="https://docs.julialang.org/en/latest/manual/environment-variables/" rel="nofollow"><code>ENV</code></a>. This package was inspired by <a href="https://github.com/theskumar/python-dotenv">python-dotenv</a> library and <a href="https://12factor.net/config" rel="nofollow">the Twelve-Factor App</a> methodology.</p>
<p dir="auto">It's intended usage is when you have some secrets like database passwords, which shouldn't leak into public space and at the same time you want to have simple and flexible management of such secrets. Another usage possibility is when some library uses environmental variables for configuration and you want to configure them without editing your <code>.bashrc</code> or Windows environment.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto"><code>ConfigEnv.jl</code> is a registered package, so it can be installed with</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg; Pkg.add(&quot;ConfigEnv&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>ConfigEnv<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">or</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# switch to pkg mode
julia&gt; ] 
v1.6&gt; add ConfigEnv"><pre><span class="pl-c"><span class="pl-c">#</span> switch to pkg mode</span>
julia<span class="pl-k">&gt;</span> ] 
v1.<span class="pl-c1">6</span><span class="pl-k">&gt;</span> add ConfigEnv</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">Create a <code>.env</code> file in your project. You can add environment-specific variables using the rule <code>NAME=VALUE</code>.
For example:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="#.env file
USER = foo
PASSWORD = bar"><pre class="notranslate"><code>#.env file
USER = foo
PASSWORD = bar
</code></pre></div>
<p dir="auto">Usually it is a good idea to put this file into your <code>.gitignore</code> file, so secrets wouldn't leak to the public space. After that you can use it in your application</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ConfigEnv

dotenv() # loads environment variables from .env"><pre><span class="pl-k">using</span> ConfigEnv

<span class="pl-c1">dotenv</span>() <span class="pl-c"><span class="pl-c">#</span> loads environment variables from .env</span></pre></div>
<p dir="auto">This way <code>ENV</code> obtains key values pairs you set in your <code>.env</code> file.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ENV[&quot;PASSWORD&quot;]
&quot;bar&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>PASSWORD<span class="pl-pds">"</span></span>]
<span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span></pre></div>
<h2 dir="auto"><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h2>
<p dir="auto"><code>ConfigEnv.jl</code> provides following features in order to make environment configuration more flexible</p>
<ul dir="auto">
<li>load data from configuration files to <code>ENV</code> in overwriting and non overwriting mode;</li>
<li>reading data from <code>String</code> and <code>IO</code> objects;</li>
<li>merging data from different configuration files;</li>
<li>templating variables with an arbitrary templating depth and introspection tools for discovering unresolved templates and circular dependencies.</li>
</ul>
</article></div>