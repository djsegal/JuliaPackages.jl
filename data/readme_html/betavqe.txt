<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><div align="center">
<a target="_blank" rel="noopener noreferrer" href="_assets/logo.png"><img align="middle" src="_assets/logo.png" width="300" alt="logo" style="max-width:100%;"></a>
</div>
<h2><a id="user-content-solving-quantum-statistical-mechanics-with-variational-autoregressive-networks-and-quantum-circuits" class="anchor" aria-hidden="true" href="#solving-quantum-statistical-mechanics-with-variational-autoregressive-networks-and-quantum-circuits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Solving Quantum Statistical Mechanics with Variational Autoregressive Networks and Quantum Circuits</h2>
<p><a href="https://travis-ci.com/wangleiphy/BetaVQE.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/38cd33fb7412319227f6c7fe14bd2a525da8a371/68747470733a2f2f7472617669732d63692e636f6d2f77616e676c65697068792f426574615651452e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/wangleiphy/BetaVQE.jl.svg?branch=master" style="max-width:100%;"></a></p>
<h3><a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Setup</h3>
<p>Clone this repo, add dependancies by typing <code>]</code> in a Julia REPL, and then</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add Yao YaoExtensions
pkg<span class="pl-k">&gt;</span> add StatsBase Zygote Flux JLD2 FileIO Fire
pkg<span class="pl-k">&gt;</span> dev https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>wangleiphy<span class="pl-k">/</span>VAN<span class="pl-k">.</span>jl<span class="pl-k">.</span>git 
pkg<span class="pl-k">&gt;</span> dev .</pre></div>
<p>To make sure it works, type</p>
<div class="highlight highlight-source-shell"><pre>julia test/runtests.jl</pre></div>
<p>in a terminal to run tests.</p>
<h3><a id="user-content-run" class="anchor" aria-hidden="true" href="#run"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Run</h3>
<p>Run this to train the transverse field Ising model</p>
<div class="highlight highlight-source-shell"><pre>julia runner.jl learn 2 2 2.0 2.0</pre></div>
<p>This utility accepts the following arguments</p>
<ul>
<li>nx::Int=2, lattice size in x direction,</li>
<li>ny::Int=2, lattice size in y direction,</li>
<li>Γ::Real=1.0, the strength of transverse field,</li>
<li>β::Real=1.0, inverse temperature,</li>
</ul>
<p>and keyword arguments</p>
<ul>
<li>depth::Int=5, circuit depth,</li>
<li>nsamples::Int=1000, the batch size used in training,</li>
<li>nhiddens::Vector{Int}=[500], dimension of the VAN's hidden layer,</li>
<li>lr::Real=0.01, the learning rate of the ADAM optimizer,</li>
<li>niter::Int=500, number of iteration,</li>
<li>cont::Bool=false, continue from checkpoint if true.</li>
</ul>
<h3><a id="user-content-paper" class="anchor" aria-hidden="true" href="#paper"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Paper</h3>
<p><a href="https://arxiv.org/abs/1912.11381" rel="nofollow">arXiv:1912.11381</a></p>
</article></div>