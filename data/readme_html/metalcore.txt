<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-metalcorejl" class="anchor" aria-hidden="true" href="#metalcorejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MetalCore.jl</h1>
<p>Wraps Metal in Julia. Takes ideas from other <code>GPGPU</code> packages in Julia.</p>
<ul>
<li>This is an experimental package. It will probably not work, and it's not documented (yet) *</li>
</ul>
<h2><a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Requirements</h2>
<ul>
<li>A Mac running macOs Catalina 10.15 (might also work on 10.14 but untested).</li>
<li>A discrete GPU is not necessary.</li>
<li>Cmake 3.9</li>
<li>Command line XCode tools</li>
<li>Julia 1.3</li>
</ul>
<h2><a id="user-content-description" class="anchor" aria-hidden="true" href="#description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Description</h2>
<p>This package depends on a <a href="https://github.com/PhilipVinc/cmt">small C/ObjC dynamic library</a> that exposes a C interface to julia and forwards those calls to Metal.
This library is built during the build phase of <code>MetalCore.jl</code>.</p>
<p>Julia wrappers to this small C library have been generated with Clang.jl by running <code>julia --startup-file=no --project=res/ res/wrap.jl</code> from the project folder.</p>
<p>The package contains one sub-packge, called <code>Metal</code>, which contains the wrappers to Metal and a small julian interface. All C functions start with prefix <code>Mt****</code>, as well as types. Julia types that wrap them are prefixed by <code>Mtl****</code>.</p>
<p>The <code>Metal</code> subpackage is organised as follows:</p>
<ul>
<li><code>src/Metal/api</code> contains the auto-generated wrappers</li>
<li><code>src/Metal/wrappers</code> contains Julia wrappers to native-C types, that expose functions more conveniently and auto-convert the result of some function calls to julia types</li>
<li><code>src/Metal/highlevel</code> contains the implementation of higher-level methods (like <code>unsafe_copyto!</code> or <code>unsafe_fill!</code>)</li>
</ul>
<h2><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Acknowledgements</h2>
<p>The C library started by forking <a href="https://github.com/recp/cmt">rcp/cmt</a>, to whom goes the original credit.
This package builds upon the experience of several Julia contributors to <code>CuArrays.jl</code> and <code>RocArrays.jl</code>.</p>
</article></div>