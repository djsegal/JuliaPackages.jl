<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-rebugger" class="anchor" aria-hidden="true" href="#rebugger"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Rebugger</h1>
<p><a href="https://travis-ci.org/timholy/Rebugger.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/33632a723a7315da995b2f82e691bfe52cb33408/68747470733a2f2f7472617669732d63692e6f72672f74696d686f6c792f52656275676765722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/timholy/Rebugger.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/timholy/Rebugger-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/e8440b87aeaa597cca03cfedf251f4e57df060fa/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f65397431776c797939393577686368633f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/e9t1wlyy995whchc?svg=true" style="max-width:100%;"></a>
<a href="http://codecov.io/github/timholy/Rebugger.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/957e16d24986daf3a872f4a8f44f6e2f077f188e/687474703a2f2f636f6465636f762e696f2f6769746875622f74696d686f6c792f52656275676765722e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/timholy/Rebugger.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/0437a76a332cfe926f6658c5db5bb9c802fde1e0/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f522f52656275676765722e737667" alt="PkgEval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/R/Rebugger.svg" style="max-width:100%;"></a></p>
<p>Rebugger is an expression-level debugger for Julia.
It has no ability to interact with or manipulate call stacks (see <a href="https://github.com/Keno/Gallium.jl">Gallium</a>),
but it can trace execution via the manipulation of Julia expressions.</p>
<p>The name "Rebugger" has 3 meanings:</p>
<ul>
<li>it is a REPL-based debugger (more on that in the documentation)</li>
<li>it is the <a href="https://github.com/timholy/Revise.jl">Revise</a>-based debugger</li>
<li>it supports repeated-execution debugging</li>
</ul>
<h3><a id="user-content-juliacon-2018-talk" class="anchor" aria-hidden="true" href="#juliacon-2018-talk"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>JuliaCon 2018 Talk</h3>
<p>While it's somewhat dated, you can learn about the "edit" interface in the following video:
<a href="https://youtu.be/KuM0AGaN09s?t=515" rel="nofollow"><img src="https://camo.githubusercontent.com/3b9880e9ba61b0264adf3ad2e02cf1a5c6f2bb96/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f4b754d304147614e3039732f302e6a7067" alt="" data-canonical-src="https://img.youtube.com/vi/KuM0AGaN09s/0.jpg" style="max-width:100%;"></a></p>
<p>However, the "interpret" interface is recommended for most users.</p>
<h2><a id="user-content-installation-and-usage" class="anchor" aria-hidden="true" href="#installation-and-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation and usage</h2>
<p><strong>See the documentation</strong>:</p>
<p><a href="https://timholy.github.io/Rebugger.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://timholy.github.io/Rebugger.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>Note that Rebugger may benefit from custom configuration, as described in the documentation.</p>
<p>In terms of usage, very briefly</p>
<ul>
<li>for "interpret" mode, type your command and hit <kbd> Meta-i </kbd> (which stands for "interpret")</li>
<li>for "edit" mode, "step in" is achieved by positioning your cursor in your input line to the beginning of
the call expression you wish to descend into. Then hit <kbd> Meta-e </kbd> ("enter").</li>
<li>also for "edit" mode, for an expression that generates an error, hit <kbd> Meta-s </kbd> ("stacktrace")
to capture the stacktrace and populate your REPL history with a sequence of expressions
that contain the method bodies of the calls in the stacktrace.</li>
</ul>
<p><kbd> Meta </kbd> means <kbd> Esc </kbd> or, if your system is configured appropriately,
<kbd> Alt </kbd> (Linux/Windows) or <kbd> Option </kbd> (Macs).
More information and complete examples are provided in the documentation.
If your operating system assigns these keybindings to something else, you can <a href="https://timholy.github.io/Rebugger.jl/stable/config/#Customize-keybindings-1" rel="nofollow">configure them to keys of your own choosing</a>.</p>
<h2><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Status</h2>
<p>Rebugger is in early stages of development, and users should currently expect bugs (please do <a href="https://github.com/timholy/Rebugger.jl/issues">report</a> them).
Neverthess it may be of net benefit for some users.</p>
</article></div>