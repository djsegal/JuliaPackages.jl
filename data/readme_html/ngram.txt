<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-ngram" class="anchor" aria-hidden="true" href="#ngram"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>NGram</h1>
<h2><a id="user-content-linear-interpolation" class="anchor" aria-hidden="true" href="#linear-interpolation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Linear interpolation</h2>
<p>This implementation uses the linear interpolation to build the model. For example, with a simple trigram model</p>
<div class="highlight highlight-source-haskell"><pre>p(<span class="pl-s"><span class="pl-pds">"</span>book<span class="pl-pds">"</span></span> <span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">"</span>the<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>green<span class="pl-pds">"</span></span>) <span class="pl-k">=</span> count(<span class="pl-s"><span class="pl-pds">"</span>the green book<span class="pl-pds">"</span></span>) <span class="pl-k">/</span> count(<span class="pl-s"><span class="pl-pds">"</span>the green<span class="pl-pds">"</span></span>)</pre></div>
<p>But there are some limitations</p>
<ul>
<li>We need a bigger corpus to efficiently train a trigram model compared to bigram or unigram</li>
<li>Count(trigram) is often equal to zero</li>
<li>With bigram or unigram we don't capture as much information</li>
</ul>
<p>The idea is then to combine the results of <code>trigram</code> with <code>bigram</code> and <code>unigram</code>. We can generalize by
saying that to compute ngram, we also use the results of <code>(n-1)gram</code>, ..., <code>bigram</code>, <code>unigram</code>.
Here is an exemple in the case of a trigram model.</p>
<div class="highlight highlight-source-haskell"><pre>p(<span class="pl-s"><span class="pl-pds">"</span>book<span class="pl-pds">"</span></span> <span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">"</span>the<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>green<span class="pl-pds">"</span></span>) <span class="pl-k">=</span> a <span class="pl-k">*</span> count(<span class="pl-s"><span class="pl-pds">"</span>the green book<span class="pl-pds">"</span></span>) <span class="pl-k">/</span> count(<span class="pl-s"><span class="pl-pds">"</span>the green<span class="pl-pds">"</span></span>)
                          <span class="pl-k">+</span>  b <span class="pl-k">*</span> count(<span class="pl-s"><span class="pl-pds">"</span>the green<span class="pl-pds">"</span></span>) <span class="pl-k">/</span> count(<span class="pl-s"><span class="pl-pds">"</span>the<span class="pl-pds">"</span></span>)
                          <span class="pl-k">+</span>  c <span class="pl-k">*</span> count(<span class="pl-s"><span class="pl-pds">"</span>the<span class="pl-pds">"</span></span>) <span class="pl-k">/</span> count<span class="pl-c1">()</span>
    <span class="pl-k">where</span>
        a <span class="pl-k">+</span> b <span class="pl-k">+</span> c <span class="pl-k">=</span> <span class="pl-c1">1</span>
        a <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>
        b <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>
        c <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>

# For example: a = b = c = 1 / 3</pre></div>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> NGram

texts <span class="pl-k">=</span> String[<span class="pl-s"><span class="pl-pds">"</span>the green book<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>my blue book<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>his green house<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>book<span class="pl-pds">"</span></span>]

<span class="pl-c"><span class="pl-c">#</span> Train a trigram model on the documents</span>
model <span class="pl-k">=</span> <span class="pl-c1">NGramModel</span>(texts, <span class="pl-c1">3</span>)

<span class="pl-c"><span class="pl-c">#</span> Query on the model</span>
<span class="pl-c"><span class="pl-c">#</span> p(book | the, green)</span>
model[<span class="pl-s"><span class="pl-pds">"</span>the green book<span class="pl-pds">"</span></span>]</pre></div>
</article></div>