<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-ngram" class="anchor" aria-hidden="true" href="#ngram"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>NGram</h1>
<h2><a id="user-content-linear-interpolation" class="anchor" aria-hidden="true" href="#linear-interpolation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Linear interpolation</h2>
<p>This implementation uses the linear interpolation to build the model. For example, with a simple trigram model</p>
<div class="highlight highlight-source-haskell position-relative" data-snippet-clipboard-copy-content="p(&quot;book&quot; | &quot;the&quot;, &quot;green&quot;) = count(&quot;the green book&quot;) / count(&quot;the green&quot;)
"><pre>p(<span class="pl-s"><span class="pl-pds">"</span>book<span class="pl-pds">"</span></span> <span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">"</span>the<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>green<span class="pl-pds">"</span></span>) <span class="pl-k">=</span> count(<span class="pl-s"><span class="pl-pds">"</span>the green book<span class="pl-pds">"</span></span>) <span class="pl-k">/</span> count(<span class="pl-s"><span class="pl-pds">"</span>the green<span class="pl-pds">"</span></span>)</pre></div>
<p>But there are some limitations</p>
<ul>
<li>We need a bigger corpus to efficiently train a trigram model compared to bigram or unigram</li>
<li>Count(trigram) is often equal to zero</li>
<li>With bigram or unigram we don't capture as much information</li>
</ul>
<p>The idea is then to combine the results of <code>trigram</code> with <code>bigram</code> and <code>unigram</code>. We can generalize by
saying that to compute ngram, we also use the results of <code>(n-1)gram</code>, ..., <code>bigram</code>, <code>unigram</code>.
Here is an exemple in the case of a trigram model.</p>
<div class="highlight highlight-source-haskell position-relative" data-snippet-clipboard-copy-content="p(&quot;book&quot; | &quot;the&quot;, &quot;green&quot;) = a * count(&quot;the green book&quot;) / count(&quot;the green&quot;)
                          +  b * count(&quot;the green&quot;) / count(&quot;the&quot;)
                          +  c * count(&quot;the&quot;) / count()
    where
        a + b + c = 1
        a &gt;= 0
        b &gt;= 0
        c &gt;= 0

# For example: a = b = c = 1 / 3
"><pre>p(<span class="pl-s"><span class="pl-pds">"</span>book<span class="pl-pds">"</span></span> <span class="pl-k">|</span> <span class="pl-s"><span class="pl-pds">"</span>the<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>green<span class="pl-pds">"</span></span>) <span class="pl-k">=</span> a <span class="pl-k">*</span> count(<span class="pl-s"><span class="pl-pds">"</span>the green book<span class="pl-pds">"</span></span>) <span class="pl-k">/</span> count(<span class="pl-s"><span class="pl-pds">"</span>the green<span class="pl-pds">"</span></span>)
                          <span class="pl-k">+</span>  b <span class="pl-k">*</span> count(<span class="pl-s"><span class="pl-pds">"</span>the green<span class="pl-pds">"</span></span>) <span class="pl-k">/</span> count(<span class="pl-s"><span class="pl-pds">"</span>the<span class="pl-pds">"</span></span>)
                          <span class="pl-k">+</span>  c <span class="pl-k">*</span> count(<span class="pl-s"><span class="pl-pds">"</span>the<span class="pl-pds">"</span></span>) <span class="pl-k">/</span> count<span class="pl-c1">()</span>
    <span class="pl-k">where</span>
        a <span class="pl-k">+</span> b <span class="pl-k">+</span> c <span class="pl-k">=</span> <span class="pl-c1">1</span>
        a <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>
        b <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>
        c <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>

# For example: a = b = c = 1 / 3</pre></div>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using NGram

texts = String[&quot;the green book&quot;, &quot;my blue book&quot;, &quot;his green house&quot;, &quot;book&quot;]

# Train a trigram model on the documents
model = NGramModel(texts, 3)

# Query on the model
# p(book | the, green)
model[&quot;the green book&quot;]
"><pre><span class="pl-k">using</span> NGram

texts <span class="pl-k">=</span> String[<span class="pl-s"><span class="pl-pds">"</span>the green book<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>my blue book<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>his green house<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>book<span class="pl-pds">"</span></span>]

<span class="pl-c"><span class="pl-c">#</span> Train a trigram model on the documents</span>
model <span class="pl-k">=</span> <span class="pl-c1">NGramModel</span>(texts, <span class="pl-c1">3</span>)

<span class="pl-c"><span class="pl-c">#</span> Query on the model</span>
<span class="pl-c"><span class="pl-c">#</span> p(book | the, green)</span>
model[<span class="pl-s"><span class="pl-pds">"</span>the green book<span class="pl-pds">"</span></span>]</pre></div>
</article></div>