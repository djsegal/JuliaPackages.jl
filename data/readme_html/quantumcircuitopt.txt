<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 align="center" dir="auto"><a id="user-content---------a-julia-package-for-optimal-quantum-circuit-design" class="anchor" aria-hidden="true" href="#--------a-julia-package-for-optimal-quantum-circuit-design"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/harshangrjn/QuantumCircuitOpt.jl/blob/master/docs/src/assets/logo_header_light.png#gh-light-mode-only"><img src="https://github.com/harshangrjn/QuantumCircuitOpt.jl/raw/master/docs/src/assets/logo_header_light.png#gh-light-mode-only" width="90%" style="max-width: 100%;"></a>
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/harshangrjn/QuantumCircuitOpt.jl/blob/master/docs/src/assets/logo_header_dark.png#gh-dark-mode-only"><img src="https://github.com/harshangrjn/QuantumCircuitOpt.jl/raw/master/docs/src/assets/logo_header_dark.png#gh-dark-mode-only" width="90%" style="max-width: 100%;"></a>
  <br>
  A Julia Package for Optimal Quantum Circuit Design
</h1>
<p dir="auto">Status:
<a href="https://github.com/harshangrjn/QuantumCircuitOpt.jl/actions/workflows/ci.yml"><img src="https://github.com/harshangrjn/QuantumCircuitOpt.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/harshangrjn/QuantumCircuitOpt.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/71a79b792d99499d4b79da87a50686bc5edb43ca13b3b18f547fa79818f5ae49/68747470733a2f2f636f6465636f762e696f2f67682f6861727368616e67726a6e2f5175616e74756d436972637569744f70742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d4b474a57495636514634" alt="codecov" data-canonical-src="https://codecov.io/gh/harshangrjn/QuantumCircuitOpt.jl/branch/master/graph/badge.svg?token=KGJWIV6QF4" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/QuantumCircuitOpt/dwSy1" rel="nofollow"><img src="https://camo.githubusercontent.com/f3dac28b32b10b5a9b65afffb1fc7d11c304cbad6ca9c718185b77b8ed7c9eb3/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f5175616e74756d436972637569744f70742f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/QuantumCircuitOpt/version.svg" style="max-width: 100%;"></a></p>

<p dir="auto">Dev version: <a href="https://harshangrjn.github.io/QuantumCircuitOpt.jl/dev/" rel="nofollow"><img src="https://github.com/harshangrjn/QuantumCircuitOpt.jl/actions/workflows/documentation.yml/badge.svg" alt="Documentation" style="max-width: 100%;"></a></p>

<p dir="auto"><strong>QuantumCircuitOpt</strong> is a Julia package which implements discrete optimization-based methods for provably optimal synthesis of an architecture for quantum circuits. While programming quantum computers, a primary goal is to build useful and less-noisy quantum circuits from the basic building blocks, also termed as elementary gates which arise due to hardware constraints. Thus, given a desired quantum computation, as a target gate, and a set of elemental one- and two-qubit gates, this package provides a <em>provably optimal, exact</em> (up to global phase and machine precision) or an approximate decomposition with minimum number of elemental gates and CNOT gates. Now, this package also supports multi-qubit gates in the elementary gates set, such as the <a href="https://harshangrjn.github.io/QuantumCircuitOpt.jl/dev/multi_qubit_gates/#GRGate" rel="nofollow">global rotation</a> gate. <em>Note that QuantumCircuitOpt currently supports only decompositions of circuits up to ten qubits</em>.</p>
<p dir="auto">Overall, QuantumCircuitOpt can be a useful tool for researchers and developers working on quantum algorithms or quantum computing applications, as it can help to reduce the resource requirements of quantum computations, making them more practical and efficient.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">QuantumCircuitOpt is a registered package and can be installed by entering the following in the Julia REPL-mode:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import Pkg
Pkg.add(&quot;QuantumCircuitOpt&quot;)"><pre><span class="pl-k">import</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>QuantumCircuitOpt<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<ul dir="auto">
<li>Clone the repository.</li>
<li>Open a terminal in the repo folder and run <code>julia --project=.</code>.</li>
<li>Hit <code>]</code> to open the project environment and run <code>test</code> to run unit tests. If
you see an error because of missing packages, run <code>resolve</code>.</li>
</ul>
<p dir="auto">On how to use this package, check the Documentation's <a href="https://harshangrjn.github.io/QuantumCircuitOpt.jl/dev/quickguide/#Sample-circuit-decomposition" rel="nofollow">quick start guide</a> and the <a href="https://github.com/harshangrjn/QuantumCircuitOpt.jl/tree/master/examples">examples</a> folder for several important circuit decompositions.</p>
<h2 dir="auto"><a id="user-content-video-links" class="anchor" aria-hidden="true" href="#video-links"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Video Links</h2>
<p dir="auto">For more technical details about the package, check out these video links:</p>
<ul dir="auto">
<li>November 2022: Presentation <a href="https://vimeo.com/771366943/01810daa4e" rel="nofollow">link</a> from the <a href="https://sc22.supercomputing.org/session/?sess=sess423" rel="nofollow">Third Quantum Computing Software Workshop</a>, held in conjunction with the International Conference on Super Computing (<a href="https://sc22.supercomputing.org" rel="nofollow">SC22</a>).</li>
<li>July 2022: Presentation <a href="https://www.youtube.com/watch?v=OeONXwD4JJY" rel="nofollow">link</a> from the <a href="https://pretalx.com/juliacon-2022/talk/KJTGC3/" rel="nofollow">JuliaCon 2022</a> conference.</li>
<li>November 2021: Presentation <a href="https://www.youtube.com/watch?v=sf1HJW5Vmio" rel="nofollow">link</a> from the <a href="https://sc21.supercomputing.org/session/?sess=sess345" rel="nofollow">Second Quantum Computing Software Workshop</a>, held in conjunction with the International Conference on Super Computing (<a href="https://sc21.supercomputing.org" rel="nofollow">SC21</a>).</li>
</ul>
<h2 dir="auto"><a id="user-content-sample-circuit-synthesis" class="anchor" aria-hidden="true" href="#sample-circuit-synthesis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Sample Circuit Synthesis</h2>
<p dir="auto">Here is a sample usage of QuantumCircuitOpt to optimally decompose a 2-qubit controlled-Z gate (<a href="https://harshangrjn.github.io/QuantumCircuitOpt.jl/dev/2_qubit_gates/#CZGate" rel="nofollow">CZGate</a>) using the entangling <a href="https://harshangrjn.github.io/QuantumCircuitOpt.jl/dev/2_qubit_gates/#CNotGate" rel="nofollow">CNOT</a> gate and an one-qubit universal rotation gate (<a href="https://harshangrjn.github.io/QuantumCircuitOpt.jl/dev/1_qubit_gates/#U3Gate" rel="nofollow">U3Gate</a>) with three discretized Euler angles (θ,ϕ,λ):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import QuantumCircuitOpt as QCOpt
using JuMP
using Gurobi

# Target: CZGate
function target_gate()
    return Array{Complex{Float64},2}([1 0 0 0; 0 1 0 0; 0 0 1 0; 0 0 0 -1]) 
end

params = Dict{String, Any}(
&quot;num_qubits&quot; =&gt; 2, 
&quot;maximum_depth&quot; =&gt; 4,    
&quot;elementary_gates&quot; =&gt; [&quot;U3_1&quot;, &quot;U3_2&quot;, &quot;CNot_1_2&quot;, &quot;Identity&quot;],
&quot;target_gate&quot; =&gt; target_gate(),
&quot;objective&quot; =&gt; &quot;minimize_depth&quot;,
&quot;decomposition_type&quot; =&gt; &quot;exact_optimal&quot;,
       
&quot;U3_θ_discretization&quot; =&gt; -π:π/2:π,
&quot;U3_ϕ_discretization&quot; =&gt; -π:π/2:π,
&quot;U3_λ_discretization&quot; =&gt; -π:π/2:π,
)

qcm_optimizer = JuMP.optimizer_with_attributes(Gurobi.Optimizer, &quot;presolve&quot; =&gt; 1) 
QCOpt.run_QCModel(params, qcm_optimizer)"><pre><span class="pl-k">import</span> QuantumCircuitOpt <span class="pl-k">as</span> QCOpt
<span class="pl-k">using</span> JuMP
<span class="pl-k">using</span> Gurobi

<span class="pl-c"><span class="pl-c">#</span> Target: CZGate</span>
<span class="pl-k">function</span> <span class="pl-en">target_gate</span>()
    <span class="pl-k">return</span> <span class="pl-c1">Array</span><span class="pl-c1">{Complex{Float64},2}</span>([<span class="pl-c1">1</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span>; <span class="pl-c1">0</span> <span class="pl-c1">1</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span>; <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">1</span> <span class="pl-c1">0</span>; <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span> <span class="pl-k">-</span><span class="pl-c1">1</span>]) 
<span class="pl-k">end</span>

params <span class="pl-k">=</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>(
<span class="pl-s"><span class="pl-pds">"</span>num_qubits<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>, 
<span class="pl-s"><span class="pl-pds">"</span>maximum_depth<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">4</span>,    
<span class="pl-s"><span class="pl-pds">"</span>elementary_gates<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">"</span>U3_1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>U3_2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>CNot_1_2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Identity<span class="pl-pds">"</span></span>],
<span class="pl-s"><span class="pl-pds">"</span>target_gate<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">target_gate</span>(),
<span class="pl-s"><span class="pl-pds">"</span>objective<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>minimize_depth<span class="pl-pds">"</span></span>,
<span class="pl-s"><span class="pl-pds">"</span>decomposition_type<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>exact_optimal<span class="pl-pds">"</span></span>,
       
<span class="pl-s"><span class="pl-pds">"</span>U3_θ_discretization<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-k">-</span>π<span class="pl-c1">:π</span><span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span>π,
<span class="pl-s"><span class="pl-pds">"</span>U3_ϕ_discretization<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-k">-</span>π<span class="pl-c1">:π</span><span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span>π,
<span class="pl-s"><span class="pl-pds">"</span>U3_λ_discretization<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-k">-</span>π<span class="pl-c1">:π</span><span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span>π,
)

qcm_optimizer <span class="pl-k">=</span> JuMP<span class="pl-k">.</span><span class="pl-c1">optimizer_with_attributes</span>(Gurobi<span class="pl-k">.</span>Optimizer, <span class="pl-s"><span class="pl-pds">"</span>presolve<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>) 
QCOpt<span class="pl-k">.</span><span class="pl-c1">run_QCModel</span>(params, qcm_optimizer)</pre></div>
<p dir="auto">If you prefer to decompose a target gate of your choice, update the <code>target_gate()</code> function and the
set of <code>elementary_gates</code> accordingly in the above sample code.</p>
<h2 dir="auto"><a id="user-content-bug-reports-and-contributing" class="anchor" aria-hidden="true" href="#bug-reports-and-contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bug reports and Contributing</h2>
<p dir="auto">Please report any issues via the Github <strong><a href="https://github.com/harshangrjn/QuantumCircuitOpt.jl/issues">issue tracker</a></strong>. All types of issues are welcome and encouraged; this includes bug reports, documentation typos, feature requests, etc.</p>
<p dir="auto">QuantumCircuitOpt is being actively developed and suggestions or other forms of contributions are encouraged.</p>
<h2 dir="auto"><a id="user-content-acknowledgement" class="anchor" aria-hidden="true" href="#acknowledgement"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgement</h2>
<p dir="auto">This work was supported by Los Alamos National Laboratory's LDRD Early Career Research award. The primary developer of this package is <a href="http://harshanagarajan.com" rel="nofollow">Harsha Nagarajan</a> (<a href="https://github.com/harshangrjn">@harshangrjn</a>).</p>
<h2 dir="auto"><a id="user-content-citing-quantumcircuitopt" class="anchor" aria-hidden="true" href="#citing-quantumcircuitopt"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citing QuantumCircuitOpt</h2>
<p dir="auto">If you find QuantumCircuitOpt useful in your work, we request you to cite the following paper (<a href="https://doi.org/10.1109/QCS54837.2021.00010" rel="nofollow">IEEE link</a>, <a href="https://arxiv.org/abs/2111.11674" rel="nofollow">arXiv link</a>):</p>
<div class="highlight highlight-text-bibtex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@inproceedings{QCOpt_SC2021,
  title={{QuantumCircuitOpt}: An Open-source Framework for Provably Optimal Quantum Circuit Design},
  author={Nagarajan, Harsha and Lockwood, Owen and Coffrin, Carleton},
  booktitle={SC21: The International Conference for High Performance Computing, Networking, Storage, and Analysis},
  series={Second Workshop on Quantum Computing Software},
  pages={55--63},
  year={2021},
  doi={10.1109/QCS54837.2021.00010},
  organization={IEEE Computer Society}
}"><pre><span class="pl-k">@inproceedings</span>{<span class="pl-en">QCOpt_SC2021</span>,
  <span class="pl-s">title</span>=<span class="pl-s"><span class="pl-pds">{</span>{QuantumCircuitOpt}: An Open-source Framework for Provably Optimal Quantum Circuit Design<span class="pl-pds">}</span></span>,
  <span class="pl-s">author</span>=<span class="pl-s"><span class="pl-pds">{</span>Nagarajan, Harsha and Lockwood, Owen and Coffrin, Carleton<span class="pl-pds">}</span></span>,
  <span class="pl-s">booktitle</span>=<span class="pl-s"><span class="pl-pds">{</span>SC21: The International Conference for High Performance Computing, Networking, Storage, and Analysis<span class="pl-pds">}</span></span>,
  <span class="pl-s">series</span>=<span class="pl-s"><span class="pl-pds">{</span>Second Workshop on Quantum Computing Software<span class="pl-pds">}</span></span>,
  <span class="pl-s">pages</span>=<span class="pl-s"><span class="pl-pds">{</span>55--63<span class="pl-pds">}</span></span>,
  <span class="pl-s">year</span>=<span class="pl-s"><span class="pl-pds">{</span>2021<span class="pl-pds">}</span></span>,
  <span class="pl-s">doi</span>=<span class="pl-s"><span class="pl-pds">{</span>10.1109/QCS54837.2021.00010<span class="pl-pds">}</span></span>,
  <span class="pl-s">organization</span>=<span class="pl-s"><span class="pl-pds">{</span>IEEE Computer Society<span class="pl-pds">}</span></span>
}</pre></div>
</article></div>