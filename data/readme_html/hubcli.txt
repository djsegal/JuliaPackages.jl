<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-hubclijl" class="anchor" aria-hidden="true" href="#hubclijl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>HubCLI.jl</h1>
<p>A library that uses the <a href="https://github.com/github/hub">hub cli</a> to interact with GitHub. As hub wraps the git cli you need git preinstalled but you may also use it to call into git.</p>
<h1><a id="user-content-exports" class="anchor" aria-hidden="true" href="#exports"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Exports</h1>
<p><code>Hub, Hub.hub, Hub.push_secret!</code></p>
<p>HubCLI exports the module <code>Hub</code> which contains all functions. The decision was made to not to claim the Hub package name but to have everything behind the Hub module nevertheless. Also, qualifying the functions with the module name is considered good style for this package (as some visual marker since you're shelling out to interact with the 'hub').</p>
<div class="highlight highlight-source-julia"><pre>Hub<span class="pl-k">.</span><span class="pl-c1">hub</span>(args<span class="pl-k">...</span>; [input])<span class="pl-k">::</span><span class="pl-c1">(stdout::String, stderr::String, errorcode::Int)</span></pre></div>
<p>shells out to <code>hub</code> passing arguments <code>args</code>. <code>input</code> will be passed as stdin.</p>
<div class="highlight highlight-source-julia"><pre>Hub<span class="pl-k">.</span><span class="pl-c1">push_secret!</span>(gh_repo, pairs<span class="pl-k">::</span><span class="pl-c1">Pair{String,Base.SecretBuffer}</span>...)</pre></div>
<p>Note: Shreds the passed <code>SecretBuffer</code>s after usage. <code>remote_gh_url</code> be something like "rapus95/HubCLI.jl". <code>pairs</code> is a list of <code>"key"=&gt;value</code> pairs where the value needs to be a <code>Base.SecretBuffer</code>.</p>
</article></div>