<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mqlibjl" class="anchor" aria-hidden="true" href="#mqlibjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MQLib.jl</h1>
<p dir="auto"><a href="https://zenodo.org/badge/latestdoi/568213607" rel="nofollow"><img src="https://camo.githubusercontent.com/b04672aee5f6800a3a7cca37ef63def69f36628f9e49b24c5246b6a80a2e0555/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3536383231333630372e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/568213607.svg" style="max-width: 100%;"></a>
<a href="https://github.com/psrenergy/QUBODrivers.jl"><img src="https://camo.githubusercontent.com/577cb83e897799ec0841dea0a021753569dee0a027228505adb044b992e7e962/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f506f776572656425323062792d5155424f447269766572732e6a6c2d253230253233343036336438" alt="QUBODRIVERS" data-canonical-src="https://img.shields.io/badge/Powered%20by-QUBODrivers.jl-%20%234063d8" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/MQLib/MQLib">MQLib</a> wrapper for JuMP.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import Pkg

julia&gt; Pkg.add(&quot;MQLib&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg

julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>MQLib<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JuMP, MQLib

Q = [
   -1  2  2
    2 -1  2
    2  2 -1
]

model = Model(MQLib.Optimizer)

@variable(model, x[1:3], Bin)
@objective(model, Max, x' * Q * x)

optimize!(model)"><pre><span class="pl-k">using</span> JuMP, MQLib

Q <span class="pl-k">=</span> [
   <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
    <span class="pl-c1">2</span> <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-c1">2</span>
    <span class="pl-c1">2</span>  <span class="pl-c1">2</span> <span class="pl-k">-</span><span class="pl-c1">1</span>
]

model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(MQLib<span class="pl-k">.</span>Optimizer)

<span class="pl-c1">@variable</span>(model, x[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>], Bin)
<span class="pl-c1">@objective</span>(model, Max, x<span class="pl-k">'</span> <span class="pl-k">*</span> Q <span class="pl-k">*</span> x)

<span class="pl-c1">optimize!</span>(model)</pre></div>
<h2 dir="auto"><a id="user-content-selecting-heuristics" class="anchor" aria-hidden="true" href="#selecting-heuristics"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Selecting Heuristics</h2>
<p dir="auto">This wrapper allows one to access all 39 QUBO and Max-Cut Heuristics provided by <a href="https://github.com/MQLib/MQLib">MQLib</a>.
Selecting the method to be used can be achieved via JuMP's attribute interface:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="JuMP.set_optimizer_attribute(model, &quot;heuristic&quot;, &quot;ALKHAMIS1998&quot;)"><pre>JuMP<span class="pl-k">.</span><span class="pl-c1">set_optimizer_attribute</span>(model, <span class="pl-s"><span class="pl-pds">"</span>heuristic<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>ALKHAMIS1998<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">or by calling MQLib helper functions:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="MQLib.set_heuristic(model, &quot;ALKHAMIS1998&quot;)"><pre>MQLib<span class="pl-k">.</span><span class="pl-c1">set_heuristic</span>(model, <span class="pl-s"><span class="pl-pds">"</span>ALKHAMIS1998<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">To list available heuristics and their descriptions, run:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="MQLib.show_heuristics()"><pre>MQLib<span class="pl-k">.</span><span class="pl-c1">show_heuristics</span>()</pre></div>
</article></div>