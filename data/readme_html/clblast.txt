<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-clblast" class="anchor" aria-hidden="true" href="#clblast"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CLBlast</h1>
<p><a href="https://gitlab.com/JuliaGPU/CLBlast.jl/pipelines" rel="nofollow"><img src="https://camo.githubusercontent.com/86c66854f1a3d037e146148383b7d1731960d45d/68747470733a2f2f6769746c61622e636f6d2f4a756c69614750552f434c426c6173742e6a6c2f6261646765732f6d61737465722f706970656c696e652e737667" alt="Build Status" data-canonical-src="https://gitlab.com/JuliaGPU/CLBlast.jl/badges/master/pipeline.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/JuliaGPU/CLBlast.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/362177a8c359bc9e47abdd61aecb8276f4a0a485/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614750552f434c426c6173742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaGPU/CLBlast.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/ranocha/CLBlast-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a6c9768bbf0469c4e8c8a2d26e853b51064ea77b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f693173616f6f646571726570696f646c3f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/i1saoodeqrepiodl?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaGPU/CLBlast.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/f9bfb693ef0f5d4386eba04eeb32467dcb8828b2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c69614750552f434c426c6173742e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaGPU/CLBlast.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaGPU/CLBlast.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/0cf571c9cbcefdfc0a07e39ae4c947556c43b7e0/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614750552f434c426c6173742e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaGPU/CLBlast.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Wrapper of <a href="https://github.com/CNugteren/CLBlast">CLBlast</a>, a "tuned OpenCL BLAS library".
This package has been inspired by <a href="https://github.com/JuliaGPU/CLBLAS.jl">CLBLAS.jl</a> and
the BLAS module of <a href="https://github.com/JuliaLang/julia">Julia</a> and is designed similarly.</p>
<h2><a id="user-content-current-status" class="anchor" aria-hidden="true" href="#current-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Current Status</h2>
<p>Most low-level bindings and high-level wrappers of BLAS level 1, 2, and 3 routines are implemented.</p>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> CLBlast, OpenCL
<span class="pl-c1">@static</span> <span class="pl-k">if</span> VERSION <span class="pl-k">&lt;</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">v</span>"</span>0.7-<span class="pl-pds">"</span></span>
    LA <span class="pl-k">=</span> LinAlg
<span class="pl-k">else</span>
    <span class="pl-k">using</span> Random, LinearAlgebra
    LA <span class="pl-k">=</span> LinearAlgebra
<span class="pl-k">end</span>

device, context, queue <span class="pl-k">=</span> cl<span class="pl-k">.</span><span class="pl-c1">create_compute_context</span>()

<span class="pl-c"><span class="pl-c">#</span> setup data</span>
α <span class="pl-k">=</span> <span class="pl-c1">1.</span>f0
β <span class="pl-k">=</span> <span class="pl-c1">1.</span>f0
A <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Float32, <span class="pl-c1">10</span>, <span class="pl-c1">8</span>)
B <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Float32, <span class="pl-c1">8</span>, <span class="pl-c1">6</span>)
C <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(Float32, <span class="pl-c1">10</span>, <span class="pl-c1">6</span>)

<span class="pl-c"><span class="pl-c">#</span> transfer data</span>
A_cl <span class="pl-k">=</span> cl<span class="pl-k">.</span><span class="pl-c1">CLArray</span>(queue, A)
B_cl <span class="pl-k">=</span> cl<span class="pl-k">.</span><span class="pl-c1">CLArray</span>(queue, B)
C_cl <span class="pl-k">=</span> cl<span class="pl-k">.</span><span class="pl-c1">CLArray</span>(queue, C)

<span class="pl-c"><span class="pl-c">#</span> compute</span>
LA<span class="pl-k">.</span>BLAS<span class="pl-k">.</span><span class="pl-c1">gemm!</span>(<span class="pl-s"><span class="pl-pds">'</span>N<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>N<span class="pl-pds">'</span></span>, α, A, B, β, C)
CLBlast<span class="pl-k">.</span><span class="pl-c1">gemm!</span>(<span class="pl-s"><span class="pl-pds">'</span>N<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">'</span>N<span class="pl-pds">'</span></span>, α, A_cl, B_cl, β, C_cl)

<span class="pl-c"><span class="pl-c">#</span> compare results</span>
<span class="pl-c1">@assert</span> cl<span class="pl-k">.</span><span class="pl-c1">to_host</span>(C_cl) <span class="pl-k">≈</span> C</pre></div>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Since this package is registered, you can add it using <code>]</code> (activate package mode) and</p>
<div class="highlight highlight-source-julia"><pre>(v0<span class="pl-c1">.7</span>) pkg<span class="pl-k">&gt;</span> add CLBlast</pre></div>
<p>on Julia <code>v0.7</code> or newer and using</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CLBlast<span class="pl-pds">"</span></span>)</pre></div>
<p>on Julia <code>v0.6</code>. During the build process, a suitable version of CLBlast will be
downloaded and build. On Linux, you have to install <code>clang</code>, since the available
binaries of CLBlast will fail to work with complex numbers from Julia.</p>
</article></div>