<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://sadit.github.io/TextSearch.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/sadit/TextSearch.jl/actions"><img src="https://github.com/sadit/TextSearch.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/sadit/TextSearch.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/bcdb2b06d305293b1a602c21f723fc5d7696c7396ef8d4216a20e4f902353359/68747470733a2f2f636f6465636f762e696f2f67682f73616469742f546578745365617263682e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/sadit/TextSearch.jl/branch/main/graph/badge.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-textsearch" class="anchor" aria-hidden="true" href="#textsearch"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TextSearch</h1>
<p><code>TextSearch.jl</code> is a package to create vector representations of text, mostly, independently of the language. It is intended to be used with <a href="https://github.com/sadit/SimilaritySearch.jl">SimilaritySearch.jl</a>, but can be used independetly if needed.
<code>TextSearch.jl</code> was renamed from <code>TextModel.jl</code> to reflect its capabilities and mission.</p>
<p>For generic text analysis you should use other packages like <a href="https://github.com/johnmyleswhite/TextAnalysis.jl">TextAnalysis.jl</a>.</p>
<p>It supports a number of simple text preprocessing functions, and three different kinds of tokenizers, i.e., word n-grams, character q-grams, and skip-grams. It supports creating multisets of tokens, commonly named bag of words (BOW).
<code>TextSearch.jl</code> can produce sparse vector representations based on term-weighting schemes like TF, IDF, and TFIDF. It also supports term-weighting schemes designed to cope text classification tasks, mostly based on distributional representations.</p>
<h1><a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installing</h1>
<p>You may install the package as follows</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="] add TextSearch
"><pre>] add TextSearch</pre></div>
<p>also, you can run the set of tests as follows</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="] test TextSearch
"><pre>] test TextSearch</pre></div>
<h2><a id="user-content-using-the-library" class="anchor" aria-hidden="true" href="#using-the-library"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Using the library</h2>
<p>The directory <a href="https://github.com/sadit/TextSearch.jl/tree/master/src">examples</a> contains a few examples of how to use it, based on <a href="https://github.com/fonsp/Pluto.jl">Pluto.jl</a></p>
<p>After cloning the repository, you must intantiate the directory.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg
pkg&quot;instantiate&quot;
"><pre><span class="pl-k">using</span> Pkg
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>instantiate<span class="pl-pds">"</span></span></pre></div>
<p>once you instantiated your environment, just run Pluto notebook and explore the examples</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pluto
Pluto.run()
"><pre><span class="pl-k">using</span> Pluto
Pluto<span class="pl-k">.</span><span class="pl-c1">run</span>()</pre></div>
</article></div>