<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://RemoteSensingTools.github.io/InstrumentOperator.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="dev" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-instrumentoperatorjl" class="anchor" aria-hidden="true" href="#instrumentoperatorjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>InstrumentOperator.jl</h1>
<p dir="auto">Collection of instrument line-shape methods for hyperspectral remote sensing. Basic objective is to provide composable routines to apply a variety of instrument line-shapes (ILS) for the convolution and resampling of high resolution modeled radiance with an instrument operator. At the moment, we have FTS systems (sinc function convolved with assymetric box), spectrally varying lookup tables as for the Orbiting Carbon Observatory and generic distribution functions (e.g. Gaussian) as instrument kernels.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">InstrumentOperator can be installed using the Julia package manager.
From the Julia REPL, type <code>]</code> to enter the Pkg REPL mode and run</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add https://github.com/RadiativeTransfer/InstrumentOperator.jl"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>RadiativeTransfer<span class="pl-k">/</span>InstrumentOperator<span class="pl-k">.</span>jl</pre></div>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">Create an FTS instrument type with a maximum optical path difference (MOPD) of 2.5cm, a Field of View (FOV) of 7.9mrad and an assymetry factor of 0.02 (very close to GOSAT specifications:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Create an instrument:
FTS = FTSInstrument(2.5, 1.9e-3, 0.02)
# Define a range for the ILS (in wavenumbers here)
x = -4:0.01:4
# Create a kernel at a center wavenumber of 13000cm⁻¹
FTSkernel = create_instrument_kernel(FTS, x,13000.0)
# plot
plot(x, FTSkernel.parent,label=&quot;FTS lineshape&quot;,lw=2)"><pre><span class="pl-c"><span class="pl-c">#</span> Create an instrument:</span>
FTS <span class="pl-k">=</span> <span class="pl-c1">FTSInstrument</span>(<span class="pl-c1">2.5</span>, <span class="pl-c1">1.9e-3</span>, <span class="pl-c1">0.02</span>)
<span class="pl-c"><span class="pl-c">#</span> Define a range for the ILS (in wavenumbers here)</span>
x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">0.01</span><span class="pl-k">:</span><span class="pl-c1">4</span>
<span class="pl-c"><span class="pl-c">#</span> Create a kernel at a center wavenumber of 13000cm⁻¹</span>
FTSkernel <span class="pl-k">=</span> <span class="pl-c1">create_instrument_kernel</span>(FTS, x,<span class="pl-c1">13000.0</span>)
<span class="pl-c"><span class="pl-c">#</span> plot</span>
<span class="pl-c1">plot</span>(x, FTSkernel<span class="pl-k">.</span>parent,label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>FTS lineshape<span class="pl-pds">"</span></span>,lw<span class="pl-k">=</span><span class="pl-c1">2</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/10467190/115968929-07cdd100-a4ef-11eb-839b-f22918743828.png"><img src="https://user-images.githubusercontent.com/10467190/115968929-07cdd100-a4ef-11eb-839b-f22918743828.png" alt="FTS_ils" style="max-width: 100%;"></a></p>
<p dir="auto">We can also use Julia's <code>Distributions</code> package and create custom kernels with Continous distributions and convolutions thereof, e.g. an AVIRIS-NG like ILS (5nm pixels):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Define a range for the ILS (resolution always has to be the same as your high resolution spectrum you want to convolve!).
x = -15:0.01:15
# Create a custom kernel using two Distributions, convolution of box and Gaussian (e.g. pixel width as box, smoothed by Gaussian)
avNGkernel = create_instrument_kernel([Normal(0, 1),Uniform(-2.5,2.5)], x)"><pre><span class="pl-c"><span class="pl-c">#</span> Define a range for the ILS (resolution always has to be the same as your high resolution spectrum you want to convolve!).</span>
x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">0.01</span><span class="pl-k">:</span><span class="pl-c1">15</span>
<span class="pl-c"><span class="pl-c">#</span> Create a custom kernel using two Distributions, convolution of box and Gaussian (e.g. pixel width as box, smoothed by Gaussian)</span>
avNGkernel <span class="pl-k">=</span> <span class="pl-c1">create_instrument_kernel</span>([<span class="pl-c1">Normal</span>(<span class="pl-c1">0</span>, <span class="pl-c1">1</span>),<span class="pl-c1">Uniform</span>(<span class="pl-k">-</span><span class="pl-c1">2.5</span>,<span class="pl-c1">2.5</span>)], x)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/10467190/116157489-ec56f780-a6a1-11eb-9048-8b6938fec69f.png"><img src="https://user-images.githubusercontent.com/10467190/116157489-ec56f780-a6a1-11eb-9048-8b6938fec69f.png" alt="AV_ils" style="max-width: 100%;"></a></p>
</article></div>