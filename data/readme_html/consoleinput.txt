<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-consoleinputjl" class="anchor" aria-hidden="true" href="#consoleinputjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ConsoleInput.jl</h1>
<p><a href="https://travis-ci.com/mildc055ee/ConsoleInput.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/07d4b78e4d478a66a57d8bb9240026893a91c012/68747470733a2f2f7472617669732d63692e636f6d2f6d696c646330353565652f436f6e736f6c65496e7075742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/mildc055ee/ConsoleInput.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/mildc055ee/ConsoleInput.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/02f3a4bcb59ec311877a1701deb173fa590223af/68747470733a2f2f636f6465636f762e696f2f67682f6d696c646330353565652f436f6e736f6c65496e7075742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/mildc055ee/ConsoleInput.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>minimal stdin wrapper for julia.</p>
<h2><a id="user-content-apis" class="anchor" aria-hidden="true" href="#apis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>APIs</h2>
<p>This module uses original type <code>DlmType</code> defined as below.</p>
<div class="highlight highlight-source-julia"><pre>DlmType <span class="pl-k">=</span> Union{
    AbscractChar,
    AbscractString,
    Regex
}</pre></div>
<p>Default delimiter is <code>" "</code>.You can indicate specific delimiter like <code>readXXX(delimiter=",")</code>.</p>
<p><strong>Note</strong> This packages function returns a single value when args is only one. else returns array.</p>
<h3><a id="user-content-readintioiostdin-delimiterdlmtype-" class="anchor" aria-hidden="true" href="#readintioiostdin-delimiterdlmtype-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>readInt(io::IO=stdin, delimiter::DlmType=" ")</code></h3>
<p>parse inputs to Int.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">readInt</span>() <span class="pl-c"><span class="pl-c">#</span>&lt;-- 1</span>
<span class="pl-c"><span class="pl-c">#</span>--&gt; 1</span>

<span class="pl-c1">readInt</span>() <span class="pl-c"><span class="pl-c">#</span>&lt;-- 1 2 3 4 5</span>
<span class="pl-c"><span class="pl-c">#</span>--&gt; [1, 2, 3, 4, 5]</span>

<span class="pl-c1">readInt</span>(delimiter<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>,<span class="pl-pds">'</span></span>) <span class="pl-c"><span class="pl-c">#</span>&lt;--6,7,8,9,10</span>
<span class="pl-c"><span class="pl-c">#</span>--&gt; [6, 7, 8, 9, 10]</span></pre></div>
<h3><a id="user-content-readstringioiostdin-delimiterdlmtype-" class="anchor" aria-hidden="true" href="#readstringioiostdin-delimiterdlmtype-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>readString(io::IO=stdin, delimiter::DlmType=" ")</code></h3>
<p>parse inputs to string.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">readString</span>() <span class="pl-c"><span class="pl-c">#</span>&lt;-- Lorem</span>
<span class="pl-c"><span class="pl-c">#</span>--&gt; "Lorem"</span>

<span class="pl-c1">readString</span>() <span class="pl-c"><span class="pl-c">#</span>&lt;-- Lorem ipsum es</span>
<span class="pl-c"><span class="pl-c">#</span>--&gt;["Lorem", "ipsum", "es"]</span></pre></div>
<h3><a id="user-content-readgeneraltype-ioiostdin-delimiterdlmtype-" class="anchor" aria-hidden="true" href="#readgeneraltype-ioiostdin-delimiterdlmtype-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>readGeneral(type, io::IO=stdin, delimiter::DlmType=" ")</code></h3>
<p>parse inputs to any types you want. First argument MUST be a type name.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">readGeneral</span>(Complex{Fload64}) <span class="pl-c"><span class="pl-c">#</span>&lt;--1.2e-3+4j -9+6.8i 0.0004 90.5im</span>
<span class="pl-c"><span class="pl-c">#</span>--&gt;[0.0012+4.0im, -9.0+6.8im, 0.0004+0.0im, 0.0+90.5im]</span></pre></div>
</article></div>