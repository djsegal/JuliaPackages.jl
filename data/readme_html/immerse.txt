<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a target="_blank" rel="noopener noreferrer" href="images/splash.png"><img src="images/splash.png" alt="splash" style="max-width:100%;"></a></p>
<h1><a id="user-content-immerse" class="anchor" aria-hidden="true" href="#immerse"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Immerse</h1>
<p><a href="https://travis-ci.org/JuliaGraphics/Immerse.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a065364a5dd7e4db139fe6eb6251a17f95bc97af/68747470733a2f2f7472617669732d63692e6f72672f4a756c696147726170686963732f496d6d657273652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaGraphics/Immerse.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Immerse is a wrapper that adds graphical interactivity to Julia plots.
Currently, Immerse supports
<a href="https://github.com/dcjones/Gadfly.jl">Gadfly</a>.</p>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h1>
<p>By and large, you plot just as you would in Gadfly:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Immerse, Distributions
X <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">MultivariateNormal</span>([<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>], [<span class="pl-c1">1.0</span> <span class="pl-c1">0.5</span>; <span class="pl-c1">0.5</span> <span class="pl-c1">1.0</span>]), <span class="pl-c1">10000</span>)
<span class="pl-c1">plot</span>(x<span class="pl-k">=</span>X[<span class="pl-c1">1</span>,:], y<span class="pl-k">=</span>X[<span class="pl-c1">2</span>,:], Geom<span class="pl-k">.</span>hexbin)</pre></div>
<p>However, rather than being displayed in a browser window, you'll see your figure in a Gtk window:</p>
<p><a target="_blank" rel="noopener noreferrer" href="images/zoom_hexbin_snapshot.png"><img src="images/zoom_hexbin_snapshot.png" alt="window" style="max-width:100%;"></a></p>
<p>The toolbar at the top supports saving your figure to a file, zooming and panning, and lasso selection.</p>
<p>Zooming and panning uses the defaults set by <a href="https://github.com/timholy/GtkUtilities.jl">GtkUtilities</a>.  The left mouse button allows you to rubberband-select a zoom region.  Use your mouse wheel or arrow-keys to pan or change the zoom level.  Double-click, or press the 1:1 button, to restore the full view.</p>
<h2><a id="user-content-lasso-selection" class="anchor" aria-hidden="true" href="#lasso-selection"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lasso selection</h2>
<p>The right-most button on the toolbar allows you to select a group of points for further analysis by drawing a "lasso" around them:</p>
<p><a target="_blank" rel="noopener noreferrer" href="images/lasso_snapshot.png"><img src="images/lasso_snapshot.png" alt="lasso" style="max-width:100%;"></a></p>
<p>By default, this pops up a dialog asking you which variable in <code>Main</code> you want to save the selected indexes to:</p>
<p><a target="_blank" rel="noopener noreferrer" href="images/lasso_dialog_snapshot.png"><img src="images/lasso_dialog_snapshot.png" alt="lassodialog" style="max-width:100%;"></a></p>
<p>You can alternatively define a custom callback function; see the help for <code>lasso_initialize</code> by typing <code>?lasso_initialize</code> at the REPL.</p>
<p>Lasso selection is currently implemented only for <code>Geom.point</code> and <code>Geom.line</code>.  If you want to try this feature, the demonstration in <code>test/faces.jl</code> can be fun.</p>
<h2><a id="user-content-hit-testing" class="anchor" aria-hidden="true" href="#hit-testing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Hit testing</h2>
<p>You can add extra interactivity by setting up callbacks that run whenever the user clicks on an object. A demonstration of this capability is exhibited in the <code>test/hittesting.jl</code> test script:</p>
<p><a target="_blank" rel="noopener noreferrer" href="images/hittest_snapshot.png"><img src="images/hittest_snapshot.png" alt="hittest" style="max-width:100%;"></a></p>
<p>Here the red circles are drawn around the dots that the user clicked on; see also the console output that showed the results of clicking on the line segments between the dots.</p>
<p>Note that hit testing is disabled while the "zoom" button is active.  Like lasso selection, this is currently implemented only for <code>Geom.point</code> and <code>Geom.line</code>.</p>
<h2><a id="user-content-setting-and-getting-properties" class="anchor" aria-hidden="true" href="#setting-and-getting-properties"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Setting and getting properties</h2>
<p>Objects can be modified interactively after their creation:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Immerse, Colors

julia<span class="pl-k">&gt;</span> hfig <span class="pl-k">=</span> <span class="pl-c1">figure</span>()
<span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">linspace</span>(<span class="pl-c1">0</span>,<span class="pl-c1">4</span>pi,<span class="pl-c1">101</span>);

julia<span class="pl-k">&gt;</span> p <span class="pl-k">=</span> <span class="pl-c1">plot</span>(x<span class="pl-k">=</span>x, y<span class="pl-k">=</span><span class="pl-c1">sin</span>(x), Geom<span class="pl-k">.</span><span class="pl-c1">line</span>(tag<span class="pl-k">=</span><span class="pl-c1">:line</span>))

julia<span class="pl-k">&gt;</span> <span class="pl-c1">setproperty!</span>((hfig,<span class="pl-c1">:line</span>), <span class="pl-c1">rand</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>), <span class="pl-c1">:linewidth</span>)
<span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">setproperty!</span>((hfig,<span class="pl-c1">:line</span>), <span class="pl-c1">RGB</span>(<span class="pl-c1">rand</span>(),<span class="pl-c1">rand</span>(),<span class="pl-c1">rand</span>()), <span class="pl-c1">:stroke</span>)
<span class="pl-c1">RGB</span><span class="pl-c1">{Float64}</span>(<span class="pl-c1">0.9563599683564541</span>,<span class="pl-c1">0.20964995278692222</span>,<span class="pl-c1">0.997388106654052</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">setproperty!</span>((hfig,<span class="pl-c1">:line</span>), <span class="pl-c1">false</span>, <span class="pl-c1">:visible</span>)
<span class="pl-c1">false</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">setproperty!</span>((hfig,<span class="pl-c1">:line</span>), <span class="pl-c1">true</span>, <span class="pl-c1">:visible</span>)
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">getproperty</span>((hfig,<span class="pl-c1">:line</span>), <span class="pl-c1">:visible</span>)
<span class="pl-c1">1</span><span class="pl-k">-</span>element Array{Bool,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">true</span></pre></div>
<p>Compose <code>Form</code> and <code>Property</code> objects apply to a vector of objects, which is why <code>getproperty</code> returns a vector.</p>
<h2><a id="user-content-figure-windows" class="anchor" aria-hidden="true" href="#figure-windows"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Figure windows</h2>
<p>Each figure is addressed by an integer; for a window displaying a
single Gadfly figure, by default this integer appears in the window
title.</p>
<p>There are a few simple utilities for working with figure windows:</p>
<ul>
<li><code>figure()</code> opens a new figure window. This will become the default
plotting window.</li>
<li><code>figure(3)</code> raises the corresponding window and makes it the default.</li>
<li><code>gcf()</code> returns the index of the current default figure.</li>
<li><code>scf()</code> shows the current figure (raising the window to the top).</li>
<li><code>closefig(3)</code> destroys Figure 3, closing the window.</li>
<li><code>closeall()</code> closes all open figure windows.</li>
</ul>
<h2><a id="user-content-issues" class="anchor" aria-hidden="true" href="#issues"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Issues</h2>
<h4><a id="user-content-when-i-type-scf-nothing-happens" class="anchor" aria-hidden="true" href="#when-i-type-scf-nothing-happens"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>When I type <code>scf()</code>, nothing happens</h4>
<p>Your window manager may have "focus stealing prevention" enabled. For
example, under KDE, go to the Kmenu-&gt;System Settings-&gt;Window
behavior-&gt;Window behavior (pane)-&gt;Focus (tab) and set "Focus stealing
prevent" to "None".  Alternatively, if you want to limit this change
to julia, use the "Window rules" pane and add a new setting where
"Window class (application)" is set to "Regular Expression" with value
"^julia.*".</p>
</article></div>