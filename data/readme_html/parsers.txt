<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-parsersjl" class="anchor" aria-hidden="true" href="#parsersjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Parsers.jl</h1>
<p><a href="https://codecov.io/gh/JuliaData/Parsers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e0e4c7aae820e99b2c509ff915a8972dd9c81ed6/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961446174612f506172736572732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaData/Parsers.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/JuliaData/Parsers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/837e7f032e1f2d873010602e5399b7cb3342fe2f/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961446174612f506172736572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/JuliaData/Parsers.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>A collection of type parsers and utilities for Julia.</p>
<p><strong>Installation</strong>: at the Julia REPL, <code>import Pkg; Pkg.add("Parsers")</code></p>
<p><strong>Maintenance</strong>: Parsers is maintained collectively by the <a href="https://github.com/orgs/JuliaData/people">JuliaData collaborators</a>.
Responsiveness to pull requests and issues can vary, depending on the availability of key collaborators.</p>
<h3><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic Usage</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Parsers

<span class="pl-c"><span class="pl-c">#</span> basic int/float parsing</span>
x <span class="pl-k">=</span> Parsers<span class="pl-k">.</span><span class="pl-c1">parse</span>(Int, <span class="pl-s"><span class="pl-pds">"</span>101<span class="pl-pds">"</span></span>)
y <span class="pl-k">=</span> Parsers<span class="pl-k">.</span><span class="pl-c1">parse</span>(Float64, <span class="pl-s"><span class="pl-pds">"</span>101.101<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> use comma as decimal</span>
y2 <span class="pl-k">=</span> Parsers<span class="pl-k">.</span><span class="pl-c1">parse</span>(Float64, <span class="pl-s"><span class="pl-pds">"</span>101,101<span class="pl-pds">"</span></span>, Parsers<span class="pl-k">.</span><span class="pl-c1">Options</span>(decimal<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">'</span>,<span class="pl-pds">'</span></span>))

<span class="pl-c"><span class="pl-c">#</span> Bool parsing</span>
z <span class="pl-k">=</span> Parsers<span class="pl-k">.</span><span class="pl-c1">parse</span>(Bool, <span class="pl-s"><span class="pl-pds">"</span>true<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Date/DateTime parsing</span>
<span class="pl-k">using</span> Dates
a <span class="pl-k">=</span> Parsers<span class="pl-k">.</span><span class="pl-c1">parse</span>(Date, <span class="pl-s"><span class="pl-pds">"</span>2018-01-01<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> custom dateformat</span>
b <span class="pl-k">=</span> Parsers<span class="pl-k">.</span><span class="pl-c1">parse</span>(Date, <span class="pl-s"><span class="pl-pds">"</span>01/20/2018<span class="pl-pds">"</span></span>, Parsers<span class="pl-k">.</span><span class="pl-c1">Options</span>(dateformat<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>mm/dd/yyyy<span class="pl-pds">"</span></span>))

<span class="pl-c"><span class="pl-c">#</span> will throw on invalid values</span>
Parsers<span class="pl-k">.</span><span class="pl-c1">parse</span>(Int, <span class="pl-s"><span class="pl-pds">"</span>abc<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> tryparse will return `nothing` on invalid values</span>
y <span class="pl-k">=</span> Parsers<span class="pl-k">.</span><span class="pl-c1">tryparse</span>(Int, <span class="pl-s"><span class="pl-pds">"</span>abc<span class="pl-pds">"</span></span>)</pre></div>
<h3><a id="user-content-additional-usage" class="anchor" aria-hidden="true" href="#additional-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Additional usage</h3>
<p>Read through the docs of the following types/functions for more information on using advanced Parsers machinery:</p>
<ul>
<li><code>?Parsers.Options</code></li>
<li><code>?Parsers.xparse</code></li>
<li><code>?Parsers.ReturnCode</code></li>
</ul>
</article></div>