<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-postgres" class="anchor" aria-hidden="true" href="#postgres"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Postgres</h1>
<h2><a id="user-content-postgres-database-interface-for-the-julia-language" class="anchor" aria-hidden="true" href="#postgres-database-interface-for-the-julia-language"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Postgres Database Interface for the Julia language.</h2>
<h3><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic Usage</h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Postgres
julia<span class="pl-k">&gt;</span> conn <span class="pl-k">=</span> <span class="pl-c1">connect</span>(PostgresServer, db<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>julia_test<span class="pl-pds">"</span></span>, host<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>localhost<span class="pl-pds">"</span></span>)
julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span>conn = connect(PostgresServer, "postgresql://localhost/julia_test")</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span>empty strings will cause the server to use defaults.</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span>connect(interface, user, db, host, passwd, port)</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span>conn = connect(PostgresServer, "", "julia_test", "localhost", "", "")</span>
julia<span class="pl-k">&gt;</span> curs <span class="pl-k">=</span> <span class="pl-c1">cursor</span>(conn)
julia<span class="pl-k">&gt;</span> df <span class="pl-k">=</span> <span class="pl-c1">query</span>(curs, <span class="pl-s"><span class="pl-pds">"</span>select 1 from generate_series(1,5) as s<span class="pl-pds">"</span></span>)
<span class="pl-c1">5</span>x1 DataFrames<span class="pl-k">.</span>DataFrame
<span class="pl-k">|</span> Row <span class="pl-k">|</span> x1 <span class="pl-k">|</span>
<span class="pl-k">|</span><span class="pl-k">-----</span><span class="pl-k">|</span><span class="pl-k">----</span><span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">1</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">2</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">3</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">4</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">5</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span></pre></div>
<h3><a id="user-content-iteration" class="anchor" aria-hidden="true" href="#iteration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Iteration</h3>
<p>Memory management is automatic for the cursor interface.</p>
<h4><a id="user-content-buffered-normal-cursor" class="anchor" aria-hidden="true" href="#buffered-normal-cursor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Buffered (Normal) Cursor</h4>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">execute</span>(curs, <span class="pl-s"><span class="pl-pds">"</span>select 1 from generate_series(1, 10)<span class="pl-pds">"</span></span>)
julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> res <span class="pl-k">in</span> curs; <span class="pl-c1">println</span>(res); <span class="pl-k">end</span>;
<span class="pl-c1">10</span>x1 DataFrames<span class="pl-k">.</span>DataFrame
<span class="pl-k">|</span> Row <span class="pl-k">|</span> x1 <span class="pl-k">|</span>
<span class="pl-k">|</span><span class="pl-k">-----</span><span class="pl-k">|</span><span class="pl-k">----</span><span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">1</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">2</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">3</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">4</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">5</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">6</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">7</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">8</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">9</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">10</span>  <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> res <span class="pl-k">in</span> curs; <span class="pl-c1">println</span>(res); <span class="pl-k">end</span>;
<span class="pl-c"><span class="pl-c">#</span> nothing (memory already freed from server)</span></pre></div>
<h4><a id="user-content-streamed-paged-cursor" class="anchor" aria-hidden="true" href="#streamed-paged-cursor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Streamed (Paged) Cursor</h4>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> streamed <span class="pl-k">=</span> <span class="pl-c1">cursor</span>(conn, <span class="pl-c1">3</span>)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">execute</span>(streamed, <span class="pl-s"><span class="pl-pds">"</span>select 1 from generate_series(1, 10)<span class="pl-pds">"</span></span>)
julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> res <span class="pl-k">in</span> streamed; <span class="pl-c1">println</span>(res); <span class="pl-k">end</span>;
<span class="pl-c1">3</span>x1 DataFrames<span class="pl-k">.</span>DataFrame
<span class="pl-k">|</span> Row <span class="pl-k">|</span> x1 <span class="pl-k">|</span>
<span class="pl-k">|</span><span class="pl-k">-----</span><span class="pl-k">|</span><span class="pl-k">----</span><span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">1</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">2</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">3</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-c1">3</span>x1 DataFrames<span class="pl-k">.</span>DataFrame
<span class="pl-k">|</span> Row <span class="pl-k">|</span> x1 <span class="pl-k">|</span>
<span class="pl-k">|</span><span class="pl-k">-----</span><span class="pl-k">|</span><span class="pl-k">----</span><span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">1</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">2</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">3</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-c1">3</span>x1 DataFrames<span class="pl-k">.</span>DataFrame
<span class="pl-k">|</span> Row <span class="pl-k">|</span> x1 <span class="pl-k">|</span>
<span class="pl-k">|</span><span class="pl-k">-----</span><span class="pl-k">|</span><span class="pl-k">----</span><span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">1</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">2</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">3</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-c1">1</span>x1 DataFrames<span class="pl-k">.</span>DataFrame
<span class="pl-k">|</span> Row <span class="pl-k">|</span> x1 <span class="pl-k">|</span>
<span class="pl-k">|</span><span class="pl-k">-----</span><span class="pl-k">|</span><span class="pl-k">----</span><span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-c1">1</span>   <span class="pl-k">|</span> <span class="pl-c1">1</span>  <span class="pl-k">|</span>
<span class="pl-c1">0x1</span> DataFrames<span class="pl-k">.</span>DataFrame</pre></div>
<p>Each iteration allocs and frees memory.</p>
<h3><a id="user-content-result-interface" class="anchor" aria-hidden="true" href="#result-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Result Interface</h3>
<p>Cursor must be closed (or unreachable) to release server resources.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Postgres<span class="pl-k">.</span>Results
julia<span class="pl-k">&gt;</span> result <span class="pl-k">=</span> <span class="pl-c1">execute</span>(curs, <span class="pl-s"><span class="pl-pds">"</span>select 1, null::int, 'HI'::text, 1.2::float8  </span>
<span class="pl-s">            from generate_series(1, 5)<span class="pl-pds">"</span></span>)
<span class="pl-c1">5</span>x4{Int32, Int32, UTF8String, Float64} PostgresResult
julia<span class="pl-k">&gt;</span> result[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>]     <span class="pl-c"><span class="pl-c">#</span> array</span>
<span class="pl-c1">Nullable</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> result[<span class="pl-c1">1</span>, :]    <span class="pl-c"><span class="pl-c">#</span> row; also row(curs, 1)</span>
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{Any,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Nullable</span>(<span class="pl-c1">1</span>)      
 <span class="pl-c1">Nullable</span><span class="pl-c1">{Int32}</span>()
 <span class="pl-c1">Nullable</span>(<span class="pl-s"><span class="pl-pds">"</span>HI<span class="pl-pds">"</span></span>)   
 <span class="pl-c1">Nullable</span>(<span class="pl-c1">1.2</span>) 

<span class="pl-c"><span class="pl-c">#</span> columns are a lot faster to create</span>
julia<span class="pl-k">&gt;</span> result[:, <span class="pl-c1">1</span>]    <span class="pl-c"><span class="pl-c">#</span> columns; also column(curs, 1)</span>
<span class="pl-c1">5</span><span class="pl-k">-</span>element DataArrays<span class="pl-k">.</span>DataArray{Int32,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>
<span class="pl-c"><span class="pl-c">#</span>row iteration</span>
julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> row <span class="pl-k">in</span> result; <span class="pl-c1">println</span>(row); <span class="pl-k">end</span>
Any[<span class="pl-c1">Nullable</span>(<span class="pl-c1">1</span>),<span class="pl-c1">Nullable</span><span class="pl-c1">{Int32}</span>(),<span class="pl-c1">Nullable</span>(<span class="pl-s"><span class="pl-pds">"</span>HI<span class="pl-pds">"</span></span>),<span class="pl-c1">Nullable</span>(<span class="pl-c1">1.2</span>)]
<span class="pl-c"><span class="pl-c">#</span> ...</span>
<span class="pl-c1">close</span>(curs) <span class="pl-c"><span class="pl-c">#</span> free postgres resources</span></pre></div>
<h3><a id="user-content-transactions" class="anchor" aria-hidden="true" href="#transactions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Transactions</h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">begin_!</span>(curs)
INFO<span class="pl-k">:</span> BEGIN 
julia<span class="pl-k">&gt;</span> <span class="pl-c1">rollback!</span>(curs)
INFO<span class="pl-k">:</span> ROLLBACK 
julia<span class="pl-k">&gt;</span> <span class="pl-c1">commit!</span>(curs)
WARNING<span class="pl-k">:</span> WARNING<span class="pl-k">:</span>  there is no transaction <span class="pl-k">in</span> progress
INFO<span class="pl-k">:</span> COMMIT 
<span class="pl-c"><span class="pl-c">#</span> transaction already ended by rollback</span></pre></div>
<h3><a id="user-content-base-types-supported-as-julia-types" class="anchor" aria-hidden="true" href="#base-types-supported-as-julia-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Base Types supported as Julia Types:</h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> v <span class="pl-k">in</span> <span class="pl-c1">values</span>(Postgres<span class="pl-k">.</span>Types<span class="pl-k">.</span>base_types)
            <span class="pl-c1">println</span>(v)
       <span class="pl-k">end</span>

text <span class="pl-k">-&gt;</span> UTF8String
varchar <span class="pl-k">-&gt;</span> UTF8String
bpchar <span class="pl-k">-&gt;</span> UTF8String
unknown <span class="pl-k">-&gt;</span> UTF8String
bit <span class="pl-k">-&gt;</span> BitArray{<span class="pl-c1">1</span>}
varbit <span class="pl-k">-&gt;</span> BitArray{<span class="pl-c1">1</span>}
bytea <span class="pl-k">-&gt;</span> Array{UInt8,<span class="pl-c1">1</span>}
bool <span class="pl-k">-&gt;</span> Bool
int2 <span class="pl-k">-&gt;</span> Int16
int4 <span class="pl-k">-&gt;</span> Int32
int8 <span class="pl-k">-&gt;</span> Int64
float4 <span class="pl-k">-&gt;</span> Float32
float8 <span class="pl-k">-&gt;</span> Float64
numeric <span class="pl-k">-&gt;</span> BigFloat
date <span class="pl-k">-&gt;</span> Date
json <span class="pl-k">-&gt;</span> UTF8String
jsonb <span class="pl-k">-&gt;</span> UTF8String</pre></div>
<p>Others supported as UTF8String.</p>
<h3><a id="user-content-extended-types" class="anchor" aria-hidden="true" href="#extended-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Extended Types</h3>
<p>Automatically determined on connection start up.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> types <span class="pl-k">=</span> <span class="pl-c1">collect</span>(<span class="pl-c1">values</span>(conn<span class="pl-k">.</span>pgtypes))
julia<span class="pl-k">&gt;</span> enum_test <span class="pl-k">=</span> <span class="pl-c1">filter</span>(x<span class="pl-k">-&gt;</span>x<span class="pl-k">.</span>name<span class="pl-k">==</span><span class="pl-c1">:enum_test</span>, types)[<span class="pl-c1">1</span>]
enum_test <span class="pl-k">∈</span> <span class="pl-c1">Set</span>(UTF8String[<span class="pl-s"><span class="pl-pds">"</span>happy<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>sad<span class="pl-pds">"</span></span>])
<span class="pl-c"><span class="pl-c">#</span> pg def:</span>
<span class="pl-c"><span class="pl-c">#</span> Schema │   Name    │ Internal name │ Size │ Elements │</span>
<span class="pl-c"><span class="pl-c">#</span>────────┼───────────┼───────────────┼──────┼──────────┼</span>
<span class="pl-c"><span class="pl-c">#</span> public │ enum_test │ enum_test     │ 4    │ happy   ↵│</span>
<span class="pl-c"><span class="pl-c">#</span>        │           │               │      │ sad      │</span>

julia<span class="pl-k">&gt;</span> domain_test <span class="pl-k">=</span> <span class="pl-c1">filter</span>(x<span class="pl-k">-&gt;</span>x<span class="pl-k">.</span>name<span class="pl-k">==</span><span class="pl-c1">:domain_test</span>, types)[<span class="pl-c1">1</span>]
(domain_test <span class="pl-k">&lt;:</span> <span class="pl-c1">int4</span>) <span class="pl-k">-&gt;</span> Int32
<span class="pl-c"><span class="pl-c">#</span> pg def:</span>
<span class="pl-c"><span class="pl-c">#</span> Schema │    Name     │  Type   │ Modifier │               Check                │</span>
<span class="pl-c"><span class="pl-c">#</span>────────┼─────────────┼─────────┼──────────┼────────────────────────────────────┼</span>
<span class="pl-c"><span class="pl-c">#</span> public │ domain_test │ integer │          │ CHECK (VALUE &gt;= 0 AND VALUE &lt;= 10) │</span></pre></div>
<p>Enum types will use PooledDataArrays!</p>
<h3><a id="user-content-escaping" class="anchor" aria-hidden="true" href="#escaping"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Escaping</h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> user_input<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>1';select 'powned';<span class="pl-pds">"</span></span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">escape_value</span>(conn, user_input)
<span class="pl-s"><span class="pl-pds">"</span>'1'';select ''powned'';'<span class="pl-pds">"</span></span></pre></div>
<h3><a id="user-content-error-info" class="anchor" aria-hidden="true" href="#error-info"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Error Info</h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">try</span> <span class="pl-c1">query</span>(curs, <span class="pl-s"><span class="pl-pds">"</span>select xxx<span class="pl-pds">"</span></span>)
        <span class="pl-k">catch</span> err PostgresServerError
           <span class="pl-c1">println</span>(err<span class="pl-k">.</span>info)
       <span class="pl-k">end</span>
<span class="pl-c1">PostgresResultInfo</span>(
            msg<span class="pl-k">:</span>ERROR<span class="pl-k">:</span>  column <span class="pl-s"><span class="pl-pds">"</span>xxx<span class="pl-pds">"</span></span> does not exist
LINE <span class="pl-c1">1</span><span class="pl-k">:</span> select xxx
               <span class="pl-k">^</span>
            severity<span class="pl-k">:</span>ERROR
            state<span class="pl-k">:</span>syntax_error_or_access_rule_violation
            code<span class="pl-k">:</span><span class="pl-c1">42703</span>
            primary<span class="pl-k">:</span>column <span class="pl-s"><span class="pl-pds">"</span>xxx<span class="pl-pds">"</span></span> does not exist
            detail<span class="pl-k">:</span>
            hint<span class="pl-k">:</span>
            pos<span class="pl-k">:</span><span class="pl-c1">8</span>
)</pre></div>
<p>see Appendix A. in the Postgres manual for error code/state lists.</p>
<h3><a id="user-content-copy-support" class="anchor" aria-hidden="true" href="#copy-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Copy Support</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Commands use the same interface as selects.</span>
<span class="pl-c"><span class="pl-c">#</span> Messages are passed through to Julia as you are used to seeing them in psql.</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">println</span>(<span class="pl-c1">query</span>(curs, <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">    drop table if exists s; </span>
<span class="pl-s">    drop table if exists news; </span>
<span class="pl-s">    create table s as select 1 as ss from generate_series(1,10)<span class="pl-pds">"""</span></span>))
NOTICE<span class="pl-k">:</span>  table <span class="pl-s"><span class="pl-pds">"</span>news<span class="pl-pds">"</span></span> does not exist, skipping
INFO<span class="pl-k">:</span> SELECT <span class="pl-c1">10</span> <span class="pl-c1">10</span>
<span class="pl-c1">0x0</span> DataFrames<span class="pl-k">.</span>DataFrame

julia<span class="pl-k">&gt;</span> df <span class="pl-k">=</span> <span class="pl-c1">query</span>(curs, <span class="pl-s"><span class="pl-pds">"</span>select * from s<span class="pl-pds">"</span></span>)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">copyto</span>(curs, df, <span class="pl-s"><span class="pl-pds">"</span>s<span class="pl-pds">"</span></span>)
INFO<span class="pl-k">:</span> COPY <span class="pl-c1">10</span> <span class="pl-c1">10</span>
<span class="pl-c1">0x0</span>{} PostgresResult

julia<span class="pl-k">&gt;</span> <span class="pl-c1">copyto</span>(curs, df, <span class="pl-s"><span class="pl-pds">"</span>news<span class="pl-pds">"</span></span>, <span class="pl-c1">true</span>)
INFO<span class="pl-k">:</span> table <span class="pl-s"><span class="pl-pds">'</span>news<span class="pl-pds">'</span></span> not found <span class="pl-k">in</span> database. creating <span class="pl-k">...</span>
INFO<span class="pl-k">:</span> CREATE TABLE 
INFO<span class="pl-k">:</span> COPY <span class="pl-c1">10</span> <span class="pl-c1">10</span>
<span class="pl-c1">0x0</span>{} PostgresResult</pre></div>
<h3><a id="user-content-custom-types" class="anchor" aria-hidden="true" href="#custom-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Custom Types</h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Postgres<span class="pl-k">.</span>Types

julia<span class="pl-k">&gt;</span> type Point
        x<span class="pl-k">::</span><span class="pl-c1">Float64</span>
        y<span class="pl-k">::</span><span class="pl-c1">Float64</span>
       <span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> find the oid (600 in this case) in the pg_type table in Postgres.</span>
<span class="pl-c"><span class="pl-c">#</span> Then instance the type.</span>
julia<span class="pl-k">&gt;</span> base_types[<span class="pl-c1">600</span>] <span class="pl-k">=</span> <span class="pl-c1">PostgresType</span><span class="pl-c1">{Point}</span>(<span class="pl-c1">:point</span>, <span class="pl-c1">Point</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>))
point <span class="pl-k">-&gt;</span> Point

<span class="pl-c"><span class="pl-c">#</span> create the _in_ function from the database</span>
julia<span class="pl-k">&gt;</span> <span class="pl-k">function</span> Postgres<span class="pl-k">.</span>Types<span class="pl-k">.</span><span class="pl-c1">unsafe_parse</span><span class="pl-c1">{T &lt;: Point}</span>(<span class="pl-k">::</span><span class="pl-c1">PostgresType{T}</span>, value<span class="pl-k">::</span><span class="pl-c1">UTF8String</span>)
    x, y <span class="pl-k">=</span> <span class="pl-c1">split</span>(value, <span class="pl-s"><span class="pl-pds">"</span>,<span class="pl-pds">"</span></span>)
    x <span class="pl-k">=</span> <span class="pl-c1">parse</span>(Float64, x[<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">end</span>])
    y <span class="pl-k">=</span> <span class="pl-c1">parse</span>(Float64, y[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">end</span><span class="pl-k">-</span><span class="pl-c1">1</span>])
    <span class="pl-c1">Point</span>(x, y)
<span class="pl-k">end</span>
unsafe_parse (generic <span class="pl-k">function</span> with <span class="pl-c1">15</span> methods)

<span class="pl-c"><span class="pl-c">#</span> create the _out_ function to the database</span>
julia<span class="pl-k">&gt;</span> Postgres<span class="pl-k">.</span>Types<span class="pl-k">.</span><span class="pl-en">PostgresValue</span><span class="pl-c1">{T &lt;: Point}</span>(val<span class="pl-k">::</span><span class="pl-c1">T</span>) <span class="pl-k">=</span>
    Postgres<span class="pl-k">.</span>Types<span class="pl-k">.</span><span class="pl-c1">PostgresValue</span><span class="pl-c1">{T}</span>(base_types[<span class="pl-c1">600</span>], <span class="pl-s"><span class="pl-pds">"</span>(<span class="pl-v">$(val<span class="pl-k">.</span>x)</span>,<span class="pl-v">$(val<span class="pl-k">.</span>y)</span>)<span class="pl-pds">"</span></span>)
Postgres<span class="pl-k">.</span>Types<span class="pl-k">.</span>PostgresValue

<span class="pl-c"><span class="pl-c">#</span>reload conn so it picks up the new type</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">close</span>(conn)
<span class="pl-c1">PostgresConnection</span>(@ <span class="pl-c1">0</span> : not_connected)
julia<span class="pl-k">&gt;</span> conn <span class="pl-k">=</span> <span class="pl-c1">connect</span>(PostgresServer, db<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>julia_test<span class="pl-pds">"</span></span>, host<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>localhost<span class="pl-pds">"</span></span>)
<span class="pl-c1">PostgresConnection</span>(@ <span class="pl-c1">0x0b41b818</span> : ok)
julia<span class="pl-k">&gt;</span> curs <span class="pl-k">=</span> <span class="pl-c1">cursor</span>(conn)
Postgres<span class="pl-k">.</span><span class="pl-c1">BufferedPostgresCursor</span>(
    <span class="pl-c1">PostgresConnection</span>(@ <span class="pl-c1">0x0b41b818</span> : ok),
    <span class="pl-c1">Nullable</span><span class="pl-c1">{Postgres.Results.PostgresResult}</span>())

julia<span class="pl-k">&gt;</span> p1 <span class="pl-k">=</span> <span class="pl-c1">Point</span>(<span class="pl-c1">1.1</span>, <span class="pl-c1">1.1</span>)
<span class="pl-c1">Point</span>(<span class="pl-c1">1.1</span>,<span class="pl-c1">1.1</span>)
julia<span class="pl-k">&gt;</span> start <span class="pl-k">=</span> <span class="pl-c1">repr</span>(<span class="pl-c1">PostgresValue</span>(p1))
<span class="pl-s"><span class="pl-pds">"</span>'(1.1,1.1)'::point<span class="pl-pds">"</span></span>
julia<span class="pl-k">&gt;</span> p2 <span class="pl-k">=</span> <span class="pl-c1">query</span>(curs, <span class="pl-s"><span class="pl-pds">"</span>select <span class="pl-v">$start</span><span class="pl-pds">"</span></span>)[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]
<span class="pl-c1">Point</span>(<span class="pl-c1">1.1</span>,<span class="pl-c1">1.1</span>)
julia<span class="pl-k">&gt;</span> p1<span class="pl-k">.</span>x <span class="pl-k">==</span> p2<span class="pl-k">.</span>x <span class="pl-k">&amp;&amp;</span> p1<span class="pl-k">.</span>y <span class="pl-k">==</span> p2<span class="pl-k">.</span>y
<span class="pl-c1">true</span></pre></div>
<h3><a id="user-content-control-c-cancels-the-query-at-the-server" class="anchor" aria-hidden="true" href="#control-c-cancels-the-query-at-the-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Control-C cancels the query <em>at</em> <em>the</em> <em>server</em></h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">query</span>(curs, <span class="pl-s"><span class="pl-pds">"</span>select 1 from generate_series(1, (10^9)::int)<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> oops; this will take forever</span>
<span class="pl-k">^</span>CINFO<span class="pl-k">:</span> canceling statement due to user request
ERROR<span class="pl-k">:</span> PostgresError<span class="pl-k">:</span> No results to fetch
 <span class="pl-k">in</span> fetch at <span class="pl-k">/</span>home<span class="pl-k">/</span>xxx<span class="pl-k">/</span><span class="pl-k">.</span>julia<span class="pl-k">/</span>v0<span class="pl-c1">.4</span><span class="pl-k">/</span>Postgres<span class="pl-k">/</span>src<span class="pl-k">/</span>postgres<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">383</span>
  <span class="pl-k">in</span> query at <span class="pl-k">/</span>home<span class="pl-k">/</span>xxx<span class="pl-k">/</span><span class="pl-k">.</span>julia<span class="pl-k">/</span>v0<span class="pl-c1">.4</span><span class="pl-k">/</span>Postgres<span class="pl-k">/</span>src<span class="pl-k">/</span>postgres<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">405</span>

<span class="pl-c"><span class="pl-c">#</span>no need to chase down zombie process with ps or top :) :)</span></pre></div>
</article></div>