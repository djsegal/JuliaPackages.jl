<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-fmm2djl" class="anchor" aria-hidden="true" href="#fmm2djl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FMM2D.jl</h1>
<p dir="auto"><a href="https://github.com/mipals/FMM2D.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/mipals/FMM2D.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto">FMM2D.jl is a Julia interface for computing N-body interactions using the <a href="https://github.com/flatironinstitute/fmm2d/">Flatiron Institute's FMM2D library</a>.</p>
<p dir="auto">Currently, the interface only supports Helmholtz problems.</p>
<h2 dir="auto"><a id="user-content-helmholtz-fmm" class="anchor" aria-hidden="true" href="#helmholtz-fmm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Helmholtz FMM</h2>
<p dir="auto">Let <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="f21eca3ed10ed024094473370d23cfa4">$c_j \in \mathbb{C},\ j = 1,\dots,N$</math-renderer> denote a collection of charge strengths, <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="f21eca3ed10ed024094473370d23cfa4">$v_j \in \mathbb{C},\ j = 1,\dots,N$</math-renderer> denote a collection of dipole strengths, and <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="f21eca3ed10ed024094473370d23cfa4">$\mathbf{d}_j\in\mathbb{R}^2,\ j = 1,\dots,N$</math-renderer> denote the corresponding dipole orientation vectors. Furthermore, <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="f21eca3ed10ed024094473370d23cfa4">$k \in \mathbb{C}$</math-renderer> denote the wave number.</p>
<p dir="auto">The Fast Multipole Method is <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="f21eca3ed10ed024094473370d23cfa4">$O(n)$</math-renderer> algorithm that can be used to approximate the Helmholtz potential <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="f21eca3ed10ed024094473370d23cfa4">$u$</math-renderer> (and its gradient and Hessian) caused by the presence of a collection of sources <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="f21eca3ed10ed024094473370d23cfa4">$\mathbf{x}_j$</math-renderer> at target position <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="f21eca3ed10ed024094473370d23cfa4">$\mathbf{x}$</math-renderer>. The direct computation of the potential is</p>
<p dir="auto"><math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="f21eca3ed10ed024094473370d23cfa4">$$
u(\mathbf{x}) = \sum_{j=1}^{N} c_jH_0^{(1)}(k|\mathbf{x} - \mathbf{x}_j|) - v_j\mathbf{d}_j\cdot\nabla H_0^{(1)}(k|\mathbf{x} - \mathbf{x}_j|),
$$</math-renderer></p>
<p dir="auto">where <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="f21eca3ed10ed024094473370d23cfa4">$H_0^{(1)}$</math-renderer> is the Hankel function of the first kind of order 0. When <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="f21eca3ed10ed024094473370d23cfa4">$\mathbf{x} = \mathbf{x}_j$</math-renderer> the <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="f21eca3ed10ed024094473370d23cfa4">$j$</math-renderer> th term is dropped from the sum.</p>
<h2 dir="auto">
<a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using FMM2D

# Simple example for the FMM2D Library
thresh = 10.0^(-5)          # Tolerance
zk     = rand(ComplexF64)   # Wavenumber

# Source-to-source,
n = 200
sources = rand(2,n)
charges = rand(ComplexF64,n)
vals = hfmm2d(thresh,zk,sources,charges=charges,pg=1)"><pre><span class="pl-k">using</span> FMM2D

<span class="pl-c"><span class="pl-c">#</span> Simple example for the FMM2D Library</span>
thresh <span class="pl-k">=</span> <span class="pl-c1">10.0</span><span class="pl-k">^</span>(<span class="pl-k">-</span><span class="pl-c1">5</span>)          <span class="pl-c"><span class="pl-c">#</span> Tolerance</span>
zk     <span class="pl-k">=</span> <span class="pl-c1">rand</span>(ComplexF64)   <span class="pl-c"><span class="pl-c">#</span> Wavenumber</span>

<span class="pl-c"><span class="pl-c">#</span> Source-to-source,</span>
n <span class="pl-k">=</span> <span class="pl-c1">200</span>
sources <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">2</span>,n)
charges <span class="pl-k">=</span> <span class="pl-c1">rand</span>(ComplexF64,n)
vals <span class="pl-k">=</span> <span class="pl-c1">hfmm2d</span>(thresh,zk,sources,charges<span class="pl-k">=</span>charges,pg<span class="pl-k">=</span><span class="pl-c1">1</span>)</pre></div>
</article></div>