<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-geomakie" class="anchor" aria-hidden="true" href="#geomakie"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GeoMakie</h1>
<h2><a id="user-content-geographic-plotting-utilities-for-" class="anchor" aria-hidden="true" href="#geographic-plotting-utilities-for-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Geographic plotting utilities for <a href="https://www.github.com/JuliaPlots/Makie.jl"><img src="https://raw.githubusercontent.com/JuliaPlots/Makie.jl/master/assets/logo.png" alt="Makie.jl" height="30" align="top" style="max-width:100%;"></a></h2>
<p><a href="https://JuliaPlots.github.io/GeoMakie.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://JuliaPlots.github.io/GeoMakie.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://gitlab.com/JuliaGPU/GeoMakie-jl/pipelines" rel="nofollow"><img src="https://camo.githubusercontent.com/4c048a6a8fa08217ff3bb6e461fecab58d87b926515d726f30ccfbb36431e784/68747470733a2f2f6769746c61622e636f6d2f4a756c69614750552f47656f4d616b69652d6a6c2f6261646765732f6d61737465722f706970656c696e652e737667" alt="Build Status" data-canonical-src="https://gitlab.com/JuliaGPU/GeoMakie-jl/badges/master/pipeline.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>This package is <strong>in development</strong> and will <strong>break often</strong>.  You can install it from the REPL like so:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="]add GeoMakie
"><pre>]add GeoMakie</pre></div>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using GLMakie
using GeoMakie
using GeoMakie.GeoInterface
using GeoMakie.GeoJSON

begin
    source = LonLat()
    dest = WinkelTripel()
    states = download(&quot;https://raw.githubusercontent.com/PublicaMundi/MappingAPI/master/data/geojson/us-states.json&quot;)
    states_geo = GeoJSON.parse(read(states, String))
    lons = LinRange(-179.5, 179.5, 360 รท 2)
    lats = LinRange(-89.5, 89.5, 180 รท 2)
    field = [exp(cosd(l)) + 3(y/90) for l in lons, y in lats]
    fig = Figure()
    ax = fig[1,1] = Axis(fig)
    ax.scene.transformation.transform_func[] = GeoMakie.proj(source, dest)
    wireframe!(ax, lons, lats, field, color=(:gray, 0.2), transparency=true)
    n = length(GeoInterface.features(states_geo))
    lines!(ax, GeoMakie.coastlines())
    poly!(ax, states_geo, color= 1:n, strokecolor = :blue, strokewidth = 1)
    display(fig)
end
"><pre><span class="pl-k">using</span> GLMakie
<span class="pl-k">using</span> GeoMakie
<span class="pl-k">using</span> GeoMakie<span class="pl-k">.</span>GeoInterface
<span class="pl-k">using</span> GeoMakie<span class="pl-k">.</span>GeoJSON

<span class="pl-k">begin</span>
    source <span class="pl-k">=</span> <span class="pl-c1">LonLat</span>()
    dest <span class="pl-k">=</span> <span class="pl-c1">WinkelTripel</span>()
    states <span class="pl-k">=</span> <span class="pl-c1">download</span>(<span class="pl-s"><span class="pl-pds">"</span>https://raw.githubusercontent.com/PublicaMundi/MappingAPI/master/data/geojson/us-states.json<span class="pl-pds">"</span></span>)
    states_geo <span class="pl-k">=</span> GeoJSON<span class="pl-k">.</span><span class="pl-c1">parse</span>(<span class="pl-c1">read</span>(states, String))
    lons <span class="pl-k">=</span> <span class="pl-c1">LinRange</span>(<span class="pl-k">-</span><span class="pl-c1">179.5</span>, <span class="pl-c1">179.5</span>, <span class="pl-c1">360</span> <span class="pl-k">รท</span> <span class="pl-c1">2</span>)
    lats <span class="pl-k">=</span> <span class="pl-c1">LinRange</span>(<span class="pl-k">-</span><span class="pl-c1">89.5</span>, <span class="pl-c1">89.5</span>, <span class="pl-c1">180</span> <span class="pl-k">รท</span> <span class="pl-c1">2</span>)
    field <span class="pl-k">=</span> [<span class="pl-c1">exp</span>(<span class="pl-c1">cosd</span>(l)) <span class="pl-k">+</span> <span class="pl-c1">3</span>(y<span class="pl-k">/</span><span class="pl-c1">90</span>) <span class="pl-k">for</span> l <span class="pl-k">in</span> lons, y <span class="pl-k">in</span> lats]
    fig <span class="pl-k">=</span> <span class="pl-c1">Figure</span>()
    ax <span class="pl-k">=</span> fig[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">Axis</span>(fig)
    ax<span class="pl-k">.</span>scene<span class="pl-k">.</span>transformation<span class="pl-k">.</span>transform_func[] <span class="pl-k">=</span> GeoMakie<span class="pl-k">.</span><span class="pl-c1">proj</span>(source, dest)
    <span class="pl-c1">wireframe!</span>(ax, lons, lats, field, color<span class="pl-k">=</span>(<span class="pl-c1">:gray</span>, <span class="pl-c1">0.2</span>), transparency<span class="pl-k">=</span><span class="pl-c1">true</span>)
    n <span class="pl-k">=</span> <span class="pl-c1">length</span>(GeoInterface<span class="pl-k">.</span><span class="pl-c1">features</span>(states_geo))
    <span class="pl-c1">lines!</span>(ax, GeoMakie<span class="pl-k">.</span><span class="pl-c1">coastlines</span>())
    <span class="pl-c1">poly!</span>(ax, states_geo, color<span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span>n, strokecolor <span class="pl-k">=</span> <span class="pl-c1">:blue</span>, strokewidth <span class="pl-k">=</span> <span class="pl-c1">1</span>)
    <span class="pl-c1">display</span>(fig)
<span class="pl-k">end</span></pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1010467/104816235-04ed8100-581a-11eb-9c40-abbc752524f7.png"><img src="https://user-images.githubusercontent.com/1010467/104816235-04ed8100-581a-11eb-9c40-abbc752524f7.png" alt="image" style="max-width:100%;"></a></p>
<p>These plots can be arbitrarily colored using the <code>color</code> keyword, and the full Makie interface is also exposed.</p>
<p>Check the examples in the <code>test</code> folder for more recent examples of usage.</p>
<h2><a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Performance</h2>
<p>We use Earcut.jl for added performance when converting polygons to triangular meshes; it decreases time to mesh by an order of magnitude from the Makie implementation.</p>
<p>Since <code>surface</code> has an optimized shader, and can accept matrices of deformed grid points, it's <strong>heavily</strong> recommended to use it (or <code>mesh</code> if you need the flexibility) over <code>poly</code>.</p>
<h2><a id="user-content-planned-features" class="anchor" aria-hidden="true" href="#planned-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Planned features</h2>
<ul>
<li>A <code>choropleth</code> recipe which can read data from the properties of a FeatureCollection</li>
<li>helper functions to extract "columns" of a FeatureCollection</li>
</ul>
<h2><a id="user-content-more-examples" class="anchor" aria-hidden="true" href="#more-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>More examples</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using GeoJSON, GeoMakie, Makie
states = download(&quot;https://raw.githubusercontent.com/PublicaMundi/MappingAPI/master/data/geojson/us-states.json&quot;)

states_geo = GeoJSON.parse(read(states, String))

poly(states_geo, strokecolor = :blue, strokewidth = 1)
"><pre><span class="pl-k">using</span> GeoJSON, GeoMakie, Makie
states <span class="pl-k">=</span> <span class="pl-c1">download</span>(<span class="pl-s"><span class="pl-pds">"</span>https://raw.githubusercontent.com/PublicaMundi/MappingAPI/master/data/geojson/us-states.json<span class="pl-pds">"</span></span>)

states_geo <span class="pl-k">=</span> GeoJSON<span class="pl-k">.</span><span class="pl-c1">parse</span>(<span class="pl-c1">read</span>(states, String))

<span class="pl-c1">poly</span>(states_geo, strokecolor <span class="pl-k">=</span> <span class="pl-c1">:blue</span>, strokewidth <span class="pl-k">=</span> <span class="pl-c1">1</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/32143268/73116030-c6223500-3efd-11ea-9690-f5a92415c264.png"><img src="https://user-images.githubusercontent.com/32143268/73116030-c6223500-3efd-11ea-9690-f5a92415c264.png" alt="US simple example" style="max-width:100%;"></a></p>
</article></div>