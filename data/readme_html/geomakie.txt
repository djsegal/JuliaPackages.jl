<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-geomakie" class="anchor" aria-hidden="true" href="#geomakie"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GeoMakie</h1>
<h2 dir="auto"><a id="user-content-geographic-plotting-utilities-for-makiejl-" class="anchor" aria-hidden="true" href="#geographic-plotting-utilities-for-makiejl-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Geographic plotting utilities for Makie.jl <a href="https://www.github.com/MakieOrg/Makie.jl"><img src="https://raw.githubusercontent.com/MakieOrg/Makie.jl/master/assets/logo.png" alt="Makie.jl" height="30" align="top" style="max-width: 100%;"></a></h2>
<p dir="auto"><a href="https://geo.makie.org/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://geo.makie.org/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/MakieOrg/GeoMakie.jl/actions/workflows/ci.yml/badge.svg"><img src="https://github.com/MakieOrg/GeoMakie.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a></p>
<p dir="auto">This package is <strong>in development</strong>, and may break often.  You can install it from the REPL like so:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="]add GeoMakie"><pre>]add GeoMakie</pre></div>
<p dir="auto">To check the version, run:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]
pkg&gt; status GeoMakie"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> status GeoMakie</pre></div>
<p dir="auto">To use, simply type <code>using GeoMakie</code> into the REPL.  You will also have to include the backend of your choice - we suggest <code>using GLMakie</code> for interactive use and <code>using CairoMakie</code> for PDF or SVG output.</p>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick start</h2>
<p dir="auto">The main entry point to GeoMakie is the function <code>GeoAxis(fig[i, j]; kw_args...)</code>.  It creates an axis which accepts nonlinear projections, but is otherwise identical in usage to Makie's <code>Axis</code>.
Projections are accepted as <a href="https://proj.org/operations/projections/index.html" rel="nofollow">PROJ-strings</a>, and can be set through the <code>source="+proj=latlong +datum=WGS84"</code> and <code>dest="+proj=eqearth"</code> keyword arguments to <code>GeoAxis</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="fig = Figure()
ga = GeoAxis(
    fig[1, 1]; # any cell of the figure's layout
    dest = &quot;+proj=wintri&quot;, # the CRS in which you want to plot
    coastlines = true # plot coastlines from Natural Earth, as a reference.
)
scatter!(ga, -120:15:120, -60:7.5:60; color = -60:7.5:60, strokecolor = (:black, 0.2))
fig"><pre>fig <span class="pl-k">=</span> <span class="pl-c1">Figure</span>()
ga <span class="pl-k">=</span> <span class="pl-c1">GeoAxis</span>(
    fig[<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]; <span class="pl-c"><span class="pl-c">#</span> any cell of the figure's layout</span>
    dest <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>+proj=wintri<span class="pl-pds">"</span></span>, <span class="pl-c"><span class="pl-c">#</span> the CRS in which you want to plot</span>
    coastlines <span class="pl-k">=</span> <span class="pl-c1">true</span> <span class="pl-c"><span class="pl-c">#</span> plot coastlines from Natural Earth, as a reference.</span>
)
<span class="pl-c1">scatter!</span>(ga, <span class="pl-k">-</span><span class="pl-c1">120</span><span class="pl-k">:</span><span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">120</span>, <span class="pl-k">-</span><span class="pl-c1">60</span><span class="pl-k">:</span><span class="pl-c1">7.5</span><span class="pl-k">:</span><span class="pl-c1">60</span>; color <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">60</span><span class="pl-k">:</span><span class="pl-c1">7.5</span><span class="pl-k">:</span><span class="pl-c1">60</span>, strokecolor <span class="pl-k">=</span> (<span class="pl-c1">:black</span>, <span class="pl-c1">0.2</span>))
fig</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/32143268/165353013-ec6c4230-be7e-4dbc-a8c8-7e40204ebf80.svg"><img src="https://user-images.githubusercontent.com/32143268/165353013-ec6c4230-be7e-4dbc-a8c8-7e40204ebf80.svg" alt="geoax2" style="max-width: 100%;"></a></p>
<p dir="auto">As you can see, the axis automatically transforms your input from the <code>source</code>
CRS (default <code>"+proj=longlat +datum=WGS84"</code>) to the <code>dest</code> CRS.</p>
<p dir="auto">You can also use quite a few other plot types and projections:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="fieldlons = -180:180; fieldlats = -90:90
field = [exp(cosd(lon)) + 3(lat/90) for lon in fieldlons, lat in fieldlats]

img = rotr90(GeoMakie.earth())
land = GeoMakie.land()

fig = Figure(resolution = (1000, 1000))

ga1 = GeoAxis(fig[1, 1]; dest = &quot;+proj=ortho&quot;, coastlines = true, lonlims = (-90, 90), title = &quot;Orthographic\n &quot;)
ga2 = GeoAxis(fig[1, 2]; dest = &quot;+proj=moll&quot;, title = &quot;Image of Earth\n &quot;)
ga3 = GeoAxis(fig[2, 1]; coastlines = false, title = &quot;Plotting polygons&quot;)
ga4 = GeoAxis(fig[2, 2]; dest = &quot;+proj=natearth&quot;, title = &quot;Auto limits&quot;) # you can plot geodata on regular axes too

surface!(ga1, fieldlons, fieldlats, field; colormap = :rainbow_bgyrm_35_85_c69_n256, shading = false)
image!(ga2, -180..180, -90..90, img; interpolate = false) # this must be included
poly!(ga3, land[50:100]; color = 1:51, colormap = (:plasma, 0.5))
poly!(ga4, land[22]); datalims!(ga4)

fig"><pre>fieldlons <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">180</span><span class="pl-k">:</span><span class="pl-c1">180</span>; fieldlats <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">90</span><span class="pl-k">:</span><span class="pl-c1">90</span>
field <span class="pl-k">=</span> [<span class="pl-c1">exp</span>(<span class="pl-c1">cosd</span>(lon)) <span class="pl-k">+</span> <span class="pl-c1">3</span>(lat<span class="pl-k">/</span><span class="pl-c1">90</span>) <span class="pl-k">for</span> lon <span class="pl-k">in</span> fieldlons, lat <span class="pl-k">in</span> fieldlats]

img <span class="pl-k">=</span> <span class="pl-c1">rotr90</span>(GeoMakie<span class="pl-k">.</span><span class="pl-c1">earth</span>())
land <span class="pl-k">=</span> GeoMakie<span class="pl-k">.</span><span class="pl-c1">land</span>()

fig <span class="pl-k">=</span> <span class="pl-c1">Figure</span>(resolution <span class="pl-k">=</span> (<span class="pl-c1">1000</span>, <span class="pl-c1">1000</span>))

ga1 <span class="pl-k">=</span> <span class="pl-c1">GeoAxis</span>(fig[<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]; dest <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>+proj=ortho<span class="pl-pds">"</span></span>, coastlines <span class="pl-k">=</span> <span class="pl-c1">true</span>, lonlims <span class="pl-k">=</span> (<span class="pl-k">-</span><span class="pl-c1">90</span>, <span class="pl-c1">90</span>), title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Orthographic<span class="pl-cce">\n</span> <span class="pl-pds">"</span></span>)
ga2 <span class="pl-k">=</span> <span class="pl-c1">GeoAxis</span>(fig[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>]; dest <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>+proj=moll<span class="pl-pds">"</span></span>, title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Image of Earth<span class="pl-cce">\n</span> <span class="pl-pds">"</span></span>)
ga3 <span class="pl-k">=</span> <span class="pl-c1">GeoAxis</span>(fig[<span class="pl-c1">2</span>, <span class="pl-c1">1</span>]; coastlines <span class="pl-k">=</span> <span class="pl-c1">false</span>, title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Plotting polygons<span class="pl-pds">"</span></span>)
ga4 <span class="pl-k">=</span> <span class="pl-c1">GeoAxis</span>(fig[<span class="pl-c1">2</span>, <span class="pl-c1">2</span>]; dest <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>+proj=natearth<span class="pl-pds">"</span></span>, title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Auto limits<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> you can plot geodata on regular axes too</span>

<span class="pl-c1">surface!</span>(ga1, fieldlons, fieldlats, field; colormap <span class="pl-k">=</span> <span class="pl-c1">:rainbow_bgyrm_35_85_c69_n256</span>, shading <span class="pl-k">=</span> <span class="pl-c1">false</span>)
<span class="pl-c1">image!</span>(ga2, <span class="pl-k">-</span><span class="pl-c1">180</span><span class="pl-k">..</span><span class="pl-c1">180</span>, <span class="pl-k">-</span><span class="pl-c1">90</span><span class="pl-k">..</span><span class="pl-c1">90</span>, img; interpolate <span class="pl-k">=</span> <span class="pl-c1">false</span>) <span class="pl-c"><span class="pl-c">#</span> this must be included</span>
<span class="pl-c1">poly!</span>(ga3, land[<span class="pl-c1">50</span><span class="pl-k">:</span><span class="pl-c1">100</span>]; color <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">51</span>, colormap <span class="pl-k">=</span> (<span class="pl-c1">:plasma</span>, <span class="pl-c1">0.5</span>))
<span class="pl-c1">poly!</span>(ga4, land[<span class="pl-c1">22</span>]); <span class="pl-c1">datalims!</span>(ga4)

fig</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/32143268/165358447-ab1aa721-d457-4710-979c-d361080eae52.svg"><img src="https://user-images.githubusercontent.com/32143268/165358447-ab1aa721-d457-4710-979c-d361080eae52.svg" alt="geoaxes" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-instructions-for-the-asgeoaxis-branch" class="anchor" aria-hidden="true" href="#instructions-for-the-asgeoaxis-branch"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Instructions for the <code>as/geoaxis</code> branch</h1>
<p dir="auto">In the REPL, run <code>]add GeoMakie#as/geoaxis Makie#master CairoMakie#master MakieCore#master</code></p>
<p dir="auto">To clean up, run the following in Julia:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.rm.([&quot;GeoMakie&quot;, &quot;Makie&quot;, &quot;CairoMakie&quot;, &quot;MakieCore&quot;])
Pkg.add.([&quot;Makie&quot;, &quot;CairoMakie&quot;, &quot;MakieCore&quot;])"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">rm</span>.([<span class="pl-s"><span class="pl-pds">"</span>GeoMakie<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Makie<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>CairoMakie<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>MakieCore<span class="pl-pds">"</span></span>])
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>.([<span class="pl-s"><span class="pl-pds">"</span>Makie<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>CairoMakie<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>MakieCore<span class="pl-pds">"</span></span>])</pre></div>
<p dir="auto">Please see the documentation for examples and basic usage.</p>
</article></div>