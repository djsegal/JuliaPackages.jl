<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-inpaintingsjl" class="anchor" aria-hidden="true" href="#inpaintingsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Inpaintings.jl</h1>
<p>
  <a href="https://briochemc.github.io/Inpaintings.jl/dev" rel="nofollow">
    <img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;">
  </a>
  <a href="https://briochemc.github.io/Inpaintings.jl/stable" rel="nofollow">
    <img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;">
  </a>
  <a href="https://ci.appveyor.com/project/briochemc/Inpaintings-jl" rel="nofollow">
    <img src="https://camo.githubusercontent.com/9e03b2f83e5f2c07be25fee44b69f2f5abf8b363/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f75646277616b723632316a6279766a313f7376673d74727565" data-canonical-src="https://ci.appveyor.com/api/projects/status/udbwakr621jbyvj1?svg=true" style="max-width:100%;">
  </a>
  <a href="https://travis-ci.com/briochemc/Inpaintings.jl" rel="nofollow">
    <img alt="Build Status" src="https://camo.githubusercontent.com/5f36453b6464e8e1ab6df7cbeaf2ece807c2dd83/68747470733a2f2f7472617669732d63692e636f6d2f6272696f6368656d632f496e7061696e74696e67732e6a6c2e7376673f6272616e63683d6d6173746572" data-canonical-src="https://travis-ci.com/briochemc/Inpaintings.jl.svg?branch=master" style="max-width:100%;">
  </a>
  <a href="https://coveralls.io/github/briochemc/Inpaintings.jl?branch=master" rel="nofollow">
    <img src="https://camo.githubusercontent.com/d4ae3fa7c3edd3746d26fbb03496a882a5e722f0/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6272696f6368656d632f496e7061696e74696e67732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/briochemc/Inpaintings.jl/badge.svg?branch=master" style="max-width:100%;">
  </a>
  <a href="https://codecov.io/gh/briochemc/Inpaintings.jl" rel="nofollow">
    <img src="https://camo.githubusercontent.com/303aede82940c9d17983009d948599918acf5b9c/68747470733a2f2f636f6465636f762e696f2f67682f6272696f6368656d632f496e7061696e74696e67732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" data-canonical-src="https://codecov.io/gh/briochemc/Inpaintings.jl/branch/master/graph/badge.svg" style="max-width:100%;">
  </a>
  <a href="https://github.com/briochemc/Inpaintings.jl/blob/master/LICENSE">
    <img alt="License: MIT" src="https://camo.githubusercontent.com/3ccf4c50a1576b0dd30b286717451fa56b783512/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" data-canonical-src="https://img.shields.io/badge/License-MIT-yellow.svg" style="max-width:100%;">
  </a>
</p>
<h2><a id="user-content-description" class="anchor" aria-hidden="true" href="#description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Description</h2>
<p>This package provides a Julia version of MATLAB's <code>inpaint_nans</code> function (originally written by John d'Errico, available on the MathWorks <a href="https://www.mathworks.com/matlabcentral/fileexchange/4551-inpaint_nans" rel="nofollow">File Exchange website</a> and ported here with his authorization by personal communication).</p>
<p>Simply put, <a href="https://github.com/briochemc/Inpaintings.jl">Inpaintings.jl</a> provides a simple <code>inpaint</code> function, which takes an array <code>A</code> as input and inpaints its <code>missing</code> values by solving a simple <em>n</em>-dimensional PDE.
The <code>inpaint</code> function can also be used to inpaint <code>NaN</code>s or any other values, thanks to the syntax described below and in the <a href="https://briochemc.github.io/Inpaintings.jl/stable" rel="nofollow">documentation</a>.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage:</h2>
<p>Like every Julia package you must first add it via <code>]add Inpaintings</code>.
And every time you want to use <a href="https://github.com/briochemc/Inpaintings.jl">Inpaintings.jl</a>, you must start with</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Inpaintings</pre></div>
<p>In order to <code>inpaint</code> an array <code>A</code>'s <code>missing</code> values, simply apply <code>inpaint</code> to your array:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">inpaint</span>(A) <span class="pl-c"><span class="pl-c">#</span> will inpaint missing values</span></pre></div>
<p>The array to be inpainted can be a vector, a matrix, or even an <em>n</em>-dimensional array.</p>
<p>If your array <code>A</code> has some <code>NaN</code> values and is filled with floats otherwise, then</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">inpaint</span>(A) <span class="pl-c"><span class="pl-c">#</span> will inpaint NaN values</span></pre></div>
<p><a href="https://github.com/briochemc/Inpaintings.jl">Inpaintings.jl</a> provides a syntax to inpaint any specified value via</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">inpaint</span>(A, <span class="pl-k">-</span><span class="pl-c1">999</span>) <span class="pl-c"><span class="pl-c">#</span> will inpaint -999 values</span></pre></div>
<p>(The value to inpaint can be specified as <code>NaN</code> or <code>missing</code>, too!)</p>
<p>Alternatively, <a href="https://github.com/briochemc/Inpaintings.jl">Inpaintings.jl</a> also provides a syntax taking a boolean function <code>f</code> as an argument before the array (<code>f</code> will be applied to all the elements of the array and must return a boolean).</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">inpaint</span>(f, A)</pre></div>
<p>In this case, the values of <code>A</code> for which <code>f</code> returns <code>true</code> will be inpainted.
(For example, <code>f</code> can be, e.g., <code>ismissing</code> or <code>isnan</code>, but it can also be <code>x -&gt; x &lt; 0</code>.)</p>
<p>Finally, <a href="https://github.com/briochemc/Inpaintings.jl">Inpaintings.jl</a> provides a syntax to allow some dimensions to be assumed cyclic:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">inpaint</span>(A, cycledims<span class="pl-k">=</span>[<span class="pl-c1">1</span>]) <span class="pl-c"><span class="pl-c">#</span> will inpaint A with dimension 1 as cyclic</span></pre></div>
<p>(The cyclic dimensions must be an array of <code>Int64</code> that contains the dimension number of cyclic dimensions.)</p>
<p>See the <a href="https://briochemc.github.io/Inpaintings.jl/stable" rel="nofollow">docs</a> if you want to see more examples.</p>
<h2><a id="user-content-comparison-to-matlab-version" class="anchor" aria-hidden="true" href="#comparison-to-matlab-version"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Comparison to MATLAB version</h2>
<p>Out of the methods available in MATLAB's <code>inpaint_nans</code>, <a href="https://github.com/briochemc/Inpaintings.jl">Inpaintings.jl</a> currently only implements the following methods:</p>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> method <code>0</code></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> method <code>1</code></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> method <code>2</code></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> method <code>3</code></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> method <code>4</code></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> method <code>5</code></li>
</ul>
<p>In the future, it is likely that only <code>inpaint_nans</code>'s method <code>4</code> (the spring analogy) will be additionally implemented.</p>
<h2><a id="user-content-todos" class="anchor" aria-hidden="true" href="#todos"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TODOs</h2>
<p>Suggestions, ideas, issues, and PRs welcome!</p>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> improve efficiency</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Julian-ify the code</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Add notebook exampls via Literate.jl</li>
</ul>
</article></div>