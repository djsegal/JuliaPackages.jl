<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-fhistjl" class="anchor" aria-hidden="true" href="#fhistjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FHist.jl</h1>
<p dir="auto"><a href="https://moelf.github.io/FHist.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/Moelf/FHist.jl/actions"><img src="https://github.com/Moelf/FHist.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/Moelf/FHist.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/79b8a7213bdd4097b6c737850ef37c80073c118af25da53b80b4fffb493393a7/68747470733a2f2f636f6465636f762e696f2f67682f4d6f656c662f46486973742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/Moelf/FHist.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Fast, error-aware, and thread-safe 1D/2D/3D histograms that are also compatible with <code>StatsBase.Histogram</code></p>
<h2 dir="auto"><a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Changelog</h2>
<ul dir="auto">
<li>0.10
<ul dir="auto">
<li>due to huge latency issue, UnicodePlots.jl (for text based terminal display) has been dropped.</li>
</ul>
</li>
</ul>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick Start</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using FHist

julia&gt; a = randn(1000);

julia&gt; h1 = Hist1D(a, -4:1.0:4)
edges: -4.0:1.0:4.0
bin counts: [0, 23, 123, 377, 320, 134, 21, 2]
total count: 1000

julia&gt; h2 = Hist1D(Int; bins=-4.0:1.0:4.0);

julia&gt; push!.(h2, a);

julia&gt; Threads.@threads for v in a
           atomic_push!(h2, v) # thread-safe
       end

julia&gt; h1+h1 == h2
true"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FHist

julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">1000</span>);

julia<span class="pl-k">&gt;</span> h1 <span class="pl-k">=</span> <span class="pl-c1">Hist1D</span>(a, <span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">1.0</span><span class="pl-k">:</span><span class="pl-c1">4</span>)
edges<span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">4.0</span><span class="pl-k">:</span><span class="pl-c1">1.0</span><span class="pl-k">:</span><span class="pl-c1">4.0</span>
bin counts<span class="pl-k">:</span> [<span class="pl-c1">0</span>, <span class="pl-c1">23</span>, <span class="pl-c1">123</span>, <span class="pl-c1">377</span>, <span class="pl-c1">320</span>, <span class="pl-c1">134</span>, <span class="pl-c1">21</span>, <span class="pl-c1">2</span>]
total count<span class="pl-k">:</span> <span class="pl-c1">1000</span>

julia<span class="pl-k">&gt;</span> h2 <span class="pl-k">=</span> <span class="pl-c1">Hist1D</span>(Int; bins<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">4.0</span><span class="pl-k">:</span><span class="pl-c1">1.0</span><span class="pl-k">:</span><span class="pl-c1">4.0</span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">push!</span>.(h2, a);

julia<span class="pl-k">&gt;</span> Threads<span class="pl-k">.</span><span class="pl-c1">@threads</span> <span class="pl-k">for</span> v <span class="pl-k">in</span> a
           <span class="pl-c1">atomic_push!</span>(h2, v) <span class="pl-c"><span class="pl-c">#</span> thread-safe</span>
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> h1<span class="pl-k">+</span>h1 <span class="pl-k">==</span> h2
<span class="pl-c1">true</span></pre></div>
<p dir="auto">Additionally, one can specify <code>overflow=true</code> when creating a histogram to clamp out-of-bounds values into
the edge bins.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Hist1D(rand(1000),0:0.2:0.9; overflow=true)
edges: 0.0:0.2:0.8
bin counts: [218, 183, 198, 401]
total count: 1000"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Hist1D</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">1000</span>),<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0.2</span><span class="pl-k">:</span><span class="pl-c1">0.9</span>; overflow<span class="pl-k">=</span><span class="pl-c1">true</span>)
edges<span class="pl-k">:</span> <span class="pl-c1">0.0</span><span class="pl-k">:</span><span class="pl-c1">0.2</span><span class="pl-k">:</span><span class="pl-c1">0.8</span>
bin counts<span class="pl-k">:</span> [<span class="pl-c1">218</span>, <span class="pl-c1">183</span>, <span class="pl-c1">198</span>, <span class="pl-c1">401</span>]
total count<span class="pl-k">:</span> <span class="pl-c1">1000</span></pre></div>
<h2 dir="auto"><a id="user-content-speed" class="anchor" aria-hidden="true" href="#speed"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Speed</h2>
<p dir="auto">Single-threaded filling happens at almost 400 MHz</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; a = randn(10^6);

julia&gt; @benchmark Hist1D(a, -3:0.01:3)
 Range (min … max):  2.591 ms …   4.746 ms  ┊ GC (min … max): 0.00% … 0.00%
 Time  (median):     2.802 ms               ┊ GC (median):    0.00%
 Time  (mean ± σ):   2.864 ms ± 195.931 μs  ┊ GC (mean ± σ):  0.00% ± 0.00%"><pre>julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">6</span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@benchmark</span> <span class="pl-c1">Hist1D</span>(a, <span class="pl-k">-</span><span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">0.01</span><span class="pl-k">:</span><span class="pl-c1">3</span>)
 Range (min … max)<span class="pl-k">:</span>  <span class="pl-c1">2.591</span> ms …   <span class="pl-c1">4.746</span> ms  ┊ GC (min … max)<span class="pl-k">:</span> <span class="pl-c1">0.00</span><span class="pl-k">%</span> … <span class="pl-c1">0.00</span><span class="pl-k">%</span>
 Time  (median)<span class="pl-k">:</span>     <span class="pl-c1">2.802</span> ms               ┊ GC (median)<span class="pl-k">:</span>    <span class="pl-c1">0.00</span><span class="pl-k">%</span>
 Time  (mean ± σ)<span class="pl-k">:</span>   <span class="pl-c1">2.864</span> ms ± <span class="pl-c1">195.931</span> μs  ┊ GC (mean ± σ)<span class="pl-k">:</span>  <span class="pl-c1">0.00</span><span class="pl-k">%</span> ± <span class="pl-c1">0.00</span><span class="pl-k">%</span></pre></div>
<h2 dir="auto"><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h2>
<h3 dir="auto"><a id="user-content-1d" class="anchor" aria-hidden="true" href="#1d"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>1D</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using FHist, Statistics, Random

julia&gt; Random.seed!(42)
MersenneTwister(42)

julia&gt; h1 = Hist1D(randn(10^4).+2, -5:0.5:5);

julia&gt; h1 = (h1 + h1*2)
edges: -5.0:0.5:5.0
bin counts: [0, 0, 0, 0, 0, 3, 3, 39, 153, 540, 1356, 2640, 4551, 5757, 5727, 4494, 2652, 1326, 546, 168]
total count: 29955

julia&gt; bincenters(h1)
-4.75:0.5:4.75

julia&gt; println(bincounts(h1))
[0, 0, 0, 0, 0, 3, 3, 39, 153, 540, 1356, 2640, 4551, 5757, 5727, 4494, 2652, 1326, 546, 168]

julia&gt; println(h1.sumw2);
[0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 65.0, 255.0, 900.0, 2260.0, 4400.0, 7585.0, 9595.0, 9545.0, 7490.0, 4420.0, 2210.0, 910.0, 280.0]

julia&gt; nbins(h1), integral(h1)
(20, 29955)

julia&gt; mean(h1), std(h1)
(1.993865798698047, 1.0126978885814524)

julia&gt; median(h1), quantile(h1, 0.5)
(1.7445284002084418, 1.7445284002084418)

julia&gt; lookup.(h1, [-1.5,0,2.5]) # find bin counts for given x-axis values
3-element Vector{Int64}:
   39
 1356
 4494

julia&gt; Hist1D(sample(h1; n=100))
edges: -1.0:1.0:5.0
bin counts: [4, 15, 41, 28, 10, 2]
total count: 100

julia&gt; h1 |&gt; normalize |&gt; integral
1.0"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FHist, Statistics, Random

julia<span class="pl-k">&gt;</span> Random<span class="pl-k">.</span><span class="pl-c1">seed!</span>(<span class="pl-c1">42</span>)
<span class="pl-c1">MersenneTwister</span>(<span class="pl-c1">42</span>)

julia<span class="pl-k">&gt;</span> h1 <span class="pl-k">=</span> <span class="pl-c1">Hist1D</span>(<span class="pl-c1">randn</span>(<span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">4</span>)<span class="pl-k">.+</span><span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">0.5</span><span class="pl-k">:</span><span class="pl-c1">5</span>);

julia<span class="pl-k">&gt;</span> h1 <span class="pl-k">=</span> (h1 <span class="pl-k">+</span> h1<span class="pl-k">*</span><span class="pl-c1">2</span>)
edges<span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">5.0</span><span class="pl-k">:</span><span class="pl-c1">0.5</span><span class="pl-k">:</span><span class="pl-c1">5.0</span>
bin counts<span class="pl-k">:</span> [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">39</span>, <span class="pl-c1">153</span>, <span class="pl-c1">540</span>, <span class="pl-c1">1356</span>, <span class="pl-c1">2640</span>, <span class="pl-c1">4551</span>, <span class="pl-c1">5757</span>, <span class="pl-c1">5727</span>, <span class="pl-c1">4494</span>, <span class="pl-c1">2652</span>, <span class="pl-c1">1326</span>, <span class="pl-c1">546</span>, <span class="pl-c1">168</span>]
total count<span class="pl-k">:</span> <span class="pl-c1">29955</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">bincenters</span>(h1)
<span class="pl-k">-</span><span class="pl-c1">4.75</span><span class="pl-k">:</span><span class="pl-c1">0.5</span><span class="pl-k">:</span><span class="pl-c1">4.75</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">println</span>(<span class="pl-c1">bincounts</span>(h1))
[<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3</span>, <span class="pl-c1">39</span>, <span class="pl-c1">153</span>, <span class="pl-c1">540</span>, <span class="pl-c1">1356</span>, <span class="pl-c1">2640</span>, <span class="pl-c1">4551</span>, <span class="pl-c1">5757</span>, <span class="pl-c1">5727</span>, <span class="pl-c1">4494</span>, <span class="pl-c1">2652</span>, <span class="pl-c1">1326</span>, <span class="pl-c1">546</span>, <span class="pl-c1">168</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">println</span>(h1<span class="pl-k">.</span>sumw2);
[<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">5.0</span>, <span class="pl-c1">5.0</span>, <span class="pl-c1">65.0</span>, <span class="pl-c1">255.0</span>, <span class="pl-c1">900.0</span>, <span class="pl-c1">2260.0</span>, <span class="pl-c1">4400.0</span>, <span class="pl-c1">7585.0</span>, <span class="pl-c1">9595.0</span>, <span class="pl-c1">9545.0</span>, <span class="pl-c1">7490.0</span>, <span class="pl-c1">4420.0</span>, <span class="pl-c1">2210.0</span>, <span class="pl-c1">910.0</span>, <span class="pl-c1">280.0</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">nbins</span>(h1), <span class="pl-c1">integral</span>(h1)
(<span class="pl-c1">20</span>, <span class="pl-c1">29955</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">mean</span>(h1), <span class="pl-c1">std</span>(h1)
(<span class="pl-c1">1.993865798698047</span>, <span class="pl-c1">1.0126978885814524</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">median</span>(h1), <span class="pl-c1">quantile</span>(h1, <span class="pl-c1">0.5</span>)
(<span class="pl-c1">1.7445284002084418</span>, <span class="pl-c1">1.7445284002084418</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">lookup</span>.(h1, [<span class="pl-k">-</span><span class="pl-c1">1.5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2.5</span>]) <span class="pl-c"><span class="pl-c">#</span> find bin counts for given x-axis values</span>
<span class="pl-c1">3</span><span class="pl-k">-</span>element Vector{Int64}<span class="pl-k">:</span>
   <span class="pl-c1">39</span>
 <span class="pl-c1">1356</span>
 <span class="pl-c1">4494</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">Hist1D</span>(<span class="pl-c1">sample</span>(h1; n<span class="pl-k">=</span><span class="pl-c1">100</span>))
edges<span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">1.0</span><span class="pl-k">:</span><span class="pl-c1">1.0</span><span class="pl-k">:</span><span class="pl-c1">5.0</span>
bin counts<span class="pl-k">:</span> [<span class="pl-c1">4</span>, <span class="pl-c1">15</span>, <span class="pl-c1">41</span>, <span class="pl-c1">28</span>, <span class="pl-c1">10</span>, <span class="pl-c1">2</span>]
total count<span class="pl-k">:</span> <span class="pl-c1">100</span>

julia<span class="pl-k">&gt;</span> h1 <span class="pl-k">|&gt;</span> normalize <span class="pl-k">|&gt;</span> integral
<span class="pl-c1">1.0</span></pre></div>
<h3 dir="auto"><a id="user-content-2d" class="anchor" aria-hidden="true" href="#2d"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>2D</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; h2 = Hist2D((randn(10^4),randn(10^4)), (-5:5,-5:5))

edges: (-5:5, -5:5)
bin counts: [0 0 … 0 0; 0 0 … 0 0; … ; 0 0 … 0 0; 0 0 … 0 0]
total count: 10000

julia&gt; nbins(h2)
(10, 10)

julia&gt; project(h2, :x)
edges: -5:5
bin counts: [0, 14, 228, 1345, 3399, 3462, 1300, 237, 15, 0]
total count: 10000

julia&gt; h2 |&gt; profile(:x) # or pipe

edges: -5:5
bin counts: [0.0, -0.21428571428571427, 0.0, 0.03382899628252788, 0.0025007355104442485, 0.012709416522241479, 0.018461538461538463, 0.035864978902953586, 0.1, 0.0]
total count: -0.010920048606008592

julia&gt; h2 |&gt; rebin(10,5)

edges: (-5.0:10.0:5.0, -5.0:5.0:5.0)
bin counts: [4953 5047]
total count: 10000"><pre>julia<span class="pl-k">&gt;</span> h2 <span class="pl-k">=</span> <span class="pl-c1">Hist2D</span>((<span class="pl-c1">randn</span>(<span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">4</span>),<span class="pl-c1">randn</span>(<span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">4</span>)), (<span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">5</span>,<span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">5</span>))

edges<span class="pl-k">:</span> (<span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">5</span>, <span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">5</span>)
bin counts<span class="pl-k">:</span> [<span class="pl-c1">0</span> <span class="pl-c1">0</span> … <span class="pl-c1">0</span> <span class="pl-c1">0</span>; <span class="pl-c1">0</span> <span class="pl-c1">0</span> … <span class="pl-c1">0</span> <span class="pl-c1">0</span>; … ; <span class="pl-c1">0</span> <span class="pl-c1">0</span> … <span class="pl-c1">0</span> <span class="pl-c1">0</span>; <span class="pl-c1">0</span> <span class="pl-c1">0</span> … <span class="pl-c1">0</span> <span class="pl-c1">0</span>]
total count<span class="pl-k">:</span> <span class="pl-c1">10000</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">nbins</span>(h2)
(<span class="pl-c1">10</span>, <span class="pl-c1">10</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">project</span>(h2, <span class="pl-c1">:x</span>)
edges<span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">5</span>
bin counts<span class="pl-k">:</span> [<span class="pl-c1">0</span>, <span class="pl-c1">14</span>, <span class="pl-c1">228</span>, <span class="pl-c1">1345</span>, <span class="pl-c1">3399</span>, <span class="pl-c1">3462</span>, <span class="pl-c1">1300</span>, <span class="pl-c1">237</span>, <span class="pl-c1">15</span>, <span class="pl-c1">0</span>]
total count<span class="pl-k">:</span> <span class="pl-c1">10000</span>

julia<span class="pl-k">&gt;</span> h2 <span class="pl-k">|&gt;</span> <span class="pl-c1">profile</span>(<span class="pl-c1">:x</span>) <span class="pl-c"><span class="pl-c">#</span> or pipe</span>

edges<span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">5</span>
bin counts<span class="pl-k">:</span> [<span class="pl-c1">0.0</span>, <span class="pl-k">-</span><span class="pl-c1">0.21428571428571427</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.03382899628252788</span>, <span class="pl-c1">0.0025007355104442485</span>, <span class="pl-c1">0.012709416522241479</span>, <span class="pl-c1">0.018461538461538463</span>, <span class="pl-c1">0.035864978902953586</span>, <span class="pl-c1">0.1</span>, <span class="pl-c1">0.0</span>]
total count<span class="pl-k">:</span> <span class="pl-k">-</span><span class="pl-c1">0.010920048606008592</span>

julia<span class="pl-k">&gt;</span> h2 <span class="pl-k">|&gt;</span> <span class="pl-c1">rebin</span>(<span class="pl-c1">10</span>,<span class="pl-c1">5</span>)

edges<span class="pl-k">:</span> (<span class="pl-k">-</span><span class="pl-c1">5.0</span><span class="pl-k">:</span><span class="pl-c1">10.0</span><span class="pl-k">:</span><span class="pl-c1">5.0</span>, <span class="pl-k">-</span><span class="pl-c1">5.0</span><span class="pl-k">:</span><span class="pl-c1">5.0</span><span class="pl-k">:</span><span class="pl-c1">5.0</span>)
bin counts<span class="pl-k">:</span> [<span class="pl-c1">4953</span> <span class="pl-c1">5047</span>]
total count<span class="pl-k">:</span> <span class="pl-c1">10000</span></pre></div>
<h3 dir="auto"><a id="user-content-3d" class="anchor" aria-hidden="true" href="#3d"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>3D</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; h3 = Hist3D((randn(10^4),randn(10^4),randn(10^4)), (-5:5,-5:5,-5:5))
Hist3D{Int64}, edges=(-5:5, -5:5, -5:5), integral=10000

julia&gt; h3 |&gt; project(:x) |&gt; project(:x) |&gt; std
1.051590599996025"><pre>julia<span class="pl-k">&gt;</span> h3 <span class="pl-k">=</span> <span class="pl-c1">Hist3D</span>((<span class="pl-c1">randn</span>(<span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">4</span>),<span class="pl-c1">randn</span>(<span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">4</span>),<span class="pl-c1">randn</span>(<span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">4</span>)), (<span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">5</span>,<span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">5</span>,<span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">5</span>))
Hist3D{Int64}, edges<span class="pl-k">=</span>(<span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">5</span>, <span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">5</span>, <span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">5</span>), integral<span class="pl-k">=</span><span class="pl-c1">10000</span>

julia<span class="pl-k">&gt;</span> h3 <span class="pl-k">|&gt;</span> <span class="pl-c1">project</span>(<span class="pl-c1">:x</span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">project</span>(<span class="pl-c1">:x</span>) <span class="pl-k">|&gt;</span> std
<span class="pl-c1">1.051590599996025</span></pre></div>
</article></div>