<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-nonlinear-regression" class="anchor" aria-hidden="true" href="#nonlinear-regression"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Nonlinear regression</h1>
<p><a href="https://dmbates.github.io/NLreg.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://dmbates.github.io/NLreg.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/dmbates/NLreg.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f1fe82d5d93c2084c76772e9bd49c3365e8c70696ef9e28ff63314c5165705c2/68747470733a2f2f7472617669732d63692e6f72672f646d62617465732f4e4c7265672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dmbates/NLreg.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/dmbates/NLreg-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1326aeab848ec329d4161f51195d8e694edf3f2f32b077cdf9bd3cde982e559b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f646d62617465732f4e4c7265672e6a6c3f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/dmbates/NLreg.jl?svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/dmbates/NLreg.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ae7a81d18613272665f9ff8f8dc663585eeb83212833c0dc28eb614d9e5eae07/68747470733a2f2f636f6465636f762e696f2f67682f646d62617465732f4e4c7265672e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/dmbates/NLreg.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>This package is an experiment in using the <a href="https://github.com/FluxML/Zygote.jl"><code>Zygote</code></a> automatic differentiation package and the <code>lowrankupdate!</code> function in the <code>LinearAlgebra</code> package to solve the linear least squares problem for a Gauss-Newton update.</p>
<p>The data are represented as a <code>Tables.RowTable</code>, which is a vector of <code>NamedTuple</code>s.  The model parameters are also a <code>NamedTuple</code>.  The model function is given as a function of two arguments - the parameters and a data row.</p>
<h2><a id="user-content-example---a-michaelis-menten-fit" class="anchor" aria-hidden="true" href="#example---a-michaelis-menten-fit"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example - a Michaelis-Menten fit</h2>
<p>In the
<a href="http://en.wikipedia.org/wiki/Michaelis-Menten_kinetics" rel="nofollow">Michaelis-Menten model</a>
for enzyme kinetics,</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="v = Vm * c / (K + c)
"><pre>v <span class="pl-k">=</span> Vm <span class="pl-k">*</span> c <span class="pl-k">/</span> (K <span class="pl-k">+</span> c)</pre></div>
<p>the relationship between the velocity, <code>v</code>, of a reaction and the
concentration, <code>c</code>, of the substrate depends on two parameters; <code>Vm</code>,
the maximum velocity and <code>K</code>, the Michaelis parameter.  The <code>Vm</code>
parameter occurs linearly in this expression whereas <code>K</code> is a
nonlinear parameter.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using CSV, DataFrames, NLreg

julia&gt; datadir = normpath(joinpath(dirname(pathof(NLreg)), &quot;..&quot;, &quot;data&quot;));

julia&gt; PurTrt = first(groupby(CSV.read(joinpath(datadir, &quot;Puromycin.csv&quot;)), :state))
12×3 SubDataFrame
│ Row │ conc    │ rate    │ state   │
│     │ Float64 │ Float64 │ String  │
├─────┼─────────┼─────────┼─────────┤
│ 1   │ 0.02    │ 76.0    │ treated │
│ 2   │ 0.02    │ 47.0    │ treated │
│ 3   │ 0.06    │ 97.0    │ treated │
⋮
│ 9   │ 0.56    │ 191.0   │ treated │
│ 10  │ 0.56    │ 201.0   │ treated │
│ 11  │ 1.1     │ 207.0   │ treated │
│ 12  │ 1.1     │ 200.0   │ treated │

julia&gt; pm1 = fit(NLregModel, PurTrt, :rate, (p,d) -&gt; p.Vm * d.conc/(p.K + d.conc),
                  (Vm = 200., K = 0.05))
Nonlinear regression model fit by maximum likelihood

Data schema (response variable is rate)
Tables.Schema:
 :conc   Float64
 :rate   Float64
 :state  String
Number of observations:                  12

Parameter estimates
───────────────────────────────────────
      Estimate   Std.Error  t-statistic
───────────────────────────────────────
Vm  212.684     6.94715        30.6145
K     0.064121  0.00828092      7.74322
───────────────────────────────────────

Sum of squared residuals at convergence: 1195.4488145417758
Achieved convergence criterion:          8.798637504793927e-6
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> CSV, DataFrames, NLreg

julia<span class="pl-k">&gt;</span> datadir <span class="pl-k">=</span> <span class="pl-c1">normpath</span>(<span class="pl-c1">joinpath</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">pathof</span>(NLreg)), <span class="pl-s"><span class="pl-pds">"</span>..<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span>));

julia<span class="pl-k">&gt;</span> PurTrt <span class="pl-k">=</span> <span class="pl-c1">first</span>(<span class="pl-c1">groupby</span>(CSV<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-c1">joinpath</span>(datadir, <span class="pl-s"><span class="pl-pds">"</span>Puromycin.csv<span class="pl-pds">"</span></span>)), <span class="pl-c1">:state</span>))
<span class="pl-c1">12</span><span class="pl-k">×</span><span class="pl-c1">3</span> SubDataFrame
│ Row │ conc    │ rate    │ state   │
│     │ Float64 │ Float64 │ String  │
├─────┼─────────┼─────────┼─────────┤
│ <span class="pl-c1">1</span>   │ <span class="pl-c1">0.02</span>    │ <span class="pl-c1">76.0</span>    │ treated │
│ <span class="pl-c1">2</span>   │ <span class="pl-c1">0.02</span>    │ <span class="pl-c1">47.0</span>    │ treated │
│ <span class="pl-c1">3</span>   │ <span class="pl-c1">0.06</span>    │ <span class="pl-c1">97.0</span>    │ treated │
⋮
│ <span class="pl-c1">9</span>   │ <span class="pl-c1">0.56</span>    │ <span class="pl-c1">191.0</span>   │ treated │
│ <span class="pl-c1">10</span>  │ <span class="pl-c1">0.56</span>    │ <span class="pl-c1">201.0</span>   │ treated │
│ <span class="pl-c1">11</span>  │ <span class="pl-c1">1.1</span>     │ <span class="pl-c1">207.0</span>   │ treated │
│ <span class="pl-c1">12</span>  │ <span class="pl-c1">1.1</span>     │ <span class="pl-c1">200.0</span>   │ treated │

julia<span class="pl-k">&gt;</span> pm1 <span class="pl-k">=</span> <span class="pl-c1">fit</span>(NLregModel, PurTrt, <span class="pl-c1">:rate</span>, (p,d) <span class="pl-k">-&gt;</span> p<span class="pl-k">.</span>Vm <span class="pl-k">*</span> d<span class="pl-k">.</span>conc<span class="pl-k">/</span>(p<span class="pl-k">.</span>K <span class="pl-k">+</span> d<span class="pl-k">.</span>conc),
                  (Vm <span class="pl-k">=</span> <span class="pl-c1">200.</span>, K <span class="pl-k">=</span> <span class="pl-c1">0.05</span>))
Nonlinear regression model fit by maximum likelihood

Data schema (response variable is rate)
Tables<span class="pl-k">.</span>Schema<span class="pl-k">:</span>
 <span class="pl-c1">:conc</span>   Float64
 <span class="pl-c1">:rate</span>   Float64
 <span class="pl-c1">:state</span>  String
Number of observations<span class="pl-k">:</span>                  <span class="pl-c1">12</span>

Parameter estimates
───────────────────────────────────────
      Estimate   Std<span class="pl-k">.</span>Error  t<span class="pl-k">-</span>statistic
───────────────────────────────────────
Vm  <span class="pl-c1">212.684</span>     <span class="pl-c1">6.94715</span>        <span class="pl-c1">30.6145</span>
K     <span class="pl-c1">0.064121</span>  <span class="pl-c1">0.00828092</span>      <span class="pl-c1">7.74322</span>
───────────────────────────────────────

Sum of squared residuals at convergence<span class="pl-k">:</span> <span class="pl-c1">1195.4488145417758</span>
Achieved convergence criterion<span class="pl-k">:</span>          <span class="pl-c1">8.798637504793927e-6</span></pre></div>
</article></div>