<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p>Wrapper over Python's <a href="http://www.sqlalchemy.org/" rel="nofollow">SQLAlchemy</a> library.</p>
<p>Currently only wraps the <a href="http://docs.sqlalchemy.org/en/rel_1_0/core/tutorial.html" rel="nofollow">SQL Expression Language</a> component (also called the "Core"), not the object-relational component.</p>
<h1><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic usage</h1>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">&gt;</span> <span class="pl-k">using</span> SQLAlchemy
<span class="pl-k">&gt;</span> engine <span class="pl-k">=</span> <span class="pl-c1">createengine</span>(<span class="pl-s"><span class="pl-pds">"</span>sqlite:///:memory:<span class="pl-pds">"</span></span>)
<span class="pl-k">&gt;</span> metadata <span class="pl-k">=</span> <span class="pl-c1">MetaData</span>()
<span class="pl-k">&gt;</span> users <span class="pl-k">=</span> <span class="pl-c1">Table</span>(<span class="pl-s"><span class="pl-pds">"</span>users<span class="pl-pds">"</span></span>, metadata, <span class="pl-c1">Column</span>(<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span>, String), <span class="pl-c1">Column</span>(<span class="pl-s"><span class="pl-pds">"</span>age<span class="pl-pds">"</span></span>, Real))
<span class="pl-k">&gt;</span> db <span class="pl-k">=</span> <span class="pl-c1">connect</span>(engine)
<span class="pl-k">&gt;</span> <span class="pl-c1">createall</span>(metadata, engine)
<span class="pl-k">&gt;</span> <span class="pl-c1">db</span>(<span class="pl-c1">insert</span>(users, name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Alice<span class="pl-pds">"</span></span>, age<span class="pl-k">=</span><span class="pl-c1">27.3</span>))
<span class="pl-k">&gt;</span> <span class="pl-c1">db</span>(<span class="pl-c1">insert</span>(users, name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Bob<span class="pl-pds">"</span></span>, age<span class="pl-k">=</span><span class="pl-c1">45.1</span>))
<span class="pl-k">&gt;</span> records <span class="pl-k">=</span> <span class="pl-c1">db</span>(<span class="pl-c1">select</span>([users]) <span class="pl-k">|&gt;</span> <span class="pl-c1">where</span>(users[<span class="pl-c1">:age</span>] <span class="pl-k">&gt;</span> <span class="pl-c1">30</span>)) <span class="pl-k">|&gt;</span> fetchall
(name <span class="pl-k">=&gt;</span> Bob, age <span class="pl-k">=&gt;</span> <span class="pl-c1">45.1</span>)
<span class="pl-k">&gt;</span> records[<span class="pl-c1">1</span>][<span class="pl-c1">:age</span>] 
<span class="pl-c1">Nullable</span>(<span class="pl-c1">45.1</span>)
<span class="pl-k">&gt;</span> <span class="pl-c1">typeof</span>(records[<span class="pl-c1">1</span>])
SQLAlchemy<span class="pl-k">.</span>Record{Tuple{Nullable{UTF8String}, Nullable{Int64}}}</pre></div>
<h1><a id="user-content-more-advanced-querying" class="anchor" aria-hidden="true" href="#more-advanced-querying"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>More advanced querying</h1>
<p>SQLAlchemy ships the <a href="https://chinookdatabase.codeplex.com/wikipage?title=Chinook_Schema&amp;referringTitle=Home" rel="nofollow">Chinook</a> sqlite database as learning tool and a conveience function ``loadchinook` to open a sqlite connection to it.</p>
<p>In this example, we'll see which artist has the most albums in the Chinook db.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">&gt;</span> <span class="pl-k">using</span> SQLAlchemy
<span class="pl-k">&gt;</span> db, schema <span class="pl-k">=</span> <span class="pl-c1">loadchinook</span>()
<span class="pl-c"><span class="pl-c">#</span> Let's look at part of the Album and Artist tables</span>
<span class="pl-k">&gt;</span> albums <span class="pl-k">=</span> <span class="pl-c1">Table</span>(<span class="pl-s"><span class="pl-pds">"</span>Album<span class="pl-pds">"</span></span>, schema, autoload<span class="pl-k">=</span><span class="pl-c1">true</span>)  <span class="pl-c"><span class="pl-c">#</span> autoload causes the table schema to be read from the database</span></pre></div>
<pre><code>Table('Album', 
MetaData(bind=Engine(sqlite:////Users/malmaud/.julia/v0.4/SQLAlchemy/deps/data/Chinook_Sqlite.sqlite)), 
Column('AlbumId', INTEGER(), table=&lt;Album&gt;, primary_key=True, nullable=False), 
Column('Title', NVARCHAR(length=160), table=&lt;Album&gt;, nullable=False), 
Column('ArtistId', INTEGER(), ForeignKey(u'Artist.ArtistId'), table=&lt;Album&gt;, nullable=False), 
schema=None)
</code></pre>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">&gt;</span> artists <span class="pl-k">=</span> <span class="pl-c1">Table</span>(<span class="pl-s"><span class="pl-pds">"</span>Artist<span class="pl-pds">"</span></span>, schema, autoload<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<pre><code>Table('Artist', 
MetaData(bind=Engine(sqlite:////Users/malmaud/.julia/v0.4/SQLAlchemy/deps/data/Chinook_Sqlite.sqlite)), 
Column('ArtistId', INTEGER(), table=&lt;Artist&gt;, primary_key=True, nullable=False), 
Column('Name', NVARCHAR(length=120), table=&lt;Artist&gt;), 
schema=None)
</code></pre>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">&gt;</span> <span class="pl-c1">db</span>(<span class="pl-c1">select</span>([artists])) <span class="pl-k">|&gt;</span> fetchall</pre></div>
<pre><code>ArtistId=&gt;1, Name=&gt;"AC/DC"
ArtistId=&gt;2, Name=&gt;"Accept"
ArtistId=&gt;3, Name=&gt;"Aerosmith"
ArtistId=&gt;4, Name=&gt;"Alanis Morissette"
ArtistId=&gt;5, Name=&gt;"Alice In Chains"
ArtistId=&gt;6, Name=&gt;"Ant√¥nio Carlos Jobim"
ArtistId=&gt;7, Name=&gt;"Apocalyptica"
ArtistId=&gt;8, Name=&gt;"Audioslave"
ArtistId=&gt;9, Name=&gt;"BackBeat"
ArtistId=&gt;10, Name=&gt;"Billy Cobham"
</code></pre>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">&gt;</span> <span class="pl-c1">db</span>(<span class="pl-c1">select</span>([albums])) <span class="pl-k">|&gt;</span> fetchall</pre></div>
<pre><code>AlbumId=&gt;1, Title=&gt;"For Those About To Rock We Salute You", ArtistId=&gt;1
AlbumId=&gt;2, Title=&gt;"Balls to the Wall", ArtistId=&gt;2
AlbumId=&gt;3, Title=&gt;"Restless and Wild", ArtistId=&gt;2
AlbumId=&gt;4, Title=&gt;"Let There Be Rock", ArtistId=&gt;1
AlbumId=&gt;5, Title=&gt;"Big Ones", ArtistId=&gt;3
AlbumId=&gt;6, Title=&gt;"Jagged Little Pill", ArtistId=&gt;4
AlbumId=&gt;7, Title=&gt;"Facelift", ArtistId=&gt;5
AlbumId=&gt;8, Title=&gt;"Warner 25 Anos", ArtistId=&gt;6
AlbumId=&gt;9, Title=&gt;"Plays Metallica By Four Cellos", ArtistId=&gt;7
AlbumId=&gt;10, Title=&gt;"Audioslave", ArtistId=&gt;8
</code></pre>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">&gt;</span> <span class="pl-c1">db</span>(<span class="pl-c1">select</span>([artists[<span class="pl-c1">:Name</span>],
             <span class="pl-c1">func</span>(<span class="pl-s"><span class="pl-pds">"</span>count<span class="pl-pds">"</span></span>, albums[<span class="pl-c1">:Title</span>]) <span class="pl-k">|&gt;</span> <span class="pl-c1">label</span>(<span class="pl-s"><span class="pl-pds">"</span># of albums<span class="pl-pds">"</span></span>)]) <span class="pl-k">|&gt;</span>
     <span class="pl-c1">selectfrom</span>(<span class="pl-c1">join</span>(artists, albums)) <span class="pl-k">|&gt;</span>
     <span class="pl-c1">groupby</span>(albums[<span class="pl-c1">:ArtistId</span>]) <span class="pl-k">|&gt;</span>
     <span class="pl-c1">orderby</span>(<span class="pl-c1">desc</span>(<span class="pl-s"><span class="pl-pds">"</span># of albums<span class="pl-pds">"</span></span>))) <span class="pl-k">|&gt;</span> fetchall</pre></div>
<pre><code>Name=&gt;"Iron Maiden", # of albums=&gt;21
Name=&gt;"Led Zeppelin", # of albums=&gt;14
Name=&gt;"Deep Purple", # of albums=&gt;11
Name=&gt;"Metallica", # of albums=&gt;10
Name=&gt;"U2", # of albums=&gt;10
Name=&gt;"Ozzy Osbourne", # of albums=&gt;6
Name=&gt;"Pearl Jam", # of albums=&gt;5
Name=&gt;"Various Artists", # of albums=&gt;4
Name=&gt;"Faith No More", # of albums=&gt;4
Name=&gt;"Foo Fighters", # of albums=&gt;4
</code></pre>
</article></div>