<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-pressuredropjl" class="anchor" aria-hidden="true" href="#pressuredropjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PressureDrop.jl</h1>
<p dir="auto"><a href="https://travis-ci.com/jnoynaert/PressureDrop.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e9b6b6ec5cea9a8206e362f7c0022b0b9ac841385cd79c236236bcc0f97588c4/68747470733a2f2f7472617669732d63692e636f6d2f6a6e6f796e616572742f507265737375726544726f702e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/jnoynaert/PressureDrop.jl.svg?branch=master" style="max-width: 100%;"></a>  <a href="https://jnoynaert.github.io/PressureDrop.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Docs" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>  <a href="https://doi.org/10.21105/joss.01642" rel="nofollow"><img src="https://camo.githubusercontent.com/f4c3e10f2226583b6d71ef8ea0fe8d0ae1b06d16bbc701e51cb5ecca406d88bb/68747470733a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30313634322f7374617475732e737667" alt="DOI" data-canonical-src="https://joss.theoj.org/papers/10.21105/joss.01642/status.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Julia package for computing multiphase pressure profiles for gas lifted oil &amp; gas wells, developed as an open-source alternative to feature subsets of commercial nodal analysis or RTA software such as Prosper, Pipesim, or IHS Harmony (some comparisons <a href="https://jnoynaert.github.io/PressureDrop.jl/stable/similartools/" rel="nofollow">here</a>).</p>
<p dir="auto">Currently calculates outlet-referenced models for producing wells using non-coupled temperature gradients.</p>
<p dir="auto">In addition to being open-source, <code>PressureDrop.jl</code> has several advantages over closed-source applications for its intended use cases:</p>
<ul dir="auto">
<li>Programmatic and scriptable use with native code--no binaries consuming configuration files or awkward keyword specifications</li>
<li>Dynamic recalculation of injection points and temperature profiles through time</li>
<li>Easy duplication and modification of models and scenarios</li>
<li>Extensible PVT or pressure correlation options by adding functions in Julia code (or C, Python, or R)</li>
<li>Utilization of Julia's interoperability with other languages for adding or importing new functions for model components</li>
</ul>
<p dir="auto">Changelog <a href="changelog.md">here</a>.</p>
<h1 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h1>
<p dir="auto">From the Julia prompt: press <code>]</code>, then type <code>add PressureDrop</code>.</p>
<p dir="auto">Alternatively, in Jupyter: execute a cell containing <code>using Pkg; Pkg.add("PressureDrop")</code>.</p>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<p dir="auto">Models are constructed from well objects, optional valve objects, and parameter specifications. Well and valve objects can be constructed manually or <a href="https://jnoynaert.github.io/PressureDrop.jl/stable/core/#Wellbores-1" rel="nofollow">from files</a> (see <a href="test/testdata/Sawgrass_9_32/Test_survey_Sawgrass_9.csv">here</a> for an example well input file and <a href="test/testdata/valvedata_wrappers_1.csv">here</a> for an example valve file).</p>
<p dir="auto">Note that all inputs and calculations are in U.S. field units:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using PressureDrop

julia&gt; examplewell = read_survey(path = PressureDrop.example_surveyfile, id = 2.441, maxdepth = 6500)

Wellbore with 67 points.
Ends at 6459.0' MD / 6405.05' TVD.
Max inclination 13.4°. Average ID 2.441 in.

julia&gt; examplevalves = read_valves(path = PressureDrop.example_valvefile)

Valve design with 4 valves and bottom valve at 3395.0' MD.

julia&gt; model = WellModel(wellbore = examplewell, roughness = 0.00065, valves = examplevalves,
                         pressurecorrelation = BeggsAndBrill,
                         WHP = 200, #wellhead pressure, psig
                         CHP = 1050, #casing pressure, psig
                         dp_est = 25, #estimated ΔP by segment. Not critical
                         temperature_method = &quot;Shiu&quot;, #temperatures can be calculated or provided directly as a array
                         BHT = 160, geothermal_gradient = 0.9,  #°F, °F/100'
                         q_o = 100, q_w = 500, #bpd
                         GLR = 2500, naturalGLR = 400, #scf/bbl
                         APIoil = 35, sg_water = 1.05, sg_gas = 0.65);"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PressureDrop

julia<span class="pl-k">&gt;</span> examplewell <span class="pl-k">=</span> <span class="pl-c1">read_survey</span>(path <span class="pl-k">=</span> PressureDrop<span class="pl-k">.</span>example_surveyfile, id <span class="pl-k">=</span> <span class="pl-c1">2.441</span>, maxdepth <span class="pl-k">=</span> <span class="pl-c1">6500</span>)

Wellbore with <span class="pl-c1">67</span> points.
Ends at <span class="pl-c1">6459.0</span><span class="pl-k">'</span> MD <span class="pl-k">/</span> <span class="pl-c1">6405.05</span><span class="pl-k">'</span> TVD.
Max inclination <span class="pl-c1">13.4</span>°. Average ID <span class="pl-c1">2.441</span> in.

julia<span class="pl-k">&gt;</span> examplevalves <span class="pl-k">=</span> <span class="pl-c1">read_valves</span>(path <span class="pl-k">=</span> PressureDrop<span class="pl-k">.</span>example_valvefile)

Valve design with <span class="pl-c1">4</span> valves and bottom valve at <span class="pl-c1">3395.0</span><span class="pl-k">'</span> MD.

julia<span class="pl-k">&gt;</span> model <span class="pl-k">=</span> <span class="pl-c1">WellModel</span>(wellbore <span class="pl-k">=</span> examplewell, roughness <span class="pl-k">=</span> <span class="pl-c1">0.00065</span>, valves <span class="pl-k">=</span> examplevalves,
                         pressurecorrelation <span class="pl-k">=</span> BeggsAndBrill,
                         WHP <span class="pl-k">=</span> <span class="pl-c1">200</span>, <span class="pl-c"><span class="pl-c">#</span>wellhead pressure, psig</span>
                         CHP <span class="pl-k">=</span> <span class="pl-c1">1050</span>, <span class="pl-c"><span class="pl-c">#</span>casing pressure, psig</span>
                         dp_est <span class="pl-k">=</span> <span class="pl-c1">25</span>, <span class="pl-c"><span class="pl-c">#</span>estimated ΔP by segment. Not critical</span>
                         temperature_method <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Shiu<span class="pl-pds">"</span></span>, <span class="pl-c"><span class="pl-c">#</span>temperatures can be calculated or provided directly as a array</span>
                         BHT <span class="pl-k">=</span> <span class="pl-c1">160</span>, geothermal_gradient <span class="pl-k">=</span> <span class="pl-c1">0.9</span>,  <span class="pl-c"><span class="pl-c">#</span>°F, °F/100'</span>
                         q_o <span class="pl-k">=</span> <span class="pl-c1">100</span>, q_w <span class="pl-k">=</span> <span class="pl-c1">500</span>, <span class="pl-c"><span class="pl-c">#</span>bpd</span>
                         GLR <span class="pl-k">=</span> <span class="pl-c1">2500</span>, naturalGLR <span class="pl-k">=</span> <span class="pl-c1">400</span>, <span class="pl-c"><span class="pl-c">#</span>scf/bbl</span>
                         APIoil <span class="pl-k">=</span> <span class="pl-c1">35</span>, sg_water <span class="pl-k">=</span> <span class="pl-c1">1.05</span>, sg_gas <span class="pl-k">=</span> <span class="pl-c1">0.65</span>);</pre></div>
<p dir="auto">Once a model is specified, developing pressure/temperature traverses or gas lift analysis is simple:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; tubing_pressures, casing_pressures, valvedata = gaslift_model!(model, find_injectionpoint = true,
               dp_min = 100) #required minimum ΔP at depth to consider as an operating valve

Flowing bottomhole pressure of 964.4 psig at 6459.0' MD.
Average gradient 0.149 psi/ft (MD), 0.151 psi/ft (TVD).

julia&gt; using Gadfly #necessary to make integrated plotting functions available

julia&gt; plot_gaslift(model, tubing_pressures, casing_pressures, valvedata, &quot;Gas Lift Analysis Plot&quot;) #expect a long time to first plot due to precompilation; subsequent calls will be faster"><pre>julia<span class="pl-k">&gt;</span> tubing_pressures, casing_pressures, valvedata <span class="pl-k">=</span> <span class="pl-c1">gaslift_model!</span>(model, find_injectionpoint <span class="pl-k">=</span> <span class="pl-c1">true</span>,
               dp_min <span class="pl-k">=</span> <span class="pl-c1">100</span>) <span class="pl-c"><span class="pl-c">#</span>required minimum ΔP at depth to consider as an operating valve</span>

Flowing bottomhole pressure of <span class="pl-c1">964.4</span> psig at <span class="pl-c1">6459.0</span><span class="pl-k">'</span> MD.
Average gradient <span class="pl-c1">0.149</span> psi<span class="pl-k">/</span>ft (MD), <span class="pl-c1">0.151</span> psi<span class="pl-k">/</span>ft (TVD)<span class="pl-k">.</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Gadfly <span class="pl-c"><span class="pl-c">#</span>necessary to make integrated plotting functions available</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot_gaslift</span>(model, tubing_pressures, casing_pressures, valvedata, <span class="pl-s"><span class="pl-pds">"</span>Gas Lift Analysis Plot<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span>expect a long time to first plot due to precompilation; subsequent calls will be faster</span></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="examples/gl-plot-example.png"><img src="examples/gl-plot-example.png" alt="example gl plot" style="max-width: 100%;"></a></p>
<p dir="auto">Valve tables can be generated from the output of the gas lift model:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; valve_table(valvedata)

╭─────┬──────┬──────┬──────┬──────┬───────┬───────┬──────┬──────┬──────┬──────┬──────┬──────┬──────┬──────┬───────┬───────┬───────╮
│ GLV │   MD │  TVD │  PSO │  PSC │  Port │     R │ PPEF │ PTRO │   TP │   CP │  PVO │  PVC │ T_td │ T_cd │   Q_o │ Q_1.5 │   Q_1 │
│     │   ft │   ft │ psig │ psig │ 64ths │       │    % │ psig │ psig │ psig │ psig │ psig │   °F │   °F │ mcf/d │ mcf/d │ mcf/d │
├─────┼──────┼──────┼──────┼──────┼───────┼───────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼───────┼───────┼───────┤
│   4 │ 1813 │ 1806 │ 1055 │ 1002 │    16 │ 0.073 │    8 │ 1005 │  384 │ 1100 │ 1104 │ 1052 │  132 │  112 │  1480 │  1125 │   888 │
│   3 │ 2375 │ 2357 │ 1027 │  979 │    16 │ 0.073 │    8 │  990 │  446 │ 1115 │ 1092 │ 1045 │  136 │  116 │  1493 │  1135 │   896 │
│   2 │ 2885 │ 2856 │  999 │  957 │    16 │ 0.073 │    8 │  975 │  504 │ 1129 │ 1078 │ 1036 │  141 │  119 │  1506 │  1144 │   903 │
│   1 │ 3395 │ 3355 │  970 │  934 │    16 │ 0.073 │    8 │  960 │  568 │ 1143 │ 1063 │ 1027 │  145 │  123 │  1518 │  1154 │   911 │
╰─────┴──────┴──────┴──────┴──────┴───────┴───────┴──────┴──────┴──────┴──────┴──────┴──────┴──────┴──────┴───────┴───────┴───────╯"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">valve_table</span>(valvedata)

╭─────┬──────┬──────┬──────┬──────┬───────┬───────┬──────┬──────┬──────┬──────┬──────┬──────┬──────┬──────┬───────┬───────┬───────╮
│ GLV │   MD │  TVD │  PSO │  PSC │  Port │     R │ PPEF │ PTRO │   TP │   CP │  PVO │  PVC │ T_td │ T_cd │   Q_o │ Q_1.<span class="pl-c1">5</span> │   Q_1 │
│     │   ft │   ft │ psig │ psig │ <span class="pl-c1">64</span>ths │       │    <span class="pl-k">%</span> │ psig │ psig │ psig │ psig │ psig │   °F │   °F │ mcf<span class="pl-k">/</span>d │ mcf<span class="pl-k">/</span>d │ mcf<span class="pl-k">/</span>d │
├─────┼──────┼──────┼──────┼──────┼───────┼───────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼───────┼───────┼───────┤
│   <span class="pl-c1">4</span> │ <span class="pl-c1">1813</span> │ <span class="pl-c1">1806</span> │ <span class="pl-c1">1055</span> │ <span class="pl-c1">1002</span> │    <span class="pl-c1">16</span> │ <span class="pl-c1">0.073</span> │    <span class="pl-c1">8</span> │ <span class="pl-c1">1005</span> │  <span class="pl-c1">384</span> │ <span class="pl-c1">1100</span> │ <span class="pl-c1">1104</span> │ <span class="pl-c1">1052</span> │  <span class="pl-c1">132</span> │  <span class="pl-c1">112</span> │  <span class="pl-c1">1480</span> │  <span class="pl-c1">1125</span> │   <span class="pl-c1">888</span> │
│   <span class="pl-c1">3</span> │ <span class="pl-c1">2375</span> │ <span class="pl-c1">2357</span> │ <span class="pl-c1">1027</span> │  <span class="pl-c1">979</span> │    <span class="pl-c1">16</span> │ <span class="pl-c1">0.073</span> │    <span class="pl-c1">8</span> │  <span class="pl-c1">990</span> │  <span class="pl-c1">446</span> │ <span class="pl-c1">1115</span> │ <span class="pl-c1">1092</span> │ <span class="pl-c1">1045</span> │  <span class="pl-c1">136</span> │  <span class="pl-c1">116</span> │  <span class="pl-c1">1493</span> │  <span class="pl-c1">1135</span> │   <span class="pl-c1">896</span> │
│   <span class="pl-c1">2</span> │ <span class="pl-c1">2885</span> │ <span class="pl-c1">2856</span> │  <span class="pl-c1">999</span> │  <span class="pl-c1">957</span> │    <span class="pl-c1">16</span> │ <span class="pl-c1">0.073</span> │    <span class="pl-c1">8</span> │  <span class="pl-c1">975</span> │  <span class="pl-c1">504</span> │ <span class="pl-c1">1129</span> │ <span class="pl-c1">1078</span> │ <span class="pl-c1">1036</span> │  <span class="pl-c1">141</span> │  <span class="pl-c1">119</span> │  <span class="pl-c1">1506</span> │  <span class="pl-c1">1144</span> │   <span class="pl-c1">903</span> │
│   <span class="pl-c1">1</span> │ <span class="pl-c1">3395</span> │ <span class="pl-c1">3355</span> │  <span class="pl-c1">970</span> │  <span class="pl-c1">934</span> │    <span class="pl-c1">16</span> │ <span class="pl-c1">0.073</span> │    <span class="pl-c1">8</span> │  <span class="pl-c1">960</span> │  <span class="pl-c1">568</span> │ <span class="pl-c1">1143</span> │ <span class="pl-c1">1063</span> │ <span class="pl-c1">1027</span> │  <span class="pl-c1">145</span> │  <span class="pl-c1">123</span> │  <span class="pl-c1">1518</span> │  <span class="pl-c1">1154</span> │   <span class="pl-c1">911</span> │
╰─────┴──────┴──────┴──────┴──────┴───────┴───────┴──────┴──────┴──────┴──────┴──────┴──────┴──────┴──────┴───────┴───────┴───────╯</pre></div>
<p dir="auto">Bulk calculations can also be performed either time by either iterating a model object, or calling pressure traverse functions directly:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function timestep_pressure(rate, temp, watercut, GLR)
    temps = linear_wellboretemp(WHT = temp, BHT = 165, wellbore = examplewell)

    return traverse_topdown(wellbore = examplewell, roughness = 0.0065, temperatureprofile = temps,
                     pressurecorrelation = BeggsAndBrill, dp_est = 25, error_tolerance = 0.1,
                     q_o = rate * (1 - watercut), q_w = rate * watercut, GLR = GLR,
                     APIoil = 36, sg_water = 1.05, sg_gas = 0.65,
                     WHP = 120)[end]
end

pressures = timestep_pressure.(testdata, wellhead_temps, watercuts, GLRs)

plot(x = days, y = pressures, Geom.path, Theme(default_color = &quot;purple&quot;),
     Guide.xlabel(&quot;Time (days)&quot;),
     Guide.ylabel(&quot;Flowing Pressure (psig)&quot;),
     Scale.y_continuous(format = :plain, minvalue = 0),
     Guide.title(&quot;FBHP Over Time&quot;))"><pre><span class="pl-k">function</span> <span class="pl-en">timestep_pressure</span>(rate, temp, watercut, GLR)
    temps <span class="pl-k">=</span> <span class="pl-c1">linear_wellboretemp</span>(WHT <span class="pl-k">=</span> temp, BHT <span class="pl-k">=</span> <span class="pl-c1">165</span>, wellbore <span class="pl-k">=</span> examplewell)

    <span class="pl-k">return</span> <span class="pl-c1">traverse_topdown</span>(wellbore <span class="pl-k">=</span> examplewell, roughness <span class="pl-k">=</span> <span class="pl-c1">0.0065</span>, temperatureprofile <span class="pl-k">=</span> temps,
                     pressurecorrelation <span class="pl-k">=</span> BeggsAndBrill, dp_est <span class="pl-k">=</span> <span class="pl-c1">25</span>, error_tolerance <span class="pl-k">=</span> <span class="pl-c1">0.1</span>,
                     q_o <span class="pl-k">=</span> rate <span class="pl-k">*</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> watercut), q_w <span class="pl-k">=</span> rate <span class="pl-k">*</span> watercut, GLR <span class="pl-k">=</span> GLR,
                     APIoil <span class="pl-k">=</span> <span class="pl-c1">36</span>, sg_water <span class="pl-k">=</span> <span class="pl-c1">1.05</span>, sg_gas <span class="pl-k">=</span> <span class="pl-c1">0.65</span>,
                     WHP <span class="pl-k">=</span> <span class="pl-c1">120</span>)[<span class="pl-c1">end</span>]
<span class="pl-k">end</span>

pressures <span class="pl-k">=</span> <span class="pl-c1">timestep_pressure</span>.(testdata, wellhead_temps, watercuts, GLRs)

<span class="pl-c1">plot</span>(x <span class="pl-k">=</span> days, y <span class="pl-k">=</span> pressures, Geom<span class="pl-k">.</span>path, <span class="pl-c1">Theme</span>(default_color <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>purple<span class="pl-pds">"</span></span>),
     Guide<span class="pl-k">.</span><span class="pl-c1">xlabel</span>(<span class="pl-s"><span class="pl-pds">"</span>Time (days)<span class="pl-pds">"</span></span>),
     Guide<span class="pl-k">.</span><span class="pl-c1">ylabel</span>(<span class="pl-s"><span class="pl-pds">"</span>Flowing Pressure (psig)<span class="pl-pds">"</span></span>),
     Scale<span class="pl-k">.</span><span class="pl-c1">y_continuous</span>(format <span class="pl-k">=</span> <span class="pl-c1">:plain</span>, minvalue <span class="pl-k">=</span> <span class="pl-c1">0</span>),
     Guide<span class="pl-k">.</span><span class="pl-c1">title</span>(<span class="pl-s"><span class="pl-pds">"</span>FBHP Over Time<span class="pl-pds">"</span></span>))</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="examples/bulk-plot-example.png"><img src="examples/bulk-plot-example.png" alt="example bulk plot" style="max-width: 100%;"></a></p>
<p dir="auto">See the <a href="https://jnoynaert.github.io/PressureDrop.jl/stable" rel="nofollow">documentation</a> for more usage details.</p>
<h1 dir="auto"><a id="user-content-supported-pressure-correlations" class="anchor" aria-hidden="true" href="#supported-pressure-correlations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Supported pressure correlations</h1>
<ul dir="auto">
<li>Beggs and Brill, with the Payne correction factors. Best for inclined pipe.</li>
<li>Hagedorn and Brown, with the Griffith and Wallis bubble flow adjustment.</li>
<li>Casing (injection) pressure drops using corrected density but neglecting friction.</li>
</ul>
<p dir="auto">These methods do not account for oil-water phase slip and assume <strong>steady-state conditions</strong>.</p>
<h1 dir="auto"><a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Performance</h1>
<p dir="auto">The pressure drop calculations converge quickly enough in most cases that special performance considerations do not need to be taken into account during interactive use.</p>
<p dir="auto">For bulk calculations, note that as always with Julia, the best performance will be achieved by wrapping any calculations in a function, e.g. a <code>main()</code> block, to enable proper type inference by the compiler.</p>
<p dir="auto">Plotting functions are lazily loaded to avoid the overhead of loading the <code>Gadfly</code> plotting dependency.</p>
<h1 dir="auto"><a id="user-content-pull-requests--bug-reports" class="anchor" aria-hidden="true" href="#pull-requests--bug-reports"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Pull requests &amp; bug reports</h1>
<ul dir="auto">
<li>Pull requests are welcome! For additional functionality, especially pressure correlations or PVT functions, please include unit tests.</li>
<li>Please add any bug reports or feature requests to the <a href="https://github.com/jnoynaert/PressureDrop.jl/issues">issue tracker</a>. Ideally, include a <a href="https://stackoverflow.com/help/minimal-reproducible-example" rel="nofollow">minimal, reproducible example</a> with any issue reports, along with additional necessary data (e.g. CSV definitions of well surveys).</li>
</ul>
</article></div>