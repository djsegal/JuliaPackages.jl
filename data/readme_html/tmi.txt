<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-tmi" class="anchor" aria-hidden="true" href="#tmi"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TMI</h1>
<p dir="auto"><a href="https://ggebbie.github.io/TMI.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://ggebbie.github.io/TMI.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/ggebbie/TMI.jl/actions"><img src="https://github.com/ggebbie/TMI.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/ggebbie/TMI.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7dbaa9d08ba35f75a6f23ea2d5c10337fd2b21606b2e00f06c7b2b8c6204f358/68747470733a2f2f636f6465636f762e696f2f67682f676765626269652f544d492e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/ggebbie/TMI.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<ul dir="auto">
<li>
<p dir="auto">Total Matrix Intercomparison codes for Julia<br>
Started by G Jake Gebbie, WHOI, <a href="mailto:ggebbie@whoi.edu">ggebbie@whoi.edu</a></p>
</li>
<li>
<p dir="auto">See the function list in the documentation linked through the badge above</p>
</li>
<li>
<p dir="auto">The MATLAB version of the code is in maintenance mode and is available at <a href="https://github.com/ggebbie/TMI">https://github.com/ggebbie/TMI</a></p>
</li>
<li>
<p dir="auto">After setting up the environment (instructions below), check that all tests pass via the following shell command in the repository base directory:
<code>julia --project=@. test/runtests.jl</code></p>
</li>
</ul>
<h1 dir="auto"><a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Requirements</h1>
<p dir="auto">The built-in tests are automatically checked with Julia 1.8.</p>
<h1 dir="auto"><a id="user-content-setting-up-project-environment" class="anchor" aria-hidden="true" href="#setting-up-project-environment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Setting up project environment</h1>
<ul dir="auto">
<li>from the Julia REPL</li>
</ul>
<p dir="auto"><code>;</code><br>
<code>git clone https://github.com/ggebbie/TMI.jl # only do this the first time on each machine</code><br>
<code>cd TMI.jl</code><br>
<code>]</code><br>
<code>activate .</code><br>
<code>instantiate # only do this the first time on each machine</code><br>
To verify you are in the project environment, <code>]</code> should return <code>(TMI) pkg&gt;</code><br>
Type backspace to return to command mode.</p>
<ul dir="auto">
<li>from Emacs editor (one possible method)</li>
</ul>
<p dir="auto">Install julia-mode, julia-repl or julia-snail, and magit <br>
Skip the next 5 steps if you have already cloned the repository <br>
<code>M-x magit-clone</code> <br>
Select <code>u</code> to clone from url<br>
Enter <code> https://github.com/ggebbie/TMI.jl</code> as url to clone <br>
Select <code>y</code> in response to <code>remote.pushDefault' to "origin"?</code> <br>
Clone to your favorite location and rename project if necessary <br>
Go to any directory in the project: <code>C-x C-f TMI.jl</code><br>
Then activate the project and initialize a julia session: <code>C-c C-a</code></p>
<ul dir="auto">
<li>Using an editor like Atom/Juno or Visual Studio Code, activate the environment on one of the frame panels. The default environment is @v1.x and should be changed.</li>
</ul>
<h1 dir="auto"><a id="user-content-scriptsexamples" class="anchor" aria-hidden="true" href="#scriptsexamples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Scripts/Examples</h1>
<p dir="auto">Examples for what TMI can do are found in the <code>scripts</code> directory.</p>
<p dir="auto">See examples in <code>scripts/ex*</code>, where <code>ex1.trackpathways.jl</code> gives Example 1 of tracking water-mass pathways, for example. Scripts beginning with "ex" are tested and can serve as good templates for new work. Other scripts are a work in progress.</p>
<p dir="auto">Scripts can be run non-interactively like this:<br>
<code>cd TMI.jl</code><br>
<code>julia --project=scripts scripts/ex1.trackpathways.jl</code></p>
<p dir="auto">To show graphical results, TMI.jl uses <code>GGplot.jl</code> for plotting routines. In particular, matplotlib and cartopy are handled by <code>GGplot</code> so that they are not dependencies in <code>TMI.jl</code>. Thus the <code>scripts</code> directory has its own environment distinct from the TMI project. If you are working interactively, try the following commands to activate the scripts environment: \</p>
<p dir="auto"><code>cd("scripts")</code><br>
<code>import Pkg; Pkg.activate(".")</code></p>
<p dir="auto">If you use the examples and <code>GGplot</code>, you will need a python environment in Julia. Direct the python environment to an existing system-wide version of python with these already installed:
<code>ENV["PYTHON"]="python/directory/on/your/machine"</code></p>
<p dir="auto">GGplot will use a package-specific python environment built from scratch using the <code>CondaPkg.jl</code> package. Check out the <code>GGplot/deps/build.jl</code> file to see how this Python environment is set up. In particular, it executes:
<code>ENV["PYTHON"]=""</code></p>
<p dir="auto">Rather than using the <code>PyCall.jl</code>, <code>GGplot.jl</code> uses <code>PythonCall.jl</code> in order to minimize errors that occur due to incompatible Python environments.
<code>import Pkg; Pkg.add("PythonCall")</code><br>
<code>import Pkg; Pkg.build("PythonCall") # probably not necessary</code></p>
<p dir="auto">In particular, GGplot uses the matplotlib, cartopy, and cmocean packages. The channel is automatically assumed to be conda-forge. <br>
<code>using CondaPkg</code><br>
<code>] conda add matplotlib # from the package manager</code><br>
<code>] Conda add cartopy</code><br>
<code>] Conda add cmocean</code></p>
<p dir="auto">This version of cartopy (v0.20.0+) can download coastlines from Amazon Web Services.</p>
<h1 dir="auto"><a id="user-content-data-files" class="anchor" aria-hidden="true" href="#data-files"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Data files</h1>
<p dir="auto">The Julia code is designed to download input files from Google Drive and to place them in the <code>data</code> directory. If that doesn't work, extract data from Google Drive using your favorite method or download manually at: <a href="https://drive.google.com/drive/folders/1nFDSINbst84pK68aWwRGBVfYZkfN1mUR?usp=sharing" rel="nofollow">https://drive.google.com/drive/folders/1nFDSINbst84pK68aWwRGBVfYZkfN1mUR?usp=sharing</a> . Available TMI versions include:</p>
<p dir="auto"><code>modern_90x45x33_GH10_GH12</code> : TMI version with 4x4 degree horizontal
resolution and 33 levels  (G &amp; H 2010), <br>
Includes the input data from the WGHC (Gouretski &amp; Koltermann 2005)</p>
<p dir="auto"><code>modern_180x90x33_GH11_GH12</code> : TMI version with 2x2 degree horizontal
resolution and 33 levels  (G &amp; H 2011), <br>
Includes the input data from the WGHC (Gouretski &amp; Koltermann 2005)</p>
<p dir="auto"><code>modern_90x45x33_unpub12</code> : TMI version with 4x4 degree horizontal
resolution and 33 levels  (unpublished 2012), <br>
Includes a steady-state climatology of global tracers</p>
<p dir="auto"><code>modern_90x45x33_G14</code> : TMI version with 4x4 degree horizontal
resolution and 33 levels  (Gebbie 2014), <br>
Doesn't rely upon a bottom spreading parameterization and solves for mixed-layer depth</p>
<p dir="auto"><code>modern_90x45x33_G14_v2</code> : TMI version with 4x4 degree horizontal
resolution and 33 levels  (Gebbie 2014), <br>
Doesn't rely upon a bottom spreading parameterization and solves for mixed-layer depth<br>
Includes optimization information</p>
<p dir="auto"><code>LGM_90x45x33_G14</code> : Last Glacial Maximum version with 4x4 degree horizontal
resolution and 33 levels  (Gebbie 2014)</p>
<p dir="auto"><code>LGM_90x45x33_G14A</code> : Alternate solution, Last Glacial Maximum version with 4x4 degree horizontal
resolution and 33 levels  (Gebbie 2014)</p>
<p dir="auto"><code>LGM_90x45x33_GPLS1</code>: Solution #1 (Gebbie, Peterson, Lisiecki, and Spero, 2015), Last Glacial Maximum version with 4x4 degree horizontal resolution and 33 levels</p>
<p dir="auto"><code>LGM_90x45x33_GPLS2</code>: Solution #2 (Gebbie, Peterson, Lisiecki, and Spero, 2015), Last Glacial Maximum version with 4x4 degree horizontal resolution and 33 levels</p>
<p dir="auto"><code>LGM_90x45x33_OG18</code>: Last Glacial Maximum version with 4x4 degree horizontal resolution and 33 levels (Oppo, Gebbie et al. 2018)</p>
<h1 dir="auto"><a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Functions</h1>
<p dir="auto">Available functions are listed in the documentation at <a href="https://ggebbie.github.io/TMI.jl/dev/" rel="nofollow">https://ggebbie.github.io/TMI.jl/dev/</a> .</p>
<h1 dir="auto"><a id="user-content-matlab-version-of-code" class="anchor" aria-hidden="true" href="#matlab-version-of-code"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MATLAB version of code</h1>
<p dir="auto">MATLAB codes, 2009-2021, see also <a href="https://github.com/ggebbie/TMI">https://github.com/ggebbie/TMI</a> .</p>
<p dir="auto">History:<br>
Version 1, 7 May 2009.<br>
Version 2, 6 Aug 2010.<br>
Version 3, 21 Apr 2011 -- minor changes.<br>
Version 4, 13 July 2011, makes names consistent with papers.<br>
Version 5, 28 July 2011, add TMI transient tracer simulation model.<br>
Version 6, Nov 2012, bug fixes, use one LU decomp for both fwd and
adjoint, added global inversion example,
SynTraCE-21 workshop update <br>
Version 6.1, Jan 2013, added biogeochemical example, add
vector_to_field back into tarball.<br>
Version 6.2, July 2015, added sq.m function,
fixed d_all to properly divide Atlantic/Pacific and put White Sea into Arctic.<br>
Version 7, Sept. 2016, major improvements to transient run: 2 types of initial conditions and boundary conditions.<br>
Version 8, Jan. 2021, bug fixes, especially those found by Elaine McDonagh</p>
<h1 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h1>
<p dir="auto">Gebbie, G., and P. Huybers:  "Total matrix intercomparison: A method for resolving the geometry of water mass pathways", J. Phys. Oceanogr., 40(8), doi:10.1175/2010JPO4272.1, 1710-1728, 2010.</p>
<p dir="auto">Gebbie, G., and P. Huybers. "How is the ocean filled?", Geophys. Res. Lett., 38, L06604, doi:10.1029/2011GL046769, 2011</p>
<p dir="auto">Gebbie, G., and P. Huybers, "The mean age of ocean waters inferred from radiocarbon observations", 2012, JPO.</p>
<p dir="auto">Gebbie, G., "How much did Glacial North Atlantic Water shoal?", 2014, Paleoceanography.</p>
<h1 dir="auto"><a id="user-content-how-this-julia-package-was-started" class="anchor" aria-hidden="true" href="#how-this-julia-package-was-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How this Julia package was started</h1>
<p dir="auto">This package was generated using PkgTemplates.jl.</p>
<p dir="auto">Steps:</p>
<ol dir="auto">
<li>
<p dir="auto">Use PkgTemplates to make git repo.<br>
2. new empty repository on GitHub.<br>
3. Then push an existing repository from the command line:
<code>git remote add origin git@github.com:ggebbie/TMI.jl.git</code><br>
<code>git branch -M main</code><br>
<code>git push -u origin main</code></p>
</li>
<li>
<p dir="auto">Run the following Julia code</p>
</li>
</ol>
<p dir="auto"><code>using Revise, PkgTemplates</code></p>
<p dir="auto"><code>t = Template(;  user="ggebbie", dir="~/projects", authors="G Jake Gebbie", julia=v"1.6", plugins=[ License(; name="MIT"), Git(; manifest=true, ssh=true), GitHubActions(; x86=false), Codecov(), Documenter{GitHubActions}(), Develop(), ], )</code></p>
<p dir="auto"><code>t("TMI.jl")</code></p>
</article></div>