<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-colpack" class="anchor" aria-hidden="true" href="#colpack"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ColPack</h1>
<p dir="auto"><a href="https://github.com/michel2323/ColPack.jl/actions?query=workflow"><img src="https://github.com/michel2323/ColPack.jl/workflows/Run%20tests/badge.svg?branch=master" alt="" style="max-width: 100%;"></a></p>
<p dir="auto">This is the Julia interface to <a href="https://github.com/CSCsw/ColPack">ColPack</a>.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-jacobian-coloring-by-columns" class="anchor" aria-hidden="true" href="#jacobian-coloring-by-columns"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Jacobian coloring by columns</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ColPack
using SparseArrays

# Example matrix/Jacobian
A = [
    [1.0 1.0 0.0 0.0 0.0];
    [0.0 0.0 1.0 0.0 0.0];
    [0.0 1.0 0.0 1.0 0.0];
    [0.0 0.0 0.0 1.0 1.0];
]

A = sparse(A)

# Create adjacency matrix for column coloring
adjA = ColPack.matrix2adjmatrix(A; partition_by_rows=false)

coloring = ColPackColoring(adjA, d1_coloring(), random_ordering())
println(&quot;Number of colors: &quot;, length(unique(get_colors(coloring))))
println(&quot;Vector of vertex colors: &quot;, get_colors(coloring))"><pre><span class="pl-k">using</span> ColPack
<span class="pl-k">using</span> SparseArrays

<span class="pl-c"><span class="pl-c">#</span> Example matrix/Jacobian</span>
A <span class="pl-k">=</span> [
    [<span class="pl-c1">1.0</span> <span class="pl-c1">1.0</span> <span class="pl-c1">0.0</span> <span class="pl-c1">0.0</span> <span class="pl-c1">0.0</span>];
    [<span class="pl-c1">0.0</span> <span class="pl-c1">0.0</span> <span class="pl-c1">1.0</span> <span class="pl-c1">0.0</span> <span class="pl-c1">0.0</span>];
    [<span class="pl-c1">0.0</span> <span class="pl-c1">1.0</span> <span class="pl-c1">0.0</span> <span class="pl-c1">1.0</span> <span class="pl-c1">0.0</span>];
    [<span class="pl-c1">0.0</span> <span class="pl-c1">0.0</span> <span class="pl-c1">0.0</span> <span class="pl-c1">1.0</span> <span class="pl-c1">1.0</span>];
]

A <span class="pl-k">=</span> <span class="pl-c1">sparse</span>(A)

<span class="pl-c"><span class="pl-c">#</span> Create adjacency matrix for column coloring</span>
adjA <span class="pl-k">=</span> ColPack<span class="pl-k">.</span><span class="pl-c1">matrix2adjmatrix</span>(A; partition_by_rows<span class="pl-k">=</span><span class="pl-c1">false</span>)

coloring <span class="pl-k">=</span> <span class="pl-c1">ColPackColoring</span>(adjA, <span class="pl-c1">d1_coloring</span>(), <span class="pl-c1">random_ordering</span>())
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Number of colors: <span class="pl-pds">"</span></span>, <span class="pl-c1">length</span>(<span class="pl-c1">unique</span>(<span class="pl-c1">get_colors</span>(coloring))))
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Vector of vertex colors: <span class="pl-pds">"</span></span>, <span class="pl-c1">get_colors</span>(coloring))</pre></div>
</article></div>