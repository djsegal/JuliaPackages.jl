<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-semidefiniteoptinterface-sdoi" class="anchor" aria-hidden="true" href="#semidefiniteoptinterface-sdoi"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>SemidefiniteOptInterface (SDOI)</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://travis-ci.org/JuliaOpt/SemidefiniteOptInterface.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ceddc8e2651a494693aa71c2b2953c20515e563c/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614f70742f53656d69646566696e6974654f7074496e746572666163652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaOpt/SemidefiniteOptInterface.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://ci.appveyor.com/project/JuliaOpt/semidefiniteoptinterface-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/4f29002f7cbba2cc6dee11bedc12922f0c5e3e7b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f723932616e706d71656f3330727070652f6272616e63682f6d61737465723f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/r92anpmqeo30rppe/branch/master?svg=true" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="center"><a href="https://coveralls.io/github/JuliaOpt/SemidefiniteOptInterface.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/8a0f48d5fa0ef1cc0381303fae67d509a48aafca/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c69614f70742f53656d69646566696e6974654f7074496e746572666163652e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls branch" data-canonical-src="https://coveralls.io/repos/github/JuliaOpt/SemidefiniteOptInterface.jl/badge.svg?branch=master" style="max-width:100%;"></a> <a href="http://codecov.io/github/JuliaOpt/SemidefiniteOptInterface.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/061fc25063fd922f981a159b217603055a2960cb/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614f70742f53656d69646566696e6974654f7074496e746572666163652e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Codecov branch" data-canonical-src="http://codecov.io/github/JuliaOpt/SemidefiniteOptInterface.jl/coverage.svg?branch=master" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>This package make it easy to implement the API of <a href="https://github.com/JuliaOpt/MathOptInterface.jl">MathOptInterface</a> for semidefinite programming solver like <a href="https://github.com/JuliaOpt/CSDP.jl">CSDP</a>, <a href="https://github.com/blegat/SDPA.jl">SDPA</a>, <a href="https://github.com/joehuchette/DSDP.jl">DSDP</a> and <a href="https://github.com/blegat/SDPLR.jl">SDPLR</a> that require the problem to be described in the following form:</p>
<pre><code>max ⟨C, X⟩            min ⟨b, y⟩
    ⟨A_i, X⟩ = b_i        ∑ A_i y_i ⪰ C
          X  ⪰ 0
</code></pre>
<p>The well known <a href="http://plato.asu.edu/ftp/sdpa_format.txt" rel="nofollow">SDPA file format</a> uses this form but this package communicates to the solver directly and the solver wrappers use the C/C++ API without using a file.</p>
</article></div>