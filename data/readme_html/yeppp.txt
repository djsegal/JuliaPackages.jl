<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-yeppp-bindings-for-julia" class="anchor" aria-hidden="true" href="#yeppp-bindings-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Yeppp bindings for Julia</h1>
<p>Linux: <a href="https://travis-ci.org/JuliaMath/Yeppp.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/841baca3b4c70096a07d475f3cc290b4d990a718/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614d6174682f59657070702e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaMath/Yeppp.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Windows: <a href="https://ci.appveyor.com/project/panlanfeng/yeppp-jl-2y32h" rel="nofollow"><img src="https://camo.githubusercontent.com/b037cebcdde3e1de7907013eb913d634d1571e6c/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f797874707071656c31337138643874643f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/yxtppqel13q8d8td?svg=true" style="max-width:100%;"></a></p>
<p><a href="https://coveralls.io/r/JuliaMath/Yeppp.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/c887b1b9a118e5a990776010d0e33c2c48be5593/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c69614d6174682f59657070702e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaMath/Yeppp.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaMath/Yeppp.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/1c42c9ed496ded6cddb3ac3ad83a91a630d23dcf/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614d6174682f59657070702e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaMath/Yeppp.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="http://www.yeppp.info" rel="nofollow">Yeppp!</a> is a high-performance SIMD-optimized
mathematical library. This Julia package makes it possible to
call Yeppp from Julia.</p>
<p>Install this package by</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Yeppp<span class="pl-pds">"</span></span>)</pre></div>
<p>For common 64-bit platforms, this will download dependencies automatically. For some
other platforms such as the PowerPC 64 architecture, you may still be able to
use this package by <a href="http://bitbucket.org/MDukhan/yeppp/downloads/yeppp-1.0.0.zip" rel="nofollow">downloading
Yeppp!</a>
and extracting from the <code>binaries</code> folder the file(s) specific to your OS.
Check the platforms supported by Yeppp! <a href="https://bitbucket.org/MDukhan/yeppp" rel="nofollow">here</a>.
Make sure the extracted files are available on the system library
search path or in the current directory.  For example, in Julia's <code>bin</code> folder.</p>
<p>See example usage below. Yeppp's vectorized log is 3x faster than the
one in Base, which is written in Julia.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Yeppp

x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">7</span>)
ty <span class="pl-k">=</span> <span class="pl-c1">@elapsed</span> Yeppp<span class="pl-k">.</span><span class="pl-c1">log!</span>(<span class="pl-c1">similar</span>(x), x)
t  <span class="pl-k">=</span> <span class="pl-c1">@elapsed</span> <span class="pl-c1">log</span>(x)
t<span class="pl-k">/</span>ty</pre></div>
<p>The following functions are available for <code>Array{Float64}</code>. Inputs
are in <code>x</code>, and outputs are in <code>y</code>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">dot</span>(x1, x2)
<span class="pl-c1">sum</span>(x)
<span class="pl-c1">sumabs</span>(x)
<span class="pl-c1">sumabs2</span>(x)
<span class="pl-c1">negate!</span>(x)
<span class="pl-c1">max!</span>(y, x1, x2)
<span class="pl-c1">min!</span>(y, x1, x2)
<span class="pl-c1">add!</span>(y, x1, x2)
<span class="pl-c1">subtract!</span>(y, x1, x2)
<span class="pl-c1">multiply!</span>(y, x1, x2)

<span class="pl-c1">log!</span>(y, x)
<span class="pl-c1">exp!</span>(y, x)
<span class="pl-c1">evalpoly!</span>(y, x_coeff, x)

<span class="pl-c1">sin!</span>(y, x)
<span class="pl-c1">cos!</span>(y, x)
<span class="pl-c1">tan!</span>(y, x)</pre></div>
<p>See the <a href="http://docs.yeppp.info/c/modules.html" rel="nofollow">Yeppp! documentation</a>
for the full set of functions available in Yeppp!.</p>
</article></div>