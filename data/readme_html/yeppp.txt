<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-yeppp-bindings-for-julia" class="anchor" aria-hidden="true" href="#yeppp-bindings-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Yeppp bindings for Julia</h1>
<p dir="auto">Linux: <a href="https://travis-ci.org/JuliaMath/Yeppp.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/72fe238046ae439ce66a7cf2b66b6e687490568fc83470e325b6ecd433707849/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614d6174682f59657070702e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaMath/Yeppp.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">Windows: <a href="https://ci.appveyor.com/project/panlanfeng/yeppp-jl-2y32h" rel="nofollow"><img src="https://camo.githubusercontent.com/c41f5ae0f2399a584d9affe5057abb86c3599df0f75b052681fed204a0fc2504/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f797874707071656c31337138643874643f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/yxtppqel13q8d8td?svg=true" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://coveralls.io/r/JuliaMath/Yeppp.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/7a073a4748d1e72c9d24d763c428357b2283aaf987ab1098d6a7c635dbe5a04c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c69614d6174682f59657070702e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaMath/Yeppp.jl/badge.svg?branch=master" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/JuliaMath/Yeppp.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/03f537c52d218a495da8b09320818feafcbc12e663f7083ad1e6f1c337df43df/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614d6174682f59657070702e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaMath/Yeppp.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="http://www.yeppp.info" rel="nofollow">Yeppp!</a> is a high-performance SIMD-optimized
mathematical library. This Julia package makes it possible to
call Yeppp from Julia.</p>
<p dir="auto">Install this package by</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;Yeppp&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Yeppp<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">For common 64-bit platforms, this will download dependencies automatically. For some
other platforms such as the PowerPC 64 architecture, you may still be able to
use this package by <a href="http://bitbucket.org/MDukhan/yeppp/downloads/yeppp-1.0.0.zip" rel="nofollow">downloading
Yeppp!</a>
and extracting from the <code>binaries</code> folder the file(s) specific to your OS.
Check the platforms supported by Yeppp! <a href="https://bitbucket.org/MDukhan/yeppp" rel="nofollow">here</a>.
Make sure the extracted files are available on the system library
search path or in the current directory.  For example, in Julia's <code>bin</code> folder.</p>
<p dir="auto">See example usage below. Yeppp's vectorized log is 3x faster than the
one in Base, which is written in Julia.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Yeppp

x = rand(10^7)
ty = @elapsed Yeppp.log!(similar(x), x)
t  = @elapsed log(x)
t/ty"><pre><span class="pl-k">using</span> Yeppp

x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">7</span>)
ty <span class="pl-k">=</span> <span class="pl-c1">@elapsed</span> Yeppp<span class="pl-k">.</span><span class="pl-c1">log!</span>(<span class="pl-c1">similar</span>(x), x)
t  <span class="pl-k">=</span> <span class="pl-c1">@elapsed</span> <span class="pl-c1">log</span>(x)
t<span class="pl-k">/</span>ty</pre></div>
<p dir="auto">The following functions are available for <code>Array{Float64}</code>. Inputs
are in <code>x</code>, and outputs are in <code>y</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="dot(x1, x2)
sum(x)
sumabs(x)
sumabs2(x)
negate!(x)
max!(y, x1, x2)
min!(y, x1, x2)
add!(y, x1, x2)
subtract!(y, x1, x2)
multiply!(y, x1, x2)

log!(y, x)
exp!(y, x)
evalpoly!(y, x_coeff, x)

sin!(y, x)
cos!(y, x)
tan!(y, x)"><pre><span class="pl-c1">dot</span>(x1, x2)
<span class="pl-c1">sum</span>(x)
<span class="pl-c1">sumabs</span>(x)
<span class="pl-c1">sumabs2</span>(x)
<span class="pl-c1">negate!</span>(x)
<span class="pl-c1">max!</span>(y, x1, x2)
<span class="pl-c1">min!</span>(y, x1, x2)
<span class="pl-c1">add!</span>(y, x1, x2)
<span class="pl-c1">subtract!</span>(y, x1, x2)
<span class="pl-c1">multiply!</span>(y, x1, x2)

<span class="pl-c1">log!</span>(y, x)
<span class="pl-c1">exp!</span>(y, x)
<span class="pl-c1">evalpoly!</span>(y, x_coeff, x)

<span class="pl-c1">sin!</span>(y, x)
<span class="pl-c1">cos!</span>(y, x)
<span class="pl-c1">tan!</span>(y, x)</pre></div>
<p dir="auto">See the <a href="http://docs.yeppp.info/c/modules.html" rel="nofollow">Yeppp! documentation</a>
for the full set of functions available in Yeppp!.</p>
</article></div>