<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://alex-s-gardner.github.io/ItsLive.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/b009645187702761f848654afcb3eb0c1406a9f109bb737bc482848c1622f012/68747470733a2f2f6974732d6c6976652d646174612e73332e616d617a6f6e6177732e636f6d2f646f63756d656e746174696f6e2f4954535f4c4956455f4a756c69615f6c6f676f5f7472616e73706172656e745f7768742e706e67"><img src="https://camo.githubusercontent.com/b009645187702761f848654afcb3eb0c1406a9f109bb737bc482848c1622f012/68747470733a2f2f6974732d6c6976652d646174612e73332e616d617a6f6e6177732e636f6d2f646f63756d656e746174696f6e2f4954535f4c4956455f4a756c69615f6c6f676f5f7472616e73706172656e745f7768742e706e67" alt="ITS_LIVE" data-canonical-src="https://its-live-data.s3.amazonaws.com/documentation/ITS_LIVE_Julia_logo_transparent_wht.png" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-itslivejl" class="anchor" aria-hidden="true" href="#itslivejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ItsLive.jl</h1>
<h1 dir="auto"><a id="user-content-a-julia-package" class="anchor" aria-hidden="true" href="#a-julia-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>A Julia Package</h1>
<p dir="auto"><strong>This repository is the beginnings of a Julia package for working with NASA <a href="https://its-live.jpl.nasa.gov/" rel="nofollow">ITS_LIVE</a> data, it is in its infancy and will be developed over time</strong></p>
<p dir="auto">Satellite observations can reveal how the worldâ€™s glaciers have responded to recent changes in climate, and can inform predictions of future sea level rise. To enable the next generation of ice sheet models and process-based studies, ITS_LIVE provides a decades-long, high-resolution record of global ice velocity and elevation change. The cloud-based ITS_LIVE architecture continually processes and synthesizes new data from multiple optical, radar, and laser satellite sensors, resulting in a high-resolution, low-latency product that can be used for scientific studies within days of data collection.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The package can be installed with the Julia package manager.
From the Julia REPL, type <code>]</code> to enter the Pkg REPL mode and run:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; add ItsLive"><pre class="notranslate"><code>pkg&gt; add ItsLive
</code></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using ItsLive"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ItsLive</pre></div>
<p dir="auto">Or, equivalently, via the <code>Pkg</code> API:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import Pkg; Pkg.add(&quot;ItsLive&quot;)
julia&gt; using ItsLive"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>ItsLive<span class="pl-pds">"</span></span>)
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ItsLive</pre></div>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick start</h2>
<p dir="auto">Load packages [after package has been added]</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ItsLive"><pre><span class="pl-k">using</span> ItsLive</pre></div>
<p dir="auto">Load ITS_LIVE datacube catalog</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="catalogdf = ItsLive.catalog()"><pre>catalogdf <span class="pl-k">=</span> ItsLive<span class="pl-k">.</span><span class="pl-c1">catalog</span>()</pre></div>
<p dir="auto">Specify points of interest</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="lat = [59.925, 60.048, 60.083, 60.125, 60.168, 60.213, 60.256]
lon = [-140.620, -140.515, -140.467, -140.438, -140.432, -140.387, -140.331]"><pre>lat <span class="pl-k">=</span> [<span class="pl-c1">59.925</span>, <span class="pl-c1">60.048</span>, <span class="pl-c1">60.083</span>, <span class="pl-c1">60.125</span>, <span class="pl-c1">60.168</span>, <span class="pl-c1">60.213</span>, <span class="pl-c1">60.256</span>]
lon <span class="pl-k">=</span> [<span class="pl-k">-</span><span class="pl-c1">140.620</span>, <span class="pl-k">-</span><span class="pl-c1">140.515</span>, <span class="pl-k">-</span><span class="pl-c1">140.467</span>, <span class="pl-k">-</span><span class="pl-c1">140.438</span>, <span class="pl-k">-</span><span class="pl-c1">140.432</span>, <span class="pl-k">-</span><span class="pl-c1">140.387</span>, <span class="pl-k">-</span><span class="pl-c1">140.331</span>]</pre></div>
<p dir="auto">List variable names to retrive</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="varnames = [&quot;mid_date&quot;, &quot;date_dt&quot;, &quot;vx&quot;, &quot;vx_error&quot;, &quot;vy&quot;, &quot;vy_error&quot;,&quot;satellite_img1&quot;]"><pre>varnames <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>mid_date<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>date_dt<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>vx<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>vx_error<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>vy<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>vy_error<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>satellite_img1<span class="pl-pds">"</span></span>]</pre></div>
<p dir="auto">Retrieve data</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="C = ItsLive.getvar(lat,lon,varnames, catalogdf)"><pre>C <span class="pl-k">=</span> ItsLive<span class="pl-k">.</span><span class="pl-c1">getvar</span>(lat,lon,varnames, catalogdf)</pre></div>
<p dir="auto">Plot a single variable for all points</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ItsLive.plotvar(C,&quot;vx&quot;)"><pre>ItsLive<span class="pl-k">.</span><span class="pl-c1">plotvar</span>(C,<span class="pl-s"><span class="pl-pds">"</span>vx<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/its_live_plotvar.png"><img src="docs/src/assets/its_live_plotvar.png" alt="ItsLive.plotvar" style="max-width: 100%;"></a></p>
<p dir="auto">Plot a single point, single variable colored by sensor</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ItsLive.plotbysensor(C[1,:],&quot;vx&quot;); "><pre>ItsLive<span class="pl-k">.</span><span class="pl-c1">plotbysensor</span>(C[<span class="pl-c1">1</span>,:],<span class="pl-s"><span class="pl-pds">"</span>vx<span class="pl-pds">"</span></span>); </pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/its_live_plotbysensor.png"><img src="docs/src/assets/its_live_plotbysensor.png" alt="ItsLive.plotbysensor" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto"><strong><code>example_datacube_workflow.jl</code></strong> example script showing how to work with the <code>ItsLive.jl</code> package.</p>
<p dir="auto"><strong><code>datacube_basic_pluto.jl</code></strong> A simple Pluto example that uses the <code>ItsLive.jl</code> package to retrieve and plot ITS_LIVE data.</p>
<h2 dir="auto"><a id="user-content-function-list" class="anchor" aria-hidden="true" href="#function-list"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Function List</h2>
<p dir="auto"><strong><code>catalogdf = ItsLive.catalog()</code></strong> return a DataFrame of the catalog for all of the ITS_LIVE zarr datacubes.</p>
<p dir="auto"><strong><code>rownumdf = ItsLive.intersect(lat, lon, catalogdf)</code></strong> return the <code>rownumber</code> of the the DataFrame catalog (<code>catalogdf</code>) of the ITS_LIVE zarr datacubes that intersects the provided <code>lat</code>itude and <code>lon</code>gitude.</p>
<p dir="auto"><strong><code>x, y = ItsLive.nearestxy(lat, lon, DataArray)</code></strong> return the <code>x</code>/<code>y</code> indices into a ZarrGroup (<code>DataArray</code>) for the points nearest the provided <code>lat</code>itude, <code>lon</code>gitude locations.</p>
<p dir="auto"><strong><code>C = ItsLive.getvar(lat, lon, varnames, catalogdf)</code></strong> return a named m x n matrix of vectors with m = length(<code>lat</code>) rows and n = length(<code>varnames</code>)+2(for <code>lat</code> and <code>lon</code>) columns for the points nearest the <code>lat</code>/<code>lon</code> location from ITS_LIVE Zarr datacubes (<code>catalogdf</code>).</p>
<p dir="auto"><strong><code>plotvar(C, varname))</code></strong> plot ITS_LIVE data (<code>C</code>) variable (<code>varname</code>) for multiple points. Use keyword <code>dtmax</code> = Number to limit longer image-pair separations from being plotted.</p>
<p dir="auto"><strong><code>plotbysensor(C, varname))</code></strong> plot ITS_LIVE data (<code>C</code>) variable (<code>varname</code>) by sensor. Size(<code>C</code>,2) must = 1, e.g. <code>C[1,:]</code> of full matrix. Use keyword <code>dtmax</code> = Number to limit longer image-pair separations from being plotted.</p>
<p dir="auto"><strong><code>binstats(x, y, [binedges = [0.0], dx= 0, method = "mean"])</code></strong> return statistics of <code>x</code> central value and <code>x</code> spread according to <code>method</code> ["mean" = default] argument on values binned by <code>y</code>.</p>
<p dir="auto"><strong><code>dtmax = dtfilter(x,dt)</code></strong> return the maximum <code>dt</code> for which the distribution of <code>x</code> show no statistical difference from the distribution of <code>x</code> in the minimum <code>dt</code> bin</p>
<p dir="auto">This filter is needed to identify longer dts that exhibit "skipping" or "locking" behavior in feature tracking estimates of surface flow. This happens when the surface texture provides a lesser match than to stationary features, due to long time separation between repeat images, such as ice falls and curved medial moraines.</p>
<p dir="auto"><strong><code>outlier, dtmax, sensorgroups = ItsLive.vxvyfilter(x,dt)</code></strong> applies <code>dtfilter()</code> to <code>vx</code> and <code>vy</code> projected on the their median vector and returns <code>outlier</code> BitVector, the maximum <code>dt</code> (<code>dtmax</code>) for which the distribution of vx <em>or</em> vy shows no statistical difference and the sensor groupings used when filtering the data (<code>sensorgroups</code>).</p>
<p dir="auto"><strong><code>t_fit, v_fit, amp_fit, phase_fit, v_fit_err, amp_fit_err, fit_count, fit_outlier_frac, outlier = ItsLive.lsqfit_annual(v,v_err,mid_date,date_dt,mad_thresh)</code></strong> error wighted model fit to discrete interval data. The current model is an iterative fit to a sinusoidal function with unique mean (<code>v_fit</code>), phase (<code>phase_fit</code>) and amplitude (<code>amp_fit</code>) for each year of data centered at time <code>t_fit</code>. Errors are provided for annual means (<code>v_fit_err</code>) and amplitude (<code>amp_fit_err</code>). <code>fit_count</code> gives the number of velocity observations used for each year,  <code>fit_outlier_frac</code> provides the fraction of data excluded from the model fit and a <code>outlier</code> BitVector.</p>
<p dir="auto"><strong><code>v_i, v_i_err = ItsLive.lsqfit_interp(t_fit, v_fit, amp_fit, phase_fit, v_fit_err, amp_fit_err, t_i)</code></strong> evaluates the outputs of <code>lsqfit</code> at times <code>t_i</code>, outputting velocity (<code>v_i</code>) and velocity error (<code>v_i_err</code>) at times <code>t_i</code>.</p>
<p dir="auto"><strong><code>v0 = ItsLive.running_mean(v, w)</code></strong> calculates the running mean of <code>v</code> with window size of <code>w</code>.</p>
<p dir="auto"><strong><code>offset, slope, error = ItsLive.wliearfit(t, v, v_err, datetime0)</code></strong> returns the <code>offset</code>, <code>slope</code>, and  error (<code>error</code>) for a weighted linear fit to <code>v</code> with a y-intercept of <code>datetime0</code>.</p>
<p dir="auto"><strong><code>v, v,_err, dv_dt, v_amp, v_amp_err, v_phase = ItsLive.climatology_magnitude(vx0, vy0, vx0_err, vy0_err, dvx_dt, dvy_dt, vx_amp, vy_amp, vx_amp_err, vy_amp_err, vx_phase, vy_phase)</code></strong> returns the mean (<code>v</code>), standard error (<code>v_err</code>), trend (<code>dv_dt</code>), seasonal amplitude (<code>v_amp</code>), error in seasonal amplitude (<code>v_amp_err</code>), and seasonal phase (<code>v_phase</code>) from component values projected on the unit flow vector defined by vx0 and vy0.</p>
</article></div>