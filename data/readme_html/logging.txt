<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-loggingjl-basic-logging-for-julia" class="anchor" aria-hidden="true" href="#loggingjl-basic-logging-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Logging.jl: Basic logging for Julia</h1>
<p><a href="http://pkg.julialang.org/?pkg=Logging" rel="nofollow"><img src="https://camo.githubusercontent.com/860602421d8e05cf46a3cefa38a7d5037b151068/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f4c6f6767696e675f302e342e737667" alt="PkgEval: Julia v0.4" data-canonical-src="http://pkg.julialang.org/badges/Logging_0.4.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=Logging" rel="nofollow"><img src="https://camo.githubusercontent.com/ee54fdfb85b148a53526fe341d52c26e98f631f5/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f4c6f6767696e675f302e352e737667" alt="PkgEval: Julia v0.5" data-canonical-src="http://pkg.julialang.org/badges/Logging_0.5.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=Logging" rel="nofollow"><img src="https://camo.githubusercontent.com/d504a5213df86922fe63538aac1e028a5f5026f8/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f4c6f6767696e675f302e362e737667" alt="PkgEval: Julia v0.6" data-canonical-src="http://pkg.julialang.org/badges/Logging_0.6.svg" style="max-width:100%;"></a></p>
<p><a href="https://travis-ci.org/kmsquire/Logging.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/56d7c2fdc0f6d76bbac7c435e65d904038750594/68747470733a2f2f7472617669732d63692e6f72672f6b6d7371756972652f4c6f6767696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="TravisCI: Linux, OSX" data-canonical-src="https://travis-ci.org/kmsquire/Logging.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/kmsquire/logging-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c3151e028603eb5f44fc1ed855102f72b95cc7fb/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f37636a356b616a386763786d6c74686f3f7376673d74727565" alt="AppVeyorCI: Windows" data-canonical-src="https://ci.appveyor.com/api/projects/status/7cj5kaj8gcxmltho?svg=true" style="max-width:100%;"></a></p>
<p>This module provides basic logging facilities for Julia.  It was inspired somewhat by logging in Python.</p>
<p>Install with <code>Pkg.add("Logging")</code> at the Julia prompt.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>If <code>log_test.jl</code> contains</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Logging
<span class="pl-c"><span class="pl-c">#</span> default:</span>
<span class="pl-c"><span class="pl-c">#</span> Logging.configure(level=WARNING)</span>

<span class="pl-k">function</span> <span class="pl-en">log_test</span>()
    <span class="pl-c1">debug</span>(<span class="pl-s"><span class="pl-pds">"</span>debug message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">info</span>(<span class="pl-s"><span class="pl-pds">"</span>info message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">"</span>warning message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">err</span>(<span class="pl-s"><span class="pl-pds">"</span>error message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">critical</span>(<span class="pl-s"><span class="pl-pds">"</span>critical message<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>

<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Setting level=DEBUG<span class="pl-pds">"</span></span>)
Logging<span class="pl-k">.</span><span class="pl-c1">configure</span>(level<span class="pl-k">=</span>DEBUG)
<span class="pl-c1">log_test</span>()

<span class="pl-c1">println</span>()
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Setting level=INFO<span class="pl-pds">"</span></span>)
Logging<span class="pl-k">.</span><span class="pl-c1">configure</span>(level<span class="pl-k">=</span>INFO)
<span class="pl-c1">log_test</span>()

<span class="pl-c1">println</span>()
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Setting level=WARNING<span class="pl-pds">"</span></span>)
Logging<span class="pl-k">.</span><span class="pl-c1">configure</span>(level<span class="pl-k">=</span>WARNING)
<span class="pl-c1">log_test</span>()

<span class="pl-c1">println</span>()
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Setting level=ERROR<span class="pl-pds">"</span></span>)
Logging<span class="pl-k">.</span><span class="pl-c1">configure</span>(level<span class="pl-k">=</span>ERROR)
<span class="pl-c1">log_test</span>()

<span class="pl-c1">println</span>()
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Setting level=CRITICAL<span class="pl-pds">"</span></span>)
Logging<span class="pl-k">.</span><span class="pl-c1">configure</span>(level<span class="pl-k">=</span>CRITICAL)
<span class="pl-c1">log_test</span>()</pre></div>
<p>Running this gives</p>
<pre><code>julia&gt; include("log_test.jl")
Setting level=DEBUG
30-Oct 22:09:20:DEBUG:root:debug message
30-Oct 22:09:20:INFO:root:info message
30-Oct 22:09:20:WARNING:root:warning message
30-Oct 22:09:20:ERROR:root:error message
30-Oct 22:09:20:CRITICAL:root:critical message

Setting level=INFO
30-Oct 22:09:20:INFO:root:info message
30-Oct 22:09:20:WARNING:root:warning message
30-Oct 22:09:20:ERROR:root:error message
30-Oct 22:09:20:CRITICAL:root:critical message

Setting level=WARNING
30-Oct 22:09:20:WARNING:root:warning message
30-Oct 22:09:20:ERROR:root:error message
30-Oct 22:09:20:CRITICAL:root:critical message

Setting level=ERROR
30-Oct 22:09:20:ERROR:root:error message
30-Oct 22:09:20:CRITICAL:root:critical message

Setting level=CRITICAL
30-Oct 22:09:20:CRITICAL:root:critical message
</code></pre>
<p>At the Julia prompt, the messages will display in color (debug=cyan,
info=blue, warning=purple, error=red, critical=red).</p>
<p>It is possible to change the stream the logger prints to. For example,
to print to a file:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Logging<span class="pl-k">.</span><span class="pl-c1">configure</span>(output<span class="pl-k">=</span><span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>logfile.log<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>))
julia<span class="pl-k">&gt;</span> <span class="pl-c1">log_test</span>()
julia<span class="pl-k">&gt;</span> <span class="pl-c1">readlines</span>(<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>logfile.log<span class="pl-pds">"</span></span>))
<span class="pl-c1">3</span><span class="pl-k">-</span>element Array{<span class="pl-c1">Union</span>(ASCIIString,UTF8String),<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>24-mar 18:40:24:WARNING:root:warning message<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>24-mar 18:40:24:ERROR:root:error message<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>24-mar 18:40:24:CRITICAL:root:critical message<span class="pl-cce">\n</span><span class="pl-pds">"</span></span></pre></div>
<p>Since it is common to log to files, there is a shortcut:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Logging<span class="pl-k">.</span><span class="pl-c1">configure</span>(filename<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>logfile.log<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-logging-macros" class="anchor" aria-hidden="true" href="#logging-macros"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Logging Macros</h2>
<p>For the functions above, there is always a small overhead for the
function call even when there is no log output. Logging.jl provides
macros which work like the functions above, but which remove this
overhead.</p>
<p>To use the macro versions, you MUST first configure them using
<code>@Logging.configure</code>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Logging
<span class="pl-c1">@Logging</span><span class="pl-k">.</span><span class="pl-c1">configure</span>(level<span class="pl-k">=</span>DEBUG)

<span class="pl-k">function</span> <span class="pl-en">macro_log_test</span>()
    <span class="pl-c1">@debug</span>(<span class="pl-s"><span class="pl-pds">"</span>debug message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">@info</span>(<span class="pl-s"><span class="pl-pds">"</span>info message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">@warn</span>(<span class="pl-s"><span class="pl-pds">"</span>warning message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">@err</span>(<span class="pl-s"><span class="pl-pds">"</span>error message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">@critical</span>(<span class="pl-s"><span class="pl-pds">"</span>critical message<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>

<span class="pl-c1">macro_log_test</span>()</pre></div>
<p>This gives:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">30</span><span class="pl-k">-</span>Oct <span class="pl-c1">22</span><span class="pl-k">:</span><span class="pl-c1">28</span><span class="pl-k">:</span><span class="pl-c1">51</span><span class="pl-k">:</span>DEBUG<span class="pl-k">:</span>root<span class="pl-k">:</span>debug message
<span class="pl-c1">30</span><span class="pl-k">-</span>Oct <span class="pl-c1">22</span><span class="pl-k">:</span><span class="pl-c1">28</span><span class="pl-k">:</span><span class="pl-c1">51</span><span class="pl-k">:</span>INFO<span class="pl-k">:</span>root<span class="pl-k">:</span>info message
<span class="pl-c1">30</span><span class="pl-k">-</span>Oct <span class="pl-c1">22</span><span class="pl-k">:</span><span class="pl-c1">28</span><span class="pl-k">:</span><span class="pl-c1">51</span><span class="pl-k">:</span>WARNING<span class="pl-k">:</span>root<span class="pl-k">:</span>warning message
<span class="pl-c1">30</span><span class="pl-k">-</span>Oct <span class="pl-c1">22</span><span class="pl-k">:</span><span class="pl-c1">28</span><span class="pl-k">:</span><span class="pl-c1">51</span><span class="pl-k">:</span>ERROR<span class="pl-k">:</span>root<span class="pl-k">:</span>error message
<span class="pl-c1">30</span><span class="pl-k">-</span>Oct <span class="pl-c1">22</span><span class="pl-k">:</span><span class="pl-c1">28</span><span class="pl-k">:</span><span class="pl-c1">51</span><span class="pl-k">:</span>CRITICAL<span class="pl-k">:</span>root<span class="pl-k">:</span>critical message</pre></div>
<p>Later, we may decide to turn off logging entirely:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Logging
<span class="pl-c1">@Logging</span><span class="pl-k">.</span><span class="pl-c1">configure</span>(level<span class="pl-k">=</span>OFF)

<span class="pl-k">function</span> <span class="pl-en">macro_log_test</span>()
    <span class="pl-c1">@debug</span>(<span class="pl-s"><span class="pl-pds">"</span>debug message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">@info</span>(<span class="pl-s"><span class="pl-pds">"</span>info message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">@warn</span>(<span class="pl-s"><span class="pl-pds">"</span>warning message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">@err</span>(<span class="pl-s"><span class="pl-pds">"</span>error message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">@critical</span>(<span class="pl-s"><span class="pl-pds">"</span>critical message<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>

<span class="pl-c1">macro_log_test</span>()</pre></div>
<p>This prevents any of the logging code from being generated.</p>
<p>Note that changing the log level later in the code will not have any
affect on previously evaluated functions, though it does affect future
evaluation:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Logging
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Setting level=OFF<span class="pl-pds">"</span></span>)
<span class="pl-c1">@Logging</span><span class="pl-k">.</span><span class="pl-c1">configure</span>(level<span class="pl-k">=</span>OFF)

<span class="pl-k">function</span> <span class="pl-en">macro_log_test</span>()
    <span class="pl-c"><span class="pl-c">#</span> logging is OFF above!</span>
    <span class="pl-c"><span class="pl-c">#</span> these messages will never produce output</span>
    <span class="pl-c"><span class="pl-c">#</span> even if the log level is changed</span>
    <span class="pl-c1">@debug</span>(<span class="pl-s"><span class="pl-pds">"</span>debug message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">@info</span>(<span class="pl-s"><span class="pl-pds">"</span>info message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">@warn</span>(<span class="pl-s"><span class="pl-pds">"</span>warning message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">@err</span>(<span class="pl-s"><span class="pl-pds">"</span>error message<span class="pl-pds">"</span></span>)
    <span class="pl-c1">@critical</span>(<span class="pl-s"><span class="pl-pds">"</span>critical message<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>

<span class="pl-c1">macro_log_test</span>()

<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Setting level=DEBUG<span class="pl-pds">"</span></span>)
Logging<span class="pl-k">.</span><span class="pl-c1">configure</span>(level<span class="pl-k">=</span>DEBUG)
<span class="pl-c1">macro_log_test</span>()

<span class="pl-c1">@warn</span>(<span class="pl-s"><span class="pl-pds">"</span>This warning message will print.<span class="pl-pds">"</span></span>)
<span class="pl-c1">@debug</span>(<span class="pl-s"><span class="pl-pds">"</span>So will this debug message!<span class="pl-pds">"</span></span>)</pre></div>
<p>produces:</p>
<div class="highlight highlight-source-julia"><pre>Setting level<span class="pl-k">=</span>OFF
Setting level<span class="pl-k">=</span>DEBUG
<span class="pl-c1">30</span><span class="pl-k">-</span>Oct <span class="pl-c1">23</span><span class="pl-k">:</span><span class="pl-c1">26</span><span class="pl-k">:</span><span class="pl-c1">16</span><span class="pl-k">:</span>WARNING<span class="pl-k">:</span>root<span class="pl-k">:</span>This warning message will print.
<span class="pl-c1">30</span><span class="pl-k">-</span>Oct <span class="pl-c1">23</span><span class="pl-k">:</span><span class="pl-c1">26</span><span class="pl-k">:</span><span class="pl-c1">16</span><span class="pl-k">:</span>DEBUG<span class="pl-k">:</span>root<span class="pl-k">:</span>So will this debug message!</pre></div>
<h2><a id="user-content-more-advanced-usage" class="anchor" aria-hidden="true" href="#more-advanced-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>More advanced usage</h2>
<p>It is possible to create multiple loggers that each have their own log
levels and can write to different streams. A specific logger is used
by giving it as the first argument to the logger functions or macros.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> loggerA <span class="pl-k">=</span> <span class="pl-c1">Logger</span>(<span class="pl-s"><span class="pl-pds">"</span>loggerA<span class="pl-pds">"</span></span>);

julia<span class="pl-k">&gt;</span> Logging<span class="pl-k">.</span><span class="pl-c1">configure</span>(loggerA, level<span class="pl-k">=</span>ERROR);

julia<span class="pl-k">&gt;</span> Logging<span class="pl-k">.</span><span class="pl-c1">configure</span>(loggerA, filename<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>loggerA.log<span class="pl-pds">"</span></span>);

julia<span class="pl-k">&gt;</span> loggerB <span class="pl-k">=</span> <span class="pl-c1">Logger</span>(<span class="pl-s"><span class="pl-pds">"</span>loggerB<span class="pl-pds">"</span></span>);

julia<span class="pl-k">&gt;</span> Logging<span class="pl-k">.</span><span class="pl-c1">configure</span>(loggerB, level<span class="pl-k">=</span>DEBUG);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">critical</span>(loggerA, <span class="pl-s"><span class="pl-pds">"</span>critical message from loggerA<span class="pl-pds">"</span></span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">readlines</span>(<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>loggerA.log<span class="pl-pds">"</span></span>))
<span class="pl-c1">1</span><span class="pl-k">-</span>element Array{<span class="pl-c1">Union</span>(ASCIIString,UTF8String),<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>24-mar 18:48:23:CRITICAL:loggerA:critical message form loggerA<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">critical</span>(loggerB, <span class="pl-s"><span class="pl-pds">"</span>critical message from loggerB<span class="pl-pds">"</span></span>);
<span class="pl-c1">24</span><span class="pl-k">-</span>mar <span class="pl-c1">18</span><span class="pl-k">:</span><span class="pl-c1">49</span><span class="pl-k">:</span><span class="pl-c1">15</span><span class="pl-k">:</span>CRITICAL<span class="pl-k">:</span>loggerB<span class="pl-k">:</span>critical message from loggerB</pre></div>
<p>A logger can be created with a parent logger. A logger with a parent inherits
the configuration of the parent.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> mum_logger <span class="pl-k">=</span> <span class="pl-c1">Logger</span>(<span class="pl-s"><span class="pl-pds">"</span>Mum<span class="pl-pds">"</span></span>);
julia<span class="pl-k">&gt;</span> Logging<span class="pl-k">.</span><span class="pl-c1">configure</span>(mum_logger, level<span class="pl-k">=</span>INFO);
julia<span class="pl-k">&gt;</span> son_logger <span class="pl-k">=</span> <span class="pl-c1">Logger</span>(<span class="pl-s"><span class="pl-pds">"</span>Son<span class="pl-pds">"</span></span>, parent<span class="pl-k">=</span>mum_logger);
julia<span class="pl-k">&gt;</span> son_logger<span class="pl-k">.</span>level
INFO</pre></div>
<h2><a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Notes</h2>
<ul>
<li>By default, <code>Logging.info</code> masks <code>Base.info</code>.  However, if <code>Base.info</code> is called before
<code>using Logging</code>, <code>info</code> will always refer to the <code>Base</code> version.</li>
</ul>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">info</span>(<span class="pl-s"><span class="pl-pds">"</span>Here's some info.<span class="pl-pds">"</span></span>)
INFO<span class="pl-k">:</span> Here<span class="pl-k">'</span>s some info.

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Logging
Warning<span class="pl-k">:</span> <span class="pl-k">using</span> Logging<span class="pl-k">.</span>info <span class="pl-k">in</span> <span class="pl-k">module</span> Main conflicts with an existing identifier.

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@Logging</span><span class="pl-k">.</span><span class="pl-c1">configure</span>(level<span class="pl-k">=</span>Logging<span class="pl-k">.</span>INFO)
<span class="pl-c1">Logger</span>(root,INFO,<span class="pl-c1">TTY</span>(open, <span class="pl-c1">0</span> bytes waiting),root)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">info</span>(<span class="pl-s"><span class="pl-pds">"</span>Still using Base.info<span class="pl-pds">"</span></span>)
INFO<span class="pl-k">:</span> Still <span class="pl-k">using</span> Base<span class="pl-k">.</span>info

julia<span class="pl-k">&gt;</span> Logging<span class="pl-k">.</span><span class="pl-c1">info</span>(<span class="pl-s"><span class="pl-pds">"</span>You can still fully qualify Logging.info.<span class="pl-pds">"</span></span>)
<span class="pl-c1">17</span><span class="pl-k">-</span>Jan <span class="pl-c1">13</span><span class="pl-k">:</span><span class="pl-c1">19</span><span class="pl-k">:</span><span class="pl-c1">56</span><span class="pl-k">:</span>INFO<span class="pl-k">:</span>root<span class="pl-k">:</span>You can still fully qualify Logging<span class="pl-k">.</span>info.</pre></div>
<p>If this is not desirable, you may call <code>@Logging.configure</code> with <code>override_info=true</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">info</span>(<span class="pl-s"><span class="pl-pds">"</span>Here's some info again.<span class="pl-pds">"</span></span>)
INFO<span class="pl-k">:</span> Here<span class="pl-k">'</span>s some info again.

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Logging
Warning<span class="pl-k">:</span> <span class="pl-k">using</span> Logging<span class="pl-k">.</span>info <span class="pl-k">in</span> <span class="pl-k">module</span> Main conflicts with an existing identifier.

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@Logging</span><span class="pl-k">.</span><span class="pl-c1">configure</span>(level<span class="pl-k">=</span>Logging<span class="pl-k">.</span>INFO, override_info<span class="pl-k">=</span><span class="pl-c1">true</span>)
Warning<span class="pl-k">:</span> Method definition <span class="pl-c1">info</span>(AbstractString<span class="pl-k">...</span>,) <span class="pl-k">in</span> <span class="pl-k">module</span> Base at util<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">216</span> overwritten <span class="pl-k">in</span> <span class="pl-k">module</span> Main at <span class="pl-k">/</span>Users<span class="pl-k">/</span>kevin<span class="pl-k">/</span><span class="pl-k">.</span>julia<span class="pl-k">/</span>v0<span class="pl-c1">.4</span><span class="pl-k">/</span>Logging<span class="pl-k">/</span>src<span class="pl-k">/</span>Logging<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">85.</span>
<span class="pl-c1">Logger</span>(root,INFO,<span class="pl-c1">TTY</span>(open, <span class="pl-c1">0</span> bytes waiting),root)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">info</span>(<span class="pl-s"><span class="pl-pds">"</span>Now we're using Logging.info<span class="pl-pds">"</span></span>)
<span class="pl-c1">17</span><span class="pl-k">-</span>Jan <span class="pl-c1">13</span><span class="pl-k">:</span><span class="pl-c1">17</span><span class="pl-k">:</span><span class="pl-c1">20</span><span class="pl-k">:</span>INFO<span class="pl-k">:</span>root<span class="pl-k">:</span>Now we<span class="pl-k">'</span>re <span class="pl-k">using</span> Logging<span class="pl-k">.</span>info</pre></div>
</article></div>