<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/unroot.svg"><img style="height: 9em; max-width: 100%;" alt="UnROOT.jl" src="docs/src/assets/unroot.svg"></a></p>

<p dir="auto"><a href="#contributors-"><img src="https://camo.githubusercontent.com/47ee008b717dff1958bfd2572b0db21294ad202547013427f9ef45b281a840c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d382d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors" data-canonical-src="https://img.shields.io/badge/all_contributors-8-orange.svg?style=flat-square" style="max-width: 100%;"></a></p>

<p dir="auto"><a href="https://joss.theoj.org/papers/bab42b0c60f9dc7ef3b8d6460bc7229c" rel="nofollow"><img src="https://camo.githubusercontent.com/4e50ff6408ecb20ff4b8d88bd3e5339b88cc53a014ab1e596b323a3db56d6f44/68747470733a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f62616234326230633630663964633765663362386436343630626337323239632f7374617475732e737667" alt="JOSS" data-canonical-src="https://joss.theoj.org/papers/bab42b0c60f9dc7ef3b8d6460bc7229c/status.svg" style="max-width: 100%;"></a>
<a href="https://juliahep.github.io/UnROOT.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaHEP/UnROOT.jl/actions"><img src="https://github.com/JuliaHEP/UnROOT.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaHEP/UnROOT.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fd8b52c11cbb3c5fe4089ae0da87b24aad329df64d0943c708af19d31b7022c3/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614845502f556e524f4f542e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/JuliaHEP/UnROOT.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">UnROOT.jl is a reader for the <a href="https://root.cern" rel="nofollow">CERN ROOT</a> file format
written entirely in Julia, without any dependence on ROOT or Python.</p>
<h2 dir="auto"><a id="user-content-important-api-changes-in-v090" class="anchor" aria-hidden="true" href="#important-api-changes-in-v090"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Important API changes in v0.9.0</h2>
<p dir="auto">We decided to alter the behaviour of <code>getindex(f::ROOTfile, s::AbstractString)</code> which is essentially
the method called called when <code>f["foo/bar"]</code> is used. Before <code>v0.9.0</code>, <code>UnROOT</code> tried to do a best guess
and return a tree/branch or even fully parsed data. This lead to two bigger issues.</p>
<ol dir="auto">
<li>Errors prevented any further exploration once <code>UnROOT</code> bumped into something it could not interpret, although it might not even be requested by the user (e.g. the interpretation of a single branch in a tree, while others would work fine)</li>
<li>Unpredictable behaviour (type instability): the path dictates which type of data is returned.</li>
</ol>
<p dir="auto">Starting from <code>v0.9.0</code> we introduce an interface where <code>f["..."]</code> always returns genuine ROOT datatypes (or custom ones if you provide interpretations) and only perfroms the actual parsing when explicitly requested by the user via helper methods like <code>LazyBranch(f, "...")</code>.</p>
<p dir="auto">Long story short, the following pattern can be used to fix your code when upgrading to <code>v0.9.0</code>:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="f(&quot;foo/bar&quot;) =&gt; LazyBranch(f, &quot;foo/bar&quot;)"><pre class="notranslate"><code>f("foo/bar") =&gt; LazyBranch(f, "foo/bar")
</code></pre></div>
<p dir="auto">The <code>f["foo/bar"]</code> accessor should now work on almost all files and is a handy utility to explore the ROOT data structures.</p>
<p dir="auto">See <a href="https://github.com/JuliaHEP/UnROOT.jl/pull/199" data-hovercard-type="pull_request" data-hovercard-url="/JuliaHEP/UnROOT.jl/pull/199/hovercard">PR199</a> for more details.</p>
<h2 dir="auto"><a id="user-content-installation-guide" class="anchor" aria-hidden="true" href="#installation-guide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation Guide</h2>
<ol dir="auto">
<li>Download the latest <a href="https://julialang.org/downloads/" rel="nofollow">Julia release</a></li>
<li>Open up Julia REPL (hit <code>]</code> once to enter Pkg mode, hit backspace to exit it)</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt;]
(v1.8) pkg&gt; add UnROOT"><pre>julia<span class="pl-k">&gt;</span>]
(v1.<span class="pl-c1">8</span>) pkg<span class="pl-k">&gt;</span> add UnROOT</pre></div>
<h2 dir="auto"><a id="user-content-quick-start-see-docs-for-more" class="anchor" aria-hidden="true" href="#quick-start-see-docs-for-more"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick Start (see <a href="https://JuliaHEP.github.io/UnROOT.jl/dev/" rel="nofollow">docs</a> for more)</h2>
<h3 dir="auto"><a id="user-content-ttree" class="anchor" aria-hidden="true" href="#ttree"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TTree</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using UnROOT

julia&gt; f = ROOTFile(&quot;test/samples/NanoAODv5_sample.root&quot;)
ROOTFile with 2 entries and 21 streamers.
test/samples/NanoAODv5_sample.root
├─ Events (TTree)
│  ├─ &quot;run&quot;
│  ├─ &quot;luminosityBlock&quot;
│  ├─ &quot;event&quot;
│  ├─ &quot;⋮&quot;
│  ├─ &quot;L1_UnpairedBunchBptxPlus&quot;
│  ├─ &quot;L1_ZeroBias&quot;
│  └─ &quot;L1_ZeroBias_copy&quot;
└─ untagged (TObjString)


julia&gt; mytree = LazyTree(f, &quot;Events&quot;, [&quot;Electron_dxy&quot;, &quot;nMuon&quot;, r&quot;Muon_(pt|eta)$&quot;])
 Row │ Electron_dxy                      nMuon   Muon_pt          Muon_eta        
     │ SubArray{Float3                   UInt32  SubArray{Float3  SubArray{Float3 
─────┼────────────────────────────────────────────────────────────────────────────
 1   │ [0.000371]                        0       []               []
 2   │ [-0.00982]                        2       [19.9, 15.3]     [0.53, 0.229]
 3   │ []                                0       []               []
 4   │ [-0.00157]                        0       []               []
 5   │ []                                0       []               []
 6   │ [-0.00126]                        0       []               []
 7   │ [0.0612, 0.000642]                2       [22.2, 4.43]     [-1.13, 1.98]
 8   │ [0.00587, 0.000549, -0.00617]     0       []               []
  ⋮  │                ⋮                    ⋮            ⋮                ⋮
                                                                  992 rows omitted"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> UnROOT

julia<span class="pl-k">&gt;</span> f <span class="pl-k">=</span> <span class="pl-c1">ROOTFile</span>(<span class="pl-s"><span class="pl-pds">"</span>test/samples/NanoAODv5_sample.root<span class="pl-pds">"</span></span>)
ROOTFile with <span class="pl-c1">2</span> entries and <span class="pl-c1">21</span> streamers.
test<span class="pl-k">/</span>samples<span class="pl-k">/</span>NanoAODv5_sample<span class="pl-k">.</span>root
├─ Events (TTree)
│  ├─ <span class="pl-s"><span class="pl-pds">"</span>run<span class="pl-pds">"</span></span>
│  ├─ <span class="pl-s"><span class="pl-pds">"</span>luminosityBlock<span class="pl-pds">"</span></span>
│  ├─ <span class="pl-s"><span class="pl-pds">"</span>event<span class="pl-pds">"</span></span>
│  ├─ <span class="pl-s"><span class="pl-pds">"</span>⋮<span class="pl-pds">"</span></span>
│  ├─ <span class="pl-s"><span class="pl-pds">"</span>L1_UnpairedBunchBptxPlus<span class="pl-pds">"</span></span>
│  ├─ <span class="pl-s"><span class="pl-pds">"</span>L1_ZeroBias<span class="pl-pds">"</span></span>
│  └─ <span class="pl-s"><span class="pl-pds">"</span>L1_ZeroBias_copy<span class="pl-pds">"</span></span>
└─ untagged (TObjString)


julia<span class="pl-k">&gt;</span> mytree <span class="pl-k">=</span> <span class="pl-c1">LazyTree</span>(f, <span class="pl-s"><span class="pl-pds">"</span>Events<span class="pl-pds">"</span></span>, [<span class="pl-s"><span class="pl-pds">"</span>Electron_dxy<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>nMuon<span class="pl-pds">"</span></span>, <span class="pl-sr"><span class="pl-pds">r"</span>Muon_(pt|eta)$<span class="pl-pds">"</span></span>])
 Row │ Electron_dxy                      nMuon   Muon_pt          Muon_eta        
     │ SubArray{Float3                   UInt32  SubArray{Float3  SubArray{Float3 
─────┼────────────────────────────────────────────────────────────────────────────
 <span class="pl-c1">1</span>   │ [<span class="pl-c1">0.000371</span>]                        <span class="pl-c1">0</span>       []               []
 <span class="pl-c1">2</span>   │ [<span class="pl-k">-</span><span class="pl-c1">0.00982</span>]                        <span class="pl-c1">2</span>       [<span class="pl-c1">19.9</span>, <span class="pl-c1">15.3</span>]     [<span class="pl-c1">0.53</span>, <span class="pl-c1">0.229</span>]
 <span class="pl-c1">3</span>   │ []                                <span class="pl-c1">0</span>       []               []
 <span class="pl-c1">4</span>   │ [<span class="pl-k">-</span><span class="pl-c1">0.00157</span>]                        <span class="pl-c1">0</span>       []               []
 <span class="pl-c1">5</span>   │ []                                <span class="pl-c1">0</span>       []               []
 <span class="pl-c1">6</span>   │ [<span class="pl-k">-</span><span class="pl-c1">0.00126</span>]                        <span class="pl-c1">0</span>       []               []
 <span class="pl-c1">7</span>   │ [<span class="pl-c1">0.0612</span>, <span class="pl-c1">0.000642</span>]                <span class="pl-c1">2</span>       [<span class="pl-c1">22.2</span>, <span class="pl-c1">4.43</span>]     [<span class="pl-k">-</span><span class="pl-c1">1.13</span>, <span class="pl-c1">1.98</span>]
 <span class="pl-c1">8</span>   │ [<span class="pl-c1">0.00587</span>, <span class="pl-c1">0.000549</span>, <span class="pl-k">-</span><span class="pl-c1">0.00617</span>]     <span class="pl-c1">0</span>       []               []
  ⋮  │                ⋮                    ⋮            ⋮                ⋮
                                                                  <span class="pl-c1">992</span> rows omitted</pre></div>
<h3 dir="auto"><a id="user-content-rntuple" class="anchor" aria-hidden="true" href="#rntuple"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RNTuple</h3>
<details><summary>Click to expand exmaple for RNTuple</summary>
<p dir="auto">
</p><div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using UnROOT

julia&gt; f = ROOTFile(&quot;./test/samples/RNTuple/test_ntuple_stl_containers.root&quot;);

julia&gt; f[&quot;ntuple&quot;]
UnROOT.RNTuple with 5 rows, 13 fields, and metadata:
  header: 
    name: &quot;ntuple&quot;
    ntuple_description: &quot;&quot;
    writer_identifier: &quot;ROOT v6.29/01&quot;
    schema: 
      RNTupleSchema with 13 top fields
      ├─ :lorentz_vector ⇒ Struct
      ├─ :vector_tuple_int32_string ⇒ Vector
      ├─ :string ⇒ String
      ├─ :vector_string ⇒ Vector
      ├─ :vector_vector_int32 ⇒ Vector
      ├─ :vector_variant_int64_string ⇒ Vector
      ├─ :vector_vector_string ⇒ Vector
      ├─ :variant_int32_string ⇒ Union
      ├─ :array_float ⇒ StdArray{3}
      ├─ :tuple_int32_string ⇒ Struct
      ├─ :array_lv ⇒ StdArray{3}
      ├─ :pair_int32_string ⇒ Struct
      └─ :vector_int32 ⇒ Vector
      
  footer: 
    cluster_summaries: UnROOT.ClusterSummary[ClusterSummary(num_first_entry=0, num_entries=5)]

julia&gt; LazyTree(f, &quot;ntuple&quot;)
 Row │ string  vector_int32     array_float      vector_vector_i     vector_string       vector_vector_s     variant_int32_s  vector_variant_     ⋯
     │ String  Vector{Int32}    StaticArraysCor  Vector{Vector{I     Vector{String}      Vector{Vector{S     Union{Int32, St  Vector{Union{In     ⋯
─────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 1   │ one     [1]              [1.0, 1.0, 1.0]  Vector{Int32}[Int3  [&quot;one&quot;]             [[&quot;one&quot;]]           1                Union{Int64, Strin  ⋯
 2   │ two     [1, 2]           [2.0, 2.0, 2.0]  Vector{Int32}[Int3  [&quot;one&quot;, &quot;two&quot;]      [[&quot;one&quot;], [&quot;two&quot;]]  two              Union{Int64, Strin  ⋯
 3   │ three   [1, 2, 3]        [3.0, 3.0, 3.0]  Vector{Int32}[Int3  [&quot;one&quot;, &quot;two&quot;, &quot;th  [[&quot;one&quot;], [&quot;two&quot;],  three            Union{Int64, Strin  ⋯
 4   │ four    [1, 2, 3, 4]     [4.0, 4.0, 4.0]  Vector{Int32}[Int3  [&quot;one&quot;, &quot;two&quot;, &quot;th  [[&quot;one&quot;], [&quot;two&quot;],  4                Union{Int64, Strin  ⋯
 5   │ five    [1, 2, 3, 4, 5]  [5.0, 5.0, 5.0]  Vector{Int32}[Int3  [&quot;one&quot;, &quot;two&quot;, &quot;th  [[&quot;one&quot;], [&quot;two&quot;],  5                Union{Int64, Strin  ⋯
                                                                                                                                  5 columns omitted"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> UnROOT

julia<span class="pl-k">&gt;</span> f <span class="pl-k">=</span> <span class="pl-c1">ROOTFile</span>(<span class="pl-s"><span class="pl-pds">"</span>./test/samples/RNTuple/test_ntuple_stl_containers.root<span class="pl-pds">"</span></span>);

julia<span class="pl-k">&gt;</span> f[<span class="pl-s"><span class="pl-pds">"</span>ntuple<span class="pl-pds">"</span></span>]
UnROOT<span class="pl-k">.</span>RNTuple with <span class="pl-c1">5</span> rows, <span class="pl-c1">13</span> fields, and metadata<span class="pl-k">:</span>
  header<span class="pl-k">:</span> 
    name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>ntuple<span class="pl-pds">"</span></span>
    ntuple_description<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>
    writer_identifier<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>ROOT v6.29/01<span class="pl-pds">"</span></span>
    schema<span class="pl-k">:</span> 
      RNTupleSchema with <span class="pl-c1">13</span> top fields
      ├─ <span class="pl-c1">:lorentz_vector</span> ⇒ Struct
      ├─ <span class="pl-c1">:vector_tuple_int32_string</span> ⇒ Vector
      ├─ <span class="pl-c1">:string</span> ⇒ String
      ├─ <span class="pl-c1">:vector_string</span> ⇒ Vector
      ├─ <span class="pl-c1">:vector_vector_int32</span> ⇒ Vector
      ├─ <span class="pl-c1">:vector_variant_int64_string</span> ⇒ Vector
      ├─ <span class="pl-c1">:vector_vector_string</span> ⇒ Vector
      ├─ <span class="pl-c1">:variant_int32_string</span> ⇒ Union
      ├─ <span class="pl-c1">:array_float</span> ⇒ StdArray{<span class="pl-c1">3</span>}
      ├─ <span class="pl-c1">:tuple_int32_string</span> ⇒ Struct
      ├─ <span class="pl-c1">:array_lv</span> ⇒ StdArray{<span class="pl-c1">3</span>}
      ├─ <span class="pl-c1">:pair_int32_string</span> ⇒ Struct
      └─ <span class="pl-c1">:vector_int32</span> ⇒ Vector
      
  footer<span class="pl-k">:</span> 
    cluster_summaries<span class="pl-k">:</span> UnROOT<span class="pl-k">.</span>ClusterSummary[<span class="pl-c1">ClusterSummary</span>(num_first_entry<span class="pl-k">=</span><span class="pl-c1">0</span>, num_entries<span class="pl-k">=</span><span class="pl-c1">5</span>)]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">LazyTree</span>(f, <span class="pl-s"><span class="pl-pds">"</span>ntuple<span class="pl-pds">"</span></span>)
 Row │ string  vector_int32     array_float      vector_vector_i     vector_string       vector_vector_s     variant_int32_s  vector_variant_     ⋯
     │ String  Vector{Int32}    StaticArraysCor  Vector{Vector{I     Vector{String}      Vector{Vector{S     Union{Int32, St  Vector{Union{In     ⋯
─────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 <span class="pl-c1">1</span>   │ one     [<span class="pl-c1">1</span>]              [<span class="pl-c1">1.0</span>, <span class="pl-c1">1.0</span>, <span class="pl-c1">1.0</span>]  Vector{Int32}[Int3  [<span class="pl-s"><span class="pl-pds">"</span>one<span class="pl-pds">"</span></span>]             [[<span class="pl-s"><span class="pl-pds">"</span>one<span class="pl-pds">"</span></span>]]           <span class="pl-c1">1</span>                Union{Int64, Strin  ⋯
 <span class="pl-c1">2</span>   │ two     [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>]           [<span class="pl-c1">2.0</span>, <span class="pl-c1">2.0</span>, <span class="pl-c1">2.0</span>]  Vector{Int32}[Int3  [<span class="pl-s"><span class="pl-pds">"</span>one<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>two<span class="pl-pds">"</span></span>]      [[<span class="pl-s"><span class="pl-pds">"</span>one<span class="pl-pds">"</span></span>], [<span class="pl-s"><span class="pl-pds">"</span>two<span class="pl-pds">"</span></span>]]  two              Union{Int64, Strin  ⋯
 <span class="pl-c1">3</span>   │ three   [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]        [<span class="pl-c1">3.0</span>, <span class="pl-c1">3.0</span>, <span class="pl-c1">3.0</span>]  Vector{Int32}[Int3  [<span class="pl-s"><span class="pl-pds">"</span>one<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>two<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>th  [[<span class="pl-pds">"</span></span>o<span class="pl-s"><span class="pl-pds"><span class="pl-c1">ne</span>"</span>], [<span class="pl-pds">"</span><span class="pl-c1">two</span></span><span class="pl-s"><span class="pl-pds">"</span>],  three            Union{Int64, Strin  ⋯</span>
<span class="pl-s"> 4   │ four    [1, 2, 3, 4]     [4.0, 4.0, 4.0]  Vector{Int32}[Int3  [<span class="pl-pds">"</span></span>o<span class="pl-s"><span class="pl-pds"><span class="pl-c1">ne</span>"</span>, <span class="pl-pds">"</span><span class="pl-c1">two</span></span><span class="pl-s"><span class="pl-pds">"</span>, <span class="pl-pds">"</span></span>th  [[<span class="pl-s"><span class="pl-pds">"</span>one<span class="pl-pds">"</span></span>], [<span class="pl-s"><span class="pl-pds">"</span>two<span class="pl-pds">"</span></span>],  <span class="pl-c1">4</span>                Union{Int64, Strin  ⋯
 <span class="pl-c1">5</span>   │ five    [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">5</span>]  [<span class="pl-c1">5.0</span>, <span class="pl-c1">5.0</span>, <span class="pl-c1">5.0</span>]  Vector{Int32}[Int3  [<span class="pl-s"><span class="pl-pds">"</span>one<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>two<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>th  [[<span class="pl-pds">"</span></span>o<span class="pl-s"><span class="pl-pds"><span class="pl-c1">ne</span>"</span>], [<span class="pl-pds">"</span><span class="pl-c1">two</span></span><span class="pl-s"><span class="pl-pds">"</span>],  5                Union{Int64, Strin  ⋯</span>
<span class="pl-s">                                                                                                                                  5 columns omitted</span></pre></div>
<p dir="auto"></p>
</details>
<h3 dir="auto"><a id="user-content-lazytree-as-unified-table--iteration-interface" class="anchor" aria-hidden="true" href="#lazytree-as-unified-table--iteration-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LazyTree as unified table / iteration interface</h3>
<p dir="auto">You can iterate through a <code>LazyTree</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; for event in mytree
           @show event.Electron_dxy
           break
       end
event.Electron_dxy = Float32[0.00037050247]

julia&gt; Threads.@threads for event in mytree # multi-threading
           ...
       end"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> event <span class="pl-k">in</span> mytree
           <span class="pl-c1">@show</span> event<span class="pl-k">.</span>Electron_dxy
           <span class="pl-k">break</span>
       <span class="pl-k">end</span>
event<span class="pl-k">.</span>Electron_dxy <span class="pl-k">=</span> Float32[<span class="pl-c1">0.00037050247</span>]

julia<span class="pl-k">&gt;</span> Threads<span class="pl-k">.</span><span class="pl-c1">@threads</span> <span class="pl-k">for</span> event <span class="pl-k">in</span> mytree <span class="pl-c"><span class="pl-c">#</span> multi-threading</span>
           <span class="pl-k">...</span>
       <span class="pl-k">end</span></pre></div>
<p dir="auto">Only one basket per branch will be cached so you don't have to worry about running out of RAM.
At the same time, <code>event</code> inside the for-loop is not materialized until a field is accessed. This means you should avoid double-access,
see <a href="https://juliahep.github.io/UnROOT.jl/dev/performancetips/#Don't-%22double-access%22" rel="nofollow">performance tips</a></p>
<p dir="auto">XRootD is also supported, depending on the protocol:</p>
<ul dir="auto">
<li>the "url" has to start with <code>http://</code> or <code>https://</code>:</li>
<li>(1.6+ only) or the "url" has to start with <code>root://</code> and have another <code>//</code> to separate server and file path</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; r = ROOTFile(&quot;https://scikit-hep.org/uproot3/examples/Zmumu.root&quot;)
ROOTFile with 1 entry and 18 streamers.
https://scikit-hep.org/uproot3/examples/Zmumu.root
└─ events (TTree)
   ├─ &quot;Type&quot;
   ├─ &quot;Run&quot;
   ├─ &quot;Event&quot;
   ├─ &quot;⋮&quot;
   ├─ &quot;phi2&quot;
   ├─ &quot;Q2&quot;
   └─ &quot;M&quot;

julia&gt; r = ROOTFile(&quot;root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root&quot;)
ROOTFile with 1 entry and 19 streamers.
root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root
└─ Events (TTree)
   ├─ &quot;run&quot;
   ├─ &quot;luminosityBlock&quot;
   ├─ &quot;event&quot;
   ├─ &quot;⋮&quot;
   ├─ &quot;Electron_dxyErr&quot;
   ├─ &quot;Electron_dz&quot;
   └─ &quot;Electron_dzErr&quot;
"><pre>julia<span class="pl-k">&gt;</span> r <span class="pl-k">=</span> <span class="pl-c1">ROOTFile</span>(<span class="pl-s"><span class="pl-pds">"</span>https://scikit-hep.org/uproot3/examples/Zmumu.root<span class="pl-pds">"</span></span>)
ROOTFile with <span class="pl-c1">1</span> entry and <span class="pl-c1">18</span> streamers.
https<span class="pl-k">:</span><span class="pl-k">//</span>scikit<span class="pl-k">-</span>hep<span class="pl-k">.</span>org<span class="pl-k">/</span>uproot3<span class="pl-k">/</span>examples<span class="pl-k">/</span>Zmumu<span class="pl-k">.</span>root
└─ events (TTree)
   ├─ <span class="pl-s"><span class="pl-pds">"</span>Type<span class="pl-pds">"</span></span>
   ├─ <span class="pl-s"><span class="pl-pds">"</span>Run<span class="pl-pds">"</span></span>
   ├─ <span class="pl-s"><span class="pl-pds">"</span>Event<span class="pl-pds">"</span></span>
   ├─ <span class="pl-s"><span class="pl-pds">"</span>⋮<span class="pl-pds">"</span></span>
   ├─ <span class="pl-s"><span class="pl-pds">"</span>phi2<span class="pl-pds">"</span></span>
   ├─ <span class="pl-s"><span class="pl-pds">"</span>Q2<span class="pl-pds">"</span></span>
   └─ <span class="pl-s"><span class="pl-pds">"</span>M<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> r <span class="pl-k">=</span> <span class="pl-c1">ROOTFile</span>(<span class="pl-s"><span class="pl-pds">"</span>root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root<span class="pl-pds">"</span></span>)
ROOTFile with <span class="pl-c1">1</span> entry and <span class="pl-c1">19</span> streamers.
root<span class="pl-k">:</span><span class="pl-k">//</span>eospublic<span class="pl-k">.</span>cern<span class="pl-k">.</span>ch<span class="pl-k">//</span>eos<span class="pl-k">/</span>root<span class="pl-k">-</span>eos<span class="pl-k">/</span>cms_opendata_2012_nanoaod<span class="pl-k">/</span>Run2012B_DoubleMuParked<span class="pl-k">.</span>root
└─ Events (TTree)
   ├─ <span class="pl-s"><span class="pl-pds">"</span>run<span class="pl-pds">"</span></span>
   ├─ <span class="pl-s"><span class="pl-pds">"</span>luminosityBlock<span class="pl-pds">"</span></span>
   ├─ <span class="pl-s"><span class="pl-pds">"</span>event<span class="pl-pds">"</span></span>
   ├─ <span class="pl-s"><span class="pl-pds">"</span>⋮<span class="pl-pds">"</span></span>
   ├─ <span class="pl-s"><span class="pl-pds">"</span>Electron_dxyErr<span class="pl-pds">"</span></span>
   ├─ <span class="pl-s"><span class="pl-pds">"</span>Electron_dz<span class="pl-pds">"</span></span>
   └─ <span class="pl-s"><span class="pl-pds">"</span>Electron_dzErr<span class="pl-pds">"</span></span>
</pre></div>
<h2 dir="auto"><a id="user-content-tbranch-of-custom-struct" class="anchor" aria-hidden="true" href="#tbranch-of-custom-struct"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TBranch of custom struct</h2>
<p dir="auto">We provide an experimental interface for hooking up UnROOT with your custom types
that only takes 2 steps, as explained <a href="https://JuliaHEP.github.io/UnROOT.jl/dev/advanced/custom_branch/" rel="nofollow">in the docs</a>.
As a show case for this functionality, the <code>TLorentzVector</code> support in UnROOT is implemented
with the said plug-in system.</p>
<h2 dir="auto"><a id="user-content-support--contributiing" class="anchor" aria-hidden="true" href="#support--contributiing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Support &amp; Contributiing</h2>
<ul dir="auto">
<li>Use Github issues for any bug reporting or feature request; feel free to make PRs,
bug fixing, feature tuning, quality of life, docs, examples etc.</li>
<li>See <code>CONTRIBUTING.md</code> for more information and recommended workflows in contributing to this package.</li>
</ul>

<h2 dir="auto"><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgements</h2>
<p dir="auto">Special thanks to Jim Pivarski (<a href="https://github.com/jpivarski">@jpivarski</a>)
from the <a href="https://github.com/scikit-hep">Scikit-HEP</a> project, who is the
main author of <a href="https://github.com/scikit-hep/uproot">uproot</a>, a native
Python library to read and write ROOT files, which was and is a great source
of inspiration and information for reverse engineering the ROOT binary
structures.</p>
<h2 dir="auto"><a id="user-content-contributors-" class="anchor" aria-hidden="true" href="#contributors-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributors <g-emoji class="g-emoji" alias="sparkles" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png">✨</g-emoji></h2>
<p dir="auto">Thanks goes to these wonderful people (<a href="https://allcontributors.org/docs/en/emoji-key" rel="nofollow">emoji key</a>):</p>



<table>
  <tbody>
    <tr>
      <td align="center" valign="top" width="14.28%"><a href="http://www.tamasgal.com" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/1730350?v=4?s=100" width="100px;" alt="Tamas Gal" style="max-width: 100%;"><br><sub><b>Tamas Gal</b></sub></a><br><a href="https://github.com/JuliaHEP/UnROOT.jl/commits?author=tamasgal" title="Code"><g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png">💻</g-emoji></a> <a href="https://github.com/JuliaHEP/UnROOT.jl/commits?author=tamasgal" title="Documentation"><g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png">📖</g-emoji></a> <a href="#infra-tamasgal" title="Infrastructure (Hosting, Build-Tools, etc)"><g-emoji class="g-emoji" alias="metro" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f687.png">🚇</g-emoji></a> <a href="#data-tamasgal" title="Data"><g-emoji class="g-emoji" alias="symbols" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f523.png">🔣</g-emoji></a> <a href="https://github.com/JuliaHEP/UnROOT.jl/commits?author=tamasgal" title="Tests"><g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png">⚠️</g-emoji></a></td>
      <td align="center" valign="top" width="14.28%"><a href="https://github.com/Moelf"><img src="https://avatars.githubusercontent.com/u/5306213?v=4?s=100" width="100px;" alt="Jerry Ling" style="max-width: 100%;"><br><sub><b>Jerry Ling</b></sub></a><br><a href="https://github.com/JuliaHEP/UnROOT.jl/commits?author=Moelf" title="Code"><g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png">💻</g-emoji></a> <a href="https://github.com/JuliaHEP/UnROOT.jl/commits?author=Moelf" title="Tests"><g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png">⚠️</g-emoji></a> <a href="#data-Moelf" title="Data"><g-emoji class="g-emoji" alias="symbols" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f523.png">🔣</g-emoji></a> <a href="https://github.com/JuliaHEP/UnROOT.jl/commits?author=Moelf" title="Documentation"><g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png">📖</g-emoji></a></td>
      <td align="center" valign="top" width="14.28%"><a href="https://github.com/8me"><img src="https://avatars.githubusercontent.com/u/17862090?v=4?s=100" width="100px;" alt="Johannes Schumann" style="max-width: 100%;"><br><sub><b>Johannes Schumann</b></sub></a><br><a href="https://github.com/JuliaHEP/UnROOT.jl/commits?author=8me" title="Code"><g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png">💻</g-emoji></a> <a href="https://github.com/JuliaHEP/UnROOT.jl/commits?author=8me" title="Tests"><g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png">⚠️</g-emoji></a> <a href="#data-8me" title="Data"><g-emoji class="g-emoji" alias="symbols" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f523.png">🔣</g-emoji></a></td>
      <td align="center" valign="top" width="14.28%"><a href="https://github.com/aminnj"><img src="https://avatars.githubusercontent.com/u/5760027?v=4?s=100" width="100px;" alt="Nick Amin" style="max-width: 100%;"><br><sub><b>Nick Amin</b></sub></a><br><a href="https://github.com/JuliaHEP/UnROOT.jl/commits?author=aminnj" title="Code"><g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png">💻</g-emoji></a> <a href="https://github.com/JuliaHEP/UnROOT.jl/commits?author=aminnj" title="Tests"><g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png">⚠️</g-emoji></a> <a href="#data-aminnj" title="Data"><g-emoji class="g-emoji" alias="symbols" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f523.png">🔣</g-emoji></a></td>
      <td align="center" valign="top" width="14.28%"><a href="https://giordano.github.io" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/765740?v=4?s=100" width="100px;" alt="Mosè Giordano" style="max-width: 100%;"><br><sub><b>Mosè Giordano</b></sub></a><br><a href="#infra-giordano" title="Infrastructure (Hosting, Build-Tools, etc)"><g-emoji class="g-emoji" alias="metro" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f687.png">🚇</g-emoji></a></td>
      <td align="center" valign="top" width="14.28%"><a href="https://github.com/oschulz"><img src="https://avatars.githubusercontent.com/u/546147?v=4?s=100" width="100px;" alt="Oliver Schulz" style="max-width: 100%;"><br><sub><b>Oliver Schulz</b></sub></a><br><a href="#ideas-oschulz" title="Ideas, Planning, &amp; Feedback"><g-emoji class="g-emoji" alias="thinking" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f914.png">🤔</g-emoji></a></td>
      <td align="center" valign="top" width="14.28%"><a href="https://github.com/mmikhasenko"><img src="https://avatars.githubusercontent.com/u/22725744?v=4?s=100" width="100px;" alt="Misha Mikhasenko" style="max-width: 100%;"><br><sub><b>Misha Mikhasenko</b></sub></a><br><a href="#data-mmikhasenko" title="Data"><g-emoji class="g-emoji" alias="symbols" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f523.png">🔣</g-emoji></a></td>
    </tr>
    <tr>
      <td align="center" valign="top" width="14.28%"><a href="http://yuan-ru-lin.github.io" rel="nofollow"><img src="https://avatars.githubusercontent.com/u/7196133?v=4?s=100" width="100px;" alt="Yuan-Ru Lin" style="max-width: 100%;"><br><sub><b>Yuan-Ru Lin</b></sub></a><br><a href="https://github.com/JuliaHEP/UnROOT.jl/commits?author=Yuan-Ru-Lin" title="Tests"><g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png">⚠️</g-emoji></a></td>
    </tr>
  </tbody>
</table>



<p dir="auto">This project follows the <a href="https://github.com/all-contributors/all-contributors">all-contributors</a> specification. Contributions of any kind welcome!</p>
</article></div>