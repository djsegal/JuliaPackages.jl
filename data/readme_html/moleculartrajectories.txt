<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-moleculartrajectoriesjl" class="anchor" aria-hidden="true" href="#moleculartrajectoriesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MolecularTrajectories.jl</h1>
<p><a href="https://travis-ci.org/tom--lee/MolecularTrajectories.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/044698cae84e01d3fa08527462fb12b5c4d7c437129b91eb3f166fc8002f0f18/68747470733a2f2f7472617669732d63692e6f72672f746f6d2d2d6c65652f4d6f6c6563756c61725472616a6563746f726965732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/tom--lee/MolecularTrajectories.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/r/tom--lee/MolecularTrajectories.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/3ac623cb9bbb2e0cc185fcfbc43c26cffb2fa0d5355dc9d813a54f10aeb33934/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f746f6d2d2d6c65652f4d6f6c6563756c61725472616a6563746f726965732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/tom--lee/MolecularTrajectories.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>A Julia package for reading and writing molecular dynamics simulation
trajectories.</p>
<p>Currently supports iteration over a series of GROMACS-format <code>.gro</code> files and
writing of a single trajectory frame as a <code>.gro</code> file.</p>
<p>GROMACS-format <code>.xtc</code> files will be supported in a future release.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using MolecularTrajectories

julia&gt; using StaticArrays

julia&gt; const Vec = SVector{3, Float64}

julia&gt; gro_path = joinpath(dirname(pathof(MolecularTrajectories)), &quot;../test/test.gro&quot;)

julia&gt; gro_paths = [gro_path, gro_path]

julia&gt; trajectory = GroTrajectory{Vec}(gro_paths, dt=1.0)

julia&gt; for frame in trajectory
    @show frame.time
    @show frame.box
    @show frame.positions[1:10]
    @show frame.velocities[1:10]
end

julia&gt; using MolecularTopologies

julia&gt; topology = open(gro_topology, gro_path)

julia&gt; frame = first(GroTrajectory{Vec}(gro_paths, dt=1.0))

julia&gt; open(&quot;output.gro&quot;, &quot;w&quot;) do g
    write_frame(g, GroTrajectory, frame, topology, &quot;Some gro file&quot;)
end

"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MolecularTrajectories

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> StaticArrays

julia<span class="pl-k">&gt;</span> <span class="pl-k">const</span> Vec <span class="pl-k">=</span> SVector{<span class="pl-c1">3</span>, Float64}

julia<span class="pl-k">&gt;</span> gro_path <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">pathof</span>(MolecularTrajectories)), <span class="pl-s"><span class="pl-pds">"</span>../test/test.gro<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> gro_paths <span class="pl-k">=</span> [gro_path, gro_path]

julia<span class="pl-k">&gt;</span> trajectory <span class="pl-k">=</span> <span class="pl-c1">GroTrajectory</span><span class="pl-c1">{Vec}</span>(gro_paths, dt<span class="pl-k">=</span><span class="pl-c1">1.0</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> frame <span class="pl-k">in</span> trajectory
    <span class="pl-c1">@show</span> frame<span class="pl-k">.</span>time
    <span class="pl-c1">@show</span> frame<span class="pl-k">.</span>box
    <span class="pl-c1">@show</span> frame<span class="pl-k">.</span>positions[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>]
    <span class="pl-c1">@show</span> frame<span class="pl-k">.</span>velocities[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>]
<span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MolecularTopologies

julia<span class="pl-k">&gt;</span> topology <span class="pl-k">=</span> <span class="pl-c1">open</span>(gro_topology, gro_path)

julia<span class="pl-k">&gt;</span> frame <span class="pl-k">=</span> <span class="pl-c1">first</span>(<span class="pl-c1">GroTrajectory</span><span class="pl-c1">{Vec}</span>(gro_paths, dt<span class="pl-k">=</span><span class="pl-c1">1.0</span>))

julia<span class="pl-k">&gt;</span> <span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>output.gro<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> g
    <span class="pl-c1">write_frame</span>(g, GroTrajectory, frame, topology, <span class="pl-s"><span class="pl-pds">"</span>Some gro file<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>
</pre></div>
<p>Note that trajectory objects are iterable but not indexable;
they do not support the <code>AbstractArray</code> interface.</p>
</article></div>