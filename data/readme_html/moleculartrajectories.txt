<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-moleculartrajectoriesjl" class="anchor" aria-hidden="true" href="#moleculartrajectoriesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>MolecularTrajectories.jl</h1>
<p><a href="https://travis-ci.org/tom--lee/MolecularTrajectories.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/aa4d1f849aedc8c3f173f8a9190ddf3a6fcf220d/68747470733a2f2f7472617669732d63692e6f72672f746f6d2d2d6c65652f4d6f6c6563756c61725472616a6563746f726965732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/tom--lee/MolecularTrajectories.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/r/tom--lee/MolecularTrajectories.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ff6d4f1e46f7a716e4db200b122e2024d421be26/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f746f6d2d2d6c65652f4d6f6c6563756c61725472616a6563746f726965732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/tom--lee/MolecularTrajectories.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>A Julia package for reading and writing molecular dynamics simulation
trajectories.</p>
<p>Currently supports iteration over a series of GROMACS-format <code>.gro</code> files and
writing of a single trajectory frame as a <code>.gro</code> file.</p>
<p>GROMACS-format <code>.xtc</code> files will be supported in a future release.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MolecularTrajectories

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> StaticArrays

julia<span class="pl-k">&gt;</span> <span class="pl-k">const</span> Vec <span class="pl-k">=</span> SVector{<span class="pl-c1">3</span>, Float64}

julia<span class="pl-k">&gt;</span> gro_path <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">pathof</span>(MolecularTrajectories)), <span class="pl-s"><span class="pl-pds">"</span>../test/test.gro<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> gro_paths <span class="pl-k">=</span> [gro_path, gro_path]

julia<span class="pl-k">&gt;</span> trajectory <span class="pl-k">=</span> <span class="pl-c1">GroTrajectory</span><span class="pl-c1">{Vec}</span>(gro_paths, dt<span class="pl-k">=</span><span class="pl-c1">1.0</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> frame <span class="pl-k">in</span> trajectory
    <span class="pl-c1">@show</span> frame<span class="pl-k">.</span>time
    <span class="pl-c1">@show</span> frame<span class="pl-k">.</span>box
    <span class="pl-c1">@show</span> frame<span class="pl-k">.</span>positions[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>]
    <span class="pl-c1">@show</span> frame<span class="pl-k">.</span>velocities[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>]
<span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MolecularTopologies

julia<span class="pl-k">&gt;</span> topology <span class="pl-k">=</span> <span class="pl-c1">open</span>(gro_topology, gro_path)

julia<span class="pl-k">&gt;</span> frame <span class="pl-k">=</span> <span class="pl-c1">first</span>(<span class="pl-c1">GroTrajectory</span><span class="pl-c1">{Vec}</span>(gro_paths, dt<span class="pl-k">=</span><span class="pl-c1">1.0</span>))

julia<span class="pl-k">&gt;</span> <span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>output.gro<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> g
    <span class="pl-c1">write_frame</span>(g, GroTrajectory, frame, topology, <span class="pl-s"><span class="pl-pds">"</span>Some gro file<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>
</pre></div>
<p>Note that trajectory objects are iterable but not indexable;
they do not support the <code>AbstractArray</code> interface.</p>
</article></div>