<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-jl2nb" class="anchor" aria-hidden="true" href="#jl2nb"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>jl2nb</h1>
<p>Create jupyter notebooks from julia source code with markup for reveal.js and RISE.js slides using <a href="https://fredrikekre.github.io/Literate.jl/stable/" rel="nofollow">Literate.jl</a>
for presentations with interactive Julia code. In particular, this script handles Julia block comments starting and ending in the first column.
See also the discussion in <a href="Presenting.md">Presenting.md</a>.</p>
<h2><a id="user-content-installation-as-self-contained-shebang-script" class="anchor" aria-hidden="true" href="#installation-as-self-contained-shebang-script"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation as self-contained "shebang" script</h2>
<p>Currently, this works on Linux and (probably) MacOSX.</p>
<ul>
<li>Have Julia on the PATH.</li>
<li>Install the the tools described in  <a href="Presenting.md">Presenting.md</a></li>
<li>Add <a href="https://fredrikekre.github.io/Literate.jl/stable/" rel="nofollow">Literate.jl</a> and <a href="http://carlobaldassi.github.io/ArgParse.jl/stable/" rel="nofollow">ArgParse.jl</a></li>
<li>Copy jl2nb to a directory on the PATH, make it executable</li>
<li>Invoke <code>jl2nb --help</code> for documentation</li>
<li>Inspect the example</li>
</ul>
<h2><a id="user-content-use-under-julia" class="anchor" aria-hidden="true" href="#use-under-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Use under julia</h2>
<p>This should run under all systems</p>
<ul>
<li>Invoke <code>julia jl2nb --help</code> for documentation</li>
<li>Inspect the example.</li>
</ul>
<h2><a id="user-content-triple-mode-handling-in-emacs" class="anchor" aria-hidden="true" href="#triple-mode-handling-in-emacs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Triple mode handling in emacs</h2>
<p>The following snippet helps with switching between julia, markdown and latex modes in emacs.
It will work when the markdown chunks are put into block comments.</p>
<pre><code>(defvar mode-state1 nil)
(defvar mode-state2 nil)
(defvar mode-state3 t)
(defun toggle-jlmdtex nil "switch between julia, gfm and latex modes when editing  files" (interactive)
       (if mode-state1 
           (progn  (setq mode-state1 nil) (setq mode-state2 t))
         (if mode-state2 
             (progn (setq mode-state2 nil) (setq mode-state3 t))
           (if mode-state3 
               (progn (setq mode-state3 nil) (setq mode-state1 t))
             )
           )
         )
       (if mode-state1 (latex-mode))
       (if mode-state2 (markdown-mode))
       (if mode-state3 (julia-mode))
       
       )
(global-set-key "\C-l" 'toggle-jlmdtex);;
</code></pre>
</article></div>