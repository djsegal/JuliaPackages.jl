<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-wavjl" class="anchor" aria-hidden="true" href="#wavjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>WAV.jl</h1>
<p dir="auto"><a href="https://github.com/dancasimiro/WAV.jl/actions"><img src="https://github.com/dancasimiro/WAV.jl/workflows/CI/badge.svg" alt="Build status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/dancasimiro/WAV.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/59ef37d4d1630cf01efd9daf21c662859aa1b27d9541cea272845ede9b07414b/68747470733a2f2f636f6465636f762e696f2f67682f64616e636173696d69726f2f5741562e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/dancasimiro/WAV.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This is a Julia package to read and write the <a href="https://en.wikipedia.org/wiki/WAV" rel="nofollow">WAV audio file
format</a>.</p>
<p dir="auto">WAV provides <code>wavread</code>, <code>wavwrite</code> and <code>wavappend</code> functions to read,
write, and append to WAV files. The function <code>wavplay</code> provides simple
audio playback.</p>
<p dir="auto">These functions behave similarly to the former MATLAB functions of the
same name.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; ]
pkg&gt; add WAV"><pre class="notranslate"><code>julia&gt; ]
pkg&gt; add WAV
</code></pre></div>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting Started</h2>
<p dir="auto">The following example generates waveform data for a one second long 1
kHz sine tone, at a sampling frequency of 8 kHz, writes it to a WAV
file and then reads the data back. It then appends a 2 kHz tone to the
same file and plays the result.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using WAV
fs = 8e3
t = 0.0:1/fs:prevfloat(1.0)
f = 1e3
y = sin.(2pi * f * t) * 0.1
wavwrite(y, &quot;example.wav&quot;, Fs=fs)

y, fs = wavread(&quot;example.wav&quot;)
y = sin.(2pi * 2f * t) * 0.1
wavappend(y, &quot;example.wav&quot;)

y, fs = wavread(&quot;example.wav&quot;)
wavplay(y, fs)"><pre><span class="pl-k">using</span> WAV
fs <span class="pl-k">=</span> <span class="pl-c1">8e3</span>
t <span class="pl-k">=</span> <span class="pl-c1">0.0</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">/</span>fs<span class="pl-k">:</span><span class="pl-c1">prevfloat</span>(<span class="pl-c1">1.0</span>)
f <span class="pl-k">=</span> <span class="pl-c1">1e3</span>
y <span class="pl-k">=</span> <span class="pl-c1">sin</span>.(<span class="pl-c1">2pi</span> <span class="pl-k">*</span> f <span class="pl-k">*</span> t) <span class="pl-k">*</span> <span class="pl-c1">0.1</span>
<span class="pl-c1">wavwrite</span>(y, <span class="pl-s"><span class="pl-pds">"</span>example.wav<span class="pl-pds">"</span></span>, Fs<span class="pl-k">=</span>fs)

y, fs <span class="pl-k">=</span> <span class="pl-c1">wavread</span>(<span class="pl-s"><span class="pl-pds">"</span>example.wav<span class="pl-pds">"</span></span>)
y <span class="pl-k">=</span> <span class="pl-c1">sin</span>.(<span class="pl-c1">2pi</span> <span class="pl-k">*</span> <span class="pl-c1">2</span>f <span class="pl-k">*</span> t) <span class="pl-k">*</span> <span class="pl-c1">0.1</span>
<span class="pl-c1">wavappend</span>(y, <span class="pl-s"><span class="pl-pds">"</span>example.wav<span class="pl-pds">"</span></span>)

y, fs <span class="pl-k">=</span> <span class="pl-c1">wavread</span>(<span class="pl-s"><span class="pl-pds">"</span>example.wav<span class="pl-pds">"</span></span>)
<span class="pl-c1">wavplay</span>(y, fs)</pre></div>
<h2 dir="auto"><a id="user-content-news" class="anchor" aria-hidden="true" href="#news"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>News</h2>
<p dir="auto">Experimental support for reading and writing <code>CUE</code> and <code>INFO</code>
chunks has been added in version 1, via the functions <code>wav_cue_read</code>,
<code>wav_cue_write</code>, <code>wav_info_read</code>, <code>wav_info_write</code>. See their
respective help text for details.</p>
<h2 dir="auto"><a id="user-content-other-julia-audio-packages" class="anchor" aria-hidden="true" href="#other-julia-audio-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Other Julia Audio Packages</h2>
<p dir="auto"><a href="https://github.com/JuliaAudio/LibSndFile.jl">LibSndFile</a> is another
Julia audio file library. It supports more file formats (including
WAV) and implements a more powerful playback interface, all based on
<a href="http://www.mega-nerd.com/libsndfile/" rel="nofollow">libsndfile</a>.</p>
</article></div>