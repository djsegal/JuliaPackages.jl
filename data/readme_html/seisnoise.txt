<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-seisnoisejl-sound-earth_americas" class="anchor" aria-hidden="true" href="#seisnoisejl-sound-earth_americas"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SeisNoise.jl <g-emoji class="g-emoji" alias="sound" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f509.png">🔉</g-emoji> <g-emoji class="g-emoji" alias="earth_americas" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f30e.png">🌎</g-emoji></h1>
<p dir="auto">SeisNoise.jl is designed for fast and easy ambient noise cross-correlation on the CPU and GPU in Julia.</p>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Coverage</strong></th>
<th align="center"><strong>Chat</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://tclements.github.io/SeisNoise.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/tclements/SeisNoise.jl/actions/workflows/ci.yml"><img src="https://github.com/tclements/SeisNoise.jl/actions/workflows/ci.yml/badge.svg" alt="Build Status" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/tclements/SeisNoise.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3a88fd4c4aef352112109b2db5a8812ab2243d0cf3ca2553a6073085fe51c4e2/68747470733a2f2f636f6465636f762e696f2f67682f74636c656d656e74732f536569734e6f6973652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d4d43706738506c546f4c" alt="Coverage Status" data-canonical-src="https://codecov.io/gh/tclements/SeisNoise.jl/branch/master/graph/badge.svg?token=MCpg8PlToL" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://slackinvite.julialang.org/" rel="nofollow"><img src="https://camo.githubusercontent.com/c192b6b30d22427a9ad86f7832a70c27f8dcbb028dae7dc2ca07181ef7dd9e13/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e253230736c61636b2d79656c6c6f772e737667" alt="" data-canonical-src="https://img.shields.io/badge/chat-on%20slack-yellow.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">You can install the latest version of SeisNoise using the Julia package manager (Press <code>]</code> to enter <code>pkg</code>).
From the Julia command prompt:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt;]
(@v1.6) pkg&gt; add SeisNoise"><pre>julia<span class="pl-k">&gt;</span>]
(<span class="pl-c1">@v1</span>.<span class="pl-c1">6</span>) pkg<span class="pl-k">&gt;</span> add SeisNoise</pre></div>
<p dir="auto">Or, equivalently, via the <code>Pkg</code> API:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import Pkg; Pkg.add(&quot;SeisNoise&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>SeisNoise<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">We recommend using the latest version of SeisNoise by updating with the Julia package manager:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="(@v1.6) pkg&gt; update SeisNoise"><pre>(<span class="pl-c1">@v1</span>.<span class="pl-c1">6</span>) pkg<span class="pl-k">&gt;</span> update SeisNoise</pre></div>
<h2 dir="auto"><a id="user-content-package-features" class="anchor" aria-hidden="true" href="#package-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Package Features</h2>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="/docs/src/assets/SeisNoise-DataFlow.jpg"><img src="/docs/src/assets/SeisNoise-DataFlow.jpg" alt="flow" style="max-width: 100%;"></a></p>
<ul dir="auto">
<li>Built upon <a href="https://seisio.readthedocs.io/en/latest/" rel="nofollow">SeisIO</a> for easy and fast I/O.</li>
<li>Custom structures for storing Raw Data, Fourier Transforms of data, and cross-correlations</li>
<li>CPU/GPU compatible functions for cross-correlation.</li>
<li>Methods for <a href="https://github.com/tclements/SeisDvv.jl"><em>dv/v</em> measurements</a>.</li>
<li>Coming soon: Dispersion analysis.</li>
</ul>
<p dir="auto">Check out the SeisNoise <a href="https://nextjournal.com/thclements/seisnoisejl-gpu-computing-tutorial" rel="nofollow">GPU tutorial on NextJournal</a>!</p>
<h2 dir="auto"><a id="user-content-seisnoise-cross-correlation-example" class="anchor" aria-hidden="true" href="#seisnoise-cross-correlation-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SeisNoise Cross-Correlation Example</h2>
<p dir="auto">Once you have installed the package you can type <code>using SeisNoise</code> to start
cross-correlating. SeisNoise uses a functional syntax to implement cross-correlation. For example</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SeisNoise, SeisIO, Plots
fs = 40. # sampling frequency in Hz
freqmin,freqmax = 0.1,0.2 # min and max frequencies
cc_step, cc_len = 450, 1800 # corrleation step and length in S
maxlag = 60. # maximum lag time in correlation
s = &quot;2019-02-03&quot;
t = &quot;2019-02-04&quot;
S1 = get_data(&quot;FDSN&quot;,&quot;CI.SDD..BHZ&quot;,src=&quot;SCEDC&quot;,s=s,t=t)
S2 = get_data(&quot;FDSN&quot;,&quot;CI.PER..BHZ&quot;,src=&quot;SCEDC&quot;,s=s,t=t)
process_raw!(S1,fs)
process_raw!(S2,fs)
R = RawData.([S1,S2],cc_len,cc_step)
detrend!.(R)
taper!.(R)
bandpass!.(R,freqmin,freqmax,zerophase=true)
FFT = rfft.(R)
whiten!.(FFT,freqmin,freqmax)
C = correlate(FFT[1],FFT[2],maxlag)
clean_up!(C,freqmin,freqmax)
abs_max!(C)
plot(C)"><pre><span class="pl-k">using</span> SeisNoise, SeisIO, Plots
fs <span class="pl-k">=</span> <span class="pl-c1">40.</span> <span class="pl-c"><span class="pl-c">#</span> sampling frequency in Hz</span>
freqmin,freqmax <span class="pl-k">=</span> <span class="pl-c1">0.1</span>,<span class="pl-c1">0.2</span> <span class="pl-c"><span class="pl-c">#</span> min and max frequencies</span>
cc_step, cc_len <span class="pl-k">=</span> <span class="pl-c1">450</span>, <span class="pl-c1">1800</span> <span class="pl-c"><span class="pl-c">#</span> corrleation step and length in S</span>
maxlag <span class="pl-k">=</span> <span class="pl-c1">60.</span> <span class="pl-c"><span class="pl-c">#</span> maximum lag time in correlation</span>
s <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2019-02-03<span class="pl-pds">"</span></span>
t <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2019-02-04<span class="pl-pds">"</span></span>
S1 <span class="pl-k">=</span> <span class="pl-c1">get_data</span>(<span class="pl-s"><span class="pl-pds">"</span>FDSN<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>CI.SDD..BHZ<span class="pl-pds">"</span></span>,src<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>SCEDC<span class="pl-pds">"</span></span>,s<span class="pl-k">=</span>s,t<span class="pl-k">=</span>t)
S2 <span class="pl-k">=</span> <span class="pl-c1">get_data</span>(<span class="pl-s"><span class="pl-pds">"</span>FDSN<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>CI.PER..BHZ<span class="pl-pds">"</span></span>,src<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>SCEDC<span class="pl-pds">"</span></span>,s<span class="pl-k">=</span>s,t<span class="pl-k">=</span>t)
<span class="pl-c1">process_raw!</span>(S1,fs)
<span class="pl-c1">process_raw!</span>(S2,fs)
R <span class="pl-k">=</span> <span class="pl-c1">RawData</span>.([S1,S2],cc_len,cc_step)
<span class="pl-c1">detrend!</span>.(R)
<span class="pl-c1">taper!</span>.(R)
<span class="pl-c1">bandpass!</span>.(R,freqmin,freqmax,zerophase<span class="pl-k">=</span><span class="pl-c1">true</span>)
FFT <span class="pl-k">=</span> <span class="pl-c1">rfft</span>.(R)
<span class="pl-c1">whiten!</span>.(FFT,freqmin,freqmax)
C <span class="pl-k">=</span> <span class="pl-c1">correlate</span>(FFT[<span class="pl-c1">1</span>],FFT[<span class="pl-c1">2</span>],maxlag)
<span class="pl-c1">clean_up!</span>(C,freqmin,freqmax)
<span class="pl-c1">abs_max!</span>(C)
<span class="pl-c1">plot</span>(C)</pre></div>
<p dir="auto">will produce this figure:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="/docs/src/assets/xcorr-example.png"><img src="/docs/src/assets/xcorr-example.png" alt="plot1" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-cross-correlation-on-the-gpu" class="anchor" aria-hidden="true" href="#cross-correlation-on-the-gpu"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Cross-correlation on the GPU</h2>
<p dir="auto">SeisNoise can process data and compute cross-correlations on the GPU with CUDA. The <a href="https://github.com/JuliaGPU">JuliaGPU</a> suite provides a high-level interface for CUDA programming through the CUDA.jl package. CUDA.jl provides an the <code>CuArray</code> type for storing data on the GPU. Data in SeisNoise structures (<code>R.x</code>, <code>F.fft</code>, and <code>C.corr</code> fields, for <code>RawData</code>, <code>FFTData</code>, and <code>CorrData</code>, respectively) can move between an <code>Array</code> on the CPU to a <code>CuArray</code> on the GPU using the <code>gpu</code> and <code>cpu</code> functions, as shown below.</p>
<blockquote>
<p dir="auto"><g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png">⚠️</g-emoji> Only <strong>Nvidia</strong> GPUs are suported at the moment. Hold in there for AMD/OpenCL support...</p>
</blockquote>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# create raw data and send to GPU
R = RawData(S1, cc_len, cc_step) |&gt; gpu
R.x
72000×188 CUDA.CuArray{Float32,2,Nothing}

# send data back to the CPU
R = R |&gt; cpu
R.x
72000×188 Array{Float32,2}"><pre><span class="pl-c"><span class="pl-c">#</span> create raw data and send to GPU</span>
R <span class="pl-k">=</span> <span class="pl-c1">RawData</span>(S1, cc_len, cc_step) <span class="pl-k">|&gt;</span> gpu
R<span class="pl-k">.</span>x
<span class="pl-c1">72000</span><span class="pl-k">×</span><span class="pl-c1">188</span> CUDA<span class="pl-k">.</span>CuArray{Float32,<span class="pl-c1">2</span>,Nothing}

<span class="pl-c"><span class="pl-c">#</span> send data back to the CPU</span>
R <span class="pl-k">=</span> R <span class="pl-k">|&gt;</span> cpu
R<span class="pl-k">.</span>x
<span class="pl-c1">72000</span><span class="pl-k">×</span><span class="pl-c1">188</span> Array{Float32,<span class="pl-c1">2</span>}</pre></div>
<p dir="auto">All basic processing remains the same on the GPU. Here is a complete cross-correlation routine on the GPU:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# send data to GPU
R1 = RawData(S1, cc_len, cc_step) |&gt; gpu
R2 = RawData(S2, cc_len, cc_step) |&gt; gpu
R = [R1,R2]

# preprocess on the GPU
detrend!.(R)
taper!.(R)
bandpass!.(R,freqmin,freqmax,zerophase=true)

# Real FFT on GPU
FFT = rfft.(R)
whiten!.(FFT,freqmin,freqmax)

# compute correlation and send to cpu
C = correlate(FFT[1],FFT[2],maxlag) |&gt; cpu"><pre><span class="pl-c"><span class="pl-c">#</span> send data to GPU</span>
R1 <span class="pl-k">=</span> <span class="pl-c1">RawData</span>(S1, cc_len, cc_step) <span class="pl-k">|&gt;</span> gpu
R2 <span class="pl-k">=</span> <span class="pl-c1">RawData</span>(S2, cc_len, cc_step) <span class="pl-k">|&gt;</span> gpu
R <span class="pl-k">=</span> [R1,R2]

<span class="pl-c"><span class="pl-c">#</span> preprocess on the GPU</span>
<span class="pl-c1">detrend!</span>.(R)
<span class="pl-c1">taper!</span>.(R)
<span class="pl-c1">bandpass!</span>.(R,freqmin,freqmax,zerophase<span class="pl-k">=</span><span class="pl-c1">true</span>)

<span class="pl-c"><span class="pl-c">#</span> Real FFT on GPU</span>
FFT <span class="pl-k">=</span> <span class="pl-c1">rfft</span>.(R)
<span class="pl-c1">whiten!</span>.(FFT,freqmin,freqmax)

<span class="pl-c"><span class="pl-c">#</span> compute correlation and send to cpu</span>
C <span class="pl-k">=</span> <span class="pl-c1">correlate</span>(FFT[<span class="pl-c1">1</span>],FFT[<span class="pl-c1">2</span>],maxlag) <span class="pl-k">|&gt;</span> cpu</pre></div>
<h3 dir="auto"><a id="user-content-routines-implemented-on-the-gpu" class="anchor" aria-hidden="true" href="#routines-implemented-on-the-gpu"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Routines Implemented on the GPU</h3>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="/docs/src/assets/Fig2.jpg"><img src="/docs/src/assets/Fig2.jpg" alt="gpu times" style="max-width: 100%;"></a></p>
<p dir="auto">Processing times for a selection of routines on the GPU with Julia + GPU (white), Julia + CPU (black), and Python (grey). Currently these operations are implemented in SeisNoise on the GPU:</p>
<ul dir="auto">
<li>Preprocessing:
<ul dir="auto">
<li><code>detrend</code>,<code>demean</code>, <code>taper</code>, <code>onebit</code>, <code>smooth</code></li>
</ul>
</li>
<li>Filtering:
<ul dir="auto">
<li><code>bandpass</code>, <code>bandstop</code>, <code>lowpass</code>, <code>highpass</code></li>
</ul>
</li>
<li>Fourier Domain:
<ul dir="auto">
<li><code>whiten</code>, <code>rfft</code>, <code>irfft</code></li>
</ul>
</li>
<li>Cross-correlation:
<ul dir="auto">
<li><code>correlate</code>, <code>cross-coherence</code>, <code>deconvolution</code></li>
</ul>
</li>
<li>Post-processing:
<ul dir="auto">
<li><code>stack</code>, <code>filter</code>s, etc..</li>
</ul>
</li>
</ul>
<h2 dir="auto"><a id="user-content-cite-seisnoise" class="anchor" aria-hidden="true" href="#cite-seisnoise"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Cite SeisNoise</h2>
<p dir="auto">If you use SeisNoise in your work, please star the package and cite our work <a href="https://doi.org/10.1785/0220200192" rel="nofollow">DOI: 10.1785/0220200192</a>:</p>
<div class="highlight highlight-text-bibtex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@article{SeisNoise.jl-2020,
  author = {Clements, Timothy and Denolle, Marine A.},
  title = {SeisNoise.jl: Ambient Seismic Noise Cross Correlation on the CPU and GPU in Julia},
  journal = {Seismological Research Letters},
  year = {2020},
  month = {09},
  issn = {0895-0695},
  doi = {10.1785/0220200192},
  url = {https://doi.org/10.1785/0220200192},
  eprint = {https://pubs.geoscienceworld.org/srl/article-pdf/doi/10.1785/0220200192/5156069/srl-2020192.1.pdf},
}"><pre><span class="pl-k">@article</span>{<span class="pl-en">SeisNoise.jl-2020</span>,
  <span class="pl-s">author</span> = <span class="pl-s"><span class="pl-pds">{</span>Clements, Timothy and Denolle, Marine A.<span class="pl-pds">}</span></span>,
  <span class="pl-s">title</span> = <span class="pl-s"><span class="pl-pds">{</span>SeisNoise.jl: Ambient Seismic Noise Cross Correlation on the CPU and GPU in Julia<span class="pl-pds">}</span></span>,
  <span class="pl-s">journal</span> = <span class="pl-s"><span class="pl-pds">{</span>Seismological Research Letters<span class="pl-pds">}</span></span>,
  <span class="pl-s">year</span> = <span class="pl-s"><span class="pl-pds">{</span>2020<span class="pl-pds">}</span></span>,
  <span class="pl-s">month</span> = <span class="pl-s"><span class="pl-pds">{</span>09<span class="pl-pds">}</span></span>,
  <span class="pl-s">issn</span> = <span class="pl-s"><span class="pl-pds">{</span>0895-0695<span class="pl-pds">}</span></span>,
  <span class="pl-s">doi</span> = <span class="pl-s"><span class="pl-pds">{</span>10.1785/0220200192<span class="pl-pds">}</span></span>,
  <span class="pl-s">url</span> = <span class="pl-s"><span class="pl-pds">{</span>https://doi.org/10.1785/0220200192<span class="pl-pds">}</span></span>,
  <span class="pl-s">eprint</span> = <span class="pl-s"><span class="pl-pds">{</span>https://pubs.geoscienceworld.org/srl/article-pdf/doi/10.1785/0220200192/5156069/srl-2020192.1.pdf<span class="pl-pds">}</span></span>,
}</pre></div>
<h2 dir="auto"><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing</h2>
<p dir="auto">We welcome folks interested in contributing to SeisNoise. Please <a href="https://github.com/tclements/SeisNoise.jl/issues/new">open an issue</a> to let us know about bug reports, new methods/code, and or feature requests/usage cases. If you would like to submit a pull request (PR), please include accompanying <a href="https://github.com/tclements/SeisNoise.jl/tree/master/test">tests</a>.</p>
</article></div>