<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-matchcore" class="anchor" aria-hidden="true" href="#matchcore"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MatchCore</h1>
<p><a href="https://travis-ci.com/thautwarm/MatchCore.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/aa64b6f33a3b46c85f70207c34c9f81bca03adf5/68747470733a2f2f7472617669732d63692e636f6d2f74686175747761726d2f4d61746368436f72652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/thautwarm/MatchCore.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/thautwarm/MatchCore.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8262e32d8e151c94ce856a974264aa68462ee664/68747470733a2f2f636f6465636f762e696f2f67682f74686175747761726d2f4d61746368436f72652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/thautwarm/MatchCore.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>A minimal implementation of optimized pattern matching.</p>
<p>It is extracted from MLStyle.jl and sightly modified, for users who don't need advanced features like extensible patterns.</p>
<p>It's faster to startup, produce efficient and "runtime free" code equivalent to MLStyle.</p>
<p>MatchCore lacks of many non-primitive patterns, like <code>Dict</code>s, ranges, view/active patterns.</p>
<p>However, expression matching is still available:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@smatch</span> :(<span class="pl-c1">a</span>.(b, c)) <span class="pl-k">begin</span>
           :(<span class="pl-k">$</span><span class="pl-c1">a</span>.(<span class="pl-k">$</span>(bc<span class="pl-k">...</span>))) <span class="pl-k">=&gt;</span> (a, bc)
       <span class="pl-k">end</span>
(<span class="pl-c1">:a</span>, Any[<span class="pl-c1">:b</span>, <span class="pl-c1">:c</span>])</pre></div>
</article></div>