<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-qiskitoptjl" class="anchor" aria-hidden="true" href="#qiskitoptjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>QiskitOpt.jl</h1>
<p dir="auto"><a href="https://zenodo.org/badge/latestdoi/587349377" rel="nofollow"><img src="https://camo.githubusercontent.com/372536dc23d06ed60b0db223c8a5435777dc854dc4f802614a992c0e9c1d393e/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3538373334393337372e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/587349377.svg" style="max-width: 100%;"></a>
<a href="https://github.com/psrenergy/QUBODrivers.jl"><img src="https://camo.githubusercontent.com/577cb83e897799ec0841dea0a021753569dee0a027228505adb044b992e7e962/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f506f776572656425323062792d5155424f447269766572732e6a6c2d253230253233343036336438" alt="QUBODRIVERS" data-canonical-src="https://img.shields.io/badge/Powered%20by-QUBODrivers.jl-%20%234063d8" style="max-width: 100%;"></a></p>
<p dir="auto">IBM Qiskit Optimization Wrapper for JuMP</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import Pkg

julia&gt; Pkg.add(&quot;QiskitOpt.jl&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg

julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>QiskitOpt.jl<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JuMP
using QiskitOpt

# Using QAOA
model = Model(QiskitOpt.QAOA.Optimizer)

# Using VQE
model = Model(QiskitOpt.VQE.Optimizer)

Q = [
   -1  2  2
    2 -1  2
    2  2 -1
]

@variable(model, x[1:3], Bin)
@objective(model, Min, x' * Q * x)

optimize!(model)

for i = 1:result_count(model)
    xi = value.(x; result=i)
    yi = objective_value(model; result=i)

    println(&quot;f($xi) = $yi&quot;)
end"><pre><span class="pl-k">using</span> JuMP
<span class="pl-k">using</span> QiskitOpt

<span class="pl-c"><span class="pl-c">#</span> Using QAOA</span>
model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(QiskitOpt<span class="pl-k">.</span>QAOA<span class="pl-k">.</span>Optimizer)

<span class="pl-c"><span class="pl-c">#</span> Using VQE</span>
model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(QiskitOpt<span class="pl-k">.</span>VQE<span class="pl-k">.</span>Optimizer)

Q <span class="pl-k">=</span> [
   <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-c1">2</span>  <span class="pl-c1">2</span>
    <span class="pl-c1">2</span> <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-c1">2</span>
    <span class="pl-c1">2</span>  <span class="pl-c1">2</span> <span class="pl-k">-</span><span class="pl-c1">1</span>
]

<span class="pl-c1">@variable</span>(model, x[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>], Bin)
<span class="pl-c1">@objective</span>(model, Min, x<span class="pl-k">'</span> <span class="pl-k">*</span> Q <span class="pl-k">*</span> x)

<span class="pl-c1">optimize!</span>(model)

<span class="pl-k">for</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">result_count</span>(model)
    xi <span class="pl-k">=</span> <span class="pl-c1">value</span>.(x; result<span class="pl-k">=</span>i)
    yi <span class="pl-k">=</span> <span class="pl-c1">objective_value</span>(model; result<span class="pl-k">=</span>i)

    <span class="pl-en">println</span>(<span class="pl-s"><span class="pl-pds">"</span>f(<span class="pl-v">$xi</span>) = <span class="pl-v">$yi</span><span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
<h2 dir="auto"><a id="user-content-api-token" class="anchor" aria-hidden="true" href="#api-token"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>API Token</h2>
<p dir="auto">To access IBM's Quantum Computers, it is necessary to create an account at <a href="https://quantum-computing.ibm.com/" rel="nofollow">IBM Q</a> to obtain an API Token and run the following python code:</p>
<div class="highlight highlight-source-python notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="from qiskit import IBMQ

IBMQ.save_account(&quot;YOUR_TOKEN_HERE&quot;)"><pre><span class="pl-k">from</span> <span class="pl-s1">qiskit</span> <span class="pl-k">import</span> <span class="pl-v">IBMQ</span>

<span class="pl-v">IBMQ</span>.<span class="pl-en">save_account</span>(<span class="pl-s">"YOUR_TOKEN_HERE"</span>)</pre></div>
<p dir="auto">Another option is to set the <code>IBMQ_API_TOKEN</code> environment variable before loading <code>QiskitOpt.jl</code>:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ export IBQM_API_TOKEN=YOUR_TOKEN_HERE

$ julia

julia&gt; using QiskitOpt"><pre>$ <span class="pl-k">export</span> IBQM_API_TOKEN=YOUR_TOKEN_HERE

$ julia

julia<span class="pl-k">&gt;</span> using QiskitOpt</pre></div>
<p dir="auto"><strong>Disclaimer:</strong> <em>The IBM Qiskit Optimization Wrapper for Julia is not officially supported by IBM. If you are a commercial customer interested in official support for Julia from IBM, let them know!</em></p>
<p dir="auto"><strong>Note</strong>: <em>If you are using <a href="https://github.com/psrenergy/QiskitOpt.jl">QiskitOpt.jl</a> in your project, we recommend you to include the <code>.CondaPkg</code> entry in your <code>.gitignore</code> file. The PythonCall module will place a lot of files in this folder when building its Python environment.</em></p>
</article></div>