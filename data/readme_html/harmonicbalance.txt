<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./logo.png"><img src="./logo.png" width="750" align="top" style="max-width: 100%;"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/NonlinearOscillations/HarmonicBalance.jl/workflows/Run%20tests/badge.svg?branch=master"><img src="https://github.com/NonlinearOscillations/HarmonicBalance.jl/workflows/Run%20tests/badge.svg?branch=master" alt="tests" style="max-width: 100%;"></a>
<a href="https://nonlinearoscillations.github.io/HarmonicBalance.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/661356f86ae99407296656b5514b76cfb343dacca3c4a20a0872e9c3c6bfa2b3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6f6e6c696e652d626c75652e737667" alt="docs" data-canonical-src="https://img.shields.io/badge/docs-online-blue.svg" style="max-width: 100%;"></a>
<a href="https://pkgs.genieframework.com?packages=HarmonicBalance" rel="nofollow"><img src="https://camo.githubusercontent.com/e1095c6c43a9650146dcadb65d8745d9981e7376c01ecca058c3f6ab9609afb8/68747470733a2f2f736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f706b67732e67656e69656672616d65776f726b2e636f6d2f6170692f76312f62616467652f4861726d6f6e696342616c616e6365" alt="Downloads" data-canonical-src="https://shields.io/endpoint?url=https://pkgs.genieframework.com/api/v1/badge/HarmonicBalance" style="max-width: 100%;"></a></p>
<p dir="auto"><strong>HarmonicBalance.jl</strong> is a Julia package for solving nonlinear differential equations using the method of harmonic balance.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">To install HarmonicBalance.jl, you can use the github repo or the Julia package manager,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;HarmonicBalance&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>HarmonicBalance<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<p dir="auto">For a detailed description of the package and examples, see the <a href="https://nonlinearoscillations.github.io/HarmonicBalance.jl/" rel="nofollow">documentation</a>.</p>
<p dir="auto"><a href="https://github.com/NonlinearOscillations/HarmonicBalance-notebooks">This repo</a> contains a collection of example notebooks.</p>
<h2 dir="auto"><a id="user-content-simple-example" class="anchor" aria-hidden="true" href="#simple-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a href="https://nonlinearoscillations.github.io/HarmonicBalance.jl/stable/examples/simple_Duffing/" rel="nofollow">Simple example</a></h2>
<p dir="auto">Let's find the steady states of a driven Duffing oscillator with nonlinear damping, its equation of motion is:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="/docs/images/github_readme_eq.png"><img src="/docs/images/github_readme_eq.png" width="450" style="max-width: 100%;"></a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using HarmonicBalance
@variables α, ω, ω0, F, t, η, x(t) # declare constant variables and a function x(t)
diff_eq = DifferentialEquation(d(x,t,2) + ω0^2*x + α*x^3 + η*d(x,t)*x^2 ~ F*cos(ω*t), x)
add_harmonic!(diff_eq, x, ω) # specify the ansatz x = u(T) cos(ωt) + v(T) sin(ωt)

# implement ansatz to get harmonic equations
harmonic_eq = get_harmonic_equations(diff_eq)

fixed = (α =&gt; 1., ω0 =&gt; 1.0, F =&gt; 0.01, η=&gt;0.1)   # fixed parameters
varied = ω =&gt; LinRange(0.9, 1.2, 100)           # range of parameter values
result = get_steady_states(harmonic_eq, varied, fixed)"><pre><span class="pl-k">using</span> HarmonicBalance
<span class="pl-c1">@variables</span> α, ω, ω0, F, t, η, <span class="pl-c1">x</span>(t) <span class="pl-c"><span class="pl-c">#</span> declare constant variables and a function x(t)</span>
diff_eq <span class="pl-k">=</span> <span class="pl-c1">DifferentialEquation</span>(<span class="pl-c1">d</span>(x,t,<span class="pl-c1">2</span>) <span class="pl-k">+</span> ω0<span class="pl-k">^</span><span class="pl-c1">2</span><span class="pl-k">*</span>x <span class="pl-k">+</span> α<span class="pl-k">*</span>x<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> η<span class="pl-k">*</span><span class="pl-c1">d</span>(x,t)<span class="pl-k">*</span>x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">~</span> F<span class="pl-k">*</span><span class="pl-c1">cos</span>(ω<span class="pl-k">*</span>t), x)
<span class="pl-c1">add_harmonic!</span>(diff_eq, x, ω) <span class="pl-c"><span class="pl-c">#</span> specify the ansatz x = u(T) cos(ωt) + v(T) sin(ωt)</span>

<span class="pl-c"><span class="pl-c">#</span> implement ansatz to get harmonic equations</span>
harmonic_eq <span class="pl-k">=</span> <span class="pl-c1">get_harmonic_equations</span>(diff_eq)

fixed <span class="pl-k">=</span> (α <span class="pl-k">=&gt;</span> <span class="pl-c1">1.</span>, ω0 <span class="pl-k">=&gt;</span> <span class="pl-c1">1.0</span>, F <span class="pl-k">=&gt;</span> <span class="pl-c1">0.01</span>, η<span class="pl-k">=&gt;</span><span class="pl-c1">0.1</span>)   <span class="pl-c"><span class="pl-c">#</span> fixed parameters</span>
varied <span class="pl-k">=</span> ω <span class="pl-k">=&gt;</span> <span class="pl-c1">LinRange</span>(<span class="pl-c1">0.9</span>, <span class="pl-c1">1.2</span>, <span class="pl-c1">100</span>)           <span class="pl-c"><span class="pl-c">#</span> range of parameter values</span>
result <span class="pl-k">=</span> <span class="pl-c1">get_steady_states</span>(harmonic_eq, varied, fixed)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="A steady state result for 100 parameter points

Solution branches:   3
   of which real:    3
   of which stable:  2

Classes: stable, physical, Hopf, binary_labels"><pre class="notranslate"><code>A steady state result for 100 parameter points

Solution branches:   3
   of which real:    3
   of which stable:  2

Classes: stable, physical, Hopf, binary_labels
</code></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="plot(result, &quot;sqrt(u1^2 + v1^2)&quot;)"><pre><span class="pl-c1">plot</span>(result, <span class="pl-s"><span class="pl-pds">"</span>sqrt(u1^2 + v1^2)<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="/docs/images/github_readme_plot.png"><img src="/docs/images/github_readme_plot.png" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citation</h2>
<p dir="auto">If you use HarmonicBalance.jl in your project, we kindly ask you to cite <a href="https://scipost.org/SciPostPhysCodeb.6" rel="nofollow">this paper</a>, namely:</p>
<p dir="auto"><strong>HarmonicBalance.jl: A Julia suite for nonlinear dynamics using harmonic balance</strong>
Jan Košata, Javier del Pino, Toni L. Heugel, Oded Zilberberg
SciPost Phys. Codebases 6 (2022)</p>
</article></div>