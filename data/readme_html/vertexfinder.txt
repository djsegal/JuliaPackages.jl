<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-vertexfinderjl" class="anchor" aria-hidden="true" href="#vertexfinderjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>VertexFinder.jl</h1>
<p><a href="https://travis-ci.org/ahojukka5/VertexFinder.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/251fa07bfe07406e88b0a41c98961d400161c07e5d6f71691c13a7bd47f46043/68747470733a2f2f7472617669732d63692e6f72672f61686f6a756b6b61352f56657274657846696e6465722e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.org/ahojukka5/VertexFinder.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/ahojukka5/VertexFinder.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/e7673238ab101f7b4a8ec54d840535dcf2c42edc22c5e19ca030a02bd8cc5d2f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f61686f6a756b6b61352f56657274657846696e6465722e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://coveralls.io/repos/github/ahojukka5/VertexFinder.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>Package author: Jukka Aho (@ahojukka5)</p>
<p>The need to determine pseudoperipheral vertices arises from several
graph-theoretical approaches for ordering sparse matrix equations. This package
implements George-Liu algorithm for finding a pseudoperipheral vertex in a graph
aiming at returning a vertex having a large eccentricity.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Let's consider the following graph:</p>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/example_graph.svg"><img src="docs/src/example_graph.svg" alt="" style="max-width:100%;"></a></p>
<p>It is easy to see that peripheral vertices for this graph are 9 and 6. The
requirement for the description of the graph is the following: graph must
implement <code>getindex</code> and each adjacency list must be iterable. For example, list
of lists or dictionary of lists meets the requirements.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="G = Dict(
    1 =&gt; (3, 8, 9),
    2 =&gt; (3, 8, 7),
    3 =&gt; (1, 2),
    4 =&gt; (8, 9),
    5 =&gt; (7, 8),
    6 =&gt; (2, 7),
    7 =&gt; (5, 2, 6),
    8 =&gt; (1, 2, 4, 5),
    9 =&gt; (1, 4))
"><pre>G <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(
    <span class="pl-c1">1</span> <span class="pl-k">=&gt;</span> (<span class="pl-c1">3</span>, <span class="pl-c1">8</span>, <span class="pl-c1">9</span>),
    <span class="pl-c1">2</span> <span class="pl-k">=&gt;</span> (<span class="pl-c1">3</span>, <span class="pl-c1">8</span>, <span class="pl-c1">7</span>),
    <span class="pl-c1">3</span> <span class="pl-k">=&gt;</span> (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>),
    <span class="pl-c1">4</span> <span class="pl-k">=&gt;</span> (<span class="pl-c1">8</span>, <span class="pl-c1">9</span>),
    <span class="pl-c1">5</span> <span class="pl-k">=&gt;</span> (<span class="pl-c1">7</span>, <span class="pl-c1">8</span>),
    <span class="pl-c1">6</span> <span class="pl-k">=&gt;</span> (<span class="pl-c1">2</span>, <span class="pl-c1">7</span>),
    <span class="pl-c1">7</span> <span class="pl-k">=&gt;</span> (<span class="pl-c1">5</span>, <span class="pl-c1">2</span>, <span class="pl-c1">6</span>),
    <span class="pl-c1">8</span> <span class="pl-k">=&gt;</span> (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">4</span>, <span class="pl-c1">5</span>),
    <span class="pl-c1">9</span> <span class="pl-k">=&gt;</span> (<span class="pl-c1">1</span>, <span class="pl-c1">4</span>))</pre></div>
<p>Starting from node 1:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="w0 = 1
w1 = find(G, w0)
w2 = find(G, w1)
w3 = find(G, w2)
println(w1)
println(w2)
println(w3)

# output

6
9
6
"><pre>w0 <span class="pl-k">=</span> <span class="pl-c1">1</span>
w1 <span class="pl-k">=</span> <span class="pl-c1">find</span>(G, w0)
w2 <span class="pl-k">=</span> <span class="pl-c1">find</span>(G, w1)
w3 <span class="pl-k">=</span> <span class="pl-c1">find</span>(G, w2)
<span class="pl-c1">println</span>(w1)
<span class="pl-c1">println</span>(w2)
<span class="pl-c1">println</span>(w3)

<span class="pl-c"><span class="pl-c">#</span> output</span>

<span class="pl-c1">6</span>
<span class="pl-c1">9</span>
<span class="pl-c1">6</span></pre></div>
<h2><a id="user-content-contributing-to-project" class="anchor" aria-hidden="true" href="#contributing-to-project"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing to project</h2>
<p>Any contributions are highly appreciated! If you have some good ideas how to
make this package better, feel free to open an <a href="https://travis-ci.org/ahojukka5/VertexFinder/issues" rel="nofollow">issue</a> or send me an
<a href="ahojukka5@gmail.com">email</a>.</p>
</article></div>