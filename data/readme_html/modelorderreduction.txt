<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-modelorderreductionjl" class="anchor" aria-hidden="true" href="#modelorderreductionjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ModelOrderReduction.jl</h1>
<p dir="auto"><a href="https://julialang.zulipchat.com/#narrow/stream/279055-sciml-bridged" rel="nofollow"><img src="https://camo.githubusercontent.com/667867fc71b8b3c9ed350ce154a04d38adca002ecfa38edf519284e0365ee553/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d5a756c6970266d6573736167653d6368617426636f6c6f723d393535386232266c6162656c436f6c6f723d333839383236" alt="Join the chat at https://julialang.zulipchat.com #sciml-bridged" data-canonical-src="https://img.shields.io/static/v1?label=Zulip&amp;message=chat&amp;color=9558b2&amp;labelColor=389826" style="max-width: 100%;"></a>
<a href="https://docs.sciml.ai/ModelOrderReduction/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/88037a523f970520933771e764f5abff55de9382efc91cd89dd43ef0bb49a85f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d5363694d4c2d626c75652e737667" alt="Global Docs" data-canonical-src="https://img.shields.io/badge/docs-SciML-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://codecov.io/gh/SciML/ModelOrderReduction.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4a172ebf978d030d3c0c65e1939ac869157a4e45663f68df4fbf974b2aafac05/68747470733a2f2f636f6465636f762e696f2f67682f5363694d4c2f4d6f64656c4f72646572526564756374696f6e2e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/SciML/ModelOrderReduction.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/ModelOrderReduction.jl/actions?query=workflow%3ACI"><img src="https://github.com/SciML/ModelOrderReduction.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/2496bdc13cbc9c458dfa19a108b1f333353f62917355a4cdee582bbdf8be43cf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f722532377325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor%27s%20Guide-blueviolet" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/SciMLStyle"><img src="https://camo.githubusercontent.com/3e16f03bad047817fbc07f49307817ed7919ef79c339dc75ad4ce813012c3e0b/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d636f64652532307374796c65266d6573736167653d5363694d4c26636f6c6f723d393535386232266c6162656c436f6c6f723d333839383236" alt="SciML Code Style" data-canonical-src="https://img.shields.io/static/v1?label=code%20style&amp;message=SciML&amp;color=9558b2&amp;labelColor=389826" style="max-width: 100%;"></a></p>
<p dir="auto">ModelOrderReduction.jl is a package for automatically reducing the computational complexity
of mathematical models, while keeping expected fidelity within a controlled error bound.
These methods function a submodel with a projection
where solving the smaller model gives approximation information about the full model.
MOR.jl uses <a href="https://docs.sciml.ai/ModelingToolkit/stable/" rel="nofollow">ModelingToolkit.jl</a>
as a system description and automatically transforms equations
to the subform, defining the observables to automatically lazily reconstruct the full
model on-demand in a fast and stable form.</p>
<h2 dir="auto"><a id="user-content-tutorials-and-documentation" class="anchor" aria-hidden="true" href="#tutorials-and-documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tutorials and Documentation</h2>
<p dir="auto">For information on using the package,
<a href="https://docs.sciml.ai/ModelOrderReduction/stable/" rel="nofollow">see the stable documentation</a>. Use the
<a href="https://docs.sciml.ai/ModelOrderReduction/dev/" rel="nofollow">in-development documentation</a> for the version of
the documentation, which contains the unreleased features.</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<h4 dir="auto"><a id="user-content-proper-orthogonal-decomposition-and-discrete-empirical-interpolation-method-pod-deim-on-the-fitzhugh-nagumo-system" class="anchor" aria-hidden="true" href="#proper-orthogonal-decomposition-and-discrete-empirical-interpolation-method-pod-deim-on-the-fitzhugh-nagumo-system"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Proper Orthogonal Decomposition and Discrete Empirical Interpolation Method (POD-DEIM) on the FitzHugh-Nagumo system</h4>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ModelingToolkit, MethodOfLines, DifferentialEquations, ModelOrderReduction

# firstly construct a ModelingToolkit.PDESystem for the FitzHugh-Nagumo model
@variables x t v(..) w(..)
Dx = Differential(x)
Dxx = Dx^2
Dt = Differential(t)
const L = 1.0
const ε = 0.015
const b = 0.5
const γ = 2.0
const c = 0.05
f(v) = v * (v - 0.1) * (1.0 - v)
i₀(t) = 50000.0t^3 * exp(-15.0t)
eqs = [ε * Dt(v(x, t)) ~ ε^2 * Dxx(v(x, t)) + f(v(x, t)) - w(x, t) + c,
    Dt(w(x, t)) ~ b * v(x, t) - γ * w(x, t) + c]
bcs = [v(x, 0.0) ~ 0.0, w(x, 0) ~ 0.0, Dx(v(0, t)) ~ -i₀(t), Dx(v(L, t)) ~ 0.0]
domains = [x ∈ (0.0, L), t ∈ (0.0, 14.0)]
ivs = [x, t]
dvs = [v(x, t), w(x, t)]
pde_sys = PDESystem(eqs, bcs, domains, ivs, dvs; name = Symbol(&quot;FitzHugh-Nagumo&quot;))

# transfer to a ModelingToolkit.ODESystem by automated discretization via MethodOfLines
N = 15 # equidistant discretization intervals
dx = (L - 0.0) / N
dxs = [x =&gt; dx]
discretization = MOLFiniteDifference(dxs, t)
ode_sys, tspan = symbolic_discretize(pde_sys, discretization)
simp_sys = structural_simplify(ode_sys)
ode_prob = ODEProblem(simp_sys, nothing, tspan)

# solve the full-order model to get snapshots
sol = solve(ode_prob, Tsit5())
snapshot_simpsys = Array(sol.original_sol)

# set POD and DEIM dimensions
# apply POD-DEIM to obtain the reduced-order model
pod_dim = deim_dim = 5
deim_sys = deim(simp_sys, snapshot_simpsys, pod_dim; deim_dim = deim_dim)
deim_prob = ODEProblem(deim_sys, nothing, tspan)
deim_sol = solve(deim_prob, Tsit5())

# retrieve the approximate solution of the original full-order model
sol_deim_x = deim_sol[x]
sol_deim_v = deim_sol[v(x, t)]
sol_deim_w = deim_sol[w(x, t)]"><pre><span class="pl-k">using</span> ModelingToolkit, MethodOfLines, DifferentialEquations, ModelOrderReduction

<span class="pl-c"><span class="pl-c">#</span> firstly construct a ModelingToolkit.PDESystem for the FitzHugh-Nagumo model</span>
<span class="pl-c1">@variables</span> x t <span class="pl-c1">v</span>(<span class="pl-k">..</span>) <span class="pl-c1">w</span>(<span class="pl-k">..</span>)
Dx <span class="pl-k">=</span> <span class="pl-c1">Differential</span>(x)
Dxx <span class="pl-k">=</span> Dx<span class="pl-k">^</span><span class="pl-c1">2</span>
Dt <span class="pl-k">=</span> <span class="pl-c1">Differential</span>(t)
<span class="pl-k">const</span> L <span class="pl-k">=</span> <span class="pl-c1">1.0</span>
<span class="pl-k">const</span> ε <span class="pl-k">=</span> <span class="pl-c1">0.015</span>
<span class="pl-k">const</span> b <span class="pl-k">=</span> <span class="pl-c1">0.5</span>
<span class="pl-k">const</span> γ <span class="pl-k">=</span> <span class="pl-c1">2.0</span>
<span class="pl-k">const</span> c <span class="pl-k">=</span> <span class="pl-c1">0.05</span>
<span class="pl-en">f</span>(v) <span class="pl-k">=</span> v <span class="pl-k">*</span> (v <span class="pl-k">-</span> <span class="pl-c1">0.1</span>) <span class="pl-k">*</span> (<span class="pl-c1">1.0</span> <span class="pl-k">-</span> v)
<span class="pl-en">i₀</span>(t) <span class="pl-k">=</span> <span class="pl-c1">50000.0</span>t<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span><span class="pl-c1">15.0</span>t)
eqs <span class="pl-k">=</span> [ε <span class="pl-k">*</span> <span class="pl-c1">Dt</span>(<span class="pl-c1">v</span>(x, t)) <span class="pl-k">~</span> ε<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Dxx</span>(<span class="pl-c1">v</span>(x, t)) <span class="pl-k">+</span> <span class="pl-c1">f</span>(<span class="pl-c1">v</span>(x, t)) <span class="pl-k">-</span> <span class="pl-c1">w</span>(x, t) <span class="pl-k">+</span> c,
    <span class="pl-c1">Dt</span>(<span class="pl-c1">w</span>(x, t)) <span class="pl-k">~</span> b <span class="pl-k">*</span> <span class="pl-c1">v</span>(x, t) <span class="pl-k">-</span> γ <span class="pl-k">*</span> <span class="pl-c1">w</span>(x, t) <span class="pl-k">+</span> c]
bcs <span class="pl-k">=</span> [<span class="pl-c1">v</span>(x, <span class="pl-c1">0.0</span>) <span class="pl-k">~</span> <span class="pl-c1">0.0</span>, <span class="pl-c1">w</span>(x, <span class="pl-c1">0</span>) <span class="pl-k">~</span> <span class="pl-c1">0.0</span>, <span class="pl-c1">Dx</span>(<span class="pl-c1">v</span>(<span class="pl-c1">0</span>, t)) <span class="pl-k">~</span> <span class="pl-k">-</span><span class="pl-c1">i₀</span>(t), <span class="pl-c1">Dx</span>(<span class="pl-c1">v</span>(L, t)) <span class="pl-k">~</span> <span class="pl-c1">0.0</span>]
domains <span class="pl-k">=</span> [x <span class="pl-k">∈</span> (<span class="pl-c1">0.0</span>, L), t <span class="pl-k">∈</span> (<span class="pl-c1">0.0</span>, <span class="pl-c1">14.0</span>)]
ivs <span class="pl-k">=</span> [x, t]
dvs <span class="pl-k">=</span> [<span class="pl-c1">v</span>(x, t), <span class="pl-c1">w</span>(x, t)]
pde_sys <span class="pl-k">=</span> <span class="pl-c1">PDESystem</span>(eqs, bcs, domains, ivs, dvs; name <span class="pl-k">=</span> <span class="pl-c1">Symbol</span>(<span class="pl-s"><span class="pl-pds">"</span>FitzHugh-Nagumo<span class="pl-pds">"</span></span>))

<span class="pl-c"><span class="pl-c">#</span> transfer to a ModelingToolkit.ODESystem by automated discretization via MethodOfLines</span>
N <span class="pl-k">=</span> <span class="pl-c1">15</span> <span class="pl-c"><span class="pl-c">#</span> equidistant discretization intervals</span>
dx <span class="pl-k">=</span> (L <span class="pl-k">-</span> <span class="pl-c1">0.0</span>) <span class="pl-k">/</span> N
dxs <span class="pl-k">=</span> [x <span class="pl-k">=&gt;</span> dx]
discretization <span class="pl-k">=</span> <span class="pl-c1">MOLFiniteDifference</span>(dxs, t)
ode_sys, tspan <span class="pl-k">=</span> <span class="pl-c1">symbolic_discretize</span>(pde_sys, discretization)
simp_sys <span class="pl-k">=</span> <span class="pl-c1">structural_simplify</span>(ode_sys)
ode_prob <span class="pl-k">=</span> <span class="pl-c1">ODEProblem</span>(simp_sys, <span class="pl-c1">nothing</span>, tspan)

<span class="pl-c"><span class="pl-c">#</span> solve the full-order model to get snapshots</span>
sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(ode_prob, <span class="pl-c1">Tsit5</span>())
snapshot_simpsys <span class="pl-k">=</span> <span class="pl-c1">Array</span>(sol<span class="pl-k">.</span>original_sol)

<span class="pl-c"><span class="pl-c">#</span> set POD and DEIM dimensions</span>
<span class="pl-c"><span class="pl-c">#</span> apply POD-DEIM to obtain the reduced-order model</span>
pod_dim <span class="pl-k">=</span> deim_dim <span class="pl-k">=</span> <span class="pl-c1">5</span>
deim_sys <span class="pl-k">=</span> <span class="pl-c1">deim</span>(simp_sys, snapshot_simpsys, pod_dim; deim_dim <span class="pl-k">=</span> deim_dim)
deim_prob <span class="pl-k">=</span> <span class="pl-c1">ODEProblem</span>(deim_sys, <span class="pl-c1">nothing</span>, tspan)
deim_sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(deim_prob, <span class="pl-c1">Tsit5</span>())

<span class="pl-c"><span class="pl-c">#</span> retrieve the approximate solution of the original full-order model</span>
sol_deim_x <span class="pl-k">=</span> deim_sol[x]
sol_deim_v <span class="pl-k">=</span> deim_sol[<span class="pl-c1">v</span>(x, t)]
sol_deim_w <span class="pl-k">=</span> deim_sol[<span class="pl-c1">w</span>(x, t)]</pre></div>
<p dir="auto">The following figure shows the comparison of the solutions of the 32-dimension full-order model and the POD5-DEIM5 reduced-order model.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/45696147/195765614-df9092a2-4fca-4602-bb15-81e65b2b572e.svg"><img src="https://user-images.githubusercontent.com/45696147/195765614-df9092a2-4fca-4602-bb15-81e65b2b572e.svg" alt="comparison" style="max-width: 100%;"></a></p>
</article></div>