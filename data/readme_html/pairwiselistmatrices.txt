<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-pairwiselistmatrices" class="anchor" aria-hidden="true" href="#pairwiselistmatrices"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>PairwiseListMatrices</h1>
<p>Julia 0.4: <a href="http://pkg.julialang.org/?pkg=PairwiseListMatrices" rel="nofollow"><img src="https://camo.githubusercontent.com/112f9831e22efd5cfcb7088565ae679ba84f70a5/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f50616972776973654c6973744d617472696365735f302e342e737667" alt="PairwiseListMatrices" data-canonical-src="http://pkg.julialang.org/badges/PairwiseListMatrices_0.4.svg" style="max-width:100%;"></a>
Julia 0.5: <a href="http://pkg.julialang.org/?pkg=PairwiseListMatrices" rel="nofollow"><img src="https://camo.githubusercontent.com/8e09107dd899dce5a598eb14cc41c500bba8f9c4/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f50616972776973654c6973744d617472696365735f302e352e737667" alt="PairwiseListMatrices" data-canonical-src="http://pkg.julialang.org/badges/PairwiseListMatrices_0.5.svg" style="max-width:100%;"></a><br>
Julia 0.6: <a href="http://pkg.julialang.org/?pkg=PairwiseListMatrices" rel="nofollow"><img src="https://camo.githubusercontent.com/789ab779e8774dae16c4aeae5682bd0fc8f380ff/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f50616972776973654c6973744d617472696365735f302e362e737667" alt="PairwiseListMatrices" data-canonical-src="http://pkg.julialang.org/badges/PairwiseListMatrices_0.6.svg" style="max-width:100%;"></a></p>
<p>Linux, OSX: <a href="https://travis-ci.org/diegozea/PairwiseListMatrices.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f51f5c1fd18700f518d0d43d0f7890af6af87c1b/68747470733a2f2f7472617669732d63692e6f72672f646965676f7a65612f50616972776973654c6973744d617472696365732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/diegozea/PairwiseListMatrices.jl.svg?branch=master" style="max-width:100%;"></a><br>
Windows: <a href="https://ci.appveyor.com/project/diegozea/pairwiselistmatrices-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/902620d1b230b57e2749639436a76e71ff766479/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f70393673736f35623233676938356d672f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/p96sso5b23gi85mg/branch/master?svg=true" style="max-width:100%;"></a></p>
<p>Code Coverage: <a href="https://coveralls.io/github/diegozea/PairwiseListMatrices.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/1416bbf207539004680ef7eb3ad7cb1d60c0df9d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f646965676f7a65612f50616972776973654c6973744d617472696365732e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/diegozea/PairwiseListMatrices.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a> <a href="http://codecov.io/github/diegozea/PairwiseListMatrices.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/6b04177910e608a637d2bbc2e0a909fa8d757d16/687474703a2f2f636f6465636f762e696f2f6769746875622f646965676f7a65612f50616972776973654c6973744d617472696365732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/diegozea/PairwiseListMatrices.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<p><a href="https://diegozea.github.io/PairwiseListMatrices.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a><br>
<a href="https://diegozea.github.io/PairwiseListMatrices.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="latest" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-description" class="anchor" aria-hidden="true" href="#description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Description</h2>
<p>This package allows you to use a pairwise list as a matrix:</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/diegozea/PairwiseListMatrices.jl/master/docs/src/PLM_README.png"><img src="https://raw.githubusercontent.com/diegozea/PairwiseListMatrices.jl/master/docs/src/PLM_README.png" alt="PLM" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">mutable struct</span> PairwiseListMatrix{T,diagonal,VT} <span class="pl-k">&lt;:</span> <span class="pl-c1">AbstractArray{T, 2}</span>
    list<span class="pl-k">::</span><span class="pl-c1">VT</span>
    diag<span class="pl-k">::</span><span class="pl-c1">VT</span>
    nelements<span class="pl-k">::</span><span class="pl-c1">Int</span>
    <span class="pl-k">...</span>
<span class="pl-k">end</span></pre></div>
<p><code>PairwiseListMatrix{T, diagonal, VT}</code> is a (squared) symmetric matrix that stores a <code>list</code>
of type <code>VT</code> with values of type <code>T</code> for the pairwise comparison/evaluation of <code>nelements</code>.
If <code>diagonal</code> is <code>true</code> the first element of the list is <code>1, 1</code> otherwise is <code>1, 2</code>.
If <code>diagonal</code> is <code>false</code> the diagonal values are stored in a vector on the <code>diag</code> field.</p>
<h2><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h2>
<h4><a id="user-content-space" class="anchor" aria-hidden="true" href="#space"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Space</h4>
<p>In pairwise calculations like <code>cor()</code> if results are saved as <code>PairwiseListMatrix</code> the
space is <code>N(N+1)/2</code> instead of <code>N*N</code>. This is useful to compare a large number of elements,
because you are <strong>saving ~ 50% of the memory.</strong></p>
<h4><a id="user-content-time" class="anchor" aria-hidden="true" href="#time"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Time</h4>
<p><code>PairwiseListMatrix</code> is <strong>faster than a full matrix</strong> to make operatation like <code>sum</code> and
<code>mean</code> in the whole matrix, since it is cache efficient. However it is slower than a full
matrix for reducing along dimensions.</p>
<ul>
<li><a href="http://nbviewer.ipython.org/github/diegozea/PairwiseListMatrices.jl/blob/master/test/creation_bech.ipynb" rel="nofollow">Creation benchmark</a></li>
<li><a href="http://nbviewer.ipython.org/github/diegozea/PairwiseListMatrices.jl/blob/master/test/stats_bench.ipynb" rel="nofollow">Statistics benchmark</a></li>
</ul>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Pkg.add("PairwiseListMatrices")</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PairwiseListMatrices

julia<span class="pl-k">&gt;</span> plm  <span class="pl-k">=</span> <span class="pl-c1">PairwiseListMatrix</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], <span class="pl-c1">false</span>)
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> PairwiseListMatrices<span class="pl-k">.</span>PairwiseListMatrix{Int64,<span class="pl-c1">false</span>,Array{Int64,<span class="pl-c1">1</span>}}<span class="pl-k">:</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">3</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">0</span>

julia<span class="pl-k">&gt;</span> nplm  <span class="pl-k">=</span> <span class="pl-c1">setlabels</span>(plm, [<span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>c<span class="pl-pds">"</span></span>])
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> Named PairwiseListMatrices<span class="pl-k">.</span>PairwiseListMatrix{Int64,<span class="pl-c1">false</span>,Array{Int64,<span class="pl-c1">1</span>}}
A ╲ B │ a  b  c
──────┼────────
a     │ <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">2</span>
b     │ <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">3</span>
c     │ <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">to_table</span>(nplm)
<span class="pl-c1">6</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Any,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>  <span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>  <span class="pl-c1">0</span>
 <span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>  <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>  <span class="pl-c1">1</span>
 <span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>  <span class="pl-s"><span class="pl-pds">"</span>c<span class="pl-pds">"</span></span>  <span class="pl-c1">2</span>
 <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>  <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>  <span class="pl-c1">0</span>
 <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>  <span class="pl-s"><span class="pl-pds">"</span>c<span class="pl-pds">"</span></span>  <span class="pl-c1">3</span>
 <span class="pl-s"><span class="pl-pds">"</span>c<span class="pl-pds">"</span></span>  <span class="pl-s"><span class="pl-pds">"</span>c<span class="pl-pds">"</span></span>  <span class="pl-c1">0</span>
</pre></div>
</article></div>