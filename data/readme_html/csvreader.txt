<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-csvreader" class="anchor" aria-hidden="true" href="#csvreader"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>CSVReader</h1>
<p><a href="https://travis-ci.org/tk3369/CSVReader.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7c6d793e8e8fd3e88d607d755eb74fdf06bafd00/68747470733a2f2f7472617669732d63692e6f72672f746b333336392f4353565265616465722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/tk3369/CSVReader.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/tk3369/CSVReader.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/298a1c38be6d9f75b1b46b5e41c6dfa49d1acb28/68747470733a2f2f636f6465636f762e696f2f67682f746b333336392f4353565265616465722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/tk3369/CSVReader.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/tk3369/CSVReader.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/481dd0c5d94f14bcd4a30247f91296f08314f12b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f746b333336392f4353565265616465722e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/tk3369/CSVReader.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>This is a simple CSV reader that performs well and is easy to use.
It does not have any bells and whistles.
It should work fine if the file is well formatted and free of errors.</p>
<p>Check out <a href="https://github.com/JuliaData/CSV.jl">CSV.jl</a> if you need more features
and better performance for large files.</p>
<p>Requires Julia 1.0.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p><code>] add https://github.com/tk3369/CSVReader.jl</code></p>
<h2><a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Manual</h2>
<h3><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Basic Usage</h3>
<pre><code>shell&gt; ls -l random_1000_1000.csv
-rw-r--r--  1 tomkwong  staff  19277409 Sep 15 09:42 random_1000_1000.csv

jjulia&gt; @btime CSVReader.read_csv("/Users/tomkwong/Downloads/random_1000_1000.csv");
  1.162 s (11084440 allocations: 354.86 MiB)
</code></pre>
<p>By default, the reader tries to infer column types by looking at the first row.  Of course, that's not
very accurate if you have any missing data or mixed number/string columns.  For now, it may be easier
to just specify the column parsers.</p>
<h3><a id="user-content-specify-your-own-column-types" class="anchor" aria-hidden="true" href="#specify-your-own-column-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Specify Your Own Column Types</h3>
<p>There are few predefined parsers, represented as "f", "s", or "i".<br>
You can use the <code>parsers</code> literal string to create an array of parsers.
Optionally, the parser spec takes a number for each parser as in <code>parsers"f:10"</code>.</p>
<pre><code>julia&gt; parsers"f,s,i,f:2"
5-element Array{Any,1}:
 CSVReader.parse_float64
 CSVReader.parse_string 
 CSVReader.parse_int    
 CSVReader.parse_float64
 CSVReader.parse_float64    
</code></pre>
<p>So how do you use it?</p>
<pre><code>julia&gt; df = CSVReader.read_csv("FL_insurance_sample.csv", parsers"i,s:2,f:11,s:2,i");

julia&gt; describe(df)
18×8 DataFrame
│ Row │ variable           │ mean      │ min            │ median    │ max               │ nunique │ nmissing │ eltype  │
├─────┼────────────────────┼───────────┼────────────────┼───────────┼───────────────────┼─────────┼──────────┼─────────┤
│ 1   │ policyID           │ 5.48662e5 │ 100074         │ 548525.0  │ 999971            │         │ 0        │ Int64   │
│ 2   │ statecode          │           │ FL             │           │ FL                │ 1       │ 0        │ String  │
│ 3   │ county             │           │ ALACHUA COUNTY │           │ WASHINGTON COUNTY │ 67      │ 0        │ String  │
│ 4   │ eq_site_limit      │ 731478.0  │ 0.0            │ 0.0       │ 2.16e9            │         │ 0        │ Float64 │
│ 5   │ hu_site_limit      │ 2.07435e6 │ 0.0            │ 1.92691e5 │ 2.16e9            │         │ 0        │ Float64 │
│ 6   │ fl_site_limit      │ 6.64601e5 │ 0.0            │ 0.0       │ 2.16e9            │         │ 0        │ Float64 │
│ 7   │ fr_site_limit      │ 9.91172e5 │ 0.0            │ 0.0       │ 2.16e9            │         │ 0        │ Float64 │
│ 8   │ tiv_2011           │ 2.17288e6 │ 90.0           │ 2.02105e5 │ 2.16e9            │         │ 0        │ Float64 │
│ 9   │ tiv_2012           │ 2.571e6   │ 73.37          │ 241631.0  │ 1.701e9           │         │ 0        │ Float64 │
│ 10  │ eq_site_deductible │ 778.791   │ 0.0            │ 0.0       │ 6.27377e6         │         │ 0        │ Float64 │
│ 11  │ hu_site_deductible │ 7037.98   │ 0.0            │ 0.0       │ 7.38e6            │         │ 0        │ Float64 │
│ 12  │ fl_site_deductible │ 192.453   │ 0.0            │ 0.0       │ 450000.0          │         │ 0        │ Float64 │
│ 13  │ fr_site_deductible │ 26.4836   │ 0.0            │ 0.0       │ 900000.0          │         │ 0        │ Float64 │
│ 14  │ point_latitude     │ 28.0875   │ 24.5475        │ 28.0571   │ 30.9898           │         │ 0        │ Float64 │
│ 15  │ point_longitude    │ -81.9036  │ -87.4473       │ -81.5857  │ -80.0333          │         │ 0        │ Float64 │
│ 16  │ line               │           │ Commercial     │           │ Residential       │ 2       │ 0        │ String  │
│ 17  │ construction       │           │ Masonry        │           │ Wood              │ 5       │ 0        │ String  │
│ 18  │ point_granularity  │ 1.64091   │ 1              │ 1.0       │ 7                 │         │ 0        │ Int64   │
</code></pre>
<h2><a id="user-content-to-do" class="anchor" aria-hidden="true" href="#to-do"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>To-Do</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Handle quoted numeric cells that contains comma separator</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Add unit tests</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Support reading data into vector of named tuples and implement Tables.jl</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Multi-threading for reading large files</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Infer column types by reading more rows</li>
</ul>
</article></div>