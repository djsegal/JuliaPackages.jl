<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-staggeredgridcalculus" class="anchor" aria-hidden="true" href="#staggeredgridcalculus"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>StaggeredGridCalculus</h1>
<p dir="auto"><a href="https://github.com/wsshin/StaggeredGridCalculus.jl/actions"><img src="https://github.com/wsshin/StaggeredGridCalculus.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/wsshin/StaggeredGridCalculus.jl?branch=main" rel="nofollow"><img src="https://camo.githubusercontent.com/bc6a0c38f53c5cfc701d79744d3777dcb70ce864479108141b6e7414b45959b2/687474703a2f2f636f6465636f762e696f2f6769746875622f77737368696e2f5374616767657265644772696443616c63756c75732e6a6c2f636f7665726167652e7376673f6272616e63683d6d61696e" alt="Codecov" data-canonical-src="http://codecov.io/github/wsshin/StaggeredGridCalculus.jl/coverage.svg?branch=main" style="max-width: 100%;"></a></p>
<p dir="auto"><strong>StaggeredGridCalculus</strong> is a Julia package that implements various differential and integral operators for vector fields.  The vector fields are discretized on a staggered finite-difference grid (aka Yee's grid) for 2nd-order accuracy in the result.</p>
<p dir="auto">StaggeredGridCalculus is still under development, and it is intended to be used as an API for developing vectorial PDE solvers.</p>
</article></div>