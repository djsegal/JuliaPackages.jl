<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-easytransposejl" class="anchor" aria-hidden="true" href="#easytransposejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>EasyTranspose.jl</h1>
<p dir="auto">Easily transpose arrays and vectors in Julia using <code>ᵀ</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using EasyTranspose

julia&gt; [1, 2, 3]ᵀ == [1 2 3]
true


julia&gt; A = randn(3,5);

julia&gt; (A)ᵀ
5×3 Array{Float64,2}:
  1.05165    -1.56987   -0.227402
 -0.0827963  -0.314905  -0.126144
 -0.944382    0.245913   1.43961
 -0.799775    0.571537   0.199715
  0.369704   -0.323379  -0.49699"><pre><span class="pl-k">using</span> EasyTranspose

julia<span class="pl-k">&gt;</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]ᵀ <span class="pl-k">==</span> [<span class="pl-c1">1</span> <span class="pl-c1">2</span> <span class="pl-c1">3</span>]
<span class="pl-c1">true</span>


julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">3</span>,<span class="pl-c1">5</span>);

julia<span class="pl-k">&gt;</span> (A)ᵀ
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Float64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
  <span class="pl-c1">1.05165</span>    <span class="pl-k">-</span><span class="pl-c1">1.56987</span>   <span class="pl-k">-</span><span class="pl-c1">0.227402</span>
 <span class="pl-k">-</span><span class="pl-c1">0.0827963</span>  <span class="pl-k">-</span><span class="pl-c1">0.314905</span>  <span class="pl-k">-</span><span class="pl-c1">0.126144</span>
 <span class="pl-k">-</span><span class="pl-c1">0.944382</span>    <span class="pl-c1">0.245913</span>   <span class="pl-c1">1.43961</span>
 <span class="pl-k">-</span><span class="pl-c1">0.799775</span>    <span class="pl-c1">0.571537</span>   <span class="pl-c1">0.199715</span>
  <span class="pl-c1">0.369704</span>   <span class="pl-k">-</span><span class="pl-c1">0.323379</span>  <span class="pl-k">-</span><span class="pl-c1">0.49699</span></pre></div>
<p dir="auto">This is accomplished by overloading the <code>*</code> operator.</p>
<p dir="auto">credits: Jeffrey Sarnoff, Michael K. Borregaard</p>
</article></div>