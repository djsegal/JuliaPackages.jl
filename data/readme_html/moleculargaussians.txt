<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-moleculargaussiansjl" class="anchor" aria-hidden="true" href="#moleculargaussiansjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MolecularGaussians.jl</h1>
<p dir="auto">Alignment and comparison of small molecules read from .sdf files represented as Gaussian Mixture Models.</p>
<h2 dir="auto"><a id="user-content-build-gmms-from-molecules" class="anchor" aria-hidden="true" href="#build-gmms-from-molecules"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Build GMMs from molecules</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using MolecularGaussians

julia&gt; using MolecularGraph

julia&gt; # note that by default, all standard deviations are set give Gaussians the same volume as the atom the represent, and all weights are set to 1.0

julia&gt;  mol1=sdftomol(joinpath(dirname(pathof(MolecularGaussians)), &quot;..&quot;, &quot;data&quot;, &quot;E1050_3d.sdf&quot;));       

julia&gt;  mol2=sdftomol(joinpath(dirname(pathof(MolecularGaussians)), &quot;..&quot;, &quot;data&quot;, &quot;E1103_3d.sdf&quot;));       

julia&gt; molgmm1 = MolGMM(mol1)
MolGMM from molecule with formula C18H24O8S2 with 52 Gaussians.


julia&gt; molgmm2 = MolGMM(mol2)
MolGMM from molecule with formula C18H24O5S with 48 Gaussians.


julia&gt; fmolgmm1 = FeatureMolGMM(mol1)
FeatureMolGMM from molecule with formula C18H24O8S2 with 13 Gaussians in 4 GMMs with labels:
[:acceptor, :rings, :aromaticrings, :anion]


julia&gt; fmolgmm2 = FeatureMolGMM(mol2)
FeatureMolGMM from molecule with formula C18H24O5S with 10 Gaussians in 5 GMMs with labels:
[:acceptor, :rings, :donor, :anion, :aromaticrings]"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MolecularGaussians

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MolecularGraph

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> note that by default, all standard deviations are set give Gaussians the same volume as the atom the represent, and all weights are set to 1.0</span>

julia<span class="pl-k">&gt;</span>  mol1<span class="pl-k">=</span><span class="pl-c1">sdftomol</span>(<span class="pl-c1">joinpath</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">pathof</span>(MolecularGaussians)), <span class="pl-s"><span class="pl-pds">"</span>..<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>E1050_3d.sdf<span class="pl-pds">"</span></span>));       

julia<span class="pl-k">&gt;</span>  mol2<span class="pl-k">=</span><span class="pl-c1">sdftomol</span>(<span class="pl-c1">joinpath</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">pathof</span>(MolecularGaussians)), <span class="pl-s"><span class="pl-pds">"</span>..<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>E1103_3d.sdf<span class="pl-pds">"</span></span>));       

julia<span class="pl-k">&gt;</span> molgmm1 <span class="pl-k">=</span> <span class="pl-c1">MolGMM</span>(mol1)
MolGMM from molecule with formula C18H24O8S2 with <span class="pl-c1">52</span> Gaussians.


julia<span class="pl-k">&gt;</span> molgmm2 <span class="pl-k">=</span> <span class="pl-c1">MolGMM</span>(mol2)
MolGMM from molecule with formula C18H24O5S with <span class="pl-c1">48</span> Gaussians.


julia<span class="pl-k">&gt;</span> fmolgmm1 <span class="pl-k">=</span> <span class="pl-c1">FeatureMolGMM</span>(mol1)
FeatureMolGMM from molecule with formula C18H24O8S2 with <span class="pl-c1">13</span> Gaussians <span class="pl-k">in</span> <span class="pl-c1">4</span> GMMs with labels<span class="pl-k">:</span>
[<span class="pl-c1">:acceptor</span>, <span class="pl-c1">:rings</span>, <span class="pl-c1">:aromaticrings</span>, <span class="pl-c1">:anion</span>]


julia<span class="pl-k">&gt;</span> fmolgmm2 <span class="pl-k">=</span> <span class="pl-c1">FeatureMolGMM</span>(mol2)
FeatureMolGMM from molecule with formula C18H24O5S with <span class="pl-c1">10</span> Gaussians <span class="pl-k">in</span> <span class="pl-c1">5</span> GMMs with labels<span class="pl-k">:</span>
[<span class="pl-c1">:acceptor</span>, <span class="pl-c1">:rings</span>, <span class="pl-c1">:donor</span>, <span class="pl-c1">:anion</span>, <span class="pl-c1">:aromaticrings</span>]</pre></div>
<h2 dir="auto"><a id="user-content-compute-overlap-l2-distance-and-tanimoto-similarity-between-two-gmms-prior-to-alignment" class="anchor" aria-hidden="true" href="#compute-overlap-l2-distance-and-tanimoto-similarity-between-two-gmms-prior-to-alignment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Compute overlap, L2 distance, and Tanimoto similarity between two GMMs (prior to alignment)</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; volume_overlap = overlap(molgmm1, molgmm2)
181.56864709133825

julia&gt; volume_dist = distance(molgmm1, molgmm2)
49.80738859148869

julia&gt; volume_tanimoto = tanimoto(molgmm1, molgmm2)
0.7847340220671545

julia&gt; pharm_overlap = overlap(phgmm1, phgmm2)
11.28943335408716

julia&gt; pharm_distance = distance(phgmm1, phgmm2)
10.337256543228076

julia&gt; pharm_tanimoto = tanimoto(phgmm1, phgmm2)
0.522013928515646"><pre>julia<span class="pl-k">&gt;</span> volume_overlap <span class="pl-k">=</span> <span class="pl-c1">overlap</span>(molgmm1, molgmm2)
<span class="pl-c1">181.56864709133825</span>

julia<span class="pl-k">&gt;</span> volume_dist <span class="pl-k">=</span> <span class="pl-c1">distance</span>(molgmm1, molgmm2)
<span class="pl-c1">49.80738859148869</span>

julia<span class="pl-k">&gt;</span> volume_tanimoto <span class="pl-k">=</span> <span class="pl-c1">tanimoto</span>(molgmm1, molgmm2)
<span class="pl-c1">0.7847340220671545</span>

julia<span class="pl-k">&gt;</span> pharm_overlap <span class="pl-k">=</span> <span class="pl-c1">overlap</span>(phgmm1, phgmm2)
<span class="pl-c1">11.28943335408716</span>

julia<span class="pl-k">&gt;</span> pharm_distance <span class="pl-k">=</span> <span class="pl-c1">distance</span>(phgmm1, phgmm2)
<span class="pl-c1">10.337256543228076</span>

julia<span class="pl-k">&gt;</span> pharm_tanimoto <span class="pl-k">=</span> <span class="pl-c1">tanimoto</span>(phgmm1, phgmm2)
<span class="pl-c1">0.522013928515646</span></pre></div>
<h2 dir="auto"><a id="user-content-find-transformation-to-align-gmms-maximize-overlap" class="anchor" aria-hidden="true" href="#find-transformation-to-align-gmms-maximize-overlap"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Find transformation to align GMMs (maximize overlap)</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; vol_res = tiv_gogma_align(molgmm1, molgmm2, 1, 1; maxstagnant=10000);

julia&gt; vol_res.tform.linear
3×3 AngleAxis{Float64} with indices SOneTo(3)×SOneTo(3)(0.177006, 0.831781, 0.469589, -0.296019):
  0.995185  0.058227   0.0788397
 -0.046021  0.987821  -0.148635
 -0.086534  0.144291   0.985744

julia&gt; vol_res.tform.translation
3-element SVector{3, Float64} with indices SOneTo(3):
 -1.0841450323388633
  0.13044213112141811
  0.2683821716155978

julia&gt; vol_res.upperbound
-200.92689320947045

julia&gt; overlap(vol_res.tform(molgmm1), molgmm2)
200.92689320947045

julia&gt; pharm_res = tiv_gogma_align(phgmm1, phgmm2);

julia&gt; pharm_res.tform.linear
3×3 AngleAxis{Float64} with indices SOneTo(3)×SOneTo(3)(0.189525, 0.804209, 0.541829, -0.244275):
  0.993675   0.0538222   0.0985588
 -0.0382172  0.987351   -0.153877
 -0.105594   0.149137    0.983162

julia&gt; pharm_res.tform.translation
3-element SVector{3, Float64} with indices SOneTo(3):
 -1.108662889088108
  0.10852843341382867
  0.3180677108531508"><pre>julia<span class="pl-k">&gt;</span> vol_res <span class="pl-k">=</span> <span class="pl-c1">tiv_gogma_align</span>(molgmm1, molgmm2, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>; maxstagnant<span class="pl-k">=</span><span class="pl-c1">10000</span>);

julia<span class="pl-k">&gt;</span> vol_res<span class="pl-k">.</span>tform<span class="pl-k">.</span>linear
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> AngleAxis{Float64} with indices <span class="pl-c1">SOneTo</span>(<span class="pl-c1">3</span>)<span class="pl-k">×</span><span class="pl-c1">SOneTo</span>(<span class="pl-c1">3</span>)(<span class="pl-c1">0.177006</span>, <span class="pl-c1">0.831781</span>, <span class="pl-c1">0.469589</span>, <span class="pl-k">-</span><span class="pl-c1">0.296019</span>)<span class="pl-k">:</span>
  <span class="pl-c1">0.995185</span>  <span class="pl-c1">0.058227</span>   <span class="pl-c1">0.0788397</span>
 <span class="pl-k">-</span><span class="pl-c1">0.046021</span>  <span class="pl-c1">0.987821</span>  <span class="pl-k">-</span><span class="pl-c1">0.148635</span>
 <span class="pl-k">-</span><span class="pl-c1">0.086534</span>  <span class="pl-c1">0.144291</span>   <span class="pl-c1">0.985744</span>

julia<span class="pl-k">&gt;</span> vol_res<span class="pl-k">.</span>tform<span class="pl-k">.</span>translation
<span class="pl-c1">3</span><span class="pl-k">-</span>element SVector{<span class="pl-c1">3</span>, Float64} with indices <span class="pl-c1">SOneTo</span>(<span class="pl-c1">3</span>)<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">1.0841450323388633</span>
  <span class="pl-c1">0.13044213112141811</span>
  <span class="pl-c1">0.2683821716155978</span>

julia<span class="pl-k">&gt;</span> vol_res<span class="pl-k">.</span>upperbound
<span class="pl-k">-</span><span class="pl-c1">200.92689320947045</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">overlap</span>(vol_res<span class="pl-k">.</span><span class="pl-c1">tform</span>(molgmm1), molgmm2)
<span class="pl-c1">200.92689320947045</span>

julia<span class="pl-k">&gt;</span> pharm_res <span class="pl-k">=</span> <span class="pl-c1">tiv_gogma_align</span>(phgmm1, phgmm2);

julia<span class="pl-k">&gt;</span> pharm_res<span class="pl-k">.</span>tform<span class="pl-k">.</span>linear
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> AngleAxis{Float64} with indices <span class="pl-c1">SOneTo</span>(<span class="pl-c1">3</span>)<span class="pl-k">×</span><span class="pl-c1">SOneTo</span>(<span class="pl-c1">3</span>)(<span class="pl-c1">0.189525</span>, <span class="pl-c1">0.804209</span>, <span class="pl-c1">0.541829</span>, <span class="pl-k">-</span><span class="pl-c1">0.244275</span>)<span class="pl-k">:</span>
  <span class="pl-c1">0.993675</span>   <span class="pl-c1">0.0538222</span>   <span class="pl-c1">0.0985588</span>
 <span class="pl-k">-</span><span class="pl-c1">0.0382172</span>  <span class="pl-c1">0.987351</span>   <span class="pl-k">-</span><span class="pl-c1">0.153877</span>
 <span class="pl-k">-</span><span class="pl-c1">0.105594</span>   <span class="pl-c1">0.149137</span>    <span class="pl-c1">0.983162</span>

julia<span class="pl-k">&gt;</span> pharm_res<span class="pl-k">.</span>tform<span class="pl-k">.</span>translation
<span class="pl-c1">3</span><span class="pl-k">-</span>element SVector{<span class="pl-c1">3</span>, Float64} with indices <span class="pl-c1">SOneTo</span>(<span class="pl-c1">3</span>)<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">1.108662889088108</span>
  <span class="pl-c1">0.10852843341382867</span>
  <span class="pl-c1">0.3180677108531508</span></pre></div>
<h2 dir="auto"><a id="user-content-compute-overlap-l2-distance-and-tanimoto-similarity-between-two-gmms-following-alignment" class="anchor" aria-hidden="true" href="#compute-overlap-l2-distance-and-tanimoto-similarity-between-two-gmms-following-alignment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Compute overlap, L2 distance, and Tanimoto similarity between two GMMs (following alignment)</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; volume_overlap = overlap(vol_res.tform(molgmm1), molgmm2)
200.92689320947045

julia&gt; volume_dist = distance(vol_res.tform(molgmm1), molgmm2)
11.090896355224345

julia&gt; volume_tanimoto = tanimoto(vol_res.tform(molgmm1), molgmm2)
0.9476888407430544

julia&gt; pharm_overlap = overlap(pharm_res.tform(phgmm1), phgmm2)
13.413477907601823

julia&gt; pharm_distance = distance(pharm_res.tform(phgmm1), phgmm2)
6.089167436198743

julia&gt; pharm_tanimoto = tanimoto(pharm_res.tform(phgmm1), phgmm2)
0.6877773589758506"><pre>julia<span class="pl-k">&gt;</span> volume_overlap <span class="pl-k">=</span> <span class="pl-c1">overlap</span>(vol_res<span class="pl-k">.</span><span class="pl-c1">tform</span>(molgmm1), molgmm2)
<span class="pl-c1">200.92689320947045</span>

julia<span class="pl-k">&gt;</span> volume_dist <span class="pl-k">=</span> <span class="pl-c1">distance</span>(vol_res<span class="pl-k">.</span><span class="pl-c1">tform</span>(molgmm1), molgmm2)
<span class="pl-c1">11.090896355224345</span>

julia<span class="pl-k">&gt;</span> volume_tanimoto <span class="pl-k">=</span> <span class="pl-c1">tanimoto</span>(vol_res<span class="pl-k">.</span><span class="pl-c1">tform</span>(molgmm1), molgmm2)
<span class="pl-c1">0.9476888407430544</span>

julia<span class="pl-k">&gt;</span> pharm_overlap <span class="pl-k">=</span> <span class="pl-c1">overlap</span>(pharm_res<span class="pl-k">.</span><span class="pl-c1">tform</span>(phgmm1), phgmm2)
<span class="pl-c1">13.413477907601823</span>

julia<span class="pl-k">&gt;</span> pharm_distance <span class="pl-k">=</span> <span class="pl-c1">distance</span>(pharm_res<span class="pl-k">.</span><span class="pl-c1">tform</span>(phgmm1), phgmm2)
<span class="pl-c1">6.089167436198743</span>

julia<span class="pl-k">&gt;</span> pharm_tanimoto <span class="pl-k">=</span> <span class="pl-c1">tanimoto</span>(pharm_res<span class="pl-k">.</span><span class="pl-c1">tform</span>(phgmm1), phgmm2)
<span class="pl-c1">0.6877773589758506</span></pre></div>
<p dir="auto">Compare the above with the cooresponding pre-alignment values. As expected, alignment succeeds in maximizing overlap and similarity between the models while minimizing distance.</p>
<h2 dir="auto"><a id="user-content-plot-molecules-and-their-gaussian-models" class="anchor" aria-hidden="true" href="#plot-molecules-and-their-gaussian-models"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plot molecules and their Gaussian models</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; # Plot the unaligned pharmacophore features

julia&gt; plotdrawing(drawPharmacophoreGMMs([phgmm1,phgmm2]))"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Plot the unaligned pharmacophore features</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">plotdrawing</span>(<span class="pl-c1">drawPharmacophoreGMMs</span>([phgmm1,phgmm2]))</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./assets/image/example.png"><img src="./assets/image/example.png" width="400" style="max-width: 100%;"></a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; # Plot the aligned pharmacophore features

julia&gt; plotdrawing(drawPharmacophoreGMMs([affinetransform(phgmm1, pharm_res.tform),phgmm2]))"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Plot the aligned pharmacophore features</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">plotdrawing</span>(<span class="pl-c1">drawPharmacophoreGMMs</span>([<span class="pl-c1">affinetransform</span>(phgmm1, pharm_res<span class="pl-k">.</span>tform),phgmm2]))</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./assets/image/example_aligned.png"><img src="./assets/image/example_aligned.png" width="400" style="max-width: 100%;"></a></p>
</article></div>