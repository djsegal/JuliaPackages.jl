<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-rangehelpers" class="anchor" aria-hidden="true" href="#rangehelpers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RangeHelpers</h1>
<p dir="auto"><a href="https://jw3126.github.io/RangeHelpers.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://jw3126.github.io/RangeHelpers.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/jw3126/RangeHelpers.jl/actions"><img src="https://github.com/jw3126/RangeHelpers.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://travis-ci.com/jw3126/RangeHelpers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c833f48c9161d92a9bc41063a7da47a25b9f7390729ce2b9c5b0992c1b3feac4/68747470733a2f2f7472617669732d63692e636f6d2f6a77333132362f52616e676548656c706572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/jw3126/RangeHelpers.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/jw3126/RangeHelpers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/efe7365b37df0acb90b3e79e3cfb47026951851d9bf0135847da91bb04011908/68747470733a2f2f636f6465636f762e696f2f67682f6a77333132362f52616e676548656c706572732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/jw3126/RangeHelpers.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Ever needed a range with startpoint 10, endpoint 121.7 and a step of 25?
Well that is mathematically not possible, so you need to compromise.
There are lots of options, you could relax the startpoint, endpoint or step. In the past doing this was annoying and prone to off-by-one-errors:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Base.range(10, step=25, length=round(Int, (121.7-10)/25)); # is it correct??"><pre>julia<span class="pl-k">&gt;</span> Base<span class="pl-k">.</span><span class="pl-c1">range</span>(<span class="pl-c1">10</span>, step<span class="pl-k">=</span><span class="pl-c1">25</span>, length<span class="pl-k">=</span><span class="pl-c1">round</span>(Int, (<span class="pl-c1">121.7</span><span class="pl-k">-</span><span class="pl-c1">10</span>)<span class="pl-k">/</span><span class="pl-c1">25</span>)); <span class="pl-c"><span class="pl-c">#</span> is it correct??</span></pre></div>
<p dir="auto"><a href="https://github.com/jw3126/RangeHelpers.jl">RangeHelpers.jl</a> aims to solve range construction headaches once and for all:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using RangeHelpers: range

julia&gt; using RangeHelpers

julia&gt; range(start=10, stop=121.7, step=around(25)) # compromise on step
10.0:27.925:121.7

julia&gt; range(start=10, stop=121.7, step=below(25))  # compromise step at most 25
10.0:22.34:121.7

julia&gt; range(start=10, stop=above(121.7), step=25)  # exact step, but allow bigger endpoint
10:25:135

julia&gt; anchorrange(42, start=around(10), step=25, stop=around(121.7)) # make sure 42 is on the grid
17:25:117"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> RangeHelpers<span class="pl-k">:</span> range

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> RangeHelpers

julia<span class="pl-k">&gt;</span> <span class="pl-c1">range</span>(start<span class="pl-k">=</span><span class="pl-c1">10</span>, stop<span class="pl-k">=</span><span class="pl-c1">121.7</span>, step<span class="pl-k">=</span><span class="pl-c1">around</span>(<span class="pl-c1">25</span>)) <span class="pl-c"><span class="pl-c">#</span> compromise on step</span>
<span class="pl-c1">10.0</span><span class="pl-k">:</span><span class="pl-c1">27.925</span><span class="pl-k">:</span><span class="pl-c1">121.7</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">range</span>(start<span class="pl-k">=</span><span class="pl-c1">10</span>, stop<span class="pl-k">=</span><span class="pl-c1">121.7</span>, step<span class="pl-k">=</span><span class="pl-c1">below</span>(<span class="pl-c1">25</span>))  <span class="pl-c"><span class="pl-c">#</span> compromise step at most 25</span>
<span class="pl-c1">10.0</span><span class="pl-k">:</span><span class="pl-c1">22.34</span><span class="pl-k">:</span><span class="pl-c1">121.7</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">range</span>(start<span class="pl-k">=</span><span class="pl-c1">10</span>, stop<span class="pl-k">=</span><span class="pl-c1">above</span>(<span class="pl-c1">121.7</span>), step<span class="pl-k">=</span><span class="pl-c1">25</span>)  <span class="pl-c"><span class="pl-c">#</span> exact step, but allow bigger endpoint</span>
<span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">25</span><span class="pl-k">:</span><span class="pl-c1">135</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">anchorrange</span>(<span class="pl-c1">42</span>, start<span class="pl-k">=</span><span class="pl-c1">around</span>(<span class="pl-c1">10</span>), step<span class="pl-k">=</span><span class="pl-c1">25</span>, stop<span class="pl-k">=</span><span class="pl-c1">around</span>(<span class="pl-c1">121.7</span>)) <span class="pl-c"><span class="pl-c">#</span> make sure 42 is on the grid</span>
<span class="pl-c1">17</span><span class="pl-k">:</span><span class="pl-c1">25</span><span class="pl-k">:</span><span class="pl-c1">117</span></pre></div>
<p dir="auto">See <a href="https://jw3126.github.io/RangeHelpers.jl/dev/" rel="nofollow">the documentation</a> for even more ways to make ranges.</p>
</article></div>