<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-json3jl" class="anchor" aria-hidden="true" href="#json3jl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>JSON3.jl</h1>
<p><a href="https://travis-ci.com/quinnj/JSON3.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/434680a31bbe41e09253ce6324788572249d431964623ea9bf7cfa2ab1805122/68747470733a2f2f7472617669732d63692e636f6d2f7175696e6e6a2f4a534f4e332e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/quinnj/JSON3.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/quinnj/JSON3.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4688adae70caaf5d45f1f78054372f5e85278284b0e41b4a3a37ebfbfec863e2/68747470733a2f2f636f6465636f762e696f2f67682f7175696e6e6a2f4a534f4e332e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/quinnj/JSON3.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h3><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h3>
<p><a href="https://quinnj.github.io/JSON3.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://quinnj.github.io/JSON3.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<p><em>Yet another JSON package for Julia; this one is for speed and slick struct mapping</em></p>
<h3><a id="user-content-tldr" class="anchor" aria-hidden="true" href="#tldr"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TL;DR</h3>
<h4><a id="user-content-basic" class="anchor" aria-hidden="true" href="#basic"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# builtin reading/writing
JSON3.read(json_string)
JSON3.write(x)

# custom types
JSON3.read(json_string, T; kw...)
JSON3.write(x)
"><pre><span class="pl-c"><span class="pl-c">#</span> builtin reading/writing</span>
JSON3<span class="pl-k">.</span><span class="pl-c1">read</span>(json_string)
JSON3<span class="pl-k">.</span><span class="pl-c1">write</span>(x)

<span class="pl-c"><span class="pl-c">#</span> custom types</span>
JSON3<span class="pl-k">.</span><span class="pl-c1">read</span>(json_string, T; kw<span class="pl-k">...</span>)
JSON3<span class="pl-k">.</span><span class="pl-c1">write</span>(x)</pre></div>
<h4><a id="user-content-more-complicated" class="anchor" aria-hidden="true" href="#more-complicated"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>More complicated</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# custom types: incrementally update a mutable struct
x = T()
JSON3.read!(json_string, x; kw...)
JSON3.write(x)

# read from file
json_string = read(&quot;my.json&quot;, String)
JSON3.read(json_string)
JSON3.read(json_string, T; kw...)

# write to file
open(&quot;my.json&quot;, &quot;w&quot;) do f
    JSON3.write(f, x)
    println(f)
end

# write a pretty file
open(&quot;my.json&quot;, &quot;w&quot;) do f
    JSON3.pretty(f, JSON3.write(x))
    println(f)
end

# generate a type from json
using StructTypes
JSON3.@generatetypes json_string_sample
JSON3.read(json_string, JSONTypes.Root)
"><pre><span class="pl-c"><span class="pl-c">#</span> custom types: incrementally update a mutable struct</span>
x <span class="pl-k">=</span> <span class="pl-c1">T</span>()
JSON3<span class="pl-k">.</span><span class="pl-c1">read!</span>(json_string, x; kw<span class="pl-k">...</span>)
JSON3<span class="pl-k">.</span><span class="pl-c1">write</span>(x)

<span class="pl-c"><span class="pl-c">#</span> read from file</span>
json_string <span class="pl-k">=</span> <span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">"</span>my.json<span class="pl-pds">"</span></span>, String)
JSON3<span class="pl-k">.</span><span class="pl-c1">read</span>(json_string)
JSON3<span class="pl-k">.</span><span class="pl-c1">read</span>(json_string, T; kw<span class="pl-k">...</span>)

<span class="pl-c"><span class="pl-c">#</span> write to file</span>
<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>my.json<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> f
    JSON3<span class="pl-k">.</span><span class="pl-c1">write</span>(f, x)
    <span class="pl-c1">println</span>(f)
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> write a pretty file</span>
<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>my.json<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> f
    JSON3<span class="pl-k">.</span><span class="pl-c1">pretty</span>(f, JSON3<span class="pl-k">.</span><span class="pl-c1">write</span>(x))
    <span class="pl-c1">println</span>(f)
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> generate a type from json</span>
<span class="pl-k">using</span> StructTypes
JSON3<span class="pl-k">.</span><span class="pl-c1">@generatetypes</span> json_string_sample
JSON3<span class="pl-k">.</span><span class="pl-c1">read</span>(json_string, JSONTypes<span class="pl-k">.</span>Root)</pre></div>
</article></div>