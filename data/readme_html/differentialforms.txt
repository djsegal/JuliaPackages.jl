<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-differential-forms" class="anchor" aria-hidden="true" href="#differential-forms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Differential Forms</h1>
<p dir="auto">Implement <a href="https://en.wikipedia.org/wiki/Differential_form" rel="nofollow">differential
forms</a> in Julia.</p>
<ul dir="auto">
<li><a href="https://github.com/eschnett/DifferentialForms.jl">GitHub</a>: Source code repository</li>
<li><a href="https://github.com/eschnett/DifferentialForms.jl/actions"><img src="https://github.com/eschnett/DifferentialForms.jl/workflows/CI/badge.svg" alt="GitHub CI" style="max-width: 100%;"></a></li>
</ul>
<h2 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h2>
<p dir="auto">Differential forms are an often very convenient alternative to using
<a href="https://en.wikipedia.org/wiki/Tensor_algebra" rel="nofollow">tensor algebra</a> for
multi-dimensional geometric calculations. The fundamental quantity is
an <strong><code>R</code>-form</strong> (a form with rank <code>R</code>). In <code>D</code> dimensions, <code>0 ≤ R ≤ D</code>. <code>R</code>-forms are isomorphic to totally antisymmetric rank-<code>R</code>
tensors.</p>
<p dir="auto">In addition to the usual vector operations (add, subtract, scale, dot
product), forms also offer an <a href="https://en.wikipedia.org/wiki/Exterior_algebra#Inner_product" rel="nofollow">exterior
product</a>
(or wedge product, written <code>x ∧ y</code>) that is equivalent to an
antisymmetrized tensor product, as well as a <a href="https://en.wikipedia.org/wiki/Hodge_star_operator" rel="nofollow">hodge
dual</a> (written
<code>⋆x</code>, a prefix star operator). Calculating these two operations
efficiently for arbitrary dimensions and ranks is not trivial, and is
the main contribution of this package.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">We use <code>D=3</code> dimensions.</p>
<p dir="auto">Create some forms:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using DifferentialForms

julia&gt; # Create a 0-form (a scalar):
       e = one(Form{3})
Float64⟦1.0⟧{3,0}

julia&gt; e[] == 1
true

julia&gt; collect(e) == [1]
true

julia&gt; # Create a 1-form (a vector) from a tuple:
       v = Form{3,1}((1, 2, 3))
Int64⟦1,2,3⟧{3,1}

julia&gt; v[1] == 1
true

julia&gt; v[2] == 2
true

julia&gt; v[3] == 3
true

julia&gt; collect(v) == [1, 2, 3]
true

julia&gt; # Create a 2-form (an axial vector) from a tuple:
       a = Form{3,2}((1, 2, 3))
Int64⟦1,2,3⟧{3,2}

julia&gt; a[1, 2] == 1
true

julia&gt; a[1, 3] == 2
true

julia&gt; a[2, 3] == 3
true

julia&gt; collect(a) == [1, 2, 3]
true

julia&gt; # Create a 3-form (a pseudoscalar):
       p = Form{3,3}((1,))
Int64⟦1⟧{3,3}

julia&gt; p[1, 2, 3] == 1
true

julia&gt; p[end] == 1
true

julia&gt; collect(p) == [1]
true

julia&gt; # Add, subtract, scale
       a2 = 2*a
Int64⟦2,4,6⟧{3,2}

julia&gt; a3 = a + a2
Int64⟦3,6,9⟧{3,2}

julia&gt; a3 == 3*a
true

julia&gt; # Exterior product (type \wedge&lt;tab&gt;)
       # q = wedge(v, a)
       q = v ∧ a
Float64⟦2.0⟧{3,3}

julia&gt; q == Form{3,3}((2,))
true

julia&gt; # Dot product (type \cdot&lt;tab&gt;)
       # b = dot(v, v)
       b = v ⋅ v
Float64⟦14.0⟧{3,0}

julia&gt; b == 14 * one(Form{3})
true

julia&gt; c = a ⋅ a
Float64⟦14.0⟧{3,0}

julia&gt; c == 14 * one(Form{3})
true

julia&gt; # Cross product (type \times&lt;tab&gt;)
       # w = cross(a, a)
       w = v × v
Float64⟦0.0,-0.0,0.0⟧{3,1}

julia&gt; w == zero(Form{3,1})
true"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> DifferentialForms

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Create a 0-form (a scalar):</span>
       e <span class="pl-k">=</span> <span class="pl-c1">one</span>(Form{<span class="pl-c1">3</span>})
Float64⟦<span class="pl-c1">1.0</span>⟧{<span class="pl-c1">3</span>,<span class="pl-c1">0</span>}

julia<span class="pl-k">&gt;</span> e[] <span class="pl-k">==</span> <span class="pl-c1">1</span>
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">collect</span>(e) <span class="pl-k">==</span> [<span class="pl-c1">1</span>]
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Create a 1-form (a vector) from a tuple:</span>
       v <span class="pl-k">=</span> <span class="pl-c1">Form</span><span class="pl-c1">{3,1}</span>((<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>))
Int64⟦<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>⟧{<span class="pl-c1">3</span>,<span class="pl-c1">1</span>}

julia<span class="pl-k">&gt;</span> v[<span class="pl-c1">1</span>] <span class="pl-k">==</span> <span class="pl-c1">1</span>
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> v[<span class="pl-c1">2</span>] <span class="pl-k">==</span> <span class="pl-c1">2</span>
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> v[<span class="pl-c1">3</span>] <span class="pl-k">==</span> <span class="pl-c1">3</span>
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">collect</span>(v) <span class="pl-k">==</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Create a 2-form (an axial vector) from a tuple:</span>
       a <span class="pl-k">=</span> <span class="pl-c1">Form</span><span class="pl-c1">{3,2}</span>((<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>))
Int64⟦<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>⟧{<span class="pl-c1">3</span>,<span class="pl-c1">2</span>}

julia<span class="pl-k">&gt;</span> a[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>] <span class="pl-k">==</span> <span class="pl-c1">1</span>
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> a[<span class="pl-c1">1</span>, <span class="pl-c1">3</span>] <span class="pl-k">==</span> <span class="pl-c1">2</span>
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> a[<span class="pl-c1">2</span>, <span class="pl-c1">3</span>] <span class="pl-k">==</span> <span class="pl-c1">3</span>
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">collect</span>(a) <span class="pl-k">==</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Create a 3-form (a pseudoscalar):</span>
       p <span class="pl-k">=</span> <span class="pl-c1">Form</span><span class="pl-c1">{3,3}</span>((<span class="pl-c1">1</span>,))
Int64⟦<span class="pl-c1">1</span>⟧{<span class="pl-c1">3</span>,<span class="pl-c1">3</span>}

julia<span class="pl-k">&gt;</span> p[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>] <span class="pl-k">==</span> <span class="pl-c1">1</span>
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> p[<span class="pl-c1">end</span>] <span class="pl-k">==</span> <span class="pl-c1">1</span>
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">collect</span>(p) <span class="pl-k">==</span> [<span class="pl-c1">1</span>]
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Add, subtract, scale</span>
       a2 <span class="pl-k">=</span> <span class="pl-c1">2</span><span class="pl-k">*</span>a
Int64⟦<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>⟧{<span class="pl-c1">3</span>,<span class="pl-c1">2</span>}

julia<span class="pl-k">&gt;</span> a3 <span class="pl-k">=</span> a <span class="pl-k">+</span> a2
Int64⟦<span class="pl-c1">3</span>,<span class="pl-c1">6</span>,<span class="pl-c1">9</span>⟧{<span class="pl-c1">3</span>,<span class="pl-c1">2</span>}

julia<span class="pl-k">&gt;</span> a3 <span class="pl-k">==</span> <span class="pl-c1">3</span><span class="pl-k">*</span>a
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Exterior product (type \wedge&lt;tab&gt;)</span>
       <span class="pl-c"><span class="pl-c">#</span> q = wedge(v, a)</span>
       q <span class="pl-k">=</span> v ∧ a
Float64⟦<span class="pl-c1">2.0</span>⟧{<span class="pl-c1">3</span>,<span class="pl-c1">3</span>}

julia<span class="pl-k">&gt;</span> q <span class="pl-k">==</span> <span class="pl-c1">Form</span><span class="pl-c1">{3,3}</span>((<span class="pl-c1">2</span>,))
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Dot product (type \cdot&lt;tab&gt;)</span>
       <span class="pl-c"><span class="pl-c">#</span> b = dot(v, v)</span>
       b <span class="pl-k">=</span> v <span class="pl-k">⋅</span> v
Float64⟦<span class="pl-c1">14.0</span>⟧{<span class="pl-c1">3</span>,<span class="pl-c1">0</span>}

julia<span class="pl-k">&gt;</span> b <span class="pl-k">==</span> <span class="pl-c1">14</span> <span class="pl-k">*</span> <span class="pl-c1">one</span>(Form{<span class="pl-c1">3</span>})
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> c <span class="pl-k">=</span> a <span class="pl-k">⋅</span> a
Float64⟦<span class="pl-c1">14.0</span>⟧{<span class="pl-c1">3</span>,<span class="pl-c1">0</span>}

julia<span class="pl-k">&gt;</span> c <span class="pl-k">==</span> <span class="pl-c1">14</span> <span class="pl-k">*</span> <span class="pl-c1">one</span>(Form{<span class="pl-c1">3</span>})
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Cross product (type \times&lt;tab&gt;)</span>
       <span class="pl-c"><span class="pl-c">#</span> w = cross(a, a)</span>
       w <span class="pl-k">=</span> v <span class="pl-k">×</span> v
Float64⟦<span class="pl-c1">0.0</span>,<span class="pl-k">-</span><span class="pl-c1">0.0</span>,<span class="pl-c1">0.0</span>⟧{<span class="pl-c1">3</span>,<span class="pl-c1">1</span>}

julia<span class="pl-k">&gt;</span> w <span class="pl-k">==</span> <span class="pl-c1">zero</span>(Form{<span class="pl-c1">3</span>,<span class="pl-c1">1</span>})
<span class="pl-c1">true</span></pre></div>
<h2 dir="auto"><a id="user-content-related-work" class="anchor" aria-hidden="true" href="#related-work"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related work</h2>
<p dir="auto">This package draws inspiration from
<a href="https://github.com/chakravala/Grassmann.jl">Grassmann.jl</a>, which
includes similar functionality.</p>
<p dir="auto"><a href="https://github.com/digitaldomain/DiscreteDifferentialGeometry.jl">DiscreteDifferentialGeometry.jl</a>
also provides similar functionality, but only for two-dimensional
meshes.</p>
</article></div>