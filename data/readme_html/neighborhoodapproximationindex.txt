<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-similarity-search-indexes-based-on-neighborhood-approximation" class="anchor" aria-hidden="true" href="#similarity-search-indexes-based-on-neighborhood-approximation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Similarity Search Indexes based on Neighborhood Approximation</h1>
<p><a href="https://sadit.github.io/NeighborhoodApproximationIndex.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://sadit.github.io/NeighborhoodApproximationIndex.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/sadit/NeighborhoodApproximationIndex.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8a768a8073681ee7ca2a8b8e0dc29c4db71f3e45cc33f563d4844ae07b0a5f8d/68747470733a2f2f7472617669732d63692e636f6d2f73616469742f4e65696768626f72686f6f64417070726f78696d6174696f6e496e6465782e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/sadit/NeighborhoodApproximationIndex.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://github.com/sadit/NeighborhoodApproximationIndex.jl/actions"><img src="https://github.com/sadit/NeighborhoodApproximationIndex.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/sadit/NeighborhoodApproximationIndex.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6d0f326960f78c7fe5729650bf53dd453a11a0b31ebe7d4d9b3d3baebddf5187/68747470733a2f2f636f6465636f762e696f2f67682f73616469742f4e65696768626f72686f6f64417070726f78696d6174696f6e496e6465782e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/sadit/NeighborhoodApproximationIndex.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;NeighborhoodApproximation&quot;)

"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>NeighborhoodApproximation<span class="pl-pds">"</span></span>)
</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using SimilaritySearch
using NeighborhoodApproximationIndex
function create_dataset(n, dim)
    [rand(Float32, dim) for i in 1:n]
end

X = create_dataset(10_000, 8)
queries = create_dataset(100, 8)
napp = fit(DeloneInvIndex, l2_distance, X; numcenters=128, initial=:rand, maxiters=3, region_expansion=3)
"><pre><span class="pl-k">using</span> SimilaritySearch
<span class="pl-k">using</span> NeighborhoodApproximationIndex
<span class="pl-k">function</span> <span class="pl-en">create_dataset</span>(n, dim)
    [<span class="pl-c1">rand</span>(Float32, dim) <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>n]
<span class="pl-k">end</span>

X <span class="pl-k">=</span> <span class="pl-c1">create_dataset</span>(<span class="pl-c1">10_000</span>, <span class="pl-c1">8</span>)
queries <span class="pl-k">=</span> <span class="pl-c1">create_dataset</span>(<span class="pl-c1">100</span>, <span class="pl-c1">8</span>)
napp <span class="pl-k">=</span> <span class="pl-c1">fit</span>(DeloneInvIndex, l2_distance, X; numcenters<span class="pl-k">=</span><span class="pl-c1">128</span>, initial<span class="pl-k">=</span><span class="pl-c1">:rand</span>, maxiters<span class="pl-k">=</span><span class="pl-c1">3</span>, region_expansion<span class="pl-k">=</span><span class="pl-c1">3</span>)</pre></div>
<p>See examples at <a href="https://github.com/sadit/NeighborhoodApproximationIndex.jl/tree/main/examples">examples directory</a> of this repository. These are <a href="https://github.com/fonsp/Pluto.jl">Pluto.jl</a> notebooks, and probably you must install it in you wanna take a look.</p>
<h2><a id="user-content-about-the-methods-in-this-package" class="anchor" aria-hidden="true" href="#about-the-methods-in-this-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>About the methods in this package</h2>
<p>This package contains some implementations of approximate similarity search methods based on neighborhood approximation, similar to those found in</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="Edgar Chavez, Mario Graff, Gonzalo Navarro, Eric S. Tellez:
Near neighbor searching with K nearest references. Inf. Syst. 51: 43-61 (2015)

Eric S. Tellez, Edgar Chavez, Gonzalo Navarro: Succinct nearest neighbor search. Inf. Syst. 38(7): 1019-1030 (2013)

Eric S. Tellez, Edgar Chavez, Gonzalo Navarro: Succinct nearest neighbor search. SISAP 2011: 33-40 (2011)

"><pre><code>Edgar Chavez, Mario Graff, Gonzalo Navarro, Eric S. Tellez:
Near neighbor searching with K nearest references. Inf. Syst. 51: 43-61 (2015)

Eric S. Tellez, Edgar Chavez, Gonzalo Navarro: Succinct nearest neighbor search. Inf. Syst. 38(7): 1019-1030 (2013)

Eric S. Tellez, Edgar Chavez, Gonzalo Navarro: Succinct nearest neighbor search. SISAP 2011: 33-40 (2011)

</code></pre></div>
<p>I am rewritting some of this methods in Julia. Therefore, by now, you will not find a complete set of features (like compact datastructures) or a broad exploration in the distance functions in the mapped space. The precise implementations with compression can be found in the old C# library <a href="https://github.com/sadit/natix">natix</a>.</p>
</article></div>