<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-intervallapper" class="anchor" aria-hidden="true" href="#intervallapper"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>IntervalLapper</h1>
<p>This is a Julia port of my Rust
<a href="https://docs.rs/rust-lapper/%3E" rel="nofollow">port</a> of
<a href="https://github.com/brentp/nim-lapper">nim-lapper</a>.</p>
<h2><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Install</h2>
<pre><code>]
add IntervalLapper
</code></pre>
<h2><a id="user-content-docs" class="anchor" aria-hidden="true" href="#docs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Docs</h2>
<p>See the docs for the rust-lapper project. The API's are essentially the
same. The version 5.0.0 release is virtually identical at the time of
writing this readme. <a href="https://docs.rs/rust-lapper/" rel="nofollow">https://docs.rs/rust-lapper/</a></p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Test
<span class="pl-k">import</span> IntervalLapper
<span class="pl-k">const</span> IL <span class="pl-k">=</span> IntervalLapper
<span class="pl-k">const</span> Iv <span class="pl-k">=</span> IL<span class="pl-k">.</span>Interval{Int}

data <span class="pl-k">=</span> <span class="pl-c1">map</span>(x <span class="pl-k">-&gt;</span> <span class="pl-c1">Iv</span>(x, x <span class="pl-k">+</span> <span class="pl-c1">15</span>, <span class="pl-c1">0</span>), <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">100</span>)
lapper <span class="pl-k">=</span> IL<span class="pl-k">.</span><span class="pl-c1">Lapper</span>(data)

cursor <span class="pl-k">=</span> <span class="pl-c1">Ref</span>(<span class="pl-c1">1</span>)
e1 <span class="pl-k">=</span> <span class="pl-c1">Iv</span>(<span class="pl-c1">0</span>, <span class="pl-c1">15</span>, <span class="pl-c1">0</span>)
e2 <span class="pl-k">=</span> <span class="pl-c1">Iv</span>(<span class="pl-c1">10</span>, <span class="pl-c1">25</span>, <span class="pl-c1">0</span>)

<span class="pl-c1">@test</span> [e1, e2] <span class="pl-k">==</span> <span class="pl-c1">collect</span>(IL<span class="pl-k">.</span><span class="pl-c1">find</span>(lapper, <span class="pl-c1">8</span>, <span class="pl-c1">20</span>))
<span class="pl-c1">@test</span> [e1, e2] <span class="pl-k">==</span> <span class="pl-c1">collect</span>(IL<span class="pl-k">.</span><span class="pl-c1">seek</span>(lapper, <span class="pl-c1">8</span>, <span class="pl-c1">20</span>, cursor))
<span class="pl-c1">@test</span> <span class="pl-c1">2</span> <span class="pl-k">==</span> <span class="pl-c1">length</span>(<span class="pl-c1">collect</span>(IL<span class="pl-k">.</span><span class="pl-c1">find</span>(lapper, <span class="pl-c1">8</span>, <span class="pl-c1">20</span>)))
bits <span class="pl-k">=</span> IL<span class="pl-k">.</span><span class="pl-c1">Bits</span>(lapper<span class="pl-k">.</span>intervals)
<span class="pl-c1">@test</span> IL<span class="pl-k">.</span><span class="pl-c1">count</span>(bits, <span class="pl-c1">8</span>, <span class="pl-c1">20</span>) <span class="pl-k">==</span> <span class="pl-c1">length</span>(<span class="pl-c1">collect</span>(IL<span class="pl-k">.</span><span class="pl-c1">find</span>(lapper, <span class="pl-c1">8</span>, <span class="pl-c1">20</span>)))</pre></div>
<h2><a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Benchmarks</h2>
<p>TBD. Anecdotally seems speedy, but no optimizations have been done. I'm
sure there some funkiness with type instability or missed broadcasting
opportunities.</p>
</article></div>