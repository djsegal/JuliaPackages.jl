<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-portaudiojl" class="anchor" aria-hidden="true" href="#portaudiojl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PortAudio.jl</h1>
<p dir="auto"><a href="https://JuliaAudio.github.io/PortAudio.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaAudio/PortAudio.jl/actions/workflows/Tests.yml"><img src="https://github.com/JuliaAudio/PortAudio.jl/actions/workflows/Tests.yml/badge.svg" alt="Tests" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaAudio/PortAudio.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2d7046aeef3d77cac948b9dd6c14622ac0464a43ee1b4298e968bd2aaea888e1/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961417564696f2f506f7274417564696f2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d6d6744416938756c5059" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaAudio/PortAudio.jl/branch/master/graph/badge.svg?token=mgDAi8ulPY" style="max-width: 100%;"></a></p>
<p dir="auto">PortAudio.jl is a wrapper for <a href="http://www.portaudio.com/" rel="nofollow">libportaudio</a>, which gives cross-platform access to audio devices. It is compatible with the types defined in <a href="https://github.com/JuliaAudio/SampledSignals.jl">SampledSignals.jl</a>. It provides a <code>PortAudioStream</code> type, which can be read from and written to.</p>
<h2 dir="auto"><a id="user-content-opening-a-stream" class="anchor" aria-hidden="true" href="#opening-a-stream"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Opening a stream</h2>
<p dir="auto">The easiest way to open a source or sink is with the default <code>PortAudioStream()</code> constructor,
which will open a 2-in, 2-out stream to your system's default device(s).
The constructor can also take the input and output channel counts as positional arguments,
or a variety of other keyword arguments.
If named keyword arguments <code>latency</code> or <code>samplerate</code> are unspecified, then PortAudio will use device defaults.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="PortAudioStream(inchans=2, outchans=2; eltype=Float32, samplerate=48000, latency=0.1)"><pre><span class="pl-c1">PortAudioStream</span>(inchans<span class="pl-k">=</span><span class="pl-c1">2</span>, outchans<span class="pl-k">=</span><span class="pl-c1">2</span>; eltype<span class="pl-k">=</span>Float32, samplerate<span class="pl-k">=</span><span class="pl-c1">48000</span>, latency<span class="pl-k">=</span><span class="pl-c1">0.1</span>)</pre></div>
<p dir="auto">You can open a specific device by adding it as the first argument, either as a <code>PortAudioDevice</code> instance or by name. You can also give separate names or devices if you want different input and output devices</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="PortAudioStream(device::PortAudioDevice, args...; kwargs...)
PortAudioStream(devname::AbstractString, args...; kwargs...)"><pre><span class="pl-c1">PortAudioStream</span>(device<span class="pl-k">::</span><span class="pl-c1">PortAudioDevice</span>, args<span class="pl-k">...</span>; kwargs<span class="pl-k">...</span>)
<span class="pl-c1">PortAudioStream</span>(devname<span class="pl-k">::</span><span class="pl-c1">AbstractString</span>, args<span class="pl-k">...</span>; kwargs<span class="pl-k">...</span>)</pre></div>
<p dir="auto">You can get a list of your system's devices with the <code>PortAudio.devices()</code> function:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; PortAudio.devices()
14-element Vector{PortAudio.PortAudioDevice}:
 &quot;sof-hda-dsp: - (hw:0,0)&quot; 2→2
 &quot;sof-hda-dsp: - (hw:0,3)&quot; 0→2
 &quot;sof-hda-dsp: - (hw:0,4)&quot; 0→2
 &quot;sof-hda-dsp: - (hw:0,5)&quot; 0→2
 ⋮
 &quot;upmix&quot; 8→8
 &quot;vdownmix&quot; 6→6
 &quot;dmix&quot; 0→2
 &quot;default&quot; 32→32"><pre>julia<span class="pl-k">&gt;</span> PortAudio<span class="pl-k">.</span><span class="pl-c1">devices</span>()
<span class="pl-c1">14</span><span class="pl-k">-</span>element Vector{PortAudio<span class="pl-k">.</span>PortAudioDevice}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>sof-hda-dsp: - (hw:0,0)<span class="pl-pds">"</span></span> <span class="pl-c1">2</span>→<span class="pl-c1">2</span>
 <span class="pl-s"><span class="pl-pds">"</span>sof-hda-dsp: - (hw:0,3)<span class="pl-pds">"</span></span> <span class="pl-c1">0</span>→<span class="pl-c1">2</span>
 <span class="pl-s"><span class="pl-pds">"</span>sof-hda-dsp: - (hw:0,4)<span class="pl-pds">"</span></span> <span class="pl-c1">0</span>→<span class="pl-c1">2</span>
 <span class="pl-s"><span class="pl-pds">"</span>sof-hda-dsp: - (hw:0,5)<span class="pl-pds">"</span></span> <span class="pl-c1">0</span>→<span class="pl-c1">2</span>
 ⋮
 <span class="pl-s"><span class="pl-pds">"</span>upmix<span class="pl-pds">"</span></span> <span class="pl-c1">8</span>→<span class="pl-c1">8</span>
 <span class="pl-s"><span class="pl-pds">"</span>vdownmix<span class="pl-pds">"</span></span> <span class="pl-c1">6</span>→<span class="pl-c1">6</span>
 <span class="pl-s"><span class="pl-pds">"</span>dmix<span class="pl-pds">"</span></span> <span class="pl-c1">0</span>→<span class="pl-c1">2</span>
 <span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span> <span class="pl-c1">32</span>→<span class="pl-c1">32</span></pre></div>
<h2 dir="auto"><a id="user-content-reading-and-writing" class="anchor" aria-hidden="true" href="#reading-and-writing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reading and Writing</h2>
<p dir="auto">The <code>PortAudioStream</code> type has <code>source</code> and <code>sink</code> fields which are of type <code>PortAudioSource &lt;: SampleSource</code> and <code>PortAudioSink &lt;: SampleSink</code>, respectively. are subtypes of <code>SampleSource</code> and <code>SampleSink</code>, respectively (from <a href="https://github.com/JuliaAudio/SampledSignals.jl">SampledSignals.jl</a>). This means they support all the stream and buffer features defined there. For example, if you load SampledSignals with <code>using SampledSignals</code> you can read 5 seconds to a buffer with <code>buf = read(stream.source, 5s)</code>, regardless of the sample rate of the device.</p>
<p dir="auto">PortAudio.jl also provides convenience wrappers around the <code>PortAudioStream</code> type so you can read and write to it directly, e.g. <code>write(stream, stream)</code> will set up a loopback that will read from the input and play it back on the output.</p>
<h2 dir="auto"><a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Debugging</h2>
<p dir="auto">If you are experiencing issues and wish to view detailed logging and debug information, set</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="ENV[&quot;JULIA_DEBUG&quot;] = :PortAudio"><pre class="notranslate"><code>ENV["JULIA_DEBUG"] = :PortAudio
</code></pre></div>
<p dir="auto">before using the package.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<h3 dir="auto"><a id="user-content-set-up-an-audio-pass-through-from-microphone-to-speaker" class="anchor" aria-hidden="true" href="#set-up-an-audio-pass-through-from-microphone-to-speaker"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Set up an audio pass-through from microphone to speaker</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="stream = PortAudioStream(2, 2)
try
    # cancel with Ctrl-C
    write(stream, stream)
finally
    close(stream)
end"><pre>stream <span class="pl-k">=</span> <span class="pl-c1">PortAudioStream</span>(<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)
<span class="pl-k">try</span>
    <span class="pl-c"><span class="pl-c">#</span> cancel with Ctrl-C</span>
    <span class="pl-c1">write</span>(stream, stream)
<span class="pl-k">finally</span>
    <span class="pl-c1">close</span>(stream)
<span class="pl-k">end</span></pre></div>
<h3 dir="auto"><a id="user-content-use-do-syntax-to-auto-close-the-stream" class="anchor" aria-hidden="true" href="#use-do-syntax-to-auto-close-the-stream"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Use <code>do</code> syntax to auto-close the stream</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="PortAudioStream(2, 2) do stream
    write(stream, stream)
end"><pre><span class="pl-c1">PortAudioStream</span>(<span class="pl-c1">2</span>, <span class="pl-c1">2</span>) <span class="pl-k">do</span> stream
    <span class="pl-c1">write</span>(stream, stream)
<span class="pl-k">end</span></pre></div>
<h3 dir="auto"><a id="user-content-open-your-built-in-microphone-and-speaker-by-name" class="anchor" aria-hidden="true" href="#open-your-built-in-microphone-and-speaker-by-name"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Open your built-in microphone and speaker by name</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="PortAudioStream(&quot;default&quot;, &quot;default&quot;) do stream
    write(stream, stream)
end"><pre><span class="pl-c1">PortAudioStream</span>(<span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> stream
    <span class="pl-c1">write</span>(stream, stream)
<span class="pl-k">end</span></pre></div>
<h3 dir="auto"><a id="user-content-record-10-seconds-of-audio-and-save-to-an-ogg-file" class="anchor" aria-hidden="true" href="#record-10-seconds-of-audio-and-save-to-an-ogg-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Record 10 seconds of audio and save to an ogg file</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; import LibSndFile # must be in Manifest for FileIO.save to work

julia&gt; using PortAudio: PortAudioStream

julia&gt; using SampledSignals: s

julia&gt; using FileIO: save

julia&gt; stream = PortAudioStream(1, 0) # default input (e.g., built-in microphone)
PortAudioStream{Float32}
  Samplerate: 44100.0Hz
  2 channel source: &quot;default&quot;

julia&gt; buf = read(stream, 10s)
480000-frame, 2-channel SampleBuf{Float32, 2, SIUnits.SIQuantity{Int64,0,0,-1,0,0,0,0,0,0}}
10.0 s at 48000 s⁻¹
▁▄▂▃▅▃▂▄▃▂▂▁▁▂▂▁▁▄▃▁▁▄▂▁▁▁▄▃▁▁▃▃▁▁▁▁▁▁▁▁▄▄▄▄▄▂▂▂▁▃▃▁▃▄▂▁▁▁▁▃▃▂▁▁▁▁▁▁▃▃▂▂▁▃▃▃▁▁▁▁
▁▄▂▃▅▃▂▄▃▂▂▁▁▂▂▁▁▄▃▁▁▄▂▁▁▁▄▃▁▁▃▃▁▁▁▁▁▁▁▁▄▄▄▄▄▂▂▂▁▃▃▁▃▄▂▁▁▁▁▃▃▂▁▁▁▁▁▁▃▃▂▂▁▃▃▃▁▁▁▁

julia&gt; close(stream)

julia&gt; save(joinpath(homedir(), &quot;Desktop&quot;, &quot;myvoice.ogg&quot;), buf)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> LibSndFile <span class="pl-c"><span class="pl-c">#</span> must be in Manifest for FileIO.save to work</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PortAudio<span class="pl-k">:</span> PortAudioStream

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SampledSignals<span class="pl-k">:</span> s

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FileIO<span class="pl-k">:</span> save

julia<span class="pl-k">&gt;</span> stream <span class="pl-k">=</span> <span class="pl-c1">PortAudioStream</span>(<span class="pl-c1">1</span>, <span class="pl-c1">0</span>) <span class="pl-c"><span class="pl-c">#</span> default input (e.g., built-in microphone)</span>
PortAudioStream{Float32}
  Samplerate<span class="pl-k">:</span> <span class="pl-c1">44100.0</span>Hz
  <span class="pl-c1">2</span> channel source<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>default<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> buf <span class="pl-k">=</span> <span class="pl-c1">read</span>(stream, <span class="pl-c1">10</span>s)
<span class="pl-c1">480000</span><span class="pl-k">-</span>frame, <span class="pl-c1">2</span><span class="pl-k">-</span>channel SampleBuf{Float32, <span class="pl-c1">2</span>, SIUnits<span class="pl-k">.</span>SIQuantity{Int64,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>}}
<span class="pl-c1">10.0</span> s at <span class="pl-c1">48000</span> s⁻¹
▁▄▂▃▅▃▂▄▃▂▂▁▁▂▂▁▁▄▃▁▁▄▂▁▁▁▄▃▁▁▃▃▁▁▁▁▁▁▁▁▄▄▄▄▄▂▂▂▁▃▃▁▃▄▂▁▁▁▁▃▃▂▁▁▁▁▁▁▃▃▂▂▁▃▃▃▁▁▁▁
▁▄▂▃▅▃▂▄▃▂▂▁▁▂▂▁▁▄▃▁▁▄▂▁▁▁▄▃▁▁▃▃▁▁▁▁▁▁▁▁▄▄▄▄▄▂▂▂▁▃▃▁▃▄▂▁▁▁▁▃▃▂▁▁▁▁▁▁▃▃▂▂▁▃▃▃▁▁▁▁

julia<span class="pl-k">&gt;</span> <span class="pl-c1">close</span>(stream)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">save</span>(<span class="pl-c1">joinpath</span>(<span class="pl-c1">homedir</span>(), <span class="pl-s"><span class="pl-pds">"</span>Desktop<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>myvoice.ogg<span class="pl-pds">"</span></span>), buf)</pre></div>
<h3 dir="auto"><a id="user-content-play-an-audio-signal-through-the-default-sound-output-device" class="anchor" aria-hidden="true" href="#play-an-audio-signal-through-the-default-sound-output-device"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Play an audio signal through the default sound output device</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using PortAudio, SampledSignals
S = 8192 # sampling rate (samples / second)
x = cos.(2pi*(1:2S)*440/S) # A440 tone for 2 seconds
PortAudioStream(0, 2; samplerate=S) do stream
    write(stream, x)
end"><pre><span class="pl-k">using</span> PortAudio, SampledSignals
S <span class="pl-k">=</span> <span class="pl-c1">8192</span> <span class="pl-c"><span class="pl-c">#</span> sampling rate (samples / second)</span>
x <span class="pl-k">=</span> <span class="pl-c1">cos</span>.(<span class="pl-c1">2pi</span><span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>S)<span class="pl-k">*</span><span class="pl-c1">440</span><span class="pl-k">/</span>S) <span class="pl-c"><span class="pl-c">#</span> A440 tone for 2 seconds</span>
<span class="pl-c1">PortAudioStream</span>(<span class="pl-c1">0</span>, <span class="pl-c1">2</span>; samplerate<span class="pl-k">=</span>S) <span class="pl-k">do</span> stream
    <span class="pl-c1">write</span>(stream, x)
<span class="pl-k">end</span></pre></div>
</article></div>