<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="" class="anchor" aria-hidden="true" href="#"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/cep_text.svg"><img src="docs/src/assets/cep_text.svg" alt="CapacityExpansion logo" style="max-width:100%;"></a></h1>
<p><a href="https://YoungFaithful.github.io/CapacityExpansion.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://YoungFaithful.github.io/CapacityExpansion.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/YoungFaithful/CapacityExpansion.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f985efb256f6b98ebe39f4d87987be6b9ae16485/68747470733a2f2f7472617669732d63692e636f6d2f596f756e67466169746866756c2f4361706163697479457870616e73696f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/YoungFaithful/CapacityExpansion.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://github.com/YoungFaithful/CapacityExpansion.jl">CapacityExpansion</a> is a <a href="https://www.juliaopt.com" rel="nofollow">julia</a> implementation of a input-data-scaling capacity expansion modeling framework.</p>
<p>The main purpose of the package is providing an extensible, simple-to-use generation and transmission capacity extension model that allows to address a diverse set of research questions in the area of energy systems planning. The secondary purposes are:</p>
<ol>
<li>Providing a simple process to integrate (clustered) time-series input data, geographical input data, cost input data, and technology input data.</li>
<li>Providing a model configuration, a modular model setup and model optimization.</li>
<li>Providing an interface between the optimization result and further analysis.</li>
</ol>
<table>
<thead>
<tr>
<th>Model Information</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Model class</td>
<td>Capacity Expansion Problem</td>
</tr>
<tr>
<td>Model type</td>
<td>Optimization, Linear optimization model input-data depending energy system</td>
</tr>
<tr>
<td>Carriers</td>
<td>Electricity, Hydrogen, ...</td>
</tr>
<tr>
<td>Technologies</td>
<td>dispathable and non-dispathable Generation, Conversion, Storage (seasonal), Transmission</td>
</tr>
<tr>
<td>Decisions</td>
<td>investment and dispatch</td>
</tr>
<tr>
<td>Objective</td>
<td>Total system cost</td>
</tr>
<tr>
<td>Variables</td>
<td>Cost, Capacities, Generation, Storage, Lost-Load, Lost-Emissions</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Input Data Depending</th>
<th>Provided Input Data</th>
</tr>
</thead>
<tbody>
<tr>
<td>Regions</td>
<td>California, USA (single and multi-node) and Germany, Europe (single and multi-node)</td>
</tr>
<tr>
<td>Geographic Resolution</td>
<td>aggregated regions</td>
</tr>
<tr>
<td>Time resolution</td>
<td>hourly</td>
</tr>
<tr>
<td>Network coverage</td>
<td>transmission, DCOPF load flow</td>
</tr>
</tbody>
</table>
<p>The package uses <a href="https://github.com/holgerteichgraeber/TimeSeriesClustering.jl">TimeSeriesClustering</a> as a basis for its time-series aggregation.</p>
<p>This package is developed by Elias Kuepper <a href="https://github.com/youngfaithful">@YoungFaithful</a> and Holger Teichgraeber <a href="https://github.com/holgerteichgraeber">@holgerteichgraeber</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>This package runs under julia v1.0 and higher.
It depends on:</p>
<ul>
<li><code>JuMP.jl</code> - for the modeling environment</li>
<li><code>CSV.jl</code> - for handling of <code>.csv</code>-Files</li>
<li><code>DataFrames.jl</code> - for handling of tables</li>
<li><code>StatsBase.jl</code> - for handling of basic</li>
<li><code>JLD2</code> - for saving your result data</li>
<li><code>FileIO</code> - for file accessing</li>
<li><code>TimeSeriesClustering.jl</code> - for time-series data</li>
</ul>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CapacityExpansion<span class="pl-pds">"</span></span>)</pre></div>
<p>A solver is required to run an optimization as explained in section <a href="@ref">Solver</a>.
Install e.g.:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Clp<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-example-workflow" class="anchor" aria-hidden="true" href="#example-workflow"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example Workflow</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> CapacityExpansion
<span class="pl-k">using</span> Clp
optimizer<span class="pl-k">=</span>Clp<span class="pl-k">.</span>Optimizer <span class="pl-c"><span class="pl-c">#</span> select optimizer</span>

<span class="pl-c"><span class="pl-c">#</span># LOAD DATA ##</span>
<span class="pl-c"><span class="pl-c">#</span> laod ts-data</span>
ts_input_data <span class="pl-k">=</span> <span class="pl-c1">load_timeseries_data_provided</span>(<span class="pl-s"><span class="pl-pds">"</span>GER_1<span class="pl-pds">"</span></span>; T<span class="pl-k">=</span><span class="pl-c1">24</span>, years<span class="pl-k">=</span>[<span class="pl-c1">2016</span>])
<span class="pl-c"><span class="pl-c">#</span> load cep-data</span>
cep_data <span class="pl-k">=</span> <span class="pl-c1">load_cep_data_provided</span>(<span class="pl-s"><span class="pl-pds">"</span>GER_1<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span># OPTIMIZATION ##</span>
<span class="pl-c"><span class="pl-c">#</span> run a simple</span>
<span class="pl-c1">run_opt</span>(ts_input_data,cep_data,optimizer)</pre></div>
</article></div>