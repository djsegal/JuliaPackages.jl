<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-displayas" class="anchor" aria-hidden="true" href="#displayas"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DisplayAs</h1>
<p dir="auto"><a href="https://tkf.github.io/DisplayAs.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://tkf.github.io/DisplayAs.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/tkf/DisplayAs.jl/actions/workflows/test.yml"><img src="https://github.com/tkf/DisplayAs.jl/actions/workflows/test.yml/badge.svg" alt="Run tests" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/tkf/DisplayAs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/885a4f18462bea77bc5e11fc6614d6c32741312e7c14604eea12cc544288f424/68747470733a2f2f636f6465636f762e696f2f67682f746b662f446973706c617941732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/tkf/DisplayAs.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaTesting/Aqua.jl"><img src="https://raw.githubusercontent.com/JuliaTesting/Aqua.jl/master/badge.svg" alt="Aqua QA" style="max-width: 100%;"></a>
<a href="https://github.com/tkf/DisplayAs.jl"><img src="https://camo.githubusercontent.com/6056acf92068ed16274abdcdd9a7c56e34e70a175ac78e72f3ddaa7f9a64c9fe/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f746b662f446973706c617941732e6a6c2e7376673f7374796c653d736f6369616c266c6f676f3d676974687562" alt="GitHub last commit" data-canonical-src="https://img.shields.io/github/last-commit/tkf/DisplayAs.jl.svg?style=social&amp;logo=github" style="max-width: 100%;"></a></p>
<p dir="auto">DisplayAs.jl provides functions to show objects in a chosen MIME type.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using DisplayAs
       using Markdown

julia&gt; md_as_html = Markdown.parse(&quot;hello&quot;) |&gt; DisplayAs.HTML;

julia&gt; showable(&quot;text/html&quot;, md_as_html)
true

julia&gt; showable(&quot;text/markdown&quot;, md_as_html)
false

julia&gt; md_as_md = Markdown.parse(&quot;hello&quot;) |&gt; DisplayAs.MD;

julia&gt; showable(&quot;text/html&quot;, md_as_md)
false

julia&gt; showable(&quot;text/markdown&quot;, md_as_md)
true"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> DisplayAs
       <span class="pl-k">using</span> Markdown

julia<span class="pl-k">&gt;</span> md_as_html <span class="pl-k">=</span> Markdown<span class="pl-k">.</span><span class="pl-c1">parse</span>(<span class="pl-s"><span class="pl-pds">"</span>hello<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> DisplayAs<span class="pl-k">.</span>HTML;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">showable</span>(<span class="pl-s"><span class="pl-pds">"</span>text/html<span class="pl-pds">"</span></span>, md_as_html)
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">showable</span>(<span class="pl-s"><span class="pl-pds">"</span>text/markdown<span class="pl-pds">"</span></span>, md_as_html)
<span class="pl-c1">false</span>

julia<span class="pl-k">&gt;</span> md_as_md <span class="pl-k">=</span> Markdown<span class="pl-k">.</span><span class="pl-c1">parse</span>(<span class="pl-s"><span class="pl-pds">"</span>hello<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> DisplayAs<span class="pl-k">.</span>MD;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">showable</span>(<span class="pl-s"><span class="pl-pds">"</span>text/html<span class="pl-pds">"</span></span>, md_as_md)
<span class="pl-c1">false</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">showable</span>(<span class="pl-s"><span class="pl-pds">"</span>text/markdown<span class="pl-pds">"</span></span>, md_as_md)
<span class="pl-c1">true</span></pre></div>
<p dir="auto">It is also possible to use nesting in order to allow the object to be displayed
as multiple MIME types:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; md_as_html_or_text = Markdown.parse(&quot;hello&quot;) |&gt; DisplayAs.HTML |&gt; DisplayAs.Text;

julia&gt; showable(&quot;text/html&quot;, md_as_html_or_text)
true

julia&gt; showable(&quot;text/plain&quot;, md_as_html_or_text)
true

julia&gt; showable(&quot;text/markdown&quot;, md_as_html_or_text)
false"><pre>julia<span class="pl-k">&gt;</span> md_as_html_or_text <span class="pl-k">=</span> Markdown<span class="pl-k">.</span><span class="pl-c1">parse</span>(<span class="pl-s"><span class="pl-pds">"</span>hello<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> DisplayAs<span class="pl-k">.</span>HTML <span class="pl-k">|&gt;</span> DisplayAs<span class="pl-k">.</span>Text;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">showable</span>(<span class="pl-s"><span class="pl-pds">"</span>text/html<span class="pl-pds">"</span></span>, md_as_html_or_text)
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">showable</span>(<span class="pl-s"><span class="pl-pds">"</span>text/plain<span class="pl-pds">"</span></span>, md_as_html_or_text)
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">showable</span>(<span class="pl-s"><span class="pl-pds">"</span>text/markdown<span class="pl-pds">"</span></span>, md_as_html_or_text)
<span class="pl-c1">false</span></pre></div>
</article></div>