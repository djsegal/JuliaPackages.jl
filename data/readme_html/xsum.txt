<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-xsum-exactly-rounded-floating-point-sums-in-julia" class="anchor" aria-hidden="true" href="#xsum-exactly-rounded-floating-point-sums-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Xsum: Exactly rounded floating-point sums in Julia</h1>
<p><a href="https://travis-ci.org/stevengj/Xsum.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/76290e5a8cf4b39f14014bb6a2b6b120879263f4/68747470733a2f2f7472617669732d63692e6f72672f73746576656e676a2f5873756d2e6a6c2e737667" alt="Travis Status" data-canonical-src="https://travis-ci.org/stevengj/Xsum.jl.svg" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/StevenGJohnson/xsum-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/bbbbb3ed2233e17f2789c6458128cf12add57e09/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f33677872346b6630613675776c7931793f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/3gxr4kf0a6uwly1y?svg=true" style="max-width:100%;"></a></p>
<p>The Xsum package is a Julia wrapper around Radford Neal's <a href="https://gitlab.com/radfordneal/xsum" rel="nofollow">xsum package</a>
for exactly rounded double-precision floating-point summation.  The <a href="https://arxiv.org/abs/1505.05571" rel="nofollow">xsum algorithm</a> takes <code>n</code> double precision (<code>Float64</code> or smaller) floating-point values as input and computes the "exactly rounded sum" â€” equivalent to summing the values in <em>infinite</em> precision and rounding the result to the nearest <code>Float64</code> value.</p>
<p>By clever use of additional precision, xsum can compute the exactly rounded sum only a few times more slowly than the naive summation algorithm (or the pairwise summation used in the built-in <code>sum</code> function), much faster than using generic arbitrary precision (like <code>BigFloat</code> operations).</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>The Xsum package provides a function <code>xsum</code> to perform the summation.  To use it, simply do:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Xsum
<span class="pl-c1">xsum</span>(iterator)</pre></div>
<p>where you can pass any iteratable collection (arrays, generators, tuples, etcetera).  Real or complex collections can be summed, but note that each element is converted to double precision (<code>Float64</code> or <code>ComplexF64</code>) before it is summed, and the result is always double precision.</p>
<p>The variant <code>xsum(function, iterator)</code> is also supported, similar to <code>sum(function, iterator)</code>, which sums the result of the
given <code>function</code> applied to each element of the <code>iterator</code>.</p>
</article></div>