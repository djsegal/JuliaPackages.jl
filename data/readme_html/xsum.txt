<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-xsum-exactly-rounded-floating-point-sums-in-julia" class="anchor" aria-hidden="true" href="#xsum-exactly-rounded-floating-point-sums-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Xsum: Exactly rounded floating-point sums in Julia</h1>
<p><a href="https://travis-ci.org/JuliaMath/Xsum.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e3cbd3015146350796b2f2a47d854dbe96bd0d88/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614d6174682f5873756d2e6a6c2e737667" alt="Travis Status" data-canonical-src="https://travis-ci.org/JuliaMath/Xsum.jl.svg" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/StevenGJohnson/xsum-jl-e58u4" rel="nofollow"><img src="https://camo.githubusercontent.com/f8068b3eb06bc1e531eadc10520b9ae16f0f7224/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f76766669656f327179727374617263743f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/vvfieo2qyrstarct?svg=true" style="max-width:100%;"></a></p>
<p>The Xsum package is a Julia wrapper around Radford Neal's <a href="https://gitlab.com/radfordneal/xsum" rel="nofollow">xsum package</a>
for exactly rounded double-precision floating-point summation.  The <a href="https://arxiv.org/abs/1505.05571" rel="nofollow">xsum algorithm</a> takes <code>n</code> double precision (<code>Float64</code> or smaller) floating-point values as input and computes the "exactly rounded sum" â€” equivalent to summing the values in <em>infinite</em> precision and rounding the result to the nearest <code>Float64</code> value.</p>
<p>By clever use of additional precision, xsum can compute the exactly rounded sum only a few times more slowly than the naive summation algorithm (or the pairwise summation used in the built-in <code>sum</code> function), much faster than using generic arbitrary precision (like <code>BigFloat</code> operations).</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>The Xsum package provides a function <code>xsum</code> to perform the summation.  To use it, simply do:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Xsum
<span class="pl-c1">xsum</span>(iterator)</pre></div>
<p>where you can pass any iteratable collection (arrays, generators, tuples, etcetera).  Real or complex collections can be summed, but note that each element is converted to double precision (<code>Float64</code> or <code>ComplexF64</code>) before it is summed, and the result is always double precision.</p>
<p>The variant <code>xsum(function, iterator)</code> is also supported, similar to <code>sum(function, iterator)</code>, which sums the result of the
given <code>function</code> applied to each element of the <code>iterator</code>.</p>
</article></div>