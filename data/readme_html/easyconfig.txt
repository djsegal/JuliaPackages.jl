<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-easyconfig" class="anchor" aria-hidden="true" href="#easyconfig"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>EasyConfig</h1>
<p><a href="https://travis-ci.com/joshday/EasyConfig.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d176b4ae7f04d3774afab71e943696d07f3fdca56522284da9beb184ad9ce713/68747470733a2f2f7472617669732d63692e636f6d2f6a6f73686461792f45617379436f6e6669672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/joshday/EasyConfig.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/joshday/EasyConfig.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/df2c36bc115004ab4427b988f17739c60f2027163fe3b4757912873743c756a0/68747470733a2f2f636f6465636f762e696f2f67682f6a6f73686461792f45617379436f6e6669672e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/joshday/EasyConfig.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p><strong>EasyConfig</strong> provides a simple nested <code>AbstractDict{Symbol, Any}</code> data structure.</p>
<h2><a id="user-content-advantages-over-dictionariesnamed-tuples" class="anchor" aria-hidden="true" href="#advantages-over-dictionariesnamed-tuples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Advantages over dictionaries/named tuples:</h2>
<h3><a id="user-content-1-intermediate-levels-are-created-on-the-fly" class="anchor" aria-hidden="true" href="#1-intermediate-levels-are-created-on-the-fly"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>1) Intermediate levels are created on the fly:</h3>
<p><g-emoji class="g-emoji" alias="smiley" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png">😃</g-emoji></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="c = Config().one.two.three = 1
"><pre>c <span class="pl-k">=</span> <span class="pl-c1">Config</span>()<span class="pl-k">.</span>one<span class="pl-k">.</span>two<span class="pl-k">.</span>three <span class="pl-k">=</span> <span class="pl-c1">1</span></pre></div>
<p>vs.</p>
<p><g-emoji class="g-emoji" alias="neutral_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f610.png">😐</g-emoji></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="c = OrderedDict(:one =&gt; OrderedDict(:two =&gt; OrderedDict(:three =&gt; 1)))

c = (one = (two = (three = 1,),),)

c = (; one = (;two = (;three = 1)))
"><pre>c <span class="pl-k">=</span> <span class="pl-c1">OrderedDict</span>(<span class="pl-c1">:one</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">OrderedDict</span>(<span class="pl-c1">:two</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">OrderedDict</span>(<span class="pl-c1">:three</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>)))

c <span class="pl-k">=</span> (one <span class="pl-k">=</span> (two <span class="pl-k">=</span> (three <span class="pl-k">=</span> <span class="pl-c1">1</span>,),),)

c <span class="pl-k">=</span> (; one <span class="pl-k">=</span> (;two <span class="pl-k">=</span> (;three <span class="pl-k">=</span> <span class="pl-c1">1</span>)))</pre></div>
<h3><a id="user-content-2-values-can-be-accessed-with-getproperty" class="anchor" aria-hidden="true" href="#2-values-can-be-accessed-with-getproperty"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>2) Values can be accessed with <code>getproperty</code>:</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="c.one.two.three == 1  # same as NamedTuple
"><pre>c<span class="pl-k">.</span>one<span class="pl-k">.</span>two<span class="pl-k">.</span>three <span class="pl-k">==</span> <span class="pl-c1">1</span>  <span class="pl-c"><span class="pl-c">#</span> same as NamedTuple</span></pre></div>
<p>vs.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="c[:one][:two][:three] == 1
"><pre>c[<span class="pl-c1">:one</span>][<span class="pl-c1">:two</span>][<span class="pl-c1">:three</span>] <span class="pl-k">==</span> <span class="pl-c1">1</span></pre></div>
<h3><a id="user-content-3-gettingsetting-can-be-done-with-getset-propertyindex" class="anchor" aria-hidden="true" href="#3-gettingsetting-can-be-done-with-getset-propertyindex"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>3) Getting/setting can be done with <code>get/set</code> <code>property/index</code>:</h3>
<p>(for the purpose of making <code>Symbol</code>s easier to work with)</p>
<p><g-emoji class="g-emoji" alias="upside_down_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f643.png">🙃</g-emoji></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="c.why.&quot;would you&quot;[&quot;need to do this?&quot;] = &quot;No reason&quot;

c.&quot;why&quot;[var&quot;would you&quot;].&quot;need to do this?&quot; == &quot;No reason&quot;
"><pre>c<span class="pl-k">.</span>why.<span class="pl-s"><span class="pl-pds">"</span>would you<span class="pl-pds">"</span></span>[<span class="pl-s"><span class="pl-pds">"</span>need to do this?<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>No reason<span class="pl-pds">"</span></span>

c.<span class="pl-s"><span class="pl-pds">"</span>why<span class="pl-pds">"</span></span>[<span class="pl-c1">var"would you"</span>]<span class="pl-k">.</span><span class="pl-s"><span class="pl-pds">"</span>need to do this?<span class="pl-pds">"</span></span> <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>No reason<span class="pl-pds">"</span></span></pre></div>
<h2><a id="user-content-conversion-to-json" class="anchor" aria-hidden="true" href="#conversion-to-json"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Conversion to JSON</h2>
<p>Simply <code>JSON3.write</code> it! <g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png">🎉</g-emoji></p>
<h2><a id="user-content-gotchas" class="anchor" aria-hidden="true" href="#gotchas"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Gotchas</h2>
<p>If you try to access something that doesn't exist, an empty <code>Config()</code> will sit there (a consequence of creating intermediate levels on the fly):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="c = Config()

c.one.two.three.four.five.six == Config()
"><pre>c <span class="pl-k">=</span> <span class="pl-c1">Config</span>()

c<span class="pl-k">.</span>one<span class="pl-k">.</span>two<span class="pl-k">.</span>three<span class="pl-k">.</span>four<span class="pl-k">.</span>five<span class="pl-k">.</span>six <span class="pl-k">==</span> <span class="pl-c1">Config</span>()</pre></div>
<p><g-emoji class="g-emoji" alias="broom" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f9f9.png">🧹</g-emoji> Clean up any stranded empty <code>Config</code>s with <code>delete_empty!(::Config)</code>.</p>
<h2><a id="user-content-example-try-this-in-pluto-" class="anchor" aria-hidden="true" href="#example-try-this-in-pluto-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example (Try this in <a href="https://github.com/fonsp/Pluto.jl">Pluto</a> <g-emoji class="g-emoji" alias="balloon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f388.png">🎈</g-emoji>!)</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="begin
	using Random, EasyConfig, JSON3
	
	function plot(config)
	    id = randstring(20)
	    HTML(&quot;&quot;&quot;
	        &lt;div id=&quot;$id&quot;&quot;&gt;&lt;/div&gt;
	        &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
	        &lt;script&gt;
	            var data = $(JSON3.write(config.data))
	            var layout = $(JSON3.write(config.layout))
	            Plotly.newPlot(&quot;$id&quot;, data, layout, {responsive:true, displaylogo: false, displayModeBar: false})
	        &lt;/script&gt;
	    &quot;&quot;&quot;)
	end
	
	myplot = Config()
	
	myplot.data = [Config(
		x=randn(100), y = randn(100), mode=&quot;markers&quot;
	)]
	myplot.layout.title = &quot;My Plot&quot;
	myplot.layout.xaxis.title = &quot;X Axis&quot;
	myplot.layout.yaxis.title = &quot;Y Axis&quot;
	
	plot(myplot)
end
"><pre><span class="pl-k">begin</span>
	<span class="pl-k">using</span> Random, EasyConfig, JSON3
	
	<span class="pl-k">function</span> <span class="pl-en">plot</span>(config)
	    id <span class="pl-k">=</span> <span class="pl-c1">randstring</span>(<span class="pl-c1">20</span>)
	    <span class="pl-c1">HTML</span>(<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">	        &lt;div id="<span class="pl-v">$id</span>""&gt;&lt;/div&gt;</span>
<span class="pl-s">	        &lt;script src="https://cdn.plot.ly/plotly-latest.min.js"&gt;&lt;/script&gt;</span>
<span class="pl-s">	        &lt;script&gt;</span>
<span class="pl-s">	            var data = <span class="pl-v">$(JSON3<span class="pl-k">.</span><span class="pl-c1">write</span>(config<span class="pl-k">.</span>data))</span></span>
<span class="pl-s">	            var layout = <span class="pl-v">$(JSON3<span class="pl-k">.</span><span class="pl-c1">write</span>(config<span class="pl-k">.</span>layout))</span></span>
<span class="pl-s">	            Plotly.newPlot("<span class="pl-v">$id</span>", data, layout, {responsive:true, displaylogo: false, displayModeBar: false})</span>
<span class="pl-s">	        &lt;/script&gt;</span>
<span class="pl-s">	    <span class="pl-pds">"""</span></span>)
	<span class="pl-k">end</span>
	
	myplot <span class="pl-k">=</span> <span class="pl-c1">Config</span>()
	
	myplot<span class="pl-k">.</span>data <span class="pl-k">=</span> [<span class="pl-c1">Config</span>(
		x<span class="pl-k">=</span><span class="pl-c1">randn</span>(<span class="pl-c1">100</span>), y <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">100</span>), mode<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>markers<span class="pl-pds">"</span></span>
	)]
	myplot<span class="pl-k">.</span>layout<span class="pl-k">.</span>title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>My Plot<span class="pl-pds">"</span></span>
	myplot<span class="pl-k">.</span>layout<span class="pl-k">.</span>xaxis<span class="pl-k">.</span>title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>X Axis<span class="pl-pds">"</span></span>
	myplot<span class="pl-k">.</span>layout<span class="pl-k">.</span>yaxis<span class="pl-k">.</span>title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Y Axis<span class="pl-pds">"</span></span>
	
	<span class="pl-c1">plot</span>(myplot)
<span class="pl-k">end</span></pre></div>
</article></div>