<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-tilde" class="anchor" aria-hidden="true" href="#tilde"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tilde</h1>
<p dir="auto"><a href="https://cscherrer.github.io/Tilde.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://cscherrer.github.io/Tilde.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/cscherrer/Tilde.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/cscherrer/Tilde.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/cscherrer/Tilde.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/43414a8139e65847f792fc43131c2526b69681181609a8ba482ab2886c7b6b5a/68747470733a2f2f636f6465636f762e696f2f67682f6373636865727265722f54696c64652e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/cscherrer/Tilde.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">WIP, successor to <a href="https://github.com/cscherrer/Soss.jl">Soss.jl</a></p>
<p dir="auto">For a high-level description of Tilde's design, check out <a href="https://informativeprior.com/blog/2022/03-21-tilde/" rel="nofollow">this blog post</a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; m = @model (x, s) begin
        σ ~ Exponential()
        @inbounds x[1] ~ Normal(σ = σ)
        n = length(x)
        @inbounds for j = 2:n
            x[j] ~ StudentT(1.5, x[j - 1], σ)
        end
    end;
    
julia&gt; x = zeros(3);

julia&gt; r = rand(m(x,10))
(σ = 9.096155145583953, x = [14.876934886768867, 6.612967845518229, 2.045770246490428])

julia&gt; x
3-element Vector{Float64}:
 14.876934886768867
  6.612967845518229
  2.045770246490428

julia&gt; ℓ = logdensityof(m(x, 1.0) | (;x), (σ = 1.0,))
-122.91114458882001"><pre>julia<span class="pl-k">&gt;</span> m <span class="pl-k">=</span> <span class="pl-c1">@model</span> (x, s) <span class="pl-k">begin</span>
        σ <span class="pl-k">~</span> <span class="pl-c1">Exponential</span>()
        <span class="pl-c1">@inbounds</span> x[<span class="pl-c1">1</span>] <span class="pl-k">~</span> <span class="pl-c1">Normal</span>(σ <span class="pl-k">=</span> σ)
        n <span class="pl-k">=</span> <span class="pl-c1">length</span>(x)
        <span class="pl-c1">@inbounds</span> <span class="pl-k">for</span> j <span class="pl-k">=</span> <span class="pl-c1">2</span><span class="pl-k">:</span>n
            x[j] <span class="pl-k">~</span> <span class="pl-c1">StudentT</span>(<span class="pl-c1">1.5</span>, x[j <span class="pl-k">-</span> <span class="pl-c1">1</span>], σ)
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>;
    
julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(<span class="pl-c1">3</span>);

julia<span class="pl-k">&gt;</span> r <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">m</span>(x,<span class="pl-c1">10</span>))
(σ <span class="pl-k">=</span> <span class="pl-c1">9.096155145583953</span>, x <span class="pl-k">=</span> [<span class="pl-c1">14.876934886768867</span>, <span class="pl-c1">6.612967845518229</span>, <span class="pl-c1">2.045770246490428</span>])

julia<span class="pl-k">&gt;</span> x
<span class="pl-c1">3</span><span class="pl-k">-</span>element Vector{Float64}<span class="pl-k">:</span>
 <span class="pl-c1">14.876934886768867</span>
  <span class="pl-c1">6.612967845518229</span>
  <span class="pl-c1">2.045770246490428</span>

julia<span class="pl-k">&gt;</span> ℓ <span class="pl-k">=</span> <span class="pl-c1">logdensityof</span>(<span class="pl-c1">m</span>(x, <span class="pl-c1">1.0</span>) <span class="pl-k">|</span> (;x), (σ <span class="pl-k">=</span> <span class="pl-c1">1.0</span>,))
<span class="pl-k">-</span><span class="pl-c1">122.91114458882001</span></pre></div>
</article></div>