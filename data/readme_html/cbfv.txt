<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-cbfvjl--a-simple-composition-based-feature-vectorization-utility-in-julia" class="anchor" aria-hidden="true" href="#cbfvjl--a-simple-composition-based-feature-vectorization-utility-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CBFV.jl : A simple composition-based feature vectorization utility in Julia</h1>
<p dir="auto"><a href="https://juliamatsci.github.io/CBFV.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://juliamatsci.github.io/CBFV.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a> <a href="https://github.com/JuliaMatSci/CBFV.jl/actions"><img src="https://github.com/juliamatsci/CBFV.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a><a href="https://codecov.io/gh/JuliaMatSci/CBFV.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9460850d01925afe0747a5b90130e03683d87b46b84ed7e3163ba91a7d457d68/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614d61745363692f434246562e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaMatSci/CBFV.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This is a Julia rewrite of the <a href="https://github.com/kaaiian/CBFV">python tool</a> to create a composition-based feature vector representation for machine learning with materials science data. The ideas and methodology are discussed in the recent article:</p>
<blockquote>
<p dir="auto">Wang, Anthony Yu-Tung; Murdock, Ryan J.; Kauwe, Steven K.; Oliynyk, Anton O.; Gurlo, Aleksander; Brgoch, Jakoah; Persson, Kristin A.; Sparks, Taylor D., <a href="https://doi.org/10.1021/acs.chemmater.0c01907" rel="nofollow">Machine Learning for Materials Scientists: An Introductory Guide toward Best Practices</a>, <em>Chemistry of Materials</em> <strong>2020</strong>, <em>32 (12)</em>: 4954â€“4965. DOI: <a href="https://doi.org/10.1021/acs.chemmater.0c01907" rel="nofollow">10.1021/acs.chemmater.0c01907</a>.</p>
</blockquote>
<p dir="auto">and the original python source code(s) can be found here:</p>
<ul dir="auto">
<li><a href="https://github.com/anthony-wang/BestPractices/tree/master/notebooks/CBFV">https://github.com/anthony-wang/BestPractices/tree/master/notebooks/CBFV</a></li>
<li><a href="https://github.com/kaaiian/CBFV">https://github.com/kaaiian/CBFV</a></li>
</ul>
<h2 dir="auto"><a id="user-content-example-use" class="anchor" aria-hidden="true" href="#example-use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example Use</h2>
<p dir="auto">The input data set should have a least two columns with the header/names <code>formula</code> and <code>target</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DataFrames
using CBFV
data = DataFrame(&quot;name&quot;=&gt;[&quot;Rb2Te&quot;,&quot;CdCl2&quot;,&quot;LaN&quot;],&quot;bandgap_eV&quot;=&gt;[1.88,3.51,1.12])
rename!(data,Dict(&quot;name&quot;=&gt;&quot;formula&quot;,&quot;bandgap_eV&quot;=&gt;&quot;target&quot;))
features = generatefeatures(data)"><pre><span class="pl-k">using</span> DataFrames
<span class="pl-k">using</span> CBFV
data <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>[<span class="pl-s"><span class="pl-pds">"</span>Rb2Te<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>CdCl2<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>LaN<span class="pl-pds">"</span></span>],<span class="pl-s"><span class="pl-pds">"</span>bandgap_eV<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>[<span class="pl-c1">1.88</span>,<span class="pl-c1">3.51</span>,<span class="pl-c1">1.12</span>])
<span class="pl-c1">rename!</span>(data,<span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>formula<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>bandgap_eV<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>target<span class="pl-pds">"</span></span>))
features <span class="pl-k">=</span> <span class="pl-c1">generatefeatures</span>(data)</pre></div>
<p dir="auto">The thing to note is you most likely will still want to post-process the generated feature data using some transformation to scale the data. The <a href="https://juliastats.org/StatsBase.jl/stable/transformations/" rel="nofollow">StatsBase.jl</a> package provides some basic fetures for this, although the input needs to be <code>AbstractMatrix{&lt;:Real}</code> rather than a <code>DataFrame</code>. This can be achieved using <code>generatefeatures(data,returndataframe=false)</code></p>
<h2 dir="auto"><a id="user-content-supported-featurization-schemes" class="anchor" aria-hidden="true" href="#supported-featurization-schemes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Supported Featurization Schemes</h2>
<p dir="auto">As with the orignal CBFV python package the following element databases are available:</p>
<ul dir="auto">
<li><code>oliynyk</code> (default): Database from A. Oliynyk.</li>
<li><code>magpie</code>: <a href="https://bitbucket.org/wolverton/magpie/src/master/" rel="nofollow">Materials Agnostic Platform for Informatics and Exploration</a></li>
<li><code>mat2vec</code>:  <a href="https://github.com/materialsintelligence/mat2vec">Word embeddings capture latent knowledge from materials science</a></li>
<li><code>jarvis</code>: <a href="https://jarvis.nist.gov/" rel="nofollow">Joint Automated Repository for Various Integrated Simulations provided by U.S. National Institutes of Standards and Technologies.</a></li>
<li><code>onehot</code>: Simple one hot encoding scheme, i.e., diagonal elemental matrix.</li>
<li><code>random_200</code>: 200 random elemental properties (I'm assuming).</li>
</ul>
<p dir="auto">However, <code>CBFV.jl</code> will allow you to provide your own element database to featurize with. Also, the current implementation reads the saved <code>.csv</code> file in <a href="@ref"><code>databases</code></a>, however, this is prone to potential issues (ex. out of date files). To alleviate this I will change the implementation to utilize <code>Pkg.Artificats</code> with a <code>Artificats.toml</code> file that enables grabbing the datafiles needed from a server if they don't exist locally already.</p>
<h3 dir="auto"><a id="user-content-julia-dependencies" class="anchor" aria-hidden="true" href="#julia-dependencies"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Julia Dependencies</h3>
<p dir="auto">This is a relatively small package so there aren't a lot of dependencies. The required packages are:</p>
<ul dir="auto">
<li>CSV</li>
<li>DataFrames</li>
<li>ProgressBars</li>
</ul>
<h2 dir="auto"><a id="user-content-citations" class="anchor" aria-hidden="true" href="#citations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citations</h2>
<p dir="auto">Pleae cite the following when and if you use this package in your work:</p>
<div class="highlight highlight-text-bibtex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@misc{CBFV.jl,
    author = {Bringuier, Stefan},
    year = {2021},
    title = {CBFV.jl - A simple composition based feature vectorization Julia utility},
    url = {https://github.com/JuliaMatSci/CBFV.jl},
}"><pre><span class="pl-k">@misc</span>{<span class="pl-en">CBFV.jl</span>,
    <span class="pl-s">author</span> = <span class="pl-s"><span class="pl-pds">{</span>Bringuier, Stefan<span class="pl-pds">}</span></span>,
    <span class="pl-s">year</span> = <span class="pl-s"><span class="pl-pds">{</span>2021<span class="pl-pds">}</span></span>,
    <span class="pl-s">title</span> = <span class="pl-s"><span class="pl-pds">{</span>CBFV.jl - A simple composition based feature vectorization Julia utility<span class="pl-pds">}</span></span>,
    <span class="pl-s">url</span> = <span class="pl-s"><span class="pl-pds">{</span>https://github.com/JuliaMatSci/CBFV.jl<span class="pl-pds">}</span></span>,
}</pre></div>
<p dir="auto">In addition, please also consider citing the original python implementation and tutorial paper.</p>
<div class="highlight highlight-text-bibtex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@misc{CBFV,
    author = {Kauwe, Steven and Wang, Anthony Yu-Tung and Falkowski, Andrew},
    title = {CBFV: Composition-based feature vectors},
    url = {https://github.com/kaaiian/CBFV}
}"><pre><span class="pl-k">@misc</span>{<span class="pl-en">CBFV</span>,
    <span class="pl-s">author</span> = <span class="pl-s"><span class="pl-pds">{</span>Kauwe, Steven and Wang, Anthony Yu-Tung and Falkowski, Andrew<span class="pl-pds">}</span></span>,
    <span class="pl-s">title</span> = <span class="pl-s"><span class="pl-pds">{</span>CBFV: Composition-based feature vectors<span class="pl-pds">}</span></span>,
    <span class="pl-s">url</span> = <span class="pl-s"><span class="pl-pds">{</span>https://github.com/kaaiian/CBFV<span class="pl-pds">}</span></span>
}</pre></div>
<div class="highlight highlight-text-bibtex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@article{Wang2020bestpractices,
    author = {Wang, Anthony Yu-Tung and Murdock, Ryan J. and Kauwe, Steven K. and Oliynyk, Anton O. and Gurlo, Aleksander and Brgoch, Jakoah and Persson, Kristin A. and Sparks, Taylor D.},
    year = {2020},
    title = {Machine Learning for Materials Scientists: An Introductory Guide toward Best Practices},
    url = {https://doi.org/10.1021/acs.chemmater.0c01907},
    pages = {4954--4965},
    volume = {32},
    number = {12},
    issn = {0897-4756},
    journal = {Chemistry of Materials},
    doi = {10.1021/acs.chemmater.0c01907}
}"><pre><span class="pl-k">@article</span>{<span class="pl-en">Wang2020bestpractices</span>,
    <span class="pl-s">author</span> = <span class="pl-s"><span class="pl-pds">{</span>Wang, Anthony Yu-Tung and Murdock, Ryan J. and Kauwe, Steven K. and Oliynyk, Anton O. and Gurlo, Aleksander and Brgoch, Jakoah and Persson, Kristin A. and Sparks, Taylor D.<span class="pl-pds">}</span></span>,
    <span class="pl-s">year</span> = <span class="pl-s"><span class="pl-pds">{</span>2020<span class="pl-pds">}</span></span>,
    <span class="pl-s">title</span> = <span class="pl-s"><span class="pl-pds">{</span>Machine Learning for Materials Scientists: An Introductory Guide toward Best Practices<span class="pl-pds">}</span></span>,
    <span class="pl-s">url</span> = <span class="pl-s"><span class="pl-pds">{</span>https://doi.org/10.1021/acs.chemmater.0c01907<span class="pl-pds">}</span></span>,
    <span class="pl-s">pages</span> = <span class="pl-s"><span class="pl-pds">{</span>4954--4965<span class="pl-pds">}</span></span>,
    <span class="pl-s">volume</span> = <span class="pl-s"><span class="pl-pds">{</span>32<span class="pl-pds">}</span></span>,
    <span class="pl-s">number</span> = <span class="pl-s"><span class="pl-pds">{</span>12<span class="pl-pds">}</span></span>,
    <span class="pl-s">issn</span> = <span class="pl-s"><span class="pl-pds">{</span>0897-4756<span class="pl-pds">}</span></span>,
    <span class="pl-s">journal</span> = <span class="pl-s"><span class="pl-pds">{</span>Chemistry of Materials<span class="pl-pds">}</span></span>,
    <span class="pl-s">doi</span> = <span class="pl-s"><span class="pl-pds">{</span>10.1021/acs.chemmater.0c01907<span class="pl-pds">}</span></span>
}</pre></div>
</article></div>