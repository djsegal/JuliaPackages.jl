<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-unstructuredgrids" class="anchor" aria-hidden="true" href="#unstructuredgrids"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>UnstructuredGrids</h1>
<p><em>Helper routines for topological operations on unstructured grids in julia</em></p>
<p><a href="https://travis-ci.com/gridap/UnstructuredGrids.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/91f24434214466662c1edc31e572f7c1a83426d967e17a9a3a6e68111ecfe190/68747470733a2f2f7472617669732d63692e636f6d2f6772696461702f556e7374727563747572656447726964732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/gridap/UnstructuredGrids.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/gridap/UnstructuredGrids.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/727966128fa1087189d53c721ceef83bff054799b7d70674685540a4a56c532b/68747470733a2f2f636f6465636f762e696f2f67682f6772696461702f556e7374727563747572656447726964732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/gridap/UnstructuredGrids.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>If you <g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png">❤️</g-emoji> this project, give us a <g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png">⭐️</g-emoji>!</p>
<p><strong>UnstructuredGrids</strong> provides a set of functions providing common topological operations associated with unstructured meshes/grids such as:</p>
<ul>
<li>Find the lower dimensial objects (e.g., edges and faces) on the boundary of each cell in the grid</li>
<li>Find the vertices on low dimensional objects of the grid (e.g., the vertices on each face, the vertices on each edge)</li>
<li>Find dual connections (e.g., cells arround a face, cells around a vertex, faces around an edge, etc.)</li>
<li>Identify objects on the boundary of the grid</li>
<li>Export unstructured grids into <code>.vtu</code> files (using the <code>WriteVTK</code> package).</li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Pkg.add(&quot;UnstructuredGrids&quot;)
"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>UnstructuredGrids<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick Start</h2>
<h3><a id="user-content-generate-a-ugrid-object-from-its-nodal-coordinates-cell-connectivities-and-cell-types" class="anchor" aria-hidden="true" href="#generate-a-ugrid-object-from-its-nodal-coordinates-cell-connectivities-and-cell-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Generate a <code>UGrid</code> object from its nodal coordinates, cell connectivities, and cell types</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using UnstructuredGrids
using UnstructuredGrids.RefCellGallery: SQUARE, TRIANGLE

# Define coordinates
coords = zeros(2,9)
coords[:,1] = [1,1]
coords[:,2] = [3,1]
coords[:,3] = [4,1]
coords[:,4] = [1,2]
coords[:,5] = [2,2]
coords[:,6] = [1,3]
coords[:,7] = [2,3]
coords[:,8] = [3,3]
coords[:,9] = [4,3]

# Define connectivity
connect = [1,2,5,4,2,3,9,4,5,7,6,5,8,7,5,2,8,2,9,8]
offsets = [1,      5,    8,      12,   15,   18,   21]

# Define cell types
refcells = [SQUARE, TRIANGLE]
types = [1,2,1,2,2,2]

# Generate the UGrid object
grid = UGrid(connect,offsets,types,refcells,coords)

"><pre><span class="pl-k">using</span> UnstructuredGrids
<span class="pl-k">using</span> UnstructuredGrids<span class="pl-k">.</span>RefCellGallery<span class="pl-k">:</span> SQUARE, TRIANGLE

<span class="pl-c"><span class="pl-c">#</span> Define coordinates</span>
coords <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(<span class="pl-c1">2</span>,<span class="pl-c1">9</span>)
coords[:,<span class="pl-c1">1</span>] <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">1</span>]
coords[:,<span class="pl-c1">2</span>] <span class="pl-k">=</span> [<span class="pl-c1">3</span>,<span class="pl-c1">1</span>]
coords[:,<span class="pl-c1">3</span>] <span class="pl-k">=</span> [<span class="pl-c1">4</span>,<span class="pl-c1">1</span>]
coords[:,<span class="pl-c1">4</span>] <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>]
coords[:,<span class="pl-c1">5</span>] <span class="pl-k">=</span> [<span class="pl-c1">2</span>,<span class="pl-c1">2</span>]
coords[:,<span class="pl-c1">6</span>] <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">3</span>]
coords[:,<span class="pl-c1">7</span>] <span class="pl-k">=</span> [<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]
coords[:,<span class="pl-c1">8</span>] <span class="pl-k">=</span> [<span class="pl-c1">3</span>,<span class="pl-c1">3</span>]
coords[:,<span class="pl-c1">9</span>] <span class="pl-k">=</span> [<span class="pl-c1">4</span>,<span class="pl-c1">3</span>]

<span class="pl-c"><span class="pl-c">#</span> Define connectivity</span>
connect <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>,<span class="pl-c1">4</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">9</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">7</span>,<span class="pl-c1">6</span>,<span class="pl-c1">5</span>,<span class="pl-c1">8</span>,<span class="pl-c1">7</span>,<span class="pl-c1">5</span>,<span class="pl-c1">2</span>,<span class="pl-c1">8</span>,<span class="pl-c1">2</span>,<span class="pl-c1">9</span>,<span class="pl-c1">8</span>]
offsets <span class="pl-k">=</span> [<span class="pl-c1">1</span>,      <span class="pl-c1">5</span>,    <span class="pl-c1">8</span>,      <span class="pl-c1">12</span>,   <span class="pl-c1">15</span>,   <span class="pl-c1">18</span>,   <span class="pl-c1">21</span>]

<span class="pl-c"><span class="pl-c">#</span> Define cell types</span>
refcells <span class="pl-k">=</span> [SQUARE, TRIANGLE]
types <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>]

<span class="pl-c"><span class="pl-c">#</span> Generate the UGrid object</span>
grid <span class="pl-k">=</span> <span class="pl-c1">UGrid</span>(connect,offsets,types,refcells,coords)
</pre></div>
<h3><a id="user-content-export-the-ugrid-object-into-vtk-format" class="anchor" aria-hidden="true" href="#export-the-ugrid-object-into-vtk-format"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Export the <code>UGrid</code> object into vtk format</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="writevtk(grid,&quot;foo&quot;) # -&gt; generates file &quot;foo.vtu&quot; 
"><pre><span class="pl-c1">writevtk</span>(grid,<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> -&gt; generates file "foo.vtu" </span></pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="assets/grid.png"><img src="assets/grid.png" alt="" style="max-width:100%;"></a></p>
<h3><a id="user-content-generate-a-numbering-for-the-edges-1d-faces-of-the-grid" class="anchor" aria-hidden="true" href="#generate-a-numbering-for-the-edges-1d-faces-of-the-grid"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Generate a numbering for the edges (1d-faces) of the grid</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="n=1
cell_to_edges = generate_cell_to_faces(n,grid)
@show cell_to_edges.list
@show cell_to_edges.ptrs
# cell_to_edges.list = [1, 2, 3, 4, 5, 6, 7, 3, 8, 9, 10, 11, 12, 8, 2, 13, 11, 7, 14, 13]
# cell_to_edges.ptrs = [1, 5, 8, 12, 15, 18, 21]
"><pre>n<span class="pl-k">=</span><span class="pl-c1">1</span>
cell_to_edges <span class="pl-k">=</span> <span class="pl-c1">generate_cell_to_faces</span>(n,grid)
<span class="pl-c1">@show</span> cell_to_edges<span class="pl-k">.</span>list
<span class="pl-c1">@show</span> cell_to_edges<span class="pl-k">.</span>ptrs
<span class="pl-c"><span class="pl-c">#</span> cell_to_edges.list = [1, 2, 3, 4, 5, 6, 7, 3, 8, 9, 10, 11, 12, 8, 2, 13, 11, 7, 14, 13]</span>
<span class="pl-c"><span class="pl-c">#</span> cell_to_edges.ptrs = [1, 5, 8, 12, 15, 18, 21]</span></pre></div>
<p>The vector <code>cell_to_edges.list</code> contains the ids of the edges for each cell. The vector <code>cell_to_edges.ptrs</code> determines which range of the previous vector correspond to a given cell. E.g., the edge ids on cell number 3 are recovered as follows:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="cell = 3
a = cell_to_edges.ptrs[cell]
b = cell_to_edges.ptrs[cell+1]-1
edges = cell_to_edges.list[a:b]
@show edges
# edges = [3, 8, 9, 10]
"><pre>cell <span class="pl-k">=</span> <span class="pl-c1">3</span>
a <span class="pl-k">=</span> cell_to_edges<span class="pl-k">.</span>ptrs[cell]
b <span class="pl-k">=</span> cell_to_edges<span class="pl-k">.</span>ptrs[cell<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">-</span><span class="pl-c1">1</span>
edges <span class="pl-k">=</span> cell_to_edges<span class="pl-k">.</span>list[a<span class="pl-k">:</span>b]
<span class="pl-c1">@show</span> edges
<span class="pl-c"><span class="pl-c">#</span> edges = [3, 8, 9, 10]</span></pre></div>
</article></div>