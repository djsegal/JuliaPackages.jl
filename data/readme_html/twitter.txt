<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-twitter" class="anchor" aria-hidden="true" href="#twitter"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Twitter</h1>
<p>Linux: <a href="https://travis-ci.org/randyzwitch/Twitter.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2cf774182e24025186ac9a9f8264750e7ba08e84/68747470733a2f2f7472617669732d63692e6f72672f72616e64797a77697463682f547769747465722e6a6c2e706e67" alt="Build Status" data-canonical-src="https://travis-ci.org/randyzwitch/Twitter.jl.png" style="max-width:100%;"></a>
<br>
CodeCov: <a href="https://codecov.io/gh/randyzwitch/Twitter.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/95c2b93c6f973a02c82f80450feadabee965c156/68747470733a2f2f636f6465636f762e696f2f67682f72616e64797a77697463682f547769747465722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/randyzwitch/Twitter.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Twitter.jl is a Julia package to work with the Twitter API v1.1. Currently, only the REST API methods are supported; streaming API endpoints aren't implemented at this time.</p>
<h2><a id="user-content-twitterjl-api" class="anchor" aria-hidden="true" href="#twitterjl-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Twitter.jl API</h2>
<p>All functions have required arguments for those parameters required by Twitter and an <code>options</code> keyword argument to provide a <code>Dict{String, String}</code> of optional parameters <a href="https://dev.twitter.com/docs/api/1.1" rel="nofollow">Twitter API documentation</a>. Most function calls will return either a <code>Dict</code> or an <code>Array &lt;: TwitterType</code>. Bad requests will return the response code from the API (403, 404, etc.)</p>
<p>DataFrame methods are defined for functions returning composite types: <code>Tweets</code>, <code>Places</code>, <code>Lists</code>, and <code>Users</code>.</p>
<h2><a id="user-content-authentication" class="anchor" aria-hidden="true" href="#authentication"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Authentication</h2>
<p>Authentication is accomplished by creating an application on <a href="https://dev.twitter.com" rel="nofollow">dev.twitter.com</a>. Once your application is setup, you can access your consumer_key, consumer_token, oauth_token and oauth_secret from the "Details" tab of the application.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Twitter

<span class="pl-c1">twitterauth</span>(<span class="pl-s"><span class="pl-pds">"</span>6nOtpXmf...<span class="pl-pds">"</span></span>,
            <span class="pl-s"><span class="pl-pds">"</span>sES5Zlj096S...<span class="pl-pds">"</span></span>,
            <span class="pl-s"><span class="pl-pds">"</span>98689850-Hj...<span class="pl-pds">"</span></span>,
            <span class="pl-s"><span class="pl-pds">"</span>UroqCVpWKIt...<span class="pl-pds">"</span></span>)</pre></div>
<p>This package does not currently support OAuth authentication.</p>
<h2><a id="user-content-code-examples" class="anchor" aria-hidden="true" href="#code-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Code examples</h2>
<p>See <a href="https://github.com/randyzwitch/Twitter.jl/blob/master/test/runtests.jl">runtests.jl</a> for example function calls.</p>
<h2><a id="user-content-contributingtodo" class="anchor" aria-hidden="true" href="#contributingtodo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing/TODO</h2>
<p>Contributions to Twitter.jl are absolutely welcomed and very appropriate for beginners to Julia! Areas for improvement are identified below, but if you have a different idea, please open an issue (then, create a pull request):</p>
<p>General:</p>
<ul>
<li>Clean up API to move away from required arguments to keyword-only</li>
<li>Clean up column types for DataFrame methods (switch <code>eltypes</code> from <code>Any</code> to <code>Union{T, Missing}</code>)</li>
<li>Keyword arguments for returning DataFrame (to remove step in data retrieval process)</li>
<li>Ability to save authentication keys to file, remove need for authentication each time</li>
<li>Create detailed documentation</li>
</ul>
</article></div>