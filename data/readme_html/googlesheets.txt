<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text">
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/chipkent/GoogleSheets.jl/actions/workflows/register.yml/badge.svg"><img src="https://github.com/chipkent/GoogleSheets.jl/actions/workflows/register.yml/badge.svg" alt="Register" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/chipkent/GoogleSheets.jl/actions/workflows/document.yml/badge.svg"><img src="https://github.com/chipkent/GoogleSheets.jl/actions/workflows/document.yml/badge.svg" alt="Document" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/chipkent/GoogleSheets.jl/actions/workflows/compathelper.yml/badge.svg"><img src="https://github.com/chipkent/GoogleSheets.jl/actions/workflows/compathelper.yml/badge.svg" alt="Compat Helper" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/chipkent/GoogleSheets.jl/actions/workflows/TagBot.yml/badge.svg"><img src="https://github.com/chipkent/GoogleSheets.jl/actions/workflows/TagBot.yml/badge.svg" alt="Tagbot" style="max-width:100%;"></a></p>
<h1><a id="user-content-googlesheetsjl" class="anchor" aria-hidden="true" href="#googlesheetsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GoogleSheets.jl</h1>
<p>Julia package for working with Google Sheets.  You can perform expected actions such as adding sheets,
removing sheets, reading from sheets, writing to sheets, and formatting sheets.</p>
<p>Key types:</p>
<ul>
<li><code>GoogleSheetsClient</code></li>
<li><code>Spreadsheet</code></li>
<li><code>Sheet</code></li>
<li><code>CellRange</code></li>
<li><code>CellRanges</code></li>
<li><code>CellRangeValues</code></li>
<li><code>UpdateSummary</code></li>
<li><code>CellIndexRange1D</code></li>
<li><code>CellIndexRange2D</code></li>
<li><code>CellFormat</code></li>
<li><code>DataFrame</code></li>
</ul>
<p>Key functions:</p>
<ul>
<li><code>sheets_client</code></li>
<li><code>sheet_names</code></li>
<li><code>sheets</code></li>
<li><code>batch_update!</code></li>
<li><code>add_sheet!</code></li>
<li><code>delete_sheet!</code></li>
<li><code>freeze!</code></li>
<li><code>append!</code></li>
<li><code>insert_rows!</code></li>
<li><code>insert_cols!</code></li>
<li><code>delete_rows!</code></li>
<li><code>delete_cols!</code></li>
<li><code>meta</code></li>
<li><code>show</code></li>
<li><code>get</code></li>
<li><code>update!</code></li>
<li><code>clear!</code></li>
<li><code>format!</code></li>
<li><code>format_conditional!</code></li>
<li><code>format_color_gradient!</code></li>
</ul>
<h2><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Install</h2>
<p>To install:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="pkg] add GoogleSheets
pkg] build GoogleSheets
"><pre><code>pkg] add GoogleSheets
pkg] build GoogleSheets
</code></pre></div>
<h2><a id="user-content-use" class="anchor" aria-hidden="true" href="#use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Use</h2>
<p>To use:</p>
<ol>
<li>Create a Google Sheets API token from either the <a href="https://developers.google.com/sheets/api/quickstart/python" rel="nofollow">python quick start reference</a> or the <a href="https://console.developers.google.com/apis/credentials" rel="nofollow">developers console</a>.</li>
<li>Place the Google Sheets API <code>credentials.json</code> file in <code>~/.julia/google_sheets/</code>.</li>
<li>Connect to Google Sheets using <code>sheets_client</code>.</li>
<li>See the scripts directory for examples of using the package.</li>
</ol>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<p>An example reading data from a Google Sheet.  See <code>./scripts/example_read.jl</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using GoogleSheets

# Example based upon: # https://developers.google.com/sheets/api/quickstart/python

client = sheets_client(AUTH_SCOPE_READONLY)

# The ID and range of a sample spreadsheet.
SAMPLE_SPREADSHEET_ID = &quot;1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms&quot;
SAMPLE_RANGE_NAME = &quot;Class Data!A2:E&quot;

sheet = Spreadsheet(SAMPLE_SPREADSHEET_ID)
range = CellRange(sheet, SAMPLE_RANGE_NAME)
result = get(client, range)
println(&quot;RESULT: $(result)&quot;)

if isnothing(result.values)
    println(&quot;No data found.&quot;)
else
    for row in eachrow(result.values)
        println(&quot;ROW: $row&quot;)
    end

    println(&quot;&quot;)
    println(&quot;Name, Major:&quot;)
    for row in eachrow(result.values)
        # Print columns A and E, which correspond to indices 1 and 5.
        println(&quot;ROW: $(row[1]), $(row[5])&quot;)
    end
end
"><pre><span class="pl-k">using</span> GoogleSheets

<span class="pl-c"><span class="pl-c">#</span> Example based upon: # https://developers.google.com/sheets/api/quickstart/python</span>

client <span class="pl-k">=</span> <span class="pl-c1">sheets_client</span>(AUTH_SCOPE_READONLY)

<span class="pl-c"><span class="pl-c">#</span> The ID and range of a sample spreadsheet.</span>
SAMPLE_SPREADSHEET_ID <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms<span class="pl-pds">"</span></span>
SAMPLE_RANGE_NAME <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Class Data!A2:E<span class="pl-pds">"</span></span>

sheet <span class="pl-k">=</span> <span class="pl-c1">Spreadsheet</span>(SAMPLE_SPREADSHEET_ID)
range <span class="pl-k">=</span> <span class="pl-c1">CellRange</span>(sheet, SAMPLE_RANGE_NAME)
result <span class="pl-k">=</span> <span class="pl-c1">get</span>(client, range)
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>RESULT: <span class="pl-v">$(result)</span><span class="pl-pds">"</span></span>)

<span class="pl-k">if</span> <span class="pl-c1">isnothing</span>(result<span class="pl-k">.</span>values)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>No data found.<span class="pl-pds">"</span></span>)
<span class="pl-k">else</span>
    <span class="pl-k">for</span> row <span class="pl-k">in</span> <span class="pl-c1">eachrow</span>(result<span class="pl-k">.</span>values)
        <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>ROW: <span class="pl-v">$row</span><span class="pl-pds">"</span></span>)
    <span class="pl-k">end</span>

    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Name, Major:<span class="pl-pds">"</span></span>)
    <span class="pl-k">for</span> row <span class="pl-k">in</span> <span class="pl-c1">eachrow</span>(result<span class="pl-k">.</span>values)
        <span class="pl-c"><span class="pl-c">#</span> Print columns A and E, which correspond to indices 1 and 5.</span>
        <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>ROW: <span class="pl-v">$(row[<span class="pl-c1">1</span>])</span>, <span class="pl-v">$(row[<span class="pl-c1">5</span>])</span><span class="pl-pds">"</span></span>)
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p>An example reading data, writing data, and modifying a Google Sheet.  See <code>./scripts/example_read_write.jl</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using GoogleSheets

# Example based upon: # https://developers.google.com/sheets/api/quickstart/python

client = sheets_client(AUTH_SCOPE_READWRITE)

# The ID and range of a sample spreadsheet.
SAMPLE_SPREADSHEET_ID = &quot;1pG4OyAdePAelCT2fSBTVJ9lVYo6M-ApuTyeEPz49DOM&quot;
SAMPLE_RANGE_NAME = &quot;Sheet1&quot;

sheet = Spreadsheet(SAMPLE_SPREADSHEET_ID)
range = CellRange(sheet, SAMPLE_RANGE_NAME)
ranges = CellRanges(sheet, [&quot;Sheet1!A1:B9&quot;, &quot;Sheet1!B1:B9&quot;])

println()
show(client, sheet)

values = [&quot;0&quot; &quot;1&quot; &quot;2&quot;; &quot;a&quot; &quot;=A1+B1&quot; 33]
println(values)

result = update!(client, range, values)


################################################################################

result = get(client, range)
println(&quot;RESULT: $(result)&quot;)

if isnothing(result.values)
    println(&quot;No data found.&quot;)
else
    for row in eachrow(result.values)
        println(&quot;ROW: $row&quot;)
    end
end

################################################################################

result = get(client, ranges)
println(&quot;RESULT: $(result)&quot;)

for r in result
    if isnothing(r.values)
        println(&quot;No data found.&quot;)
    else
        for row in eachrow(r.values)
            println(&quot;ROW: $(r.range) $row&quot;)
        end
    end
end

################################################################################

try
    delete_sheet!(client, sheet, &quot;test sheet&quot;)
    println(&quot;Deleted sheet&quot;)
catch e
    println(&quot;No sheet to delete&quot;)
end

add_sheet!(client, sheet, &quot;test sheet&quot;)

println()
show(client, sheet, &quot;test sheet&quot;)

values = fill(11, 5, 5)
println(&quot;VALUES $(typeof(values)) $values&quot;)
result = update!(client, CellRange(sheet, &quot;test sheet&quot;), values)

freeze!(client, Sheet(client, sheet, &quot;test sheet&quot;), 2, 3)
append!(client, Sheet(client, sheet, &quot;test sheet&quot;), 1000, 3)

insert_rows!(client, CellIndexRange1D(Sheet(client, sheet, &quot;test sheet&quot;), 2, 3))
insert_cols!(client, CellIndexRange1D(Sheet(client, sheet, &quot;test sheet&quot;), 2, 3))

delete_rows!(client, CellIndexRange1D(Sheet(client, sheet, &quot;test sheet&quot;), 2, 3))
delete_cols!(client, CellIndexRange1D(Sheet(client, sheet, &quot;test sheet&quot;), 2, 3))

clear!(client, CellRange(sheet, &quot;test sheet!B2:C3&quot;))
"><pre><span class="pl-k">using</span> GoogleSheets

<span class="pl-c"><span class="pl-c">#</span> Example based upon: # https://developers.google.com/sheets/api/quickstart/python</span>

client <span class="pl-k">=</span> <span class="pl-c1">sheets_client</span>(AUTH_SCOPE_READWRITE)

<span class="pl-c"><span class="pl-c">#</span> The ID and range of a sample spreadsheet.</span>
SAMPLE_SPREADSHEET_ID <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>1pG4OyAdePAelCT2fSBTVJ9lVYo6M-ApuTyeEPz49DOM<span class="pl-pds">"</span></span>
SAMPLE_RANGE_NAME <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Sheet1<span class="pl-pds">"</span></span>

sheet <span class="pl-k">=</span> <span class="pl-c1">Spreadsheet</span>(SAMPLE_SPREADSHEET_ID)
range <span class="pl-k">=</span> <span class="pl-c1">CellRange</span>(sheet, SAMPLE_RANGE_NAME)
ranges <span class="pl-k">=</span> <span class="pl-c1">CellRanges</span>(sheet, [<span class="pl-s"><span class="pl-pds">"</span>Sheet1!A1:B9<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Sheet1!B1:B9<span class="pl-pds">"</span></span>])

<span class="pl-c1">println</span>()
<span class="pl-c1">show</span>(client, sheet)

values <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>2<span class="pl-pds">"</span></span>; <span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>=A1+B1<span class="pl-pds">"</span></span> <span class="pl-c1">33</span>]
<span class="pl-c1">println</span>(values)

result <span class="pl-k">=</span> <span class="pl-c1">update!</span>(client, range, values)


<span class="pl-c"><span class="pl-c">#</span>###############################################################################</span>

result <span class="pl-k">=</span> <span class="pl-c1">get</span>(client, range)
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>RESULT: <span class="pl-v">$(result)</span><span class="pl-pds">"</span></span>)

<span class="pl-k">if</span> <span class="pl-c1">isnothing</span>(result<span class="pl-k">.</span>values)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>No data found.<span class="pl-pds">"</span></span>)
<span class="pl-k">else</span>
    <span class="pl-k">for</span> row <span class="pl-k">in</span> <span class="pl-c1">eachrow</span>(result<span class="pl-k">.</span>values)
        <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>ROW: <span class="pl-v">$row</span><span class="pl-pds">"</span></span>)
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span>###############################################################################</span>

result <span class="pl-k">=</span> <span class="pl-c1">get</span>(client, ranges)
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>RESULT: <span class="pl-v">$(result)</span><span class="pl-pds">"</span></span>)

<span class="pl-k">for</span> r <span class="pl-k">in</span> result
    <span class="pl-k">if</span> <span class="pl-c1">isnothing</span>(r<span class="pl-k">.</span>values)
        <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>No data found.<span class="pl-pds">"</span></span>)
    <span class="pl-k">else</span>
        <span class="pl-k">for</span> row <span class="pl-k">in</span> <span class="pl-c1">eachrow</span>(r<span class="pl-k">.</span>values)
            <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>ROW: <span class="pl-v">$(r<span class="pl-k">.</span>range)</span> <span class="pl-v">$row</span><span class="pl-pds">"</span></span>)
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span>###############################################################################</span>

<span class="pl-k">try</span>
    <span class="pl-c1">delete_sheet!</span>(client, sheet, <span class="pl-s"><span class="pl-pds">"</span>test sheet<span class="pl-pds">"</span></span>)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Deleted sheet<span class="pl-pds">"</span></span>)
<span class="pl-k">catch</span> e
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>No sheet to delete<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>

<span class="pl-c1">add_sheet!</span>(client, sheet, <span class="pl-s"><span class="pl-pds">"</span>test sheet<span class="pl-pds">"</span></span>)

<span class="pl-c1">println</span>()
<span class="pl-c1">show</span>(client, sheet, <span class="pl-s"><span class="pl-pds">"</span>test sheet<span class="pl-pds">"</span></span>)

values <span class="pl-k">=</span> <span class="pl-c1">fill</span>(<span class="pl-c1">11</span>, <span class="pl-c1">5</span>, <span class="pl-c1">5</span>)
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>VALUES <span class="pl-v">$(<span class="pl-c1">typeof</span>(values))</span> <span class="pl-v">$values</span><span class="pl-pds">"</span></span>)
result <span class="pl-k">=</span> <span class="pl-c1">update!</span>(client, <span class="pl-c1">CellRange</span>(sheet, <span class="pl-s"><span class="pl-pds">"</span>test sheet<span class="pl-pds">"</span></span>), values)

<span class="pl-c1">freeze!</span>(client, <span class="pl-c1">Sheet</span>(client, sheet, <span class="pl-s"><span class="pl-pds">"</span>test sheet<span class="pl-pds">"</span></span>), <span class="pl-c1">2</span>, <span class="pl-c1">3</span>)
<span class="pl-c1">append!</span>(client, <span class="pl-c1">Sheet</span>(client, sheet, <span class="pl-s"><span class="pl-pds">"</span>test sheet<span class="pl-pds">"</span></span>), <span class="pl-c1">1000</span>, <span class="pl-c1">3</span>)

<span class="pl-c1">insert_rows!</span>(client, <span class="pl-c1">CellIndexRange1D</span>(<span class="pl-c1">Sheet</span>(client, sheet, <span class="pl-s"><span class="pl-pds">"</span>test sheet<span class="pl-pds">"</span></span>), <span class="pl-c1">2</span>, <span class="pl-c1">3</span>))
<span class="pl-c1">insert_cols!</span>(client, <span class="pl-c1">CellIndexRange1D</span>(<span class="pl-c1">Sheet</span>(client, sheet, <span class="pl-s"><span class="pl-pds">"</span>test sheet<span class="pl-pds">"</span></span>), <span class="pl-c1">2</span>, <span class="pl-c1">3</span>))

<span class="pl-c1">delete_rows!</span>(client, <span class="pl-c1">CellIndexRange1D</span>(<span class="pl-c1">Sheet</span>(client, sheet, <span class="pl-s"><span class="pl-pds">"</span>test sheet<span class="pl-pds">"</span></span>), <span class="pl-c1">2</span>, <span class="pl-c1">3</span>))
<span class="pl-c1">delete_cols!</span>(client, <span class="pl-c1">CellIndexRange1D</span>(<span class="pl-c1">Sheet</span>(client, sheet, <span class="pl-s"><span class="pl-pds">"</span>test sheet<span class="pl-pds">"</span></span>), <span class="pl-c1">2</span>, <span class="pl-c1">3</span>))

<span class="pl-c1">clear!</span>(client, <span class="pl-c1">CellRange</span>(sheet, <span class="pl-s"><span class="pl-pds">"</span>test sheet!B2:C3<span class="pl-pds">"</span></span>))</pre></div>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<p>See <a href="https://chipkent.github.io/GoogleSheets.jl/dev/" rel="nofollow">https://chipkent.github.io/GoogleSheets.jl/dev/</a>.</p>
<p>Pull requests will publish documentation to <code><a href="https://chipkent.github.io/GoogleSheets.jl/previews/PR##" rel="nofollow">https://chipkent.github.io/GoogleSheets.jl/previews/PR##</a></code>.</p>
</article></div>