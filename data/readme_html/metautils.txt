<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-metautils---utilities-for-metaprogramming-in-julia" class="anchor" aria-hidden="true" href="#metautils---utilities-for-metaprogramming-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MetaUtils - Utilities for metaprogramming in Julia</h1>

<p><a href="https://genkuroki.github.io/MetaUtils.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/genkuroki/MetaUtils.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/06ec5160d00775f849f4419382c17a2590b6ae9813cffff8cf1b55172ccf7111/68747470733a2f2f7472617669732d63692e636f6d2f67656e6b75726f6b692f4d6574615574696c732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/genkuroki/MetaUtils.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package provides the utilities not found in InteractiveUtils and Meta modules.  This is the renamed and enhanced version of the deprecated package <a href="https://github.com/genkuroki/InteractiveUtilsPlus.jl">InteractiveUtilsPlus.jl</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Add this package by REPL package manager:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ]
pkg&gt; add https://github.com/genkuroki/MetaUtils.jl
"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>genkuroki<span class="pl-k">/</span>MetaUtils<span class="pl-k">.</span>jl</pre></div>
<p>Or, add this package using Pkg.jl.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Pkg; Pkg.add(url=&quot;https://github.com/genkuroki/MetaUtils.jl&quot;)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/genkuroki/MetaUtils.jl<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<p>For the detaild usage, see the Jupyter notebook <a href="https://nbviewer.jupyter.org/github/genkuroki/MetaUtils.jl/blob/master/MetaUtils.ipynb" rel="nofollow">MetaUtils.ipynb</a>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using MetaUtils
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> MetaUtils</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; @show_sexpr 2x+1
(:call, :+, (:call, :*, 2, :x), 1)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@show_sexpr</span> <span class="pl-c1">2</span>x<span class="pl-k">+</span><span class="pl-c1">1</span>
(<span class="pl-c1">:call</span>, :<span class="pl-k">+</span>, (<span class="pl-c1">:call</span>, :<span class="pl-k">*</span>, <span class="pl-c1">2</span>, <span class="pl-c1">:x</span>), <span class="pl-c1">1</span>)</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; x = 10; (:call, :+, (:call, :*, 2, :x), 1) |&gt; teval
21
"><pre>julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">10</span>; (<span class="pl-c1">:call</span>, :<span class="pl-k">+</span>, (<span class="pl-c1">:call</span>, :<span class="pl-k">*</span>, <span class="pl-c1">2</span>, <span class="pl-c1">:x</span>), <span class="pl-c1">1</span>) <span class="pl-k">|&gt;</span> teval
<span class="pl-c1">21</span></pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; @show_tree 2x+1
Expr(:call)
├─ :+
├─ Expr(:call)
│  ├─ :*
│  ├─ 2
│  └─ :x
└─ 1
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@show_tree</span> <span class="pl-c1">2</span>x<span class="pl-k">+</span><span class="pl-c1">1</span>
<span class="pl-c1">Expr</span>(<span class="pl-c1">:call</span>)
├─ :<span class="pl-k">+</span>
├─ <span class="pl-c1">Expr</span>(<span class="pl-c1">:call</span>)
│  ├─ :<span class="pl-k">*</span>
│  ├─ <span class="pl-c1">2</span>
│  └─ <span class="pl-c1">:x</span>
└─ <span class="pl-c1">1</span></pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; print_subtypes(AbstractRange)
AbstractRange
├─ LinRange
├─ OrdinalRange
│  ├─ AbstractUnitRange
│  │  ├─ Base.IdentityUnitRange
│  │  ├─ Base.OneTo
│  │  ├─ Base.Slice
│  │  └─ UnitRange
│  └─ StepRange
└─ StepRangeLen
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">print_subtypes</span>(AbstractRange)
AbstractRange
├─ LinRange
├─ OrdinalRange
│  ├─ AbstractUnitRange
│  │  ├─ Base<span class="pl-k">.</span>IdentityUnitRange
│  │  ├─ Base<span class="pl-k">.</span>OneTo
│  │  ├─ Base<span class="pl-k">.</span>Slice
│  │  └─ UnitRange
│  └─ StepRange
└─ StepRangeLen</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; show_expr(:(f(x, g(y, z))))
Expr(:call, :f, :x, 
    Expr(:call, :g, :y, :z))
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">show_expr</span>(:(<span class="pl-c1">f</span>(x, <span class="pl-c1">g</span>(y, z))))
<span class="pl-c1">Expr</span>(<span class="pl-c1">:call</span>, <span class="pl-c1">:f</span>, <span class="pl-c1">:x</span>, 
    <span class="pl-c1">Expr</span>(<span class="pl-c1">:call</span>, <span class="pl-c1">:g</span>, <span class="pl-c1">:y</span>, <span class="pl-c1">:z</span>))</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; @show_expr 2x+1
Expr(:call, :+, 
    Expr(:call, :*, 2, :x), 1)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@show_expr</span> <span class="pl-c1">2</span>x<span class="pl-k">+</span><span class="pl-c1">1</span>
<span class="pl-c1">Expr</span>(<span class="pl-c1">:call</span>, :<span class="pl-k">+</span>, 
    <span class="pl-c1">Expr</span>(<span class="pl-c1">:call</span>, :<span class="pl-k">*</span>, <span class="pl-c1">2</span>, <span class="pl-c1">:x</span>), <span class="pl-c1">1</span>)</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; x = 10; Expr(:call, :+, 
    Expr(:call, :*, 2, :x), 1) |&gt; eval
21
"><pre>julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">10</span>; <span class="pl-c1">Expr</span>(<span class="pl-c1">:call</span>, :<span class="pl-k">+</span>, 
    <span class="pl-c1">Expr</span>(<span class="pl-c1">:call</span>, :<span class="pl-k">*</span>, <span class="pl-c1">2</span>, <span class="pl-c1">:x</span>), <span class="pl-c1">1</span>) <span class="pl-k">|&gt;</span> eval
<span class="pl-c1">21</span></pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; show_texpr(:(f(x, g(y, z))))
Expr(:call, :f, :x, 
    Expr(:call, :g, :y, :z))
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">show_texpr</span>(:(<span class="pl-c1">f</span>(x, <span class="pl-c1">g</span>(y, z))))
<span class="pl-c1">Expr</span>(<span class="pl-c1">:call</span>, <span class="pl-c1">:f</span>, <span class="pl-c1">:x</span>, 
    <span class="pl-c1">Expr</span>(<span class="pl-c1">:call</span>, <span class="pl-c1">:g</span>, <span class="pl-c1">:y</span>, <span class="pl-c1">:z</span>))</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; @show_texpr 2x+1
(:call, :+, 
    (:call, :*, 2, :x), 1)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@show_texpr</span> <span class="pl-c1">2</span>x<span class="pl-k">+</span><span class="pl-c1">1</span>
(<span class="pl-c1">:call</span>, :<span class="pl-k">+</span>, 
    (<span class="pl-c1">:call</span>, :<span class="pl-k">*</span>, <span class="pl-c1">2</span>, <span class="pl-c1">:x</span>), <span class="pl-c1">1</span>)</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; x = 10; (:call, :+, 
    (:call, :*, 2, :x), 1) |&gt; teval
21
"><pre>julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">10</span>; (<span class="pl-c1">:call</span>, :<span class="pl-k">+</span>, 
    (<span class="pl-c1">:call</span>, :<span class="pl-k">*</span>, <span class="pl-c1">2</span>, <span class="pl-c1">:x</span>), <span class="pl-c1">1</span>) <span class="pl-k">|&gt;</span> teval
<span class="pl-c1">21</span></pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; (:call, :sin, (:call, :/, π, 6)) |&gt; teval
0.49999999999999994
"><pre>julia<span class="pl-k">&gt;</span> (<span class="pl-c1">:call</span>, <span class="pl-c1">:sin</span>, (<span class="pl-c1">:call</span>, :<span class="pl-k">/</span>, π, <span class="pl-c1">6</span>)) <span class="pl-k">|&gt;</span> teval
<span class="pl-c1">0.49999999999999994</span></pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; @teval (:call, :sin, (:call, :/, π, 6))
0.49999999999999994
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@teval</span> (<span class="pl-c1">:call</span>, <span class="pl-c1">:sin</span>, (<span class="pl-c1">:call</span>, :<span class="pl-k">/</span>, π, <span class="pl-c1">6</span>))
<span class="pl-c1">0.49999999999999994</span></pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; (:sin, (:/, π, 6)) |&gt; teval
0.49999999999999994
"><pre>julia<span class="pl-k">&gt;</span> (<span class="pl-c1">:sin</span>, (:<span class="pl-k">/</span>, π, <span class="pl-c1">6</span>)) <span class="pl-k">|&gt;</span> teval
<span class="pl-c1">0.49999999999999994</span></pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; @teval (:sin, (:/, π, 6))
0.49999999999999994
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@teval</span> (<span class="pl-c1">:sin</span>, (:<span class="pl-k">/</span>, π, <span class="pl-c1">6</span>))
<span class="pl-c1">0.49999999999999994</span></pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; MetaUtils.@t (:call, :sin, (:call, :/, π, 6))
:(sin(π / 6))
→ 0.49999999999999994
"><pre>julia<span class="pl-k">&gt;</span> MetaUtils<span class="pl-k">.</span><span class="pl-c1">@t</span> (<span class="pl-c1">:call</span>, <span class="pl-c1">:sin</span>, (<span class="pl-c1">:call</span>, :<span class="pl-k">/</span>, π, <span class="pl-c1">6</span>))
:(<span class="pl-c1">sin</span>(π <span class="pl-k">/</span> <span class="pl-c1">6</span>))
→ <span class="pl-c1">0.49999999999999994</span></pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; MetaUtils.@T (:call, :sin, (:call, :/, π, 6))
(:call, :sin, (:call, :/, π, 6))
→ (:call, :sin, 
    (:call, :/, π, 6))
→ :(sin(π / 6))
→ 0.49999999999999994
"><pre>julia<span class="pl-k">&gt;</span> MetaUtils<span class="pl-k">.</span><span class="pl-c1">@T</span> (<span class="pl-c1">:call</span>, <span class="pl-c1">:sin</span>, (<span class="pl-c1">:call</span>, :<span class="pl-k">/</span>, π, <span class="pl-c1">6</span>))
(<span class="pl-c1">:call</span>, <span class="pl-c1">:sin</span>, (<span class="pl-c1">:call</span>, :<span class="pl-k">/</span>, π, <span class="pl-c1">6</span>))
→ (<span class="pl-c1">:call</span>, <span class="pl-c1">:sin</span>, 
    (<span class="pl-c1">:call</span>, :<span class="pl-k">/</span>, π, <span class="pl-c1">6</span>))
→ :(<span class="pl-c1">sin</span>(π <span class="pl-k">/</span> <span class="pl-c1">6</span>))
→ <span class="pl-c1">0.49999999999999994</span></pre></div>
</article></div>