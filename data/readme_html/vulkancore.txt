<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-vulkancore" class="anchor" aria-hidden="true" href="#vulkancore"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>VulkanCore</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaGPU/VulkanCore.jl/workflows/CI/badge.svg"><img src="https://github.com/JuliaGPU/VulkanCore.jl/workflows/CI/badge.svg" alt="CI" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaGPU/VulkanCore.jl/workflows/TagBot/badge.svg"><img src="https://github.com/JuliaGPU/VulkanCore.jl/workflows/TagBot/badge.svg" alt="TagBot" style="max-width:100%;"></a></p>
<p>VulkanCore wraps Vulkan and exposes the library calls necessary to work with
Vulkan. It is targeted for developers wanting to directly work with Vulkan in
Julia.</p>
<p>If you are looking for a high-level Julian API you might wish to take a look at
<a href="https://github.com/JuliaGPU/Vulkan.jl">Vulkan.jl</a>.</p>
<p>We parsed the <a href="https://github.com/JuliaGPU/Vulkan-Docs/blob/1.0/src/spec/vk.xml">Vulkan XML specifications</a> and made them available via Julia's Documentation system. So this just works:
<a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/1010467/14315568/6fe80854-fbfe-11e5-88b2-53b11ddc37e0.png"><img src="https://cloud.githubusercontent.com/assets/1010467/14315568/6fe80854-fbfe-11e5-88b2-53b11ddc37e0.png" alt="selection_003" style="max-width:100%;"></a></p>
<h3><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h3>
<p>You are required to have a Vulkan capable device and the appropriate drivers.
If these are present, just run <code>pkg&gt; add VulkanCore</code> in Julia.</p>
<h3><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h3>
<ul>
<li><a href="https://www.khronos.org/vulkan/" rel="nofollow">Vulkan</a></li>
<li><a href="https://www.khronos.org/registry/vulkan/" rel="nofollow">Vulkan Registry</a></li>
<li><a href="https://www.khronos.org/registry/vulkan/#apispecs" rel="nofollow">Vulkan Specification</a></li>
</ul>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>The Vulkan wrapper is generated using <a href="https://github.com/JuliaInterop/Clang.jl">Clang.jl</a>
with the <a href="gen/generator.jl">generator file</a>.</p>
<p>The API aims to replicate the Vulkan C-API and is thus very bare bones and hands-on.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using VulkanCore.LibVulkan

count = Ref{Cuint}(0)

# Scan layers
err = vkEnumerateInstanceLayerProperties(count, C_NULL)
@assert err == VK_SUCCESS

global_layer_properties = Vector{VkLayerProperties}(undef, count[])
err = vkEnumerateInstanceLayerProperties(count, global_layer_properties)
@assert err == VK_SUCCESS
"><pre><span class="pl-k">using</span> VulkanCore<span class="pl-k">.</span>LibVulkan

count <span class="pl-k">=</span> <span class="pl-c1">Ref</span><span class="pl-c1">{Cuint}</span>(<span class="pl-c1">0</span>)

<span class="pl-c"><span class="pl-c">#</span> Scan layers</span>
err <span class="pl-k">=</span> <span class="pl-c1">vkEnumerateInstanceLayerProperties</span>(count, <span class="pl-c1">C_NULL</span>)
<span class="pl-c1">@assert</span> err <span class="pl-k">==</span> VK_SUCCESS

global_layer_properties <span class="pl-k">=</span> <span class="pl-c1">Vector</span><span class="pl-c1">{VkLayerProperties}</span>(undef, count[])
err <span class="pl-k">=</span> <span class="pl-c1">vkEnumerateInstanceLayerProperties</span>(count, global_layer_properties)
<span class="pl-c1">@assert</span> err <span class="pl-k">==</span> VK_SUCCESS</pre></div>
<h2><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing</h2>
<p>You are welcome to submit pull-request for improvements, but since this is
primarily a wrapper you might focus your attention on the high-level API at
<a href="https://github.com/JuliaGPU/Vulkan.jl">Vulkan.jl</a>.</p>
<h2><a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Thanks</h2>
<p>This package is inspired by the work done on <a href="https://github.com/JuliaGPU/CUDArt.jl">CUDArt.jl</a>
and <a href="https://github.com/JuliaGPU/OpenCL.jl">OpenCL.jl</a>.</p>
<p>A big thank you also to all core Julia developers, who made this possible in the
first place.</p>
</article></div>