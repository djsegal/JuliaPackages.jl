<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-vulkancore" class="anchor" aria-hidden="true" href="#vulkancore"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>VulkanCore</h1>
<p><a href="https://travis-ci.org/JuliaGPU/VulkanCore.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/bbe3fa4ac4df6317768921ae1af0c6d72e05ac20/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614750552f56756c6b616e436f72652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaGPU/VulkanCore.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>VulkanCore wraps Vulkan and exposes the library calls necessary to work with
Vulkan. It is targeted for developers wanting to directly work with Vulkan in
Julia.</p>
<p>If you are looking for a high-level Julian API you might wish to take a look at
<a href="https://github.com/JuliaGPU/Vulkan.jl">Vulkan.jl</a>.</p>
<p>We parsed the <a href="https://github.com/JuliaGPU/Vulkan-Docs/blob/1.0/src/spec/vk.xml">Vulkan XML specifications</a> and made them available via Julia's Documentation system. So this just works:
<a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/1010467/14315568/6fe80854-fbfe-11e5-88b2-53b11ddc37e0.png"><img src="https://cloud.githubusercontent.com/assets/1010467/14315568/6fe80854-fbfe-11e5-88b2-53b11ddc37e0.png" alt="selection_003" style="max-width:100%;"></a></p>
<h3><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h3>
<p>You are required to have a Vulkan capable device and the appropriate drivers.
If these are present, just run <code>pkg&gt; add VulkanCore</code> in Julia.</p>
<h3><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>References</h3>
<ul>
<li><a href="https://www.khronos.org/vulkan/" rel="nofollow">Vulkan</a></li>
<li><a href="https://www.khronos.org/registry/vulkan/" rel="nofollow">Vulkan Registry</a></li>
<li><a href="https://www.khronos.org/registry/vulkan/#apispecs" rel="nofollow">Vulkan Specification</a></li>
</ul>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>The Vulkan wrapper is generated using  <a href="https://github.com/JuliaInterop/Clang.jl">Clang.jl</a>
with the <a href="gen/generator.jl">generator file</a>.</p>
<p>The API aims to replicate the Vulkan C-API and is thus very bare bones and hands-on.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VulkanCore<span class="pl-k">.</span>LibVulkan

count <span class="pl-k">=</span> <span class="pl-c1">Ref</span><span class="pl-c1">{Cuint}</span>(<span class="pl-c1">0</span>)

<span class="pl-c"><span class="pl-c">#</span> Scan layers</span>
err <span class="pl-k">=</span> <span class="pl-c1">vkEnumerateInstanceLayerProperties</span>(count, C_NULL)
<span class="pl-c1">@assert</span> err <span class="pl-k">==</span> VK_SUCCESS

global_layer_properties <span class="pl-k">=</span> <span class="pl-c1">Vector</span><span class="pl-c1">{VkLayerProperties}</span>(undef, count[])
err <span class="pl-k">=</span> <span class="pl-c1">vkEnumerateInstanceLayerProperties</span>(count, global_layer_properties)
<span class="pl-c1">@assert</span> err <span class="pl-k">==</span> VK_SUCCESS</pre></div>
<h2><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contributing</h2>
<p>You are welcome to submit pull-request for improvements, but since this is
primarily a wrapper you might focus your attention on the high-level API at
<a href="https://github.com/JuliaGPU/Vulkan.jl">Vulkan.jl</a>.</p>
<h2><a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Thanks</h2>
<p>This package is inspired by the work done on <a href="https://github.com/JuliaGPU/CUDArt.jl">CUDArt.jl</a>
and <a href="https://github.com/JuliaGPU/OpenCL.jl">OpenCL.jl</a>.</p>
<p>A big thank you also to all core Julia developers, who made this possible in the
first place.</p>
</article></div>