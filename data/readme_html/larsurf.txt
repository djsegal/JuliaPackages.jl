<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-larsurfjl" class="anchor" aria-hidden="true" href="#larsurfjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>LarSurf.jl</h1>
<p><a href="https://travis-ci.org/mjirik/LarSurf.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/108061084cf0c60fee1e2beddeb1506799224588/68747470733a2f2f7472617669732d63692e6f72672f6d6a6972696b2f4c6172537572662e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/mjirik/LarSurf.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/mjirik/LarSurf.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/6c6a0e7831a8989ef8bd92c5e2f7c0c07b637c92/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d6a6972696b2f4c6172537572662e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/mjirik/LarSurf.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>Package for surface extraction using Linear Algebraic Representation theory by
Alberto Paoluzzi. See
<a href="https://github.com/cvdlab/LinearAlgebraicRepresentation.jl">original Julia repository</a>
for more details.</p>
<h1><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Install</h1>
<div class="highlight highlight-source-julia"><pre>] add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>mjirik<span class="pl-k">/</span>LarSurf<span class="pl-k">.</span>jl</pre></div>
<h2><a id="user-content-install-extra" class="anchor" aria-hidden="true" href="#install-extra"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Install extra</h2>
<p>The package is prepared for pure Julia however for reading various file formats and
the visualization we use additional packages.</p>
<h3><a id="user-content-read-3d-data-support" class="anchor" aria-hidden="true" href="#read-3d-data-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Read 3D data support</h3>
<p>To read the
Computed Tomography
data in <code>DICOM</code> and other formats we use Pio3d.jl package. This package is wrapper for python <code>io3d</code>.</p>
<p>Install python packages with <a href="https://www.anaconda.com/distribution/#download-section" rel="nofollow">conda</a></p>
<pre lang="commandline"><code>conda install -c simpleitk -c mjirik -c conda-forge io3d simpleitk pandas
</code></pre>
<p>Run Julia and install wrappers for python packages:</p>
<div class="highlight highlight-source-julia"><pre>ENV[<span class="pl-s"><span class="pl-pds">"</span>PYTHON<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-c1">strip</span>(<span class="pl-c1">split</span>(<span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">`</span><span class="pl-v">$((Sys<span class="pl-k">.</span><span class="pl-c1">iswindows</span>() ? <span class="pl-s"><span class="pl-pds">"</span>where<span class="pl-pds">"</span></span> : <span class="pl-s"><span class="pl-pds">"</span>which<span class="pl-pds">"</span></span>))</span> python<span class="pl-pds">`</span></span>, String), <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\n</span><span class="pl-pds">"</span></span>)[<span class="pl-c1">1</span>])
<span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>PyCall<span class="pl-pds">"</span></span>) ; Pkg<span class="pl-k">.</span><span class="pl-c1">build</span>(<span class="pl-s"><span class="pl-pds">"</span>PyCall<span class="pl-pds">"</span></span>)
] add Pandas
] add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>mjirik<span class="pl-k">/</span>Pio3d<span class="pl-k">.</span>jl

<span class="pl-k">using</span> Pandas, Pio3d
</pre></div>
<h3><a id="user-content-visualization-tools" class="anchor" aria-hidden="true" href="#visualization-tools"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Visualization tools</h3>
<p><code>ViewerGL</code> can be used to perform the visualization.</p>
<div class="highlight highlight-source-julia"><pre>] add http<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>cvdlab<span class="pl-k">/</span>LinearAlgebraicRepresentation<span class="pl-k">.</span>jl<span class="pl-c"><span class="pl-c">#</span>julia-1.0</span>
] add http<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>cvdlab<span class="pl-k">/</span>ViewerGL<span class="pl-k">.</span>jl</pre></div>
<p>There might be some problems with <a href="#datastructures-version-problem">DataStructures package version</a>
or with the <a href="#missing-nmake">Triangle build</a>.</p>
<h2><a id="user-content-for-developers" class="anchor" aria-hidden="true" href="#for-developers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>For developers</h2>
<div class="highlight highlight-source-julia"><pre>] develop https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>mjirik<span class="pl-k">/</span>LarSurf<span class="pl-k">.</span>jl</pre></div>
<h1><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Examples</h1>
<h2><a id="user-content-truncated-sphere-example" class="anchor" aria-hidden="true" href="#truncated-sphere-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Truncated sphere example</h2>
<p>Do the surface extraction on simple shape. <a href="examples/show_surface_parallel_truncated_sphere.jl">Source code</a></p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ViewerGL
<span class="pl-k">using</span> Distributed
<span class="pl-c1">addprocs</span>(<span class="pl-c1">3</span>)
<span class="pl-k">using</span> LarSurf

block_size <span class="pl-k">=</span> [<span class="pl-c1">20</span>, <span class="pl-c1">20</span>, <span class="pl-c1">20</span>]
LarSurf<span class="pl-k">.</span><span class="pl-c1">lsp_setup</span>(block_size)

segmentation <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span><span class="pl-c1">generate_truncated_sphere</span>(<span class="pl-c1">10</span>)
V, FV <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span><span class="pl-c1">lsp_get_surface</span>(segmentation)
FVtri <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span><span class="pl-c1">triangulate_quads</span>(FV)

Vs <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span>Smoothing<span class="pl-k">.</span><span class="pl-c1">smoothing_FV_taubin</span>(V, FV, <span class="pl-c1">0.4</span>, <span class="pl-k">-</span><span class="pl-c1">0.3</span>, <span class="pl-c1">50</span>)

ViewerGL<span class="pl-k">.</span><span class="pl-c1">VIEW</span>([
  ViewerGL<span class="pl-k">.</span><span class="pl-c1">GLGrid</span>(Vs,FVtri,ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point4d</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0.1</span>))
  ViewerGL<span class="pl-k">.</span><span class="pl-c1">GLAxis</span>(ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point3d</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>),ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point3d</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>))
])

objlines <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span>Lar<span class="pl-k">.</span><span class="pl-c1">lar2obj</span>(Vs, FVtri, <span class="pl-s"><span class="pl-pds">"</span>tetris_tri_taubin.obj<span class="pl-pds">"</span></span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="graphics/truncated_sphere.png"><img src="graphics/truncated_sphere.png" alt="tetris" style="max-width:100%;"></a></p>
<h2><a id="user-content-tetris-example" class="anchor" aria-hidden="true" href="#tetris-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Tetris example</h2>
<p>Do the surface extraction on simple shape. <a href="examples/show_surface_parallel_tetris.jl">Source code</a></p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ViewerGL
<span class="pl-k">using</span> Distributed
<span class="pl-k">if</span> <span class="pl-c1">nprocs</span>() <span class="pl-k">==</span> <span class="pl-c1">1</span>
    <span class="pl-c1">addprocs</span>(<span class="pl-c1">3</span>)
	<span class="pl-c1">@info</span> <span class="pl-s"><span class="pl-pds">"</span>adding 3 more CPUs<span class="pl-pds">"</span></span>
<span class="pl-k">end</span>
<span class="pl-k">using</span> Logging
<span class="pl-k">using</span> SparseArrays
<span class="pl-c1">@everywhere</span> <span class="pl-k">using</span> LarSurf

block_size <span class="pl-k">=</span> [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>]
segmentation <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span><span class="pl-c1">tetris_brick</span>()
LarSurf<span class="pl-k">.</span><span class="pl-c1">lsp_setup</span>(block_size)
larmodel <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span><span class="pl-c1">lsp_get_surface</span>(segmentation)
V, FV <span class="pl-k">=</span> larmodel
FVtri <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span><span class="pl-c1">triangulate_quads</span>(FV)
objlines <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span>Lar<span class="pl-k">.</span><span class="pl-c1">lar2obj</span>(V, FVtri, <span class="pl-s"><span class="pl-pds">"</span>tetris_tri.obj<span class="pl-pds">"</span></span>)

ViewerGL<span class="pl-k">.</span><span class="pl-c1">VIEW</span>([
  ViewerGL<span class="pl-k">.</span><span class="pl-c1">GLGrid</span>(V,FVtri,ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point4d</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0.1</span>))
  ViewerGL<span class="pl-k">.</span><span class="pl-c1">GLAxis</span>(ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point3d</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>),ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point3d</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>))
])</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="graphics/tetris.png"><img src="graphics/tetris.png" alt="tetris" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia"><pre>Vs <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span>Smoothing<span class="pl-k">.</span><span class="pl-c1">smoothing_FV_taubin</span>(V, FV, <span class="pl-c1">0.4</span>, <span class="pl-k">-</span><span class="pl-c1">0.2</span>, <span class="pl-c1">2</span>)

ViewerGL<span class="pl-k">.</span><span class="pl-c1">VIEW</span>([
    ViewerGL<span class="pl-k">.</span><span class="pl-c1">GLGrid</span>(Vs,FVtri,ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point4d</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0.1</span>))
	ViewerGL<span class="pl-k">.</span><span class="pl-c1">GLAxis</span>(ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point3d</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>),ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point3d</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>))
])

objlines <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span>Lar<span class="pl-k">.</span><span class="pl-c1">lar2obj</span>(V, FVtri, <span class="pl-s"><span class="pl-pds">"</span>tetris_tri_taubin.obj<span class="pl-pds">"</span></span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="graphics/tetris_taubin.png"><img src="graphics/tetris_taubin.png" alt="tetris" style="max-width:100%;"></a></p>
<h2><a id="user-content-corrosion-cast-experiment-in-pure-julia" class="anchor" aria-hidden="true" href="#corrosion-cast-experiment-in-pure-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Corrosion cast experiment in pure Julia</h2>
<p>Run experiment with corrosion cast data. Measure all statistics.</p>
<p>Data can be downloaded <a href="http://home.zcu.cz/~mjirik/lisa/sample_data/nrn10.jld2" rel="nofollow">here</a></p>
<pre lang="commandline"><code>julia experiments\surface_extraction_parallel.jl --crop 50 -i nrn10.jld2 --show
</code></pre>
<p><a target="_blank" rel="noopener noreferrer" href="graphics/nrn10_50.png"><img src="graphics/nrn10_50.png" alt="tetris" style="max-width:100%;"></a></p>
<p>To have more information about options use</p>
<pre lang="commandline"><code>julia experiments\surface_extraction_parallel.jl --help
</code></pre>
<h2><a id="user-content-corrosion-cast-example-with-pycall" class="anchor" aria-hidden="true" href="#corrosion-cast-example-with-pycall"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Corrosion cast example with PyCall</h2>
<p>Data can be downloaded <a href="http://home.zcu.cz/~mjirik/lisa/sample_data/nrn10.pklz" rel="nofollow">here</a></p>
<pre lang="commandline"><code>julia experiments\surface_extraction_parallel.jl --crop 100 -i nrn10.pklz --show
</code></pre>
<h2><a id="user-content-liver-extraction-experiment" class="anchor" aria-hidden="true" href="#liver-extraction-experiment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Liver extraction experiment</h2>
<p>Run experiment with extraction of CT data. Measure all statistics.</p>
<h3><a id="user-content-get-data" class="anchor" aria-hidden="true" href="#get-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Get data</h3>
<p>We are using dataset 3D-IRCADb 01 | IRCAD France.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pio3d
Pio3d<span class="pl-k">.</span><span class="pl-c1">datasets_download</span>(<span class="pl-s"><span class="pl-pds">"</span>3Dircadb1.1<span class="pl-pds">"</span></span>)
datap <span class="pl-k">=</span> Pio3d<span class="pl-k">.</span><span class="pl-c1">read3d</span>(Pio3d<span class="pl-k">.</span><span class="pl-c1">datasets_join_path</span>(<span class="pl-s"><span class="pl-pds">"</span>medical/orig/sample-data/nrn4.pklz<span class="pl-pds">"</span></span>))
</pre></div>
<p>Data can be also manually downloaded from <a href="https://www.ircad.fr/research/3d-ircadb-01/" rel="nofollow">dataset website</a></p>
<h3><a id="user-content-run-experiment" class="anchor" aria-hidden="true" href="#run-experiment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Run experiment</h3>
<p>Due to long run time the experiment is divided into smaller parts.
The extracted data are stored into <code>.jld2</code> files.</p>
<ul>
<li><a href="experiments/surface_extraction_parallel_ircad01.jl">Surface extraction</a>
The <code>stepxy</code> and <code>stepz</code> allow to drop some data for faster debug.
The <code>blocks_size</code> parameter control the size of parallel blocks.</li>
<li><a href="experiments/surface_extraction_parallel_ircad01_smoothing.jl">Smoothing</a></li>
<li><a href="experiments/surface_extraction_parallel_ircad01_show.jl">Show extraction</a></li>
<li><a href="experiments/surface_extraction_parallel_ircad01_obj.jl">Create <code>.obj</code> file</a></li>
</ul>
<p>All measured times are recorded into <code>.csv</code> file
(<code>exp_surface_extraction_ircad_times.csv</code>)</p>
<p><a target="_blank" rel="noopener noreferrer" href="graphics/liver_taubin.png"><img src="graphics/liver_taubin.png" alt="smooth liver" style="max-width:100%;"></a></p>
<h3><a id="user-content-get-3d-model-of-portal-vein" class="anchor" aria-hidden="true" href="#get-3d-model-of-portal-vein"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Get 3D model of portal vein</h3>
<pre lang="commandline"><code>julia experiments\surface_extraction_parallel.jl -d medical/orig/3Dircadb1.1/MASKS_DICOM/portalvein --show --taubin_n 10 --taubin_lambda 0.5 --taubin_mu -0.2 --n_procs 4 --threshold 0 --color 1. 1. 0. 1.0
</code></pre>
<h1><a id="user-content-convert-volumetric-data-to-jld2-data" class="anchor" aria-hidden="true" href="#convert-volumetric-data-to-jld2-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Convert volumetric data to jld2 data</h1>
<pre lang="commandline"><code>julia experiments\to_jld2.jl -i "..\..\..\lisa_data\nrn10.pklz"
</code></pre>
<h1><a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Troubleshooting</h1>
<h2><a id="user-content-pycall" class="anchor" aria-hidden="true" href="#pycall"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PyCall</h2>
<p>Problems with install are often caused by PyCall package
heck the python path</p>
<div class="highlight highlight-source-shell"><pre>which python</pre></div>
<h2><a id="user-content-datastructures-version-problem" class="anchor" aria-hidden="true" href="#datastructures-version-problem"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>DataStructures version problem</h2>
<p>There can be some problem with <code>DataStructures</code> package version. It is
caused by <code>ViewerGl</code>. It require <code>DataStructures</code> with version <code>0.15.0</code> only.
You will probably need to remove <code>JLD2</code> package and then install <code>DataStructures</code>
again.</p>
<div class="highlight highlight-source-julia"><pre>] remove ExSup
] remove JLD2
] remove DataStructures
] add DataStructures@<span class="pl-c1">0.15.0</span>
] add ExSup

</pre></div>
<h2><a id="user-content-missing-nmake" class="anchor" aria-hidden="true" href="#missing-nmake"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Missing nmake</h2>
<p>On windows you will need
<a href="https://developer.microsoft.com/cs-cz/windows/downloads/windows-10-sdk" rel="nofollow">Windows SDK</a>.
Then you need to start julia in <code>x64 Native Tools Command Prompt for VS 2017</code> and
build the package.</p>
<div class="highlight highlight-source-julia"><pre>] add Triangle
] build Triangle</pre></div>
<p>Then you can start julia from <code>cmd</code>.</p>
</article></div>