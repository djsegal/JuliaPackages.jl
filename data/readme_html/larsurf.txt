<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-larsurfjl" class="anchor" aria-hidden="true" href="#larsurfjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LarSurf.jl</h1>
<p dir="auto"><a href="https://travis-ci.org/mjirik/LarSurf.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8b45cfa9c71748232420dfa47347cec4c17870f7942fae1cb9ec3400bafcb744/68747470733a2f2f7472617669732d63692e6f72672f6d6a6972696b2f4c6172537572662e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/mjirik/LarSurf.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/mjirik/LarSurf.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/e64106507452f5d997d030b185495e56b399a6526c3049e7ccdc90ac18374cdf/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d6a6972696b2f4c6172537572662e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/mjirik/LarSurf.jl/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">Package for surface extraction using Linear Algebraic Representation theory by
Alberto Paoluzzi. See
<a href="https://github.com/cvdlab/LinearAlgebraicRepresentation.jl">original Julia repository</a>
for more details.</p>
<h1 dir="auto"><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add https://github.com/mjirik/LarSurf.jl"><pre>] add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>mjirik<span class="pl-k">/</span>LarSurf<span class="pl-k">.</span>jl</pre></div>
<h2 dir="auto"><a id="user-content-install-extra" class="anchor" aria-hidden="true" href="#install-extra"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install extra</h2>
<p dir="auto">The package is prepared for pure Julia however for reading various file formats and
the visualization we use additional packages.</p>
<h3 dir="auto"><a id="user-content-read-3d-data-support" class="anchor" aria-hidden="true" href="#read-3d-data-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Read 3D data support</h3>
<p dir="auto">To read the
Computed Tomography
data in <code>DICOM</code> and other formats we use Pio3d.jl package. This package is wrapper for python <code>io3d</code>.</p>
<p dir="auto">Install python packages with <a href="https://www.anaconda.com/distribution/#download-section" rel="nofollow">conda</a></p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="conda install -c simpleitk -c mjirik -c conda-forge io3d simpleitk pandas"><pre lang="commandline" class="notranslate"><code>conda install -c simpleitk -c mjirik -c conda-forge io3d simpleitk pandas
</code></pre></div>
<p dir="auto">Run Julia and install wrappers for python packages:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ENV[&quot;PYTHON&quot;] = strip(split(read(`$((Sys.iswindows() ? &quot;where&quot; : &quot;which&quot;)) python`, String), &quot;\n&quot;)[1])
using Pkg; Pkg.add(&quot;PyCall&quot;) ; Pkg.build(&quot;PyCall&quot;)
] add Pandas
] add https://github.com/mjirik/Pio3d.jl

using Pandas, Pio3d
"><pre><span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>PYTHON<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-c1">strip</span>(<span class="pl-c1">split</span>(<span class="pl-c1">read</span>(<span class="pl-s"><span class="pl-pds">`</span>$((Sys.iswindows() ? "where" : "which")) python<span class="pl-pds">`</span></span>, String), <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\n</span><span class="pl-pds">"</span></span>)[<span class="pl-c1">1</span>])
<span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>PyCall<span class="pl-pds">"</span></span>) ; Pkg<span class="pl-k">.</span><span class="pl-c1">build</span>(<span class="pl-s"><span class="pl-pds">"</span>PyCall<span class="pl-pds">"</span></span>)
] add Pandas
] add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>mjirik<span class="pl-k">/</span>Pio3d<span class="pl-k">.</span>jl

<span class="pl-k">using</span> Pandas, Pio3d
</pre></div>
<h3 dir="auto"><a id="user-content-visualization-tools" class="anchor" aria-hidden="true" href="#visualization-tools"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Visualization tools</h3>
<p dir="auto"><code>ViewerGL</code> can be used to perform the visualization.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add http://github.com/cvdlab/LinearAlgebraicRepresentation.jl#julia-1.0
] add http://github.com/cvdlab/ViewerGL.jl"><pre>] add http<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>cvdlab<span class="pl-k">/</span>LinearAlgebraicRepresentation<span class="pl-k">.</span>jl<span class="pl-c"><span class="pl-c">#</span>julia-1.0</span>
] add http<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>cvdlab<span class="pl-k">/</span>ViewerGL<span class="pl-k">.</span>jl</pre></div>
<p dir="auto">There might be some problems with <a href="#datastructures-version-problem">DataStructures package version</a>
or with the <a href="#missing-nmake">Triangle build</a>.</p>
<h2 dir="auto"><a id="user-content-for-developers" class="anchor" aria-hidden="true" href="#for-developers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>For developers</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] develop https://github.com/mjirik/LarSurf.jl"><pre>] develop https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>mjirik<span class="pl-k">/</span>LarSurf<span class="pl-k">.</span>jl</pre></div>
<h1 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h1>
<h2 dir="auto"><a id="user-content-truncated-sphere-example" class="anchor" aria-hidden="true" href="#truncated-sphere-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Truncated sphere example</h2>
<p dir="auto">Do the surface extraction on simple shape. <a href="examples/show_surface_parallel_truncated_sphere.jl">Source code</a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ViewerGL
using Distributed
addprocs(3)
using LarSurf

block_size = [20, 20, 20]
LarSurf.lsp_setup(block_size)

segmentation = LarSurf.generate_truncated_sphere(10)
V, FV = LarSurf.lsp_get_surface(segmentation)
FVtri = LarSurf.triangulate_quads(FV)

Vs = LarSurf.Smoothing.smoothing_FV_taubin(V, FV, 0.4, -0.3, 50)

ViewerGL.VIEW([
  ViewerGL.GLGrid(Vs,FVtri,ViewerGL.Point4d(1,1,1,0.1))
  ViewerGL.GLAxis(ViewerGL.Point3d(-1,-1,-1),ViewerGL.Point3d(1,1,1))
])

objlines = LarSurf.Lar.lar2obj(Vs, FVtri, &quot;tetris_tri_taubin.obj&quot;)"><pre><span class="pl-k">using</span> ViewerGL
<span class="pl-k">using</span> Distributed
<span class="pl-c1">addprocs</span>(<span class="pl-c1">3</span>)
<span class="pl-k">using</span> LarSurf

block_size <span class="pl-k">=</span> [<span class="pl-c1">20</span>, <span class="pl-c1">20</span>, <span class="pl-c1">20</span>]
LarSurf<span class="pl-k">.</span><span class="pl-c1">lsp_setup</span>(block_size)

segmentation <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span><span class="pl-c1">generate_truncated_sphere</span>(<span class="pl-c1">10</span>)
V, FV <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span><span class="pl-c1">lsp_get_surface</span>(segmentation)
FVtri <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span><span class="pl-c1">triangulate_quads</span>(FV)

Vs <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span>Smoothing<span class="pl-k">.</span><span class="pl-c1">smoothing_FV_taubin</span>(V, FV, <span class="pl-c1">0.4</span>, <span class="pl-k">-</span><span class="pl-c1">0.3</span>, <span class="pl-c1">50</span>)

ViewerGL<span class="pl-k">.</span><span class="pl-c1">VIEW</span>([
  ViewerGL<span class="pl-k">.</span><span class="pl-c1">GLGrid</span>(Vs,FVtri,ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point4d</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0.1</span>))
  ViewerGL<span class="pl-k">.</span><span class="pl-c1">GLAxis</span>(ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point3d</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>),ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point3d</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>))
])

objlines <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span>Lar<span class="pl-k">.</span><span class="pl-c1">lar2obj</span>(Vs, FVtri, <span class="pl-s"><span class="pl-pds">"</span>tetris_tri_taubin.obj<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="graphics/truncated_sphere.png"><img src="graphics/truncated_sphere.png" alt="tetris" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-tetris-example" class="anchor" aria-hidden="true" href="#tetris-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tetris example</h2>
<p dir="auto">Do the surface extraction on simple shape. <a href="examples/show_surface_parallel_tetris.jl">Source code</a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
using ViewerGL
using Distributed
if nprocs() == 1
    addprocs(3)
	@info &quot;adding 3 more CPUs&quot;
end
using Logging
using SparseArrays
@everywhere using LarSurf

block_size = [2, 2, 2]
segmentation = LarSurf.tetris_brick()
LarSurf.lsp_setup(block_size)
larmodel = LarSurf.lsp_get_surface(segmentation)
V, FV = larmodel
FVtri = LarSurf.triangulate_quads(FV)
objlines = LarSurf.Lar.lar2obj(V, FVtri, &quot;tetris_tri.obj&quot;)

ViewerGL.VIEW([
  ViewerGL.GLGrid(V,FVtri,ViewerGL.Point4d(1,1,1,0.1))
  ViewerGL.GLAxis(ViewerGL.Point3d(-1,-1,-1),ViewerGL.Point3d(1,1,1))
])"><pre><span class="pl-k">using</span> ViewerGL
<span class="pl-k">using</span> Distributed
<span class="pl-k">if</span> <span class="pl-c1">nprocs</span>() <span class="pl-k">==</span> <span class="pl-c1">1</span>
    <span class="pl-c1">addprocs</span>(<span class="pl-c1">3</span>)
	<span class="pl-c1">@info</span> <span class="pl-s"><span class="pl-pds">"</span>adding 3 more CPUs<span class="pl-pds">"</span></span>
<span class="pl-k">end</span>
<span class="pl-k">using</span> Logging
<span class="pl-k">using</span> SparseArrays
<span class="pl-c1">@everywhere</span> <span class="pl-k">using</span> LarSurf

block_size <span class="pl-k">=</span> [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>, <span class="pl-c1">2</span>]
segmentation <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span><span class="pl-c1">tetris_brick</span>()
LarSurf<span class="pl-k">.</span><span class="pl-c1">lsp_setup</span>(block_size)
larmodel <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span><span class="pl-c1">lsp_get_surface</span>(segmentation)
V, FV <span class="pl-k">=</span> larmodel
FVtri <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span><span class="pl-c1">triangulate_quads</span>(FV)
objlines <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span>Lar<span class="pl-k">.</span><span class="pl-c1">lar2obj</span>(V, FVtri, <span class="pl-s"><span class="pl-pds">"</span>tetris_tri.obj<span class="pl-pds">"</span></span>)

ViewerGL<span class="pl-k">.</span><span class="pl-c1">VIEW</span>([
  ViewerGL<span class="pl-k">.</span><span class="pl-c1">GLGrid</span>(V,FVtri,ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point4d</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0.1</span>))
  ViewerGL<span class="pl-k">.</span><span class="pl-c1">GLAxis</span>(ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point3d</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>),ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point3d</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>))
])</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="graphics/tetris.png"><img src="graphics/tetris.png" alt="tetris" style="max-width: 100%;"></a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
Vs = LarSurf.Smoothing.smoothing_FV_taubin(V, FV, 0.4, -0.2, 2)

ViewerGL.VIEW([
    ViewerGL.GLGrid(Vs,FVtri,ViewerGL.Point4d(1,1,1,0.1))
	ViewerGL.GLAxis(ViewerGL.Point3d(-1,-1,-1),ViewerGL.Point3d(1,1,1))
])

objlines = LarSurf.Lar.lar2obj(V, FVtri, &quot;tetris_tri_taubin.obj&quot;)"><pre>Vs <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span>Smoothing<span class="pl-k">.</span><span class="pl-c1">smoothing_FV_taubin</span>(V, FV, <span class="pl-c1">0.4</span>, <span class="pl-k">-</span><span class="pl-c1">0.2</span>, <span class="pl-c1">2</span>)

ViewerGL<span class="pl-k">.</span><span class="pl-c1">VIEW</span>([
    ViewerGL<span class="pl-k">.</span><span class="pl-c1">GLGrid</span>(Vs,FVtri,ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point4d</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0.1</span>))
	ViewerGL<span class="pl-k">.</span><span class="pl-c1">GLAxis</span>(ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point3d</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>),ViewerGL<span class="pl-k">.</span><span class="pl-c1">Point3d</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>))
])

objlines <span class="pl-k">=</span> LarSurf<span class="pl-k">.</span>Lar<span class="pl-k">.</span><span class="pl-c1">lar2obj</span>(V, FVtri, <span class="pl-s"><span class="pl-pds">"</span>tetris_tri_taubin.obj<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="graphics/tetris_taubin.png"><img src="graphics/tetris_taubin.png" alt="tetris" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-corrosion-cast-experiment-in-pure-julia" class="anchor" aria-hidden="true" href="#corrosion-cast-experiment-in-pure-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Corrosion cast experiment in pure Julia</h2>
<p dir="auto">Run experiment with corrosion cast data. Measure all statistics.</p>
<p dir="auto">Data can be downloaded <a href="http://home.zcu.cz/~mjirik/lisa/sample_data/nrn10.jld2" rel="nofollow">here</a></p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia experiments\surface_extraction_parallel.jl --crop 50 -i nrn10.jld2 --show"><pre lang="commandline" class="notranslate"><code>julia experiments\surface_extraction_parallel.jl --crop 50 -i nrn10.jld2 --show
</code></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="graphics/nrn10_50.png"><img src="graphics/nrn10_50.png" alt="tetris" style="max-width: 100%;"></a></p>
<p dir="auto">To have more information about options use</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia experiments\surface_extraction_parallel.jl --help"><pre lang="commandline" class="notranslate"><code>julia experiments\surface_extraction_parallel.jl --help
</code></pre></div>
<h2 dir="auto"><a id="user-content-corrosion-cast-example-with-pycall" class="anchor" aria-hidden="true" href="#corrosion-cast-example-with-pycall"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Corrosion cast example with PyCall</h2>
<p dir="auto">Data can be downloaded <a href="http://home.zcu.cz/~mjirik/lisa/sample_data/nrn10.pklz" rel="nofollow">here</a></p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia experiments\surface_extraction_parallel.jl --crop 100 -i nrn10.pklz --show"><pre lang="commandline" class="notranslate"><code>julia experiments\surface_extraction_parallel.jl --crop 100 -i nrn10.pklz --show
</code></pre></div>
<h2 dir="auto"><a id="user-content-liver-extraction-experiment" class="anchor" aria-hidden="true" href="#liver-extraction-experiment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Liver extraction experiment</h2>
<p dir="auto">Run experiment with extraction of CT data. Measure all statistics.</p>
<h3 dir="auto"><a id="user-content-get-data" class="anchor" aria-hidden="true" href="#get-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Get data</h3>
<p dir="auto">We are using dataset 3D-IRCADb 01 | IRCAD France.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pio3d
Pio3d.datasets_download(&quot;3Dircadb1.1&quot;)
datap = Pio3d.read3d(Pio3d.datasets_join_path(&quot;medical/orig/sample-data/nrn4.pklz&quot;))
"><pre><span class="pl-k">using</span> Pio3d
Pio3d<span class="pl-k">.</span><span class="pl-c1">datasets_download</span>(<span class="pl-s"><span class="pl-pds">"</span>3Dircadb1.1<span class="pl-pds">"</span></span>)
datap <span class="pl-k">=</span> Pio3d<span class="pl-k">.</span><span class="pl-c1">read3d</span>(Pio3d<span class="pl-k">.</span><span class="pl-c1">datasets_join_path</span>(<span class="pl-s"><span class="pl-pds">"</span>medical/orig/sample-data/nrn4.pklz<span class="pl-pds">"</span></span>))
</pre></div>
<p dir="auto">Data can be also manually downloaded from <a href="https://www.ircad.fr/research/3d-ircadb-01/" rel="nofollow">dataset website</a></p>
<h3 dir="auto"><a id="user-content-run-experiment" class="anchor" aria-hidden="true" href="#run-experiment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Run experiment</h3>
<p dir="auto">Due to long run time the experiment is divided into smaller parts.
The extracted data are stored into <code>.jld2</code> files.</p>
<ul dir="auto">
<li><a href="experiments/surface_extraction_parallel_ircad01.jl">Surface extraction</a>
The <code>stepxy</code> and <code>stepz</code> allow to drop some data for faster debug.
The <code>blocks_size</code> parameter control the size of parallel blocks.</li>
<li><a href="experiments/surface_extraction_parallel_ircad01_smoothing.jl">Smoothing</a></li>
<li><a href="experiments/surface_extraction_parallel_ircad01_show.jl">Show extraction</a></li>
<li><a href="experiments/surface_extraction_parallel_ircad01_obj.jl">Create <code>.obj</code> file</a></li>
</ul>
<p dir="auto">All measured times are recorded into <code>.csv</code> file
(<code>exp_surface_extraction_ircad_times.csv</code>)</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="graphics/liver_taubin.png"><img src="graphics/liver_taubin.png" alt="smooth liver" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-get-3d-model-of-portal-vein" class="anchor" aria-hidden="true" href="#get-3d-model-of-portal-vein"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Get 3D model of portal vein</h3>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia experiments\surface_extraction_parallel.jl -d medical/orig/3Dircadb1.1/MASKS_DICOM/portalvein --show --taubin_n 10 --taubin_lambda 0.5 --taubin_mu -0.2 --n_procs 4 --threshold 0 --color 1. 1. 0. 1.0"><pre lang="commandline" class="notranslate"><code>julia experiments\surface_extraction_parallel.jl -d medical/orig/3Dircadb1.1/MASKS_DICOM/portalvein --show --taubin_n 10 --taubin_lambda 0.5 --taubin_mu -0.2 --n_procs 4 --threshold 0 --color 1. 1. 0. 1.0
</code></pre></div>
<h1 dir="auto"><a id="user-content-convert-volumetric-data-to-jld2-data" class="anchor" aria-hidden="true" href="#convert-volumetric-data-to-jld2-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Convert volumetric data to jld2 data</h1>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia experiments\to_jld2.jl -i &quot;..\..\..\lisa_data\nrn10.pklz&quot;"><pre lang="commandline" class="notranslate"><code>julia experiments\to_jld2.jl -i "..\..\..\lisa_data\nrn10.pklz"
</code></pre></div>
<h1 dir="auto"><a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Troubleshooting</h1>
<h2 dir="auto"><a id="user-content-pycall" class="anchor" aria-hidden="true" href="#pycall"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PyCall</h2>
<p dir="auto">Problems with install are often caused by PyCall package
heck the python path</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="which python"><pre>which python</pre></div>
<h2 dir="auto"><a id="user-content-datastructures-version-problem" class="anchor" aria-hidden="true" href="#datastructures-version-problem"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DataStructures version problem</h2>
<p dir="auto">There can be some problem with <code>DataStructures</code> package version. It is
caused by <code>ViewerGl</code>. It require <code>DataStructures</code> with version <code>0.15.0</code> only.
You will probably need to remove <code>JLD2</code> package and then install <code>DataStructures</code>
again.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] remove ExSup
] remove JLD2
] remove DataStructures
] add DataStructures@0.15.0
] add ExSup

"><pre>] remove ExSup
] remove JLD2
] remove DataStructures
] add DataStructures@<span class="pl-c1">0.15</span>.<span class="pl-c1">0</span>
] add ExSup

</pre></div>
<h2 dir="auto"><a id="user-content-missing-nmake" class="anchor" aria-hidden="true" href="#missing-nmake"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Missing nmake</h2>
<p dir="auto">On windows you will need
<a href="https://developer.microsoft.com/cs-cz/windows/downloads/windows-10-sdk" rel="nofollow">Windows SDK</a>.
Then you need to start julia in <code>x64 Native Tools Command Prompt for VS 2017</code> and
build the package.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add Triangle
] build Triangle"><pre>] add Triangle
] build Triangle</pre></div>
<p dir="auto">Then you can start julia from <code>cmd</code>.</p>
</article></div>