<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-gnutlsjl" class="anchor" aria-hidden="true" href="#gnutlsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GnuTLS.jl</h1>
<p>Add transport layer security (TLS) to any Julia Stream</p>
<p><a href="https://travis-ci.org/JuliaWeb/GnuTLS.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/93640a79838164be4b698603d75cb87cfcff402c3e9782f8244b375cafe9f0d1/68747470733a2f2f7472617669732d63692e6f72672f4a756c69615765622f476e75544c532e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaWeb/GnuTLS.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaWeb/GnuTLS.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/e877b949f3ede3d7fec9d09a2a8a5f5fe1fbaa2e0cd5229c063709189a17089e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c69615765622f476e75544c532e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaWeb/GnuTLS.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></p>
<p><a href="http://pkg.julialang.org/?pkg=GnuTLS&amp;ver=0.3" rel="nofollow"><img src="https://camo.githubusercontent.com/ccc34bd3445d8384bbd3bb0a94167a4e1fcf1c1fb1ea8211cf2c1afc0d330e70/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f476e75544c535f302e332e737667" alt="GnuTLS" data-canonical-src="http://pkg.julialang.org/badges/GnuTLS_0.3.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=GnuTLS&amp;ver=0.4" rel="nofollow"><img src="https://camo.githubusercontent.com/7e93dce29619934688751550776b0b58ccceeea1b9d5b53076a3095d213b8836/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f476e75544c535f302e342e737667" alt="GnuTLS" data-canonical-src="http://pkg.julialang.org/badges/GnuTLS_0.4.svg" style="max-width:100%;"></a></p>
<p><strong>Installation</strong>: <code>Pkg.add("GnuTLS")</code></p>
<h1><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>API</h1>
<p>GnuTLS.jl can add TLS support to any transport layer implementing the Julia <code>IO</code>interface (e.g. IOStream, TcpSocket, NamedPipe, TTY, ...)</p>
<p>The following functions are currently provided:</p>
<ul>
<li>
<p><code>GnuTLS.Session()</code></p>
<p>Create a new SSL/TLS session. After initialization this object becomes a valid Julia <code>IO</code> object and may be used as such.</p>
<p>NOTE: This method is not exported by default and should be used as <code>GnuTLS.Session</code></p>
</li>
<li>
<p><code>GnuTLS.CertificateStore()</code></p>
<p>Initialize an empty certificate store. Support for authentication is incomplete in the current version.</p>
<p>NOTE: This method is not exported by default and should be used as <code>GnuTLS.CertificateStore</code></p>
</li>
<li>
<p><code>set_credentials!(s::Session,c::CertificateStore)</code></p>
<p>Associates the CertificateStore <code>c</code> with the session <code>s</code>. The certificate from the server will be stored here and may later be validated before processing further requests.</p>
</li>
<li>
<p><code>set_priority_string!(s::Session,priority::ASCIIString="NORMAL")</code></p>
<p>Set the GnuTLS priority string, used to determine which protocol versions to support. For a full list of supported options, see the <a href="http://www.gnutls.org/manual/gnutls.html#Priority-Strings" rel="nofollow">GnuTLS manual</a>.</p>
</li>
<li>
<p><code>associate_stream{S&lt;:IO,T&lt;:IO}(s::Session, read::S, write::T=read)</code></p>
<p>Set the transport layer for the current session.</p>
</li>
<li>
<p><code>handshake!(s::Session)</code></p>
<p>Perform the SSL/TLS handshake. On success the Session becomes active and may be used like any other streaming <code>IO</code> object.</p>
</li>
<li>
<p><code>init()</code></p>
<p>Initialize the GnuTLS library. This function is automatically called when the package is loaded and thus you should rarely have to call it yourself.</p>
</li>
<li>
<p><code>deinit()</code></p>
<p>Undo <code>init</code> and free all associated resources.</p>
</li>
</ul>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h1>
<p>The following code snippet demonstrates how the GnuTLS.jl package may be used to query an HTTPS resource:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using GnuTLS
sess = GnuTLS.Session()
set_priority_string!(sess)
set_credentials!(sess,GnuTLS.CertificateStore())
associate_stream(sess,connect(&quot;github.com&quot;,443))
handshake!(sess)
write(sess,&quot;GET / HTTP/1.1\r\n\r\n&quot;)
print(readall(sess))
"><pre><span class="pl-k">using</span> GnuTLS
sess <span class="pl-k">=</span> GnuTLS<span class="pl-k">.</span><span class="pl-c1">Session</span>()
<span class="pl-c1">set_priority_string!</span>(sess)
<span class="pl-c1">set_credentials!</span>(sess,GnuTLS<span class="pl-k">.</span><span class="pl-c1">CertificateStore</span>())
<span class="pl-c1">associate_stream</span>(sess,<span class="pl-c1">connect</span>(<span class="pl-s"><span class="pl-pds">"</span>github.com<span class="pl-pds">"</span></span>,<span class="pl-c1">443</span>))
<span class="pl-c1">handshake!</span>(sess)
<span class="pl-c1">write</span>(sess,<span class="pl-s"><span class="pl-pds">"</span>GET / HTTP/1.1<span class="pl-cce">\r\n\r\n</span><span class="pl-pds">"</span></span>)
<span class="pl-c1">print</span>(<span class="pl-c1">readall</span>(sess))</pre></div>
</article></div>