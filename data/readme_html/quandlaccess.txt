<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-quandlaccessjl" class="anchor" aria-hidden="true" href="#quandlaccessjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>QuandlAccess.jl</h1>
<p dir="auto"><a href="https://github.com/tk3369/QuandlAccess.jl/actions?query=workflow%3ACI"><img src="https://github.com/tk3369/QuandlAccess.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/tk3369/QuandlAccess.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/2bb950133227f683b674c75717d510c3750b57060c346269eaa749206c488fb7/687474703a2f2f636f6465636f762e696f2f6769746875622f746b333336392f5175616e646c4163636573732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/tk3369/QuandlAccess.jl/coverage.svg?branch=master" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/21088bccc87dd99fd832efde066c035eccdcbd73d2b64893ed5788c987c84926/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374617475732d6e65772d677265656e"><img src="https://camo.githubusercontent.com/21088bccc87dd99fd832efde066c035eccdcbd73d2b64893ed5788c987c84926/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374617475732d6e65772d677265656e" alt="Project Status" data-canonical-src="https://img.shields.io/badge/status-new-green" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides convenient access to <a href="https://www.quandl.com/" rel="nofollow">Quandl</a>
data service.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">Create a <code>Quandl</code> object with your API key:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="quandl = Quandl(ENV[&quot;QUANDL_API_KEY&quot;])"><pre>quandl <span class="pl-k">=</span> <span class="pl-c1">Quandl</span>(<span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>QUANDL_API_KEY<span class="pl-pds">"</span></span>])</pre></div>
<h4 dir="auto"><a id="user-content-time-series-api" class="anchor" aria-hidden="true" href="#time-series-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Time Series API</h4>
<p dir="auto">Submit query using <code>TimeSeries</code> object. Standard query options are available.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# get complete time series
quandl(TimeSeries(&quot;ML/BBY&quot;))

# date filters (works with both Date or String)
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = Date(2020,1,1))
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = Date(2020,1,1), end_date = Date(2020,1,5))
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = &quot;2020-01-01&quot;, end_date = Date(2020,1,5))

# sample frequencies
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = &quot;2018-01-01&quot;, collapse = &quot;weekly&quot;)
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = &quot;2018-01-01&quot;, collapse = &quot;monthly&quot;)
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = &quot;2018-01-01&quot;, collapse = &quot;quarterly&quot;)
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = &quot;2018-01-01&quot;, collapse = &quot;annual&quot;)
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = &quot;2018-01-01&quot;, collapse = &quot;none&quot;)

# transforms
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = &quot;2018-01-01&quot;, collapse = &quot;monthly&quot;, transform = &quot;diff&quot;)
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = &quot;2018-01-01&quot;, collapse = &quot;monthly&quot;, transform = &quot;rdiff&quot;)
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = &quot;2018-01-01&quot;, collapse = &quot;monthly&quot;, transform = &quot;rdiff_from&quot;)
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = &quot;2018-01-01&quot;, collapse = &quot;monthly&quot;, transform = &quot;cumul&quot;)
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = &quot;2018-01-01&quot;, collapse = &quot;monthly&quot;, transform = &quot;normalize&quot;)

# order
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = &quot;2018-01-01&quot;, collapse = &quot;monthly&quot;, order = &quot;asc&quot;)
quandl(TimeSeries(&quot;ML/BBY&quot;); start_date = &quot;2018-01-01&quot;, collapse = &quot;monthly&quot;, order = &quot;desc&quot;)"><pre><span class="pl-c"><span class="pl-c">#</span> get complete time series</span>
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>))

<span class="pl-c"><span class="pl-c">#</span> date filters (works with both Date or String)</span>
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>))
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>), end_date <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>,<span class="pl-c1">1</span>,<span class="pl-c1">5</span>))
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2020-01-01<span class="pl-pds">"</span></span>, end_date <span class="pl-k">=</span> <span class="pl-c1">Date</span>(<span class="pl-c1">2020</span>,<span class="pl-c1">1</span>,<span class="pl-c1">5</span>))

<span class="pl-c"><span class="pl-c">#</span> sample frequencies</span>
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2018-01-01<span class="pl-pds">"</span></span>, collapse <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>weekly<span class="pl-pds">"</span></span>)
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2018-01-01<span class="pl-pds">"</span></span>, collapse <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>monthly<span class="pl-pds">"</span></span>)
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2018-01-01<span class="pl-pds">"</span></span>, collapse <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>quarterly<span class="pl-pds">"</span></span>)
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2018-01-01<span class="pl-pds">"</span></span>, collapse <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>annual<span class="pl-pds">"</span></span>)
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2018-01-01<span class="pl-pds">"</span></span>, collapse <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>none<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> transforms</span>
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2018-01-01<span class="pl-pds">"</span></span>, collapse <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>monthly<span class="pl-pds">"</span></span>, transform <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>diff<span class="pl-pds">"</span></span>)
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2018-01-01<span class="pl-pds">"</span></span>, collapse <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>monthly<span class="pl-pds">"</span></span>, transform <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>rdiff<span class="pl-pds">"</span></span>)
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2018-01-01<span class="pl-pds">"</span></span>, collapse <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>monthly<span class="pl-pds">"</span></span>, transform <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>rdiff_from<span class="pl-pds">"</span></span>)
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2018-01-01<span class="pl-pds">"</span></span>, collapse <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>monthly<span class="pl-pds">"</span></span>, transform <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>cumul<span class="pl-pds">"</span></span>)
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2018-01-01<span class="pl-pds">"</span></span>, collapse <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>monthly<span class="pl-pds">"</span></span>, transform <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>normalize<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> order</span>
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2018-01-01<span class="pl-pds">"</span></span>, collapse <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>monthly<span class="pl-pds">"</span></span>, order <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>asc<span class="pl-pds">"</span></span>)
<span class="pl-c1">quandl</span>(<span class="pl-c1">TimeSeries</span>(<span class="pl-s"><span class="pl-pds">"</span>ML/BBY<span class="pl-pds">"</span></span>); start_date <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>2018-01-01<span class="pl-pds">"</span></span>, collapse <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>monthly<span class="pl-pds">"</span></span>, order <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>desc<span class="pl-pds">"</span></span>)</pre></div>
<h4 dir="auto"><a id="user-content-data-table-api" class="anchor" aria-hidden="true" href="#data-table-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Data Table API</h4>
<p dir="auto">Submit query using <code>Table</code> object. For filters, the predicate opertors can be <code>eq</code>, <code>gt</code>, <code>gte</code>, <code>lt</code>, or <code>lte</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="quandl(Table(&quot;ETFG/FUND&quot;), filters = [eq(&quot;ticker&quot;, &quot;SPY&quot;)])
quandl(Table(&quot;ETFG/FUND&quot;), filters = [eq(&quot;ticker&quot;, &quot;SPY,XOM&quot;)])
quandl(Table(&quot;ETFG/FUND&quot;), filters = [eq(&quot;ticker&quot;, &quot;SPY&quot;), gt(&quot;as_of_date&quot;, &quot;2018-01-09&quot;)])
quandl(Table(&quot;ETFG/FUND&quot;), filters = [eq(&quot;ticker&quot;, &quot;SPY&quot;), gt(&quot;as_of_date&quot;, Date(2018,1,9))])
quandl(Table(&quot;ETFG/FUND&quot;), filters = [eq(&quot;ticker&quot;, &quot;SPY&quot;)], columns = [&quot;ticker&quot;, &quot;nav&quot;])"><pre><span class="pl-c1">quandl</span>(<span class="pl-c1">Table</span>(<span class="pl-s"><span class="pl-pds">"</span>ETFG/FUND<span class="pl-pds">"</span></span>), filters <span class="pl-k">=</span> [<span class="pl-c1">eq</span>(<span class="pl-s"><span class="pl-pds">"</span>ticker<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>SPY<span class="pl-pds">"</span></span>)])
<span class="pl-c1">quandl</span>(<span class="pl-c1">Table</span>(<span class="pl-s"><span class="pl-pds">"</span>ETFG/FUND<span class="pl-pds">"</span></span>), filters <span class="pl-k">=</span> [<span class="pl-c1">eq</span>(<span class="pl-s"><span class="pl-pds">"</span>ticker<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>SPY,XOM<span class="pl-pds">"</span></span>)])
<span class="pl-c1">quandl</span>(<span class="pl-c1">Table</span>(<span class="pl-s"><span class="pl-pds">"</span>ETFG/FUND<span class="pl-pds">"</span></span>), filters <span class="pl-k">=</span> [<span class="pl-c1">eq</span>(<span class="pl-s"><span class="pl-pds">"</span>ticker<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>SPY<span class="pl-pds">"</span></span>), <span class="pl-c1">gt</span>(<span class="pl-s"><span class="pl-pds">"</span>as_of_date<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>2018-01-09<span class="pl-pds">"</span></span>)])
<span class="pl-c1">quandl</span>(<span class="pl-c1">Table</span>(<span class="pl-s"><span class="pl-pds">"</span>ETFG/FUND<span class="pl-pds">"</span></span>), filters <span class="pl-k">=</span> [<span class="pl-c1">eq</span>(<span class="pl-s"><span class="pl-pds">"</span>ticker<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>SPY<span class="pl-pds">"</span></span>), <span class="pl-c1">gt</span>(<span class="pl-s"><span class="pl-pds">"</span>as_of_date<span class="pl-pds">"</span></span>, <span class="pl-c1">Date</span>(<span class="pl-c1">2018</span>,<span class="pl-c1">1</span>,<span class="pl-c1">9</span>))])
<span class="pl-c1">quandl</span>(<span class="pl-c1">Table</span>(<span class="pl-s"><span class="pl-pds">"</span>ETFG/FUND<span class="pl-pds">"</span></span>), filters <span class="pl-k">=</span> [<span class="pl-c1">eq</span>(<span class="pl-s"><span class="pl-pds">"</span>ticker<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>SPY<span class="pl-pds">"</span></span>)], columns <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>ticker<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>nav<span class="pl-pds">"</span></span>])</pre></div>
</article></div>