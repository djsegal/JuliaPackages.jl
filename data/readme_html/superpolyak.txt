<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-superpolyakjl" class="anchor" aria-hidden="true" href="#superpolyakjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SuperPolyak.jl</h1>
<p dir="auto">This repository contains a prototype implementation of the algorithms from the following paper:</p>
<p dir="auto">V. Charisopoulos, D. Davis. <em>A superlinearly convergent subgradient method for sharp semismooth problems</em>, 2022. URL: <a href="https://arxiv.org/abs/2201.04611" rel="nofollow">https://arxiv.org/abs/2201.04611</a>.</p>
<p dir="auto">The implementation is available as a Julia package called <code>SuperPolyak.jl</code>, which can be embedded
in other Julia applications. The core algorithms can be found under <code>src/SuperPolyak.jl</code>.
Under <code>scripts/</code>, we have included all the scripts necessary to reproduce the numerical experiments in the
paper. We recommend running the code using Julia 1.6 or later.</p>
<p dir="auto"><strong>Note</strong>: We have also released a Pytorch version at <a href="https://github.com/COR-OPT/SuperPolyak.py">SuperPolyak.py</a>.</p>
<h2 dir="auto"><a id="user-content-one-time-setup" class="anchor" aria-hidden="true" href="#one-time-setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>One-time setup</h2>
<p dir="auto">To install the dependencies of the package, run the following from the root directory
of this repository:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ julia --project=. -e 'import Pkg; Pkg.instantiate()'"><pre>$ julia --project=. -e <span class="pl-s"><span class="pl-pds">'</span>import Pkg; Pkg.instantiate()<span class="pl-pds">'</span></span></pre></div>
<p dir="auto">To use the <code>SuperPolyak</code> package in an interactive session, open the Julia prompt using</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ julia --project=."><pre>$ julia --project=.</pre></div>
<p dir="auto">and enter <code>import SuperPolyak</code> in the Julia prompt, as you would with any other Julia package.</p>
<p dir="auto">To install locally, enter the following in a Julia session:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]    # Enter Pkg mode
(@v1.6) pkg&gt; add https://github.com/COR-OPT/SuperPolyak.jl"><pre>julia<span class="pl-k">&gt;</span> ]    <span class="pl-c"><span class="pl-c">#</span> Enter Pkg mode</span>
(<span class="pl-c1">@v1</span>.<span class="pl-c1">6</span>) pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>COR<span class="pl-k">-</span>OPT<span class="pl-k">/</span>SuperPolyak<span class="pl-k">.</span>jl</pre></div>
<h2 dir="auto"><a id="user-content-running-the-experiments" class="anchor" aria-hidden="true" href="#running-the-experiments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Running the experiments</h2>
<p dir="auto">The commands below assume that the root of this repository is the current directory.</p>
<p dir="auto">First, install all the necessary dependencies using</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia --project=scripts -e 'import Pkg; Pkg.instantiate()'"><pre>julia --project=scripts -e <span class="pl-s"><span class="pl-pds">'</span>import Pkg; Pkg.instantiate()<span class="pl-pds">'</span></span></pre></div>
<p dir="auto">All the experiments in the paper are contained in individual scripts.
For example, to solve a phase retrieval instance with dimension <code>d = 100</code> and <code>m = 250</code>
measurements, we run:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia --project=scripts scripts/phase_retrieval.jl --d 100 --m 250"><pre>julia --project=scripts scripts/phase_retrieval.jl --d 100 --m 250</pre></div>
<p dir="auto">To view the help text, including a description of the available arguments, simply run:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia --project=scripts scripts/phase_retrieval.jl --help"><pre>julia --project=scripts scripts/phase_retrieval.jl --help</pre></div>
<p dir="auto">The subdirectory includes scripts for solving the following problems:</p>
<ul dir="auto">
<li>Phase retrieval (using both the subgradient and the alternating projections method)</li>
<li>Quadratic sensing</li>
<li>Bilinear sensing</li>
<li>Max-linear regression</li>
<li>ReLU regression</li>
<li>Compressed sensing (using the alternating projections method)</li>
<li>LASSO regression (using the proximal gradient method)</li>
</ul>
</article></div>