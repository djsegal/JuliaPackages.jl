<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-cimgui" class="anchor" aria-hidden="true" href="#cimgui"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CImGui</h1>
<p><a href="https://travis-ci.com/Gnimuc/CImGui.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/638fb0a49785a882a9022ec303059ee21a045f5c/68747470733a2f2f7472617669732d63692e636f6d2f476e696d75632f43496d4775692e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/Gnimuc/CImGui.jl.svg?branch=master" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/Gnimuc/CImGui.jl/workflows/CI/badge.svg"><img src="https://github.com/Gnimuc/CImGui.jl/workflows/CI/badge.svg" alt="CI" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/Gnimuc/CImGui.jl/workflows/TagBot/badge.svg"><img src="https://github.com/Gnimuc/CImGui.jl/workflows/TagBot/badge.svg" alt="TagBot" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/Gnimuc/CImGui.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9b6bcb27f2808faaaf6ed821d06cb1570d22407d/68747470733a2f2f636f6465636f762e696f2f67682f476e696d75632f43496d4775692e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/Gnimuc/CImGui.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://Gnimuc.github.io/CImGui.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://Gnimuc.github.io/CImGui.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<p>This package provides a Julia language wrapper for <a href="https://github.com/cimgui/cimgui">cimgui</a>: a thin c-api wrapper programmatically generated for the excellent C++ immediate mode gui <a href="https://github.com/ocornut/imgui">Dear ImGui</a>. Dear ImGui is mainly for creating content creation tools and visualization / debug tools. You could browse <a href="https://github.com/ocornut/imgui/issues/2265">Gallery</a>
to get an idea of its use cases.</p>
<p><a target="_blank" rel="noopener noreferrer" href="demo/demo.png"><img src="demo/demo.png" alt="demo" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add CImGui</pre></div>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick Start</h2>
<ol>
<li>Run <code>demo/demo.jl</code> to test whether the default backend works on your machine.</li>
<li>Run <code>examples/demo.jl</code> and browse demos in the <code>examples</code> folder to learn how to use the API.</li>
<li>Read documentation or run <code>? CImGui.xxx</code> to retrieve docs:</li>
</ol>
<pre><code>help?&gt; CImGui.Begin
  Begin(name, p_open=C_NULL, flags=0) -&gt; Bool

  Push window to the stack and start appending to it.

  Usage
  –––––––

    •    you may append multiple times to the same window during the same frame.

    •    passing p_open != C_NULL shows a window-closing widget in the upper-right corner of
        the window, which clicking will set the boolean to false when clicked.

    •    Begin return false to indicate the window is collapsed or fully clipped, so you may
        early out and omit submitting anything to the window.

  │ Note
  │
  │  Always call a matching End for each Begin call, regardless of its return value. This
  │  is due to legacy reason and is inconsistent with most other functions (such as
  │  BeginMenu/EndMenu, BeginPopup/EndPopup, etc.) where the EndXXX call should only be
  │  called if the corresponding BeginXXX function returned true.
</code></pre>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>The API provided in this package is as close as possible to the original C++ API. When translating C++ code to Julia, please follow the tips below:</p>
<ul>
<li>Replace <code>ImGui::</code> to <code>CImGui.</code>;</li>
<li><code>using LibCImGui</code> to import all of the <code>ImGuiXXX</code> types into the current namespace;</li>
<li>Member function calling should be translated in Julia style: <code>fonts.AddFont(cfg)</code> =&gt; <code>CImGui.AddFont(fonts, cfg)</code>;</li>
<li>Prefer to define colors as <code>Vector{Cfloat}</code> instead of <code>CImGui.ImVec4</code>;</li>
<li><a href="https://github.com/Gnimuc/CSyntax.jl">CSyntax.jl</a> provides two useful macros: <code>@c</code> for translating C's <code>&amp;</code> operator on immutables and <code>@cstatic</code>-block for emulating C's <code>static</code> keyword;</li>
<li>pointer arithmetic: <code>&amp;A[n]</code> should be translated to <code>pointer(A) + n * sizeof(T)</code> where <code>n</code> counts from 0.</li>
</ul>
<p>As mentioned before, this package aims to provide the same user experience as the original C++ API, so any high-level abstraction should go into a more high-level package.</p>
<h3><a id="user-content-libcimgui" class="anchor" aria-hidden="true" href="#libcimgui"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LibCImGui</h3>
<p>LibCImGui is a thin wrapper over cimgui. It's one-to-one mapped to the original cimgui APIs. By using CImGui.LibCImGui, all of the ImGui-prefixed types, enums and ig-prefixed functions will be imported into the current namespace. It's mainly for people who prefer to use original cimgui's interface.</p>
<h3><a id="user-content-backend" class="anchor" aria-hidden="true" href="#backend"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Backend</h3>
<p>The default backend is based on <a href="https://github.com/JuliaGL/ModernGL.jl">ModernGL</a> and <a href="https://github.com/JuliaGL/GLFW.jl">GLFW</a> which are stable and under actively maintained. Other popular backends like <a href="https://github.com/zyedidia/SFML.jl">SFML</a> and <a href="https://github.com/ariejdl/SDL.jl">SDL</a> could be added in the future if someone should invest time to make these packages work in post Julia 1.0 era.</p>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p>Only the Julia code in this repo is released under MIT license. Other assets such as those fonts in the <code>fonts</code> folder are released under their own license.</p>
</article></div>