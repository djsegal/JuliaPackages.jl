<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-cimgui" class="anchor" aria-hidden="true" href="#cimgui"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CImGui</h1>
<p dir="auto"><a href="https://github.com/Gnimuc/CImGui.jl/actions/workflows/ci.yml"><img src="https://github.com/Gnimuc/CImGui.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/CImGui/HqG2H" rel="nofollow"><img src="https://camo.githubusercontent.com/901bd9d26f0ebb744d3bf04bb9c319f32f1747edff0300b82c8575117ae1edd5/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f43496d4775692f706b676576616c2e737667" alt="pkgeval" data-canonical-src="https://juliahub.com/docs/CImGui/pkgeval.svg" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/CImGui/HqG2H" rel="nofollow"><img src="https://camo.githubusercontent.com/380f3c43a769a2380bfdbc01680dac68133acbbd934be3aa8d63f532b8eb891c/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f43496d4775692f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/CImGui/version.svg" style="max-width: 100%;"></a></p>

<p dir="auto"><a href="https://en.wikipedia.org/wiki/KISS_principle" rel="nofollow"><img src="https://camo.githubusercontent.com/30ff6d6073923a327b8b5dc139b89e686cdf99ae5f53a9ad606762a98b25ba70/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64657369676e2532307072696e6369706c652d4b4953532d6f72616e6765" alt="" data-canonical-src="https://img.shields.io/badge/design%20principle-KISS-orange" style="max-width: 100%;"></a>
<a href="https://Gnimuc.github.io/CImGui.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://Gnimuc.github.io/CImGui.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/27a76cd75455b33c53778b9b033ffd599b2a3259c968590893b6418044851c14/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f64697363757373696f6e732f476e696d75632f43496d4775692e6a6c"><img src="https://camo.githubusercontent.com/27a76cd75455b33c53778b9b033ffd599b2a3259c968590893b6418044851c14/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f64697363757373696f6e732f476e696d75632f43496d4775692e6a6c" alt="GitHub Discussions" data-canonical-src="https://img.shields.io/github/discussions/Gnimuc/CImGui.jl" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/CImGui/HqG2H?t=2" rel="nofollow"><img src="https://camo.githubusercontent.com/19022187143e42819bd7a9bb965eb441d0e46a35980fc775ef81c769f12a805e/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f43496d4775692f646570732e737667" alt="deps" data-canonical-src="https://juliahub.com/docs/CImGui/deps.svg" style="max-width: 100%;"></a>
<a href="https://pkgs.genieframework.com?packages=CImGui" rel="nofollow"><img src="https://camo.githubusercontent.com/354e02ecee2223496729f80cefd2792cfcb4dd53d080167d5d0087f150fa1a14/68747470733a2f2f736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f706b67732e67656e69656672616d65776f726b2e636f6d2f6170692f76312f62616467652f43496d477569" alt="Genie Downloads" data-canonical-src="https://shields.io/endpoint?url=https://pkgs.genieframework.com/api/v1/badge/CImGui" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides a Julia language wrapper for <a href="https://github.com/cimgui/cimgui">cimgui</a>: a thin c-api wrapper programmatically generated for the excellent C++ immediate mode gui <a href="https://github.com/ocornut/imgui">Dear ImGui</a>. Dear ImGui is mainly for creating content creation tools and visualization / debug tools. You could browse <a href="https://github.com/ocornut/imgui/issues/2265" data-hovercard-type="issue" data-hovercard-url="/ocornut/imgui/issues/2265/hovercard">Gallery</a>
to get an idea of its use cases.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="demo/demo.png"><img src="demo/demo.png" alt="demo" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add CImGui"><pre>pkg<span class="pl-k">&gt;</span> add CImGui</pre></div>
<h2 dir="auto"><a id="user-content-how-to-start" class="anchor" aria-hidden="true" href="#how-to-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to start</h2>
<h3 dir="auto"><a id="user-content-1-run-demodemojl-to-test-whether-the-default-backend-works-on-your-machine" class="anchor" aria-hidden="true" href="#1-run-demodemojl-to-test-whether-the-default-backend-works-on-your-machine"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>1. Run <code>demo/demo.jl</code> to test whether the default backend works on your machine</h3>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using CImGui
julia&gt; include(joinpath(pathof(CImGui), &quot;..&quot;, &quot;..&quot;, &quot;demo&quot;, &quot;demo.jl&quot;))"><pre lang="julia-repl" class="notranslate"><code>julia&gt; using CImGui
julia&gt; include(joinpath(pathof(CImGui), "..", "..", "demo", "demo.jl"))
</code></pre></div>
<h3 dir="auto"><a id="user-content-2-run-examplesdemojl-and-browse-demos-in-the-examples-folder-to-learn-how-to-use-the-api" class="anchor" aria-hidden="true" href="#2-run-examplesdemojl-and-browse-demos-in-the-examples-folder-to-learn-how-to-use-the-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>2. Run <code>examples/demo.jl</code> and browse demos in the <code>examples</code> folder to learn how to use the API</h3>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using CImGui
julia&gt; include(joinpath(pathof(CImGui), &quot;..&quot;, &quot;..&quot;, &quot;examples&quot;, &quot;demo.jl&quot;))"><pre lang="julia-repl" class="notranslate"><code>julia&gt; using CImGui
julia&gt; include(joinpath(pathof(CImGui), "..", "..", "examples", "demo.jl"))
</code></pre></div>
<p dir="auto"><a href="https://github.com/Gnimuc/CImGui.jl/tree/master/examples">All of these examples</a> are one-to-one ported from <a href="https://github.com/ocornut/imgui/blob/master/imgui_demo.cpp">Dear ImGui's C++ examples</a> and there is an <a href="https://pthom.github.io/imgui_manual_online/manual/imgui_manual.html" rel="nofollow">interactive manual</a> for quickly locating the code. You could also run <code>? CImGui.xxx</code> to retrieve docs:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="help?&gt; CImGui.Button
  Button(label) -&gt; Bool
  Button(label, size) -&gt; Bool

  Return true when the value has been changed or when pressed/selected."><pre class="notranslate"><code>help?&gt; CImGui.Button
  Button(label) -&gt; Bool
  Button(label, size) -&gt; Bool

  Return true when the value has been changed or when pressed/selected.
</code></pre></div>
<h3 dir="auto"><a id="user-content-3-the-rendering-loop" class="anchor" aria-hidden="true" href="#3-the-rendering-loop"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>3. The rendering loop</h3>
<p dir="auto">One thing that is necessary but the package doesn't provide is the <a href="https://github.com/Gnimuc/CImGui.jl/blob/master/examples/demo.jl#L76-L113">rendering loop</a>.
Note that all ImGui widgets should run within <code>CImGui.Begin()</code>...<code>CImGui.End()</code>, if not, a crash is waiting for you. For example, directly running <code>CImGui.Button("My button")</code> in REPL will crash Julia.</p>
<p dir="auto">An example rendering loop module is provided <a href="https://github.com/Gnimuc/CImGui.jl/blob/master/examples/Renderer.jl">here</a> for those users who don't bother to study those boilerplate code and eager to draw some widgets on the screen.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using CImGui
julia&gt; include(joinpath(pathof(CImGui), &quot;..&quot;, &quot;..&quot;, &quot;examples&quot;, &quot;Renderer.jl&quot;))
Main.Renderer

julia&gt; using .Renderer

julia&gt; Renderer.render(width = 360, height = 480, title = &quot;IMGUI Window&quot;) do
           CImGui.Begin(&quot;Hello ImGui&quot;)
           CImGui.Button(&quot;My Button&quot;) &amp;&amp; @show &quot;triggered&quot;
           CImGui.End()
       end
Task (runnable) @0x00000001136bead0"><pre lang="julia-repl" class="notranslate"><code>julia&gt; using CImGui
julia&gt; include(joinpath(pathof(CImGui), "..", "..", "examples", "Renderer.jl"))
Main.Renderer

julia&gt; using .Renderer

julia&gt; Renderer.render(width = 360, height = 480, title = "IMGUI Window") do
           CImGui.Begin("Hello ImGui")
           CImGui.Button("My Button") &amp;&amp; @show "triggered"
           CImGui.End()
       end
Task (runnable) @0x00000001136bead0
</code></pre></div>
<p dir="auto">Should you have any other questions, feel free to write a post at the <a href="https://github.com/Gnimuc/CImGui.jl/discussions">Discussions</a> area.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">The API provided in this package is as close as possible to the original C++ API. When translating C++ code to Julia, please follow the tips below:</p>
<ul dir="auto">
<li>Replace <code>ImGui::</code> to <code>CImGui.</code>;</li>
<li><code>using LibCImGui</code> to import all of the <code>ImGuiXXX</code> types into the current namespace;</li>
<li>Member function calling should be translated in Julia style: <code>fonts.AddFont(cfg)</code> =&gt; <code>CImGui.AddFont(fonts, cfg)</code>;</li>
<li>[<code>using CImGui.CSyntax</code>] provides two useful macros: <code>@c</code> for translating C's <code>&amp;</code> operator on immutables and <code>@cstatic</code>-block for emulating C's <code>static</code> keyword;</li>
</ul>
<p dir="auto">As mentioned before, this package aims to provide the same user experience as the original C++ API, so any high-level abstraction should go into a more high-level package. <a href="https://github.com/Gnimuc/Redux.jl"><code>Redux.jl</code></a> might be of interest to you if you're looking for state management frameworks.</p>
<h3 dir="auto"><a id="user-content-libcimgui" class="anchor" aria-hidden="true" href="#libcimgui"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LibCImGui</h3>
<p dir="auto">LibCImGui is a thin wrapper over cimgui. It's one-to-one mapped to the original cimgui APIs. By using CImGui.LibCImGui, all of the ImGui-prefixed types, enums and ig-prefixed functions will be imported into the current namespace. It's mainly for people who prefer to use original cimgui's interface.</p>
<h3 dir="auto"><a id="user-content-backend" class="anchor" aria-hidden="true" href="#backend"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Backend</h3>
<p dir="auto">The default backend is based on <a href="https://github.com/JuliaGL/ModernGL.jl">ModernGL</a> and <a href="https://github.com/JuliaGL/GLFW.jl">GLFW</a> which are stable and under actively maintained. Other popular backends like <a href="https://github.com/zyedidia/SFML.jl">SFML</a> and <a href="https://github.com/ariejdl/SDL.jl">SDL</a> could be added in the future if someone should invest time to make these packages work in post Julia 1.0 era.</p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">Only the Julia code in this repo is released under MIT license. Other assets such as those fonts in the <code>fonts</code> folder are released under their own license.</p>
</article></div>