<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-cimgui" class="anchor" aria-hidden="true" href="#cimgui"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CImGui</h1>
<p><a href="https://github.com/Gnimuc/CImGui.jl/actions/workflows/ci.yml"><img src="https://github.com/Gnimuc/CImGui.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://github.com/Gnimuc/CImGui.jl/actions/workflows/TagBot.yml"><img src="https://github.com/Gnimuc/CImGui.jl/workflows/TagBot/badge.svg" alt="TagBot" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/Gnimuc/CImGui.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5d8962b098702ed714d48dcb7020051f3bff7001c4dfd0f4cdf9b27816e5c068/68747470733a2f2f636f6465636f762e696f2f67682f476e696d75632f43496d4775692e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/Gnimuc/CImGui.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://Gnimuc.github.io/CImGui.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://Gnimuc.github.io/CImGui.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<p>This package provides a Julia language wrapper for <a href="https://github.com/cimgui/cimgui">cimgui</a>: a thin c-api wrapper programmatically generated for the excellent C++ immediate mode gui <a href="https://github.com/ocornut/imgui">Dear ImGui</a>. Dear ImGui is mainly for creating content creation tools and visualization / debug tools. You could browse <a href="https://github.com/ocornut/imgui/issues/2265">Gallery</a>
to get an idea of its use cases.</p>
<p><a target="_blank" rel="noopener noreferrer" href="demo/demo.png"><img src="demo/demo.png" alt="demo" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="pkg&gt; add CImGui
"><pre>pkg<span class="pl-k">&gt;</span> add CImGui</pre></div>
<h2><a id="user-content-how-to-start" class="anchor" aria-hidden="true" href="#how-to-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>How to start</h2>
<h3><a id="user-content-1-run-demodemojl-to-test-whether-the-default-backend-works-on-your-machine" class="anchor" aria-hidden="true" href="#1-run-demodemojl-to-test-whether-the-default-backend-works-on-your-machine"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>1. Run <code>demo/demo.jl</code> to test whether the default backend works on your machine</h3>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; using CImGui
julia&gt; include(joinpath(pathof(CImGui), &quot;..&quot;, &quot;..&quot;, &quot;demo&quot;, &quot;demo.jl&quot;))
"><pre lang="julia-repl"><code>julia&gt; using CImGui
julia&gt; include(joinpath(pathof(CImGui), "..", "..", "demo", "demo.jl"))
</code></pre></div>
<h3><a id="user-content-2-run-examplesdemojl-and-browse-demos-in-the-examples-folder-to-learn-how-to-use-the-api" class="anchor" aria-hidden="true" href="#2-run-examplesdemojl-and-browse-demos-in-the-examples-folder-to-learn-how-to-use-the-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>2. Run <code>examples/demo.jl</code> and browse demos in the <code>examples</code> folder to learn how to use the API</h3>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; using CImGui
julia&gt; include(joinpath(pathof(CImGui), &quot;..&quot;, &quot;..&quot;, &quot;examples&quot;, &quot;demo.jl&quot;))
"><pre lang="julia-repl"><code>julia&gt; using CImGui
julia&gt; include(joinpath(pathof(CImGui), "..", "..", "examples", "demo.jl"))
</code></pre></div>
<p><a href="https://github.com/Gnimuc/CImGui.jl/tree/master/examples">All of these examples</a> are one-to-one ported from <a href="https://github.com/ocornut/imgui/blob/master/imgui_demo.cpp">Dear ImGui's C++ examples</a> and there is an <a href="https://pthom.github.io/imgui_manual_online/manual/imgui_manual.html" rel="nofollow">interactive manual</a> for quickly locating the code. You could also run <code>? CImGui.xxx</code> to retrieve docs:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="help?&gt; CImGui.Button
  Button(label) -&gt; Bool
  Button(label, size) -&gt; Bool

  Return true when the value has been changed or when pressed/selected.
"><pre><code>help?&gt; CImGui.Button
  Button(label) -&gt; Bool
  Button(label, size) -&gt; Bool

  Return true when the value has been changed or when pressed/selected.
</code></pre></div>
<h3><a id="user-content-3-the-rendering-loop" class="anchor" aria-hidden="true" href="#3-the-rendering-loop"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>3. The rendering loop</h3>
<p>One thing that is necessary but the package doesn't provide is the <a href="https://github.com/Gnimuc/CImGui.jl/blob/master/examples/demo.jl#L76-L113">rendering loop</a>.
Note that all ImGui widgets should run within <code>CImGui.Begin()</code>...<code>CImGui.End()</code>, if not, a crash is waiting for you. For example, directly running <code>CImGui.Button("My button")</code> in REPL will crash Julia.</p>
<p>An example rendering loop module is provided <a href="https://github.com/Gnimuc/CImGui.jl/blob/master/examples/Renderer.jl">here</a> for those users who don't bother to study those boilerplate code and eager to draw some widgets on the screen.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; using CImGui
julia&gt; include(joinpath(pathof(CImGui), &quot;..&quot;, &quot;..&quot;, &quot;examples&quot;, &quot;Renderer.jl&quot;))
Main.Renderer

julia&gt; using .Renderer

julia&gt; Renderer.render(width = 360, height = 480, title = &quot;IMGUI Window&quot;) do
           CImGui.Begin(&quot;Hello ImGui&quot;)
           CImGui.Button(&quot;My Button&quot;) &amp;&amp; @show &quot;triggered&quot;
           CImGui.End()
       end
Task (runnable) @0x00000001136bead0
"><pre lang="julia-repl"><code>julia&gt; using CImGui
julia&gt; include(joinpath(pathof(CImGui), "..", "..", "examples", "Renderer.jl"))
Main.Renderer

julia&gt; using .Renderer

julia&gt; Renderer.render(width = 360, height = 480, title = "IMGUI Window") do
           CImGui.Begin("Hello ImGui")
           CImGui.Button("My Button") &amp;&amp; @show "triggered"
           CImGui.End()
       end
Task (runnable) @0x00000001136bead0
</code></pre></div>
<p>Should you have any other questions, feel free to write a post at the <a href="https://github.com/Gnimuc/CImGui.jl/discussions">Discussions</a> area.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>The API provided in this package is as close as possible to the original C++ API. When translating C++ code to Julia, please follow the tips below:</p>
<ul>
<li>Replace <code>ImGui::</code> to <code>CImGui.</code>;</li>
<li><code>using LibCImGui</code> to import all of the <code>ImGuiXXX</code> types into the current namespace;</li>
<li>Member function calling should be translated in Julia style: <code>fonts.AddFont(cfg)</code> =&gt; <code>CImGui.AddFont(fonts, cfg)</code>;</li>
<li>[<code>using CImGui.CSyntax</code>] provides two useful macros: <code>@c</code> for translating C's <code>&amp;</code> operator on immutables and <code>@cstatic</code>-block for emulating C's <code>static</code> keyword;</li>
</ul>
<p>As mentioned before, this package aims to provide the same user experience as the original C++ API, so any high-level abstraction should go into a more high-level package. <a href="https://github.com/Gnimuc/Redux.jl"><code>Redux.jl</code></a> might be of interest to you if you're looking for state management frameworks.</p>
<h3><a id="user-content-libcimgui" class="anchor" aria-hidden="true" href="#libcimgui"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LibCImGui</h3>
<p>LibCImGui is a thin wrapper over cimgui. It's one-to-one mapped to the original cimgui APIs. By using CImGui.LibCImGui, all of the ImGui-prefixed types, enums and ig-prefixed functions will be imported into the current namespace. It's mainly for people who prefer to use original cimgui's interface.</p>
<h3><a id="user-content-backend" class="anchor" aria-hidden="true" href="#backend"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Backend</h3>
<p>The default backend is based on <a href="https://github.com/JuliaGL/ModernGL.jl">ModernGL</a> and <a href="https://github.com/JuliaGL/GLFW.jl">GLFW</a> which are stable and under actively maintained. Other popular backends like <a href="https://github.com/zyedidia/SFML.jl">SFML</a> and <a href="https://github.com/ariejdl/SDL.jl">SDL</a> could be added in the future if someone should invest time to make these packages work in post Julia 1.0 era.</p>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p>Only the Julia code in this repo is released under MIT license. Other assets such as those fonts in the <code>fonts</code> folder are released under their own license.</p>
</article></div>