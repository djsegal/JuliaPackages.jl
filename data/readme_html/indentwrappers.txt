<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-indentwrappers" class="anchor" aria-hidden="true" href="#indentwrappers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>IndentWrappers</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ea6e0ff99602c3563e3dd684abf60b30edceaeef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667"><img src="https://camo.githubusercontent.com/ea6e0ff99602c3563e3dd684abf60b30edceaeef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-experimental-orange.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/tpapp/IndentWrappers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/05ff6642ce3c8f1fcf2ee282d92c79b05a092b1d/68747470733a2f2f7472617669732d63692e636f6d2f74706170702f496e64656e7457726170706572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/tpapp/IndentWrappers.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/tpapp/IndentWrappers.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ac5c9ddc39819112acd4a72e87bc0c4b23eb33a5/687474703a2f2f636f6465636f762e696f2f6769746875622f74706170702f496e64656e7457726170706572732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/tpapp/IndentWrappers.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p><code>indent(io, n)</code> returns an <code>::IO</code> object that writes <code>n</code> spaces after each <code>\n</code>.</p>
<p><code>indent</code>s can be chained, use in a functional way. It is recommended that implementations of <code>Base.show</code> using this package never close with a newline.</p>
<p>Example:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">struct</span> Foo
    contents
<span class="pl-k">end</span>

<span class="pl-k">function</span> Base<span class="pl-k">.</span><span class="pl-en">show</span>(io<span class="pl-k">::</span><span class="pl-c1">IO</span>, foo<span class="pl-k">::</span><span class="pl-c1">Foo</span>)
    <span class="pl-c1">print</span>(io, <span class="pl-s"><span class="pl-pds">"</span>This is a Foo with the following contents:<span class="pl-pds">"</span></span>)
    <span class="pl-k">let</span> inner_io <span class="pl-k">=</span> <span class="pl-c1">indent</span>(io, <span class="pl-c1">4</span>)
        <span class="pl-k">for</span> elt <span class="pl-k">in</span> foo<span class="pl-k">.</span>contents
            <span class="pl-c1">print</span>(inner_io, <span class="pl-s"><span class="pl-pds">'</span><span class="pl-cce">\n</span><span class="pl-pds">'</span></span>, elt)
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p>then</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Foo</span>([<span class="pl-s"><span class="pl-pds">'</span>a<span class="pl-pds">'</span></span>, <span class="pl-c1">42</span>, <span class="pl-s"><span class="pl-pds">"</span>string<span class="pl-pds">"</span></span>])
This is a Foo with the following contents<span class="pl-k">:</span>
    a
    <span class="pl-c1">42</span>
    string</pre></div>
<h2><a id="user-content-similar-packages" class="anchor" aria-hidden="true" href="#similar-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Similar packages</h2>
<ul>
<li><a href="https://github.com/KristofferC/IOIndents.jl">IOIndents.jl</a>, which inspired part of the implementation</li>
</ul>
</article></div>