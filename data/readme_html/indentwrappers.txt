<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-indentwrappers" class="anchor" aria-hidden="true" href="#indentwrappers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>IndentWrappers</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667"><img src="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-experimental-orange.svg" style="max-width: 100%;"></a>
<a href="https://travis-ci.com/tpapp/IndentWrappers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/370c44df5f3e199ec0f359bab696232d73702b247854e8330ada15623ad015ea/68747470733a2f2f7472617669732d63692e636f6d2f74706170702f496e64656e7457726170706572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/tpapp/IndentWrappers.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/tpapp/IndentWrappers.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/70a1f7a4e86a98e8d14380ed257e17974c9129ed77daf7c14b6e5e55416f32f2/687474703a2f2f636f6465636f762e696f2f6769746875622f74706170702f496e64656e7457726170706572732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/tpapp/IndentWrappers.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto"><code>indent(io, n)</code> returns an <code>::IO</code> object that writes <code>n</code> spaces after each <code>\n</code>.</p>
<p dir="auto"><code>indent</code>s can be chained, use in a functional way. It is recommended that implementations of <code>Base.show</code> using this package never close with a newline.</p>
<p dir="auto">Example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="struct Foo
    contents
end

function Base.show(io::IO, foo::Foo)
    print(io, &quot;This is a Foo with the following contents:&quot;)
    let inner_io = indent(io, 4)
        for elt in foo.contents
            print(inner_io, '\n', elt)
        end
    end
end"><pre><span class="pl-k">struct</span> Foo
    contents
<span class="pl-k">end</span>

<span class="pl-k">function</span> Base<span class="pl-k">.</span><span class="pl-en">show</span>(io<span class="pl-k">::</span><span class="pl-c1">IO</span>, foo<span class="pl-k">::</span><span class="pl-c1">Foo</span>)
    <span class="pl-c1">print</span>(io, <span class="pl-s"><span class="pl-pds">"</span>This is a Foo with the following contents:<span class="pl-pds">"</span></span>)
    <span class="pl-k">let</span> inner_io <span class="pl-k">=</span> <span class="pl-c1">indent</span>(io, <span class="pl-c1">4</span>)
        <span class="pl-k">for</span> elt <span class="pl-k">in</span> foo<span class="pl-k">.</span>contents
            <span class="pl-c1">print</span>(inner_io, <span class="pl-s"><span class="pl-pds">'</span><span class="pl-cce">\n</span><span class="pl-pds">'</span></span>, elt)
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">then</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Foo(['a', 42, &quot;string&quot;])
This is a Foo with the following contents:
    a
    42
    string"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Foo</span>([<span class="pl-s"><span class="pl-pds">'</span>a<span class="pl-pds">'</span></span>, <span class="pl-c1">42</span>, <span class="pl-s"><span class="pl-pds">"</span>string<span class="pl-pds">"</span></span>])
This is a Foo with the following contents<span class="pl-k">:</span>
    a
    <span class="pl-c1">42</span>
    string</pre></div>
<h2 dir="auto"><a id="user-content-similar-packages" class="anchor" aria-hidden="true" href="#similar-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Similar packages</h2>
<ul dir="auto">
<li><a href="https://github.com/KristofferC/IOIndents.jl">IOIndents.jl</a>, which inspired part of the implementation</li>
</ul>
</article></div>