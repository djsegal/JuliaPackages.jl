<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-potentialflow" class="anchor" aria-hidden="true" href="#potentialflow"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PotentialFlow</h1>
<p><em>a scaffolding for building 2D inviscid models</em></p>
<table>
<thead>
<tr>
<th align="center">Documentation</th>
<th align="center">Build Status</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://darwindarak.github.com/PotentialFlow.jl"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="docs" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a> <a href="https://beta.mybinder.org/v2/gh/darwindarak/PotentialFlow.jl/binder?filepath=binder%2Fnotebooks" rel="nofollow"><img src="https://camo.githubusercontent.com/d57df63fab21897847014ebaec3e7f5f48951ad2/68747470733a2f2f626574612e6d7962696e6465722e6f72672f62616467652e737667" alt="Binder" data-canonical-src="https://beta.mybinder.org/badge.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://travis-ci.org/darwindarak/PotentialFlow.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/522662fe48fee185db2d702e36a001ca212da765/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f64617277696e646172616b2f506f74656e7469616c466c6f772e6a6c2f6d61737465722e7376673f6c6162656c3d6c696e7578" alt="Build Status" data-canonical-src="https://img.shields.io/travis/darwindarak/PotentialFlow.jl/master.svg?label=linux" style="max-width:100%;"></a> <a href="https://ci.appveyor.com/project/darwindarak/potentialflow-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/0a3efd4a449fc80f03cd04fa9237e1468b8cbb67/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f64617277696e646172616b2f506f74656e7469616c466c6f772d6a6c2f6d61737465722e7376673f6c6162656c3d77696e646f7773" alt="Build status" data-canonical-src="https://img.shields.io/appveyor/ci/darwindarak/PotentialFlow-jl/master.svg?label=windows" style="max-width:100%;"></a> <a href="https://codecov.io/gh/darwindarak/PotentialFlow.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/33fe3fb248742ea26ec7b0f175385efe8234eefe/68747470733a2f2f636f6465636f762e696f2f67682f64617277696e646172616b2f506f74656e7469616c466c6f772e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/darwindarak/PotentialFlow.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>PotentialFlow can be installed using the Julia package manager. From the Julia REPL, type ] to enter the Pkg REPL mode and run</p>
<pre lang="julia-repl"><code>pkg&gt; add PotentialFlow
</code></pre>
<h2><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Basic Usage</h2>
<p>Let's create a point vortex and a point source and probe their associated velocity field:</p>
<pre lang="julia-repl"><code>julia&gt; using PotentialFlow

julia&gt; t = 0.0
0.0

julia&gt; vortex = Vortex.Point(1.0 + 1.0im, π)
Vortex.Point(1.0 + 1.0im, 3.141592653589793)

julia&gt; source = Source.Point(1.0 - 1.0im, -π)
Source.Point(1.0 - 1.0im, 3.141592653589793)

julia&gt; induce_velocity(0.0im, vortex, t)
0.25 - 0.25im

julia&gt; induce_velocity(source, vortex, t)
0.25 - 0.0im

julia&gt; induce_velocity(0.0im, (vortex, source), t)
0.5 - 0.5im

julia&gt; induce_velocity([0.0im, 1.0im, 1.0], (vortex, source), t)
3-element Array{Complex{Float64},1}:
 0.5-0.5im
 0.1-0.7im
 0.5-0.5im
</code></pre>
<p>Note the all positions and velocities are given in complex coordiantes.</p>
<p>Now let's move on to something more interesting.
We'll create a stationary flat plate (bound vortex sheet) and place it in a freestream.
In order to enforce the Kutta condition, we also place a starting vortex at <code>-Inf</code>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> PotentialFlow
<span class="pl-k">using</span> Plots

c₀ <span class="pl-k">=</span> <span class="pl-c1">0.0im</span> <span class="pl-c"><span class="pl-c">#</span> initial centroid position</span>
α <span class="pl-k">=</span> π<span class="pl-k">/</span><span class="pl-c1">9</span>    <span class="pl-c"><span class="pl-c">#</span> angle of attack</span>
L <span class="pl-k">=</span> <span class="pl-c1">1.0</span>    <span class="pl-c"><span class="pl-c">#</span> chord length</span>
N <span class="pl-k">=</span> <span class="pl-c1">128</span>    <span class="pl-c"><span class="pl-c">#</span> number of discretization points</span>

ċ <span class="pl-k">=</span> <span class="pl-c1">0.0</span>    <span class="pl-c"><span class="pl-c">#</span> translation velocity</span>
α̇ <span class="pl-k">=</span> <span class="pl-c1">0.0</span>    <span class="pl-c"><span class="pl-c">#</span> rate of rotation</span>
t <span class="pl-k">=</span> <span class="pl-c1">0.0</span>    <span class="pl-c"><span class="pl-c">#</span> current time</span>

freestream <span class="pl-k">=</span> <span class="pl-c1">Freestream</span>(<span class="pl-k">-</span><span class="pl-c1">1.0</span>)

plate <span class="pl-k">=</span> <span class="pl-c1">Plate</span>(N, L, c₀, α)
motion <span class="pl-k">=</span> Plates<span class="pl-k">.</span><span class="pl-c1">RigidBodyMotion</span>(ċ, α̇)
Plates<span class="pl-k">.</span><span class="pl-c1">enforce_no_flow_through!</span>(plate, motion, freestream, <span class="pl-c1">0.0</span>)

<span class="pl-c"><span class="pl-c">#</span> We now want to determine the strength of the starting vortex</span>
<span class="pl-c"><span class="pl-c">#</span> to satisfy the Kutta condition at the trailing edge of the plate</span>
_, Γ <span class="pl-k">=</span> Plates<span class="pl-k">.</span><span class="pl-c1">vorticity_flux!</span>(plate, (), Vortex<span class="pl-k">.</span><span class="pl-c1">Point</span>(<span class="pl-k">-</span><span class="pl-c1">Inf</span>, <span class="pl-c1">1.0</span>), t, <span class="pl-c1">Inf</span>, <span class="pl-c1">0</span>);
starting_vortex <span class="pl-k">=</span> Vortex<span class="pl-k">.</span><span class="pl-c1">Point</span>(<span class="pl-k">-</span><span class="pl-c1">Inf</span>, Γ)

<span class="pl-c"><span class="pl-c">#</span> Plot some streamlines</span>

x <span class="pl-k">=</span> <span class="pl-c1">range</span>(<span class="pl-k">-</span><span class="pl-c1">2</span>, <span class="pl-c1">1</span>, length<span class="pl-k">=</span><span class="pl-c1">100</span>)
y <span class="pl-k">=</span> <span class="pl-c1">range</span>(<span class="pl-k">-</span><span class="pl-c1">0.5</span>, <span class="pl-c1">0.5</span>, length<span class="pl-k">=</span><span class="pl-c1">100</span>)

<span class="pl-c1">streamlines</span>(x, y, (plate, freestream), legend <span class="pl-k">=</span> <span class="pl-c1">false</span>, colorbar <span class="pl-k">=</span> <span class="pl-c1">false</span>)
<span class="pl-c1">plot!</span>(plate, linewidth <span class="pl-k">=</span> <span class="pl-c1">2</span>, ratio <span class="pl-k">=</span> <span class="pl-c1">1</span>, size <span class="pl-k">=</span> (<span class="pl-c1">600</span>, <span class="pl-c1">300</span>))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f1c2c1d5386e7130af29f69720c5e624a1dc5e34/68747470733a2f2f64617277696e646172616b2e6769746875622e696f2f506f74656e7469616c466c6f772e6a6c2f6c61746573742f7472616e736c6174696e675f706c6174652e737667"><img src="https://camo.githubusercontent.com/f1c2c1d5386e7130af29f69720c5e624a1dc5e34/68747470733a2f2f64617277696e646172616b2e6769746875622e696f2f506f74656e7469616c466c6f772e6a6c2f6c61746573742f7472616e736c6174696e675f706c6174652e737667" alt="Flat plate in freestream" data-canonical-src="https://darwindarak.github.io/PotentialFlow.jl/latest/translating_plate.svg" style="max-width:100%;"></a></p>
<p>More examples can be found in the <a href="https://darwindarak.github.io/PotentialFlow.jl" rel="nofollow">documentation</a> and the <a href="https://github.com/darwindarak/PotentialFlow.jl/tree/binder/binder/notebooks">Jupyter notebooks</a>.
You can also run the notebooks directly in your browser <a href="https://beta.mybinder.org/v2/gh/darwindarak/PotentialFlow.jl/binder?filepath=binder%2Fnotebooks" rel="nofollow">here</a>.</p>
</article></div>