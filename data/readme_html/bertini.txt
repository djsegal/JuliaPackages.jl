<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-bertinijl" class="anchor" aria-hidden="true" href="#bertinijl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Bertini.jl</h1>
<p>Julia wrapper for Bertini (<a href="https://bertini.nd.edu" rel="nofollow">https://bertini.nd.edu</a>). Provides the function <code>bertini</code>.</p>
<p>For instance, to solve the polynomial</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="f(x) = x^2 - 1
"><pre lang="math"><code>f(x) = x^2 - 1
</code></pre></div>
<p>we type</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using HomotopyContinuation, Bertini

@var x y
f = [x^2 - 1; x - y]

Bertini.bertini(f)
"><pre><span class="pl-k">using</span> HomotopyContinuation, Bertini

<span class="pl-c1">@var</span> x y
f <span class="pl-k">=</span> [x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>; x <span class="pl-k">-</span> y]

Bertini<span class="pl-k">.</span><span class="pl-c1">bertini</span>(f)</pre></div>
<p>The full syntax of <code>bertini</code> is as follows</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="bertini(
    f;
    hom_variable_group = false,
    file_path = mktempdir(),
    bertini_path = &quot;&quot;,
    MPTYPE = nothing,
    MAXNEWTONITS = nothing,
    ENDGAMEBDRY = nothing,
    ENDGAMENUM = nothing,
    TrackType = 0)
"><pre><span class="pl-c1">bertini</span>(
    f;
    hom_variable_group <span class="pl-k">=</span> <span class="pl-c1">false</span>,
    file_path <span class="pl-k">=</span> <span class="pl-c1">mktempdir</span>(),
    bertini_path <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>,
    MPTYPE <span class="pl-k">=</span> <span class="pl-c1">nothing</span>,
    MAXNEWTONITS <span class="pl-k">=</span> <span class="pl-c1">nothing</span>,
    ENDGAMEBDRY <span class="pl-k">=</span> <span class="pl-c1">nothing</span>,
    ENDGAMENUM <span class="pl-k">=</span> <span class="pl-c1">nothing</span>,
    TrackType <span class="pl-k">=</span> <span class="pl-c1">0</span>)</pre></div>
<p>where</p>
<ul>
<li><code>hom_variable_group</code> tells Bertini whether or not we are computing in projective space,</li>
<li><code>file_path</code> is the path to the folder where you want input.txt being saved to.</li>
<li><code>bertini_path</code> is the path to the folder where the bertini executable is saved to.</li>
<li>the other arguments correspond to standard Bertini arguments</li>
</ul>
</article></div>