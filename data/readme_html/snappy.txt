<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-snappy---a-fast-compressordecompressor" class="anchor" aria-hidden="true" href="#snappy---a-fast-compressordecompressor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Snappy - A fast compressor/decompressor</h1>
<p dir="auto"><a href="https://travis-ci.org/JuliaIO/Snappy.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/33ccb462b1c1ba53d94c549af7a4c0a9cfa2598ef4bba1a9eaaf3e2609f23245/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961494f2f536e617070792e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaIO/Snappy.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/JuliaIO/Snappy.jl">Snappy.jl</a> is a Julia wrapper for the <a href="https://code.google.com/p/snappy/" rel="nofollow">snappy</a> library - a compression/decompression library focusing on speed.</p>
<h2 dir="auto"><a id="user-content-high-level-interfaces" class="anchor" aria-hidden="true" href="#high-level-interfaces"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>High-level Interfaces</h2>
<p dir="auto">The <code>Snappy</code> module exports only two functions:</p>
<ul dir="auto">
<li><code>compress(input::Vector{UInt8}) -&gt; compressed::Vector{UInt8}</code></li>
<li><code>uncompress(input::Vector{UInt8}) -&gt; uncompressed::Vector{UInt8}</code>.</li>
</ul>
<p dir="auto">These functions are self-explanatory and works as such (hence, always satisfies <code>uncompress(compress(input)) == input</code> for any <code>input</code>).</p>
<h2 dir="auto"><a id="user-content-low-level-interfaces" class="anchor" aria-hidden="true" href="#low-level-interfaces"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Low-level Interfaces</h2>
<p dir="auto">If you dig into the module, you will find the following lower-level functions:</p>
<ul dir="auto">
<li><code>snappy_compress(input::Vector{UInt8}, compressed::Vector{UInt8}) -&gt; (length, status)</code></li>
<li><code>snappy_uncompress(compressed::Vector{UInt8}, uncompressed::Vector{UInt8}) -&gt; (length, status)</code></li>
<li><code>snappy_max_compressed_length(source_length::UInt) -&gt; length</code></li>
<li><code>snappy_uncompressed_length(compressed::Vector{UInt8}) -&gt; (length, status)</code></li>
<li><code>snappy_validate_compressed_buffer(compressed::Vector{UInt8}) -&gt; status</code>.</li>
</ul>
<p dir="auto">These functions have one-to-one correspondance to the C-APIs and are very thin wrappers of them, so you can consult the <a href="https://github.com/google/snappy/blob/master/snappy-c.h">"snappy-c.h"</a> header file for the documentation.
Moreover, even though these functions are not exported by default, you can assume that they are stable as long as the original C-APIs are stable.</p>
</article></div>