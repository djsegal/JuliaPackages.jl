<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-stages" class="anchor" aria-hidden="true" href="#stages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Stages</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/6c743cda59df3bd87c20e1ebf56a51c55a2e3d9acb8014f58814f3cb7effe542/68747470733a2f2f7472617669732d63692e6f72672f73616c74706f726b2f53746167652e6a6c2e7376673f6272616e63683d6d6173746572"><img align="right" src="https://camo.githubusercontent.com/6c743cda59df3bd87c20e1ebf56a51c55a2e3d9acb8014f58814f3cb7effe542/68747470733a2f2f7472617669732d63692e6f72672f73616c74706f726b2f53746167652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/saltpork/Stage.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">This is a wrapper macro that supplies:</p>
<ol dir="auto">
<li>simple name-based memoization/checkpointing (note: not @memoize)</li>
<li>injected logger and ckpts arguments</li>
<li>invocation of stage functions is asynchronous via <code>@spawn</code></li>
<li>results are returned as remote ref of tuple (result, logger-output)</li>
</ol>
<p dir="auto">Scripts using stages would ideally run in something like an ijulia
notebook.  Currently, ijulia notebooks don't handle magics, but
eventually, when they do, we can clean up/manage checkpoints via
filesystem commands.</p>
<p dir="auto">Note: Ipython checkpoints provide script versioning but they don't
checkpoint execution.</p>
<h2 dir="auto"><a id="user-content-news" class="anchor" aria-hidden="true" href="#news"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>News</h2>
<p dir="auto">11/1 -- Last 0.3 version tagged</p>
<p dir="auto">11/1 -- Initial port to 0.4 passing</p>
<p dir="auto">7/27 -- ported to 0.6</p>
</article></div>