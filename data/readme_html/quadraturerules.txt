<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-quadrature-rules" class="anchor" aria-hidden="true" href="#quadrature-rules"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quadrature Rules</h1>
<p dir="auto"><a href="https://juliagni.github.io/QuadratureRules.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://juliagni.github.io/QuadratureRules.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/Q/QuadratureRules.html" rel="nofollow"><img src="https://camo.githubusercontent.com/e40a0cdd6500fe11fa2efd601a88cf009f5f284f9e4af584cc434c95e4a4839b/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f512f5175616472617475726552756c65732e737667" alt="PkgEval Status" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/Q/QuadratureRules.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaGNI/QuadratureRules.jl/actions"><img src="https://github.com/JuliaGNI/QuadratureRules.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaGNI/QuadratureRules.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fda32abce095f1d1fd14850cdcae1a9287c754c655d1c38c53422fddc8f02ca4/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961474e492f5175616472617475726552756c65732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaGNI/QuadratureRules.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://doi.org/10.5281/zenodo.4310382" rel="nofollow"><img src="https://camo.githubusercontent.com/cf5271ef1b44dddebd66f72ad60ea00afa9247c627e989ad3992d6bae40f0cc2/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f646f692f31302e353238312f7a656e6f646f2e343331303338322e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/doi/10.5281/zenodo.4310382.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides quadrature rules for numerical integration, e.g., in finite element methods or variational integrators. It provides a unified interface for quadrature rules from different sources and algorithms for the computation of quadrature rules with an arbitrary number of nodes and weights in arbitrary precision.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto"><em>QuadratureRules.jl</em> and all of its dependencies can be installed via the Julia REPL by typing</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="]add QuadratureRules"><pre>]add QuadratureRules</pre></div>
<h2 dir="auto"><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic Usage</h2>
<p dir="auto">After loading the Quadrature Rule module by</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using QuadratureRules"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> QuadratureRules</pre></div>
<p dir="auto">a <code>QuadratureRule</code> can be created by calling any one of the provided constructors, for example</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; quad = TrapezoidalQuadrature()
QuadratureRule{Float64,2}(2, [0.0, 1.0], [0.5, 0.5])"><pre>julia<span class="pl-k">&gt;</span> quad <span class="pl-k">=</span> <span class="pl-c1">TrapezoidalQuadrature</span>()
<span class="pl-c1">QuadratureRule</span><span class="pl-c1">{Float64,2}</span>(<span class="pl-c1">2</span>, [<span class="pl-c1">0.0</span>, <span class="pl-c1">1.0</span>], [<span class="pl-c1">0.5</span>, <span class="pl-c1">0.5</span>])</pre></div>
<p dir="auto">The <code>QuadratureRule</code> type has the following fields:</p>
<ul dir="auto">
<li><code>order</code> the order of the method,</li>
<li><code>nodes</code> the nodes,</li>
<li><code>weights</code> the weights.</li>
</ul>
<p dir="auto">A functor is defined, which integrates functions <code>f(x)</code> using the quadrature rule:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; quad(x -&gt; x^2)
0.5"><pre class="notranslate"><code>julia&gt; quad(x -&gt; x^2)
0.5
</code></pre></div>
<p dir="auto">There are several convenience functions for accessing the fields:</p>
<ul dir="auto">
<li><code>nnodes(::QuadratureRule{T,N}) where {T,N} = N</code></li>
<li><code>nodes(quad::QuadratureRule) = quad.nodes</code></li>
<li><code>order(quad::QuadratureRule) = quad.order</code></li>
<li><code>weights(quad::QuadratureRule) = quad.weights</code></li>
</ul>
<p dir="auto">as well as a function for looping over all nodes and weights:</p>
<ul dir="auto">
<li><code>Base.eachindex(quad::QuadratureRule) = eachindex(quad.nodes, quad.weights)</code></li>
</ul>
<h2 dir="auto"><a id="user-content-quadrature-rules-1" class="anchor" aria-hidden="true" href="#quadrature-rules-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quadrature Rules</h2>
<p dir="auto">There are several pre-tabulated quadrature rules:</p>
<ul dir="auto">
<li><code>RiemannQuadratureLeft</code></li>
<li><code>RiemannQuadratureRight</code></li>
<li><code>MidpointQuadrature</code></li>
<li><code>TrapezoidalQuadrature</code></li>
</ul>
<p dir="auto">as well as functions for generating quadrature rules with an arbitrary number of nodes on the fly:</p>
<ul dir="auto">
<li><code>ClenshawCurtisQuadrature</code></li>
<li><code>GaussChebyshevQuadrature</code></li>
<li><code>GaussLegendreQuadrature</code></li>
<li><code>LobattoChebyshevQuadrature</code></li>
<li><code>LobattoLegendreQuadrature</code></li>
</ul>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<p dir="auto">If you use QuadratureRules.jl in your work, please consider citing it by</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@misc{Kraus:2020:QuadratureRules,
  title={QuadratureRules.jl: A Collection of Quadrature Rules in Julia},
  author={Kraus, Michael},
  year={2020},
  howpublished={\url{https://github.com/JuliaGNI/QuadratureRules.jl}},
  doi={10.5281/zenodo.4310382}
}"><pre class="notranslate"><code>@misc{Kraus:2020:QuadratureRules,
  title={QuadratureRules.jl: A Collection of Quadrature Rules in Julia},
  author={Kraus, Michael},
  year={2020},
  howpublished={\url{https://github.com/JuliaGNI/QuadratureRules.jl}},
  doi={10.5281/zenodo.4310382}
}
</code></pre></div>
</article></div>