<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-squirrel" class="anchor" aria-hidden="true" href="#squirrel"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Squirrel</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; @squirrel var1, var2
using JLSO
loaded = JLSO.load(&quot;/Users/mzgubic/.julia/squirrel/nut_2022-08-25T11:15:34.367_var1_var2.jlso&quot;)
var1, var2 = loaded[:var1], loaded[:var2]"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@squirrel</span> var1, var2
<span class="pl-k">using</span> JLSO
loaded <span class="pl-k">=</span> JLSO<span class="pl-k">.</span><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>/Users/mzgubic/.julia/squirrel/nut_2022-08-25T11:15:34.367_var1_var2.jlso<span class="pl-pds">"</span></span>)
var1, var2 <span class="pl-k">=</span> loaded[<span class="pl-c1">:var1</span>], loaded[<span class="pl-c1">:var2</span>]</pre></div>
<p dir="auto">will serialise <code>var1</code> and <code>var2</code>, and print copiable code to recover them in the REPL.
Useful for debugging deep call stacks, where you call <code>@squirrel</code> inside some code that takes a long time to execute before it errors, and you want to examine the object just before it errors.</p>
</article></div>