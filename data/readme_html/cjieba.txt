<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-cjiebajl" class="anchor" aria-hidden="true" href="#cjiebajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CJieba.jl</h1>
<p dir="auto"><a href="https://github.com/yanyiwu/cjieba/">CJieba</a> word tokenizor and part-of-speech tagging in Julia.</p>
<p dir="auto"><em>CJieba is nice and simple and quite adequate for simple tasks specially those prioritize speed over accuracy.</em></p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using CJieba
s = &quot;他来到了网易杭研大厦&quot;"><pre><span class="pl-k">using</span> CJieba
s <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>他来到了网易杭研大厦<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">Tokenize sentence:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="cut(s)"><pre><span class="pl-c1">cut</span>(s)</pre></div>
<p dir="auto">Output:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="6-element Vector{String}:
 &quot;他&quot;
 &quot;来到&quot;
 &quot;了&quot;
 &quot;网易&quot;
 &quot;杭研&quot;
 &quot;大厦&quot;"><pre class="notranslate"><code>6-element Vector{String}:
 "他"
 "来到"
 "了"
 "网易"
 "杭研"
 "大厦"
</code></pre></div>
<p dir="auto">Tokenize and POS tagging:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="tag(s)"><pre><span class="pl-c1">tag</span>(s)</pre></div>
<p dir="auto">Output:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="6-element Vector{Tuple{String, String}}:
 (&quot;他&quot;, &quot;r&quot;)
 (&quot;来到&quot;, &quot;v&quot;)
 (&quot;了&quot;, &quot;ul&quot;)
 (&quot;网易&quot;, &quot;n&quot;)
 (&quot;杭研&quot;, &quot;x&quot;)
 (&quot;大厦&quot;, &quot;n&quot;)"><pre class="notranslate"><code>6-element Vector{Tuple{String, String}}:
 ("他", "r")
 ("来到", "v")
 ("了", "ul")
 ("网易", "n")
 ("杭研", "x")
 ("大厦", "n")
</code></pre></div>
<p dir="auto">Tokenize without tag:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="cut(s; without=&quot;x&quot;)"><pre><span class="pl-c1">cut</span>(s; without<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>x<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Output:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="5-element Vector{String}:
 &quot;他&quot;
 &quot;来到&quot;
 &quot;了&quot;
 &quot;网易&quot;
 &quot;大厦&quot;"><pre class="notranslate"><code>5-element Vector{String}:
 "他"
 "来到"
 "了"
 "网易"
 "大厦"
</code></pre></div>
<p dir="auto">Manually create handle, add user word, and manually free handle:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="jieba = JIEBA()
add_word!(jieba, &quot;网易杭研大厦&quot;)
cut(jieba, s)
tag(jieba, s)
free!(jieba)"><pre>jieba <span class="pl-k">=</span> <span class="pl-c1">JIEBA</span>()
<span class="pl-c1">add_word!</span>(jieba, <span class="pl-s"><span class="pl-pds">"</span>网易杭研大厦<span class="pl-pds">"</span></span>)
<span class="pl-c1">cut</span>(jieba, s)
<span class="pl-c1">tag</span>(jieba, s)
<span class="pl-c1">free!</span>(jieba)</pre></div>
<p dir="auto">Output:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="4-element Vector{String}:
 &quot;他&quot;
 &quot;来到&quot;
 &quot;了&quot;
 &quot;网易杭研大厦&quot;

4-element Vector{Tuple{String, String}}:
 (&quot;他&quot;, &quot;r&quot;)
 (&quot;来到&quot;, &quot;v&quot;)
 (&quot;了&quot;, &quot;ul&quot;)
 (&quot;网易杭研大厦&quot;, &quot;u&quot;)"><pre class="notranslate"><code>4-element Vector{String}:
 "他"
 "来到"
 "了"
 "网易杭研大厦"

4-element Vector{Tuple{String, String}}:
 ("他", "r")
 ("来到", "v")
 ("了", "ul")
 ("网易杭研大厦", "u")
</code></pre></div>
<p dir="auto">This works too:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="jieba = JIEBA(; user_words=[&quot;网易杭研大厦&quot;])"><pre>jieba <span class="pl-k">=</span> <span class="pl-c1">JIEBA</span>(; user_words<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>网易杭研大厦<span class="pl-pds">"</span></span>])</pre></div>
<p dir="auto">Or pass a file path:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="jieba = JIEBA(; user_words=&quot;/path/to/your/user_dict&quot;)"><pre>jieba <span class="pl-k">=</span> <span class="pl-c1">JIEBA</span>(; user_words<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>/path/to/your/user_dict<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><code>do</code> syntax (<em>auto free handle</em>):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="JIEBA(; user_words=[&quot;网易杭研大厦&quot;]) do jieba
   tag(jieba, s)
end"><pre><span class="pl-c1">JIEBA</span>(; user_words<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>网易杭研大厦<span class="pl-pds">"</span></span>]) <span class="pl-k">do</span> jieba
   <span class="pl-c1">tag</span>(jieba, s)
<span class="pl-k">end</span></pre></div>
<h2 dir="auto"><a id="user-content-goals" class="anchor" aria-hidden="true" href="#goals"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Goals</h2>
<ul dir="auto">
<li>Make it idiomatic to use in Julia.</li>
<li>Make it safe, <em>mostly (I'm pretty sure some weird ill-formated user_dict can still segfault it...)</em></li>
<li>Keep it simple (didn't even expose keyword extractor).</li>
</ul>
</article></div>