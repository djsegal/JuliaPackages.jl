<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-jsonlines" class="anchor" aria-hidden="true" href="#jsonlines"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>JSONLines</h1>
<p><a href="https://danielw2904.github.io/JSONLines.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://danielw2904.github.io/JSONLines.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/danielw2904/JSONLines.jl/actions"><img src="https://github.com/danielw2904/JSONLines.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a></p>
<p>A simple package to read (parts of) a <a href="http://jsonlines.org/" rel="nofollow">JSON Lines</a> files. The main purpose is to read files that are larger than memory. The two main functions are <code>LineIndex</code> and <code>LineIterator</code> which return an index of the rows in the given file and an iterator over the file, respectively. The <code>LineIndex</code> is <code>Tables.jl</code> compatible and can directly be piped into e.g. a DataFrame if every row in the result has the same schema (i.e. the same variables). See also <code>materialize</code> and <code>columnwise</code>. It allows memory-efficient loading of rows of a JSON Lines file. In order to select the rows <code>skip</code> and <code>nrows</code> can be used to index <code>nrows</code> rows after skipping <code>skip</code> rows. The file is <code>mmap</code>ed and only the required rows are loaded into RAM. Files must contain a valid JSON object (denoted by <code>{"String1":ELEMENT1, "String2":ELEMENT2, ...}</code>) on each line. JSON parsing is done using the <a href="https://github.com/quinnj/JSON3.jl">JSON3.jl</a> package. Lines can be separated by <code>\n</code> or <code>\r\n</code> and some whitespace characters are allowed at the beginning of a line before the JSON object and the newline character (basically all that can be represented as a single <code>UInt8</code>). Typically a file would look like this:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="{&quot;name&quot;:&quot;Daniel&quot;,&quot;organization&quot;:&quot;IMSM&quot;}
{&quot;name&quot;:&quot;Peter&quot;,&quot;organization&quot;:&quot;StatMath&quot;}
"><pre><code>{"name":"Daniel","organization":"IMSM"}
{"name":"Peter","organization":"StatMath"}
</code></pre></div>
<p>There is experimental support for JSON Arrays on each line where the first line after skip contains the names of the columns.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="[&quot;name&quot;, &quot;organization&quot;]
[&quot;Daniel&quot;, &quot;IMSM&quot;]
[&quot;Peter&quot;, &quot;StatMath]
"><pre><code>["name", "organization"]
["Daniel", "IMSM"]
["Peter", "StatMath]
</code></pre></div>
<p>This <strong>should</strong> work but is not tested thoroughly. Please report any usecase that is not working.</p>
<h1><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Getting Started</h1>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="(@v1.5) pkg&gt; add JSONLines
"><pre lang="julia-repl"><code>(@v1.5) pkg&gt; add JSONLines
</code></pre></div>
</article></div>