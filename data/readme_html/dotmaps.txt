<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-dotmaps" class="anchor" aria-hidden="true" href="#dotmaps"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DotMaps</h1>
<p><a href="https://github.com/mcmcgrath13/DotMaps.jl/actions"><img src="https://github.com/mcmcgrath13/DotMaps.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a></p>
<p>A wrapper for dictionaries that allows dot notation indexing as well as traditional bracket indexing.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="dict = Dict(&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;2, &quot;c&quot; =&gt; Dict(&quot;d&quot;=&gt;3))
dm = DotMap(dict)

dm.c.d # returns 3
dm.c.e = 5
dm[&quot;c&quot;].e # returns 5

DotMap.todict(dm, keys_as_strings=true) # returns Dict(&quot;a&quot;=&gt;1, &quot;b&quot;=&gt;2, &quot;c&quot; =&gt; Dict(&quot;d&quot;=&gt;3, &quot;e&quot;=&gt;5))
DotMap.todict(dm) # returns Dict(:a=&gt;1, :b=&gt;2, :c =&gt; Dict(:d=&gt;3, :e=&gt;5))
"><pre>dict <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">"</span>c<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>d<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">3</span>))
dm <span class="pl-k">=</span> <span class="pl-c1">DotMap</span>(dict)

dm<span class="pl-k">.</span>c<span class="pl-k">.</span>d <span class="pl-c"><span class="pl-c">#</span> returns 3</span>
dm<span class="pl-k">.</span>c<span class="pl-k">.</span>e <span class="pl-k">=</span> <span class="pl-c1">5</span>
dm[<span class="pl-s"><span class="pl-pds">"</span>c<span class="pl-pds">"</span></span>]<span class="pl-k">.</span>e <span class="pl-c"><span class="pl-c">#</span> returns 5</span>

DotMap<span class="pl-k">.</span><span class="pl-c1">todict</span>(dm, keys_as_strings<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> returns Dict("a"=&gt;1, "b"=&gt;2, "c" =&gt; Dict("d"=&gt;3, "e"=&gt;5))</span>
DotMap<span class="pl-k">.</span><span class="pl-c1">todict</span>(dm) <span class="pl-c"><span class="pl-c">#</span> returns Dict(:a=&gt;1, :b=&gt;2, :c =&gt; Dict(:d=&gt;3, :e=&gt;5))</span></pre></div>
<p><strong>NOTE</strong> This is not as performative as using normal dictionaries, but is nice for accessing deeply nested dictionary structures, such as large config/yaml/json files.</p>
</article></div>