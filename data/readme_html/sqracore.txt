<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-sqracorejl" class="anchor" aria-hidden="true" href="#sqracorejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SqraCore.jl</h1>
<p dir="auto">Approximation of the generator of a Diffusion process by pointwise potential evaluations.</p>
<h2 dir="auto"><a id="user-content-theory" class="anchor" aria-hidden="true" href="#theory"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Theory</h2>
<p dir="auto">Using the Square-Root approximation (SQRA) as in [6]:</p>
<p dir="auto">The generetor of the Koopman operator of the diffusion in a potential <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$U$</math-renderer>: <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$dX = -\nabla U dt + \sigma dB_t$</math-renderer>
on a Voronoi tesselation of the state space with centers <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$x_i$</math-renderer> is approximated by the matrix <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$Q$</math-renderer>:</p>
<p dir="auto"><math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$$Q_{ij} = C_{ij} \sqrt\frac{\pi_j}{\pi_i}$$</math-renderer>
for <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$i\neq j$</math-renderer> and <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$Q_{ii} = -\sum_{j\neq i} Q_{ij}$</math-renderer> with <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$$C_{ij} = \beta^{-1}\frac{A_{ij}}{h_{ij} V_i}$$</math-renderer> where <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$A_{ij}$</math-renderer> and <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$V_{ij}$</math-renderer> are the (common boundary) areas and volumes of the cells, <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$h_{ij}$</math-renderer> the distance between the centers of cells <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$i,j$</math-renderer>.</p>
<p dir="auto">It ows its name to the fact that it is proportional to the square-root of the fractions of the stationary distribution <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$\pi_i$</math-renderer> at the cell centers,
<math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="46b6a5bc8fb1db9e11b23d2d71bd12dc">$$\pi_i = \exp (-\beta U(x_i)).$$</math-renderer></p>
<h2 dir="auto">
<a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ul dir="auto">
<li>[1] Weber (2010). "A subspace approach to Molecular Markov State Models via a New Infinitesimal Generator"</li>
<li>[2] Lie, Fackeldey, M. Weber (2013)</li>
<li>[4] Donati, Heida, Keller, Weber (2018). "Estimation of the infinitesimal generator by square-root approximation."</li>
<li>[3] Donati, Weber, Keller (2021). "Markov models from the square root approximation of the Fokker–Planck equation: calculating the grid-dependent flux."</li>
<li>[5] Donati, Weber, Keller (2022). "A review of Girsanov reweighting and of square root approximation for building molecular Markov state models."</li>
<li>[6] Schütte, Klus, Hartmann (2022). "Overcoming the Timescale Barrier in Molecular Dynamics: Transfer Operators, Variational Principles, and Machine Learning."</li>
</ul>
</article></div>