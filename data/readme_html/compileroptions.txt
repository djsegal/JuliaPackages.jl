<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-compileroptions" class="anchor" aria-hidden="true" href="#compileroptions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>CompilerOptions</h1>
<p><a href="https://travis-ci.org/sjkelly/CompilerOptions.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/275b64b20f681d4ce7498ec02655d142b3e52391/68747470733a2f2f7472617669732d63692e6f72672f736a6b656c6c792f436f6d70696c65724f7074696f6e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/sjkelly/CompilerOptions.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/r/sjkelly/CompilerOptions.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/e4fc363ac1a3d45d890c95fdefb3660f986a124a/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f736a6b656c6c792f436f6d70696c65724f7074696f6e732e6a6c2e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/coveralls/sjkelly/CompilerOptions.jl.svg" style="max-width:100%;"></a></p>
<p>This is a basic package for providing introsepction into Julia's compiler
options. This functionality is now part of Base in 0.4, so this package aims
provide a consistent API between 0.3 and 0.4.</p>
<h2><a id="user-content-use" class="anchor" aria-hidden="true" href="#use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Use</h2>
<h3><a id="user-content-julia-03" class="anchor" aria-hidden="true" href="#julia-03"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Julia 0.3</h3>
<p>CompilerOptions defines the following for Julia 0.3:</p>
<pre><code>    immutable JLOptions
        build_path::Ptr{Cchar}
        cpu_target::Ptr{Cchar}
        code_coverage::Int8
        malloc_log::Int8
        check_bounds::Int8
        int_literals::Cint
    end

    JLOptions() = unsafe_load(cglobal(:jl_compileropts, JLOptions))
</code></pre>
<p>For example, it is now possible to see if Julia is being run with code-coverage
enabled:</p>
<p><code>JLOptions().code_coverage</code></p>
<h3><a id="user-content-julia-04" class="anchor" aria-hidden="true" href="#julia-04"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Julia 0.4</h3>
<p>Julia 0.4 provides the same type, but is unexported. This package simply
provides an alias for the function in Base:</p>
<p><code>JLOptions() = Base.JLOptions()</code></p>
<h2><a id="user-content-credit" class="anchor" aria-hidden="true" href="#credit"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Credit</h2>
<p>This package was kick started with the help of ihnorton, jakebolewski, and staticfloat.</p>
<ul>
<li><a href="https://gist.github.com/staticfloat/93d7050a08ff7bb52373">https://gist.github.com/staticfloat/93d7050a08ff7bb52373</a></li>
<li><a href="https://groups.google.com/d/msg/julia-users/TkYi6CJrSVE/L-ydZ67ujiUJ" rel="nofollow">https://groups.google.com/d/msg/julia-users/TkYi6CJrSVE/L-ydZ67ujiUJ</a></li>
</ul>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>License</h2>
<p>Available under the <a href="http://en.wikipedia.org/wiki/MIT_License" rel="nofollow">MIT "Expat" License</a>. See: <a href="./LICENSE.md">LICENSE.md</a>.</p>
</article></div>