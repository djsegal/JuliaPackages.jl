<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-embeddedgraphsjl" class="anchor" aria-hidden="true" href="#embeddedgraphsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>EmbeddedGraphs.jl</h1>
<p><a href="https://fhell.github.io/EmbeddedGraphs.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example usage</h1>
<p>The example requires</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using EmbeddedGraphs
using Distances
using LightGraphs
"><pre><span class="pl-k">using</span> EmbeddedGraphs
<span class="pl-k">using</span> Distances
<span class="pl-k">using</span> LightGraphs</pre></div>
<p>Set the position of the vertices that need to be placed on the graph</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="positions = map(i-&gt;[rand(),rand()], 1:10)
"><pre>positions <span class="pl-k">=</span> <span class="pl-c1">map</span>(i<span class="pl-k">-&gt;</span>[<span class="pl-c1">rand</span>(),<span class="pl-c1">rand</span>()], <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>)</pre></div>
<p>Create the graph with a given SimpleGraph structure and positions</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="eg = EmbeddedGraph(SimpleGraph(10), positions)
"><pre>eg <span class="pl-k">=</span> <span class="pl-c1">EmbeddedGraph</span>(<span class="pl-c1">SimpleGraph</span>(<span class="pl-c1">10</span>), positions)</pre></div>
<p>In case you want to have a different metric this is possible with a third argument, where the
points <code>P</code> and <code>Q</code> should be the positions of the vertices.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="eg_minkowski = EmbeddedGraph(SimpleGraph(10), positions, (P, Q) -&gt; minkowski(P, Q, 2.))
"><pre>eg_minkowski <span class="pl-k">=</span> <span class="pl-c1">EmbeddedGraph</span>(<span class="pl-c1">SimpleGraph</span>(<span class="pl-c1">10</span>), positions, (P, Q) <span class="pl-k">-&gt;</span> <span class="pl-c1">minkowski</span>(P, Q, <span class="pl-c1">2.</span>))</pre></div>
<p>Calculate the distance between two vertices ...</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="eg[1,9]
"><pre>eg[<span class="pl-c1">1</span>,<span class="pl-c1">9</span>]</pre></div>
<p>... or likewise</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="euclidean(eg.vertexpos[1], eg.vertexpos[9])
"><pre><span class="pl-c1">euclidean</span>(eg<span class="pl-k">.</span>vertexpos[<span class="pl-c1">1</span>], eg<span class="pl-k">.</span>vertexpos[<span class="pl-c1">9</span>])</pre></div>
<p>Get the x value of all the vertices ...</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="vertices_loc(eg, 1)
"><pre><span class="pl-c1">vertices_loc</span>(eg, <span class="pl-c1">1</span>)</pre></div>
<p>... or y location</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="vertices_loc(eg, 2)
"><pre><span class="pl-c1">vertices_loc</span>(eg, <span class="pl-c1">2</span>)</pre></div>
<p>Get the Weightsmatrix with distances between every vertex ...</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="weights(eg, dense=true)
"><pre><span class="pl-c1">weights</span>(eg, dense<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<p>... or only a sparse matrix with only connected vertices</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="weights(eg, dense=false)
"><pre><span class="pl-c1">weights</span>(eg, dense<span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<p>Add an edge</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="add_edge!(eg, 1, 9)
add_edge!(eg, 5, 7)
"><pre><span class="pl-c1">add_edge!</span>(eg, <span class="pl-c1">1</span>, <span class="pl-c1">9</span>)
<span class="pl-c1">add_edge!</span>(eg, <span class="pl-c1">5</span>, <span class="pl-c1">7</span>)</pre></div>
<p>Remove an edge</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="rem_edge!(eg, 1, 9)
"><pre><span class="pl-c1">rem_edge!</span>(eg, <span class="pl-c1">1</span>, <span class="pl-c1">9</span>)</pre></div>
<p>Add a vertex at position <code>(0.1, 0.7)</code></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="add_vertex!(eg, [0.1, 0.7])
"><pre><span class="pl-c1">add_vertex!</span>(eg, [<span class="pl-c1">0.1</span>, <span class="pl-c1">0.7</span>])</pre></div>
<p>Remove a vertex</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="rem_vertex!(eg, 5)
rem_vertices!(eg, [1, 2, 3])
"><pre><span class="pl-c1">rem_vertex!</span>(eg, <span class="pl-c1">5</span>)
<span class="pl-c1">rem_vertices!</span>(eg, [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>])</pre></div>
<p>Plot the graph embedded in 2D</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="gplot(eg)
"><pre><span class="pl-c1">gplot</span>(eg)</pre></div>
</article></div>