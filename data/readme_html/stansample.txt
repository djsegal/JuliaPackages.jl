<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-stansample" class="anchor" aria-hidden="true" href="#stansample"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>StanSample</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667"><img src="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-experimental-orange.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/StanJulia/StanSample.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/74c9217f5491376f77497adfd460f27c3390b323b2892209a96880db2ad4213a/68747470733a2f2f7472617669732d63692e636f6d2f5374616e4a756c69612f5374616e53616d706c652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/StanJulia/StanSample.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/StanJulia/StanSample.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/79aeaeb176249f3e5bbcfc8e787fa2218009b90cd3b4fcc35461fcfc797d21fd/687474703a2f2f636f6465636f762e696f2f6769746875622f5374616e4a756c69612f5374616e53616d706c652e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/StanJulia/StanSample.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>This package is registered. It can be installed with</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="pkg&gt; add StanSample.jl
"><pre>pkg<span class="pl-k">&gt;</span> add StanSample<span class="pl-k">.</span>jl</pre></div>
<p>StanSample.jl v3 is slightly breaking in that the default return of <code>read_samples</code> has been update to be a NamedTuple, i.e. <code>output_format=:namedtuple</code>, while it used to return a 3 dimensional Array.</p>
<p>You need a working <a href="https://mc-stan.org/users/interfaces/cmdstan.html" rel="nofollow">Stan's cmdstan</a> installation, the path of which you should specify in <code>JULIA_CMDSTAN_HOME</code>, eg in your <code>~/.julia/config/startup.jl</code> have a line like</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# CmdStan setup
ENV[&quot;JULIA_CMDSTAN_HOME&quot;] = expanduser(&quot;~/src/cmdstan-2.19.1/&quot;) # replace with your path
"><pre><span class="pl-c"><span class="pl-c">#</span> CmdStan setup</span>
<span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>JULIA_CMDSTAN_HOME<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-c1">expanduser</span>(<span class="pl-s"><span class="pl-pds">"</span>~/src/cmdstan-2.19.1/<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> replace with your path</span></pre></div>
<p>This package is modeled after Tamas Papp's <a href="https://github.com/tpapp/StanRun.jl">StanRun.jl</a> package.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>It is recommended that you start your Julia process with multiple worker processes to take advantage of parallel sampling, eg</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="julia -p auto
"><pre>julia -p auto</pre></div>
<p>Otherwise, <code>stan_sample</code> will use a single process.</p>
<p>Use this package like this:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using StanSample
"><pre><span class="pl-k">using</span> StanSample</pre></div>
<p>See the docstrings (in particular <code>?StanSample</code>) for more help.</p>
<h2><a id="user-content-versions" class="anchor" aria-hidden="true" href="#versions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Versions</h2>
<h3><a id="user-content-version-301" class="anchor" aria-hidden="true" href="#version-301"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 3.0.1</h3>
<ol>
<li>Thanks to the help of John Wright (@jwright11) all StanJulia packages have been tested on Windows. Most functionality work, with one exception. Stansummary.exe fails on Windows if warmup samples have been saved.</li>
</ol>
<h3><a id="user-content-version-300" class="anchor" aria-hidden="true" href="#version-300"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 3.0.0</h3>
<ol>
<li>By default read_samples(model) will return a NamedTuple with all chains appended.</li>
<li><code>output_format=:namedtuples</code> will provide a NamedTuple with separate chains.</li>
</ol>
<h3><a id="user-content-version-225" class="anchor" aria-hidden="true" href="#version-225"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 2.2.5</h3>
<ol>
<li>Thanks to @yiyuezhuo, a function <code>extract</code> has been added to simplify grouping variables into a NamedTuple.</li>
<li>read_sample() output_format argument has been extended with an option to request conversion to a NamedTuple.</li>
</ol>
<h3><a id="user-content-version-224" class="anchor" aria-hidden="true" href="#version-224"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 2.2.4</h3>
<ol>
<li>Dropped the use of pmap in StanBase</li>
</ol>
</article></div>