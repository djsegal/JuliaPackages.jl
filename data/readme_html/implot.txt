<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-implotjl" class="anchor" aria-hidden="true" href="#implotjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ImPlot.jl</h1>
<p dir="auto">Plotting extension library that can be used in conjunction with
<a href="https://github.com/Gnimuc/CImGui.jl">CImGui.jl</a> to provide enhanced immediate-mode data
visualization.</p>
<p dir="auto">ImPlot.jl provides an interface to <a href="https://github.com/cimgui/cimplot">cimplot</a>,
which is an auto-generated C API to <a href="https://github.com/epezent/implot">implot</a>, a C++
plotting extension library for <a href="https://github.com/ocornut/imgui">imgui</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Simple installation via the package registry:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="]add ImPlot"><pre>]add ImPlot</pre></div>
<h2 dir="auto"><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example Usage</h2>
<p dir="auto">Use <code>demo/implot_demo.jl</code> to check if things are working via:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="include(&quot;implot_demo.jl&quot;)
show()"><pre><span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span>implot_demo.jl<span class="pl-pds">"</span></span>)
<span class="pl-c1">show</span>()</pre></div>
<p dir="auto"><code>implot_demo.jl</code> replicates all the plotting functionality visible in <code>implot_demo.cpp</code> of implot v0.8, with the exception of examples using Tables (depends on upstream imgui) and custom plotting with <code>implot_internal.h</code> functions (depends on cimplot v0.9).</p>
<p dir="auto">Aside from the replication of the C++ interface, we have some convenience for some things that are slightly less verbose. See <code>demo/example_plots.jl</code> and below.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
## within a CImGui.jl render loop
## This assumes you have CImGui.LibCImGui.ImGuiCond_Once in scope
...

if show_window
    @c CImGui.Begin(&quot;Plot Window&quot;, &amp;show_window)
    y = rand(1000)
    ImPlot.SetNextPlotLimits(0.0,1000,0.0,1.0, ImGuiCond_Once)
    if (ImPlot.BeginPlot(&quot;Foo&quot;, &quot;x1&quot;, &quot;y1&quot;, CImGui.ImVec2(-1,300)))
        ImPlot.PlotLine(y)
        ImPlot.EndPlot()
    end
    CImGui.End()
end"><pre><span class="pl-c"><span class="pl-c">#</span># within a CImGui.jl render loop</span>
<span class="pl-c"><span class="pl-c">#</span># This assumes you have CImGui.LibCImGui.ImGuiCond_Once in scope</span>
<span class="pl-k">...</span>

<span class="pl-k">if</span> show_window
    <span class="pl-c1">@c</span> CImGui<span class="pl-k">.</span><span class="pl-c1">Begin</span>(<span class="pl-s"><span class="pl-pds">"</span>Plot Window<span class="pl-pds">"</span></span>, <span class="pl-k">&amp;</span>show_window)
    y <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1000</span>)
    ImPlot<span class="pl-k">.</span><span class="pl-c1">SetNextPlotLimits</span>(<span class="pl-c1">0.0</span>,<span class="pl-c1">1000</span>,<span class="pl-c1">0.0</span>,<span class="pl-c1">1.0</span>, ImGuiCond_Once)
    <span class="pl-k">if</span> (ImPlot<span class="pl-k">.</span><span class="pl-c1">BeginPlot</span>(<span class="pl-s"><span class="pl-pds">"</span>Foo<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>x1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>y1<span class="pl-pds">"</span></span>, CImGui<span class="pl-k">.</span><span class="pl-c1">ImVec2</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">300</span>)))
        ImPlot<span class="pl-k">.</span><span class="pl-c1">PlotLine</span>(y)
        ImPlot<span class="pl-k">.</span><span class="pl-c1">EndPlot</span>()
    <span class="pl-k">end</span>
    CImGui<span class="pl-k">.</span><span class="pl-c1">End</span>()
<span class="pl-k">end</span></pre></div>
</article></div>