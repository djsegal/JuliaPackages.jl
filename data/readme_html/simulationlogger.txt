<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-simulationlogger" class="anchor" aria-hidden="true" href="#simulationlogger"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SimulationLogger</h1>
<p dir="auto">SimulationLogger.jl is a package providing convenient logging tools for <a href="https://github.com/SciML/DifferentialEquations.jl">DifferentialEquations.jl</a>.</p>
<h2 dir="auto"><a id="user-content-packages-related-to-simulationloggerjl" class="anchor" aria-hidden="true" href="#packages-related-to-simulationloggerjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Packages related to SimulationLogger.jl</h2>
<ul dir="auto">
<li><a href="https://github.com/JinraeKim/FlightSims.jl">FlightSims.jl</a> is a general-purpose numerical simulator,
and it uses SimulationLogger.jl as a main logging tool. You can find real examples about <strong>how to use this package</strong> in FlightSims.jl.</li>
</ul>
<h2 dir="auto"><a id="user-content-notice-breaking-changes-in-v030" class="anchor" aria-hidden="true" href="#notice-breaking-changes-in-v030"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>!!NOTICE!! Breaking changes in v0.3.0</h2>
<ul dir="auto">
<li>The privileged name of data logger is now changed from <code>__LOGGER_DICT__</code> to <code>__LOGGER__</code>.</li>
<li>The type of data container, i.e., <code>typeof(__LOGGER__)</code> is now changed to be <code>NamedTuple</code>.
<ul dir="auto">
<li>For Zygote.jl-compatible data logging.
<ul dir="auto">
<li>See <code>test/macros.jl</code>.</li>
<li>Unfortunately, it is hard to integrate with DiffEqFlux.jl for now. See <a href="https://github.com/SciML/DiffEqFlux.jl/issues/662#issuecomment-997180871">DiffEqFlux.jl, #662</a>.</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 dir="auto"><a id="user-content-tl-dr-example-code" class="anchor" aria-hidden="true" href="#tl-dr-example-code"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TL; DR: example code</h1>
<h2 dir="auto"><a id="user-content-example-1-typical-usage" class="anchor" aria-hidden="true" href="#example-1-typical-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example 1: typical usage</h2>
<p dir="auto">See <a href="https://github.com/JinraeKim/FlightSims.jl">FlightSims.jl</a> for details.</p>
<h2 dir="auto"><a id="user-content-example-2-low-level-usage" class="anchor" aria-hidden="true" href="#example-2-low-level-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example 2: low-level usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SimulationLogger
using DifferentialEquations
using Transducers
using Plots
using Test


function test()
    @Loggable function dynamics!(dx, x, p, t; u)
        @onlylog state, input = x, u  # __LOGGER__.state = x, __LOGGER__.input = u
        dx .= u
    end
    @Loggable function custom_control(x)
        @log a = 1
        -a*x
    end
    @Loggable function feedback_dynamics!(dx, x, p, t)
        @onlylog time = t  # __LOGGER__.time = t
        @log x, t  # __LOGGER__.x = x
        u = @nested_log custom_control(x)  # __LOGGER__.a = 1
        @log u  # __LOGGER__.u = -a*x
        @nested_log :linear x
        @nested_log :linear dynamics!(dx, x, p, t; u=u)
    end
    t0, tf = 0.0, 0.1
    Δt = 0.01
    saved_values = SavedValues(Float64, NamedTuple)
    cb = CallbackSet()
    if hasmethod(feedback_dynamics!, Tuple{Any, Any, Any, Any, __LOG_INDICATOR__})
        # to avoid undefined error when not adding @Loggable
        log_func(x, t, integrator::DiffEqBase.DEIntegrator; kwargs...) = feedback_dynamics!(zero.(x), copy(x), integrator.p, t, __LOG_INDICATOR__(); kwargs...)
        cb = SavingCallback(log_func, saved_values; saveat=t0:Δt:tf)
    end
    # # sim
    x0 = [1, 2, 3]
    tspan = (t0, tf)
    prob = ODEProblem(
                      feedback_dynamics!, x0, tspan;
                      callback=cb,
                     )
    _ = solve(prob)
    ts = saved_values.saveval |&gt; Map(datum -&gt; datum[:t]) |&gt; collect
    xs = saved_values.saveval |&gt; Map(datum -&gt; datum[:x]) |&gt; collect
    us = saved_values.saveval |&gt; Map(datum -&gt; datum[:u]) |&gt; collect
    times = saved_values.saveval |&gt; Map(datum -&gt; datum[:time]) |&gt; collect
    states = saved_values.saveval |&gt; Map(datum -&gt; datum[:linear][:state]) |&gt; collect
    inputs = saved_values.saveval |&gt; Map(datum -&gt; datum[:linear][:input]) |&gt; collect
    as = saved_values.saveval |&gt; Map(datum -&gt; datum[:a]) |&gt; collect
    @test ts == saved_values.t
    @test ts == times
    @test xs == states
    @test us == inputs
    @test as == ones(length(ts))
    p_x = plot(ts, hcat(xs...)')
    p_u = plot(ts, hcat(us...)')
    dir_log = &quot;figures&quot;
    mkpath(dir_log)
    savefig(p_x, joinpath(dir_log, &quot;state.png&quot;))
    savefig(p_u, joinpath(dir_log, &quot;input.png&quot;))
end"><pre><span class="pl-k">using</span> SimulationLogger
<span class="pl-k">using</span> DifferentialEquations
<span class="pl-k">using</span> Transducers
<span class="pl-k">using</span> Plots
<span class="pl-k">using</span> Test


<span class="pl-k">function</span> <span class="pl-en">test</span>()
    <span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">dynamics!</span>(dx, x, p, t; u)
        <span class="pl-c1">@onlylog</span> state, input <span class="pl-k">=</span> x, u  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.state = x, __LOGGER__.input = u</span>
        dx <span class="pl-k">.=</span> u
    <span class="pl-k">end</span>
    <span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">custom_control</span>(x)
        <span class="pl-c1">@log</span> a <span class="pl-k">=</span> <span class="pl-c1">1</span>
        <span class="pl-k">-</span>a<span class="pl-k">*</span>x
    <span class="pl-k">end</span>
    <span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">feedback_dynamics!</span>(dx, x, p, t)
        <span class="pl-c1">@onlylog</span> time <span class="pl-k">=</span> t  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.time = t</span>
        <span class="pl-c1">@log</span> x, t  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.x = x</span>
        u <span class="pl-k">=</span> <span class="pl-c1">@nested_log</span> <span class="pl-c1">custom_control</span>(x)  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.a = 1</span>
        <span class="pl-c1">@log</span> u  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.u = -a*x</span>
        <span class="pl-c1">@nested_log</span> <span class="pl-c1">:linear</span> x
        <span class="pl-c1">@nested_log</span> <span class="pl-c1">:linear</span> <span class="pl-c1">dynamics!</span>(dx, x, p, t; u<span class="pl-k">=</span>u)
    <span class="pl-k">end</span>
    t0, tf <span class="pl-k">=</span> <span class="pl-c1">0.0</span>, <span class="pl-c1">0.1</span>
    Δt <span class="pl-k">=</span> <span class="pl-c1">0.01</span>
    saved_values <span class="pl-k">=</span> <span class="pl-c1">SavedValues</span>(Float64, NamedTuple)
    cb <span class="pl-k">=</span> <span class="pl-c1">CallbackSet</span>()
    <span class="pl-k">if</span> <span class="pl-c1">hasmethod</span>(feedback_dynamics!, Tuple{Any, Any, Any, Any, __LOG_INDICATOR__})
        <span class="pl-c"><span class="pl-c">#</span> to avoid undefined error when not adding @Loggable</span>
        <span class="pl-en">log_func</span>(x, t, integrator<span class="pl-k">::</span><span class="pl-c1">DiffEqBase.DEIntegrator</span>; kwargs<span class="pl-k">...</span>) <span class="pl-k">=</span> <span class="pl-c1">feedback_dynamics!</span>(<span class="pl-c1">zero</span>.(x), <span class="pl-c1">copy</span>(x), integrator<span class="pl-k">.</span>p, t, <span class="pl-c1">__LOG_INDICATOR__</span>(); kwargs<span class="pl-k">...</span>)
        cb <span class="pl-k">=</span> <span class="pl-c1">SavingCallback</span>(log_func, saved_values; saveat<span class="pl-k">=</span>t0<span class="pl-k">:</span>Δt<span class="pl-k">:</span>tf)
    <span class="pl-k">end</span>
    <span class="pl-c"><span class="pl-c">#</span> # sim</span>
    x0 <span class="pl-k">=</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>]
    tspan <span class="pl-k">=</span> (t0, tf)
    prob <span class="pl-k">=</span> <span class="pl-c1">ODEProblem</span>(
                      feedback_dynamics!, x0, tspan;
                      callback<span class="pl-k">=</span>cb,
                     )
    _ <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob)
    ts <span class="pl-k">=</span> saved_values<span class="pl-k">.</span>saveval <span class="pl-k">|&gt;</span> <span class="pl-c1">Map</span>(datum <span class="pl-k">-&gt;</span> datum[<span class="pl-c1">:t</span>]) <span class="pl-k">|&gt;</span> collect
    xs <span class="pl-k">=</span> saved_values<span class="pl-k">.</span>saveval <span class="pl-k">|&gt;</span> <span class="pl-c1">Map</span>(datum <span class="pl-k">-&gt;</span> datum[<span class="pl-c1">:x</span>]) <span class="pl-k">|&gt;</span> collect
    us <span class="pl-k">=</span> saved_values<span class="pl-k">.</span>saveval <span class="pl-k">|&gt;</span> <span class="pl-c1">Map</span>(datum <span class="pl-k">-&gt;</span> datum[<span class="pl-c1">:u</span>]) <span class="pl-k">|&gt;</span> collect
    times <span class="pl-k">=</span> saved_values<span class="pl-k">.</span>saveval <span class="pl-k">|&gt;</span> <span class="pl-c1">Map</span>(datum <span class="pl-k">-&gt;</span> datum[<span class="pl-c1">:time</span>]) <span class="pl-k">|&gt;</span> collect
    states <span class="pl-k">=</span> saved_values<span class="pl-k">.</span>saveval <span class="pl-k">|&gt;</span> <span class="pl-c1">Map</span>(datum <span class="pl-k">-&gt;</span> datum[<span class="pl-c1">:linear</span>][<span class="pl-c1">:state</span>]) <span class="pl-k">|&gt;</span> collect
    inputs <span class="pl-k">=</span> saved_values<span class="pl-k">.</span>saveval <span class="pl-k">|&gt;</span> <span class="pl-c1">Map</span>(datum <span class="pl-k">-&gt;</span> datum[<span class="pl-c1">:linear</span>][<span class="pl-c1">:input</span>]) <span class="pl-k">|&gt;</span> collect
    as <span class="pl-k">=</span> saved_values<span class="pl-k">.</span>saveval <span class="pl-k">|&gt;</span> <span class="pl-c1">Map</span>(datum <span class="pl-k">-&gt;</span> datum[<span class="pl-c1">:a</span>]) <span class="pl-k">|&gt;</span> collect
    <span class="pl-c1">@test</span> ts <span class="pl-k">==</span> saved_values<span class="pl-k">.</span>t
    <span class="pl-c1">@test</span> ts <span class="pl-k">==</span> times
    <span class="pl-c1">@test</span> xs <span class="pl-k">==</span> states
    <span class="pl-c1">@test</span> us <span class="pl-k">==</span> inputs
    <span class="pl-c1">@test</span> as <span class="pl-k">==</span> <span class="pl-c1">ones</span>(<span class="pl-c1">length</span>(ts))
    p_x <span class="pl-k">=</span> <span class="pl-c1">plot</span>(ts, <span class="pl-c1">hcat</span>(xs<span class="pl-k">...</span>)<span class="pl-k">'</span>)
    p_u <span class="pl-k">=</span> <span class="pl-c1">plot</span>(ts, <span class="pl-c1">hcat</span>(us<span class="pl-k">...</span>)<span class="pl-k">'</span>)
    dir_log <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>figures<span class="pl-pds">"</span></span>
    <span class="pl-c1">mkpath</span>(dir_log)
    <span class="pl-c1">savefig</span>(p_x, <span class="pl-c1">joinpath</span>(dir_log, <span class="pl-s"><span class="pl-pds">"</span>state.png<span class="pl-pds">"</span></span>))
    <span class="pl-c1">savefig</span>(p_u, <span class="pl-c1">joinpath</span>(dir_log, <span class="pl-s"><span class="pl-pds">"</span>input.png<span class="pl-pds">"</span></span>))
<span class="pl-k">end</span></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./figures/state.png"><img src="./figures/state.png" alt="ex_screenshot" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="./figures/input.png"><img src="./figures/input.png" alt="ex_screenshot" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-main-macros" class="anchor" aria-hidden="true" href="#main-macros"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Main macros</h1>
<h2 dir="auto"><a id="user-content-loggable" class="anchor" aria-hidden="true" href="#loggable"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>@Loggable</code></h2>
<p dir="auto"><code>@Loggable</code> is a macro that makes an ODE function <em>loggable</em>.</p>
<h3 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@Loggable function dynamics!(dx, x, p, t)
    dx .= -x
end"><pre><span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">dynamics!</span>(dx, x, p, t)
    dx <span class="pl-k">.=</span> <span class="pl-k">-</span>x
<span class="pl-k">end</span></pre></div>
<h3 dir="auto"><a id="user-content-mechanism" class="anchor" aria-hidden="true" href="#mechanism"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Mechanism</h3>
<p dir="auto"><code>@Loggable</code> generates additional method for the generic function of the annotated function definition.
The additional method receives <code>__log__indicator__::__LOG_INDICATOR__</code> as the last argument (other arguments are the same as the original function definition).</p>
<h3 dir="auto"><a id="user-content-notice" class="anchor" aria-hidden="true" href="#notice"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Notice</h3>
<ul dir="auto">
<li>This macro is supposed to be used in front of "function definition". For example,</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@Loggable function dynamics!(dx, x, p, t)
    dx .= -x
end"><pre><span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">dynamics!</span>(dx, x, p, t)
    dx <span class="pl-k">.=</span> <span class="pl-k">-</span>x
<span class="pl-k">end</span></pre></div>
<p dir="auto">is good.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@Loggable dynamics! = (dx, x, p, t) -&gt; dx .= -x"><pre><span class="pl-c1">@Loggable</span> dynamics! <span class="pl-k">=</span> (dx, x, p, t) <span class="pl-k">-&gt;</span> dx <span class="pl-k">.=</span> <span class="pl-k">-</span>x</pre></div>
<p dir="auto">may not work properly.</p>
<h2 dir="auto"><a id="user-content-log" class="anchor" aria-hidden="true" href="#log"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>@log</code></h2>
<p dir="auto">This macro logs the annotated variable, and also executes the followed expression when <em>both solving DEProblem and logging data</em>.</p>
<h3 dir="auto"><a id="user-content-example-1" class="anchor" aria-hidden="true" href="#example-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@Loggable function dynamics!(dx, x, p, t)
    @log state = x
    @log p  # the same as `@log p = p`
    dx .= -x
end"><pre><span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">dynamics!</span>(dx, x, p, t)
    <span class="pl-c1">@log</span> state <span class="pl-k">=</span> x
    <span class="pl-c1">@log</span> p  <span class="pl-c"><span class="pl-c">#</span> the same as `@log p = p`</span>
    dx <span class="pl-k">.=</span> <span class="pl-k">-</span>x
<span class="pl-k">end</span></pre></div>
<h2 dir="auto"><a id="user-content-onlylog" class="anchor" aria-hidden="true" href="#onlylog"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>@onlylog</code></h2>
<p dir="auto">This macro logs the annotated variable, and also executes the followed expression <em>only when logging data</em>.</p>
<h3 dir="auto"><a id="user-content-example-2" class="anchor" aria-hidden="true" href="#example-2"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@Loggable function dynamics!(dx, x, p, t)
    @log u = x
    @onlylog input = u   # `input` is not visible in this function when solving DEProblem.
    dx .= -u
end"><pre><span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">dynamics!</span>(dx, x, p, t)
    <span class="pl-c1">@log</span> u <span class="pl-k">=</span> x
    <span class="pl-c1">@onlylog</span> input <span class="pl-k">=</span> u   <span class="pl-c"><span class="pl-c">#</span> `input` is not visible in this function when solving DEProblem.</span>
    dx <span class="pl-k">.=</span> <span class="pl-k">-</span>u
<span class="pl-k">end</span></pre></div>
<h2 dir="auto"><a id="user-content-nested_log" class="anchor" aria-hidden="true" href="#nested_log"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>@nested_log</code></h2>
<p dir="auto">This macro logs (possibly) multiple data in a nested sense.</p>
<h3 dir="auto"><a id="user-content-example-3" class="anchor" aria-hidden="true" href="#example-3"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h3>
<ol dir="auto">
<li>nested log with specified name</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@Loggable function dynamics!(dx, x, p, t)
    @log state = x  # __LOGGER__.state = x
    dx .= -x
end

@Loggable function feedback_dynamics!(dx, x, p, t)
    @log time = t  # __LOGGER__.time = t
    @nested_log :linear dynamics!(dx, x, p, t)  # __LOGGER__.linear = (; state = x)
end"><pre><span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">dynamics!</span>(dx, x, p, t)
    <span class="pl-c1">@log</span> state <span class="pl-k">=</span> x  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.state = x</span>
    dx <span class="pl-k">.=</span> <span class="pl-k">-</span>x
<span class="pl-k">end</span>

<span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">feedback_dynamics!</span>(dx, x, p, t)
    <span class="pl-c1">@log</span> time <span class="pl-k">=</span> t  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.time = t</span>
    <span class="pl-c1">@nested_log</span> <span class="pl-c1">:linear</span> <span class="pl-c1">dynamics!</span>(dx, x, p, t)  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.linear = (; state = x)</span>
<span class="pl-k">end</span></pre></div>
<ol start="2" dir="auto">
<li>nested log with no name</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@Loggable function dynamics!(dx, x, p, t)
    @log state = x  # __LOGGER__.state = x
    dx .= -x
end

@Loggable function feedback_dynamics!(dx, x, p, t)
    @log time = t  # __LOGGER__.time = t
    @nested_log dynamics!(dx, x, p, t)  # __LOGGER__.state = x
end"><pre><span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">dynamics!</span>(dx, x, p, t)
    <span class="pl-c1">@log</span> state <span class="pl-k">=</span> x  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.state = x</span>
    dx <span class="pl-k">.=</span> <span class="pl-k">-</span>x
<span class="pl-k">end</span>

<span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">feedback_dynamics!</span>(dx, x, p, t)
    <span class="pl-c1">@log</span> time <span class="pl-k">=</span> t  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.time = t</span>
    <span class="pl-c1">@nested_log</span> <span class="pl-c1">dynamics!</span>(dx, x, p, t)  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.state = x</span>
<span class="pl-k">end</span></pre></div>
<ol start="3" dir="auto">
<li><code>@nested_log</code> with assignment</li>
</ol>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@Loggable function dynamics!(dx, x, p, t; u)
    @log state = x  # __LOGGER__.state = x
    @log input = u  # __LOGGER__.input = u
    dx .= u
end

@Loggable function control(x)
    @log a = 1  # hidden state; internally defined variable
    -a*x
end

@Loggable function feedback_dynamics!(dx, x, p, t)
    @log time = t  # __LOGGER__.time = t
    u = @nested_log control(x)  # __LOGGER__.a = 1
    @nested_log dynamics!(dx, x, p, t; u)  # __LOGGER__.state = x
end"><pre><span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">dynamics!</span>(dx, x, p, t; u)
    <span class="pl-c1">@log</span> state <span class="pl-k">=</span> x  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.state = x</span>
    <span class="pl-c1">@log</span> input <span class="pl-k">=</span> u  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.input = u</span>
    dx <span class="pl-k">.=</span> u
<span class="pl-k">end</span>

<span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">control</span>(x)
    <span class="pl-c1">@log</span> a <span class="pl-k">=</span> <span class="pl-c1">1</span>  <span class="pl-c"><span class="pl-c">#</span> hidden state; internally defined variable</span>
    <span class="pl-k">-</span>a<span class="pl-k">*</span>x
<span class="pl-k">end</span>

<span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">feedback_dynamics!</span>(dx, x, p, t)
    <span class="pl-c1">@log</span> time <span class="pl-k">=</span> t  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.time = t</span>
    u <span class="pl-k">=</span> <span class="pl-c1">@nested_log</span> <span class="pl-c1">control</span>(x)  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.a = 1</span>
    <span class="pl-c1">@nested_log</span> <span class="pl-c1">dynamics!</span>(dx, x, p, t; u)  <span class="pl-c"><span class="pl-c">#</span> __LOGGER__.state = x</span>
<span class="pl-k">end</span></pre></div>
<h2 dir="auto"><a id="user-content-nested_onlylog" class="anchor" aria-hidden="true" href="#nested_onlylog"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>@nested_onlylog</code></h2>
<p dir="auto">This macro logs (possibly) multiple data in a nested sense <strong>only when logging data</strong> (similar to <code>@onlylog</code>).</p>
<h1 dir="auto"><a id="user-content-notice-1" class="anchor" aria-hidden="true" href="#notice-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>NOTICE</h1>
<ul dir="auto">
<li><code>__LOGGER__</code> is a privileged name to contain variables annotated by logging macros. <strong>DO NOT USE THIS NAME IN USUAL CASE</strong>.</li>
<li>This package supports only <a href="https://diffeq.sciml.ai/stable/basics/problem/#In-place-vs-Out-of-Place-Function-Definition-Forms" rel="nofollow"><strong>in-place</strong> method</a> of DifferentialEquations.jl.</li>
</ul>
<h1 dir="auto"><a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Notes</h1>
<h2 dir="auto"><a id="user-content-background-of-this-package" class="anchor" aria-hidden="true" href="#background-of-this-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Background of this package</h2>
<ul dir="auto">
<li>This basic form of this macro is inspired by <a href="https://github.com/jonniedie/SimulationLogs.jl">SimulationLogs.jl</a>. But there are some differences. For example, <code>@log</code> in this package is based on <a href="https://diffeq.sciml.ai/stable/features/callback_library/#saving_callback" rel="nofollow">SavingCallback</a>, while <code>@log</code> in <a href="https://github.com/jonniedie/SimulationLogs.jl">SimulationLogs.jl</a> will save data in the sense of postprocessing.
There are two main advantages: this package can 1) log data without repeating the same code within differential equation (DE) functions, and 2) deal with stochastic parameter updates.
For more details, see <a href="https://discourse.julialang.org/t/differentialequations-jl-saving-data-without-redundant-calculation-of-control-inputs/62559/3" rel="nofollow">the original question</a> and <a href="https://discourse.julialang.org/t/make-a-variable-as-a-global-variable-within-a-function/63067/21" rel="nofollow">the idea of this package</a>.</li>
</ul>
<h2 dir="auto"><a id="user-content-feature-request-and-bug-report" class="anchor" aria-hidden="true" href="#feature-request-and-bug-report"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Feature request and bug report</h2>
<p dir="auto">Please feel free to request additional features and report bugs!</p>
</article></div>