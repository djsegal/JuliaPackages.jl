<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-structio" class="anchor" aria-hidden="true" href="#structio"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>StructIO</h1>
<p><a href="http://pkg.julialang.org/?pkg=StructIO" rel="nofollow"><img src="https://camo.githubusercontent.com/f8296fa8bdd022b59fae9d73a856454564bf41ad/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f537472756374494f5f302e362e737667" alt="StructIO" data-canonical-src="http://pkg.julialang.org/badges/StructIO_0.6.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=StructIO" rel="nofollow"><img src="https://camo.githubusercontent.com/76f0b4200d73bb058afc4c49325ec2484673b1b7/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f537472756374494f5f302e372e737667" alt="StructIO" data-canonical-src="http://pkg.julialang.org/badges/StructIO_0.7.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/Keno/StructIO.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7cee5fa7b9fc5c0ce5ea46a59b08e43b2dc9fe35/68747470733a2f2f7472617669732d63692e6f72672f4b656e6f2f537472756374494f2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Keno/StructIO.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/Keno/StructIO.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/6315f2192a3df43106af3ebe5eb2b0b255743892/687474703a2f2f636f6465636f762e696f2f6769746875622f4b656e6f2f537472756374494f2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Coverage" data-canonical-src="http://codecov.io/github/Keno/StructIO.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Generates IO methods (<code>pack</code>, <code>unpack</code>) from structure definitions.  Also defines <code>packed_sizeof</code> to give the on-disk size of a packed structure, which is smaller than <code>sizeof</code> would give, if the struct is marked as <code>align_packed</code>.</p>
<h1><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example usage</h1>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> StructIO

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@io</span> <span class="pl-k">struct</span> TwoUInt64s
           x<span class="pl-k">::</span><span class="pl-c1">UInt64</span>
           y<span class="pl-k">::</span><span class="pl-c1">UInt64</span>
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> buf <span class="pl-k">=</span> <span class="pl-c1">IOBuffer</span>(<span class="pl-c1">collect</span>(<span class="pl-c1">UInt8</span>(<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">UInt8</span>(<span class="pl-c1">16</span>))); 

julia<span class="pl-k">&gt;</span> <span class="pl-c1">seekstart</span>(buf); <span class="pl-c1">unpack</span>(buf, TwoUInt64s) <span class="pl-c"><span class="pl-c">#</span> Default endianness depends on machine</span>
<span class="pl-c1">TwoUInt64s</span>(<span class="pl-c1">0x0807060504030201</span>, <span class="pl-c1">0x100f0e0d0c0b0a09</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">seekstart</span>(buf); <span class="pl-c1">unpack</span>(buf, TwoUInt64s, <span class="pl-c1">:BigEndian</span>)
<span class="pl-c1">TwoUInt64s</span>(<span class="pl-c1">0x0102030405060708</span>, <span class="pl-c1">0x090a0b0c0d0e0f10</span>)
</pre></div>
</article></div>