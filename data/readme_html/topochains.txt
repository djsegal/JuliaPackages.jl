<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-topochainsjl" class="anchor" aria-hidden="true" href="#topochainsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TopoChains.jl</h1>
<p align="center" dir="auto">
<a target="_blank" rel="noopener noreferrer" href="/docs/src/assets/logo.png"><img width="300px" src="/docs/src/assets/logo.png" style="max-width: 100%;"></a>
</p>
<p dir="auto"><a href="https://irhum.github.io/TopoChains.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">TopoChains.jl provides a new data structure, a <code>TopoChain</code>, which picks up where Flux.jl's <code>Chain</code> left off. Unlike a <code>Chain</code>, which is designed for a sequential single-input single-output use case, a <code>TopoChain</code> can handle multi-input multi-output compositions of layers and functions. We achieve this by seperately specifying the <em>topology</em> (that is, the structure) of a model from the actual <em>layers</em> of a model. Check the <a href="https://irhum.github.io/TopoChains.jl/dev/" rel="nofollow">docs</a> for more!</p>
<p dir="auto">The <code>TopoChain</code> was originally designed as the <code>Stack</code>, as part of <a href="https://github.com/chengchingwen/Transformers.jl">Transformers.jl</a> by Peter Cheng, and is repackaged here into a standalone package for general purpose use.</p>
<h3 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h3>
<p dir="auto">Suppose you want to define the following model:</p>
<p align="center" dir="auto">
<a target="_blank" rel="noopener noreferrer" href="/docs/src/assets/example2.png"><img width="275px" src="/docs/src/assets/example2.png" style="max-width: 100%;"></a>
</p>
<p dir="auto">First, we define the structure of the model:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="topo = @functopo x:x =&gt; a:x =&gt; b:(a, b) =&gt; c =&gt; o"><pre>topo <span class="pl-k">=</span> <span class="pl-c1">@functopo</span> x<span class="pl-k">:</span>x <span class="pl-k">=&gt;</span> a<span class="pl-k">:</span>x <span class="pl-k">=&gt;</span> b<span class="pl-k">:</span>(a, b) <span class="pl-k">=&gt;</span> c <span class="pl-k">=&gt;</span> o</pre></div>
<p dir="auto">Then we define the model itself:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="model = TopoChain(topo,
            Dense(32, 64),
            Dense(32, 64),
            (x, y) -&gt; x .* y, 
            Dropout(0.1))"><pre>model <span class="pl-k">=</span> <span class="pl-c1">TopoChain</span>(topo,
            <span class="pl-c1">Dense</span>(<span class="pl-c1">32</span>, <span class="pl-c1">64</span>),
            <span class="pl-c1">Dense</span>(<span class="pl-c1">32</span>, <span class="pl-c1">64</span>),
            (x, y) <span class="pl-k">-&gt;</span> x <span class="pl-k">.*</span> y, 
            <span class="pl-c1">Dropout</span>(<span class="pl-c1">0.1</span>))</pre></div>
<p dir="auto">And that's it, you're done! You can see that the model both contains your layers, as well as information on how to run the layers:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="model
# TopoChain(Dense(32, 64), Dense(32, 64), #7, Dropout(0.1)) representing the following function composition: 
# function(x)
#     a = Dense(32, 64)(x)
#     b = Dense(32, 64)(x)
#     c = #7(a, b)
#     o = Dropout(0.1)(c)
#     o
# end"><pre>model
<span class="pl-c"><span class="pl-c">#</span> TopoChain(Dense(32, 64), Dense(32, 64), #7, Dropout(0.1)) representing the following function composition: </span>
<span class="pl-c"><span class="pl-c">#</span> function(x)</span>
<span class="pl-c"><span class="pl-c">#</span>     a = Dense(32, 64)(x)</span>
<span class="pl-c"><span class="pl-c">#</span>     b = Dense(32, 64)(x)</span>
<span class="pl-c"><span class="pl-c">#</span>     c = #7(a, b)</span>
<span class="pl-c"><span class="pl-c">#</span>     o = Dropout(0.1)(c)</span>
<span class="pl-c"><span class="pl-c">#</span>     o</span>
<span class="pl-c"><span class="pl-c">#</span> end</span></pre></div>
<p dir="auto"><code>TopoChain</code> is a drop-in replacement for a <code>Chain</code>, which means all the features of <code>Chain</code>, such as parameter collection, indexing, layer slicing, etc. will work as intended.</p>
<h3 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h3>
<p dir="auto">You can get started by installing TopoChains.jl with the following command:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="] add TopoChains"><pre class="notranslate"><code>] add TopoChains
</code></pre></div>
</article></div>