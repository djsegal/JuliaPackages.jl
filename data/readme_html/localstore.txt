<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-localstorejl" class="anchor" aria-hidden="true" href="#localstorejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>LocalStore.jl</h1>
<p>This package provides a simple interface for storing and retrieving Julia objects locally.</p>
<p>Example:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> LocalStore

<span class="pl-c"><span class="pl-c">#</span> Define an item type. This should contain enough information</span>
<span class="pl-c"><span class="pl-c">#</span> to be able to reconstruct the desired object.</span>
<span class="pl-k">struct</span> A
    x<span class="pl-k">::</span><span class="pl-c1">Int</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Since store location is based on hash, it is recommended to</span>
<span class="pl-c"><span class="pl-c">#</span> define a hash function for custom types.</span>
Base<span class="pl-k">.</span><span class="pl-en">hash</span>(a<span class="pl-k">::</span><span class="pl-c1">A</span>, h<span class="pl-k">::</span><span class="pl-c1">UInt</span>) <span class="pl-k">=</span> <span class="pl-c1">hash</span>(<span class="pl-c1">:A</span>, <span class="pl-c1">hash</span>(a<span class="pl-k">.</span>x, h))

<span class="pl-c"><span class="pl-c">#</span> Define how the item is stored on disk. The `path` is a dir, handled</span>
<span class="pl-c"><span class="pl-c">#</span> automatically by the LocalStore package.</span>
LocalStore<span class="pl-k">.</span><span class="pl-en">save</span>(a<span class="pl-k">::</span><span class="pl-c1">A</span>, path<span class="pl-k">::</span><span class="pl-c1">String</span>) <span class="pl-k">=</span> <span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$path</span>/file.txt<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> f
    <span class="pl-c"><span class="pl-c">#</span> some difficult computation you only want to do once</span>
    x2 <span class="pl-k">=</span> a<span class="pl-k">.</span>x<span class="pl-k">^</span><span class="pl-c1">2</span>
    <span class="pl-c"><span class="pl-c">#</span> maybe download some remote files</span>

    <span class="pl-c"><span class="pl-c">#</span> now save to disk the results</span>
    <span class="pl-c1">write</span>(f, <span class="pl-c1">string</span>(x2))
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Define how the item is read from disk.</span>
LocalStore<span class="pl-k">.</span><span class="pl-en">load</span>(a<span class="pl-k">::</span><span class="pl-c1">A</span>, path<span class="pl-k">::</span><span class="pl-c1">String</span>) <span class="pl-k">=</span> <span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$path</span>/file.txt<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>r<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> f
    <span class="pl-c1">parse</span>(Int, <span class="pl-c1">readline</span>(f))
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Automatically checks if the requested object is stored. If not,</span>
<span class="pl-c"><span class="pl-c">#</span> it creates a local directory and saves it there and loads it.</span>
<span class="pl-c"><span class="pl-c">#</span> Next time `load` is called, the stored object is returned.</span>
a <span class="pl-k">=</span> LocalStore<span class="pl-k">.</span><span class="pl-c1">load</span>(<span class="pl-c1">A</span>(<span class="pl-c1">5</span>))</pre></div>
</article></div>