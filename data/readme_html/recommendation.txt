<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-recommendationjl" class="anchor" aria-hidden="true" href="#recommendationjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Recommendation.jl</h1>
<p><a href="https://travis-ci.org/takuti/Recommendation.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/928fe06748369dfbb7f43c184c41f41603d6d481/68747470733a2f2f7472617669732d63692e6f72672f74616b7574692f5265636f6d6d656e646174696f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/takuti/Recommendation.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/takuti/Recommendation.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/0857f113ee3d0992f941b9c40f9851058fc78285/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f74616b7574692f5265636f6d6d656e646174696f6e2e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/takuti/Recommendation.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://takuti.github.io/Recommendation.jl/latest/" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p><strong>Recommendation.jl</strong> is a minimal, customizable Julia package for building recommender systems. Pre-built basic functionalities include:</p>
<ul>
<li>Non-personalized baselines that give unsophisticated, rule-based recommendation.</li>
<li>Collaborative filtering on either explicit or implicit user-item matrix.</li>
<li>Content-based filtering by using the TF-IDF weighting technique.</li>
<li>Evaluation based on a variety of rating and ranking metrics, with easy-to-use N-fold cross validation executor.</li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Recommendation<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>This package contains <code>DataAccessor</code> and several fundamental recommendation techniques (e.g., non-personalized <code>MostPopular</code> recommender, <code>CF</code> and <code>MF</code>), and evaluation metrics such as <code>Recall</code>:</p>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/images/overview.png"><img src="docs/src/assets/images/overview.png" width="400px" alt="overview" style="max-width:100%;"></a></p>
<p>All of them can be accessible by loading the package as follows:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Recommendation</pre></div>
<p>First of all, you need to create a data accessor from a matrix:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> SparseArrays

data <span class="pl-k">=</span> <span class="pl-c1">DataAccessor</span>(<span class="pl-c1">sparse</span>([<span class="pl-c1">1</span> <span class="pl-c1">0</span> <span class="pl-c1">0</span>; <span class="pl-c1">4</span> <span class="pl-c1">5</span> <span class="pl-c1">0</span>]))</pre></div>
<p>or set of events:</p>
<div class="highlight highlight-source-julia"><pre>n_user, n_item <span class="pl-k">=</span> <span class="pl-c1">5</span>, <span class="pl-c1">10</span>

events <span class="pl-k">=</span> [<span class="pl-c1">Event</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>), <span class="pl-c1">Event</span>(<span class="pl-c1">3</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>), <span class="pl-c1">Event</span>(<span class="pl-c1">2</span>, <span class="pl-c1">6</span>, <span class="pl-c1">4</span>)]

data <span class="pl-k">=</span> <span class="pl-c1">DataAccessor</span>(events, n_user, n_item)</pre></div>
<p>where <code>Event()</code> is a composite type which represents a user-item interaction:</p>
<div class="highlight highlight-source-julia"><pre>type Event
    user<span class="pl-k">::</span><span class="pl-c1">Int</span>
    item<span class="pl-k">::</span><span class="pl-c1">Int</span>
    value<span class="pl-k">::</span><span class="pl-c1">Float64</span>
<span class="pl-k">end</span></pre></div>
<p>Next, you can pass the data accessor to an arbitrary recommender as:</p>
<div class="highlight highlight-source-julia"><pre>recommender <span class="pl-k">=</span> <span class="pl-c1">MostPopular</span>(data)</pre></div>
<p>and building a recommendation engine should be easy:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">build!</span>(recommender)</pre></div>
<p>Personalized recommenders sometimes require us to specify the hyperparameters:</p>
<div class="highlight highlight-source-julia"><pre>help?<span class="pl-k">&gt;</span> Recommendation<span class="pl-k">.</span>MF
  <span class="pl-c1">MF</span>(
      data<span class="pl-k">::</span><span class="pl-c1">DataAccessor</span>,
      k<span class="pl-k">::</span><span class="pl-c1">Int</span>
  )</pre></div>
<div class="highlight highlight-source-julia"><pre>recommender <span class="pl-k">=</span> <span class="pl-c1">MF</span>(data, <span class="pl-c1">2</span>)
<span class="pl-c1">build!</span>(recommender, learning_rate<span class="pl-k">=</span><span class="pl-c1">15e-4</span>, max_iter<span class="pl-k">=</span><span class="pl-c1">100</span>)</pre></div>
<p>Once a recommendation engine has been built successfully, top-<code>2</code> recommendation for a user <code>4</code> is performed as follows:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> for user#4, pick top-2 from all items</span>
<span class="pl-c1">recommend</span>(recommender, <span class="pl-c1">4</span>, <span class="pl-c1">2</span>, <span class="pl-c1">collect</span>(<span class="pl-c1">1</span><span class="pl-k">:</span>n_item))</pre></div>
<p>See <a href="https://takuti.github.io/Recommendation.jl/latest/" rel="nofollow"><strong>documentation</strong></a> for the details.</p>
</article></div>