<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-wasmerjl" class="anchor" aria-hidden="true" href="#wasmerjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Wasmer.jl</h1>
<p dir="auto">A Julia wrapper around the <a href="https://wasmer.io" rel="nofollow">wasmer runtime</a> to run Web Assembly blobs and libraries from Julia.</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Wasmer

julia&gt; engine = WasmEngine();

julia&gt; store = WasmStore(engine);

julia&gt; code = wat&quot;&quot;&quot;
       (module
           (func $add (param $lhs i32) (param $rhs i32) (result i32)
               local.get $lhs
               local.get $rhs
               i32.add)
           (export &quot;add&quot; (func $add))
       )
       &quot;&quot;&quot;;

julia&gt; modu = WasmModule(store, code);

julia&gt; instance = WasmInstance(store, modu);

julia&gt; add = exports(instance).add
Wasmer.WasmExport(Ptr{Wasmer.LibWasmer.wasm_exporttype_t} @0x000000000378f2f0, WasmExtern(WASM_EXTERN_FUNC), WasmInstance(), &quot;add&quot;)

julia&gt; res = add(Int32(1), Int32(2))
3

julia&gt; res == 3
true"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Wasmer

julia<span class="pl-k">&gt;</span> engine <span class="pl-k">=</span> <span class="pl-c1">WasmEngine</span>();

julia<span class="pl-k">&gt;</span> store <span class="pl-k">=</span> <span class="pl-c1">WasmStore</span>(engine);

julia<span class="pl-k">&gt;</span> code <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">wat</span>"""</span></span>
<span class="pl-s">       (module</span>
<span class="pl-s">           (func $add (param $lhs i32) (param $rhs i32) (result i32)</span>
<span class="pl-s">               local.get $lhs</span>
<span class="pl-s">               local.get $rhs</span>
<span class="pl-s">               i32.add)</span>
<span class="pl-s">           (export "add" (func $add))</span>
<span class="pl-s">       )</span>
<span class="pl-s">       <span class="pl-pds">"""</span></span>;

julia<span class="pl-k">&gt;</span> modu <span class="pl-k">=</span> <span class="pl-c1">WasmModule</span>(store, code);

julia<span class="pl-k">&gt;</span> instance <span class="pl-k">=</span> <span class="pl-c1">WasmInstance</span>(store, modu);

julia<span class="pl-k">&gt;</span> add <span class="pl-k">=</span> <span class="pl-c1">exports</span>(instance)<span class="pl-k">.</span>add
Wasmer<span class="pl-k">.</span><span class="pl-c1">WasmExport</span>(Ptr{Wasmer<span class="pl-k">.</span>LibWasmer<span class="pl-k">.</span>wasm_exporttype_t} @<span class="pl-c1">0x000000000378f2f0</span>, <span class="pl-c1">WasmExtern</span>(WASM_EXTERN_FUNC), <span class="pl-c1">WasmInstance</span>(), <span class="pl-s"><span class="pl-pds">"</span>add<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> res <span class="pl-k">=</span> <span class="pl-c1">add</span>(<span class="pl-c1">Int32</span>(<span class="pl-c1">1</span>), <span class="pl-c1">Int32</span>(<span class="pl-c1">2</span>))
<span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> res <span class="pl-k">==</span> <span class="pl-c1">3</span>
<span class="pl-c1">true</span></pre></div>
</article></div>