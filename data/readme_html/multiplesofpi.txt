<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-multiplesofpi" class="anchor" aria-hidden="true" href="#multiplesofpi"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MultiplesOfPi</h1>
<p dir="auto"><a href="https://github.com/jishnub/MultiplesOfPi.jl/actions/workflows/ci.yml"><img src="https://github.com/jishnub/MultiplesOfPi.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/jishnub/MultiplesOfPi.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/81bc6820d7438ac7e53a7efecec724b6cc1ec5370868b24d7f34d58186587e47/68747470733a2f2f636f6465636f762e696f2f67682f6a6973686e75622f4d756c7469706c65734f6650692e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/jishnub/MultiplesOfPi.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/jishnub/MultiplesOfPi.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/5db5bca178a9ee121b026db05453d7f4330d3035541e635ca8982ec6fc282e94/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6a6973686e75622f4d756c7469706c65734f6650692e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/jishnub/MultiplesOfPi.jl/badge.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://jishnub.github.io/MultiplesOfPi.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="docs:stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://jishnub.github.io/MultiplesOfPi.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="docs:dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h1>
<p dir="auto">This package exports the type <code>PiExpTimes</code> that satisfies <code>PiExpTimes(x, n) = x*π^n</code>. It also provides the constant <code>Pi</code> for convenience, defined as <code>PiExpTimes(1, 1)</code>, that behaves like <code>π</code> except it produces results with higher accuracy in certain trigonometric and algebraic contexts. In most scenarios the numbers <code>Pi</code> and <code>π</code> are interchangable. Expressing mathematical relations in terms of <code>Pi</code> instead of the more cumbersome <code>PiExpTimes</code> is usually cleaner, and is recommended unless it's specifically necessary to do otherwise.</p>
<h2 dir="auto"><a id="user-content-rationale" class="anchor" aria-hidden="true" href="#rationale"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Rationale</h2>
<p dir="auto">The number <code>π</code> is represented as an <code>Irrational</code> type in julia, and may be computed to an arbitrary degree of precision. In normal course of events it is converted to a float when it encounters another number, for example <code>2π</code> is computed by converting both <code>2</code> and <code>π</code> to floats and subsequently carrying out a floating-point multiplication. This is lossy, as both <code>2</code> and <code>π</code> may be represented with arbitrary precision. This package delays the conversion of the <code>π</code> to a float, treating it as a common factor in algebraic simplifications. This limits floating-point inaccuracies, especially if the terms multiplying <code>π</code> are exactly representable in binary. As an added advantage, it uses <code>sinpi</code> and <code>cospi</code> wherever possible to avoid having to convert <code>π</code> to a float altogether.</p>
<h1 dir="auto"><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h1>
<h2 dir="auto"><a id="user-content-arithmetic" class="anchor" aria-hidden="true" href="#arithmetic"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Arithmetic</h2>
<p dir="auto">Delaying the conversion of <code>π</code> to a float results in precise mathematical expressions such as</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; (1//3)π + (4//3)π == (5//3)π
false

julia&gt; (1//3)Pi + (4//3)Pi == (5//3)Pi
true

julia&gt; float(sqrt(pi)^2) == float(pi)
false

julia&gt; float(sqrt(Pi)^2) == float(Pi)
true"><pre>julia<span class="pl-k">&gt;</span> (<span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span>)π <span class="pl-k">+</span> (<span class="pl-c1">4</span><span class="pl-k">//</span><span class="pl-c1">3</span>)π <span class="pl-k">==</span> (<span class="pl-c1">5</span><span class="pl-k">//</span><span class="pl-c1">3</span>)π
<span class="pl-c1">false</span>

julia<span class="pl-k">&gt;</span> (<span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span>)Pi <span class="pl-k">+</span> (<span class="pl-c1">4</span><span class="pl-k">//</span><span class="pl-c1">3</span>)Pi <span class="pl-k">==</span> (<span class="pl-c1">5</span><span class="pl-k">//</span><span class="pl-c1">3</span>)Pi
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">float</span>(<span class="pl-c1">sqrt</span>(<span class="pl-c1">pi</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>) <span class="pl-k">==</span> <span class="pl-c1">float</span>(<span class="pl-c1">pi</span>)
<span class="pl-c1">false</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">float</span>(<span class="pl-c1">sqrt</span>(Pi)<span class="pl-k">^</span><span class="pl-c1">2</span>) <span class="pl-k">==</span> <span class="pl-c1">float</span>(Pi)
<span class="pl-c1">true</span></pre></div>
<p dir="auto">We may also simplify algebraic expressions involving powers of <code>Pi</code> as</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; (2Pi^2//3) // (4Pi//5)
(5//6)Pi

julia&gt; Pi^-2 / 4Pi^3
0.25*Pi^-5"><pre>julia<span class="pl-k">&gt;</span> (<span class="pl-c1">2</span>Pi<span class="pl-k">^</span><span class="pl-c1">2</span><span class="pl-k">//</span><span class="pl-c1">3</span>) <span class="pl-k">//</span> (<span class="pl-c1">4</span>Pi<span class="pl-k">//</span><span class="pl-c1">5</span>)
(<span class="pl-c1">5</span><span class="pl-k">//</span><span class="pl-c1">6</span>)Pi

julia<span class="pl-k">&gt;</span> Pi<span class="pl-k">^-</span><span class="pl-c1">2</span> <span class="pl-k">/</span> <span class="pl-c1">4</span>Pi<span class="pl-k">^</span><span class="pl-c1">3</span>
<span class="pl-c1">0.25</span><span class="pl-k">*</span>Pi<span class="pl-k">^-</span><span class="pl-c1">5</span></pre></div>
<p dir="auto">Expressions involving <code>Pi</code> are automatically promoted to <code>Complex</code> as necessary, eg.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; (1+im)Pi^3 / 2Pi^2
0.5*Pi + 0.5*Pi*im

julia&gt; (1+im)Pi^3 / 2Pi^2 * 2/Pi
Pi^0 + Pi^0*im"><pre>julia<span class="pl-k">&gt;</span> (<span class="pl-c1">1</span><span class="pl-k">+</span>im)Pi<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">/</span> <span class="pl-c1">2</span>Pi<span class="pl-k">^</span><span class="pl-c1">2</span>
<span class="pl-c1">0.5</span><span class="pl-k">*</span>Pi <span class="pl-k">+</span> <span class="pl-c1">0.5</span><span class="pl-k">*</span>Pi<span class="pl-k">*</span>im

julia<span class="pl-k">&gt;</span> (<span class="pl-c1">1</span><span class="pl-k">+</span>im)Pi<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">/</span> <span class="pl-c1">2</span>Pi<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">2</span><span class="pl-k">/</span>Pi
Pi<span class="pl-k">^</span><span class="pl-c1">0</span> <span class="pl-k">+</span> Pi<span class="pl-k">^</span><span class="pl-c1">0</span><span class="pl-k">*</span>im</pre></div>
<h2 dir="auto"><a id="user-content-trigonometric-functions" class="anchor" aria-hidden="true" href="#trigonometric-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Trigonometric functions</h2>
<p dir="auto">The type <code>PiTimes</code> uses <code>sinpi</code> and <code>cospi</code> under the hood when it is used as an argument to <code>sin</code> and <code>cos</code>. This results in exact results in several contexts where the inaccuracies arise from floating-point conversions.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; cos(3π/2)
-1.8369701987210297e-16

julia&gt; cos(3Pi/2)
0.0

julia&gt; sin(-π)
-1.2246467991473532e-16

julia&gt; sin(-Pi)
-0.0

julia&gt; tan(π/2)
1.633123935319537e16

julia&gt; tan(Pi/2)
Inf"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">cos</span>(<span class="pl-c1">3</span>π<span class="pl-k">/</span><span class="pl-c1">2</span>)
<span class="pl-k">-</span><span class="pl-c1">1.8369701987210297e-16</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">cos</span>(<span class="pl-c1">3</span>Pi<span class="pl-k">/</span><span class="pl-c1">2</span>)
<span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sin</span>(<span class="pl-k">-</span>π)
<span class="pl-k">-</span><span class="pl-c1">1.2246467991473532e-16</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sin</span>(<span class="pl-k">-</span>Pi)
<span class="pl-k">-</span><span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">tan</span>(π<span class="pl-k">/</span><span class="pl-c1">2</span>)
<span class="pl-c1">1.633123935319537e16</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">tan</span>(Pi<span class="pl-k">/</span><span class="pl-c1">2</span>)
<span class="pl-c1">Inf</span></pre></div>
<p dir="auto">We may compute complex exponential exactly:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; exp(im*π/2)
6.123233995736766e-17 + 1.0im

julia&gt; exp(im*Pi/2)
0.0 + 1.0im

# Euler's identity : exp(iπ) + 1 == 0
julia&gt; exp(im*π) + 1
0.0 + 1.2246467991473532e-16im

julia&gt; exp(im*Pi) + 1
0.0 + 0.0im"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">exp</span>(im<span class="pl-k">*</span>π<span class="pl-k">/</span><span class="pl-c1">2</span>)
<span class="pl-c1">6.123233995736766e-17</span> <span class="pl-k">+</span> <span class="pl-c1">1.0im</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">exp</span>(im<span class="pl-k">*</span>Pi<span class="pl-k">/</span><span class="pl-c1">2</span>)
<span class="pl-c1">0.0</span> <span class="pl-k">+</span> <span class="pl-c1">1.0im</span>

<span class="pl-c"><span class="pl-c">#</span> Euler's identity : exp(iπ) + 1 == 0</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">exp</span>(im<span class="pl-k">*</span>π) <span class="pl-k">+</span> <span class="pl-c1">1</span>
<span class="pl-c1">0.0</span> <span class="pl-k">+</span> <span class="pl-c1">1.2246467991473532e-16im</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">exp</span>(im<span class="pl-k">*</span>Pi) <span class="pl-k">+</span> <span class="pl-c1">1</span>
<span class="pl-c1">0.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span></pre></div>
<p dir="auto">Hyperbolic functions work as expected:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# cosh(ix) = cos(x)
# Should be exactly zero for x = π/2
julia&gt; cosh(im*π/2)
6.123233995736766e-17 + 0.0im

julia&gt; cosh(im*Pi/2)
0.0 + 0.0im"><pre><span class="pl-c"><span class="pl-c">#</span> cosh(ix) = cos(x)</span>
<span class="pl-c"><span class="pl-c">#</span> Should be exactly zero for x = π/2</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">cosh</span>(im<span class="pl-k">*</span>π<span class="pl-k">/</span><span class="pl-c1">2</span>)
<span class="pl-c1">6.123233995736766e-17</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">cosh</span>(im<span class="pl-k">*</span>Pi<span class="pl-k">/</span><span class="pl-c1">2</span>)
<span class="pl-c1">0.0</span> <span class="pl-k">+</span> <span class="pl-c1">0.0im</span></pre></div>
<h3 dir="auto"><a id="user-content-interactions-with-π" class="anchor" aria-hidden="true" href="#interactions-with-π"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Interactions with π</h3>
<p dir="auto">The irrational number <code>π</code> is usually aggressively converted to <code>Pi</code>, eg:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; π * Pi
Pi^2"><pre>julia<span class="pl-k">&gt;</span> π <span class="pl-k">*</span> Pi
Pi<span class="pl-k">^</span><span class="pl-c1">2</span></pre></div>
<p dir="auto">This ensures that subsequent calculation would not get promoted to a floating-point type. However if this behavior is not desired then one may specify the type explicitly while constructing the object as</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; PiExpTimes{Irrational{:π}}(π)
π*Pi^0"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">PiExpTimes</span><span class="pl-c1">{Irrational{:π}}</span>(π)
π<span class="pl-k">*</span>Pi<span class="pl-k">^</span><span class="pl-c1">0</span></pre></div>
<h3 dir="auto"><a id="user-content-floating-point-promotion" class="anchor" aria-hidden="true" href="#floating-point-promotion"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Floating-point promotion</h3>
<p dir="auto">Addition and subtraction involving mixed exponents of <code>Pi</code> will involve floating-point conversions, and the resulting expression will have the minimum exponent out of the terms being summed.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Pi + 3Pi
4Pi

julia&gt; Pi + 3Pi^2
10.42477796076938*Pi"><pre>julia<span class="pl-k">&gt;</span> Pi <span class="pl-k">+</span> <span class="pl-c1">3</span>Pi
<span class="pl-c1">4</span>Pi

julia<span class="pl-k">&gt;</span> Pi <span class="pl-k">+</span> <span class="pl-c1">3</span>Pi<span class="pl-k">^</span><span class="pl-c1">2</span>
<span class="pl-c1">10.42477796076938</span><span class="pl-k">*</span>Pi</pre></div>
<p dir="auto">This fits with the intuition of the expression being factorized as <code>Pi + 3Pi^2 == Pi*(1 + 3Pi)</code>.</p>
<p dir="auto">Note that <code>π</code> is promoted to <code>Pi</code> in such operations, so we obtain</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Pi + π
2Pi"><pre>julia<span class="pl-k">&gt;</span> Pi <span class="pl-k">+</span> π
<span class="pl-c1">2</span>Pi</pre></div>
<p dir="auto">Note that addition and subtraction are not type-stable at present by design.</p>
<h1 dir="auto"><a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Performance</h1>
<p dir="auto">In general using <code>Pi</code> instead of <code>pi</code> will be less performant, as <code>pi</code> is aggressively promoted to a floating-point value in most calculations. The use of <code>Pi</code> is mainly intended for tests where exact fractions of <code>Pi</code> are desirable.</p>
<h1 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h1>
<p dir="auto">Install the package using</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add MultiplesOfPi"><pre>pkg<span class="pl-k">&gt;</span> add MultiplesOfPi</pre></div>
<h1 dir="auto"><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related packages</h1>
<ul dir="auto">
<li><a href="https://github.com/jishnub/IrrationalExpressions.jl.git">IrrationalExpressions.jl</a></li>
<li><a href="https://github.com/JuliaMath/Tau.jl">Tau.jl</a></li>
<li><a href="https://github.com/yakir12/UnitfulAngles.jl">UnitfulAngles.jl</a></li>
</ul>
</article></div>