<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p>This package will only work on very old version of Julia.
As of 2020 May, <a href="https://github.com/JuliaGraphs/GraphPlot.jl">https://github.com/JuliaGraphs/GraphPlot.jl</a> might be what you want.
Good luck!</p>
<h1><a id="user-content-graphlayoutjl" class="anchor" aria-hidden="true" href="#graphlayoutjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GraphLayout.jl</h1>
<p>Graph layout and visualization algorithms, implemented in Julia.</p>
<p>The package currently implements the following layout methods:</p>
<ul>
<li>Spring-based method of <a href="https://scholar.google.com/scholar?q=Graph+Drawing+by+Force+Directed+Placement" rel="nofollow">Fruchterman and Reingold (1991)</a></li>
<li>Stress-majorization method of <a href="https://scholar.google.com/scholar?hl=en&amp;q=Graph+Drawing+by+Stress+Majorization" rel="nofollow">Gansner, Koren, and North (2005)</a></li>
<li>Hierachical drawing of directed graphs inspired by the methods of <a href="https://scholar.google.com/scholar?q=Methods+for+visual+understanding+of+hierarchical+system+structures" rel="nofollow">Sugiyama, Tagawa, and Toda (1981)</a>.</li>
</ul>
<p>The visualizations are created using <a href="https://github.com/dcjones/Compose.jl">Compose.jl</a>, enabling output to a variety of vector and raster image formats. The hierarchical drawing algorithm has multiple components, some of which can use exact algorithms instead of heuristics. To use these components <a href="https://github.com/JuliaOpt/JuMP.jl">JuMP</a> and a <a href="http://juliaopt.org" rel="nofollow">suitable solver</a> should be installed - JuMP will be automatically installed, but a solver will not.</p>
<p>GraphLayouts.jl is not a comprehensive graph visualization option yet, and may never be. <strong>Please consider using a more mature library</strong>. Some related packages may meet your needs:</p>
<ul>
<li><a href="https://github.com/Keno/GraphViz.jl">GraphViz.jl</a> - Julia binding to the <code>GraphViz</code> library.</li>
<li><a href="https://github.com/sisl/TikzGraphs.jl">TikzGraphs.jl</a> - plot graphs using <code>lualatex/tikz</code>.</li>
</ul>
<h3><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h3>
<p>If you have it installed you can plot the resulting graph layouts:</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ee3287b173fe934824f0aceea3e85042df23aebdc65314c728cbbde5a4fc07dc/68747470733a2f2f7261776769742e636f6d2f4961696e4e5a2f47726170684c61796f75742e6a6c2f6d61737465722f746573742f70656e7461676f6e2e737667"><img src="https://camo.githubusercontent.com/ee3287b173fe934824f0aceea3e85042df23aebdc65314c728cbbde5a4fc07dc/68747470733a2f2f7261776769742e636f6d2f4961696e4e5a2f47726170684c61796f75742e6a6c2f6d61737465722f746573742f70656e7461676f6e2e737667" alt="Pentagon" data-canonical-src="https://rawgit.com/IainNZ/GraphLayout.jl/master/test/pentagon.svg" style="max-width:100%;"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/815070bfdc65d3bcbec8138b78c9caff054182964111b7baed22e9b1572c286d/68747470733a2f2f7261776769742e636f6d2f4961696e4e5a2f47726170684c61796f75742e6a6c2f6d61737465722f746573742f747265652e737667"><img src="https://camo.githubusercontent.com/815070bfdc65d3bcbec8138b78c9caff054182964111b7baed22e9b1572c286d/68747470733a2f2f7261776769742e636f6d2f4961696e4e5a2f47726170684c61796f75742e6a6c2f6d61737465722f746573742f747265652e737667" alt="Random" data-canonical-src="https://rawgit.com/IainNZ/GraphLayout.jl/master/test/tree.svg" style="max-width:100%;"></a></p>
<p>MIT License. Copyright (c) 2016 <a href="http://iaindunning.com" rel="nofollow">Iain Dunning</a> and <a href="https://github.com/IainNZ/GraphLayout.jl/graphs/contributors">contributors</a>.</p>
</article></div>