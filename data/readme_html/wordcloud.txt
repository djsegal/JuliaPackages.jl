<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-wordcloudjl" class="anchor" aria-hidden="true" href="#wordcloudjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><a href="https://github.com/guo-yong-zhi/WordCloud.jl">WordCloud.jl</a></h1>
<p><a target="_blank" rel="noopener noreferrer" href="res/juliadoc.png"><img src="res/juliadoc.png" alt="juliadoc" style="max-width:100%;"></a><br>
<a href="https://github.com/guo-yong-zhi/WordCloud.jl/actions/workflows/ci.yml"><img src="https://github.com/guo-yong-zhi/WordCloud.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width:100%;"></a> <a href="https://github.com/guo-yong-zhi/WordCloud.jl/actions/workflows/ci-nightly.yml"><img src="https://github.com/guo-yong-zhi/WordCloud.jl/actions/workflows/ci-nightly.yml/badge.svg" alt="CI-nightly" style="max-width:100%;"></a> <a href="https://codecov.io/gh/guo-yong-zhi/WordCloud.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5ae2003a7fa5436fb93f8be3df8367d5d8378229fd9825c8827fe74ce53a557e/68747470733a2f2f636f6465636f762e696f2f67682f67756f2d796f6e672d7a68692f576f7264436c6f75642e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d325530583736395a3531" alt="codecov" data-canonical-src="https://codecov.io/gh/guo-yong-zhi/WordCloud.jl/branch/master/graph/badge.svg?token=2U0X769Z51" style="max-width:100%;"></a> <a href="https://mybinder.org/v2/gh/guo-yong-zhi/WordCloud.jl/master?filepath=examples.ipynb" rel="nofollow"><img src="https://camo.githubusercontent.com/581c077bdbc6ca6899c86d0acc6145ae85e9d80e6f805a1071793dbe48917982/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667" alt="Binder" data-canonical-src="https://mybinder.org/badge_logo.svg" style="max-width:100%;"></a><br>
Word cloud (tag cloud or wordle) is a novelty visual representation of text data. The importance of each word is shown with font size or color. Our generator has the following highlights:</p>
<ul>
<li><strong>Flexible</strong> Any mask, any color, any angle, adjustable density. You can specify the initial position of some words. Or you can pin some words and adjust others, etc.</li>
<li><strong>Fast</strong>  100% in Julia and efficient implementation based on Quadtree &amp; gradient optimization (see <a href="https://github.com/guo-yong-zhi/Stuffing.jl">Stuffing.jl</a>). The advantage is more obvious when generating large images.</li>
<li><strong>Exact</strong>  Words with the same weight have the exact same size. The algorithm will never scale the word to fit the blank.</li>
</ul>
<p><em>run <code>showexample(:juliadoc)</code> to see how to generate the banner</em></p>
<hr>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h1>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="import Pkg; Pkg.add(&quot;WordCloud&quot;)
"><pre><span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>WordCloud<span class="pl-pds">"</span></span>)</pre></div>
<h1><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic Usage</h1>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using WordCloud
words = &quot;天地玄黄宇宙洪荒日月盈昃辰宿列张寒来暑往秋收冬藏闰余成岁律吕调阳云腾致雨露结为霜金生丽水玉出昆冈剑号巨阙珠称夜光果珍李柰菜重芥姜海咸河淡鳞潜羽翔龙师火帝鸟官人皇始制文字乃服衣裳推位让国有虞陶唐吊民伐罪周发殷汤坐朝问道垂拱平章&quot;
words = [string(c) for c in words]
weights = rand(length(words)) .^ 2 .* 100 .+ 30
wc = wordcloud(words, weights)
generate!(wc)
paint(wc, &quot;qianziwen.svg&quot;)
"><pre><span class="pl-k">using</span> WordCloud
words <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>天地玄黄宇宙洪荒日月盈昃辰宿列张寒来暑往秋收冬藏闰余成岁律吕调阳云腾致雨露结为霜金生丽水玉出昆冈剑号巨阙珠称夜光果珍李柰菜重芥姜海咸河淡鳞潜羽翔龙师火帝鸟官人皇始制文字乃服衣裳推位让国有虞陶唐吊民伐罪周发殷汤坐朝问道垂拱平章<span class="pl-pds">"</span></span>
words <span class="pl-k">=</span> [<span class="pl-c1">string</span>(c) <span class="pl-k">for</span> c <span class="pl-k">in</span> words]
weights <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">length</span>(words)) <span class="pl-k">.^</span> <span class="pl-c1">2</span> <span class="pl-k">.*</span> <span class="pl-c1">100</span> <span class="pl-k">.+</span> <span class="pl-c1">30</span>
wc <span class="pl-k">=</span> <span class="pl-c1">wordcloud</span>(words, weights)
<span class="pl-c1">generate!</span>(wc)
<span class="pl-c1">paint</span>(wc, <span class="pl-s"><span class="pl-pds">"</span>qianziwen.svg<span class="pl-pds">"</span></span>)</pre></div>
<p><em>Run the command <code>runexample(:qianziwen)</code> or <code>showexample(:qianziwen)</code> to get the result.</em></p>
<h1><a id="user-content-more-complex-usage" class="anchor" aria-hidden="true" href="#more-complex-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>More Complex Usage</h1>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using WordCloud
wc = wordcloud(
    processtext(open(pkgdir(WordCloud)*&quot;/res/alice.txt&quot;), stopwords=WordCloud.stopwords_en ∪ [&quot;said&quot;]), 
    mask = loadmask(pkgdir(WordCloud)*&quot;/res/alice_mask.png&quot;, color=&quot;#faeef8&quot;),
    colors = :Set1_5,
    angles = (0, 90),
    density = 0.55) |&gt; generate!
paint(wc, &quot;alice.png&quot;, ratio=0.5, background=outline(wc.mask, color=&quot;purple&quot;, linewidth=1))
"><pre><span class="pl-k">using</span> WordCloud
wc <span class="pl-k">=</span> <span class="pl-c1">wordcloud</span>(
    <span class="pl-c1">processtext</span>(<span class="pl-c1">open</span>(<span class="pl-c1">pkgdir</span>(WordCloud)<span class="pl-k">*</span><span class="pl-s"><span class="pl-pds">"</span>/res/alice.txt<span class="pl-pds">"</span></span>), stopwords<span class="pl-k">=</span>WordCloud<span class="pl-k">.</span>stopwords_en <span class="pl-k">∪</span> [<span class="pl-s"><span class="pl-pds">"</span>said<span class="pl-pds">"</span></span>]), 
    mask <span class="pl-k">=</span> <span class="pl-c1">loadmask</span>(<span class="pl-c1">pkgdir</span>(WordCloud)<span class="pl-k">*</span><span class="pl-s"><span class="pl-pds">"</span>/res/alice_mask.png<span class="pl-pds">"</span></span>, color<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>#faeef8<span class="pl-pds">"</span></span>),
    colors <span class="pl-k">=</span> <span class="pl-c1">:Set1_5</span>,
    angles <span class="pl-k">=</span> (<span class="pl-c1">0</span>, <span class="pl-c1">90</span>),
    density <span class="pl-k">=</span> <span class="pl-c1">0.55</span>) <span class="pl-k">|&gt;</span> generate!
<span class="pl-c1">paint</span>(wc, <span class="pl-s"><span class="pl-pds">"</span>alice.png<span class="pl-pds">"</span></span>, ratio<span class="pl-k">=</span><span class="pl-c1">0.5</span>, background<span class="pl-k">=</span><span class="pl-c1">outline</span>(wc<span class="pl-k">.</span>mask, color<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>purple<span class="pl-pds">"</span></span>, linewidth<span class="pl-k">=</span><span class="pl-c1">1</span>))</pre></div>
<p><em>Run the command <code>runexample(:alice)</code> or <code>showexample(:alice)</code> to get the result.</em><br>
<a href="./examples/alice.jl"><img src="res/alice.png" alt="alice" style="max-width:100%;"></a></p>
<h1><a id="user-content-more-examples" class="anchor" aria-hidden="true" href="#more-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>More Examples</h1>
<h2><a id="user-content-training-animation" class="anchor" aria-hidden="true" href="#training-animation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Training animation</h2>
<p><a href="./examples/animation.jl"><img src="res/animation.gif" alt="animation" style="max-width:100%;"></a><br>
<em>Run the command <code>runexample(:animation)</code> or <code>showexample(:animation)</code> to get the result.</em></p>
<h2><a id="user-content-gathering-style" class="anchor" aria-hidden="true" href="#gathering-style"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Gathering style</h2>
<p><a href="./examples/gathering.jl"><img src="res/gathering.png" alt="gathering" style="max-width:100%;"></a><br>
<em>Run the command <code>runexample(:gathering)</code> or <code>showexample(:gathering)</code> to get the result.</em></p>
<h2><a id="user-content-recolor" class="anchor" aria-hidden="true" href="#recolor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Recolor</h2>
<p><a href="./examples/recolor.jl"><img src="res/recolor.png" alt="recolor" style="max-width:100%;"></a><br>
<em>Run the command <code>runexample(:recolor)</code> or <code>showexample(:recolor)</code> to get the result.</em></p>
<h2><a id="user-content-comparison" class="anchor" aria-hidden="true" href="#comparison"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Comparison</h2>
<p><a href="./examples/compare.jl"><img src="res/compare.png" alt="compare" style="max-width:100%;"></a><br>
<em>Run the command <code>runexample(:compare)</code> or <code>showexample(:compare)</code> to get the result.</em></p>
<p><em>The variable <code>WordCloud.examples</code> holds all available examples.</em>
You can also <a href="https://github.com/guo-yong-zhi/WordCloud-Gallery"><strong>see more examples</strong></a> or <a href="https://mybinder.org/v2/gh/guo-yong-zhi/WordCloud.jl/master?filepath=examples.ipynb" rel="nofollow"><strong>try it online</strong></a>.</p>
<h1><a id="user-content-algorithm-description" class="anchor" aria-hidden="true" href="#algorithm-description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Algorithm Description</h1>
<p>Unlike most other implementations, <strong>WordCloud.jl</strong> is programmed based on local grayscale gradient optimization. It’s a non-greedy algorithm in which words can be further <a href="res/animation.gif">moved</a> after they are positioned. This means shrinking words is unnecessary, thus the word size can be kept unchanged during the adjustment. In addition, it allows words to be assigned to any initial position whether or not there will be an overlap. This enables the program to achieve the maximum flexibility.<br>
<strong>First</strong>, raster masks of words are represented as <a href="https://github.com/guo-yong-zhi/Stuffing.jl/blob/main/src/qtree.jl"><code>AbstractStackQtree</code></a>s. The <code>AbstractStackQtree</code> forms a pyramid structure. It consists of layers of different pixel density of the original mask. Each layer is generated by reducing the pixel density of the layer below it. In this way, the <code>AbstractStackQtree</code> can be seen as a set of hierarchical bounding boxes. The value of each pixel of each layer (the node of <code>AbstractStackQtree</code>) can be <code>FULL</code>, <code>EMPTY</code> or <code>MIX</code>.<br>
<strong>Second</strong>, we use a top-down method (<a href="https://github.com/guo-yong-zhi/Stuffing.jl/blob/main/src/qtreetools.jl"><code>collision_randbfs</code></a>) to detect collision between two <code>AbstractStackQtree</code>s. On the level 𝑙 and coordinates (𝑎,𝑏), if one tree's node is <code>FULL</code> and another's is NOT <code>EMPTY</code>, then these two trees collide at (𝑙,𝑎,𝑏). However, to detect collisions between many trees/objects, pairwise detection would be time-consuming. So, we first locate the objects in hierarchical sub-areas (implemented as linked-quadtree), and then detect the collision between objects within each sub-area and between the objects in the sub-areas and those in their ancestral areas (see <a href="https://github.com/guo-yong-zhi/Stuffing.jl/blob/main/src/qtreetools.jl"><code>batchcollision_qtree</code> and <code>locate_core!</code></a>).<br>
<strong>At last</strong>, each word in collision pair is moved according to the gray gradient (calculated by <a href="https://github.com/guo-yong-zhi/Stuffing.jl/blob/main/src/train.jl"><code>whitesum</code></a>) near the collision point (𝑙,𝑎,𝑏), that is, moving the word away from <code>EMPTY</code> region. This will enlarge space between the two words. Note that, at least one of the eight pixels around the collision point is <code>EMPTY</code> or <code>MIX</code>, otherwise the collision would occur at the layer 𝑙−1. After moving the words, the <code>AbstractStackQtrees</code> should be rebuilt for the next round of collision detection.</p>
<hr>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 排序 &amp; 预放置</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 基于四叉树碰撞检测</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 根据局部灰度梯度位置调整（训练迭代）</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 引入动量加速训练</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 分代调整以优化性能</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 定位树批量碰撞检测（≈O(n)）</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> LRU优化性能</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 控制字体大小和填充密度的策略</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 重新放置和缩放的策略</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 文字颜色和方向</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> 并行计算</li>
</ul>
<hr>
<p>linux添加中文字体</p>
<blockquote>
<p>mv wqy-microhei.ttc ~/.fonts<br>
fc-cache -vf</p>
</blockquote>
<p>配置ffmpeg环境</p>
<blockquote>
<p>add /path/to/ffmpeg-4.2.1/lib to ENV["LD_LIBRARY_PATH"]<br>
add /path/to/ffmpeg-4.2.1/bin to ENV["PATH"]</p>
</blockquote>
<hr>
<h1><a id="user-content-other-wordclouds" class="anchor" aria-hidden="true" href="#other-wordclouds"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>other wordclouds</h1>
<blockquote>
<p><a href="https://github.com/amueller/word_cloud">word_cloud</a><br>
<a href="https://github.com/jasondavies/d3-cloud">d3-cloud</a><br>
<a href="https://github.com/timdream/wordcloud">wordcloud</a></p>
</blockquote>
</article></div>