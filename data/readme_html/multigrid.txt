<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://travis-ci.org/JuliaInv/Multigrid.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5277540033fb683ecd77e90c03fc2590793c4a6b45f0000f7fdae0a600033236/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961496e762f4d756c7469677269642e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaInv/Multigrid.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/JuliaInv/Multigrid.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/4c93fbf971ceae2d69ba02b3a2c7f158a67307ea06500df76e745ff3520c4cec/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c6961496e762f4d756c7469677269642e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaInv/Multigrid.jl/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-multigridjl" class="anchor" aria-hidden="true" href="#multigridjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Multigrid.jl</h1>
<p dir="auto">A multigrid package in Julia. Uses shared memory parallelism using OMP and [<code>ParSpMatVec</code>] (<a href="https://github.com/JuliaInv/ParSpMatVec.jl">https://github.com/JuliaInv/ParSpMatVec.jl</a>) .</p>
<p dir="auto">Includes:</p>
<ol dir="auto">
<li>
<p dir="auto">Geometric multigrid on a regular mesh.</p>
</li>
<li>
<p dir="auto">Smoothed Aggregation AMG Multigrid, based on the following paper (please cite if you use this code):</p>
<p dir="auto">Eran Treister and Irad Yavneh, Non-Galerkin Multigrid based on Sparsified Smoothed Aggregation. SIAM Journal on Scientific Computing, 37 (1), A30-A54, 2015.</p>
</li>
</ol>
<p dir="auto">Options for V,F,W and K cycles.</p>
<p dir="auto">Includes a block version of multigrid. Most effective for using as a preconditioner for Block Krylov methods (see KrylovMethods.jl).
Coarsest Grid can be solved using [<code>MUMPS</code>] (<a href="https://github.com/JuliaSparse/MUMPS.jl">https://github.com/JuliaSparse/MUMPS.jl</a>) or using Julia's backslash.</p>
<h1 dir="auto"><a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Requirements</h1>
<p dir="auto">This package is intended to use with julia versions 0.7-1.0.</p>
<p dir="auto">This package is an add-on for <a href="https://github.com/JuliaInv/jInv.jl"><code>jInv</code></a>, which needs to be installed (mostly for regular mesh module).</p>
<h1 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h1>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Pkg.clone(&quot;https://github.com/JuliaInv/jInv.jl&quot;,&quot;jInv&quot;)
Pkg.clone(&quot;https://github.com/JuliaInv/Multigrid.jl&quot;,&quot;Multigrid&quot;)
Pkg.clone(&quot;https://github.com/JuliaInv/ParSpMatVec.jl&quot;,&quot;ParSpMatVec&quot;)
Pkg.build(&quot;ParSpMatVec&quot;);

Pkg.test(&quot;Multigrid&quot;)"><pre class="notranslate"><code>Pkg.clone("https://github.com/JuliaInv/jInv.jl","jInv")
Pkg.clone("https://github.com/JuliaInv/Multigrid.jl","Multigrid")
Pkg.clone("https://github.com/JuliaInv/ParSpMatVec.jl","ParSpMatVec")
Pkg.build("ParSpMatVec");

Pkg.test("Multigrid")
</code></pre></div>
</article></div>