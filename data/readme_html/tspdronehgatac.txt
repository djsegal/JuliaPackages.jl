<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-tspdronehgatacjl" class="anchor" aria-hidden="true" href="#tspdronehgatacjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TSPDroneHGATAC.jl</h1>
<p dir="auto">A package that uses Hybrid Genetic Algorithm to solve any TSPD or FSTSP instance, based on the following paper:</p>
<p dir="auto"><a href="https://arxiv.org/abs/2303.00614" rel="nofollow">https://arxiv.org/abs/2303.00614</a></p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@misc{mahmoudinazlou_hybrid,
  author = {Mahmoudinazlou, Sasan and Kwon, Changhyun},
  title = {A Hybrid Genetic Algorithm with Type-Aware Chromosomes for Traveling Salesman Problems with Drone},
  year = {2023},
  doi = {10.48550/ARXIV.2303.00614},  
  url = {https://arxiv.org/abs/2303.00614},
}"><pre class="notranslate"><code>@misc{mahmoudinazlou_hybrid,
  author = {Mahmoudinazlou, Sasan and Kwon, Changhyun},
  title = {A Hybrid Genetic Algorithm with Type-Aware Chromosomes for Traveling Salesman Problems with Drone},
  year = {2023},
  doi = {10.48550/ARXIV.2303.00614},  
  url = {https://arxiv.org/abs/2303.00614},
}
</code></pre></div>
<h1 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h1>
<p dir="auto">To install:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import Pkg; Pkg.add(url=&quot;https://github.com/Sasanm88/TSPDroneHGATAC.jl&quot;)"><pre><span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/Sasanm88/TSPDroneHGATAC.jl<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">or</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add https://github.com/Sasanm88/TSPDroneHGATAC.jl"><pre>] add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>Sasanm88<span class="pl-k">/</span>TSPDroneHGATAC<span class="pl-k">.</span>jl</pre></div>
<p dir="auto">To install <code>TSPDrone.jl</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add https://github.com/chkwon/TSPDrone.jl"><pre>] add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>chkwon<span class="pl-k">/</span>TSPDrone<span class="pl-k">.</span>jl</pre></div>
<h2 dir="auto"><a id="user-content-tsp-d-examples" class="anchor" aria-hidden="true" href="#tsp-d-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TSP-D Examples</h2>
<p dir="auto">Using <code>x</code>-<code>y</code> coordinates.
Based on the coordinates, the Euclidean distances are calculated.
The Eucliden distances will be divided by <code>truck_speed</code> and <code>drone_speed</code> to calculate the travel cost for the truck and the drone, respectively.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TSPDroneHGATAC
n = 10 
x = rand(n); y = rand(n);

result1 = TSPDroneHGATAC.solve_tspd(x, y, truck_speed=1.0, drone_speed=2.0)

# compare with TSPDrone.jl
using TSPDrone
result2 = TSPDrone.solve_tspd(x, y, 1.0, 0.5)

@show result1.best_total_cost
@show result2.total_cost"><pre><span class="pl-k">using</span> TSPDroneHGATAC
n <span class="pl-k">=</span> <span class="pl-c1">10</span> 
x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(n); y <span class="pl-k">=</span> <span class="pl-c1">rand</span>(n);

result1 <span class="pl-k">=</span> TSPDroneHGATAC<span class="pl-k">.</span><span class="pl-c1">solve_tspd</span>(x, y, truck_speed<span class="pl-k">=</span><span class="pl-c1">1.0</span>, drone_speed<span class="pl-k">=</span><span class="pl-c1">2.0</span>)

<span class="pl-c"><span class="pl-c">#</span> compare with TSPDrone.jl</span>
<span class="pl-k">using</span> TSPDrone
result2 <span class="pl-k">=</span> TSPDrone<span class="pl-k">.</span><span class="pl-c1">solve_tspd</span>(x, y, <span class="pl-c1">1.0</span>, <span class="pl-c1">0.5</span>)

<span class="pl-c1">@show</span> result1<span class="pl-k">.</span>best_total_cost
<span class="pl-c1">@show</span> result2<span class="pl-k">.</span>total_cost</pre></div>
<p dir="auto">You can also input the distance cost matrices for the truck and the drone directly.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TSPDroneHGATAC
n = 10 
dist_mtx = rand(n, n)
dist_mtx = dist_mtx + dist_mtx' # symmetric distance only
for i in 1:n # diagonal needs to be zero
    dist_mtx[i, i] = 0.0
end
truck_cost_mtx = dist_mtx .* 1.0
drone_cost_mtx = truck_cost_mtx .* 0.5 

result1 = TSPDroneHGATAC.solve_tspd(truck_cost_mtx, drone_cost_mtx)

# compare with TSPDrone.jl
using TSPDrone
result2 = TSPDrone.solve_tspd(truck_cost_mtx, drone_cost_mtx)

@show result1.best_total_cost
@show result2.total_cost"><pre><span class="pl-k">using</span> TSPDroneHGATAC
n <span class="pl-k">=</span> <span class="pl-c1">10</span> 
dist_mtx <span class="pl-k">=</span> <span class="pl-c1">rand</span>(n, n)
dist_mtx <span class="pl-k">=</span> dist_mtx <span class="pl-k">+</span> dist_mtx<span class="pl-k">'</span> <span class="pl-c"><span class="pl-c">#</span> symmetric distance only</span>
<span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>n <span class="pl-c"><span class="pl-c">#</span> diagonal needs to be zero</span>
    dist_mtx[i, i] <span class="pl-k">=</span> <span class="pl-c1">0.0</span>
<span class="pl-k">end</span>
truck_cost_mtx <span class="pl-k">=</span> dist_mtx <span class="pl-k">.*</span> <span class="pl-c1">1.0</span>
drone_cost_mtx <span class="pl-k">=</span> truck_cost_mtx <span class="pl-k">.*</span> <span class="pl-c1">0.5</span> 

result1 <span class="pl-k">=</span> TSPDroneHGATAC<span class="pl-k">.</span><span class="pl-c1">solve_tspd</span>(truck_cost_mtx, drone_cost_mtx)

<span class="pl-c"><span class="pl-c">#</span> compare with TSPDrone.jl</span>
<span class="pl-k">using</span> TSPDrone
result2 <span class="pl-k">=</span> TSPDrone<span class="pl-k">.</span><span class="pl-c1">solve_tspd</span>(truck_cost_mtx, drone_cost_mtx)

<span class="pl-c1">@show</span> result1<span class="pl-k">.</span>best_total_cost
<span class="pl-c1">@show</span> result2<span class="pl-k">.</span>total_cost</pre></div>
<h2 dir="auto"><a id="user-content-fs-tsp-examples" class="anchor" aria-hidden="true" href="#fs-tsp-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FS-TSP Examples</h2>
<p dir="auto">Based on the coordinates:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TSPDroneHGATAC
n = 10 
x = rand(n); y = rand(n);

result1 = TSPDroneHGATAC.solve_fstsp(x, y; truck_speed=1.0, drone_speed=2.0, flying_range=0.5, retrieval_time=0.1, launching_time=0.1)

@show result1.best_total_cost"><pre><span class="pl-k">using</span> TSPDroneHGATAC
n <span class="pl-k">=</span> <span class="pl-c1">10</span> 
x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(n); y <span class="pl-k">=</span> <span class="pl-c1">rand</span>(n);

result1 <span class="pl-k">=</span> TSPDroneHGATAC<span class="pl-k">.</span><span class="pl-c1">solve_fstsp</span>(x, y; truck_speed<span class="pl-k">=</span><span class="pl-c1">1.0</span>, drone_speed<span class="pl-k">=</span><span class="pl-c1">2.0</span>, flying_range<span class="pl-k">=</span><span class="pl-c1">0.5</span>, retrieval_time<span class="pl-k">=</span><span class="pl-c1">0.1</span>, launching_time<span class="pl-k">=</span><span class="pl-c1">0.1</span>)

<span class="pl-c1">@show</span> result1<span class="pl-k">.</span>best_total_cost</pre></div>
<p dir="auto">Based on the cost matrices:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TSPDroneHGATAC
n = 10 
dist_mtx = rand(n, n)
dist_mtx = dist_mtx + dist_mtx' # symmetric distance only
for i in 1:n # diagonal needs to be zero
    dist_mtx[i, i] = 0.0
end
truck_cost_mtx = dist_mtx ./ 1.0
drone_cost_mtx = truck_cost_mtx ./ 2.0 

result1 = TSPDroneHGATAC.solve_fstsp(truck_cost_mtx, drone_cost_mtx; flying_range=0.5, retrieval_time=0.1, launching_time=0.1)

@show result1.best_total_cost"><pre><span class="pl-k">using</span> TSPDroneHGATAC
n <span class="pl-k">=</span> <span class="pl-c1">10</span> 
dist_mtx <span class="pl-k">=</span> <span class="pl-c1">rand</span>(n, n)
dist_mtx <span class="pl-k">=</span> dist_mtx <span class="pl-k">+</span> dist_mtx<span class="pl-k">'</span> <span class="pl-c"><span class="pl-c">#</span> symmetric distance only</span>
<span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>n <span class="pl-c"><span class="pl-c">#</span> diagonal needs to be zero</span>
    dist_mtx[i, i] <span class="pl-k">=</span> <span class="pl-c1">0.0</span>
<span class="pl-k">end</span>
truck_cost_mtx <span class="pl-k">=</span> dist_mtx <span class="pl-k">./</span> <span class="pl-c1">1.0</span>
drone_cost_mtx <span class="pl-k">=</span> truck_cost_mtx <span class="pl-k">./</span> <span class="pl-c1">2.0</span> 

result1 <span class="pl-k">=</span> TSPDroneHGATAC<span class="pl-k">.</span><span class="pl-c1">solve_fstsp</span>(truck_cost_mtx, drone_cost_mtx; flying_range<span class="pl-k">=</span><span class="pl-c1">0.5</span>, retrieval_time<span class="pl-k">=</span><span class="pl-c1">0.1</span>, launching_time<span class="pl-k">=</span><span class="pl-c1">0.1</span>)

<span class="pl-c1">@show</span> result1<span class="pl-k">.</span>best_total_cost</pre></div>
</article></div>