<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-parameterschedulers" class="anchor" aria-hidden="true" href="#parameterschedulers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ParameterSchedulers</h1>
<p dir="auto"><a href="https://fluxml.github.io/ParameterSchedulers.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/FluxML/ParameterSchedulers.jl/actions"><img src="https://github.com/FluxML/ParameterSchedulers.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto">ParameterSchedulers.jl provides common machine learning (ML) schedulers for hyper-parameters. Though this package is framework agnostic, a convenient interface for pairing schedules with <a href="https://github.com/FluxML/Flux.jl">Flux.jl</a> optimizers is available. Using this package with Flux is as simple as:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Flux, ParameterSchedulers
using ParameterSchedulers: Scheduler

opt = Scheduler(Exp(λ = 1e-2, γ = 0.8), Momentum())"><pre><span class="pl-k">using</span> Flux, ParameterSchedulers
<span class="pl-k">using</span> ParameterSchedulers<span class="pl-k">:</span> Scheduler

opt <span class="pl-k">=</span> <span class="pl-c1">Scheduler</span>(<span class="pl-c1">Exp</span>(λ <span class="pl-k">=</span> <span class="pl-c1">1e-2</span>, γ <span class="pl-k">=</span> <span class="pl-c1">0.8</span>), <span class="pl-c1">Momentum</span>())</pre></div>
<h2 dir="auto"><a id="user-content-available-schedules" class="anchor" aria-hidden="true" href="#available-schedules"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Available Schedules</h2>
<p dir="auto">This is a table of the common schedules implemented, but ParameterSchedulers provides utilities for creating more exotic schedules as well. The <a href="#" title="Complex schedules">higher order schedules</a> should make it so that you will rarely need to write a schedule from scratch.</p>
<p dir="auto">You can read <a href="https://arxiv.org/abs/1908.06477" rel="nofollow">this paper</a> for more information on the schedules below.</p>
<p dir="auto">{cell=table, display=false, output=false, results=false}</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using UnicodePlots, ParameterSchedulers"><pre><span class="pl-k">using</span> UnicodePlots, ParameterSchedulers</pre></div>
<table>
<thead>
<tr>
    <th>Schedule</th>
    <th>Description</th>
    <th>Type</th>
    <th>Example</th>
</tr>
</thead>
<tbody>
<tr><td>
<p dir="auto"><a href="#" title="`Step`"><code>Step(;λ, γ, step_sizes)</code></a></p>
</td>
<td>
<p dir="auto">Exponential decay by <code>γ</code> every step in <code>step_sizes</code></p>
</td>
<td> Decay </td>
<td>
<p dir="auto">{cell=table, display=false}</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using UnicodePlots, ParameterSchedulers
t = 1:10 |&gt; collect
s = Step(λ = 1.0, γ = 0.8, step_sizes = [2, 3, 2])
lineplot(t, s.(t); width = 15, height = 3, border = :ascii, labels = false)"><pre><span class="pl-k">using</span> UnicodePlots, ParameterSchedulers
t <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span> <span class="pl-k">|&gt;</span> collect
s <span class="pl-k">=</span> <span class="pl-c1">Step</span>(λ <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, γ <span class="pl-k">=</span> <span class="pl-c1">0.8</span>, step_sizes <span class="pl-k">=</span> [<span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>])
<span class="pl-c1">lineplot</span>(t, <span class="pl-c1">s</span>.(t); width <span class="pl-k">=</span> <span class="pl-c1">15</span>, height <span class="pl-k">=</span> <span class="pl-c1">3</span>, border <span class="pl-k">=</span> <span class="pl-c1">:ascii</span>, labels <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
</td></tr>
<tr><td>
<p dir="auto"><a href="#" title="`Exp`"><code>Exp(;λ, γ)</code></a></p>
</td>
<td>
<p dir="auto">Exponential decay by <code>γ</code> every iteration</p>
</td>
<td> Decay </td>
<td>
<p dir="auto">{cell=table, display=false}</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using UnicodePlots, ParameterSchedulers
t = 1:10 |&gt; collect
s = Exp(λ = 1.0, γ = 0.5)
lineplot(t, s.(t); width = 15, height = 3, border = :ascii, labels = false)"><pre><span class="pl-k">using</span> UnicodePlots, ParameterSchedulers
t <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span> <span class="pl-k">|&gt;</span> collect
s <span class="pl-k">=</span> <span class="pl-c1">Exp</span>(λ <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, γ <span class="pl-k">=</span> <span class="pl-c1">0.5</span>)
<span class="pl-c1">lineplot</span>(t, <span class="pl-c1">s</span>.(t); width <span class="pl-k">=</span> <span class="pl-c1">15</span>, height <span class="pl-k">=</span> <span class="pl-c1">3</span>, border <span class="pl-k">=</span> <span class="pl-c1">:ascii</span>, labels <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
</td></tr>
<tr><td>
<p dir="auto"><a href="#" title="`CosAnneal`"><code>CosAnneal(;λ0, λ1, period)</code></a></p>
</td>
<td>
<p dir="auto"><a href="https://arxiv.org/abs/1608.03983v5" rel="nofollow">Cosine annealing</a></p>
</td>
<td> Cyclic </td>
<td>
<p dir="auto">{cell=table, display=false}</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using UnicodePlots, ParameterSchedulers
t = 1:10 |&gt; collect
s = CosAnneal(λ0 = 0.0, λ1 = 1.0, period = 4)
lineplot(t, s.(t); width = 15, height = 3, border = :ascii, labels = false)"><pre><span class="pl-k">using</span> UnicodePlots, ParameterSchedulers
t <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span> <span class="pl-k">|&gt;</span> collect
s <span class="pl-k">=</span> <span class="pl-c1">CosAnneal</span>(λ0 <span class="pl-k">=</span> <span class="pl-c1">0.0</span>, λ1 <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, period <span class="pl-k">=</span> <span class="pl-c1">4</span>)
<span class="pl-c1">lineplot</span>(t, <span class="pl-c1">s</span>.(t); width <span class="pl-k">=</span> <span class="pl-c1">15</span>, height <span class="pl-k">=</span> <span class="pl-c1">3</span>, border <span class="pl-k">=</span> <span class="pl-c1">:ascii</span>, labels <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
</td></tr>
<tr><td>
<p dir="auto"><a href="#" title="`Triangle`"><code>Triangle(;λ0, λ1, period)</code></a></p>
</td>
<td>
<p dir="auto"><a href="https://en.wikipedia.org/wiki/Triangle_wave" rel="nofollow">Triangle wave</a> function</p>
</td>
<td> Cyclic </td>
<td>
<p dir="auto">{cell=table, display=false}</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using UnicodePlots, ParameterSchedulers
t = 1:10 |&gt; collect
s = Triangle(λ0 = 0.0, λ1 = 1.0, period = 2)
lineplot(t, s.(t); width = 15, height = 3, border = :ascii, labels = false)"><pre><span class="pl-k">using</span> UnicodePlots, ParameterSchedulers
t <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span> <span class="pl-k">|&gt;</span> collect
s <span class="pl-k">=</span> <span class="pl-c1">Triangle</span>(λ0 <span class="pl-k">=</span> <span class="pl-c1">0.0</span>, λ1 <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, period <span class="pl-k">=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">lineplot</span>(t, <span class="pl-c1">s</span>.(t); width <span class="pl-k">=</span> <span class="pl-c1">15</span>, height <span class="pl-k">=</span> <span class="pl-c1">3</span>, border <span class="pl-k">=</span> <span class="pl-c1">:ascii</span>, labels <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
</td></tr>
<tr><td>
<p dir="auto"><a href="#" title="`TriangleDecay2`"><code>TriangleDecay2(;λ0, λ1, period)</code></a></p>
</td>
<td>
<p dir="auto"><a href="https://en.wikipedia.org/wiki/Triangle_wave" rel="nofollow">Triangle wave</a> function with half the amplitude every <code>period</code></p>
</td>
<td> Cyclic </td>
<td>
<p dir="auto">{cell=table, display=false}</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using UnicodePlots, ParameterSchedulers
t = 1:10 |&gt; collect
s = TriangleDecay2(λ0 = 0.0, λ1 = 1.0, period = 2)
lineplot(t, s.(t); width = 15, height = 3, border = :ascii, labels = false)"><pre><span class="pl-k">using</span> UnicodePlots, ParameterSchedulers
t <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span> <span class="pl-k">|&gt;</span> collect
s <span class="pl-k">=</span> <span class="pl-c1">TriangleDecay2</span>(λ0 <span class="pl-k">=</span> <span class="pl-c1">0.0</span>, λ1 <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, period <span class="pl-k">=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">lineplot</span>(t, <span class="pl-c1">s</span>.(t); width <span class="pl-k">=</span> <span class="pl-c1">15</span>, height <span class="pl-k">=</span> <span class="pl-c1">3</span>, border <span class="pl-k">=</span> <span class="pl-c1">:ascii</span>, labels <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
</td></tr>
<tr><td>
<p dir="auto"><a href="#" title="`TriangleExp`"><code>TriangleExp(;λ0, λ1, period, γ)</code></a></p>
</td>
<td>
<p dir="auto"><a href="https://en.wikipedia.org/wiki/Triangle_wave" rel="nofollow">Triangle wave</a> function with exponential amplitude decay at rate <code>γ</code></p>
</td>
<td> Cyclic </td>
<td>
<p dir="auto">{cell=table, display=false}</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using UnicodePlots, ParameterSchedulers
t = 1:10 |&gt; collect
s = TriangleExp(λ0 = 0.0, λ1 = 1.0, period = 2, γ = 0.8)
lineplot(t, s.(t); width = 15, height = 3, border = :ascii, labels = false)"><pre><span class="pl-k">using</span> UnicodePlots, ParameterSchedulers
t <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span> <span class="pl-k">|&gt;</span> collect
s <span class="pl-k">=</span> <span class="pl-c1">TriangleExp</span>(λ0 <span class="pl-k">=</span> <span class="pl-c1">0.0</span>, λ1 <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, period <span class="pl-k">=</span> <span class="pl-c1">2</span>, γ <span class="pl-k">=</span> <span class="pl-c1">0.8</span>)
<span class="pl-c1">lineplot</span>(t, <span class="pl-c1">s</span>.(t); width <span class="pl-k">=</span> <span class="pl-c1">15</span>, height <span class="pl-k">=</span> <span class="pl-c1">3</span>, border <span class="pl-k">=</span> <span class="pl-c1">:ascii</span>, labels <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
</td></tr>
<tr><td>
<p dir="auto"><a href="#" title="`Poly`"><code>Poly(;λ, p, max_iter)</code></a></p>
</td>
<td>
<p dir="auto">Polynomial decay at degree <code>p</code></p>
</td>
<td> Decay </td>
<td>
<p dir="auto">{cell=table, display=false}</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using UnicodePlots, ParameterSchedulers
t = 1:10 |&gt; collect
s = Poly(λ = 1.0, p = 2, max_iter = t[end])
lineplot(t, s.(t); width = 15, height = 3, border = :ascii, labels = false)"><pre><span class="pl-k">using</span> UnicodePlots, ParameterSchedulers
t <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span> <span class="pl-k">|&gt;</span> collect
s <span class="pl-k">=</span> <span class="pl-c1">Poly</span>(λ <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, p <span class="pl-k">=</span> <span class="pl-c1">2</span>, max_iter <span class="pl-k">=</span> t[<span class="pl-c1">end</span>])
<span class="pl-c1">lineplot</span>(t, <span class="pl-c1">s</span>.(t); width <span class="pl-k">=</span> <span class="pl-c1">15</span>, height <span class="pl-k">=</span> <span class="pl-c1">3</span>, border <span class="pl-k">=</span> <span class="pl-c1">:ascii</span>, labels <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
</td></tr>
<tr><td>
<p dir="auto"><a href="#" title="`Inv`"><code>Inv(;λ, γ, p)</code></a></p>
</td>
<td>
<p dir="auto">Inverse decay at rate <code>(1 + tγ)^p</code></p>
</td>
<td> Decay </td>
<td>
<p dir="auto">{cell=table, display=false}</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using UnicodePlots, ParameterSchedulers
t = 1:10 |&gt; collect
s = Inv(λ = 1.0, p = 2, γ = 0.8)
lineplot(t, s.(t); width = 15, height = 3, border = :ascii, labels = false)"><pre><span class="pl-k">using</span> UnicodePlots, ParameterSchedulers
t <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span> <span class="pl-k">|&gt;</span> collect
s <span class="pl-k">=</span> <span class="pl-c1">Inv</span>(λ <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, p <span class="pl-k">=</span> <span class="pl-c1">2</span>, γ <span class="pl-k">=</span> <span class="pl-c1">0.8</span>)
<span class="pl-c1">lineplot</span>(t, <span class="pl-c1">s</span>.(t); width <span class="pl-k">=</span> <span class="pl-c1">15</span>, height <span class="pl-k">=</span> <span class="pl-c1">3</span>, border <span class="pl-k">=</span> <span class="pl-c1">:ascii</span>, labels <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
</td></tr>
<tr><td>
<p dir="auto"><a href="#" title="`Sin`"><code>Sin(;λ0, λ1, period)</code></a></p>
</td>
<td>
<p dir="auto">Sine function</p>
</td>
<td> Cyclic </td>
<td>
<p dir="auto">{cell=table, display=false}</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using UnicodePlots, ParameterSchedulers
t = 1:10 |&gt; collect
s = Sin(λ0 = 0.0, λ1 = 1.0, period = 2)
lineplot(t, s.(t); width = 15, height = 3, border = :ascii, labels = false)"><pre><span class="pl-k">using</span> UnicodePlots, ParameterSchedulers
t <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span> <span class="pl-k">|&gt;</span> collect
s <span class="pl-k">=</span> <span class="pl-c1">Sin</span>(λ0 <span class="pl-k">=</span> <span class="pl-c1">0.0</span>, λ1 <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, period <span class="pl-k">=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">lineplot</span>(t, <span class="pl-c1">s</span>.(t); width <span class="pl-k">=</span> <span class="pl-c1">15</span>, height <span class="pl-k">=</span> <span class="pl-c1">3</span>, border <span class="pl-k">=</span> <span class="pl-c1">:ascii</span>, labels <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
</td></tr>
<tr><td>
<p dir="auto"><a href="#" title="`SinDecay2`"><code>SinDecay2(;λ0, λ1, period)</code></a></p>
</td>
<td>
<p dir="auto">Sine function with half the amplitude every <code>period</code></p>
</td>
<td> Cyclic </td>
<td>
<p dir="auto">{cell=table, display=false}</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using UnicodePlots, ParameterSchedulers
t = 1:10 |&gt; collect
s = SinDecay2(λ0 = 0.0, λ1 = 1.0, period = 2)
lineplot(t, s.(t); width = 15, height = 3, border = :ascii, labels = false)"><pre><span class="pl-k">using</span> UnicodePlots, ParameterSchedulers
t <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span> <span class="pl-k">|&gt;</span> collect
s <span class="pl-k">=</span> <span class="pl-c1">SinDecay2</span>(λ0 <span class="pl-k">=</span> <span class="pl-c1">0.0</span>, λ1 <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, period <span class="pl-k">=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">lineplot</span>(t, <span class="pl-c1">s</span>.(t); width <span class="pl-k">=</span> <span class="pl-c1">15</span>, height <span class="pl-k">=</span> <span class="pl-c1">3</span>, border <span class="pl-k">=</span> <span class="pl-c1">:ascii</span>, labels <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
</td></tr>
<tr><td>
<p dir="auto"><a href="#" title="`SinExp`"><code>SinExp(;λ0, λ1, period)</code></a></p>
</td>
<td>
<p dir="auto">Sine function with exponential amplitude decay at rate <code>γ</code></p>
</td>
<td> Cyclic </td>
<td>
<p dir="auto">{cell=table, display=false}</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using UnicodePlots, ParameterSchedulers
t = 1:10 |&gt; collect
s = SinExp(λ0 = 0.0, λ1 = 1.0, period = 2, γ = 0.8)
lineplot(t, s.(t); width = 15, height = 3, border = :ascii, labels = false)"><pre><span class="pl-k">using</span> UnicodePlots, ParameterSchedulers
t <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span> <span class="pl-k">|&gt;</span> collect
s <span class="pl-k">=</span> <span class="pl-c1">SinExp</span>(λ0 <span class="pl-k">=</span> <span class="pl-c1">0.0</span>, λ1 <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, period <span class="pl-k">=</span> <span class="pl-c1">2</span>, γ <span class="pl-k">=</span> <span class="pl-c1">0.8</span>)
<span class="pl-c1">lineplot</span>(t, <span class="pl-c1">s</span>.(t); width <span class="pl-k">=</span> <span class="pl-c1">15</span>, height <span class="pl-k">=</span> <span class="pl-c1">3</span>, border <span class="pl-k">=</span> <span class="pl-c1">:ascii</span>, labels <span class="pl-k">=</span> <span class="pl-c1">false</span>)</pre></div>
</td></tr>
</tbody>
</table>
</article></div>