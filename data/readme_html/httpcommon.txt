<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-httpcommonjl" class="anchor" aria-hidden="true" href="#httpcommonjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>HttpCommon.jl</h1>
<p dir="auto"><a href="https://travis-ci.org/JuliaWeb/HttpCommon.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0bf5df623ee93260552451e37e038a91186997c727e31b8170d7d122e085c3df/68747470733a2f2f7472617669732d63692e6f72672f4a756c69615765622f48747470436f6d6d6f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaWeb/HttpCommon.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/JuliaWeb/HttpCommon.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a0994b47e42bc3b7440bd58fd3af1cc0f675db283e2aca769dfe8f71a6ca62dd/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69615765622f48747470436f6d6d6f6e2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaWeb/HttpCommon.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="http://pkg.julialang.org/?pkg=HttpCommon&amp;ver=0.3" rel="nofollow"><img src="https://camo.githubusercontent.com/3a267c44c7fe079a06083d9d82cb5dfcf63d8a2a55e22c0d79530dcfdadb189e/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f48747470436f6d6d6f6e5f302e332e737667" alt="HttpCommon" data-canonical-src="http://pkg.julialang.org/badges/HttpCommon_0.3.svg" style="max-width: 100%;"></a>
<a href="http://pkg.julialang.org/?pkg=HttpCommon&amp;ver=0.4" rel="nofollow"><img src="https://camo.githubusercontent.com/ba200a637a9ef7a4e65182b15f66ed607dfe2753d7013ae8bbb8bf9816478460/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f48747470436f6d6d6f6e5f302e342e737667" alt="HttpCommon" data-canonical-src="http://pkg.julialang.org/badges/HttpCommon_0.4.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><strong>Installation</strong>: <code>julia&gt; Pkg.add("HttpCommon")</code></p>
<p dir="auto">This package provides types and helper functions for dealing with the HTTP protocol in Julia:</p>
<ul dir="auto">
<li>Types to represent <code>Headers</code>, <code>Request</code>s, <code>Cookie</code>s, and <code>Response</code>s</li>
<li>A dictionary of <code>STATUS_CODES</code> that maps HTTP codes to descriptions</li>
<li>Utility functions  <code>escapeHTML</code>and  <code>parsequerystring</code></li>
</ul>
<h2 dir="auto"><a id="user-content-http-types" class="anchor" aria-hidden="true" href="#http-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>HTTP Types</h2>
<h4 dir="auto"><a id="user-content-headers" class="anchor" aria-hidden="true" href="#headers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>Headers</code></h4>
<p dir="auto"><code>Headers</code> represents the header fields for an HTTP request, and is type alias for <code>Dict{AbstractString,AbstractString}</code>.
There is a default constructor, <code>headers</code>, that produces a reasonable default set of headers:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Dict( &quot;Server&quot;           =&gt; &quot;Julia/$VERSION&quot;,
      &quot;Content-Type&quot;     =&gt; &quot;text/html; charset=utf-8&quot;,
      &quot;Content-Language&quot; =&gt; &quot;en&quot;,
      &quot;Date&quot;             =&gt; Dates.format(now(Dates.UTC), Dates.RFC1123Format) )"><pre><span class="pl-c1">Dict</span>( <span class="pl-s"><span class="pl-pds">"</span>Server<span class="pl-pds">"</span></span>           <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Julia/<span class="pl-v">$VERSION</span><span class="pl-pds">"</span></span>,
      <span class="pl-s"><span class="pl-pds">"</span>Content-Type<span class="pl-pds">"</span></span>     <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>text/html; charset=utf-8<span class="pl-pds">"</span></span>,
      <span class="pl-s"><span class="pl-pds">"</span>Content-Language<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>en<span class="pl-pds">"</span></span>,
      <span class="pl-s"><span class="pl-pds">"</span>Date<span class="pl-pds">"</span></span>             <span class="pl-k">=&gt;</span> Dates<span class="pl-k">.</span><span class="pl-c1">format</span>(<span class="pl-c1">now</span>(Dates<span class="pl-k">.</span>UTC), Dates<span class="pl-k">.</span>RFC1123Format) )</pre></div>
<h4 dir="auto"><a id="user-content-request" class="anchor" aria-hidden="true" href="#request"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>Request</code></h4>
<p dir="auto">A <code>Request</code> represents an HTTP request sent by a client to a server.
It has five fields:</p>
<ul dir="auto">
<li><code>method</code>: an HTTP methods string (e.g. "GET")</li>
<li><code>resource</code>: the resource requested (e.g. "/hello/world")</li>
<li><code>headers</code>: see <code>Headers</code> above</li>
<li><code>data</code>: the data in the request as a vector of bytes</li>
<li><code>uri</code>: additional details, normally not used</li>
</ul>
<h4 dir="auto"><a id="user-content-cookie" class="anchor" aria-hidden="true" href="#cookie"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>Cookie</code></h4>
<p dir="auto">A <code>Cookie</code> represents an HTTP cookie. It has three fields:
<code>name</code> and <code>value</code> are strings, and <code>attrs</code> is dictionary
of pairs of strings.</p>
<h4 dir="auto"><a id="user-content-response" class="anchor" aria-hidden="true" href="#response"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>Response</code></h4>
<p dir="auto">A <code>Response</code> represents an HTTP response sent to a client by a server.
It has six fields:</p>
<ul dir="auto">
<li><code>status</code>: HTTP status code (see <code>STATUS_CODES</code>) [default: <code>200</code>]</li>
<li><code>headers</code>: <code>Headers</code> [default: <code>HttpCommmon.headers()</code>]</li>
<li><code>cookies</code>: Dictionary of strings =&gt; <code>Cookie</code>s</li>
<li><code>data</code>: the request data as a vector of bytes [default: <code>UInt8[]</code>]</li>
<li><code>finished</code>: <code>true</code> if the <code>Reponse</code> is valid, meaning that it can be
converted to an actual HTTP response [default: <code>false</code>]</li>
<li><code>requests</code>: the history of requests that generated the response.
Can be greater than one if a redirect was involved.</li>
</ul>
<p dir="auto"><code>Response</code> has many constructors - use <code>methods(Response)</code> for full list.</p>
<h2 dir="auto"><a id="user-content-constants" class="anchor" aria-hidden="true" href="#constants"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Constants</h2>
<h4 dir="auto"><a id="user-content-status_codes" class="anchor" aria-hidden="true" href="#status_codes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>STATUS_CODES</code></h4>
<p dir="auto"><code>STATUS_CODES</code> is a dictionary (<code>Int =&gt; AbstractString</code>) that maps all the
status codes defined in RFC's to their descriptions, e.g.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="STATUS_CODES[200] # =&gt; &quot;OK&quot;
STATUS_CODES[404] # =&gt; &quot;Not Found&quot;
STATUS_CODES[418] # =&gt; &quot;I'm a teapot&quot;
STATUS_CODES[500] # =&gt; &quot;Internal Server Error&quot;"><pre>STATUS_CODES[<span class="pl-c1">200</span>] <span class="pl-c"><span class="pl-c">#</span> =&gt; "OK"</span>
STATUS_CODES[<span class="pl-c1">404</span>] <span class="pl-c"><span class="pl-c">#</span> =&gt; "Not Found"</span>
STATUS_CODES[<span class="pl-c1">418</span>] <span class="pl-c"><span class="pl-c">#</span> =&gt; "I'm a teapot"</span>
STATUS_CODES[<span class="pl-c1">500</span>] <span class="pl-c"><span class="pl-c">#</span> =&gt; "Internal Server Error"</span></pre></div>
<h2 dir="auto"><a id="user-content-utility-functions" class="anchor" aria-hidden="true" href="#utility-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Utility functions</h2>
<h4 dir="auto"><a id="user-content-escapehtmliabstractstring" class="anchor" aria-hidden="true" href="#escapehtmliabstractstring"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>escapeHTML(i::AbstractString)</code></h4>
<p dir="auto">Returns a string with special HTML characters escaped: <code>&amp;, &lt;, &gt;, ", '</code></p>
<h4 dir="auto"><a id="user-content-parsequerystringqueryabstractstring" class="anchor" aria-hidden="true" href="#parsequerystringqueryabstractstring"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>parsequerystring(query::AbstractString)</code></h4>
<p dir="auto">Convert a valid querystring to a Dict:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="q = &quot;foo=bar&amp;baz=%3Ca%20href%3D%27http%3A%2F%2Fwww.hackershool.com%27%3Ehello%20world%21%3C%2Fa%3E&quot;
parsequerystring(q)
# Dict{String,String} with 2 entries:
#   &quot;baz&quot; =&gt; &quot;&lt;a href='http://www.hackershool.com'&gt;hello world!&lt;/a&gt;&quot;
#   &quot;foo&quot; =&gt; &quot;bar&quot;"><pre>q <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>foo=bar&amp;baz=%3Ca%20href%3D%27http%3A%2F%2Fwww.hackershool.com%27%3Ehello%20world%21%3C%2Fa%3E<span class="pl-pds">"</span></span>
<span class="pl-c1">parsequerystring</span>(q)
<span class="pl-c"><span class="pl-c">#</span> Dict{String,String} with 2 entries:</span>
<span class="pl-c"><span class="pl-c">#</span>   "baz" =&gt; "&lt;a href='http://www.hackershool.com'&gt;hello world!&lt;/a&gt;"</span>
<span class="pl-c"><span class="pl-c">#</span>   "foo" =&gt; "bar"</span></pre></div>
<hr>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content=":::::::::::::
::         ::
:: Made at ::
::         ::
:::::::::::::
     ::
Hacker School
:::::::::::::"><pre class="notranslate"><code>:::::::::::::
::         ::
:: Made at ::
::         ::
:::::::::::::
     ::
Hacker School
:::::::::::::
</code></pre></div>
</article></div>