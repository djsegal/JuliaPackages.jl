<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-httpcommonjl" class="anchor" aria-hidden="true" href="#httpcommonjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>HttpCommon.jl</h1>
<p><a href="https://travis-ci.org/JuliaWeb/HttpCommon.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b285d7b771be2e8ebe54cf52cf770c3b9dd12179/68747470733a2f2f7472617669732d63692e6f72672f4a756c69615765622f48747470436f6d6d6f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaWeb/HttpCommon.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaWeb/HttpCommon.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/dd894cf486f1bdabf2bbcaf135c8c4299bc7a150/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69615765622f48747470436f6d6d6f6e2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaWeb/HttpCommon.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="http://pkg.julialang.org/?pkg=HttpCommon&amp;ver=0.3" rel="nofollow"><img src="https://camo.githubusercontent.com/422edfec8e4a5161281953dcb9096d96c63b64a9/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f48747470436f6d6d6f6e5f302e332e737667" alt="HttpCommon" data-canonical-src="http://pkg.julialang.org/badges/HttpCommon_0.3.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=HttpCommon&amp;ver=0.4" rel="nofollow"><img src="https://camo.githubusercontent.com/2db08624b61fe6334afb85d5533068b7dc0dec42/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f48747470436f6d6d6f6e5f302e342e737667" alt="HttpCommon" data-canonical-src="http://pkg.julialang.org/badges/HttpCommon_0.4.svg" style="max-width:100%;"></a></p>
<p><strong>Installation</strong>: <code>julia&gt; Pkg.add("HttpCommon")</code></p>
<p>This package provides types and helper functions for dealing with the HTTP protocol in Julia:</p>
<ul>
<li>Types to represent <code>Headers</code>, <code>Request</code>s, <code>Cookie</code>s, and <code>Response</code>s</li>
<li>A dictionary of <code>STATUS_CODES</code> that maps HTTP codes to descriptions</li>
<li>Utility functions  <code>escapeHTML</code>and  <code>parsequerystring</code></li>
</ul>
<h2><a id="user-content-http-types" class="anchor" aria-hidden="true" href="#http-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>HTTP Types</h2>
<h4><a id="user-content-headers" class="anchor" aria-hidden="true" href="#headers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>Headers</code></h4>
<p><code>Headers</code> represents the header fields for an HTTP request, and is type alias for <code>Dict{AbstractString,AbstractString}</code>.
There is a default constructor, <code>headers</code>, that produces a reasonable default set of headers:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">Dict</span>( <span class="pl-s"><span class="pl-pds">"</span>Server<span class="pl-pds">"</span></span>           <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Julia/<span class="pl-v">$VERSION</span><span class="pl-pds">"</span></span>,
      <span class="pl-s"><span class="pl-pds">"</span>Content-Type<span class="pl-pds">"</span></span>     <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>text/html; charset=utf-8<span class="pl-pds">"</span></span>,
      <span class="pl-s"><span class="pl-pds">"</span>Content-Language<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>en<span class="pl-pds">"</span></span>,
      <span class="pl-s"><span class="pl-pds">"</span>Date<span class="pl-pds">"</span></span>             <span class="pl-k">=&gt;</span> Dates<span class="pl-k">.</span><span class="pl-c1">format</span>(<span class="pl-c1">now</span>(Dates<span class="pl-k">.</span>UTC), Dates<span class="pl-k">.</span>RFC1123Format) )</pre></div>
<h4><a id="user-content-request" class="anchor" aria-hidden="true" href="#request"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>Request</code></h4>
<p>A <code>Request</code> represents an HTTP request sent by a client to a server.
It has five fields:</p>
<ul>
<li><code>method</code>: an HTTP methods string (e.g. "GET")</li>
<li><code>resource</code>: the resource requested (e.g. "/hello/world")</li>
<li><code>headers</code>: see <code>Headers</code> above</li>
<li><code>data</code>: the data in the request as a vector of bytes</li>
<li><code>uri</code>: additional details, normally not used</li>
</ul>
<h4><a id="user-content-cookie" class="anchor" aria-hidden="true" href="#cookie"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>Cookie</code></h4>
<p>A <code>Cookie</code> represents an HTTP cookie. It has three fields:
<code>name</code> and <code>value</code> are strings, and <code>attrs</code> is dictionary
of pairs of strings.</p>
<h4><a id="user-content-response" class="anchor" aria-hidden="true" href="#response"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>Response</code></h4>
<p>A <code>Response</code> represents an HTTP response sent to a client by a server.
It has six fields:</p>
<ul>
<li><code>status</code>: HTTP status code (see <code>STATUS_CODES</code>) [default: <code>200</code>]</li>
<li><code>headers</code>: <code>Headers</code> [default: <code>HttpCommmon.headers()</code>]</li>
<li><code>cookies</code>: Dictionary of strings =&gt; <code>Cookie</code>s</li>
<li><code>data</code>: the request data as a vector of bytes [default: <code>UInt8[]</code>]</li>
<li><code>finished</code>: <code>true</code> if the <code>Reponse</code> is valid, meaning that it can be
converted to an actual HTTP response [default: <code>false</code>]</li>
<li><code>requests</code>: the history of requests that generated the response.
Can be greater than one if a redirect was involved.</li>
</ul>
<p><code>Response</code> has many constructors - use <code>methods(Response)</code> for full list.</p>
<h2><a id="user-content-constants" class="anchor" aria-hidden="true" href="#constants"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Constants</h2>
<h4><a id="user-content-status_codes" class="anchor" aria-hidden="true" href="#status_codes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>STATUS_CODES</code></h4>
<p><code>STATUS_CODES</code> is a dictionary (<code>Int =&gt; AbstractString</code>) that maps all the
status codes defined in RFC's to their descriptions, e.g.</p>
<div class="highlight highlight-source-julia"><pre>STATUS_CODES[<span class="pl-c1">200</span>] <span class="pl-c"><span class="pl-c">#</span> =&gt; "OK"</span>
STATUS_CODES[<span class="pl-c1">404</span>] <span class="pl-c"><span class="pl-c">#</span> =&gt; "Not Found"</span>
STATUS_CODES[<span class="pl-c1">418</span>] <span class="pl-c"><span class="pl-c">#</span> =&gt; "I'm a teapot"</span>
STATUS_CODES[<span class="pl-c1">500</span>] <span class="pl-c"><span class="pl-c">#</span> =&gt; "Internal Server Error"</span></pre></div>
<h2><a id="user-content-utility-functions" class="anchor" aria-hidden="true" href="#utility-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Utility functions</h2>
<h4><a id="user-content-escapehtmliabstractstring" class="anchor" aria-hidden="true" href="#escapehtmliabstractstring"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>escapeHTML(i::AbstractString)</code></h4>
<p>Returns a string with special HTML characters escaped: <code>&amp;, &lt;, &gt;, ", '</code></p>
<h4><a id="user-content-parsequerystringqueryabstractstring" class="anchor" aria-hidden="true" href="#parsequerystringqueryabstractstring"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>parsequerystring(query::AbstractString)</code></h4>
<p>Convert a valid querystring to a Dict:</p>
<div class="highlight highlight-source-julia"><pre>q <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>foo=bar&amp;baz=%3Ca%20href%3D%27http%3A%2F%2Fwww.hackershool.com%27%3Ehello%20world%21%3C%2Fa%3E<span class="pl-pds">"</span></span>
<span class="pl-c1">parsequerystring</span>(q)
<span class="pl-c"><span class="pl-c">#</span> Dict{String,String} with 2 entries:</span>
<span class="pl-c"><span class="pl-c">#</span>   "baz" =&gt; "&lt;a href='http://www.hackershool.com'&gt;hello world!&lt;/a&gt;"</span>
<span class="pl-c"><span class="pl-c">#</span>   "foo" =&gt; "bar"</span></pre></div>
<hr>
<pre><code>:::::::::::::
::         ::
:: Made at ::
::         ::
:::::::::::::
     ::
Hacker School
:::::::::::::
</code></pre>
</article></div>