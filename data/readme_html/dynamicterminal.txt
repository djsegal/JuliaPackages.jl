<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-dynamicterminaljl" class="anchor" aria-hidden="true" href="#dynamicterminaljl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>DynamicTerminal.jl</h1>
<p>Very minimal functionality for overwriting
multiple lines of the terminal in julia.</p>
<p>This is basically a result of tearing down the insides of the TerminalMenues
module in the standard REPL library since this was the best example i could
find of dynamically updating the terminal over multiple lines, that did not
rely on external dependencies (such as ncurses).</p>
<p>Examle of usage can be found in examples (comming soon) and my solution of
<a href="https://github.com/MarcusTL12/JuliaKalender/blob/master/AdventOfCode2019/13/main.jl">adventofcode 2019 day 13 part 2</a></p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>The general gist of how to use this package boils down to the <code>showandreset</code>
function.</p>
<p>Here is a quick example:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> This whole package is built around using a single IOBuffer (or some other</span>
<span class="pl-c"><span class="pl-c">#</span> similar structure)</span>
buff <span class="pl-k">=</span> <span class="pl-c1">IOBuffer</span>()

<span class="pl-c1">println</span>(buff, <span class="pl-s"><span class="pl-pds">"</span>Some<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>stuff<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> Print some stuff to the buffer</span>

<span class="pl-c"><span class="pl-c">#</span> This now empties the buffer, writes the contents to the stdout and counts how</span>
<span class="pl-c"><span class="pl-c">#</span> many lines was just printed and prints a set of special character to the</span>
<span class="pl-c"><span class="pl-c">#</span> buffer. This way the buffer "knows" how many lines to move the cursor up</span>
<span class="pl-c"><span class="pl-c">#</span> to be at the start of the block it just printed.</span>
<span class="pl-c1">showandreset</span>(buff)

<span class="pl-c"><span class="pl-c">#</span> Print some other stuff to the console</span>
<span class="pl-c1">println</span>(
    buff,
    <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">    Some</span>
<span class="pl-s">    other</span>
<span class="pl-s">    stuff</span>
<span class="pl-s">    <span class="pl-pds">"""</span></span>
)

<span class="pl-c1">sleep</span>(<span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">#</span> To add some suspense</span>

<span class="pl-c"><span class="pl-c">#</span> Empties and prints to stdout as before, which now includes the special</span>
<span class="pl-c"><span class="pl-c">#</span> characters from before, moving the cursor up to the top and overwrites</span>
<span class="pl-c"><span class="pl-c">#</span> the previously printed messages.</span>
<span class="pl-c1">showandreset</span>(buff)
</pre></div>
</article></div>