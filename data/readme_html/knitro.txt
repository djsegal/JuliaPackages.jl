<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-knitrojl" class="anchor" aria-hidden="true" href="#knitrojl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>KNITRO.jl</h1>
<p><a href="https://juliaopt.github.io/KNITRO.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>The KNITRO.jl package provides an interface for using the <a href="https://www.artelys.com/knitro" rel="nofollow">Artelys Knitro
solver</a> from
<a href="http://julialang.org/" rel="nofollow">Julia</a>. You cannot use KNITRO.jl without having
purchased and installed a copy of Knitro from <a href="https://www.artelys.com/knitro" rel="nofollow">Artelys</a>.
This package is available free of charge and in no way replaces or alters any
functionality of Artelys Knitro solver.</p>
<p>Documentation is available at
<a href="https://juliaopt.github.io/KNITRO.jl/latest" rel="nofollow">https://juliaopt.github.io/KNITRO.jl/latest</a>.</p>
<p>Note that the current package provides a wrapper both for the new Knitro's API
(whose functions start by <code>KN_</code>) and the deprecated Knitro's API (whose functions
start by <code>KTR_</code>). We recommend using the latest version of Knitro available and
the new API to get access to all of the new functionalities from the solver.
Using the new <code>KN_</code> API requires Knitro &gt;= <code>v11.0</code>.
Refer to <a href="https://www.artelys.com/tools/knitro_doc/3_referenceManual/callableLibraryAPI.html" rel="nofollow">Knitro documentation</a>
for a full specification of the Knitro's API.</p>
<p><em>The Artelys Knitro wrapper for Julia is supported by the JuliaOpt
community (which originates the development of this package) and
Artelys. Feel free to contact <a href="mailto:support-knitro@artelys.com">Artelys support</a> if you encounter
any problem with this interface or the solver.</em></p>
<h1><a id="user-content-mathoptinterface-interface" class="anchor" aria-hidden="true" href="#mathoptinterface-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>MathOptInterface Interface</h1>
<p>KNITRO.jl now supports <a href="https://github.com/JuliaOpt/MathOptInterface.jl">MathOptInterface</a>
and <a href="https://github.com/JuliaOpt/JuMP.jl">JuMP 0.19</a>. The <code>MathProgBase</code> interface has been deprecated.</p>
<p>Here's an example showcasing various features.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> JuMP, KNITRO
m <span class="pl-k">=</span> <span class="pl-c1">Model</span>(<span class="pl-c1">with_optimizer</span>(KNITRO<span class="pl-k">.</span>Optimizer, honorbnds <span class="pl-k">=</span> <span class="pl-c1">1</span>, outlev <span class="pl-k">=</span> <span class="pl-c1">1</span>, algorithm <span class="pl-k">=</span> <span class="pl-c1">4</span>)) <span class="pl-c"><span class="pl-c">#</span> (1)</span>
<span class="pl-c1">@variable</span>(m, x, start <span class="pl-k">=</span> <span class="pl-c1">1.2</span>) <span class="pl-c"><span class="pl-c">#</span> (2)</span>
<span class="pl-c1">@variable</span>(m, y)
<span class="pl-c1">@variable</span>(m, z)
<span class="pl-c1">@variable</span>(m, <span class="pl-c1">4.0</span> <span class="pl-k">&lt;=</span> u <span class="pl-k">&lt;=</span> <span class="pl-c1">4.0</span>) <span class="pl-c"><span class="pl-c">#</span> (3)</span>

<span class="pl-en">mysquare</span>(x) <span class="pl-k">=</span> x<span class="pl-k">^</span><span class="pl-c1">2</span> 
<span class="pl-c1">register</span>(m, <span class="pl-c1">:mysquare</span>, <span class="pl-c1">1</span>, mysquare, autodiff <span class="pl-k">=</span> <span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span> (4)</span>

<span class="pl-c1">@NLobjective</span>(m, Min, <span class="pl-c1">mysquare</span>(<span class="pl-c1">1</span> <span class="pl-k">-</span> x) <span class="pl-k">+</span> <span class="pl-c1">100</span> <span class="pl-k">*</span> (y <span class="pl-k">-</span> x<span class="pl-k">^</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> u) 
<span class="pl-c1">@constraint</span>(m, z <span class="pl-k">==</span> x <span class="pl-k">+</span> y)

<span class="pl-c1">optimize!</span>(m)
(<span class="pl-c1">value</span>(x), <span class="pl-c1">value</span>(y), <span class="pl-c1">value</span>(z), <span class="pl-c1">value</span>(u), <span class="pl-c1">objective_value</span>(m), <span class="pl-c1">termination_status</span>(m)) <span class="pl-c"><span class="pl-c">#</span> (5)</span></pre></div>
<ol>
<li>Setting <code>KNITRO</code> options.</li>
<li>Setting initial conditions on variables.</li>
<li>Setting box constraints on variables.</li>
<li>Registering a user-defined function for use in the problem.</li>
<li>Querying various results from the solver.</li>
</ol>
<h1><a id="user-content-low-level-wrapper" class="anchor" aria-hidden="true" href="#low-level-wrapper"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Low-level wrapper</h1>
<p>KNITRO.jl implements most of Knitro's functionalities.
If you aim at using part of Knitro's API that are not implemented
in the MathOptInterface/JuMP ecosystem, you can refer to the low
level API which wraps directly Knitro's C API (whose templates
are specified in the file <code>knitro.h</code>).</p>
<p>Extensive examples using the C wrapper can be found in <code>examples/</code>.</p>
<h1><a id="user-content-ampl-wrapper" class="anchor" aria-hidden="true" href="#ampl-wrapper"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Ampl wrapper</h1>
<p>The package <a href="https://github.com/JuliaOpt/AmplNLWriter.jl%22">AmplNLWriter.jl</a>
allows to to call <code>knitroampl</code> through Julia to solve JuMP's optimization
models.</p>
<p>The usage is as follow:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> JuMP, KNITRO, AmplNLWriter

model <span class="pl-k">=</span> <span class="pl-c1">with_optimizer</span>(AmplNLWriter<span class="pl-k">.</span>Optimizer, KNITRO<span class="pl-k">.</span>amplexe, [<span class="pl-s"><span class="pl-pds">"</span>outlev=3<span class="pl-pds">"</span></span>])
</pre></div>
<p>Note that supports is still experimental for JuMP 0.19.</p>
</article></div>