<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-reexport" class="anchor" aria-hidden="true" href="#reexport"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reexport</h1>
<p dir="auto"><a href="https://github.com/simonster/Reexport.jl/actions?query=workflow%3ACI+branch%3Amaster"><img src="https://github.com/simonster/Reexport.jl/workflows/CI/badge.svg" alt="Build status" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto">Maybe you have a module <code>X</code> that depends on module <code>Y</code> and you want <code>using X</code> to pull in all of the symbols from <code>Y</code>. Maybe you have an outer module <code>A</code> with an inner module <code>B</code>, and you want to export all of the symbols in <code>B</code> from <code>A</code>. It would be nice to have this functionality built into Julia, but we have yet to reach an agreement on what it should look like (see <a href="https://github.com/JuliaLang/julia/issues/1986" data-hovercard-type="issue" data-hovercard-url="/JuliaLang/julia/issues/1986/hovercard">JuliaLang/julia#1986</a>). This short macro is a stopgap we have a better solution.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto"><code>@reexport using &lt;modules&gt;</code> calls <code>using &lt;modules&gt;</code> and also re-exports their symbols:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="module Y
    ...
end

module Z
    ...
end

module X
    using Reexport
    @reexport using Y
    # all of Y's exported symbols available here
    @reexport using Z: x, y
    # Z's x and y symbols available here
end

using X
# all of Y's exported symbols and Z's x and y also available here"><pre><span class="pl-k">module</span> Y
    <span class="pl-k">...</span>
<span class="pl-k">end</span>

<span class="pl-k">module</span> Z
    <span class="pl-k">...</span>
<span class="pl-k">end</span>

<span class="pl-k">module</span> X
    <span class="pl-k">using</span> Reexport
    <span class="pl-c1">@reexport</span> <span class="pl-k">using</span> Y
    <span class="pl-c"><span class="pl-c">#</span> all of Y's exported symbols available here</span>
    <span class="pl-c1">@reexport</span> <span class="pl-k">using</span> Z<span class="pl-k">:</span> x, y
    <span class="pl-c"><span class="pl-c">#</span> Z's x and y symbols available here</span>
<span class="pl-k">end</span>

<span class="pl-k">using</span> X
<span class="pl-c"><span class="pl-c">#</span> all of Y's exported symbols and Z's x and y also available here</span></pre></div>
<p dir="auto"><code>@reexport import &lt;module&gt;.&lt;name&gt;</code> or <code>@reexport import &lt;module&gt;: &lt;name&gt;</code> exports <code>&lt;name&gt;</code> from <code>&lt;module&gt;</code> after importing it.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="module Y
    ...
end

module Z
    ...
end

module X
    using Reexport
    @reexport import Y
    # Only `Y` itself is available here
    @reexport import Z: x, y
    # Z's x and y symbols available here
end

using X
# Y (but not its exported names) and Z's x and y are available here."><pre><span class="pl-k">module</span> Y
    <span class="pl-k">...</span>
<span class="pl-k">end</span>

<span class="pl-k">module</span> Z
    <span class="pl-k">...</span>
<span class="pl-k">end</span>

<span class="pl-k">module</span> X
    <span class="pl-k">using</span> Reexport
    <span class="pl-c1">@reexport</span> <span class="pl-k">import</span> Y
    <span class="pl-c"><span class="pl-c">#</span> Only `Y` itself is available here</span>
    <span class="pl-c1">@reexport</span> <span class="pl-k">import</span> Z<span class="pl-k">:</span> x, y
    <span class="pl-c"><span class="pl-c">#</span> Z's x and y symbols available here</span>
<span class="pl-k">end</span>

<span class="pl-k">using</span> X
<span class="pl-c"><span class="pl-c">#</span> Y (but not its exported names) and Z's x and y are available here.</span></pre></div>
<p dir="auto"><code>@reexport module &lt;modulename&gt; ... end</code> defines <code>module &lt;modulename&gt;</code> and also re-exports its symbols:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="module A
    using Reexport
    @reexport module B
    	...
    end
    # all of B's exported symbols available here
end

using A
# all of B's exported symbols available here"><pre><span class="pl-k">module</span> A
    <span class="pl-k">using</span> Reexport
    <span class="pl-c1">@reexport</span> <span class="pl-k">module</span> B
    	<span class="pl-k">...</span>
    <span class="pl-k">end</span>
    <span class="pl-c"><span class="pl-c">#</span> all of B's exported symbols available here</span>
<span class="pl-k">end</span>

<span class="pl-k">using</span> A
<span class="pl-c"><span class="pl-c">#</span> all of B's exported symbols available here</span></pre></div>
<p dir="auto"><code>@reexport @another_macro &lt;import or using expression&gt;</code> first expands <code>@another_macro</code> on the expression, making <code>@reexport</code> with other macros.</p>
<p dir="auto"><code>@reexport begin ... end</code> will apply the reexport macro to every expression in the block.</p>
</article></div>