<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://korsbo.github.io/Latexify.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://korsbo.github.io/Latexify.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/korsbo/Latexify.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/aca601880f63e2a7baa2040ef2f14185d8780629696249f663c536fd9ec79ef0/68747470733a2f2f636f6465636f762e696f2f67682f6b6f7273626f2f4c617465786966792e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/korsbo/Latexify.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/korsbo/Latexify.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/47acb1df07602ee4a4d0828d3f68d91b8c8290c4849d04a3829923aac92dd545/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6b6f7273626f2f4c617465786966792e6a6c2f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/korsbo/Latexify.jl/badge.svg" style="max-width: 100%;"></a>
<a href="https://pkgs.genieframework.com?packages=Latexify" rel="nofollow"><img src="https://camo.githubusercontent.com/31631cc58dc97b51ddabc4ce331468c6be19cc2ed4b8a418784a374139d4332f/68747470733a2f2f736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f706b67732e67656e69656672616d65776f726b2e636f6d2f6170692f76312f62616467652f4c61746578696679" alt="Genie Downloads" data-canonical-src="https://shields.io/endpoint?url=https://pkgs.genieframework.com/api/v1/badge/Latexify" style="max-width: 100%;"></a>.</p>
<h1 dir="auto"><a id="user-content-latexifyjl" class="anchor" aria-hidden="true" href="#latexifyjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Latexify.jl</h1>
<p dir="auto">This is a package for generating LaTeX maths from julia objects.</p>
<p dir="auto">This package utilises Julias
<a href="https://en.wikipedia.org/wiki/Homoiconicity" rel="nofollow">homoiconicity</a> to convert
expressions to LaTeX-formatted strings.  Latexify.jl supplies functionalities
for converting a range of different Julia objects, including:</p>
<ul dir="auto">
<li>Expressions,</li>
<li>Strings,</li>
<li>Numbers (including rationals and complex),</li>
<li>Symbolic expressions from SymEngine.jl,</li>
<li>ParameterizedFunctions and ReactionNetworks from DifferentialEquations.jl,</li>
<li>Other types for which a user recipe has been defined</li>
</ul>
<p dir="auto">as well as arrays or dicts of supported types.</p>
<h2 dir="auto"><a id="user-content-recipes" class="anchor" aria-hidden="true" href="#recipes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Recipes</h2>
<p dir="auto">To extend Latexify to work with your own type, you define a recipe using the
<code>@latexrecipe</code> macro. See the documentation.</p>
<h3 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h3>
<h4 dir="auto"><a id="user-content-latexifying-expressions" class="anchor" aria-hidden="true" href="#latexifying-expressions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>latexifying expressions</h4>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Latexify
ex = :(x/(y+x)^2)
latexify(ex)"><pre><span class="pl-k">using</span> Latexify
ex <span class="pl-k">=</span> :(x<span class="pl-k">/</span>(y<span class="pl-k">+</span>x)<span class="pl-k">^</span><span class="pl-c1">2</span>)
<span class="pl-c1">latexify</span>(ex)</pre></div>
<p dir="auto">This generates a LaTeXString (from
<a href="https://github.com/stevengj/LaTeXStrings.jl">LaTeXStrings.jl</a>) which, when
printed looks like:</p>
<div class="highlight highlight-text-tex-latex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$\frac{x}{\left( y + x \right)^{2}}$"><pre><span class="pl-s"><span class="pl-pds">$</span><span class="pl-c1">\frac</span>{x}{<span class="pl-c1">\left</span>( y + x <span class="pl-c1">\right</span>)^{2}}<span class="pl-pds">$</span></span></pre></div>
<p dir="auto">And when this LaTeXString is displayed in an environment which supports the
tex/latex MIME type (Jupyter and Pluto notebooks, Jupyterlab and Hydrogen for
Atom) it will automatically render as:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="/assets/demo_fraction.png"><img src="/assets/demo_fraction.png" alt="fraction" style="max-width: 100%;"></a></p>
<h4 dir="auto"><a id="user-content-latexifying-other-things" class="anchor" aria-hidden="true" href="#latexifying-other-things"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>latexifying other things</h4>
<p dir="auto">Latexify.jl is equipped to convert a whole range of types to latex formatted
maths. This includes primitive types such as <code>Symbol</code>s and <code>Complex</code>, but also
of containers such as <code>Array</code>s and <code>Dict</code>s.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Latexify
print(latexify(&quot;x+y/(b-2)^2&quot;))"><pre><span class="pl-k">using</span> Latexify
<span class="pl-c1">print</span>(<span class="pl-c1">latexify</span>(<span class="pl-s"><span class="pl-pds">"</span>x+y/(b-2)^2<span class="pl-pds">"</span></span>))</pre></div>
<p dir="auto">outputs:</p>
<div class="highlight highlight-text-tex-latex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$x + \frac{y}{\left( b - 2 \right)^{2}}$"><pre><span class="pl-s"><span class="pl-pds">$</span>x + <span class="pl-c1">\frac</span>{y}{<span class="pl-c1">\left</span>( b - 2 <span class="pl-c1">\right</span>)^{2}}<span class="pl-pds">$</span></span></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="arr = [&quot;x/y&quot; 3//7 2+3im; 1 :P_x :(gamma(3))]
latexify(arr)"><pre>arr <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>x/y<span class="pl-pds">"</span></span> <span class="pl-c1">3</span><span class="pl-k">//</span><span class="pl-c1">7</span> <span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-c1">3im</span>; <span class="pl-c1">1</span> <span class="pl-c1">:P_x</span> :(<span class="pl-c1">gamma</span>(<span class="pl-c1">3</span>))]
<span class="pl-c1">latexify</span>(arr)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="/assets/demo_matrix.png"><img src="/assets/demo_matrix.png" alt="matrix" style="max-width: 100%;"></a></p>
<p dir="auto">The GitHub website does not really support rendering of equations in the README
file, so I therefore refer you to the documentation for more info/examples.</p>
<h4 dir="auto"><a id="user-content-latexifying-custom-types" class="anchor" aria-hidden="true" href="#latexifying-custom-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>latexifying custom types</h4>
<p dir="auto">You can add support for a type via <code>@latexrecipe</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Latexify
struct Ket{T}
    x::T
end
@latexrecipe function f(x::Ket)
    return Expr(:latexifymerge, &quot;\\left|&quot;, x.x, &quot;\\right&gt;&quot;)
end
latexify(:($(Ket(:a)) + $(Ket(:b))))"><pre><span class="pl-k">using</span> Latexify
<span class="pl-k">struct</span> Ket{T}
    x<span class="pl-k">::</span><span class="pl-c1">T</span>
<span class="pl-k">end</span>
<span class="pl-c1">@latexrecipe</span> <span class="pl-k">function</span> <span class="pl-en">f</span>(x<span class="pl-k">::</span><span class="pl-c1">Ket</span>)
    <span class="pl-k">return</span> <span class="pl-c1">Expr</span>(<span class="pl-c1">:latexifymerge</span>, <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\\</span>left|<span class="pl-pds">"</span></span>, x<span class="pl-k">.</span>x, <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\\</span>right&gt;<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>
<span class="pl-c1">latexify</span>(:(<span class="pl-k">$</span>(<span class="pl-c1">Ket</span>(<span class="pl-c1">:a</span>)) <span class="pl-k">+</span> <span class="pl-k">$</span>(<span class="pl-c1">Ket</span>(<span class="pl-c1">:b</span>))))</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="/assets/demo_ket.png"><img src="/assets/demo_ket.png" alt="ket" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-use-with-differentialequationsjl" class="anchor" aria-hidden="true" href="#use-with-differentialequationsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Use with DifferentialEquations.jl</h3>
<p dir="auto">The <a href="http://docs.juliadiffeq.org/stable/index.html" rel="nofollow">DifferentialEquations.jl</a>
suite has some nifty tools for generating differential equations.
One of them is
<a href="https://github.com/JuliaDiffEq/ParameterizedFunctions.jl">ParameterizedFunctions</a>
which allows you to type in an ODE in something which looks very much like just
plain mathematics.
The ability to latexify such ODEs is pretty much what lured me to create this
package.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ParameterizedFunctions
using Latexify

f = @ode_def positiveFeedback begin
    dx = v*y^n/(k^n+y^n) - x
    dy = x/(k_2+x) - y
end v n k k_2

latexify(f)"><pre><span class="pl-k">using</span> ParameterizedFunctions
<span class="pl-k">using</span> Latexify

f <span class="pl-k">=</span> <span class="pl-c1">@ode_def</span> positiveFeedback <span class="pl-k">begin</span>
    dx <span class="pl-k">=</span> v<span class="pl-k">*</span>y<span class="pl-k">^</span>n<span class="pl-k">/</span>(k<span class="pl-k">^</span>n<span class="pl-k">+</span>y<span class="pl-k">^</span>n) <span class="pl-k">-</span> x
    dy <span class="pl-k">=</span> x<span class="pl-k">/</span>(k_2<span class="pl-k">+</span>x) <span class="pl-k">-</span> y
<span class="pl-k">end</span> v n k k_2

<span class="pl-c1">latexify</span>(f)</pre></div>
<p dir="auto">outputs:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="/assets/ode_positive_feedback.png"><img src="/assets/ode_positive_feedback.png" alt="positiveFeedback" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/JuliaDiffEq/DiffEqBiological.jl">DiffEqBiological.jl</a>
provides another cool domain-specific language which allows you to generate
equations using a chemical arrow notation.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DiffEqBiological
using Latexify

rn = @reaction_network demoNetwork begin
  (r_bind, r_unbind), A + B ↔ C
  Hill(C, v, k, n), 0 --&gt; X
  d_x, X --&gt; 0
end r_bind r_unbind v k n d_x

latexify(rn)"><pre><span class="pl-k">using</span> DiffEqBiological
<span class="pl-k">using</span> Latexify

rn <span class="pl-k">=</span> <span class="pl-c1">@reaction_network</span> demoNetwork <span class="pl-k">begin</span>
  (r_bind, r_unbind), A <span class="pl-k">+</span> B ↔ C
  <span class="pl-c1">Hill</span>(C, v, k, n), <span class="pl-c1">0</span> <span class="pl-k">--&gt;</span> X
  d_x, X <span class="pl-k">--&gt;</span> <span class="pl-c1">0</span>
<span class="pl-k">end</span> r_bind r_unbind v k n d_x

<span class="pl-c1">latexify</span>(rn)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="/assets/demo_rn.png"><img src="/assets/demo_rn.png" alt="positiveFeedback" style="max-width: 100%;"></a></p>
<p dir="auto">Or you can output the arrow notation directly to latex:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="latexify(rn; env=:arrow)"><pre><span class="pl-c1">latexify</span>(rn; env<span class="pl-k">=</span><span class="pl-c1">:arrow</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="/assets/demo_rn_arrow.png"><img src="/assets/demo_rn_arrow.png" alt="positiveFeedback" style="max-width: 100%;"></a></p>
<p dir="auto">There are more stuff that you can do, but for that I will refer you to the
<a href="https://korsbo.github.io/Latexify.jl/stable" rel="nofollow">docs</a>.</p>
<h3 dir="auto"><a id="user-content-display-equations-in-a-terminal" class="anchor" aria-hidden="true" href="#display-equations-in-a-terminal"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Display equations in a terminal</h3>
<p dir="auto">One can use <a href="https://github.com/JuliaImages/ImageInTerminal.jl"><code>ImageInTerminal</code></a> with the <a href="https://github.com/JuliaIO/Sixel.jl"><code>Sixel</code></a> backend in order to display rendered <code>latexify</code>ed <a href="https://github.com/JuliaImages/ImageInTerminal.jl#display-equations">equations</a>.</p>
<h2 dir="auto"><a id="user-content-convenience-functions" class="anchor" aria-hidden="true" href="#convenience-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Convenience functions</h2>
<ul dir="auto">
<li><code>copy_to_clipboard(::Bool)</code>, toggle automatic copying of the resulting LaTeX
code to the clipboard (default is false).</li>
<li><code>auto_display(::Bool)</code> toggles automatic display of your output, even if it
is not the last command to have run.</li>
<li><code>set_default(; kwargs...)</code>, set your own default kwargs for your Julia
session. This is not to be used within a package since the effect is global.</li>
<li><code>reset_default(; kwargs...)</code>, reset the changes you made with the above
command.</li>
<li><code>get_default(; kwargs...)</code>, view the changes you have made to the default
kwargs.</li>
</ul>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">This package is registered in the Julia registry, so to install it you can just
run</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;Latexify&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Latexify<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-further-information" class="anchor" aria-hidden="true" href="#further-information"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Further information</h2>
<p dir="auto">For further information see the
<a href="https://korsbo.github.io/Latexify.jl/stable" rel="nofollow">docs</a>.</p>
<h2 dir="auto"><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing</h2>
<p dir="auto">I would be happy to receive feedback, suggestions, and help with improving this
package. Please feel free to open an issue or a PR.</p>
<p dir="auto">If you want to add support for types defined in another package, primarily
create a PR in that package with a recipe. Latexify.jl is not intended to be a
collection of recipes for different types. The exceptions are the few types
which were included before the recipe system was finished. If the other package
is hesitant to pull in Latexify as a dependency, you can either use
Requires.jl, or create a separate glue package. If you do add support for
another package, please help update the list below:</p>
<h3 dir="auto"><a id="user-content-supported-types-and-packages" class="anchor" aria-hidden="true" href="#supported-types-and-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Supported types and packages</h3>
<ul dir="auto">
<li>Many base types</li>
<li>LaTeXStrings.jl</li>
<li>DifferentialEquations.jl</li>
<li>DiffEqBiological.jl</li>
<li>ParametrizedFunctions.jl</li>
<li>DataFrames.jl</li>
<li>Symbolics.jl</li>
<li>Unitful.jl (via UnitfulLatexify.jl)</li>
</ul>
<p dir="auto">And more ...</p>
</article></div>