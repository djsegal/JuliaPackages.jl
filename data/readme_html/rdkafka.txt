<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-rdkafka" class="anchor" aria-hidden="true" href="#rdkafka"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RDKafka</h1>
<p dir="auto">Julia wrapper for <a href="https://github.com/edenhill/librdkafka">librdkafka</a>.</p>
<h2 dir="auto"><a id="user-content-build" class="anchor" aria-hidden="true" href="#build"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Build</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;RDKafka&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>RDKafka<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Prebuilt binaries of the <code>librdkafka</code> native library is downloaded. The binaries are available for all supported Julia platforms.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-start-kafka-server" class="anchor" aria-hidden="true" href="#start-kafka-server"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Start Kafka server</h3>
<p dir="auto">If you don't have one already started, download Kafka server and run it according to the official <a href="https://kafka.apache.org/quickstart" rel="nofollow">QuickStart Guide</a>. Here's a short versioin of that guide:</p>
<p dir="auto"><code>cd</code> to the kafka folder and in run the following commands in 2 different terminals:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="# start ZooKeeper server
bin/zookeeper-server-start.sh config/zookeeper.properties
# start Kafka broker
bin/kafka-server-start.sh config/server.properties"><pre class="notranslate"><code># start ZooKeeper server
bin/zookeeper-server-start.sh config/zookeeper.properties
# start Kafka broker
bin/kafka-server-start.sh config/server.properties
</code></pre></div>
<p dir="auto">In yet another terminal create a topic:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="# create topic
bin/kafka-topics.sh --create --topic quickstart-events --bootstrap-server localhost:9092
# describe it
bin/kafka-topics.sh --describe --topic quickstart-events --bootstrap-server localhost:9092"><pre class="notranslate"><code># create topic
bin/kafka-topics.sh --create --topic quickstart-events --bootstrap-server localhost:9092
# describe it
bin/kafka-topics.sh --describe --topic quickstart-events --bootstrap-server localhost:9092
</code></pre></div>
<h3 dir="auto"><a id="user-content-produce-and-consume-some-messages" class="anchor" aria-hidden="true" href="#produce-and-consume-some-messages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Produce and consume some messages</h3>
<p dir="auto">Now in Julia console start polling using <code>KafkaConsumer</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using RDKafka

c = KafkaConsumer(&quot;localhost:9092&quot;, &quot;my-consumer-group&quot;)
parlist = [(&quot;quickstart-events&quot;, 0)]
subscribe(c, parlist)
timeout_ms = 1000
while true
    msg = poll(String, String, c, timeout_ms)
    @show(msg)
end"><pre><span class="pl-k">using</span> RDKafka

c <span class="pl-k">=</span> <span class="pl-c1">KafkaConsumer</span>(<span class="pl-s"><span class="pl-pds">"</span>localhost:9092<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>my-consumer-group<span class="pl-pds">"</span></span>)
parlist <span class="pl-k">=</span> [(<span class="pl-s"><span class="pl-pds">"</span>quickstart-events<span class="pl-pds">"</span></span>, <span class="pl-c1">0</span>)]
<span class="pl-c1">subscribe</span>(c, parlist)
timeout_ms <span class="pl-k">=</span> <span class="pl-c1">1000</span>
<span class="pl-k">while</span> <span class="pl-c1">true</span>
    msg <span class="pl-k">=</span> <span class="pl-c1">poll</span>(String, String, c, timeout_ms)
    <span class="pl-c1">@show</span>(msg)
<span class="pl-k">end</span></pre></div>
<p dir="auto">And procude a few messages using <code>KafkaProducer</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using RDKafka
import RDKafka.produce

p = KafkaProducer(&quot;localhost:9092&quot;)
partition = 0
produce(p, &quot;quickstart-events&quot;, partition, &quot;message key&quot;, &quot;message payload&quot;)"><pre><span class="pl-k">using</span> RDKafka
<span class="pl-k">import</span> RDKafka<span class="pl-k">.</span>produce

p <span class="pl-k">=</span> <span class="pl-c1">KafkaProducer</span>(<span class="pl-s"><span class="pl-pds">"</span>localhost:9092<span class="pl-pds">"</span></span>)
partition <span class="pl-k">=</span> <span class="pl-c1">0</span>
<span class="pl-c1">produce</span>(p, <span class="pl-s"><span class="pl-pds">"</span>quickstart-events<span class="pl-pds">"</span></span>, partition, <span class="pl-s"><span class="pl-pds">"</span>message key<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>message payload<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">In the consumer window you should see something like:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="msg = nothing
msg = Message(message key: message payload)
msg = nothing
msg = nothing"><pre class="notranslate"><code>msg = nothing
msg = Message(message key: message payload)
msg = nothing
msg = nothing
</code></pre></div>
<p dir="auto">where <code>nothing</code> means that there were no new messages in that polling interval while <code>Message(...)</code> is actual message we sent from producer.</p>
<h3 dir="auto"><a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Configuration</h3>
<p dir="auto"><code>librdkafka</code> is highly customizable, see <a href="https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md">CONFIGURATION.md</a> for the list of supported properties. To set a particular property, pass a <code>conf</code> object to <code>KafkaProducer</code> or <code>KafkaConsumer</code>, e.g.:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="conf = Dict(&quot;socket.timeout.ms&quot; =&gt; 300000)
p = KafkaProducer(&quot;localhost:9092&quot;, conf)"><pre>conf <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>socket.timeout.ms<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">300000</span>)
p <span class="pl-k">=</span> <span class="pl-c1">KafkaProducer</span>(<span class="pl-s"><span class="pl-pds">"</span>localhost:9092<span class="pl-pds">"</span></span>, conf)</pre></div>
<h3 dir="auto"><a id="user-content-error-handling" class="anchor" aria-hidden="true" href="#error-handling"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Error handling</h3>
<p dir="auto">Add the <code>err_cb</code> argument to either KafkaConsumer or KafkaProducer.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="c = KafkaConsumer(&quot;localhost:9092&quot;, &quot;my-consumer-group&quot;, err_cb=(err::Int, reason::String) -&gt; throw(error(reason)))"><pre class="notranslate"><code>c = KafkaConsumer("localhost:9092", "my-consumer-group", err_cb=(err::Int, reason::String) -&gt; throw(error(reason)))
</code></pre></div>
<h3 dir="auto"><a id="user-content-delivery-reports" class="anchor" aria-hidden="true" href="#delivery-reports"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Delivery reports</h3>
<p dir="auto">Add the <code>dr_cb</code> argument to a KafkaProducer.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="p = KafkaProducer(&quot;localhost:9092&quot;, dr_cb=msg -&gt; if msg.err != 0 throw(error(&quot;Delivery failed&quot;) end))"><pre class="notranslate"><code>p = KafkaProducer("localhost:9092", dr_cb=msg -&gt; if msg.err != 0 throw(error("Delivery failed") end))
</code></pre></div>
<h3 dir="auto"><a id="user-content-seeking" class="anchor" aria-hidden="true" href="#seeking"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Seeking</h3>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="c = KafkaConsumer(&quot;localhost:9092&quot;, &quot;my-consumer-group&quot;)
RDKafka.seek(c, timestamp_ms, timeout_ms)"><pre class="notranslate"><code>c = KafkaConsumer("localhost:9092", "my-consumer-group")
RDKafka.seek(c, timestamp_ms, timeout_ms)
</code></pre></div>
</article></div>