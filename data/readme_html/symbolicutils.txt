<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 align="center"><a id="user-content-symbolicutilsjl" class="anchor" aria-hidden="true" href="#symbolicutilsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><a href="https://juliasymbolics.github.io/SymbolicUtils.jl/" rel="nofollow">SymbolicUtils.jl</a></h1>
<p align="center">
  <a href="https://travis-ci.com/github/JuliaSymbolics/SymbolicUtils.jl" rel="nofollow">
    <img src="https://camo.githubusercontent.com/addd4d9810858c6f33ec3a0642f58a1739ab6f33/68747470733a2f2f7472617669732d63692e6f72672f4a756c696153796d626f6c6963732f53796d626f6c69635574696c732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status (Linux)" data-canonical-src="https://travis-ci.org/JuliaSymbolics/SymbolicUtils.jl.svg?branch=master" style="max-width:100%;">
  </a>
  
  <a href="https://coveralls.io/github/JuliaSymbolics/SymbolicUtils.jl?branch=master" rel="nofollow">
    <img src="https://camo.githubusercontent.com/3f6eac3ef1d3e0aaf739278e36358a11a5baf5e2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c696153796d626f6c6963732f53796d626f6c69635574696c732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage" data-canonical-src="https://coveralls.io/repos/github/JuliaSymbolics/SymbolicUtils.jl/badge.svg?branch=master" style="max-width:100%;">
  </a>
</p>
<p>SymbolicUtils.jl provides various utilities for symbolic computing.</p>
<p><a href="https://juliasymbolics.github.io/SymbolicUtils.jl/#creating_symbolic_expressions" rel="nofollow">Symbols in SymbolicUtils</a> carry type information. Operations on them propagate this information. <a href="https://juliasymbolics.github.io/SymbolicUtils.jl/#rule-based_rewriting" rel="nofollow">A rule-based rewriting language</a> can be used to find subexpressions that satisfy arbitrary conditions and apply arbitrary transformations on the matches. The library also contains a set of useful <a href="https://juliasymbolics.github.io/SymbolicUtils.jl/#simplification" rel="nofollow">simplification</a> rules for expressions of numeric symbols and numbers. These can be remixed and extended for special purposes.</p>
<p>If you are a Julia package develper in need of a rule rewriting system for your own types, have a look at the <a href="https://juliasymbolics.github.io/SymbolicUtils.jl/interface/" rel="nofollow">interfacing guide</a>.</p>
<p><a href="https://juliasymbolics.github.io/SymbolicUtils.jl/" rel="nofollow"><strong>Go to the manual</strong></a></p>
<p>SymbolicUtils.jl is on the general registry and can be added the usual way:</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add SymbolicUtils</pre></div>
<p>or</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>SymbolicUtils<span class="pl-pds">"</span></span>)</pre></div>
<h3><a id="user-content-i-dont-want-to-read-your-manual-just-show-me-some-cool-code" class="anchor" aria-hidden="true" href="#i-dont-want-to-read-your-manual-just-show-me-some-cool-code"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>"I don't want to read your manual, just show me some cool code"</h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SymbolicUtils

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@syms</span> x<span class="pl-k">::</span><span class="pl-c1">Real</span> y<span class="pl-k">::</span><span class="pl-c1">Real</span> z<span class="pl-k">::</span><span class="pl-c1">Complex</span> <span class="pl-c1">f</span>(<span class="pl-k">::</span><span class="pl-c1">Number</span>)<span class="pl-k">::</span><span class="pl-c1">Real</span>
(x, y, z, <span class="pl-c1">f</span>(<span class="pl-k">::</span><span class="pl-c1">Number</span>)<span class="pl-k">::</span><span class="pl-c1">Real</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">2</span>x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> y <span class="pl-k">+</span> x<span class="pl-k">^</span><span class="pl-c1">2</span>
(<span class="pl-c1">3</span> <span class="pl-k">*</span> (x <span class="pl-k">^</span> <span class="pl-c1">2</span>)) <span class="pl-k">+</span> (<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">*</span> y)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">f</span>(<span class="pl-c1">sin</span>(x)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">cos</span>(x)<span class="pl-k">^</span><span class="pl-c1">2</span>) <span class="pl-k">+</span> z
<span class="pl-c1">f</span>(<span class="pl-c1">1</span>) <span class="pl-k">+</span> z

julia<span class="pl-k">&gt;</span> r <span class="pl-k">=</span> <span class="pl-c1">@rule</span> <span class="pl-c1">sinh</span>(im <span class="pl-k">*</span> <span class="pl-k">~</span>x) <span class="pl-k">=&gt;</span> <span class="pl-c1">sin</span>(<span class="pl-k">~</span>x)
<span class="pl-c1">sinh</span>(im <span class="pl-k">*</span> <span class="pl-k">~</span>x) <span class="pl-k">=&gt;</span> <span class="pl-c1">sin</span>(<span class="pl-k">~</span>x)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">r</span>(<span class="pl-c1">sinh</span>(im <span class="pl-k">*</span> y))
<span class="pl-c1">sin</span>(y)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">simplify</span>(<span class="pl-c1">cos</span>(y)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">sinh</span>(im<span class="pl-k">*</span>y)<span class="pl-k">^</span><span class="pl-c1">2</span>, <span class="pl-c1">RuleSet</span>([r]))
<span class="pl-c1">1</span></pre></div>
<h1><a id="user-content-citations" class="anchor" aria-hidden="true" href="#citations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Citations</h1>
<ul>
<li>The pattern matcher is an adaption of the one by Gerald Jay Sussman (as seen in <a href="https://groups.csail.mit.edu/mac/users/gjs/6.945/" rel="nofollow">6.945</a> at MIT), his use of symbolic programming in the book <a href="https://groups.csail.mit.edu/mac/users/gjs/6946/sicm-html/book.html" rel="nofollow">SICM</a> inspired this package.</li>
<li><a href="https://github.com/HarrisonGrodin/Rewrite.jl">Rewrite.jl</a> and <a href="https://github.com/HarrisonGrodin/Simplify.jl">Simplify.jl</a> by <a href="https://github.com/HarrisonGrodin">Harrison Grodin</a> also inspired this package.</li>
</ul>
</article></div>