<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-libspatialindex" class="anchor" aria-hidden="true" href="#libspatialindex"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LibSpatialIndex</h1>
<p dir="auto"><a href="https://github.com/JuliaGeo/LibSpatialIndex.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaGeo/LibSpatialIndex.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/JuliaGeo/LibSpatialIndex.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/b5ce268037e0532180571dbbbfd3b24279b6916ec45d580163e92f7aeb27e213/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c696147656f2f4c69625370617469616c496e6465782e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaGeo/LibSpatialIndex.jl/badge.svg?branch=master&amp;service=github" style="max-width: 100%;"></a></p>
<p dir="auto">LibSpatialIndex.jl is a julia wrapper around the C API of <a href="https://github.com/libspatialindex/libspatialindex">libspatialindex</a>, for spatially indexing kD bounding box data.  The Julia library (JLL) package is produced by the script at <a href="https://github.com/JuliaPackaging/Yggdrasil/tree/master/L/LibSpatialIndex">https://github.com/JuliaPackaging/Yggdrasil/tree/master/L/LibSpatialIndex</a> and the resulting binary artifact is downloaded from <a href="https://github.com/JuliaBinaryWrappers/LibSpatialIndex_jll.jl">https://github.com/JuliaBinaryWrappers/LibSpatialIndex_jll.jl</a>.</p>
<h1 dir="auto"><a id="user-content-quick-guide" class="anchor" aria-hidden="true" href="#quick-guide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick Guide</h1>
<p dir="auto">A new RTree with 2 dimensions can be created using this package as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import LibSpatialIndex
rtree = LibSpatialIndex.RTree(2)"><pre><span class="pl-k">import</span> LibSpatialIndex
rtree <span class="pl-k">=</span> LibSpatialIndex<span class="pl-k">.</span><span class="pl-c1">RTree</span>(<span class="pl-c1">2</span>)</pre></div>
<h2 dir="auto"><a id="user-content-insertion" class="anchor" aria-hidden="true" href="#insertion"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Insertion</h2>
<p dir="auto">Items can be inserted using the <code>insert!</code> method, where</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="LibSpatialIndex.insert!(rtree, 1, [0.,0.], [1.,1.])
LibSpatialIndex.insert!(rtree, 2, [0.,0.], [2.,2.])"><pre>LibSpatialIndex<span class="pl-k">.</span><span class="pl-c1">insert!</span>(rtree, <span class="pl-c1">1</span>, [<span class="pl-c1">0.</span>,<span class="pl-c1">0.</span>], [<span class="pl-c1">1.</span>,<span class="pl-c1">1.</span>])
LibSpatialIndex<span class="pl-k">.</span><span class="pl-c1">insert!</span>(rtree, <span class="pl-c1">2</span>, [<span class="pl-c1">0.</span>,<span class="pl-c1">0.</span>], [<span class="pl-c1">2.</span>,<span class="pl-c1">2.</span>])</pre></div>
<p dir="auto">inserts two items,</p>
<ul dir="auto">
<li>the first with <code>id</code> 1, associated with the box specified by <code>[xmin=0.0,ymin=0.0]</code> and <code>[xmax=1.0,ymax=1.0]</code>.</li>
<li>the second with <code>id</code> 2, associated with the box specified by <code>[xmin=0.0,ymin=0.0]</code> and <code>[xmax=2.0,ymax=2.0]</code>.</li>
</ul>
<h2 dir="auto"><a id="user-content-queries" class="anchor" aria-hidden="true" href="#queries"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Queries</h2>
<p dir="auto">Thereafter, you can perform queries on the <code>rtree</code> using either (i) <code>intersects(rtree, minvalues, maxvalues)</code> for all items intersecting the box specified by <code>minvalues</code> and <code>maxvalues</code>, or (ii) <code>knn(rtree, minvalues, maxvalues, k)</code> for the <code>k</code> nearest items in <code>rtree</code> to the box specified by <code>minvalues</code> and <code>maxvalues</code>.</p>
<h3 dir="auto"><a id="user-content-intersection" class="anchor" aria-hidden="true" href="#intersection"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Intersection</h3>
<p dir="auto">So for instance,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="LibSpatialIndex.intersects(rtree, [0.,0.],[1.,1.])"><pre>LibSpatialIndex<span class="pl-k">.</span><span class="pl-c1">intersects</span>(rtree, [<span class="pl-c1">0.</span>,<span class="pl-c1">0.</span>],[<span class="pl-c1">1.</span>,<span class="pl-c1">1.</span>])</pre></div>
<p dir="auto">will return the vector <code>[1,2]</code> on the <code>rtree</code> constructed earlier, to indicate that items with ids <code>1</code> and <code>2</code> intersects the box specified by <code>[xmin=0.0,ymin=0.0]</code> and <code>[xmax=1.0,ymax=1.0]</code>.</p>
<p dir="auto">You can also perform queries on an individual point, so</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="LibSpatialIndex.intersects(rtree, [1.,1.])"><pre>LibSpatialIndex<span class="pl-k">.</span><span class="pl-c1">intersects</span>(rtree, [<span class="pl-c1">1.</span>,<span class="pl-c1">1.</span>])</pre></div>
<p dir="auto">will return the ids <code>[1,2]</code> in the <code>rtree</code> constructed earlier, and</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="LibSpatialIndex.intersects(rtree, [2.,2.])"><pre>LibSpatialIndex<span class="pl-k">.</span><span class="pl-c1">intersects</span>(rtree, [<span class="pl-c1">2.</span>,<span class="pl-c1">2.</span>])</pre></div>
<p dir="auto">will only return the vector <code>[2]</code>, because item 1 does not contain the point <code>[2,2]</code>.</p>
<h3 dir="auto"><a id="user-content-k-nearest-neighbors" class="anchor" aria-hidden="true" href="#k-nearest-neighbors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>k Nearest Neighbors</h3>
<p dir="auto">For <code>knn</code> queries,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="LibSpatialIndex.knn(rtree, [2.,2.], 1)"><pre>LibSpatialIndex<span class="pl-k">.</span><span class="pl-c1">knn</span>(rtree, [<span class="pl-c1">2.</span>,<span class="pl-c1">2.</span>], <span class="pl-c1">1</span>)</pre></div>
<p dir="auto">returns the vector <code>[2]</code> because the item with id <code>2</code> is closest to the point <code>[2.0, 2.0]</code>, and</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="sort(LibSpatialIndex.knn(rtree, [2.,2.], 2))"><pre><span class="pl-c1">sort</span>(LibSpatialIndex<span class="pl-k">.</span><span class="pl-c1">knn</span>(rtree, [<span class="pl-c1">2.</span>,<span class="pl-c1">2.</span>], <span class="pl-c1">2</span>))</pre></div>
<p dir="auto">returns the vector <code>[1,2]</code>. If the value of <code>k</code> exceeds the number of items in the <code>rtree</code>, then fewer than <code>k</code> items will be returned, so</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="sort(SI.knn(rtree, [2.,2.], 3))"><pre><span class="pl-c1">sort</span>(SI<span class="pl-k">.</span><span class="pl-c1">knn</span>(rtree, [<span class="pl-c1">2.</span>,<span class="pl-c1">2.</span>], <span class="pl-c1">3</span>))</pre></div>
<p dir="auto">will return the vector <code>[1,2]</code>.</p>
</article></div>