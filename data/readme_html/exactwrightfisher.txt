<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://coveralls.io/github/konkam/ExactWrightFisher.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/fa71e8c62eb7f587a56bc561b0720826bc646a88/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6b6f6e6b616d2f45786163745772696768744669736865722e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/konkam/ExactWrightFisher.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/konkam/ExactWrightFisher.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8e260a46eb41b05307cce258ae532875929b8701/68747470733a2f2f636f6465636f762e696f2f67682f6b6f6e6b616d2f45786163745772696768744669736865722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/konkam/ExactWrightFisher.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/konkam/ExactWrightFisher.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6ce68d242371b05b032b03ba180555ceebd6db81/68747470733a2f2f7472617669732d63692e6f72672f6b6f6e6b616d2f45786163745772696768744669736865722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/konkam/ExactWrightFisher.jl.svg?branch=master" style="max-width:100%;"></a></p>
<h1><a id="user-content-exactwrightfisher" class="anchor" aria-hidden="true" href="#exactwrightfisher"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ExactWrightFisher</h1>
<p>Exact simulation of the neutral Wright-Fisher diffusion.</p>
<p>Implementation of the exact simulation scheme of Jenkins, P. A., Spano, D., &amp; Others. (2017). Exact simulation of the Wright--Fisher diffusion. The Annals of Applied Probability, 27(3), 1478–1509.</p>
<p>We consider a continuous time version of the multi-dimensional <a href="https://en.wikipedia.org/wiki/Genetic_drift" rel="nofollow">Wright-Fisher model</a>, which is a stochastic differential equation.</p>
<p>The 1-dimensional version of the Wright-Fisher model is defined by the following equation:</p>
<p><a target="_blank" rel="noopener noreferrer" href="latex_equations/CodeCogsEqn.gif"><img src="latex_equations/CodeCogsEqn.gif" alt="" style="max-width:100%;"></a></p>
<p>The multi-dimensional version is more easily expressed with the generator of the stochastic process:</p>
<p><a target="_blank" rel="noopener noreferrer" href="latex_equations/wright-fisher-dim-K.gif"><img src="latex_equations/wright-fisher-dim-K.gif" alt="" style="max-width:100%;"></a></p>
<p>where <a target="_blank" rel="noopener noreferrer" href="latex_equations/alpha_k.gif"><img src="latex_equations/alpha_k.gif" alt="" style="max-width:100%;"></a>.</p>
<p>The scheme uses a retrospective approach similar to the <em>exact algorithms</em> of Beskos (2005), and employs the <em>alternating series trick</em> by Devroye to sample from an infinite series expansion of the transition function for the Wright-Fisher process.</p>
<p>This scheme may become inefficient for very short time steps, but a good approximation may then be used.</p>
<p>A graphical comparison of simulated samples against the stationary distribution is available <a href="test/Graphical%20tests%20of%20the%20Wright-Fisher%20exact%20simulation.ipynb">here</a>.</p>
<h1><a id="user-content-how-to-install-the-package" class="anchor" aria-hidden="true" href="#how-to-install-the-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>How to install the package</h1>
<p>Press <code>]</code> in the Julia interpreter to enter the Pkg mode and input:</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>konkam<span class="pl-k">/</span>ExactWrightFisher<span class="pl-k">.</span>jl</pre></div>
<h1><a id="user-content-how-to-use-the-package" class="anchor" aria-hidden="true" href="#how-to-use-the-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>How to use the package</h1>
<p>The package is developed for Julia 1.0. An R/Rcpp implementation is available on request.</p>
<p>To load the package, input:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ExactWrightFisher, Random, Distributions</pre></div>
<p>Then to sample from the transition density of a K dimensional Wright Fisher process, do:</p>
<div class="highlight highlight-source-julia"><pre>Random<span class="pl-k">.</span><span class="pl-c1">seed!</span>(<span class="pl-c1">0</span>);
α_vec <span class="pl-k">=</span> [<span class="pl-c1">1.2</span>,<span class="pl-c1">1.4</span>,<span class="pl-c1">1.3</span>]
<span class="pl-c1">Wright_Fisher_K_dim_exact_transition</span>([<span class="pl-c1">0.2</span>, <span class="pl-c1">0.4</span>, <span class="pl-c1">0.4</span>], <span class="pl-c1">0.5</span>, α_vec)
<span class="pl-c1">3</span><span class="pl-k">-</span>element Array{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0.37638432059656973</span>
 <span class="pl-c1">0.18253800610053464</span>
 <span class="pl-c1">0.44107767330289566</span></pre></div>
<p>To sample a full trajectory, do:</p>
<div class="highlight highlight-source-julia"><pre>Random<span class="pl-k">.</span><span class="pl-c1">seed!</span>(<span class="pl-c1">0</span>);
α_vec <span class="pl-k">=</span> [<span class="pl-c1">1.2</span>,<span class="pl-c1">1.4</span>,<span class="pl-c1">1.3</span>]
<span class="pl-c1">Wright_Fisher_K_dim_exact_trajectory</span>([<span class="pl-c1">0.2</span>, <span class="pl-c1">0.4</span>, <span class="pl-c1">0.4</span>], <span class="pl-c1">range</span>(<span class="pl-c1">0</span>, stop <span class="pl-k">=</span> <span class="pl-c1">1</span>, length <span class="pl-k">=</span> <span class="pl-c1">10</span>), α_vec)
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">11</span> Array{Float64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0.2</span>  <span class="pl-c1">0.2</span>  <span class="pl-c1">0.288971</span>  <span class="pl-c1">0.156417</span>  <span class="pl-c1">0.0282289</span>  …  <span class="pl-c1">0.443116</span>  <span class="pl-c1">0.416719</span>  <span class="pl-c1">0.435391</span>
 <span class="pl-c1">0.4</span>  <span class="pl-c1">0.4</span>  <span class="pl-c1">0.302104</span>  <span class="pl-c1">0.526393</span>  <span class="pl-c1">0.57872</span>       <span class="pl-c1">0.359188</span>  <span class="pl-c1">0.36929</span>   <span class="pl-c1">0.340048</span>
 <span class="pl-c1">0.4</span>  <span class="pl-c1">0.4</span>  <span class="pl-c1">0.408926</span>  <span class="pl-c1">0.31719</span>   <span class="pl-c1">0.393051</span>      <span class="pl-c1">0.197697</span>  <span class="pl-c1">0.213991</span>  <span class="pl-c1">0.22456</span></pre></div>
<p>See also <code>Wright_Fisher_exact_transition</code>, and <code>Wright_Fisher_exact_trajectory</code> for 1 dimensional Wright-Fisher processes.</p>
<h1><a id="user-content-small-time-steps-dt--005" class="anchor" aria-hidden="true" href="#small-time-steps-dt--005"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Small time steps (dt &lt;= 0.05)</h1>
<p>The exact algorithm may hang for small time steps, in practice around 0.05.</p>
<p>However, in this case a very good normal approximation of the transition function is available.</p>
<p>Functions that use the exact algorithm for large time steps and fall back to the approximation for small time steps are available as: <code>Wright_Fisher_exact_transition_with_t005_approx</code>, <code>Wright_Fisher_exact_trajectory_with_t005_approx</code>,  <code>Wright_Fisher_K_dim_transition_with_t005_approx</code>, <code>Wright_Fisher_K_dim_trajectory_with_t005_approx</code>.</p>
<p><strong>References</strong>:</p>
<ul>
<li>Beskos, A. and Roberts, G. O. (2005). Exact simulation of diffusions. The Annals of Applied Probability 15, 2422–2444.</li>
<li>Devroye, L. (1986). Nonuniform Random Variate Generation. Springer, New York.</li>
<li>Jenkins, P. A., Spano, D., &amp; Others. (2017). Exact simulation of the Wright--Fisher diffusion. The Annals of Applied Probability, 27(3), 1478–1509.</li>
</ul>
</article></div>