<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-lifecontingenciesjl" class="anchor" aria-hidden="true" href="#lifecontingenciesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LifeContingencies.jl</h1>
<p><a href="https://JuliaActuary.github.io/LifeContingencies.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://JuliaActuary.github.io/LifeContingencies.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaActuary/LifeContingencies.jl/workflows/CI/badge.svg"><img src="https://github.com/JuliaActuary/LifeContingencies.jl/workflows/CI/badge.svg" alt="" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/JuliaActuary/LifeContingencies.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/79273575a98c018ed2057d4311f7ee29665d49e92f5217f4921860da0b8631eb/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961416374756172792f4c696665436f6e74696e67656e636965732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaActuary/LifeContingencies.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://www.tidyverse.org/lifecycle/" rel="nofollow"><img src="https://camo.githubusercontent.com/60163bfbaea59154c0704aa4e0282be695d2c16a1b01bbab147400f86a92c76b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6966654379636c652d446576656c6f70696e672d79656c6c6f77" alt="lifecycle" data-canonical-src="https://img.shields.io/badge/LifeCycle-Developing-yellow" style="max-width:100%;"></a></p>
<p>LifeContingencies is a package enabling actuarial life contingent calculations.</p>
<h2><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h2>
<ul>
<li>Integration with other JuliaActuary packages such as <a href="https://github.com/JuliaActuary/MortalityTables.jl">MortalityTables.jl</a></li>
<li>Fast calculations, with some parts utilizing parallel processing power automatically</li>
<li>Use functions that look more like the math you are used to (e.g. <code>A</code>, <code>ä</code>) with <a href="https://docs.julialang.org/en/v1/manual/unicode-input/index.html" rel="nofollow">Unicode support</a></li>
<li>All of the power, speed, convenience, tooling, and ecosystem of Julia</li>
<li>Flexible and modular modeling approach</li>
</ul>
<h2><a id="user-content-package-overview" class="anchor" aria-hidden="true" href="#package-overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Package Overview</h2>
<ul>
<li>Leverages <a href="https://github.com/JuliaActuary/MortalityTables.jl">MortalityTables.jl</a> for
the mortality calculations</li>
<li>Contains common insurance calculations such as:
<ul>
<li><code>Insurance(life,yield)</code>: Whole life</li>
<li><code>Insurance(life,yield,n)</code>: Term life for <code>n</code> years</li>
<li><code>ä(life,yield)</code>: <code>present_value</code> of Life contingent annuity</li>
<li><code>ä(life,yield)</code>: <code>present_value</code> of Life contingent annuity due for <code>n</code> years</li>
</ul>
</li>
<li>Contains various commutation functions such as <code>D(x)</code>,<code>M(x)</code>,<code>C(x)</code>, etc.</li>
<li><code>SingleLife</code> and <code>JointLife</code> capable</li>
<li>Interest rate mechanics via <a href="https://github.com/JuliaActuary/Yields.jl"><code>Yields.jl</code></a></li>
<li>More documentation available by clicking the DOCS badges at the top of this README</li>
</ul>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<h3><a id="user-content-basic-functions" class="anchor" aria-hidden="true" href="#basic-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic Functions</h3>
<p>Calculate various items for a 30-year-old male nonsmoker using 2015 VBT base table and a 5% interest rate</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
using LifeContingencies
using MortalityTables
using Yields
import LifeConingencies: V, ä      # pull the shortform notation into scope

# load mortality rates from MortalityTables.jl
vbt2001 = MortalityTables.table(&quot;2001 VBT Residual Standard Select and Ultimate - Male Nonsmoker, ANB&quot;)

issue_age = 30
life = SingleLife(                 # The life underlying the risk
    mort = vbt2001.select[issue_age],    # -- Mortality rates
)

yield = Yields.Constant(0.05)      # Using a flat 5% interest rate

lc = LifeContingency(life, yield)  # LifeContingency joins the risk with interest


ins = Insurance(lc)                # Whole Life insurance
ins = Insurance(life, yield)       # alternate way to construct
"><pre><span class="pl-k">using</span> LifeContingencies
<span class="pl-k">using</span> MortalityTables
<span class="pl-k">using</span> Yields
<span class="pl-k">import</span> LifeConingencies<span class="pl-k">:</span> V, ä      <span class="pl-c"><span class="pl-c">#</span> pull the shortform notation into scope</span>

<span class="pl-c"><span class="pl-c">#</span> load mortality rates from MortalityTables.jl</span>
vbt2001 <span class="pl-k">=</span> MortalityTables<span class="pl-k">.</span><span class="pl-c1">table</span>(<span class="pl-s"><span class="pl-pds">"</span>2001 VBT Residual Standard Select and Ultimate - Male Nonsmoker, ANB<span class="pl-pds">"</span></span>)

issue_age <span class="pl-k">=</span> <span class="pl-c1">30</span>
life <span class="pl-k">=</span> <span class="pl-c1">SingleLife</span>(                 <span class="pl-c"><span class="pl-c">#</span> The life underlying the risk</span>
    mort <span class="pl-k">=</span> vbt2001<span class="pl-k">.</span>select[issue_age],    <span class="pl-c"><span class="pl-c">#</span> -- Mortality rates</span>
)

yield <span class="pl-k">=</span> Yields<span class="pl-k">.</span><span class="pl-c1">Constant</span>(<span class="pl-c1">0.05</span>)      <span class="pl-c"><span class="pl-c">#</span> Using a flat 5% interest rate</span>

lc <span class="pl-k">=</span> <span class="pl-c1">LifeContingency</span>(life, yield)  <span class="pl-c"><span class="pl-c">#</span> LifeContingency joins the risk with interest</span>


ins <span class="pl-k">=</span> <span class="pl-c1">Insurance</span>(lc)                <span class="pl-c"><span class="pl-c">#</span> Whole Life insurance</span>
ins <span class="pl-k">=</span> <span class="pl-c1">Insurance</span>(life, yield)       <span class="pl-c"><span class="pl-c">#</span> alternate way to construct</span></pre></div>
<p>With the above life contingent data, we can calculate vectors of relevant information:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="cashflows(ins)                     # A vector of the unit cashflows
timepoints(ins)                    # The timepoints associated with the cashflows
survival(ins)                      # The survival vector
benefit(ins)                       # The unit benefit vector
probability(ins)                   # The probability of beneift payment
"><pre><span class="pl-c1">cashflows</span>(ins)                     <span class="pl-c"><span class="pl-c">#</span> A vector of the unit cashflows</span>
<span class="pl-c1">timepoints</span>(ins)                    <span class="pl-c"><span class="pl-c">#</span> The timepoints associated with the cashflows</span>
<span class="pl-c1">survival</span>(ins)                      <span class="pl-c"><span class="pl-c">#</span> The survival vector</span>
<span class="pl-c1">benefit</span>(ins)                       <span class="pl-c"><span class="pl-c">#</span> The unit benefit vector</span>
<span class="pl-c1">probability</span>(ins)                   <span class="pl-c"><span class="pl-c">#</span> The probability of beneift payment</span></pre></div>
<p>Or calculate summary scalars:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="present_value(ins)                 # The actuarial present value
premium_net(lc)                    # Net whole life premium 
V(lc,5)                            # Net premium reserve for whole life insurance at time 5
"><pre><span class="pl-c1">present_value</span>(ins)                 <span class="pl-c"><span class="pl-c">#</span> The actuarial present value</span>
<span class="pl-c1">premium_net</span>(lc)                    <span class="pl-c"><span class="pl-c">#</span> Net whole life premium </span>
<span class="pl-c1">V</span>(lc,<span class="pl-c1">5</span>)                            <span class="pl-c"><span class="pl-c">#</span> Net premium reserve for whole life insurance at time 5</span></pre></div>
<p>Other types of life contingent benefits:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Insurance(lc,n=10)                   # 10 year term insurance
AnnuityImmediate(lc)               # Whole life annuity due
AnnuityDue(lc)                     # Whole life annuity due
ä(lc)                              # Shortform notation
ä(lc, n=5)                         # 5 year annuity due
ä(lc, n=5, certain=5,frequency=4)  # 5 year annuity due, with 5 year certain payable 4x per year
...                                # and more!
"><pre><span class="pl-c1">Insurance</span>(lc,n<span class="pl-k">=</span><span class="pl-c1">10</span>)                   <span class="pl-c"><span class="pl-c">#</span> 10 year term insurance</span>
<span class="pl-c1">AnnuityImmediate</span>(lc)               <span class="pl-c"><span class="pl-c">#</span> Whole life annuity due</span>
<span class="pl-c1">AnnuityDue</span>(lc)                     <span class="pl-c"><span class="pl-c">#</span> Whole life annuity due</span>
<span class="pl-c1">ä</span>(lc)                              <span class="pl-c"><span class="pl-c">#</span> Shortform notation</span>
<span class="pl-c1">ä</span>(lc, n<span class="pl-k">=</span><span class="pl-c1">5</span>)                         <span class="pl-c"><span class="pl-c">#</span> 5 year annuity due</span>
<span class="pl-c1">ä</span>(lc, n<span class="pl-k">=</span><span class="pl-c1">5</span>, certain<span class="pl-k">=</span><span class="pl-c1">5</span>,frequency<span class="pl-k">=</span><span class="pl-c1">4</span>)  <span class="pl-c"><span class="pl-c">#</span> 5 year annuity due, with 5 year certain payable 4x per year</span>
<span class="pl-k">...</span>                                <span class="pl-c"><span class="pl-c">#</span> and more!</span></pre></div>
<h4><a id="user-content-constructing-lives" class="anchor" aria-hidden="true" href="#constructing-lives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Constructing Lives</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="SingleLife(vbt2001.select[50])                 # no keywords, just a mortality vector
SingleLife(vbt2001.select[50],issue_age = 60)  # select at 50, but now 60
SingleLife(vbt2001.select,issue_age = 50)      # use issue_age to pick the right select vector
SingleLife(mort=vbt2001.select,issue_age = 50) # mort can also be a keyword

"><pre><span class="pl-c1">SingleLife</span>(vbt2001<span class="pl-k">.</span>select[<span class="pl-c1">50</span>])                 <span class="pl-c"><span class="pl-c">#</span> no keywords, just a mortality vector</span>
<span class="pl-c1">SingleLife</span>(vbt2001<span class="pl-k">.</span>select[<span class="pl-c1">50</span>],issue_age <span class="pl-k">=</span> <span class="pl-c1">60</span>)  <span class="pl-c"><span class="pl-c">#</span> select at 50, but now 60</span>
<span class="pl-c1">SingleLife</span>(vbt2001<span class="pl-k">.</span>select,issue_age <span class="pl-k">=</span> <span class="pl-c1">50</span>)      <span class="pl-c"><span class="pl-c">#</span> use issue_age to pick the right select vector</span>
<span class="pl-c1">SingleLife</span>(mort<span class="pl-k">=</span>vbt2001<span class="pl-k">.</span>select,issue_age <span class="pl-k">=</span> <span class="pl-c1">50</span>) <span class="pl-c"><span class="pl-c">#</span> mort can also be a keyword</span>
</pre></div>
<h3><a id="user-content-net-premium-for-term-policy-with-stochastic-rates" class="anchor" aria-hidden="true" href="#net-premium-for-term-policy-with-stochastic-rates"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Net Premium for Term Policy with Stochastic rates</h3>
<p>Use a stochastic interest rate calculation to price a term policy:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using LifeContingencies, MortalityTables
using Distributions

vbt2001 = MortalityTables.table(&quot;2001 VBT Residual Standard Select and Ultimate - Male Nonsmoker, ANB&quot;)

# use an interest rate that's normally distirbuted
μ = 0.05
σ = 0.01

years = 100
int =   Yields.Forward(rand(Normal(μ,σ), years))

life = SingleLife(
    mort = vbt2001.select[30],
    issue_age = 30
)

term = 10
Insurance(lc, n=term) # around 0.055
"><pre><span class="pl-k">using</span> LifeContingencies, MortalityTables
<span class="pl-k">using</span> Distributions

vbt2001 <span class="pl-k">=</span> MortalityTables<span class="pl-k">.</span><span class="pl-c1">table</span>(<span class="pl-s"><span class="pl-pds">"</span>2001 VBT Residual Standard Select and Ultimate - Male Nonsmoker, ANB<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> use an interest rate that's normally distirbuted</span>
μ <span class="pl-k">=</span> <span class="pl-c1">0.05</span>
σ <span class="pl-k">=</span> <span class="pl-c1">0.01</span>

years <span class="pl-k">=</span> <span class="pl-c1">100</span>
int <span class="pl-k">=</span>   Yields<span class="pl-k">.</span><span class="pl-c1">Forward</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">Normal</span>(μ,σ), years))

life <span class="pl-k">=</span> <span class="pl-c1">SingleLife</span>(
    mort <span class="pl-k">=</span> vbt2001<span class="pl-k">.</span>select[<span class="pl-c1">30</span>],
    issue_age <span class="pl-k">=</span> <span class="pl-c1">30</span>
)

term <span class="pl-k">=</span> <span class="pl-c1">10</span>
<span class="pl-c1">Insurance</span>(lc, n<span class="pl-k">=</span>term) <span class="pl-c"><span class="pl-c">#</span> around 0.055</span></pre></div>
<h4><a id="user-content-extending-example-to-use-autocorrelated-interest-rates" class="anchor" aria-hidden="true" href="#extending-example-to-use-autocorrelated-interest-rates"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Extending example to use autocorrelated interest rates</h4>
<p>You can use autocorrelated interest rates - substitute the following in the prior example
using the ability to self reference:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="σ = 0.01
initial_rate = 0.05
vec = fill(initial_rate,years)

for i in 2:length(vec)
    vec[i] = rand(Normal(vec[i-1],σ))
end

int = Yields.Forward(vec)
"><pre>σ <span class="pl-k">=</span> <span class="pl-c1">0.01</span>
initial_rate <span class="pl-k">=</span> <span class="pl-c1">0.05</span>
vec <span class="pl-k">=</span> <span class="pl-c1">fill</span>(initial_rate,years)

<span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">length</span>(vec)
    vec[i] <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">Normal</span>(vec[i<span class="pl-k">-</span><span class="pl-c1">1</span>],σ))
<span class="pl-k">end</span>

int <span class="pl-k">=</span> Yields<span class="pl-k">.</span><span class="pl-c1">Forward</span>(vec)</pre></div>
<h3><a id="user-content-premium-comparison-across-mortality-tables" class="anchor" aria-hidden="true" href="#premium-comparison-across-mortality-tables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Premium comparison across Mortality Tables</h3>
<p>Compare the cost of annual premium, whole life insurance between multiple tables visually:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using LifeContingencies, MortalityTables, Plots

tables = [
    MortalityTables.table(&quot;1980 CET - Male Nonsmoker, ANB&quot;),
    MortalityTables.table(&quot;2001 VBT Residual Standard Select and Ultimate - Male Nonsmoker, ANB&quot;),
    MortalityTables.table(&quot;2015 VBT Male Non-Smoker RR100 ANB&quot;),
    ]

issue_ages = 30:90
int = Yields.Constant(0.05)

whole_life_costs = map(tables) do t
    map(issue_ages) do ia
        lc = LifeContingency(
                SingleLife(
                    mort=t.ultimate,
                    issue_age=ia
                ),
                int
            )

        premium_net(lc)

    end
end

plt = plot(ylabel=&quot;Annual Premium per unit&quot;, xlabel=&quot;Issue Age&quot;,
            legend=:topleft, legendfontsize=8,size=(800,600))
for (i,t) in enumerate(tables)
    plot!(plt,issue_ages,whole_life_costs[i], label=&quot;$(t.d.name)&quot;)
end
display(plt)
"><pre><span class="pl-k">using</span> LifeContingencies, MortalityTables, Plots

tables <span class="pl-k">=</span> [
    MortalityTables<span class="pl-k">.</span><span class="pl-c1">table</span>(<span class="pl-s"><span class="pl-pds">"</span>1980 CET - Male Nonsmoker, ANB<span class="pl-pds">"</span></span>),
    MortalityTables<span class="pl-k">.</span><span class="pl-c1">table</span>(<span class="pl-s"><span class="pl-pds">"</span>2001 VBT Residual Standard Select and Ultimate - Male Nonsmoker, ANB<span class="pl-pds">"</span></span>),
    MortalityTables<span class="pl-k">.</span><span class="pl-c1">table</span>(<span class="pl-s"><span class="pl-pds">"</span>2015 VBT Male Non-Smoker RR100 ANB<span class="pl-pds">"</span></span>),
    ]

issue_ages <span class="pl-k">=</span> <span class="pl-c1">30</span><span class="pl-k">:</span><span class="pl-c1">90</span>
int <span class="pl-k">=</span> Yields<span class="pl-k">.</span><span class="pl-c1">Constant</span>(<span class="pl-c1">0.05</span>)

whole_life_costs <span class="pl-k">=</span> <span class="pl-c1">map</span>(tables) <span class="pl-k">do</span> t
    <span class="pl-c1">map</span>(issue_ages) <span class="pl-k">do</span> ia
        lc <span class="pl-k">=</span> <span class="pl-c1">LifeContingency</span>(
                <span class="pl-c1">SingleLife</span>(
                    mort<span class="pl-k">=</span>t<span class="pl-k">.</span>ultimate,
                    issue_age<span class="pl-k">=</span>ia
                ),
                int
            )

        <span class="pl-c1">premium_net</span>(lc)

    <span class="pl-k">end</span>
<span class="pl-k">end</span>

plt <span class="pl-k">=</span> <span class="pl-c1">plot</span>(ylabel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Annual Premium per unit<span class="pl-pds">"</span></span>, xlabel<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Issue Age<span class="pl-pds">"</span></span>,
            legend<span class="pl-k">=</span><span class="pl-c1">:topleft</span>, legendfontsize<span class="pl-k">=</span><span class="pl-c1">8</span>,size<span class="pl-k">=</span>(<span class="pl-c1">800</span>,<span class="pl-c1">600</span>))
<span class="pl-k">for</span> (i,t) <span class="pl-k">in</span> <span class="pl-c1">enumerate</span>(tables)
    <span class="pl-c1">plot!</span>(plt,issue_ages,whole_life_costs[i], label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(t<span class="pl-k">.</span>d<span class="pl-k">.</span>name)</span><span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>
<span class="pl-c1">display</span>(plt)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/711879/85190836-cb539800-b281-11ea-96b0-e3f3eab59449.png"><img src="https://user-images.githubusercontent.com/711879/85190836-cb539800-b281-11ea-96b0-e3f3eab59449.png" alt="Comparison of three different mortality tables' effect on insurance cost" style="max-width:100%;"></a></p>
<h3><a id="user-content-joint-life" class="anchor" aria-hidden="true" href="#joint-life"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Joint Life</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="m1 = MortalityTables.table(&quot;1986-92 CIA – Male Smoker, ANB&quot;)
m2 = MortalityTables.table(&quot;1986-92 CIA – Female Nonsmoker, ANB&quot;)
l1 = SingleLife(mort = m1.ultimate, issue_age = 40)
l2 = SingleLife(mort = m2.ultimate, issue_age = 37)

jl = JointLife(lives=(l1, l2), contingency=LastSurvivor(), joint_assumption=Frasier())


Insurance(jl)      # whole life insurance
...                # similar functions as shown in the first example above
"><pre>m1 <span class="pl-k">=</span> MortalityTables<span class="pl-k">.</span><span class="pl-c1">table</span>(<span class="pl-s"><span class="pl-pds">"</span>1986-92 CIA – Male Smoker, ANB<span class="pl-pds">"</span></span>)
m2 <span class="pl-k">=</span> MortalityTables<span class="pl-k">.</span><span class="pl-c1">table</span>(<span class="pl-s"><span class="pl-pds">"</span>1986-92 CIA – Female Nonsmoker, ANB<span class="pl-pds">"</span></span>)
l1 <span class="pl-k">=</span> <span class="pl-c1">SingleLife</span>(mort <span class="pl-k">=</span> m1<span class="pl-k">.</span>ultimate, issue_age <span class="pl-k">=</span> <span class="pl-c1">40</span>)
l2 <span class="pl-k">=</span> <span class="pl-c1">SingleLife</span>(mort <span class="pl-k">=</span> m2<span class="pl-k">.</span>ultimate, issue_age <span class="pl-k">=</span> <span class="pl-c1">37</span>)

jl <span class="pl-k">=</span> <span class="pl-c1">JointLife</span>(lives<span class="pl-k">=</span>(l1, l2), contingency<span class="pl-k">=</span><span class="pl-c1">LastSurvivor</span>(), joint_assumption<span class="pl-k">=</span><span class="pl-c1">Frasier</span>())


<span class="pl-c1">Insurance</span>(jl)      <span class="pl-c"><span class="pl-c">#</span> whole life insurance</span>
<span class="pl-k">...</span>                <span class="pl-c"><span class="pl-c">#</span> similar functions as shown in the first example above</span></pre></div>
<h2><a id="user-content-commutation-and-unexported-function-shorthand" class="anchor" aria-hidden="true" href="#commutation-and-unexported-function-shorthand"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Commutation and Unexported Function shorthand</h2>
<p>Because it's so common to use certain variables in your own code, LifeContingencies avoids exporting certain variables/functions so that it doesn't collide with your own usage. For example, you may find yourself doing something like:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="a = ...
b = ...
result = b - a
"><pre>a <span class="pl-k">=</span> <span class="pl-k">...</span>
b <span class="pl-k">=</span> <span class="pl-k">...</span>
result <span class="pl-k">=</span> b <span class="pl-k">-</span> a</pre></div>
<p>If you imported <code>using LifeContingencies</code> and the package exported <code>a</code> (<code>annuity_immediate</code>) then you could have problems if you tried to do the above. To avoid this, we only export long-form functions like <code>annuity_immediate</code>. To utilize the shorthand, you can include them into your code's scope like so:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using LifeContingencies # brings all the default functions into your scope
using LifeContingencies: a, ä # also brings the short-form annuity functions into scope
"><pre><span class="pl-k">using</span> LifeContingencies <span class="pl-c"><span class="pl-c">#</span> brings all the default functions into your scope</span>
<span class="pl-k">using</span> LifeContingencies<span class="pl-k">:</span> a, ä <span class="pl-c"><span class="pl-c">#</span> also brings the short-form annuity functions into scope</span></pre></div>
<p><strong>Or</strong> you can do the following:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using LifeContingencies # brings all the default functions into your scope
... # later on in the code
LifeContingencies.ä(...) # utilize the unexported function with the module name
"><pre><span class="pl-k">using</span> LifeContingencies <span class="pl-c"><span class="pl-c">#</span> brings all the default functions into your scope</span>
<span class="pl-k">...</span> <span class="pl-c"><span class="pl-c">#</span> later on in the code</span>
LifeContingencies<span class="pl-k">.</span><span class="pl-c1">ä</span>(<span class="pl-k">...</span>) <span class="pl-c"><span class="pl-c">#</span> utilize the unexported function with the module name</span></pre></div>
<p>For more on module scoping, see the <a href="https://docs.julialang.org/en/latest/manual/modules/#Summary-of-module-usage-1" rel="nofollow">Julia Manual section</a>.</p>
<h3><a id="user-content-actuarial-notation-shorthand" class="anchor" aria-hidden="true" href="#actuarial-notation-shorthand"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Actuarial notation shorthand</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="V =&gt; reserve_premium_net
v =&gt; discount
A =&gt; present value of Insurance
ä =&gt; present value of AnnuityDue
a =&gt; present value of AnnuityImmediate
P =&gt; premium_net
ω =&gt; omega
"><pre>V <span class="pl-k">=&gt;</span> reserve_premium_net
v <span class="pl-k">=&gt;</span> discount
A <span class="pl-k">=&gt;</span> present value of Insurance
ä <span class="pl-k">=&gt;</span> present value of AnnuityDue
a <span class="pl-k">=&gt;</span> present value of AnnuityImmediate
P <span class="pl-k">=&gt;</span> premium_net
ω <span class="pl-k">=&gt;</span> omega</pre></div>
<h3><a id="user-content-commutation-functions" class="anchor" aria-hidden="true" href="#commutation-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Commutation functions</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="l,
D,
M,
N,
C,
"><pre>l,
D,
M,
N,
C,</pre></div>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h2>
<ul>
<li>Life Insurance Mathematics, Gerber</li>
<li><a href="http://www2.math.umd.edu/~slud/s470/BookChaps/Chp6.pdf" rel="nofollow">Actuarial Mathematics and Life-Table Statistics, Slud</a></li>
<li><a href="http://www.macs.hw.ac.uk/~angus/papers/eas_offprints/commfunc.pdf" rel="nofollow">Commutation Functions, MacDonald</a></li>
</ul>
</article></div>