<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-hnswannjl" class="anchor" aria-hidden="true" href="#hnswannjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>HnswAnn.jl</h1>
<p><strong>This package provides an interface to a rust implementation of the paper by Yu. A. Malkov and D. A. Yashunin: <br>
"Efficient and Robust approximate nearest neighbours using Hierarchical Navigable Small World Graphs" (2016, 2018)</strong></p>
<p>The package provides Approximate Near Neighbour search for Vector of numeric types
(i.e Vector{T} where T &lt;: Number)
and different associated standard distances.</p>
<p>T can be instantiated by Float32, UInt8, UInt16, UInt32, Int32.<br>
Distances can be L1, L2, Cosine and Dot for float values and  L1, L2, Hamming and Jaccard for integer values. It is also possible one's own distance function by using julia callbacks compiled with the macro <em>@function</em>.</p>
<ul>
<li>Note : Dot is just the Cosine Distance but vectors are assumed normalized to 1. by user before entering insertion and search methods.</li>
</ul>
<p>The implementation relies on a Rust multithreaded, templated library with SIMD avx2 acceleration
for Float32 values and L1, L2, and Dot.</p>
<h2><a id="user-content-rust-installation-and-crate-hnsw-rs-installation" class="anchor" aria-hidden="true" href="#rust-installation-and-crate-hnsw-rs-installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Rust installation and crate hnsw-rs installation</h2>
<ul>
<li>Rust installation see <a href="https://www.rust-lang.org/tools/install" rel="nofollow">Rust Install</a></li>
</ul>
<p>run :<br>
curl <a href="https://sh.rustup.rs" rel="nofollow">https://sh.rustup.rs</a> -sSf | sh</p>
<p>The hnsw_rs package can be downloaded from <a href="https://gitlab.com/jpboth/hnswlib-rs" rel="nofollow">Hnsw</a> or soon
from <a href="https://crates.io/" rel="nofollow">crate.io</a>.</p>
<ul>
<li>
<p>compilation of rust library.
By default the rust crate builds a static library. The <em><strong>Building</strong></em> paragraph in the README.md file of the rust crate, describes how to build the dynamic libray needed for use with Julia.</p>
</li>
<li>
<p>Then push the path to the library <em>libhnsw_rs.so</em> in Base.DL_LOAD_PATH
(see this package function setRustlibPath(path::String)</p>
</li>
</ul>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p>Licensed under either of</p>
<ul>
<li>Apache License, Version 2.0, <a href="LICENSE-APACHE">LICENSE-APACHE</a> or <a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow">http://www.apache.org/licenses/LICENSE-2.0</a></li>
<li>MIT license <a href="LICENSE-MIT">LICENSE-MIT</a> or <a href="http://opensource.org/licenses/MIT" rel="nofollow">http://opensource.org/licenses/MIT</a></li>
</ul>
<p>at your option.</p>
<p>This software was written on my own while working at <a href="http://www.cea.fr/" rel="nofollow">CEA</a>, <a href="http://www-list.cea.fr/en/" rel="nofollow">CEA-LIST</a></p>
</article></div>