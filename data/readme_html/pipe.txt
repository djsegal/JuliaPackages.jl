<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-pipe" class="anchor" aria-hidden="true" href="#pipe"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Pipe</h1>
<ul>
<li>Julia 1.0: <a href="https://travis-ci.org/oxinabox/Pipe.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ad42bb6dfe12c549a71560169e6dd5f114e65de021a4ab073ec998622f0624b1/68747470733a2f2f7472617669732d6d61747269782d6261646765732e6865726f6b756170702e636f6d2f7265706f732f6f78696e61626f782f506970652e6a6c2f6272616e636865732f6d61737465722f31" alt="Build Status 1.0" data-canonical-src="https://travis-matrix-badges.herokuapp.com/repos/oxinabox/Pipe.jl/branches/master/1" style="max-width:100%;"></a></li>
<li>Julia 1.2: <a href="https://travis-ci.org/oxinabox/Pipe.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/dc15424c210679ea037d6bda0e3fb275b5e8433230e30fbbec492f00104ad300/68747470733a2f2f7472617669732d6d61747269782d6261646765732e6865726f6b756170702e636f6d2f7265706f732f6f78696e61626f782f506970652e6a6c2f6272616e636865732f6d61737465722f32" alt="Build Status 1.2" data-canonical-src="https://travis-matrix-badges.herokuapp.com/repos/oxinabox/Pipe.jl/branches/master/2" style="max-width:100%;"></a></li>
<li>Julia 1.3: <a href="https://travis-ci.org/oxinabox/Pipe.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f0f639a9369fc29e31d44f73141575649328fb6a367f8ee81e292077c569560f/68747470733a2f2f7472617669732d6d61747269782d6261646765732e6865726f6b756170702e636f6d2f7265706f732f6f78696e61626f782f506970652e6a6c2f6272616e636865732f6d61737465722f33" alt="Build Status 1.3" data-canonical-src="https://travis-matrix-badges.herokuapp.com/repos/oxinabox/Pipe.jl/branches/master/3" style="max-width:100%;"></a></li>
<li>Julia 1.4: <a href="https://travis-ci.org/oxinabox/Pipe.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/131cf0bd63c2b335ec9ed977e45c50c39823af66bc93b55177273340163a952a/68747470733a2f2f7472617669732d6d61747269782d6261646765732e6865726f6b756170702e636f6d2f7265706f732f6f78696e61626f782f506970652e6a6c2f6272616e636865732f6d61737465722f34" alt="Build Status 1.4" data-canonical-src="https://travis-matrix-badges.herokuapp.com/repos/oxinabox/Pipe.jl/branches/master/4" style="max-width:100%;"></a></li>
<li>Julia Nightly: <a href="https://travis-ci.org/oxinabox/Pipe.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b2bd85588f1d3b09ada2d57bc959f7c85e5dc0fcb78e753fb712eed7813e4bbf/68747470733a2f2f7472617669732d6d61747269782d6261646765732e6865726f6b756170702e636f6d2f7265706f732f6f78696e61626f782f506970652e6a6c2f6272616e636865732f6d61737465722f35" alt="Build Status Nightly" data-canonical-src="https://travis-matrix-badges.herokuapp.com/repos/oxinabox/Pipe.jl/branches/master/5" style="max-width:100%;"></a></li>
</ul>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Load the package via</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pipe: @pipe
"><pre><span class="pl-k">using</span> Pipe<span class="pl-k">:</span> <span class="pl-c1">@pipe</span></pre></div>
<p>(Just doing <code>using Pipe</code> will give an error about a name conflict with the <code>Base.Pipe</code> type.)</p>
<p>Place <code>@pipe</code> at the start of the line for which you want "advanced piping functionality" to work.</p>
<p>This works the same as Julia piping,
except if you place a underscore in the right-hand expression,
it will be replaced with the result of the left-hand expression.</p>
<p>So:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="@pipe a |&gt; b(x,_)       # b(x,a)    NOT: (b(x,_))(a) 
"><pre><span class="pl-c1">@pipe</span> a <span class="pl-k">|&gt;</span> <span class="pl-c1">b</span>(x,_)       <span class="pl-c"><span class="pl-c">#</span> b(x,a)    NOT: (b(x,_))(a) </span></pre></div>
<p>Futher the <code>_</code> can be unpacked, called, deindexed, etc.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="@pipe a |&gt; b(_...)      # b(a...)
@pipe a |&gt; b(_(1, 2))   # b(a(1,2))
@pipe a |&gt; b(_[3])      # b(a[3])
"><pre><span class="pl-c1">@pipe</span> a <span class="pl-k">|&gt;</span> <span class="pl-c1">b</span>(_<span class="pl-k">...</span>)      <span class="pl-c"><span class="pl-c">#</span> b(a...)</span>
<span class="pl-c1">@pipe</span> a <span class="pl-k">|&gt;</span> <span class="pl-c1">b</span>(<span class="pl-c1">_</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>))   <span class="pl-c"><span class="pl-c">#</span> b(a(1,2))</span>
<span class="pl-c1">@pipe</span> a <span class="pl-k">|&gt;</span> <span class="pl-c1">b</span>(_[<span class="pl-c1">3</span>])      <span class="pl-c"><span class="pl-c">#</span> b(a[3])</span></pre></div>
<p>This last can be used for interacting with multiple returned values. In general, however, this is frowned upon.
Generally, a pipeline is good for expressing a logical flow data through Single Input Single Output functions.
When you deindex multiple times, that is case of working with Multiple Input Multiple Output functions.</p>
<p>In that case it is likely more clear to create named variables, and call the functions normally in sequence.
There is also a performace cost for doing multiple deindexes (see below).</p>
<p>For example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="function get_angle(rise, run)
    atan(rise / run)
end

@pipe (2,4) |&gt; get_angle(_[1],_[2]) # 0.4636476090008061
get_angle(2,4)                      # 0.4636476090008061 (Note: the ordinary way is much clearer)
"><pre><span class="pl-k">function</span> <span class="pl-en">get_angle</span>(rise, run)
    <span class="pl-c1">atan</span>(rise <span class="pl-k">/</span> run)
<span class="pl-k">end</span>

<span class="pl-c1">@pipe</span> (<span class="pl-c1">2</span>,<span class="pl-c1">4</span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">get_angle</span>(_[<span class="pl-c1">1</span>],_[<span class="pl-c1">2</span>]) <span class="pl-c"><span class="pl-c">#</span> 0.4636476090008061</span>
<span class="pl-c1">get_angle</span>(<span class="pl-c1">2</span>,<span class="pl-c1">4</span>)                      <span class="pl-c"><span class="pl-c">#</span> 0.4636476090008061 (Note: the ordinary way is much clearer)</span></pre></div>
<p>However, for each <code>_</code> in the right hand side of the <code>|&gt;</code>, the left hand side will be called.
This can incur a performance cost.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="function ratio(value, lr, rr)
    println(&quot;slitting on ratio $lr:$rr&quot;)
    value * lr / (lr + rr), value * rr / (lr + rr)
end

function percent(left, right)
    left / right * 100
end

@pipe 10 |&gt; ratio(_,4,1) |&gt; percent(_[1],_[2]) # 400.0, outputs splitting on ratio 4:1 Twice
@pipe 10 |&gt; ratio(_,4,1) |&gt; percent(_...)      # 400.0, outputs splitting on ratio 4:1 Once
"><pre><span class="pl-k">function</span> <span class="pl-en">ratio</span>(value, lr, rr)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>slitting on ratio <span class="pl-v">$lr</span>:<span class="pl-v">$rr</span><span class="pl-pds">"</span></span>)
    value <span class="pl-k">*</span> lr <span class="pl-k">/</span> (lr <span class="pl-k">+</span> rr), value <span class="pl-k">*</span> rr <span class="pl-k">/</span> (lr <span class="pl-k">+</span> rr)
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">percent</span>(left, right)
    left <span class="pl-k">/</span> right <span class="pl-k">*</span> <span class="pl-c1">100</span>
<span class="pl-k">end</span>

<span class="pl-c1">@pipe</span> <span class="pl-c1">10</span> <span class="pl-k">|&gt;</span> <span class="pl-c1">ratio</span>(_,<span class="pl-c1">4</span>,<span class="pl-c1">1</span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">percent</span>(_[<span class="pl-c1">1</span>],_[<span class="pl-c1">2</span>]) <span class="pl-c"><span class="pl-c">#</span> 400.0, outputs splitting on ratio 4:1 Twice</span>
<span class="pl-c1">@pipe</span> <span class="pl-c1">10</span> <span class="pl-k">|&gt;</span> <span class="pl-c1">ratio</span>(_,<span class="pl-c1">4</span>,<span class="pl-c1">1</span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">percent</span>(_<span class="pl-k">...</span>)      <span class="pl-c"><span class="pl-c">#</span> 400.0, outputs splitting on ratio 4:1 Once</span></pre></div>
<hr>
<h2><a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>See Also:</h2>
<ul>
<li><a href="https://github.com/JuliaLang/julia/issues/5571#issuecomment-205754539">List of similar/related works</a></li>
</ul>
</article></div>