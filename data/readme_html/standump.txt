<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-standumpjl" class="anchor" aria-hidden="true" href="#standumpjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>StanDump.jl</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667"><img src="https://camo.githubusercontent.com/ae2f538d678a8e76c5493d870c59fbf928b14906e41227a07af5bbf3566b5068/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667" alt="lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-maturing-blue.svg" style="max-width: 100%;"></a>
<a href="http://www.repostatus.org/#wip" rel="nofollow"><img src="https://camo.githubusercontent.com/695935dc7a39fbee68b14bede34c6e31924729ca136f3864d9b61e3e09c49786/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f7769702e737667" alt="Project Status: WIP - Initial development is in progress, but there has not yet been a stable, usable release suitable for the public." data-canonical-src="http://www.repostatus.org/badges/latest/wip.svg" style="max-width: 100%;"></a>
<a href="https://github.com/tpapp/StanDump.jl/actions?query=workflow%3ACI"><img src="https://github.com/tpapp/StanDump.jl/workflows/CI/badge.svg" alt="build" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/tpapp/StanDump.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/290b6047d458ca76b1a0264cae5e3166ac94103a83aef696d533fe66abaf86b6/687474703a2f2f636f6465636f762e696f2f6769746875622f74706170702f5374616e44756d702e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/tpapp/StanDump.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">Julia package for saving <em>data</em> (arrays and scalars) in a format that can be read by <a href="http://mc-stan.org/interfaces/cmdstan.html" rel="nofollow"><code>cmdstan</code></a>.</p>
<h1 dir="auto"><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example usage</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="N = 200
stan_dump(&quot;/tmp/test.data.R&quot;, (N = N, x = randn(N)))"><pre>N <span class="pl-k">=</span> <span class="pl-c1">200</span>
<span class="pl-c1">stan_dump</span>(<span class="pl-s"><span class="pl-pds">"</span>/tmp/test.data.R<span class="pl-pds">"</span></span>, (N <span class="pl-k">=</span> N, x <span class="pl-k">=</span> <span class="pl-c1">randn</span>(N)))</pre></div>
<p dir="auto"><code>stan_dump(target, data)</code> is the main entry point. The first argument is usually a filename (see its docstring for other options), while the <code>data</code> is specified as a <code>NamedTuple</code>.</p>
<p dir="auto">Variable names are minimally validated. Only supports types understood by <code>cmdstan</code>.</p>
</article></div>