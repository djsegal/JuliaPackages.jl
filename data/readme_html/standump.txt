<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-standump" class="anchor" aria-hidden="true" href="#standump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>StanDump</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667"><img src="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-experimental-orange.svg" style="max-width:100%;"></a>
<a href="http://www.repostatus.org/#wip" rel="nofollow"><img src="https://camo.githubusercontent.com/695935dc7a39fbee68b14bede34c6e31924729ca136f3864d9b61e3e09c49786/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f7769702e737667" alt="Project Status: WIP - Initial development is in progress, but there has not yet been a stable, usable release suitable for the public." data-canonical-src="http://www.repostatus.org/badges/latest/wip.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/tpapp/StanDump.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/96a6f4a9ad21294c4f865642ccc73296a1db5a11b3bf288721fdd5f11f9d20b1/68747470733a2f2f7472617669732d63692e6f72672f74706170702f5374616e44756d702e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/tpapp/StanDump.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/tpapp/StanDump.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/4f3a7edd95d93f5575f6dbb06af8ce9ce0339cf0fd7b02f462301c4a588f4410/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f74706170702f5374616e44756d702e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/tpapp/StanDump.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></p>
<p>Julia package for saving <em>data</em> (arrays and scalars) in a format that can be read by <a href="http://mc-stan.org/interfaces/cmdstan.html" rel="nofollow"><code>cmdstan</code></a>.</p>
<h1><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example usage</h1>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="N = 200
stan_dump(&quot;/tmp/test.data.R&quot;, (N = N, x = randn(N)))
"><pre>N <span class="pl-k">=</span> <span class="pl-c1">200</span>
<span class="pl-c1">stan_dump</span>(<span class="pl-s"><span class="pl-pds">"</span>/tmp/test.data.R<span class="pl-pds">"</span></span>, (N <span class="pl-k">=</span> N, x <span class="pl-k">=</span> <span class="pl-c1">randn</span>(N)))</pre></div>
<p><code>stan_dump(target, data)</code> is the main entry point. The first argument is usually a filename (see its docstring for other options), while the <code>data</code> is specified as a <code>NamedTuple</code>.</p>
<p>Variable names are minimally validated. Only supports types understood by <code>cmdstan</code>.</p>
</article></div>