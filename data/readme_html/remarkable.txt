<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-remarkablejl" class="anchor" aria-hidden="true" href="#remarkablejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Remarkable.jl</h1>
<p dir="auto">API for the ReMarkable cloud. Based on <a href="https://github.com/splitbrain/ReMarkableAPI"><code>RemarkableAPI</code></a>, you can find a detailed API documentation in its <a href="https://github.com/splitbrain/ReMarkableAPI/wiki">wiki</a>.</p>
<h2 dir="auto"><a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Setup</h2>
<p dir="auto">To use the API you first need to register your device:
Get a authentification code on <a href="https://my.remarkable.com/device/desktop/connect" rel="nofollow">https://my.remarkable.com/device/desktop/connect</a> and call <code>Remarkable.register("your code here")</code>. This will create a token and save it as <code>.token</code> in your current folder (you can change this by calling <code>Remarkable.register("code", path_to_token = "/home/my/path")</code>.</p>
<p dir="auto">Once this is done create a client with <code>RemarkableClient()</code> which will by default look for a <code>.token</code> file in your current folder or can take directly a token string(check the docs with <code>?</code>!)</p>
<h2 dir="auto"><a id="user-content-doing-cool-stuff" class="anchor" aria-hidden="true" href="#doing-cool-stuff"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Doing cool stuff!</h2>
<p dir="auto">From there you can :</p>
<ul dir="auto">
<li>Access your data! <code>data = list_items(client)</code> will return a <code>Collection</code> containing all documents and sub folders. You can visualize nicely the structure by calling <code>print_tree(data)</code>.</li>
<li>Get a specific item! You can directly parse the <code>data</code> and select the item of you interest. If you know your item <code>ID</code> you can also do it via <code>get_item(client, ID)</code>.</li>
<li>Download an item! Just call <code>download(client, item, local_path)</code>.
This will download the item as a <code>.zip</code> file. If you just want the <code>.pdf</code>, <code>download_pdf</code> is also possible.</li>
<li>Upload a pdf! Call <code>upload_pdf!(client, path_to_pdf, pdf_name, parent)</code> where parent is the folder ID or a <code>Collection</code>.</li>
<li>Delete an item! Call <code>delete_item!(client, item)</code> and you can say goodbye!</li>
</ul>
<p dir="auto">Everything is done with <code>HTTP.request</code>, you can pass any <code>request</code> keyword argument to all functions (for example setting <code>verbose=2</code>) (only avoid <code>query</code>)</p>
<h2 dir="auto"><a id="user-content-a-small-demo" class="anchor" aria-hidden="true" href="#a-small-demo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>A small demo</h2>
<p dir="auto">Here is a small script getting a list of file, downloading one, renaming it and reuploading it :</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="client = RemarkableClient()
items = list_items(client)
print_tree(items) |&gt; display
#= 
Root
├─ Quick sheets
├─ SVGD Integration
├─ Books
│  └─ entropy-22-01100
├─ Teaching
│  └─ PML 20/21
├─ Derivations
=#
item = items[3][1] # entropy-22...
file_path = download_pdf(client, item, pwd())
mv(file_path, &quot;new_name.pdf&quot;)
upload_pdf!(client, &quot;new_name.pdf&quot;, &quot;Entropy Book.pdf&quot;, items[3]) # We reupload in the same location
delete_item!(client, item) # we delete the old item"><pre>client <span class="pl-k">=</span> <span class="pl-c1">RemarkableClient</span>()
items <span class="pl-k">=</span> <span class="pl-c1">list_items</span>(client)
<span class="pl-c1">print_tree</span>(items) <span class="pl-k">|&gt;</span> display
<span class="pl-c"><span class="pl-c">#=</span> </span>
<span class="pl-c">Root</span>
<span class="pl-c">├─ Quick sheets</span>
<span class="pl-c">├─ SVGD Integration</span>
<span class="pl-c">├─ Books</span>
<span class="pl-c">│  └─ entropy-22-01100</span>
<span class="pl-c">├─ Teaching</span>
<span class="pl-c">│  └─ PML 20/21</span>
<span class="pl-c">├─ Derivations</span>
<span class="pl-c"><span class="pl-c">=#</span></span>
item <span class="pl-k">=</span> items[<span class="pl-c1">3</span>][<span class="pl-c1">1</span>] <span class="pl-c"><span class="pl-c">#</span> entropy-22...</span>
file_path <span class="pl-k">=</span> <span class="pl-c1">download_pdf</span>(client, item, <span class="pl-c1">pwd</span>())
<span class="pl-c1">mv</span>(file_path, <span class="pl-s"><span class="pl-pds">"</span>new_name.pdf<span class="pl-pds">"</span></span>)
<span class="pl-c1">upload_pdf!</span>(client, <span class="pl-s"><span class="pl-pds">"</span>new_name.pdf<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Entropy Book.pdf<span class="pl-pds">"</span></span>, items[<span class="pl-c1">3</span>]) <span class="pl-c"><span class="pl-c">#</span> We reupload in the same location</span>
<span class="pl-c1">delete_item!</span>(client, item) <span class="pl-c"><span class="pl-c">#</span> we delete the old item</span></pre></div>
</article></div>