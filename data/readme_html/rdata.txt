<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-rdatajl" class="anchor" aria-hidden="true" href="#rdatajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RData.jl</h1>
<p dir="auto"><a href="https://github.com/JuliaData/RData.jl/actions?query=workflow%3ACI+branch%3Amain"><img src="https://github.com/JuliaData/RData.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaData/RData.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f3552a94f2b5de1d1e5da606e3bc1ef066bd5a7a0fbe943b45bbc71df47e7123/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961446174612f52446174612e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaData/RData.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/RData/idMMA?t=2" rel="nofollow"><img src="https://camo.githubusercontent.com/9bc23d23d22111831390889f9a7f6afbca6e63bf742f5c8124fdb0833da81c2c/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f52446174612f646570732e737667" alt="deps" data-canonical-src="https://juliahub.com/docs/RData/deps.svg" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/RData/idMMA" rel="nofollow"><img src="https://camo.githubusercontent.com/fe4d8bb42e99cb81934dcd8387296d3db54281326a7965e092742a931eb829c2/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f52446174612f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/RData/version.svg" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/RData/idMMA" rel="nofollow"><img src="https://camo.githubusercontent.com/7e6e37910183880f1d5964ec3f75edb4411c8c74a6a751eb5b635d01028728f4/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f52446174612f706b676576616c2e737667" alt="pkgeval" data-canonical-src="https://juliahub.com/docs/RData/pkgeval.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Read R data files (.rda, .RData) and optionally convert the contents into Julia equivalents.</p>
<p dir="auto">Can read any R data archive, although not all R types could be converted into Julia.</p>
<p dir="auto">For running R code from Julia see <a href="https://github.com/JuliaInterop/RCall.jl">RCall.jl</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">From Julia REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;RData&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>RData<span class="pl-pds">"</span></span>)</pre></div>
<h3 dir="auto"><a id="user-content-compression-formats" class="anchor" aria-hidden="true" href="#compression-formats"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Compression formats</h3>
<p dir="auto">R data files could be compressed by either <em>Gzip</em> (the default), <em>Bzip2</em> or <em>Xz</em> methods. <code>RData.jl</code> supports <em>Gzip</em>-compressed files out-of-the-box. To read <em>Bzip2</em> or <em>Xz</em>-compressed files <a href="https://github.com/bicycle1885/CodecBzip2.jl">CodecBzip2.jl</a> or <a href="https://github.com/bicycle1885/CodecXz.jl">CodecXz.jl</a> must be installed.</p>
<p dir="auto">For example, to load a file compressed by <em>Bzip2</em> you must first install the required codec:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;CodecBzip2&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CodecBzip2<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Then ensure <em>CodecBzip2</em> is loaded before calling <em>RData.load</em>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using RData
import CodecBzip2

load('some_bzip2_compressed.rda')"><pre><span class="pl-k">using</span> RData
<span class="pl-k">import</span> CodecBzip2

<span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">'</span>some_bzip2_compressed.rda<span class="pl-pds">'</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">To read R objects from "example.rda" file:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using RData

objs = load(&quot;path_to/example.rda&quot;)"><pre><span class="pl-k">using</span> RData

objs <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>path_to/example.rda<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The result is a dictionary (<code>Dict{String, Any}</code>) of all R objects stored in "example.rda".</p>
<p dir="auto">Unless the <code>convert=false</code> keyword option is specified, <code>load()</code> will try to automatically
convert R objects into Julia equivalents:</p>
<table>
<thead>
<tr>
<th>R object</th>
<th>Julia object</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>named vector, list</td>
<td><code>DictoVec</code></td>
<td><code>DictoVec</code> allows indexing both by element index and by its name, just as R vectors and lists</td>
</tr>
<tr>
<td>vector</td>
<td><code>Vector{T}</code></td>
<td><code>T</code> is the appropriate Julia type. If R vector contains <code>NA</code> values, they are converted to <a href="https://github.com/JuliaData/Missings.jl"><code>missing</code></a>, and the elements type of the resulting <code>Vector</code> is <code>Union{T, Missing}</code>.</td>
</tr>
<tr>
<td>factor</td>
<td><code>CategoricalArray</code></td>
<td><a href="https://github.com/JuliaData/CategoricalArrays.jl">CategoricalArrays.jl</a></td>
</tr>
<tr>
<td><code>Date</code></td>
<td><code>Dates.Date</code></td>
<td></td>
</tr>
<tr>
<td><code>POSIXct</code> date time</td>
<td><code>ZonedDateTime</code></td>
<td><a href="https://github.com/JuliaTime/TimeZones.jl">TimeZones.jl</a></td>
</tr>
<tr>
<td>data frame</td>
<td><code>DataFrame</code></td>
<td><a href="https://github.com/JuliaData/DataFrames.jl">DataFrames.jl</a></td>
</tr>
<tr>
<td><code>compact_xxxseq</code></td>
<td><code>UnitRange</code>/<code>StepRange</code></td>
<td></td>
</tr>
</tbody>
</table>
<p dir="auto">If conversion to the Julia type is not supported (e.g. R closure or language expression), <code>load()</code> will return the internal RData representation of the object (<code>RSEXPREC</code> subtype).</p>
</article></div>