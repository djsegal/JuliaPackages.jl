<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-rdatajl" class="anchor" aria-hidden="true" href="#rdatajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>RData.jl</h1>
<p><a href="https://coveralls.io/github/JuliaData/RData.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/fa72a0a2a1b8726c32b8beb43485afddf93fb287/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c6961446174612f52446174612e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaData/RData.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://travis-ci.org/JuliaData/RData.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/20825f96440ab1f6b99221712eda44d9c25a7e08/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961446174612f52446174612e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaData/RData.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/alyst/rdata-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/545f863105f433c798f68d23993356c86b93cbbd/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6b633273356b6d76796577347738696e2f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/kc2s5kmvyew4w8in/branch/master?svg=true" style="max-width:100%;"></a></p>
<p>Read R data files (.rda, .RData) and optionally convert the contents into Julia equivalents.</p>
<p>Can read any R data archive, although not all R types could be converted into Julia.</p>
<p>For running R code from Julia see <a href="https://github.com/JuliaInterop/RCall.jl">RCall.jl</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>From Julia REPL:</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>RData<span class="pl-pds">"</span></span>)</pre></div>
<h3><a id="user-content-compression-formats" class="anchor" aria-hidden="true" href="#compression-formats"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Compression formats</h3>
<p>R data files could be compressed by either <em>Gzip</em> (the default), <em>Bzip2</em> or <em>Xz</em> methods. <code>RData.jl</code> supports <em>Gzip</em>-compressed files out-of-the-box. To read <em>Bzip2</em> or <em>Xz</em>-compressed files <a href="https://github.com/bicycle1885/CodecBzip2.jl">CodecBzip2.jl</a> or <a href="https://github.com/bicycle1885/CodecXz.jl">CodecXz.jl</a> must be installed.</p>
<p>For example, to load a file compressed by <em>Bzip2</em> you must first install the required codec:</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CodecBzip2<span class="pl-pds">"</span></span>)</pre></div>
<p>Then ensure <em>CodecBzip2</em> is loaded before calling <em>RData.load</em>:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> RData
<span class="pl-k">import</span> CodecBzip2

<span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">'</span>some_bzip2_compressed.rda<span class="pl-pds">'</span></span>)</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>To read R objects from "example.rda" file:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> RData

objs <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>path_to/example.rda<span class="pl-pds">"</span></span>)</pre></div>
<p>The result is a dictionary (<code>Dict{String, Any}</code>) of all R objects stored in "example.rda".</p>
<p>If <code>convert=true</code> keyword option is specified, <code>load()</code> will try to automatically
convert R objects into Julia equivalents:</p>
<table>
<thead>
<tr>
<th>R object</th>
<th>Julia object</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>named vector, list</td>
<td><code>DictoVec</code></td>
<td><code>DictoVec</code> allows indexing both by element index and by its name, just as R vectors and lists</td>
</tr>
<tr>
<td>vector</td>
<td><code>Vector{T}</code></td>
<td><code>T</code> is the appropriate Julia type. If R vector contains <code>NA</code> values, they are converted to <a href="https://github.com/JuliaData/Missings.jl"><code>missing</code></a>, and the elements type of the resulting <code>Vector</code> is <code>Union{T, Missing}</code>.</td>
</tr>
<tr>
<td>factor</td>
<td><code>CategoricalArray</code></td>
<td><a href="https://github.com/JuliaData/CategoricalArrays.jl">CategoricalArrays.jl</a></td>
</tr>
<tr>
<td><code>Date</code></td>
<td><code>Dates.Date</code></td>
<td></td>
</tr>
<tr>
<td><code>POSIXct</code> date time</td>
<td><code>ZonedDateTime</code></td>
<td><a href="https://github.com/JuliaTime/TimeZones.jl">TimeZones.jl</a></td>
</tr>
<tr>
<td>data frame</td>
<td><code>DataFrame</code></td>
<td><a href="https://github.com/JuliaData/DataFrames.jl">DataFrames.jl</a></td>
</tr>
</tbody>
</table>
<p>If conversion to the Julia type is not supported (e.g. R closure or language expression), <code>load()</code> will return the internal RData representation of the object (<code>RSEXPREC</code> subtype).</p>
</article></div>