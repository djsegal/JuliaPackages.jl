<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-nlpmodelsalgencanjl--" class="anchor" aria-hidden="true" href="#nlpmodelsalgencanjl--"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>NLPModelsAlgencan.jl <a href="https://travis-ci.com/pjssilva/NLPModelsAlgencan.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/904f44822355214ad26b81899765841b8379f1cc71d24c244b691fd866246dbf/68747470733a2f2f7472617669732d63692e636f6d2f706a7373696c76612f4e4c504d6f64656c73416c67656e63616e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/pjssilva/NLPModelsAlgencan.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://coveralls.io/github/pjssilva/NLPModelsAlgencan.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/cd8efca3fb13ae05f94165da849cda6b7ca80a98b335c69106bf199288e596df/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f706a7373696c76612f4e4c504d6f64656c73416c67656e63616e2e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/pjssilva/NLPModelsAlgencan.jl/badge.svg?branch=master" style="max-width:100%;"></a></h1>
<p><strong>NLPModelsAlgencan.jl</strong> is a <a href="https://github.com/JuliaSmoothOptimizers/NLPModels.jl">NLPModels</a>
interface to the <a href="https://www.ime.usp.br/~egbirgin/tango/codes.php" rel="nofollow">Algencan</a>
nonlinear solver.</p>
<p>Algencan is a large scale high performance augmented Lagrangian solver written
by Ernesto Birgin and Mario Mart√≠nez. It has many special features like being
able to use the HSL library to speed up the sparse matrix linear algebra and
some smart acceleration strategies.</p>
<h2><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Status</h2>
<p>At this point this is alpha software. It will only work with Julia 1.0 or later.</p>
<h2><a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Prerequisites</h2>
<p>The package downloads and installs Algencan upon installation. Therefore, you
need to have a minimal development environment installed. You need at least
<code>gcc</code>, <code>gfortran</code>, <code>make</code> and a development version of a BLAS/Lapack libraries
(for example <code>libopenblas-dev</code>). The BLAS/Lapack implmentation is important to
get good performance. Use a high quality one like Openblas or Intel MKL.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>We have not registered the NLPModelsAlgencan.jl package yet. Hence, to add it you
will need to give the full URL to the Github directory. See examples below.</p>
<p>There are three main modes of installation, depending on how you want to compile
Algencan.</p>
<h3><a id="user-content-the-preferred-way-using-hsl" class="anchor" aria-hidden="true" href="#the-preferred-way-using-hsl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>The preferred way: using HSL</h3>
<p>Obs: We only give support for MA57 at this point.</p>
<p>The preferred way to use Algencan is to link it against an HSL function to solve
sparse linear systems. To do this you need to grab your copy of MA57 from
<a href="http://www.hsl.rl.ac.uk/catalogue/hsl_ma57.html" rel="nofollow">HSL</a>. It has a free academic
license. You should receive a file named <code>hsl_ma57-5.2.0.tar.gz</code>.</p>
<p>All you need to do is to create an environment variable named
<code>MA57_SOURCE</code> pointing to this file <em>before</em> installing NLPModelsAlgencan.jl. For
example, if the file is located at the <code>/tmp</code> folder, in bash you would do:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="export MA57_SOURCE=/tmp/hsl_ma57-5.2.0.tar.gz
"><pre><span class="pl-k">export</span> MA57_SOURCE=/tmp/hsl_ma57-5.2.0.tar.gz</pre></div>
<p>After that just install NLPModelsAlgencan.jl from Julia's REPL and import it to force
pre-compilation.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(@v1.x) pkg&gt; add NLPModelsAlgencan
julia&gt; using NLPModelsAlgencan
"><pre>(<span class="pl-c1">@v1</span><span class="pl-k">.</span>x) pkg<span class="pl-k">&gt;</span> add NLPModelsAlgencan
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> NLPModelsAlgencan</pre></div>
<h3><a id="user-content-the-easy-way" class="anchor" aria-hidden="true" href="#the-easy-way"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>The easy way</h3>
<p>Just type</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(@v1.x) pkg&gt; add NLPModelsAlgencan
julia&gt; using NLPModelsAlgencan
"><pre>(<span class="pl-c1">@v1</span><span class="pl-k">.</span>x) pkg<span class="pl-k">&gt;</span> add NLPModelsAlgencan
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> NLPModelsAlgencan</pre></div>
<p>in package mode in Julia's REPL.</p>
<p>This will download Algencan's code, compile it and make it available to the
NLPModelsAlgencan.jl package. <strong>However, there is a major caveat here. The
Algencan solver will be compiled without any HSL support. This will have a major
negative impact on its behavior and performance. You should use HSL whenever you
have access to it.</strong></p>
<h3><a id="user-content-precompiled-libalgencanso" class="anchor" aria-hidden="true" href="#precompiled-libalgencanso"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Precompiled <code>libalgencan.so</code></h3>
<p>If you have your own copy of <code>libalgencan.so</code> (note that you need a shared
library), you can use it. Just create an environment variable like below
pointing to the directory where the library find resides <em>before</em> installing
NLPModelsAlgencan.jl.</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="export ALGENCAN_LIB_DIR=/path/where/algencan/libray/is
"><pre><span class="pl-k">export</span> ALGENCAN_LIB_DIR=/path/where/algencan/libray/is</pre></div>
<p>You can then proceed to install NLPModelsAlgencan.jl from the REPL</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(@v1.x) pkg&gt; add NLPModelsAlgencan
julia&gt; using NLPModelsAlgencan
"><pre>(<span class="pl-c1">@v1</span><span class="pl-k">.</span>x) pkg<span class="pl-k">&gt;</span> add NLPModelsAlgencan
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> NLPModelsAlgencan</pre></div>
<h2><a id="user-content-hints-to-self-compilation-of-algencan-with-hsl-libraries" class="anchor" aria-hidden="true" href="#hints-to-self-compilation-of-algencan-with-hsl-libraries"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Hints to self compilation of Algencan with HSL libraries</h2>
<p>This <a href="https://github.com/pjssilva/NLPModelsAlgencan.jl/wiki/Compiling-HSL-Libraries-for-use-with-NLPModelsAlgencan.jl">wiki
page</a>
documents the steps I used to compile a version of <code>libalgencan.so</code> with HSL
support.</p>
</article></div>