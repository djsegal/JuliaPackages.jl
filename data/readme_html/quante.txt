<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-quantejl" class="anchor" aria-hidden="true" href="#quantejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quante.jl</h1>
<p><a href="https://travis-ci.org/jarvist/Quante.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f41b2855a362a27dbe7702b98cc48a786c177ef5/68747470733a2f2f7472617669732d63692e6f72672f6a6172766973742f5175616e74652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/jarvist/Quante.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/jarvist/Quante.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/8aa999d8d8870fe7166f53301fc98d44aee57998/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a6172766973742f5175616e74652e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/jarvist/Quante.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/jarvist/Quante.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/47d3d13abb70002ea7c84593a0ab8c3869b931df/687474703a2f2f636f6465636f762e696f2f6769746875622f6a6172766973742f5175616e74652e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/jarvist/Quante.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>An open-source implementation of quantum-chemistry methods in the Julia
programming language.
These codes are based on Rick Muller's pyquante2
(<a href="https://github.com/rpmuller/pyquante2/">https://github.com/rpmuller/pyquante2/</a>).</p>
<p>Julia is a high-level dynamic programming language that is capable of fast
execution. In particular it can generate performant code targetting SIMD,
parallelisation and GPU execution, from high level constructions.</p>
<h3><a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ToDo</h3>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Debug H2O / LiF RHF energy error</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Add CCSD 'explicit forloops' - see Psi4Numpy
<a href="https://github.com/psi4/psi4numpy/blob/master/Coupled-Cluster/CCSD.py">https://github.com/psi4/psi4numpy/blob/master/Coupled-Cluster/CCSD.py</a></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Add CCSD 'Tensor contractions' - via
<a href="https://github.com/Jutho/TensorOperations.jl">https://github.com/Jutho/TensorOperations.jl</a></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Play with C_∞ / D_∞ symmetry for diatomic CCSD interaction energies</li>
</ul>
<h3><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h3>
<ul>
<li>Attila Szabo and Neil S. Ostlund - Modern Quantum Chemistry
(<a href="https://www.amazon.co.uk/Modern-Quantum-Chemistry-Introduction-Electronic/dp/0486691861" rel="nofollow">https://www.amazon.co.uk/Modern-Quantum-Chemistry-Introduction-Electronic/dp/0486691861</a>)</li>
<li>David B. Cook - Handbook of Computational Quantum Chemistry
(<a href="https://www.amazon.co.uk/Handbook-Computational-Quantum-Chemistry-Dover/dp/0486443078" rel="nofollow">https://www.amazon.co.uk/Handbook-Computational-Quantum-Chemistry-Dover/dp/0486443078</a>)</li>
<li>PyQuante2 (<a href="https://github.com/rpmuller/pyquante2">https://github.com/rpmuller/pyquante2</a>)</li>
</ul>
</article></div>