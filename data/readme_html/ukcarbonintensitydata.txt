<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-ukcarbonintensitydatajl" class="anchor" aria-hidden="true" href="#ukcarbonintensitydatajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>UKCarbonIntensityData.jl</h1>
<p dir="auto"><a href="https://ianlmgoddard.github.io/UKCarbonIntensityData.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://ianlmgoddard.github.io/UKCarbonIntensityData.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/ianlmgoddard/UKCarbonIntensityData.jl/actions/workflows/JuliaNightly.yml?query=branch%3Amain"><img src="https://github.com/ianlmgoddard/UKCarbonIntensityData.jl/actions/workflows/JuliaNightly.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/ianlmgoddard/UKCarbonIntensityData.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b063fcbfa23eb1def7bdddad45590efbc7ab29872fcc9f64756aac2acef1be84/68747470733a2f2f636f6465636f762e696f2f67682f69616e6c6d676f64646172642f554b436172626f6e496e74656e73697479446174612e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/ianlmgoddard/UKCarbonIntensityData.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width: 100%;"></a></p>
<p dir="auto">A Julia wrapper for the UK National Grid Electricity System operator (NG-ESO) <a href="https://carbon-intensity.github.io/api-definitions/?python#carbon-intensity-api-v2-0-0" rel="nofollow">carbon intensity data API.</a></p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">The Carbon intensity API lets us grab data at different spatial scales, either nationwide or regional, and over different time periods. The following examples show how we can use this package to retrieve data via the API. Note that the data has half hourly temporal resolution.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TimeZones
using DataFrames
using UKCarbonIntensityData
using Plots

start_date = ZonedDateTime(2022, 01, 01, tz&quot;UTC&quot;)
end_date = ZonedDateTime(2022, 02, 28, tz&quot;UTC&quot;)

# get national level intensity data for the given period
national_data = get_carbon_intensity(start_date, end_date)"><pre><span class="pl-k">using</span> TimeZones
<span class="pl-k">using</span> DataFrames
<span class="pl-k">using</span> UKCarbonIntensityData
<span class="pl-k">using</span> Plots

start_date <span class="pl-k">=</span> <span class="pl-c1">ZonedDateTime</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">01</span>, <span class="pl-c1">01</span>, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">tz</span>"</span>UTC<span class="pl-pds">"</span></span>)
end_date <span class="pl-k">=</span> <span class="pl-c1">ZonedDateTime</span>(<span class="pl-c1">2022</span>, <span class="pl-c1">02</span>, <span class="pl-c1">28</span>, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">tz</span>"</span>UTC<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> get national level intensity data for the given period</span>
national_data <span class="pl-k">=</span> <span class="pl-c1">get_carbon_intensity</span>(start_date, end_date)</pre></div>
<p dir="auto">We can also fetch data at the regional level, the <code>get_regional_data</code> function returns a <code>NamedTuple</code> with two fields. The fields contain a <code>DataFrame</code> of the forecast carbon intensity in each region, and the generation mix for the region respectively. Note that regional data is forecast only, ground truth values are not available via the NG-ESO API.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="regional_data = get_regional_data(start_date, end_date)
regional_intensity = regional_data.intensity;
regional_mix = regional_data.generation;"><pre>regional_data <span class="pl-k">=</span> <span class="pl-c1">get_regional_data</span>(start_date, end_date)
regional_intensity <span class="pl-k">=</span> regional_data<span class="pl-k">.</span>intensity;
regional_mix <span class="pl-k">=</span> regional_data<span class="pl-k">.</span>generation;</pre></div>
<p dir="auto">To grab the forecast for todays forecast and realised carbon intensities, we can use <code>get_todays_forecast</code>. By default this will return national level data, however we can pass the <code>regional</code> kwarg to return data with regional granularity.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="national_data = get_todays_forecast()

regional_data = get_todays_forecast(regional = true)"><pre>national_data <span class="pl-k">=</span> <span class="pl-c1">get_todays_forecast</span>()

regional_data <span class="pl-k">=</span> <span class="pl-c1">get_todays_forecast</span>(regional <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<p dir="auto">We can also use this package to visualise the current forecast and actual carbon intensity data over the next 48 hours. By default national data is shown.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="todays_plot()"><pre class="notranslate"><code>todays_plot()
</code></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/national_daily_plot.png"><img src="docs/src/assets/national_daily_plot.png" alt="" style="max-width: 100%;"></a></p>
<p dir="auto">To visualise the data for a specific region we can pass the <code>region</code> kwarg to the plot call.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="todays_plot(region = &quot;South Scotland&quot;)"><pre class="notranslate"><code>todays_plot(region = "South Scotland")
</code></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/regional_daily_plot.png"><img src="docs/src/assets/regional_daily_plot.png" alt="" style="max-width: 100%;"></a></p>
</article></div>