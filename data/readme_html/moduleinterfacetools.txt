<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-moduleinterfacetools" class="anchor" aria-hidden="true" href="#moduleinterfacetools"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ModuleInterfaceTools</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Info</strong></th>
<th align="center"><strong>Windows</strong></th>
<th align="center"><strong>Linux &amp; MacOS</strong></th>
<th align="center"><strong>Package Evaluator</strong></th>
<th align="center"><strong>CodeCov</strong></th>
<th align="center"><strong>Coveralls</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="LICENSE.md"><img src="https://camo.githubusercontent.com/4440d5deb3a53c4f8661ee765378e6071e7878e8/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c6174" alt="" data-canonical-src="http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat" style="max-width:100%;"></a></td>
<td align="center"><a href="https://ci.appveyor.com/project/ScottPJones/moduleinterfacetools-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/516368f6192a6a7ef57281b9bd82d4b45016a078/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f783133676837793669643366626d6b653f7376673d74727565" alt="" data-canonical-src="https://ci.appveyor.com/api/projects/status/x13gh7y6id3fbmke?svg=true" style="max-width:100%;"></a></td>
<td align="center"><a href="https://travis-ci.org/JuliaString/ModuleInterfaceTools.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2528820cc87e77d1037be1e773047230b44b2e62/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961537472696e672f4d6f64756c65496e74657266616365546f6f6c732e6a6c2e737667" alt="" data-canonical-src="https://travis-ci.org/JuliaString/ModuleInterfaceTools.jl.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="http://pkg.julialang.org/detail/ModuleInterfaceTools" rel="nofollow"><img src="https://camo.githubusercontent.com/085fd35e95ab3c98c22bcfe3cbc7929b971a69d9/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f4d6f64756c65496e74657266616365546f6f6c735f302e362e737667" alt="" data-canonical-src="http://pkg.julialang.org/badges/ModuleInterfaceTools_0.6.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/JuliaString/ModuleInterfaceTools.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f3ea193d1085128ed2cd984d78f0ea329ed64f51/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961537472696e672f4d6f64756c65496e74657266616365546f6f6c732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaString/ModuleInterfaceTools.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://coveralls.io/github/JuliaString/ModuleInterfaceTools.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fc20ddc21cfd0a1f39e34e9d8c19b5e7ab76204f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c6961537472696e672f4d6f64756c65496e74657266616365546f6f6c732e6a6c2f62616467652e737667" alt="" data-canonical-src="https://coveralls.io/repos/github/JuliaString/ModuleInterfaceTools.jl/badge.svg" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="center"><a href="https://gitter.im/JuliaString/Lobby?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge" rel="nofollow"><img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://ci.appveyor.com/project/ScottPJones/moduleinterfacetools-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/7f454b2a1af93840831197ce98fea83d4ec80b16/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f783133676837793669643366626d6b652f6272616e63682f6d61737465723f7376673d74727565" alt="" data-canonical-src="https://ci.appveyor.com/api/projects/status/x13gh7y6id3fbmke/branch/master?svg=true" style="max-width:100%;"></a></td>
<td align="center"><a href="https://travis-ci.org/JuliaString/ModuleInterfaceTools.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/717c557b16eb7d2641d435ea0bb1e22eebf41a2a/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961537472696e672f4d6f64756c65496e74657266616365546f6f6c732e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.org/JuliaString/ModuleInterfaceTools.jl.svg?branch=master" style="max-width:100%;"></a></td>
<td align="center"><a href="http://pkg.julialang.org/detail/ModuleInterfaceTools" rel="nofollow"><img src="https://camo.githubusercontent.com/24064992965f849c7fee7d36c471eb462b3e061b/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f4d6f64756c65496e74657266616365546f6f6c735f302e372e737667" alt="" data-canonical-src="http://pkg.julialang.org/badges/ModuleInterfaceTools_0.7.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/JuliaString/ModuleInterfaceTools.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f3ea193d1085128ed2cd984d78f0ea329ed64f51/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961537472696e672f4d6f64756c65496e74657266616365546f6f6c732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaString/ModuleInterfaceTools.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://coveralls.io/github/JuliaString/ModuleInterfaceTools.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/d097c4bdcc72b858503465c03ecd2ff85822aa15/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c6961537472696e672f4d6f64756c65496e74657266616365546f6f6c732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://coveralls.io/repos/github/JuliaString/ModuleInterfaceTools.jl/badge.svg?branch=master" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>This provides a way of having different lists of names that you want to be part of a public API,
as well as being part of a development API (i.e. functions that are not normally needed by users of a package, but <em>are</em> needed by a developer writing a package that depends on it).
It also separates lists of names of functions, that can be extended, from names of types, modules, constants that cannot be extended, and functions that are not intended to be extended.</p>
<p>This is a bit of a work-in-progress, I heartily welcome any suggestions for better syntax, better implementation, and extra functionality.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">@api</span> <span class="pl-k">&lt;</span>cmd<span class="pl-k">&gt;</span> [<span class="pl-k">&lt;</span>symbols<span class="pl-k">&gt;</span><span class="pl-k">...</span>]

 <span class="pl-k">*</span> <span class="pl-c1">@api</span> list                <span class="pl-c"><span class="pl-c">#</span> display information about this module's API</span>
 <span class="pl-k">*</span> <span class="pl-c1">@api</span> freeze              <span class="pl-c"><span class="pl-c">#</span> use at end of module, to "freeze" API</span>

 <span class="pl-k">*</span> <span class="pl-c1">@api</span> list   <span class="pl-k">&lt;</span>modules<span class="pl-k">&gt;</span><span class="pl-k">...</span> <span class="pl-c"><span class="pl-c">#</span> display information about one or more modules' API</span>
 <span class="pl-k">*</span> <span class="pl-c1">@api</span> use    <span class="pl-k">&lt;</span>modules<span class="pl-k">&gt;</span><span class="pl-k">...</span> <span class="pl-c"><span class="pl-c">#</span> for normal use, i.e. `using`</span>
 <span class="pl-k">*</span> <span class="pl-c1">@api</span> test   <span class="pl-k">&lt;</span>modules<span class="pl-k">&gt;</span><span class="pl-k">...</span> <span class="pl-c"><span class="pl-c">#</span> using public and develop symbols, for testing purposes</span>
 <span class="pl-k">*</span> <span class="pl-c1">@api</span> extend <span class="pl-k">&lt;</span>modules<span class="pl-k">&gt;</span><span class="pl-k">...</span> <span class="pl-c"><span class="pl-c">#</span> for development, imports `base`, `public`, and `develop` lists,</span>
 <span class="pl-k">*</span>                          <span class="pl-c"><span class="pl-c">#</span> uses `define_public`and `define_develop` lists</span>
 <span class="pl-k">*</span> <span class="pl-c1">@api</span> <span class="pl-k">export</span> <span class="pl-k">&lt;</span>modules<span class="pl-k">&gt;</span><span class="pl-k">...</span> <span class="pl-c"><span class="pl-c">#</span> export api symbols</span>

 <span class="pl-k">*</span> <span class="pl-c1">@api</span> base     <span class="pl-k">&lt;</span>names<span class="pl-k">...</span><span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Add functions from Base that are part of the API</span>
 <span class="pl-k">*</span> <span class="pl-c1">@api</span> public!  <span class="pl-k">&lt;</span>names<span class="pl-k">...</span><span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Add functions that are part of the public API</span>
 <span class="pl-k">*</span> <span class="pl-c1">@api</span> develop! <span class="pl-k">&lt;</span>names<span class="pl-k">...</span><span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Add functions that are part of the development API</span>
 <span class="pl-k">*</span> <span class="pl-c1">@api</span> public   <span class="pl-k">&lt;</span>names<span class="pl-k">...</span><span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Add other symbols that are part of the public API (structs, consts)</span>
 <span class="pl-k">*</span> <span class="pl-c1">@api</span> develop  <span class="pl-k">&lt;</span>names<span class="pl-k">...</span><span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Add other symbols that are part of the development API</span>
 <span class="pl-k">*</span> <span class="pl-c1">@api</span> modules  <span class="pl-k">&lt;</span>names<span class="pl-k">...</span><span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Add submodule names that are part of the API</span>
 <span class="pl-k">*</span> <span class="pl-c1">@api</span> base!    <span class="pl-k">&lt;</span>names<span class="pl-k">...</span><span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> Conditionally import functions from Base, or define them</span></pre></div>
<p>This also includes the <code>@def</code> macro, renamed as <code>@api def</code> which I've found very useful!</p>
<p>I would also like to add commands that add the functionality of <code>@reexport</code>,
but instead of exporting the symbols found in the module(s), add them to either the public
or develop list. (I had a thought that it could automatically add names that do not start with <code>_</code>,
have a docstring, and are not exported, to the develop list, and all exported names would be added to the public list).</p>
<p>Another thing I'd like to add is a way of using/importing a module, but having pairs of names, for renaming purposes, i.e. something like <code>@api use Foobar: icantreadthisname =&gt; i_cant_read_this_name</code>
which would import the variable from Foobar, but with the name after the <code>=&gt;</code>.</p>
</article></div>