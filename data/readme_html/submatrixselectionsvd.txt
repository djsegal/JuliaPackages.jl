<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-submatrixselectionsvd" class="anchor" aria-hidden="true" href="#submatrixselectionsvd"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SubMatrixSelectionSVD</h1>
<p dir="auto"><a href="https://travis-ci.com/rasmushenningsson/SubMatrixSelectionSVD.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0488d7af12bad97600972e1b126f7748d11c5df818f26170986d4f6296013052/68747470733a2f2f7472617669732d63692e636f6d2f7261736d757368656e6e696e6773736f6e2f5375624d617472697853656c656374696f6e5356442e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/rasmushenningsson/SubMatrixSelectionSVD.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://ci.appveyor.com/project/rasmushenningsson/SubMatrixSelectionSVD-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5816c9593680e8c28ba66ff7cf25f787ff41e52d75adabae3c1a7c392e4b8c42/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f7261736d757368656e6e696e6773736f6e2f5375624d617472697853656c656374696f6e5356442e6a6c3f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/rasmushenningsson/SubMatrixSelectionSVD.jl?svg=true" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/rasmushenningsson/SubMatrixSelectionSVD.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/d5fcf06c8687ba72f9976a71f9f6d742af48c9b9bdbdf47573bbb9e9b98a3cd2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f7261736d757368656e6e696e6773736f6e2f5375624d617472697853656c656374696f6e5356442e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/rasmushenningsson/SubMatrixSelectionSVD.jl/badge.svg?branch=master&amp;service=github" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/rasmushenningsson/SubMatrixSelectionSVD.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/520a127c0fa737cff00c0f7f3fe0ecd46221c71bab28dd541daadc94a65137ae/687474703a2f2f636f6465636f762e696f2f6769746875622f7261736d757368656e6e696e6773736f6e2f5375624d617472697853656c656374696f6e5356442e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/rasmushenningsson/SubMatrixSelectionSVD.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="http://arxiv.org/abs/1710.08144" rel="nofollow">SubMatrix Selection Singular Value Decomposition</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;SubMatrixSelectionSVD&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>SubMatrixSelectionSVD<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SubMatrixSelectionSVD, LinearAlgebra, DataFrames, Gadfly

# Create matrices with orthonormal columns
function randorthonormal(P::Integer, N::Integer)
    @assert P≥N
    O = zeros(P,N)
    for k=1:N
        x = randn(P)
        x -= O[:,1:k-1]*(O[:,1:k-1]'x)
        O[:,k] = x/norm(x)
    end
    O
end

# Create data matrix corrupted by noise
P = 1000
N = 40
d = 4
u = zeros(P,d)
u[1:100,1:2]   = randorthonormal(100,2)
u[101:200,3:4] = randorthonormal(100,2)
s = [10,8,5,4] # singular values
v = randorthonormal(N,d)
X = u*Diagonal(s)*v' + 0.1*randn(P,N).*rand(P) # different strength of noise for different variables

# Compute the SMSSVD of X
σThresholds = 10 .^ range(-2,stop=0,length=100)
U,Σ,V,ps,signalDimensions = smssvd(X, d, σThresholds)

# Projection Score Plot
df = DataFrame(Sigma=repeat(σThresholds',d,1)[:], ProjectionScore=ps[:], NbrDims=repeat(1:d,1,length(σThresholds))[:])
coords = Coord.cartesian(xmin=log10(σThresholds[1]), xmax=log10(σThresholds[end]), ymin=0)
plot(df,x=:Sigma,y=:ProjectionScore,color=:NbrDims,Geom.line,coords,Scale.x_log10,Guide.xlabel(&quot;σ Threshold&quot;),Guide.ylabel(&quot;Projection Score&quot;),Guide.colorkey(title=&quot;Dimension&quot;),Guide.title(&quot;Projection Score&quot;))"><pre><span class="pl-k">using</span> SubMatrixSelectionSVD, LinearAlgebra, DataFrames, Gadfly

<span class="pl-c"><span class="pl-c">#</span> Create matrices with orthonormal columns</span>
<span class="pl-k">function</span> <span class="pl-en">randorthonormal</span>(P<span class="pl-k">::</span><span class="pl-c1">Integer</span>, N<span class="pl-k">::</span><span class="pl-c1">Integer</span>)
    <span class="pl-c1">@assert</span> P<span class="pl-k">≥</span>N
    O <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(P,N)
    <span class="pl-k">for</span> k<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span>N
        x <span class="pl-k">=</span> <span class="pl-c1">randn</span>(P)
        x <span class="pl-k">-=</span> O[:,<span class="pl-c1">1</span><span class="pl-k">:</span>k<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">*</span>(O[:,<span class="pl-c1">1</span><span class="pl-k">:</span>k<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">'</span>x)
        O[:,k] <span class="pl-k">=</span> x<span class="pl-k">/</span><span class="pl-c1">norm</span>(x)
    <span class="pl-k">end</span>
    O
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Create data matrix corrupted by noise</span>
P <span class="pl-k">=</span> <span class="pl-c1">1000</span>
N <span class="pl-k">=</span> <span class="pl-c1">40</span>
d <span class="pl-k">=</span> <span class="pl-c1">4</span>
u <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(P,d)
u[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>,<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>]   <span class="pl-k">=</span> <span class="pl-c1">randorthonormal</span>(<span class="pl-c1">100</span>,<span class="pl-c1">2</span>)
u[<span class="pl-c1">101</span><span class="pl-k">:</span><span class="pl-c1">200</span>,<span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">4</span>] <span class="pl-k">=</span> <span class="pl-c1">randorthonormal</span>(<span class="pl-c1">100</span>,<span class="pl-c1">2</span>)
s <span class="pl-k">=</span> [<span class="pl-c1">10</span>,<span class="pl-c1">8</span>,<span class="pl-c1">5</span>,<span class="pl-c1">4</span>] <span class="pl-c"><span class="pl-c">#</span> singular values</span>
v <span class="pl-k">=</span> <span class="pl-c1">randorthonormal</span>(N,d)
X <span class="pl-k">=</span> u<span class="pl-k">*</span><span class="pl-c1">Diagonal</span>(s)<span class="pl-k">*</span>v<span class="pl-k">'</span> <span class="pl-k">+</span> <span class="pl-c1">0.1</span><span class="pl-k">*</span><span class="pl-c1">randn</span>(P,N)<span class="pl-k">.*</span><span class="pl-c1">rand</span>(P) <span class="pl-c"><span class="pl-c">#</span> different strength of noise for different variables</span>

<span class="pl-c"><span class="pl-c">#</span> Compute the SMSSVD of X</span>
σThresholds <span class="pl-k">=</span> <span class="pl-c1">10</span> <span class="pl-k">.^</span> <span class="pl-c1">range</span>(<span class="pl-k">-</span><span class="pl-c1">2</span>,stop<span class="pl-k">=</span><span class="pl-c1">0</span>,length<span class="pl-k">=</span><span class="pl-c1">100</span>)
U,Σ,V,ps,signalDimensions <span class="pl-k">=</span> <span class="pl-c1">smssvd</span>(X, d, σThresholds)

<span class="pl-c"><span class="pl-c">#</span> Projection Score Plot</span>
df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(Sigma<span class="pl-k">=</span><span class="pl-c1">repeat</span>(σThresholds<span class="pl-k">'</span>,d,<span class="pl-c1">1</span>)[:], ProjectionScore<span class="pl-k">=</span>ps[:], NbrDims<span class="pl-k">=</span><span class="pl-c1">repeat</span>(<span class="pl-c1">1</span><span class="pl-k">:</span>d,<span class="pl-c1">1</span>,<span class="pl-c1">length</span>(σThresholds))[:])
coords <span class="pl-k">=</span> Coord<span class="pl-k">.</span><span class="pl-c1">cartesian</span>(xmin<span class="pl-k">=</span><span class="pl-c1">log10</span>(σThresholds[<span class="pl-c1">1</span>]), xmax<span class="pl-k">=</span><span class="pl-c1">log10</span>(σThresholds[<span class="pl-c1">end</span>]), ymin<span class="pl-k">=</span><span class="pl-c1">0</span>)
<span class="pl-c1">plot</span>(df,x<span class="pl-k">=</span><span class="pl-c1">:Sigma</span>,y<span class="pl-k">=</span><span class="pl-c1">:ProjectionScore</span>,color<span class="pl-k">=</span><span class="pl-c1">:NbrDims</span>,Geom<span class="pl-k">.</span>line,coords,Scale<span class="pl-k">.</span>x_log10,Guide<span class="pl-k">.</span><span class="pl-c1">xlabel</span>(<span class="pl-s"><span class="pl-pds">"</span>σ Threshold<span class="pl-pds">"</span></span>),Guide<span class="pl-k">.</span><span class="pl-c1">ylabel</span>(<span class="pl-s"><span class="pl-pds">"</span>Projection Score<span class="pl-pds">"</span></span>),Guide<span class="pl-k">.</span><span class="pl-c1">colorkey</span>(title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Dimension<span class="pl-pds">"</span></span>),Guide<span class="pl-k">.</span><span class="pl-c1">title</span>(<span class="pl-s"><span class="pl-pds">"</span>Projection Score<span class="pl-pds">"</span></span>))</pre></div>
</article></div>