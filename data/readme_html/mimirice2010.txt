<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mimirice2010jl---a-julia-implementation-of-the-rice-2010-model" class="anchor" aria-hidden="true" href="#mimirice2010jl---a-julia-implementation-of-the-rice-2010-model"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MimiRICE2010.jl - a julia implementation of the RICE 2010 model</h1>
<p dir="auto"><a href="http://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/ed51270ad41e2b842f9423b165977ac42f8498581be7c17c78818d1a45b834d5/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="Project Status: Active - The project has reached a stable, usable state and is being actively developed." data-canonical-src="http://www.repostatus.org/badges/latest/active.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/anthofflab/MimiRICE2010.jl/actions/workflows/jlpkgbutler-ci-master-workflow.yml/badge.svg"><img src="https://github.com/anthofflab/MimiRICE2010.jl/actions/workflows/jlpkgbutler-ci-master-workflow.yml/badge.svg" alt="" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/anthofflab/MimiRICE2010.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0d7d96c77235ddd17b217e0dbb3f07ada61fe667f02491dc18953108c20e158d/68747470733a2f2f636f6465636f762e696f2f67682f616e74686f66666c61622f4d696d6952494345323031302e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/anthofflab/MimiRICE2010.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This is an implementation of the RICE-2010 model in the julia programming
language. It was created by recoding the Excel version of the model in
julia. This julia version was created by David Anthoff and Frank
Errickson. Bill Nordhaus was not involved in creating this julia version
of RICE, has not endorsed it and it is no way responsible for any errors
it might contain.</p>
<p dir="auto">MimiRICE2010.jl is based on the version of RICE-2010 that can be downloaded
<a href="http://www.econ.yale.edu/~nordhaus/homepage/RICEmodels.htm" rel="nofollow">here</a>. It
uses the <a href="https://github.com/mimiframework/Mimi.jl">Mimi framework</a> for
integrated assessment models.</p>
<h2 dir="auto"><a id="user-content-software-requirements" class="anchor" aria-hidden="true" href="#software-requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Software requirements</h2>
<p dir="auto">You need to install <a href="http://julialang.org/" rel="nofollow">julia 1.6</a> or newer to run
this model.</p>
<h2 dir="auto"><a id="user-content-preparing-the-software-environment" class="anchor" aria-hidden="true" href="#preparing-the-software-environment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Preparing the software environment</h2>
<p dir="auto">You first need to connect your julia installation with the central
<a href="https://github.com/mimiframework/MimiRegistry">Mimi registry</a> of Mimi models.
This central registry is like a catalogue of models that use Mimi that is
maintained by the Mimi project. To add this registry, run the following
command at the julia package REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; registry add https://github.com/mimiframework/MimiRegistry.git"><pre>pkg<span class="pl-k">&gt;</span> registry add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>mimiframework<span class="pl-k">/</span>MimiRegistry<span class="pl-k">.</span>git</pre></div>
<p dir="auto">You only need to run this command once on a computer.</p>
<p dir="auto">The next step is to install MimiRICE2010.jl itself. You need to run the
following command at the julia package REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add MimiRICE2010"><pre>pkg<span class="pl-k">&gt;</span> add MimiRICE2010</pre></div>
<p dir="auto">You probably also want to install the Mimi package into your julia environment,
so that you can use some of the tools in there:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add Mimi"><pre>pkg<span class="pl-k">&gt;</span> add Mimi</pre></div>
<h2 dir="auto"><a id="user-content-running-the-model" class="anchor" aria-hidden="true" href="#running-the-model"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Running the model</h2>
<p dir="auto">The model uses the <a href="https://github.com/mimiframework/Mimi.jl">Mimi framework</a>
and it is highly recommended to read the Mimi documentation first to
understand the code structure. For starter code on running the model just once,
see the code in the file <code>examples/main.jl</code>.</p>
<p dir="auto">The basic way to access a copy of the default MimiRICE2010 model is the following:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using MimiRICE2010

m = MimiRICE2010.get_model()
run(m)"><pre><span class="pl-k">using</span> MimiRICE2010

m <span class="pl-k">=</span> MimiRICE2010<span class="pl-k">.</span><span class="pl-c1">get_model</span>()
<span class="pl-c1">run</span>(m)</pre></div>
<h2 dir="auto"><a id="user-content-calculating-the-social-cost-of-carbon" class="anchor" aria-hidden="true" href="#calculating-the-social-cost-of-carbon"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Calculating the Social Cost of Carbon</h2>
<p dir="auto">Here is an example of computing the social cost of carbon with MimiRICE2010. Note that the units of the returned value are dollars $/ton CO2.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Mimi
using MimiRICE2010

# Get the social cost of carbon in year 2015 from the default MimiRICE2010 model:
scc = MimiRICE2010.compute_scc(year = 2015)

# You can also compute the SCC from a modified version of a MimiRICE2010 model:
m = MimiRICE2010.get_model()    # Get the default version of the MimiRICE2010 model
update_param!(m, :t2xco2, 5)    # Try a higher climate sensitivity value
scc = MimiRICE2010.compute_scc(m, year=2015)    # compute the scc from the modified model by passing it as the first argument to compute_scc"><pre><span class="pl-k">using</span> Mimi
<span class="pl-k">using</span> MimiRICE2010

<span class="pl-c"><span class="pl-c">#</span> Get the social cost of carbon in year 2015 from the default MimiRICE2010 model:</span>
scc <span class="pl-k">=</span> MimiRICE2010<span class="pl-k">.</span><span class="pl-c1">compute_scc</span>(year <span class="pl-k">=</span> <span class="pl-c1">2015</span>)

<span class="pl-c"><span class="pl-c">#</span> You can also compute the SCC from a modified version of a MimiRICE2010 model:</span>
m <span class="pl-k">=</span> MimiRICE2010<span class="pl-k">.</span><span class="pl-c1">get_model</span>()    <span class="pl-c"><span class="pl-c">#</span> Get the default version of the MimiRICE2010 model</span>
<span class="pl-c1">update_param!</span>(m, <span class="pl-c1">:t2xco2</span>, <span class="pl-c1">5</span>)    <span class="pl-c"><span class="pl-c">#</span> Try a higher climate sensitivity value</span>
scc <span class="pl-k">=</span> MimiRICE2010<span class="pl-k">.</span><span class="pl-c1">compute_scc</span>(m, year<span class="pl-k">=</span><span class="pl-c1">2015</span>)    <span class="pl-c"><span class="pl-c">#</span> compute the scc from the modified model by passing it as the first argument to compute_scc</span></pre></div>
<p dir="auto">The first argument to the <code>compute_scc</code> function is a MimiRICE2010 model, and it is an optional argument. If no model is provided, the default MimiRICE2010 model will be used.
There are also other keyword arguments available to <code>compute_scc</code>. Note that the user must specify a <code>year</code> for the SCC calculation, but the rest of the keyword arguments have default values.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="compute_scc(m = get_model(),  # if no model provided, will use the default MimiRICE2010 model
    year = nothing,  # user must specify an emission year for the SCC calculation
    last_year = 2595,  # the last year to run and use for the SCC calculation. Default is the last year of the time dimension, 2595.
    prtp = 0.03,  # pure rate of time preference parameter used for constant discounting
)"><pre><span class="pl-c1">compute_scc</span>(m <span class="pl-k">=</span> <span class="pl-c1">get_model</span>(),  <span class="pl-c"><span class="pl-c">#</span> if no model provided, will use the default MimiRICE2010 model</span>
    year <span class="pl-k">=</span> <span class="pl-c1">nothing</span>,  <span class="pl-c"><span class="pl-c">#</span> user must specify an emission year for the SCC calculation</span>
    last_year <span class="pl-k">=</span> <span class="pl-c1">2595</span>,  <span class="pl-c"><span class="pl-c">#</span> the last year to run and use for the SCC calculation. Default is the last year of the time dimension, 2595.</span>
    prtp <span class="pl-k">=</span> <span class="pl-c1">0.03</span>,  <span class="pl-c"><span class="pl-c">#</span> pure rate of time preference parameter used for constant discounting</span>
)</pre></div>
<p dir="auto">There is an additional function for computing the SCC that also returns the MarginalModel that was used to compute it. It returns these two values as a NamedTuple of the form (scc=scc, mm=mm). The same keyword arguments from the <code>compute_scc</code> function are available for the <code>compute_scc_mm</code> function. Example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Mimi
using MimiRICE2010

result = MimiRICE2010.compute_scc_mm(year=2025, last_year=2295, prtp=0.025)

result.scc  # returns the computed SCC value

result.mm   # returns the Mimi MarginalModel

marginal_temp = result.mm[:climatedynamics, :TATM]  # marginal results from the marginal model can be accessed like this"><pre><span class="pl-k">using</span> Mimi
<span class="pl-k">using</span> MimiRICE2010

result <span class="pl-k">=</span> MimiRICE2010<span class="pl-k">.</span><span class="pl-c1">compute_scc_mm</span>(year<span class="pl-k">=</span><span class="pl-c1">2025</span>, last_year<span class="pl-k">=</span><span class="pl-c1">2295</span>, prtp<span class="pl-k">=</span><span class="pl-c1">0.025</span>)

result<span class="pl-k">.</span>scc  <span class="pl-c"><span class="pl-c">#</span> returns the computed SCC value</span>

result<span class="pl-k">.</span>mm   <span class="pl-c"><span class="pl-c">#</span> returns the Mimi MarginalModel</span>

marginal_temp <span class="pl-k">=</span> result<span class="pl-k">.</span>mm[<span class="pl-c1">:climatedynamics</span>, <span class="pl-c1">:TATM</span>]  <span class="pl-c"><span class="pl-c">#</span> marginal results from the marginal model can be accessed like this</span></pre></div>
<h2 dir="auto"><a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Known issues</h2>
<ul dir="auto">
<li>Atmospheric CO2 concentrations in the years 2005 and 2015 are fixed in
the Excel original. Emissions in the year 2005 therefore don't have any
effect on CO2 concentrations in the model (emissions in the year 2015
affect concentrations in the year 2025). MimiRICE2010 matches the Excel
version in this behaviour.</li>
<li>MimiRICE2010.jl does not provide any optimization routines, it purely
replicates the RICE-2010 baseline run.</li>
<li>The marginal damage calculation in src/marginaldamage.jl is not based
on the original Excel version of RICE.</li>
</ul>
</article></div>