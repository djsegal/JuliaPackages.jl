<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://travis-ci.com/dcarrera/Planets.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/79a46533ec837fc5b3108dbe2ccc662d53555f90/68747470733a2f2f7472617669732d63692e636f6d2f64636172726572612f506c616e6574732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/dcarrera/Planets.jl.svg?branch=master" style="max-width:100%;"></a></p>
<h1><a id="user-content-planetsjl" class="anchor" aria-hidden="true" href="#planetsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Planets.jl</h1>
<p>This package provides functions related to the formation and properties of
planets. There are formulas to compute the gas accretion rate onto a planet,
the core radius of the planet, and the location of the habitable zone. All the
formulas are taken from peer reviewed publications in astronomy journals, and
links to the <a href="http://adsabs.harvard.edu/" rel="nofollow">Astrophysics Data System (ADS)</a> are
included in the documentation.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p><code>Planets.jl</code> requires Julia v1.0 or later, as well the packages <a href="https://github.com/JuliaData/CSV.jl">CSV</a> 0.4.2 or later, <a href="https://github.com/JuliaData/Missings.jl">Missings</a>, and <a href="https://github.com/JuliaData/DataFrames.jl">DataFrames</a>. To install this package run <code>] add Planets</code> on the Julia REPL.</p>
<h2><a id="user-content-core_radius" class="anchor" aria-hidden="true" href="#core_radius"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>core_radius</code></h2>
<p>This function computes the radius of a planetary core made of either pure
silicate rock, a rock-iron mix, or a rock-water mix. Cores with all three
components are not supported. The function interpolates across the planet
structure grid model of <a href="http://adsabs.harvard.edu/abs/2016ApJ...819..127Z" rel="nofollow">Zeng et al (2016)</a>, which is publicly available from
<a href="https://www.cfa.harvard.edu/~lzeng/planetmodels.html#mrtables" rel="nofollow">Li Zeng's website</a>.</p>
<p>Examples:</p>
<pre><code>#
# Radius of a 3.0 M_earth core with 10% water + 90% rock:
#
radius = core_radius(3.0, h2o=0.1) # In Earth radii.

#
# Radius of a 3.0 M_earth core with 10% iron + 90% rock:
#
radius = core_radius(3.0, fe=0.1) # In Earth radii.
</code></pre>
<p>Citation: <a href="http://adsabs.harvard.edu/abs/2016ApJ...819..127Z" rel="nofollow">Zeng et al (2016)</a></p>
<h2><a id="user-content-accretion_rate" class="anchor" aria-hidden="true" href="#accretion_rate"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>accretion_rate</code></h2>
<p>Compute the gas accretion rate onto a planet, up to Neptune size, embedded
in a protoplanetary disk. This function implements Equation (B36) derived in
<a href="http://adsabs.harvard.edu/abs/2018ApJ...866..104C" rel="nofollow">Carrera et al. (2018)</a>
which itself is adapted from
<a href="http://adsabs.harvard.edu/abs/2016ApJ...825...29G" rel="nofollow">Ginzburg et al. (2016)</a>.</p>
<p><strong>NOTE</strong>: Equation (B36) of Carrera et al. is in units of M_earth/Myr but
this function returns values in untis of M_earth/year.</p>
<p><strong>NOTE</strong>: The accretion rate for a planet with zero atmosphere diverges. You
need to initialize the planet's atmosphere to a non-zero value. Furthermore,
the accretion rate is initially very high and small timesteps are required to
resolve the accretion correctly.</p>
<p>Example:</p>
<pre><code>#
# Gas accretion rate (units: M_earth / year) for a small planet embedded
# in a protoplanetary disk.
#
# Inputs:
#
M_core = 8.0  # Planet's core mass in Earth masses.
M_atm = 0.02  # Planet's current H2 mass in Earth masses.
T_disk = 500  # Local disk temperature in Kelvin.

M_atm_dot = accretion_rate(M_core, M_atm, T_disk) # M_earth / year.
</code></pre>
<p>Citations:
<a href="http://adsabs.harvard.edu/abs/2018ApJ...866..104C" rel="nofollow">Carrera et al. (2018)</a>
and
<a href="http://adsabs.harvard.edu/abs/2016ApJ...825...29G" rel="nofollow">Ginzburg et al. (2016)</a></p>
<h2><a id="user-content-stellar_evolution" class="anchor" aria-hidden="true" href="#stellar_evolution"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>stellar_evolution</code></h2>
<p>Compute the stellar evolution tracks (luminosity, temperature, logg) for
AFGKM with a metallicity of Z = 1.0%, up to an age of 0.89 Gyr, using the
stellar models of <a href="http://adsabs.harvard.edu/abs/2017ApJ...835...77M" rel="nofollow">Marigo et al. (2017)</a>. This function the following values:</p>
<pre><code>Teff     Star's effective temperature (K)
L_star   Log base 10 of the stellar luminosity (L_sun)
logg     Log gravity.
</code></pre>
<p>Example:</p>
<pre><code>M_star = 0.5 # Stellar mass (M_sun)
age = 1e9    # Stellar age (years)
Z = 0.01     # Metallicity

Teff, L_star, logg = stellar_evolution(M_star,t=age,Z=Z)
</code></pre>
<p>Citation: <a href="http://adsabs.harvard.edu/abs/2017ApJ...835...77M" rel="nofollow">Marigo et al. (2017)</a></p>
<p>See also: <a href="http://stev.oapd.inaf.it/cgi-bin/cmd" rel="nofollow">Web interface</a></p>
<h2><a id="user-content-habitable_zone" class="anchor" aria-hidden="true" href="#habitable_zone"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>habitable_zone</code></h2>
<p>Computes all the limits for the habitable zone from <a href="http://adsabs.harvard.edu/abs/2013ApJ...765..131K" rel="nofollow">Kopparapu et al. (2013)</a>. This function uses the updated coefficients from their website.</p>
<p>Input:</p>
<pre><code>Teff       Star's effective temperature (K)
L_star     Star's luminosity (L_sun)
</code></pre>
<p>Example:</p>
<pre><code>Teff   = 3700  # Temperature of a 0.5 M_sun star.
L_star = 0.04  # Luminosity of a 0.5 M_sun star.

limits = habitable_zone(Teff, L_star)

@info("Recent Venus                  = \$(limits[1]) AU")
@info("Runaway Greenhouse            = \$(limits[2]) AU")
@info("Maximum Greenhouse            = \$(limits[3]) AU")
@info("Early Mars                    = \$(limits[4]) AU")
@info("Runaway Greenhouse for 5.0 ME = \$(limits[5]) AU")
@info("Runaway Greenhouse for 0.1 ME = \$(limits[6]) AU")
</code></pre>
<p>Citation: <a href="http://adsabs.harvard.edu/abs/2013ApJ...765..131K" rel="nofollow">Kopparapu et al. (2013)</a></p>
<p>See also: <a href="https://depts.washington.edu/naivpl/sites/default/files/hz.shtml" rel="nofollow">Updated values</a></p>
</article></div>