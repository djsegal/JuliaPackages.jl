<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-errorfreetransforms" class="anchor" aria-hidden="true" href="#errorfreetransforms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ErrorFreeTransforms</h1>
<p dir="auto"><a href="https://travis-ci.org/dsiem/ErrorFreeTransforms.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2bae44a2ef7bfd8ff8d76f930601a5bd2467ae0e1a5d9e68ae016a50a02453d7/68747470733a2f2f7472617669732d63692e6f72672f647369656d2f4572726f72467265655472616e73666f726d732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dsiem/ErrorFreeTransforms.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://coveralls.io/r/dsiem/ErrorFreeTransforms.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e303d78c2b4522fe410b3ae9ea33549b1e50625ab54ec02119a04164dbf26948/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f647369656d2f4572726f72467265655472616e73666f726d732e6a6c2e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/coveralls/dsiem/ErrorFreeTransforms.jl.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Rounding errors are a common problem in floating point arithmetic. For a pair of
floating point numbers <code>a</code>, <code>b</code>, an error-free transformation (EFT) is an
operation that maps <code>(a, b)</code> into <code>(x, y)</code>, where <code>a ○ b = x + y</code> and <code>x = fl(a ○ b)</code> with <code>○</code> being either addition, subtraction or multiplication. Standard
EFTs are the <code>TwoSum</code> algorithm by Knuth (implemented as <code>err_add</code>) and the
<code>TwoProd</code> algorithm by Dekker (implemented as <code>err_mul</code>).</p>
<p dir="auto">This package implements several EFTs from the scientific literature.</p>
<h2 dir="auto"><a id="user-content-current-status" class="anchor" aria-hidden="true" href="#current-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Current status</h2>
<p dir="auto">This project is still very much a work in progress. It requires a recent build
of Julia 0.4 to work.</p>
</article></div>