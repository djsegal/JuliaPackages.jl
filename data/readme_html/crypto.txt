<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-cryptojl" class="anchor" aria-hidden="true" href="#cryptojl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Crypto.jl</h1>
<p dir="auto"><a href="https://travis-ci.org/danielsuo/Crypto.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f41b9832bddef87e0f78cbd88cf821b6ceb356151f506e8c77b3df696e7ee4dc/68747470733a2f2f7472617669732d63692e6f72672f64616e69656c73756f2f43727970746f2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/danielsuo/Crypto.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://coveralls.io/r/danielsuo/Crypto.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/bc2efcab3b7853a1609045d00adc11f031e0130687706eef9aca5b2583963e93/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f64616e69656c73756f2f43727970746f2e6a6c2f62616467652e706e67" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/danielsuo/Crypto.jl/badge.png" style="max-width: 100%;"></a>
<a href="http://pkg.julialang.org/?pkg=Crypto&amp;ver=release" rel="nofollow"><img src="https://camo.githubusercontent.com/316732b887c772a6c825c30fb35c3c5d14bbaeb374da2e6fb9a042ca6f44f175/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f43727970746f5f72656c656173652e737667" alt="Crypto" data-canonical-src="http://pkg.julialang.org/badges/Crypto_release.svg" style="max-width: 100%;"></a></p>
<p dir="auto">A package that wraps OpenSSL (libcrypto), but also has pure Julia implementations for reference. Contributions welcome.</p>
<p dir="auto">Check out @staticfloat's pure Julia <a href="https://github.com/staticfloat/SHA.jl">SHA</a> package. We may simply require that package in this one rather than keep separate SHA implementations.</p>
<p dir="auto">WARNING: This package experimental and is not ready for production use. The pure Julia implementations are not complete. Use at your own risk.</p>
<h1 dir="auto"><a id="user-content-prior-to-next-release" class="anchor" aria-hidden="true" href="#prior-to-next-release"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Prior to next release</h1>
<ul dir="auto">
<li>Update documentation to reflect new signatures and functions</li>
<li>Clean up tests</li>
<li>Fix RIPEMD160</li>
<li>Swap input/output order for func params in c functions</li>
</ul>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<p dir="auto">This package will likely be updated frequently and may break with previous versions. If you use the code, we recommend using</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Prevent Pkg.update from updating Crypto
Pkg.pin(&quot;Crypto&quot;)

# If used in a package's REQUIRE file
Crypto 0.0.1"><pre><span class="pl-c"><span class="pl-c">#</span> Prevent Pkg.update from updating Crypto</span>
Pkg<span class="pl-k">.</span><span class="pl-c1">pin</span>(<span class="pl-s"><span class="pl-pds">"</span>Crypto<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> If used in a package's REQUIRE file</span>
Crypto <span class="pl-c1">0.0</span>.<span class="pl-c1">1</span></pre></div>
<p dir="auto">when installing or requiring the package. Installing the package this way might be annoying, but will likely save trouble.</p>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting started</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Crypto

# Add open OpenSSL algorithms to look-up table
# Required for using digests
Crypto.init()"><pre><span class="pl-k">using</span> Crypto

<span class="pl-c"><span class="pl-c">#</span> Add open OpenSSL algorithms to look-up table</span>
<span class="pl-c"><span class="pl-c">#</span> Required for using digests</span>
Crypto<span class="pl-k">.</span><span class="pl-c1">init</span>()</pre></div>
<h2 dir="auto"><a id="user-content-creating-digests" class="anchor" aria-hidden="true" href="#creating-digests"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Creating digests</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Digests are available for MD2, MD5, SHA, SHA1, SHA224, SHA256, SHA384,
# SHA512, DSS, DSS1, MDC2, RIPEMD160
Crypto.digest(&quot;SHA256&quot;, &quot;test&quot;)
# 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08

# If provided string is hex
Crypto.digest(&quot;SHA256&quot;, &quot;12eba&quot;, is_hex=true)
# 0c58bf613f25d049c7355f7e334866bd6ba8b13ab7c06fc79cf607a57116174b"><pre><span class="pl-c"><span class="pl-c">#</span> Digests are available for MD2, MD5, SHA, SHA1, SHA224, SHA256, SHA384,</span>
<span class="pl-c"><span class="pl-c">#</span> SHA512, DSS, DSS1, MDC2, RIPEMD160</span>
Crypto<span class="pl-k">.</span><span class="pl-c1">digest</span>(<span class="pl-s"><span class="pl-pds">"</span>SHA256<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08</span>

<span class="pl-c"><span class="pl-c">#</span> If provided string is hex</span>
Crypto<span class="pl-k">.</span><span class="pl-c1">digest</span>(<span class="pl-s"><span class="pl-pds">"</span>SHA256<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>12eba<span class="pl-pds">"</span></span>, is_hex<span class="pl-k">=</span><span class="pl-c1">true</span>)
<span class="pl-c"><span class="pl-c">#</span> 0c58bf613f25d049c7355f7e334866bd6ba8b13ab7c06fc79cf607a57116174b</span></pre></div>
<h2 dir="auto"><a id="user-content-using-elliptic-curve-cryptography" class="anchor" aria-hidden="true" href="#using-elliptic-curve-cryptography"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using elliptic curve cryptography</h2>
<p dir="auto">So far, the package only generates public keys from private keys. We plan to add more functionality.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Generate public key from private key
secret_key = &quot;18e14a7b6a307f426a94f8114701e7c8e774e7f9a47e2c2035db29a206321725&quot;
Crypto.ec_public_key_create(secret_key)
# &quot;0450863ad64a87ae8a2fe83c1af1a8403cb53f53e486d8511dad8a04887e5b23522cd470243453a299fa9e77237716103abc11a1df38855ed6f2ee187e9c582ba6&quot;

# Use curve secp256k1 (e.g., for Bitcoin) and generate uncompressed private key
# For more curves, see https://github.com/openssl/openssl/blob/master/crypto/objects/obj_mac.h
const NID_secp256k1 = 714
const COMPRESSED = 2
Crypto.ec_public_key_create(secret_key, curve_id = NID_secp256k1, form = COMPRESSED)
# 0250863ad64a87ae8a2fe83c1af1a8403cb53f53e486d8511dad8a04887e5b2352"><pre><span class="pl-c"><span class="pl-c">#</span> Generate public key from private key</span>
secret_key <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>18e14a7b6a307f426a94f8114701e7c8e774e7f9a47e2c2035db29a206321725<span class="pl-pds">"</span></span>
Crypto<span class="pl-k">.</span><span class="pl-c1">ec_public_key_create</span>(secret_key)
<span class="pl-c"><span class="pl-c">#</span> "0450863ad64a87ae8a2fe83c1af1a8403cb53f53e486d8511dad8a04887e5b23522cd470243453a299fa9e77237716103abc11a1df38855ed6f2ee187e9c582ba6"</span>

<span class="pl-c"><span class="pl-c">#</span> Use curve secp256k1 (e.g., for Bitcoin) and generate uncompressed private key</span>
<span class="pl-c"><span class="pl-c">#</span> For more curves, see https://github.com/openssl/openssl/blob/master/crypto/objects/obj_mac.h</span>
<span class="pl-k">const</span> NID_secp256k1 <span class="pl-k">=</span> <span class="pl-c1">714</span>
<span class="pl-k">const</span> COMPRESSED <span class="pl-k">=</span> <span class="pl-c1">2</span>
Crypto<span class="pl-k">.</span><span class="pl-c1">ec_public_key_create</span>(secret_key, curve_id <span class="pl-k">=</span> NID_secp256k1, form <span class="pl-k">=</span> COMPRESSED)
<span class="pl-c"><span class="pl-c">#</span> 0250863ad64a87ae8a2fe83c1af1a8403cb53f53e486d8511dad8a04887e5b2352</span></pre></div>
<h2 dir="auto"><a id="user-content-generating-random-numbers" class="anchor" aria-hidden="true" href="#generating-random-numbers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Generating random numbers</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Returns array of 32 Uint8
Crypto.random(256)"><pre><span class="pl-c"><span class="pl-c">#</span> Returns array of 32 Uint8</span>
Crypto<span class="pl-k">.</span><span class="pl-c1">random</span>(<span class="pl-c1">256</span>)</pre></div>
<h1 dir="auto"><a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TODO</h1>
<p dir="auto">Detailed todos are noted in "TODO" sections found in the source code. Major todos:</p>
<ul dir="auto">
<li>Review for cryptographic security (e.g., CSPRNG, memory cleanup)</li>
<li>Add more Julia implementations</li>
<li>Add more OpenSSL Libcrypto functions</li>
<li>Implement ECDSA signing / authentication</li>
</ul>
<h1 dir="auto"><a id="user-content-how-to-contribute" class="anchor" aria-hidden="true" href="#how-to-contribute"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to contribute</h1>
<p dir="auto">Let's figure that out together! Generally, testing and documentation are good. The TODOs list at the top of source files are one place to start. To help others review pull requests, please follow these guidelines:</p>
<ul dir="auto">
<li>Add a summary of your changes to CHANGELOG.md in the 'Work in progress' section</li>
<li>Make sure new code is tested and all tests pass</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Navigate to package directory
julia --code-coverage test/runtests.jl"><pre><span class="pl-c"><span class="pl-c">#</span> Navigate to package directory</span>
julia <span class="pl-k">--</span>code<span class="pl-k">-</span>coverage test<span class="pl-k">/</span>runtests<span class="pl-k">.</span>jl</pre></div>
<p dir="auto">Thank you for your help!</p>
<h1 dir="auto"><a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Thanks</h1>
<p dir="auto">Shout out to @dirk, @amitmurthy, @j2kun, @wwilson, and @staticfloat for OpenSSL, Julia, and theory references.</p>
</article></div>