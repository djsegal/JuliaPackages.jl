<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://github.com/JuliaAI/TreeRecipe.jl/actions"><img src="https://github.com/JuliaAI/TreeRecipe.jl/workflows/CI/badge.svg" alt="Build status (Github Actions)" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/JuliaAI/TreeRecipe.jl?branch=main" rel="nofollow"><img src="https://camo.githubusercontent.com/28b876e755a01369c881ab7ce146442c17b99e971617233d892bbb57384835b9/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c696141492f547265655265636970652e6a6c2f636f7665726167652e7376673f6272616e63683d6d61696e" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaAI/TreeRecipe.jl/coverage.svg?branch=main" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-treerecipejl" class="anchor" aria-hidden="true" href="#treerecipejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TreeRecipe.jl</h1>
<p dir="auto">A Plot recipe for plotting (decision) trees.</p>
<p dir="auto">A plot recipe (based on <code>RecipeBase.jl</code>) to create a graphical representation of a tree.
The recipe has originally been designed to plot decision trees, but it is able to plot all sort
of trees which conform to the following rules:</p>
<ul dir="auto">
<li>The tree must be wrapped in an <code>AbstractTrees</code>-interface. I.e. it has
<ul dir="auto">
<li>to be a subtype of <code>AbstractTrees.AbstractNode{T}</code></li>
<li>implement <code>AbstractTrees.children()</code></li>
<li>implement <code>AbstractTrees.printnode()</code></li>
</ul>
</li>
</ul>
<p dir="auto">See <a href="https://github.com/JuliaAI/DecisionTree.jl/blob/9dab9c12fcf2d54d4591b23fc87512964fb664b8/src/abstract_trees.jl"><code>DecisionTree.jl/abstract_trees.jl</code></a> for
an exemplary implementation of the concept. In addition there are examples in the <code>examples</code>-folder which show how the recipe can be applied to plot decision trees from the <code>DecisionTree.jl</code>-package as well as from the <code>BetaML.jl</code>-package.</p>
<p dir="auto">This approach taken by <code>TreeRecipe</code> ensures that a tree implementation can be plotted without having any dependencies to a graphics package and it ensures furthermore, that the recipe is independent of the implementation details of the tree.</p>
<p dir="auto">For more information have a look at the article
<a href="https://towardsdatascience.com/part-iii-if-things-are-not-ready-to-use-59d2db378bec" rel="nofollow">"If things are not ready to use"</a> in <em>Towards Data Science</em> where the basic ideas are explained.</p>
<p dir="auto">And here you get an impression on how a plot of a decision tree might look like (in this case a <code>DecsionTree</code> with the Iris dataset):</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/80126696/206247398-ef30b6e2-8fb8-4228-9d35-2bcb7d82bc34.png"><img width="898" alt="image" src="https://user-images.githubusercontent.com/80126696/206247398-ef30b6e2-8fb8-4228-9d35-2bcb7d82bc34.png" style="max-width: 100%;"></a></p>
</article></div>