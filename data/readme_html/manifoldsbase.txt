<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-manifoldsbasejl" class="anchor" aria-hidden="true" href="#manifoldsbasejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ManifoldsBase.jl</h1>
<p><a href="https://travis-ci.org/JuliaManifolds/ManifoldsBase.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/d78810a3145e10081e2b9955b8342fce167ea557/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614d616e69666f6c64732f4d616e69666f6c6473426173652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaManifolds/ManifoldsBase.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://codecov.io/gh/JuliaManifolds/ManifoldsBase.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/1ace366f8bf4a5979a9e96adc8f9b127d6789f94/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614d616e69666f6c64732f4d616e69666f6c6473426173652e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaManifolds/ManifoldsBase.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://julianlsolvers.github.io/Manifolds.jl/latest/" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<p>Basic interface for manifolds in Julia.</p>
<p>The project <a href="https://github.com/JuliaManifolds/Manifolds.jl"><code>Manifolds.jl</code></a>
is based on this interface and provides a variety of manifolds.</p>
<h2><a id="user-content-decoratormanifold" class="anchor" aria-hidden="true" href="#decoratormanifold"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>DecoratorManifold</code></h2>
<p>The decorator manifold enhances a manifold by certain, in most cases implicitly
assumed to have a standard case, properties, see for example the <code>EmbeddedManifold</code>.
The decorator acts semi transparently, i.e. <code>:transparent</code> for all functions not affected by that
decorator and <code>:intransparent</code> otherwise. Another possibility is, that the decorator just
passes to <code>:parent</code> in order to fill default values.</p>
<h2><a id="user-content-defaultmanifold" class="anchor" aria-hidden="true" href="#defaultmanifold"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>DefaultManifold</code></h2>
<p>This interface includes a simple <code>DefaultManifold</code>, which is a reduced version
of the <a href="https://github.com/JuliaManifolds/Manifolds.jl/blob/master/src/Euclidean.jl"><code>Euclidean</code></a>
manifold from <a href="https://github.com/JuliaManifolds/Manifolds.jl"><code>Manifolds.jl</code></a>,
such that the interface functions can be tested.</p>
<h2><a id="user-content-embedded-manifold" class="anchor" aria-hidden="true" href="#embedded-manifold"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Embedded Manifold</h2>
<p>The embedded manifold models the embedding of a manifold into another manifold.
This way a manifold can benefit from existing implementations.
One example is the <code>TransparentIsometricEmbeddingType</code> where a manifold uses the metric,
<code>inner</code>, from its embedding.</p>
<h2><a id="user-content-arraymanifold" class="anchor" aria-hidden="true" href="#arraymanifold"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>ArrayManifold</code></h2>
<p>The <code>ArrayManifold</code> further illustrates how one can also used types to
represent points on a manifold, tangent vectors, and cotangent vectors,
where values are encapsulated in a certain type.</p>
<p>In general, <code>ArrayManifold</code> might be used for manifolds where these three types are represented
by more complicated data structures or when it is necessary to distinguish these
by type.</p>
<p>This adds a semantic layer to the interface, and the default implementation of
<code>ArrayManifold</code> adds checks to all inputs and outputs of typed data.</p>
</article></div>