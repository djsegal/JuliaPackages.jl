<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://travis-ci.org/cometscome/TightBinding.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/bce9bb8f9398ea275f0ce055cfe588aa8821d51b/68747470733a2f2f7472617669732d63692e6f72672f636f6d657473636f6d652f546967687442696e64696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/cometscome/TightBinding.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/cometscome/TightBinding.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/fb969344c53bd461e47b0932ac7b2fb3ee8fb92e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f636f6d657473636f6d652f546967687442696e64696e672e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/cometscome/TightBinding.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<h1><a id="user-content-tightbindingjl" class="anchor" aria-hidden="true" href="#tightbindingjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TightBinding.jl</h1>
<p>This can construct the tight-binding model and calculate energies in Julia 1.0.
This software is released under the MIT License, see LICENSE.</p>
<p>This can</p>
<ol>
<li>construct the Hamiltonian as a functional of a momentum k.</li>
<li>plot the band structure.</li>
<li>show the crystal structure.</li>
<li>plot the band structure of the finite-width system with one surface or boundary.</li>
<li>[09 Feb. 2019] make surface Hamiltonian from the momentum space Hamiltonian.</li>
<li>[19 Nov. 2019] get DOS data and energy mesh</li>
</ol>
<p>There is the sample jupyter notebook.</p>
<h2><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Install</h2>
<p>Push "]" to enter the package mode.</p>
<pre><code>add TightBinding
</code></pre>
<h1><a id="user-content-samples" class="anchor" aria-hidden="true" href="#samples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>samples</h1>
<h2><a id="user-content-graphene" class="anchor" aria-hidden="true" href="#graphene"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Graphene</h2>
<p>Here is a Graphene case</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> TightBinding
<span class="pl-c"><span class="pl-c">#</span>Primitive vectors</span>
a1 <span class="pl-k">=</span> [<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>]
a2<span class="pl-k">=</span> [<span class="pl-c1">0</span>,<span class="pl-c1">1</span>]
<span class="pl-c"><span class="pl-c">#</span>set lattice</span>
la <span class="pl-k">=</span> <span class="pl-c1">set_Lattice</span>(<span class="pl-c1">2</span>,[a1,a2])
<span class="pl-c"><span class="pl-c">#</span>add atoms</span>
<span class="pl-c1">add_atoms!</span>(la,[<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>,<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>])
<span class="pl-c1">add_atoms!</span>(la,[<span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">3</span>,<span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">3</span>])</pre></div>
<p>Then we added two atoms (atom 1 and atom 2).
We can see the possible hoppings.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">show_neighbors</span>(la)</pre></div>
<p>Output is</p>
<pre><code>Possible hoppings
(1,1), x:-1//1, y:-1//1
(1,2), x:-2//3, y:-2//3
(2,2), x:-1//1, y:-1//1
(1,1), x:-1//1, y:0//1
(1,2), x:-2//3, y:1//3
(2,2), x:-1//1, y:0//1
(1,1), x:-1//1, y:1//1
(1,2), x:-2//3, y:4//3
(2,2), x:-1//1, y:1//1
(1,1), x:0//1, y:-1//1
(1,2), x:1//3, y:-2//3
(2,2), x:0//1, y:-1//1
(1,1), x:0//1, y:0//1
(1,2), x:1//3, y:1//3
(2,2), x:0//1, y:0//1
(1,1), x:0//1, y:1//1
(1,2), x:1//3, y:4//3
(2,2), x:0//1, y:1//1
(1,1), x:1//1, y:-1//1
(1,2), x:4//3, y:-2//3
(2,2), x:1//1, y:-1//1
(1,1), x:1//1, y:0//1
(1,2), x:4//3, y:1//3
(2,2), x:1//1, y:0//1
(1,1), x:1//1, y:1//1
(2,2), x:1//1, y:1//1
</code></pre>
<p>If you want to construct the Graphene, you choose hoppings from atom 1 to atom 2:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span>construct hoppings</span>
t <span class="pl-k">=</span> <span class="pl-c1">1.0</span>
<span class="pl-c1">add_hoppings!</span>(la,<span class="pl-k">-</span>t,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,[<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>,<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>])
<span class="pl-c1">add_hoppings!</span>(la,<span class="pl-k">-</span>t,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,[<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">3</span>,<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>])
<span class="pl-c1">add_hoppings!</span>(la,<span class="pl-k">-</span>t,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,[<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>,<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">3</span>])</pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Plots
<span class="pl-c"><span class="pl-c">#</span>show the lattice structure</span>
<span class="pl-c1">plot_lattice_2d</span>(la)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/21115243/46902071-aa0da680-cef9-11e8-9d4b-3cfa41633dc9.png"><img src="https://user-images.githubusercontent.com/21115243/46902071-aa0da680-cef9-11e8-9d4b-3cfa41633dc9.png" alt="68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3234363131332f37346633306563662d356137632d643337362d393235642d6561663563343634376362632e706e67" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Plots
<span class="pl-c"><span class="pl-c">#</span> Density of states</span>
nk <span class="pl-k">=</span> <span class="pl-c1">100</span> <span class="pl-c"><span class="pl-c">#</span>numer ob meshes. nk^d meshes are used. d is a dimension.</span>
<span class="pl-c1">plot_DOS</span>(la, nk)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/21115243/46902081-cc072900-cef9-11e8-8e22-908f91b132a8.png"><img src="https://user-images.githubusercontent.com/21115243/46902081-cc072900-cef9-11e8-8e22-908f91b132a8.png" alt="68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3234363131332f39343635643263312d643466332d333634372d363036652d3836626263313462313530622e706e67" style="max-width:100%;"></a></p>
<p>[19 Nov. 2019]  We can get DOS data and energy mesh.</p>
<div class="highlight highlight-source-julia"><pre>nk <span class="pl-k">=</span> <span class="pl-c1">100</span> <span class="pl-c"><span class="pl-c">#</span>numer ob meshes. nk^d meshes are used. d is a dimension.</span>
hist <span class="pl-k">=</span> <span class="pl-c1">get_DOS</span>(la, nk)
<span class="pl-c1">println</span>(hist<span class="pl-k">.</span>weights) <span class="pl-c"><span class="pl-c">#</span>DOS data</span>
<span class="pl-c1">println</span>(hist<span class="pl-k">.</span>edges[<span class="pl-c1">1</span>]) <span class="pl-c"><span class="pl-c">#</span>energy mesh</span>
<span class="pl-k">using</span> Plots
<span class="pl-c1">plot</span>(hist<span class="pl-k">.</span>edges[<span class="pl-c1">1</span>][<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">end</span>] <span class="pl-k">.-</span> hist<span class="pl-k">.</span>edges[<span class="pl-c1">1</span>]<span class="pl-k">.</span>step<span class="pl-k">.</span>hi<span class="pl-k">/</span><span class="pl-c1">2</span>,hist<span class="pl-k">.</span>weights)</pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span>show the band structure</span>
klines <span class="pl-k">=</span> <span class="pl-c1">set_Klines</span>()
kmin <span class="pl-k">=</span> [<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]
kmax <span class="pl-k">=</span> [<span class="pl-c1">2</span>π<span class="pl-k">/</span><span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>),<span class="pl-c1">0</span>]
<span class="pl-c1">add_Kpoints!</span>(klines,kmin,kmax,<span class="pl-s"><span class="pl-pds">"</span>G<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>K<span class="pl-pds">"</span></span>)

kmin <span class="pl-k">=</span> [<span class="pl-c1">2</span>π<span class="pl-k">/</span><span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>),<span class="pl-c1">0</span>]
kmax <span class="pl-k">=</span> [<span class="pl-c1">2</span>π<span class="pl-k">/</span><span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>),<span class="pl-c1">2</span>π<span class="pl-k">/</span><span class="pl-c1">3</span>]
<span class="pl-c1">add_Kpoints!</span>(klines,kmin,kmax,<span class="pl-s"><span class="pl-pds">"</span>K<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>M<span class="pl-pds">"</span></span>)

kmin <span class="pl-k">=</span> [<span class="pl-c1">2</span>π<span class="pl-k">/</span><span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>),<span class="pl-c1">2</span>π<span class="pl-k">/</span><span class="pl-c1">3</span>]
kmax <span class="pl-k">=</span> [<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]
<span class="pl-c1">add_Kpoints!</span>(klines,kmin,kmax,<span class="pl-s"><span class="pl-pds">"</span>M<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>G<span class="pl-pds">"</span></span>)
<span class="pl-c1">calc_band_plot</span>(klines,la)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/21115243/46902092-f22cc900-cef9-11e8-85be-948a0e7d3dae.png"><img src="https://user-images.githubusercontent.com/21115243/46902092-f22cc900-cef9-11e8-85be-948a0e7d3dae.png" alt="68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3234363131332f32616530653833392d633239642d333166332d336533332d3136343164376431636230382e706e67" style="max-width:100%;"></a></p>
<h2><a id="user-content-graphene-nano-ribbon" class="anchor" aria-hidden="true" href="#graphene-nano-ribbon"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Graphene nano-ribbon</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Plots
<span class="pl-c"><span class="pl-c">#</span>We have already constructed atoms and hoppings.</span>
<span class="pl-c"><span class="pl-c">#</span>We add the line to plot</span>
klines <span class="pl-k">=</span> <span class="pl-c1">set_Klines</span>()
kmin <span class="pl-k">=</span> [<span class="pl-k">-</span>π]
kmax <span class="pl-k">=</span> [π]
<span class="pl-c1">add_Kpoints!</span>(klines,kmin,kmax,<span class="pl-s"><span class="pl-pds">"</span>-pi<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>pi<span class="pl-pds">"</span></span>)</pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span>We consider the periodic boundary condition along the primitive vector</span>
direction <span class="pl-k">=</span> <span class="pl-c1">1</span>
<span class="pl-c"><span class="pl-c">#</span>Periodic boundary condition</span>
<span class="pl-c1">calc_band_plot_finite</span>(klines,la,direction,periodic<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/21115243/46902101-315b1a00-cefa-11e8-9e41-01ffe464a3b1.png"><img src="https://user-images.githubusercontent.com/21115243/46902101-315b1a00-cefa-11e8-9e41-01ffe464a3b1.png" alt="68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3234363131332f66323033656365632d393835322d303931612d336332382d3662633463386138356666312e706e67" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span>We introduce the surface perpendicular to the premitive vector</span>
direction <span class="pl-k">=</span> <span class="pl-c1">1</span>
<span class="pl-c"><span class="pl-c">#</span>Open boundary condition</span>
<span class="pl-c1">calc_band_plot_finite</span>(klines,la,direction,periodic<span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/21115243/46902102-34eea100-cefa-11e8-8abf-9216a3163ac4.png"><img src="https://user-images.githubusercontent.com/21115243/46902102-34eea100-cefa-11e8-8abf-9216a3163ac4.png" alt="68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3234363131332f36313038363162632d316538302d343364632d303064322d3035643237663865383435652e706e67" style="max-width:100%;"></a></p>
<h2><a id="user-content-fe-based-superconductor" class="anchor" aria-hidden="true" href="#fe-based-superconductor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Fe-based superconductor</h2>
<p>We construct two-band model for Fe-based superconductor [S. Rachu et al. Phys. Rev. B 77, 220503(R) (2008)].</p>
<div class="highlight highlight-source-julia"><pre>la <span class="pl-k">=</span> <span class="pl-c1">set_Lattice</span>(<span class="pl-c1">2</span>,[[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>]]) <span class="pl-c"><span class="pl-c">#</span>Square lattice</span>
<span class="pl-c1">add_atoms!</span>(la,[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]) <span class="pl-c"><span class="pl-c">#</span>dxz orbital</span>
<span class="pl-c1">add_atoms!</span>(la,[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]) <span class="pl-c"><span class="pl-c">#</span>dyz orbital</span>
<span class="pl-c"><span class="pl-c">#</span>hoppings</span>
t1 <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1.0</span>
t2 <span class="pl-k">=</span> <span class="pl-c1">1.3</span>
t3 <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">0.85</span>
t4 <span class="pl-k">=</span> t3
μ <span class="pl-k">=</span> <span class="pl-c1">1.45</span>

<span class="pl-c"><span class="pl-c">#</span>dxz</span>
<span class="pl-c1">add_hoppings!</span>(la,<span class="pl-k">-</span>t1,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>])
<span class="pl-c1">add_hoppings!</span>(la,<span class="pl-k">-</span>t2,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>])
<span class="pl-c1">add_hoppings!</span>(la,<span class="pl-k">-</span>t3,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>])
<span class="pl-c1">add_hoppings!</span>(la,<span class="pl-k">-</span>t3,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>])

<span class="pl-c"><span class="pl-c">#</span>dyz</span>
<span class="pl-c1">add_hoppings!</span>(la,<span class="pl-k">-</span>t2,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>])
<span class="pl-c1">add_hoppings!</span>(la,<span class="pl-k">-</span>t1,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>])
<span class="pl-c1">add_hoppings!</span>(la,<span class="pl-k">-</span>t3,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>])
<span class="pl-c1">add_hoppings!</span>(la,<span class="pl-k">-</span>t3,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>])

<span class="pl-c"><span class="pl-c">#</span>between dxz and dyz</span>
<span class="pl-c1">add_hoppings!</span>(la,<span class="pl-k">-</span>t4,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>])
<span class="pl-c1">add_hoppings!</span>(la,<span class="pl-k">-</span>t4,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>])
<span class="pl-c1">add_hoppings!</span>(la,t4,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>])
<span class="pl-c1">add_hoppings!</span>(la,t4,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>])

<span class="pl-c"><span class="pl-c">#</span>Chemical potentials</span>
set_μ<span class="pl-k">!</span>(la,μ) <span class="pl-c"><span class="pl-c">#</span>set the chemical potential</span></pre></div>
<p>To see the band structure, we use</p>
<div class="highlight highlight-source-julia"><pre>klines <span class="pl-k">=</span> <span class="pl-c1">set_Klines</span>()
kmin <span class="pl-k">=</span> [<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]
kmax <span class="pl-k">=</span> [π,<span class="pl-c1">0</span>]
<span class="pl-c1">add_Kpoints!</span>(klines,kmin,kmax,<span class="pl-s"><span class="pl-pds">"</span>(0,0)<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>(pi,0)<span class="pl-pds">"</span></span>)

kmin <span class="pl-k">=</span> [π,<span class="pl-c1">0</span>]
kmax <span class="pl-k">=</span> [π,π]
<span class="pl-c1">add_Kpoints!</span>(klines,kmin,kmax,<span class="pl-s"><span class="pl-pds">"</span>(pi,0)<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>(pi,pi)<span class="pl-pds">"</span></span>)

kmin <span class="pl-k">=</span> [π,π]
kmax <span class="pl-k">=</span> [<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]
<span class="pl-c1">add_Kpoints!</span>(klines,kmin,kmax,<span class="pl-s"><span class="pl-pds">"</span>(pi,pi)<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>(0,0)<span class="pl-pds">"</span></span>)

<span class="pl-k">using</span> Plots
pls <span class="pl-k">=</span> <span class="pl-c1">calc_band_plot</span>(klines,la)</pre></div>
<p>Then, we have the band structure:</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/21115243/46902455-a3cef880-cf00-11e8-97b8-ddb92038ccc1.png"><img src="https://user-images.githubusercontent.com/21115243/46902455-a3cef880-cf00-11e8-97b8-ddb92038ccc1.png" alt="fe" style="max-width:100%;"></a></p>
<p>We can obtain the Hamiltonian:</p>
<div class="highlight highlight-source-julia"><pre>ham <span class="pl-k">=</span> <span class="pl-c1">hamiltonian_k</span>(la) <span class="pl-c"><span class="pl-c">#</span>we can obtain the function "ham([kx,ky])".</span>
kx <span class="pl-k">=</span> <span class="pl-c1">0.1</span>
ky <span class="pl-k">=</span> <span class="pl-c1">0.2</span>
hamk <span class="pl-k">=</span> <span class="pl-c1">ham</span>([kx,ky]) <span class="pl-c"><span class="pl-c">#</span>ham is a functional of k=[kx,ky].</span>
<span class="pl-c1">println</span>(hamk)</pre></div>
<h2><a id="user-content-fe-based-superconductor-5-orbital-model" class="anchor" aria-hidden="true" href="#fe-based-superconductor-5-orbital-model"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Fe-based superconductor: 5 orbital model</h2>
<p>Finally, we show the 5-orbital model proposed by K. Kuroki et al.[K. Kuroki et al., Phys. Rev. Lett. 101, 087004  (2008)].
The sample code is</p>
<div class="highlight highlight-source-julia"><pre>la <span class="pl-k">=</span> <span class="pl-c1">set_Lattice</span>(<span class="pl-c1">2</span>,[[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>]])
<span class="pl-c1">add_atoms!</span>(la,[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>])
<span class="pl-c1">add_atoms!</span>(la,[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>])
<span class="pl-c1">add_atoms!</span>(la,[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>])
<span class="pl-c1">add_atoms!</span>(la,[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>])
<span class="pl-c1">add_atoms!</span>(la,[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>])

tmat <span class="pl-k">=</span> [
<span class="pl-k">-</span><span class="pl-c1">0.7</span>    <span class="pl-c1">0</span> <span class="pl-k">-</span><span class="pl-c1">0.4</span>  <span class="pl-c1">0.2</span> <span class="pl-k">-</span><span class="pl-c1">0.1</span>
<span class="pl-k">-</span><span class="pl-c1">0.8</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span>
 <span class="pl-c1">0.8</span> <span class="pl-k">-</span><span class="pl-c1">1.5</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span> <span class="pl-k">-</span><span class="pl-c1">0.3</span>
   <span class="pl-c1">0</span>  <span class="pl-c1">1.7</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span> <span class="pl-k">-</span><span class="pl-c1">0.1</span>
<span class="pl-k">-</span><span class="pl-c1">3.0</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span> <span class="pl-k">-</span><span class="pl-c1">0.2</span>    <span class="pl-c1">0</span>
<span class="pl-k">-</span><span class="pl-c1">2.1</span>  <span class="pl-c1">1.5</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span>
 <span class="pl-c1">1.3</span>    <span class="pl-c1">0</span>  <span class="pl-c1">0.2</span> <span class="pl-k">-</span><span class="pl-c1">0.2</span>    <span class="pl-c1">0</span>
 <span class="pl-c1">1.7</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span>  <span class="pl-c1">0.2</span>    <span class="pl-c1">0</span>
<span class="pl-k">-</span><span class="pl-c1">2.5</span>  <span class="pl-c1">1.4</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span>
<span class="pl-k">-</span><span class="pl-c1">2.1</span>  <span class="pl-c1">3.3</span>    <span class="pl-c1">0</span> <span class="pl-k">-</span><span class="pl-c1">0.3</span>  <span class="pl-c1">0.7</span>
 <span class="pl-c1">1.7</span>  <span class="pl-c1">0.2</span>    <span class="pl-c1">0</span>  <span class="pl-c1">0.2</span>    <span class="pl-c1">0</span>
 <span class="pl-c1">2.5</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span>  <span class="pl-c1">0.3</span>    <span class="pl-c1">0</span>
 <span class="pl-c1">1.6</span>  <span class="pl-c1">1.2</span> <span class="pl-k">-</span><span class="pl-c1">0.3</span> <span class="pl-k">-</span><span class="pl-c1">0.3</span> <span class="pl-k">-</span><span class="pl-c1">0.3</span>
   <span class="pl-c1">0</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span> <span class="pl-k">-</span><span class="pl-c1">0.1</span>    <span class="pl-c1">0</span>
 <span class="pl-c1">3.1</span> <span class="pl-k">-</span><span class="pl-c1">0.7</span> <span class="pl-k">-</span><span class="pl-c1">0.2</span>    <span class="pl-c1">0</span>    <span class="pl-c1">0</span>
]
tmat <span class="pl-k">=</span> <span class="pl-c1">0.1</span><span class="pl-k">.*</span>tmat
imap <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(Int64,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>)
count <span class="pl-k">=</span> <span class="pl-c1">0</span>
<span class="pl-k">for</span> μ<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>
    <span class="pl-k">for</span> ν<span class="pl-k">=</span>μ:<span class="pl-c1">5</span>
        count <span class="pl-k">+=</span> <span class="pl-c1">1</span>
        imap[μ,ν] <span class="pl-k">=</span> count
    <span class="pl-k">end</span>
<span class="pl-k">end</span>
Is <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>]
σds <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>]
tmat_σy <span class="pl-k">=</span> tmat[:,:]
tmat_σy[imap[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>],:] <span class="pl-k">=</span> <span class="pl-k">-</span>tmat[imap[<span class="pl-c1">1</span>,<span class="pl-c1">3</span>],:]
tmat_σy[imap[<span class="pl-c1">1</span>,<span class="pl-c1">3</span>],:] <span class="pl-k">=</span> <span class="pl-k">-</span>tmat[imap[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>],:]
tmat_σy[imap[<span class="pl-c1">1</span>,<span class="pl-c1">4</span>],:] <span class="pl-k">=</span> <span class="pl-k">-</span>tmat[imap[<span class="pl-c1">1</span>,<span class="pl-c1">4</span>],:]
tmat_σy[imap[<span class="pl-c1">2</span>,<span class="pl-c1">2</span>],:] <span class="pl-k">=</span> tmat[imap[<span class="pl-c1">3</span>,<span class="pl-c1">3</span>],:]
tmat_σy[imap[<span class="pl-c1">2</span>,<span class="pl-c1">4</span>],:] <span class="pl-k">=</span> tmat[imap[<span class="pl-c1">3</span>,<span class="pl-c1">4</span>],:]
tmat_σy[imap[<span class="pl-c1">2</span>,<span class="pl-c1">5</span>],:] <span class="pl-k">=</span> <span class="pl-k">-</span>tmat[imap[<span class="pl-c1">3</span>,<span class="pl-c1">5</span>],:]
tmat_σy[imap[<span class="pl-c1">3</span>,<span class="pl-c1">3</span>],:] <span class="pl-k">=</span> tmat[imap[<span class="pl-c1">2</span>,<span class="pl-c1">2</span>],:]
tmat_σy[imap[<span class="pl-c1">3</span>,<span class="pl-c1">4</span>],:] <span class="pl-k">=</span> tmat[imap[<span class="pl-c1">2</span>,<span class="pl-c1">4</span>],:]
tmat_σy[imap[<span class="pl-c1">3</span>,<span class="pl-c1">5</span>],:] <span class="pl-k">=</span> <span class="pl-k">-</span>tmat[imap[<span class="pl-c1">2</span>,<span class="pl-c1">5</span>],:]
tmat_σy[imap[<span class="pl-c1">4</span>,<span class="pl-c1">5</span>],:] <span class="pl-k">=</span> <span class="pl-k">-</span>tmat[imap[<span class="pl-c1">4</span>,<span class="pl-c1">5</span>],:]

hoppingmatrix <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(Float64,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>)
hops <span class="pl-k">=</span> [<span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>]
hopelements <span class="pl-k">=</span> [[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>],[<span class="pl-c1">2</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">2</span>,<span class="pl-c1">1</span>],[<span class="pl-c1">2</span>,<span class="pl-c1">2</span>]]

<span class="pl-k">for</span> μ <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>
    <span class="pl-k">for</span> ν<span class="pl-k">=</span>μ:<span class="pl-c1">5</span>
        <span class="pl-k">for</span> ii<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>
            ihop <span class="pl-k">=</span> hopelements[ii][<span class="pl-c1">1</span>]
            jhop <span class="pl-k">=</span> hopelements[ii][<span class="pl-c1">2</span>]
            <span class="pl-c"><span class="pl-c">#</span>[a,b],[a,-b],[-a,-b],[-a,b],[b,a],[b,-a],[-b,a],[-b,-a]</span>

            <span class="pl-c"><span class="pl-c">#</span>[a,b]</span>
            i <span class="pl-k">=</span> ihop <span class="pl-k">+</span><span class="pl-c1">3</span>
            j <span class="pl-k">=</span> jhop <span class="pl-k">+</span><span class="pl-c1">3</span>
            hoppingmatrix[μ,ν,i,j]<span class="pl-k">=</span>tmat[imap[μ,ν],ii]
            <span class="pl-c"><span class="pl-c">#</span>[a,-b] = σy*[a,b] [1,1] -&gt; [1,-1]</span>
            <span class="pl-k">if</span> jhop <span class="pl-k">!=</span> <span class="pl-c1">0</span>
                i <span class="pl-k">=</span> ihop <span class="pl-k">+</span><span class="pl-c1">3</span>
                j <span class="pl-k">=</span> <span class="pl-k">-</span>jhop <span class="pl-k">+</span><span class="pl-c1">3</span>
                hoppingmatrix[μ,ν,i,j]<span class="pl-k">=</span>tmat_σy[imap[μ,ν],ii]
            <span class="pl-k">end</span>

            <span class="pl-k">if</span> μ <span class="pl-k">!=</span> ν
                <span class="pl-c"><span class="pl-c">#</span>[-a,-b] = I*[a,b] [1,1] -&gt; [-1,-1],[1,0]-&gt;[-1,0]</span>
                i <span class="pl-k">=</span> <span class="pl-k">-</span>ihop <span class="pl-k">+</span><span class="pl-c1">3</span>
                j <span class="pl-k">=</span> <span class="pl-k">-</span>jhop <span class="pl-k">+</span><span class="pl-c1">3</span>
                hoppingmatrix[μ,ν,i,j]<span class="pl-k">=</span>Is[imap[μ,ν]]<span class="pl-k">*</span>tmat[imap[μ,ν],ii]
                <span class="pl-c"><span class="pl-c">#</span>[-a,b] = I*[a,-b] = I*σy*[a,b]  #[2,0]-&gt;[-2,0]</span>
                <span class="pl-k">if</span> jhop <span class="pl-k">!=</span> <span class="pl-c1">0</span>
                    i <span class="pl-k">=</span> <span class="pl-k">-</span>ihop <span class="pl-k">+</span><span class="pl-c1">3</span>
                    j <span class="pl-k">=</span> jhop <span class="pl-k">+</span><span class="pl-c1">3</span>
                    hoppingmatrix[μ,ν,i,j]<span class="pl-k">=</span>Is[imap[μ,ν]]<span class="pl-k">*</span>tmat_σy[imap[μ,ν],ii]
                <span class="pl-k">end</span>
            <span class="pl-k">end</span>
            <span class="pl-c"><span class="pl-c">#</span>[b,a],[b,-a],[-b,a],[-b,-a]</span>
            <span class="pl-k">if</span> jhop <span class="pl-k">!=</span> ihop
                <span class="pl-c"><span class="pl-c">#</span>[b,a] = σd*[a,b]</span>
                i <span class="pl-k">=</span> jhop <span class="pl-k">+</span><span class="pl-c1">3</span>
                j <span class="pl-k">=</span> ihop <span class="pl-k">+</span><span class="pl-c1">3</span>
                hoppingmatrix[μ,ν,i,j]<span class="pl-k">=</span>σds[imap[μ,ν]]<span class="pl-k">*</span>tmat[imap[μ,ν],ii]
                <span class="pl-c"><span class="pl-c">#</span>[-b,a] = σd*σy*[a,b]</span>
                <span class="pl-k">if</span> jhop <span class="pl-k">!=</span> <span class="pl-c1">0</span>
                    i <span class="pl-k">=</span> <span class="pl-k">-</span>jhop <span class="pl-k">+</span><span class="pl-c1">3</span>
                    j <span class="pl-k">=</span> ihop <span class="pl-k">+</span><span class="pl-c1">3</span>
                    hoppingmatrix[μ,ν,i,j]<span class="pl-k">=</span>σds[imap[μ,ν]]<span class="pl-k">*</span>tmat_σy[imap[μ,ν],ii]
                <span class="pl-k">end</span>

                <span class="pl-k">if</span> μ <span class="pl-k">!=</span> ν
                    <span class="pl-c"><span class="pl-c">#</span>[-b,-a] = σd*[-a,-b] = σd*I*[a,b]</span>
                    i <span class="pl-k">=</span> <span class="pl-k">-</span>jhop <span class="pl-k">+</span><span class="pl-c1">3</span>
                    j <span class="pl-k">=</span> <span class="pl-k">-</span>ihop <span class="pl-k">+</span><span class="pl-c1">3</span>
                    hoppingmatrix[μ,ν,i,j]<span class="pl-k">=</span>σds[imap[μ,ν]]<span class="pl-k">*</span>Is[imap[μ,ν]]<span class="pl-k">*</span>tmat[imap[μ,ν],ii]
                    <span class="pl-c"><span class="pl-c">#</span>[b,-a] = σd*[-a,b] = σd*I*[a,-b] = σd*I*σy*[a,b]  #[2,0]-&gt;[-2,0]</span>
                    <span class="pl-k">if</span> jhop <span class="pl-k">!=</span> <span class="pl-c1">0</span>
                        i <span class="pl-k">=</span> jhop <span class="pl-k">+</span><span class="pl-c1">3</span>
                        j <span class="pl-k">=</span> <span class="pl-k">-</span>ihop <span class="pl-k">+</span><span class="pl-c1">3</span>
                        hoppingmatrix[μ,ν,i,j]<span class="pl-k">=</span>σds[imap[μ,ν]]<span class="pl-k">*</span>Is[imap[μ,ν]]<span class="pl-k">*</span>tmat_σy[imap[μ,ν],ii]
                    <span class="pl-k">end</span>
                <span class="pl-k">end</span>
            <span class="pl-k">end</span>
        <span class="pl-k">end</span>


    <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-k">for</span> μ<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>
    <span class="pl-k">for</span> ν<span class="pl-k">=</span>μ:<span class="pl-c1">5</span>
        <span class="pl-k">for</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>
            ih <span class="pl-k">=</span> hops[i]
            <span class="pl-k">for</span> j <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>
                jh <span class="pl-k">=</span> hops[j]
                <span class="pl-k">if</span> hoppingmatrix[μ,ν,i,j] <span class="pl-k">!=</span> <span class="pl-c1">0.0</span>                
                    <span class="pl-c1">add_hoppings!</span>(la,hoppingmatrix[μ,ν,i,j],μ,ν,[ih,jh])
                <span class="pl-k">end</span>
            <span class="pl-k">end</span>
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

onsite <span class="pl-k">=</span> [<span class="pl-c1">10.75</span>,<span class="pl-c1">10.96</span>,<span class="pl-c1">10.96</span>,<span class="pl-c1">11.12</span>,<span class="pl-c1">10.62</span>]
<span class="pl-c1">set_onsite!</span>(la,onsite)

set_μ<span class="pl-k">!</span>(la,<span class="pl-c1">10.96</span>) <span class="pl-c"><span class="pl-c">#</span>set the chemical potential</span></pre></div>
<p>Then, we plot the band structure</p>
<div class="highlight highlight-source-julia"><pre>nk <span class="pl-k">=</span> <span class="pl-c1">100</span>
klines <span class="pl-k">=</span> <span class="pl-c1">set_Klines</span>()
kmin <span class="pl-k">=</span> [<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]
kmax <span class="pl-k">=</span> [π,<span class="pl-c1">0</span>]
<span class="pl-c1">add_Kpoints!</span>(klines,kmin,kmax,<span class="pl-s"><span class="pl-pds">"</span>(0,0)<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>(pi,0)<span class="pl-pds">"</span></span>,nk<span class="pl-k">=</span>nk)

kmin <span class="pl-k">=</span> [π,<span class="pl-c1">0</span>]
kmax <span class="pl-k">=</span> [π,π]
<span class="pl-c1">add_Kpoints!</span>(klines,kmin,kmax,<span class="pl-s"><span class="pl-pds">"</span>(pi,0)<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>(pi,pi)<span class="pl-pds">"</span></span>,nk<span class="pl-k">=</span>nk)

kmin <span class="pl-k">=</span> [π,π]
kmax <span class="pl-k">=</span> [<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]
<span class="pl-c1">add_Kpoints!</span>(klines,kmin,kmax,<span class="pl-s"><span class="pl-pds">"</span>(pi,pi)<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>(0,0)<span class="pl-pds">"</span></span>,nk<span class="pl-k">=</span>nk)

<span class="pl-k">using</span> Plots
pls <span class="pl-k">=</span> <span class="pl-c1">calc_band_plot</span>(klines,la)
<span class="pl-c1">savefig</span>(<span class="pl-s"><span class="pl-pds">"</span>Fe5band.png<span class="pl-pds">"</span></span>)</pre></div>
<p>We have the band structure:</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/21115243/46914868-2f6a8700-cfde-11e8-8f40-a052cd66b473.png"><img src="https://user-images.githubusercontent.com/21115243/46914868-2f6a8700-cfde-11e8-8f40-a052cd66b473.png" alt="fe5band" style="max-width:100%;"></a></p>
<p>This figure is consistent with Fig.2 in the paper where the hopping table is used [T. Nomura, J. Phys. Soc. Jpn. 78, 034716 (2009)].</p>
<p>The Fermi surface is given by</p>
<div class="highlight highlight-source-julia"><pre>pls <span class="pl-k">=</span> <span class="pl-c1">plot_fermisurface_2D</span>(la)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/21115243/46914887-b28bdd00-cfde-11e8-9021-16077f960ad5.png"><img src="https://user-images.githubusercontent.com/21115243/46914887-b28bdd00-cfde-11e8-9021-16077f960ad5.png" alt="fefermi" style="max-width:100%;"></a></p>
<h1><a id="user-content-09-feb-2019-making-surface-hamiltonian-from-the-momentum-space-hamiltonian" class="anchor" aria-hidden="true" href="#09-feb-2019-making-surface-hamiltonian-from-the-momentum-space-hamiltonian"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>[09 Feb. 2019] Making surface Hamiltonian from the momentum space Hamiltonian</h1>
<p>If we have the Hamiltonian defined in momentum space, we can construct the surface Hamiltonian.
For example, we consider a model of 2D topological insulator:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> TightBinding
Ax <span class="pl-k">=</span> <span class="pl-c1">1</span>
Ay <span class="pl-k">=</span> <span class="pl-c1">1</span>
m2x <span class="pl-k">=</span> <span class="pl-c1">1</span>
m2y <span class="pl-k">=</span> m2x
m0 <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>m2x
<span class="pl-en">m</span>(k) <span class="pl-k">=</span> m0 <span class="pl-k">+</span> <span class="pl-c1">2</span>m2x<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">cos</span>(k[<span class="pl-c1">1</span>]))<span class="pl-k">+</span><span class="pl-c1">2</span>m2y<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">cos</span>(k[<span class="pl-c1">2</span>]))
<span class="pl-en">Hk</span>(k) <span class="pl-k">=</span> Ax<span class="pl-k">*</span><span class="pl-c1">sin</span>(k[<span class="pl-c1">1</span>])<span class="pl-k">.*</span>σx <span class="pl-k">+</span>  Ay<span class="pl-k">*</span><span class="pl-c1">sin</span>(k[<span class="pl-c1">2</span>])<span class="pl-k">.*</span>σy <span class="pl-k">+</span> <span class="pl-c1">m</span>(k)<span class="pl-k">.*</span>σz
norb <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-c"><span class="pl-c">#</span>The size of the matrix</span></pre></div>
<p>Now, when you use TightBinding.jl, the Pauli matrices σx,σy,σz,σ0 are defined.
Then,</p>
<div class="highlight highlight-source-julia"><pre>hamiltonian <span class="pl-k">=</span> <span class="pl-c1">surfaceHamiltonian</span>(Hk,norb,numhop<span class="pl-k">=</span><span class="pl-c1">3</span>,L<span class="pl-k">=</span><span class="pl-c1">32</span>,kpara<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>kx<span class="pl-pds">"</span></span>,BC<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>OBC<span class="pl-pds">"</span></span>)</pre></div>
<p>makes the function hamiltonian(k). We can choose open boundary condition OBC or
periodic boundary condition PBC.
numhop determines the number of the maximum hoppings. numhop-th nearest neighbor hopping can be included.
L detemines the size of the real space lattice.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Plots
<span class="pl-k">using</span> LinearAlgebra
nkx <span class="pl-k">=</span> <span class="pl-c1">100</span>
kxs <span class="pl-k">=</span> <span class="pl-c1">range</span>(<span class="pl-k">-</span>π,stop<span class="pl-k">=</span>π ,length<span class="pl-k">=</span>nkx)
mat_e <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(Float64,nkx,<span class="pl-c1">32</span><span class="pl-k">*</span><span class="pl-c1">2</span>)
<span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span>nkx
    kx <span class="pl-k">=</span> kxs[i]
    mat_h <span class="pl-k">=</span> <span class="pl-c1">hamiltonian</span>(kx)
    <span class="pl-c"><span class="pl-c">#</span>println(mat_h)</span>
    
    e,v <span class="pl-k">=</span> <span class="pl-c1">eigen</span>(<span class="pl-c1">Matrix</span>(mat_h))
    <span class="pl-c"><span class="pl-c">#</span>println(e)</span>
    mat_e[i,:] <span class="pl-k">=</span> <span class="pl-c1">real</span>.(e[:])
<span class="pl-k">end</span>
<span class="pl-c1">plot</span>(kxs,mat_e,labels<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>)
<span class="pl-c1">savefig</span>(<span class="pl-s"><span class="pl-pds">"</span>tes1.png<span class="pl-pds">"</span></span>)</pre></div>
<p>You can see the surface state.</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/21115243/52520885-38304880-2cb2-11e9-9aba-3654fa48a85d.png"><img src="https://user-images.githubusercontent.com/21115243/52520885-38304880-2cb2-11e9-9aba-3654fa48a85d.png" alt="tes2" style="max-width:100%;"></a></p>
</article></div>