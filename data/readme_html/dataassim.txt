<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-dataassim" class="anchor" aria-hidden="true" href="#dataassim"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DataAssim</h1>
<p><a href="https://github.com/Alexander-Barth/DataAssim.jl/actions"><img src="https://github.com/Alexander-Barth/DataAssim.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/Alexander-Barth/dataassim-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6a87c976c001ee42fe4b9f2a95626dcf087bdea374a91bcf7ba66c6fd78bb988/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f416c6578616e6465722d42617274682f44617461417373696d2e6a6c3f6272616e63683d6d6173746572267376673d74727565" alt="Build Status Windows" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/Alexander-Barth/DataAssim.jl?branch=master&amp;svg=true" style="max-width:100%;"></a>
<a href="http://codecov.io/github/Alexander-Barth/DataAssim.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/245059f590b4fbb754b7e7ff8c09d0f5eb2649f0ea3a842640252e8a709b6aa3/687474703a2f2f636f6465636f762e696f2f6769746875622f416c6578616e6465722d42617274682f44617461417373696d2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/Alexander-Barth/DataAssim.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>

<p><a href="https://alexander-barth.github.io/DataAssim.jl/latest/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="documentation latest" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>The packages implements various data assimilation methods:</p>
<ul>
<li>(Extended) Kalman Filter</li>
<li>Incremental 4D-Var</li>
<li>Ensemble Square Root Filter (EnSRF)</li>
<li>Ensemble Square Root Filter with serial processing of the observations (serialEnSRF)</li>
<li>Ensemble Transform Kalman Filter (ETKF)</li>
<li>Ensemble Transform Kalman Filter (EAKF)</li>
<li>Singular Evolutive Interpolated Kalman Ô¨Ålter (SEIK)</li>
<li>Error-subspace Transform Kalman Filter (ESTKF)</li>
<li>Ensemble Kalman Filter (EnKF)</li>
</ul>
<p>The Julia code is ported from the Matlab/Octave code generated in the frame of the Sangoma project (<a href="http://data-assimilation.net/" rel="nofollow">http://data-assimilation.net/</a>).</p>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<p>An example of using to package is available as a <a href="https://nbviewer.jupyter.org/github/Alexander-Barth/DataAssim.jl/blob/master/examples/example.ipynb" rel="nofollow">jupyter-notebook</a>.</p>
<h2><a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Reference</h2>
<p>Most of the algorithms are described in the review article:</p>
<p>Sanita Vetra-Carvalho, Peter Jan van Leeuwen, Lars Nerger, Alexander Barth, M. Umer Altaf, Pierre Brasseur, Paul Kirchgessner, and Jean-Marie Beckers. State-of-the-art stochastic data assimilation methods for high-dimensional non-Gaussian problems. Tellus A: Dynamic Meteorology and Oceanography, 70(1):1445364, 2018. doi: <a href="https://doi.org/10.1080/16000870.2018.1445364" rel="nofollow">10.1080/16000870.2018.1445364</a>.</p>
</article></div>