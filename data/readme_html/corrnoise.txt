<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-corrnoise" class="anchor" aria-hidden="true" href="#corrnoise"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>CorrNoise</h1>
<p><a href="https://travis-ci.org/ziotom78/CorrNoise.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/80d61783baf6fd1ff2c1f47bb4105711a04ff1d0/68747470733a2f2f7472617669732d63692e6f72672f7a696f746f6d37382f436f72724e6f6973652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ziotom78/CorrNoise.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/ziotom78/CorrNoise.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/1d02e69e12d1bfa305c3eb5d7e5323043f623941/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7a696f746f6d37382f436f72724e6f6973652e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/ziotom78/CorrNoise.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ziotom78.github.io/CorrNoise.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>CorrNoise.jl is a Julia package to produce streams of correlated
noise, i.e., random numbers which follow a 1/f distribution.</p>
<h1><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example</h1>
<p>Here is an example showing how to generate 1/f noise with slope 1.7,
knee frequency sampling frequency 0.05:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Random
<span class="pl-k">using</span> CorrNoise
<span class="pl-k">using</span> Plots

rng <span class="pl-k">=</span> <span class="pl-c1">OofRNG</span>(<span class="pl-c1">GaussRNG</span>(<span class="pl-c1">MersenneTwister</span>(<span class="pl-c1">1234</span>)), <span class="pl-k">-</span><span class="pl-c1">1.7</span>, <span class="pl-c1">1.15e-5</span>, <span class="pl-c1">0.05</span>, <span class="pl-c1">1.0</span>);
data <span class="pl-k">=</span> [<span class="pl-c1">randoof</span>(rng) <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10000</span>]
<span class="pl-c1">plot</span>(data)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/example.png"><img src="images/example.png" alt="" style="max-width:100%;"></a></p>
</article></div>