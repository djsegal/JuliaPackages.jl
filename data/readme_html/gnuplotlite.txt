<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-gnuplotlitejl" class="anchor" aria-hidden="true" href="#gnuplotlitejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GnuplotLite.jl</h1>
<p dir="auto">Responsive, composable, no-nonsense interface to Gnuplot. This has the following design goals:</p>
<ul dir="auto">
<li>Responsiveness: this should be the thinnest of possible wrappers. The biggest drag to plotting in Julia is the number of lines of code that sit in between the programmer and the plotter.</li>
<li>Composability: it should be easy to extend GnuplotLite.</li>
<li>Transparency: it should be easy to reason about how data is entered into Gnuplot.</li>
</ul>
<p dir="auto">That being said, there are so many plotting packages in Julia. When should you use this?</p>
<ul dir="auto">
<li>Use <code>GnuplotLite</code> if you are in love with Gnuplot and want nothing to sit in between you and it.</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GnuplotLite

gnuplot() do gp
    gp |&gt;
        send(&quot;set term svg background 'white'&quot;) |&gt;
        send(&quot;set output 'sine.svg'&quot;) |&gt;
        send(&quot;plot sin(x)&quot;)
end"><pre><span class="pl-k">using</span> GnuplotLite

<span class="pl-c1">gnuplot</span>() <span class="pl-k">do</span> gp
    gp <span class="pl-k">|&gt;</span>
        <span class="pl-c1">send</span>(<span class="pl-s"><span class="pl-pds">"</span>set term svg background 'white'<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
        <span class="pl-c1">send</span>(<span class="pl-s"><span class="pl-pds">"</span>set output 'sine.svg'<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span>
        <span class="pl-c1">send</span>(<span class="pl-s"><span class="pl-pds">"</span>plot sin(x)<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
<p dir="auto">You can specialize writing data to Gnuplot by overloading the <code>send()</code> method.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="x = -4:0.15:4
y = x
z = sinc.(sqrt.(x.^2 .+ y'.^2))

gnuplot() do gp
    gp |&gt;
        send(&quot;data&quot; =&gt; (x=collect(x),y=collect(y),z=z)) |&gt;
        send(&quot;plot \$data matrix nonuniform with image&quot;)
end"><pre>x <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">0.15</span><span class="pl-k">:</span><span class="pl-c1">4</span>
y <span class="pl-k">=</span> x
z <span class="pl-k">=</span> <span class="pl-c1">sinc</span>.(<span class="pl-c1">sqrt</span>.(x<span class="pl-k">.^</span><span class="pl-c1">2</span> <span class="pl-k">.+</span> y<span class="pl-k">'</span><span class="pl-k">.^</span><span class="pl-c1">2</span>))

<span class="pl-c1">gnuplot</span>() <span class="pl-k">do</span> gp
    gp <span class="pl-k">|&gt;</span>
        <span class="pl-c1">send</span>(<span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> (x<span class="pl-k">=</span><span class="pl-c1">collect</span>(x),y<span class="pl-k">=</span><span class="pl-c1">collect</span>(y),z<span class="pl-k">=</span>z)) <span class="pl-k">|&gt;</span>
        <span class="pl-c1">send</span>(<span class="pl-s"><span class="pl-pds">"</span>plot <span class="pl-cce">\$</span>data matrix nonuniform with image<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
<p dir="auto">Check out the <a href="https://jhidding.github.io/GnuplotLite.jl" rel="nofollow">full documentation</a>.</p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">Copyright 2022, Johan Hidding, Netherlands eScience Center.</p>
<p dir="auto">Licensed under the Apache 2.0 license, see LICENSE.</p>
</article></div>