<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-dyn3d" class="anchor" aria-hidden="true" href="#dyn3d"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Dyn3d</h1>
<p dir="auto"><a href="https://ruizhi92.github.io/Dyn3d.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a>
<a href="https://travis-ci.org/ruizhi92/Dyn3d.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a9477c6631baddaf03a02f5b878c1d7d58ab3324aacf0a601d3db61afe716152/68747470733a2f2f7472617669732d63692e6f72672f7275697a686939322f44796e33642e6a6c2e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ruizhi92/Dyn3d.jl.png?branch=master" style="max-width: 100%;"></a>
<a href="https://ci.appveyor.com/project/ruizhi92/dyn3d-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/2d450ba76e01acd4f394bbe30da913e45e0bd62f843237fc1e5605b1e4d8864c/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f30796b70786d336538726674726f366d2f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/0ykpxm3e8rftro6m/branch/master?svg=true" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/ruizhi92/Dyn3d.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/94c0a3510d1ca6e15a28bb00c07ebf6a8e2210b63a88cf275d6d07acc991836e/68747470733a2f2f636f6465636f762e696f2f67682f7275697a686939322f44796e33642e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/ruizhi92/Dyn3d.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-about-the-package" class="anchor" aria-hidden="true" href="#about-the-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>About the package</h2>
<p dir="auto">This is the 2d/3d rigid body dynamics solver using 6d spatial vector. Examples notebooks
are given in notebook folder. User just need to change the configuration files
for different cases, nothing else needed to be changed.</p>
<p dir="auto">Code is written in Julia and Fortran on different branch.</p>
<ul dir="auto">
<li>branch <strong>master</strong> for <code>Julia 1.1</code></li>
<li>branch <strong>v0.6</strong> for <code>Julia 0.6</code></li>
<li>branch <strong>v0.7</strong> for <code>Julia 0.7</code></li>
<li>branch <strong>Fortran/artic3d</strong> computes dynamics using articulated body method.</li>
<li>branch <strong>Fortran/HERK</strong> computes dynamics formulating into a half-explicit Runge Kutta method solver in Fortran.</li>
</ul>
<p dir="auto"><strong>Dyn3d.jl</strong> is registered in the general Julia registry. To install, type
e.g.,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add Dyn3d"><pre>] add Dyn3d</pre></div>
<p dir="auto">Then, in any version, type</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Dyn3d"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Dyn3d</pre></div>
<p dir="auto">See the example Jupyter notebooks in the examples folder.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/ruizhi92/Dyn3d.jl/raw/master/example_gif.gif"><img src="https://github.com/ruizhi92/Dyn3d.jl/raw/master/example_gif.gif" alt="" data-animated-image="" style="max-width: 100%;"></a></p>
</article></div>