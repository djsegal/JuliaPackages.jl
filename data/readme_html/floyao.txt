<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-floyaojl" class="anchor" aria-hidden="true" href="#floyaojl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FLOYao.jl</h1>
<p dir="auto"><a href="https://github.com/QuantumBFS/FLOYao.jl/actions"><img src="https://github.com/QuantumBFS/FLOYao.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/QuantumBFS/FLOYao.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/842dadfc73962ed133b6cbd19020d47cf8edff22289fe29661c68f8be5485269/68747470733a2f2f636f6465636f762e696f2f67682f5175616e74756d4246532f464c4f59616f2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d55363034425147525631" alt="codecov" data-canonical-src="https://codecov.io/gh/QuantumBFS/FLOYao.jl/branch/master/graph/badge.svg?token=U604BQGRV1" style="max-width: 100%;"></a>
<a href="https://QuantumBFS.github.io/FLOYao.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://QuantumBFS.github.io/FLOYao.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">A <a href="https://github.com/QuantumBFS/Yao.jl">Yao.jl</a> backend to efficiently simulated
fermionic linear optics (FLO) circuits in  based on
<a href="https://arxiv.org/abs/quant-ph/0108010" rel="nofollow">Classical simulation of noninteracting-fermion quantum circuits</a>
and <a href="https://arxiv.org/abs/1108.3845" rel="nofollow">Disorder-assisted error correction in Majorana chains</a>.
FLO circuits are a class of quantum circuits that are closely related to
non-interacting fermions and can be efficiently simulated on classical
computers, similar to the way Clifford circuits can be efficiently classically
simulated, as is done in
<a href="https://github.com/QuantumBFS/YaoClifford.jl">YaoClifford.jl</a>.</p>
<p dir="auto">The goal of <code>FLOYao</code> is that if you have code written in <code>Yao.jl</code> that only
uses <a href="https://quantumbfs.github.io/FLOYao.jl/stable/supported_gates/" rel="nofollow">FLO gates</a>
and other primitives that are efficiently simulatable in polynomial time and
space, that you can simply replace your <code>AbstractArrayReg</code> with a <code>MajoranaReg</code>
and run exactly the same simulation, with the same code but exponentially faster.</p>
<p dir="auto">A brief introduction to fermionic linear optics circuits is found in the
<a href="docs-stable-url">Documentation</a> and a more in-depth introduction in e.g. the two papers linked above.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto"><code>FLOYao</code> can be simply installed from the REPL via</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; add FLOYao"><pre lang="jl-repl" class="notranslate"><code>pkg&gt; add FLOYao
</code></pre></div>
<h2 dir="auto"><a id="user-content-running-circuits" class="anchor" aria-hidden="true" href="#running-circuits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Running circuits</h2>
<p dir="auto">First import <code>FLOYao</code> and <code>Yao</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using FLOYao, Yao"><pre><span class="pl-k">using</span> FLOYao, Yao</pre></div>
<p dir="auto">then build a (here somewhat arbitrary) circuit consisting only of <a href="https://quantumbfs.github.io/FLOYao.jl/stable/background/" rel="nofollow">Supported gates</a></p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="nq = 4
θ = π/8
circuit = chain(nq)

push!(circuit, put(nq, 3=&gt;Rz(0.5)))

xxg1 = kron(nq, 1 =&gt; X, 2 =&gt; X)
rg = rot(xxg1, θ)
push!(circuit, rg)  

xxg2 = kron(nq, 2 =&gt; X, 3 =&gt; Z, 4 =&gt; X)
rg = rot(xxg2, θ)
push!(circuit, rg)  
push!(circuit, put(nq, 3=&gt;Rz(0.5)))
push!(circuit, put(nq, 1=&gt;Z))

xxg3 = kron(nq, 2 =&gt; X, 3 =&gt; X)
rg = rot(xxg3, θ)
push!(circuit, rg)"><pre lang="jldoctest" class="notranslate"><code>nq = 4
θ = π/8
circuit = chain(nq)

push!(circuit, put(nq, 3=&gt;Rz(0.5)))

xxg1 = kron(nq, 1 =&gt; X, 2 =&gt; X)
rg = rot(xxg1, θ)
push!(circuit, rg)  

xxg2 = kron(nq, 2 =&gt; X, 3 =&gt; Z, 4 =&gt; X)
rg = rot(xxg2, θ)
push!(circuit, rg)  
push!(circuit, put(nq, 3=&gt;Rz(0.5)))
push!(circuit, put(nq, 1=&gt;Z))

xxg3 = kron(nq, 2 =&gt; X, 3 =&gt; X)
rg = rot(xxg3, θ)
push!(circuit, rg)
</code></pre></div>
<p dir="auto">and create a FLO state, pipe it through the circuit and measure the result</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="FLOYao.zero_state(nq) |&gt; circuit |&gt; measure!"><pre>FLOYao<span class="pl-k">.</span><span class="pl-c1">zero_state</span>(nq) <span class="pl-k">|&gt;</span> circuit <span class="pl-k">|&gt;</span> measure!</pre></div>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<p dir="auto">The documentation for the last release is <a href="https://QuantumBFS.github.io/FLOYao.jl/stable" rel="nofollow">here</a> and the documentation
for the current development branch <a href="https://QuantumBFS.github.io/FLOYao.jl/dev/" rel="nofollow">here</a>.</p>
</article></div>