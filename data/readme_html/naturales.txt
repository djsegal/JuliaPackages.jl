<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-naturalesjl" class="anchor" aria-hidden="true" href="#naturalesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>NaturalES.jl</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667"><img src="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-experimental-orange.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/francescoalemanno/NaturalES.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/be3bbe7db74922b387546ff06340f1cbca2d8fbfed00c36da408e3c926094750/68747470733a2f2f7472617669732d63692e6f72672f6672616e636573636f616c656d616e6e6f2f4e61747572616c45532e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/francescoalemanno/NaturalES.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/francescoalemanno/NaturalES.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/85c169c93d1d460f70e4dae410a06e96906c57cc9f8c907af804b20c0fdc93f3/687474703a2f2f636f6465636f762e696f2f6769746875622f6672616e636573636f616c656d616e6e6f2f4e61747572616c45532e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/francescoalemanno/NaturalES.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>

<p>This package implements the optimization methods described in
<a href="http://www.jmlr.org/papers/volume15/wierstra14a/wierstra14a.pdf" rel="nofollow"><em>Wierstra, et al "Natural Evolution Strategies", JMLR (2014)</em></a>.
this implementation follows the KISS™ principle, it can be used as</p>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h1>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="function rosenbrock(x::AbstractVector{T}) where T
    s=(1.0 - x[1])^2
    for i in 1:(length(x)-1)
        s+=100.0 * (x[i+1] - x[i]^2)^2
    end
    return s
end

optimize(rosenbrock,[0.3,0.6],1.0,sNES) # separable natural es.

(sol = [0.9999902815083116, 0.9999805401026993], cost = 9.450201922031972e-11)


optimize(rosenbrock,[0.3,0.6],1.0,xNES) # exponential natural es.

(sol = [0.9999999934969991, 0.9999999871800216], cost = 4.574949214506023e-17)
"><pre><span class="pl-k">function</span> <span class="pl-en">rosenbrock</span>(x<span class="pl-k">::</span><span class="pl-c1">AbstractVector{T}</span>) <span class="pl-k">where</span> T
    s<span class="pl-k">=</span>(<span class="pl-c1">1.0</span> <span class="pl-k">-</span> x[<span class="pl-c1">1</span>])<span class="pl-k">^</span><span class="pl-c1">2</span>
    <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>(<span class="pl-c1">length</span>(x)<span class="pl-k">-</span><span class="pl-c1">1</span>)
        s<span class="pl-k">+=</span><span class="pl-c1">100.0</span> <span class="pl-k">*</span> (x[i<span class="pl-k">+</span><span class="pl-c1">1</span>] <span class="pl-k">-</span> x[i]<span class="pl-k">^</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>
    <span class="pl-k">end</span>
    <span class="pl-k">return</span> s
<span class="pl-k">end</span>

<span class="pl-c1">optimize</span>(rosenbrock,[<span class="pl-c1">0.3</span>,<span class="pl-c1">0.6</span>],<span class="pl-c1">1.0</span>,sNES) <span class="pl-c"><span class="pl-c">#</span> separable natural es.</span>

(sol <span class="pl-k">=</span> [<span class="pl-c1">0.9999902815083116</span>, <span class="pl-c1">0.9999805401026993</span>], cost <span class="pl-k">=</span> <span class="pl-c1">9.450201922031972e-11</span>)


<span class="pl-c1">optimize</span>(rosenbrock,[<span class="pl-c1">0.3</span>,<span class="pl-c1">0.6</span>],<span class="pl-c1">1.0</span>,xNES) <span class="pl-c"><span class="pl-c">#</span> exponential natural es.</span>

(sol <span class="pl-k">=</span> [<span class="pl-c1">0.9999999934969991</span>, <span class="pl-c1">0.9999999871800216</span>], cost <span class="pl-k">=</span> <span class="pl-c1">4.574949214506023e-17</span>)</pre></div>
<p>for further info in Julia type <code>?optimize</code>, to see</p>
<h5><a id="user-content-optimizef-μ-σ-methodsnesoptions" class="anchor" aria-hidden="true" href="#optimizef-μ-σ-methodsnesoptions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>optimize(f, μ, σ, [method=sNES;options...])</h5>
<p>minimizes the function <code>f</code> according to:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="`f` : function to optimize
    μ::Vector -&gt; cost::Real
`μ` : initial condition
    μ::Vector
`σ` : initial uncertainty on μ
    σ::{Real | Vector | Matrix}
`method` : xNES or sNES
    xNES = exponential evolution strategies, expensive but powerful on non separable objective
    sNES = separable evolution strategies, lightweight very powerful for separable or very high dimensional objectives
`options` :
         ημ = learning rate for μ,
         ησ = learning rate for uncertainties,
       atol = tolerance on uncertainties (default 1e-8),
    samples = number of samples used to build Natural Gradient approximation,
    iterations = upper limit on the number of iterations, default 10^4)
"><pre><code>`f` : function to optimize
    μ::Vector -&gt; cost::Real
`μ` : initial condition
    μ::Vector
`σ` : initial uncertainty on μ
    σ::{Real | Vector | Matrix}
`method` : xNES or sNES
    xNES = exponential evolution strategies, expensive but powerful on non separable objective
    sNES = separable evolution strategies, lightweight very powerful for separable or very high dimensional objectives
`options` :
         ημ = learning rate for μ,
         ησ = learning rate for uncertainties,
       atol = tolerance on uncertainties (default 1e-8),
    samples = number of samples used to build Natural Gradient approximation,
    iterations = upper limit on the number of iterations, default 10^4)
</code></pre></div>
<h1><a id="user-content-tips" class="anchor" aria-hidden="true" href="#tips"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Tips:</h1>
<ul>
<li>Use xNES for hard problems with strongly correlated variables</li>
<li>Use sNES for high dimensional problems that exhibit many local minima</li>
<li>Use sNES for problems with mostly separable variables</li>
</ul>
<h2><a id="user-content-other-packages" class="anchor" aria-hidden="true" href="#other-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Other packages</h2>
<p>look at the excellent <code>BlackBoxOptim</code>, or <code>Optim</code></p>
</article></div>