<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-hexagons" class="anchor" aria-hidden="true" href="#hexagons"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hexagons</h1>
<p dir="auto"><a href="https://travis-ci.org/GiovineItalia/Hexagons.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2caa994db2dc94933cfa4ab4a058dcb991967e7e80523c06ee05cc7f6ce6570b/68747470733a2f2f7472617669732d63692e6f72672f47696f76696e654974616c69612f48657861676f6e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/GiovineItalia/Hexagons.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides some basic utilities for working with hexagonal grids. It
is largely works from Amit Patel's <a href="http://www.redblobgames.com/grids/hexagons/" rel="nofollow">terrific
refererence</a>.</p>
<h2 dir="auto"><a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Synopsis</h2>
<p dir="auto">Hexagonal grids can be indexed a number of different ways. Indexes are
represented with one of the Hexagon types. The following are currently provided:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="HexagonAxial(q, r)
HexagonCubic(x, y, z)
HexagonOffsetOddR(q, r)
HexagonOffsetEvenR(q, r)"><pre><span class="pl-c1">HexagonAxial</span>(q, r)
<span class="pl-c1">HexagonCubic</span>(x, y, z)
<span class="pl-c1">HexagonOffsetOddR</span>(q, r)
<span class="pl-c1">HexagonOffsetEvenR</span>(q, r)</pre></div>
<p dir="auto">One indexing system can be converted to another with <code>convert</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="convert(HexagonOffsetOddR, HexagonAxial(2, 4))"><pre><span class="pl-c1">convert</span>(HexagonOffsetOddR, <span class="pl-c1">HexagonAxial</span>(<span class="pl-c1">2</span>, <span class="pl-c1">4</span>))</pre></div>
<p dir="auto">The six points (in cartesian space) of a hexagon can be iterated through with
<code>points</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="for (x, y) in vertices(HexagonAxial(2, 3))
    # ...
end"><pre><span class="pl-k">for</span> (x, y) <span class="pl-k">in</span> <span class="pl-c1">vertices</span>(<span class="pl-c1">HexagonAxial</span>(<span class="pl-c1">2</span>, <span class="pl-c1">3</span>))
    <span class="pl-c"><span class="pl-c">#</span> ...</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">The center point can be obtained with <code>center</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="x, y = center(HexagonAxial(2, 3))"><pre>x, y <span class="pl-k">=</span> <span class="pl-c1">center</span>(<span class="pl-c1">HexagonAxial</span>(<span class="pl-c1">2</span>, <span class="pl-c1">3</span>))</pre></div>
<p dir="auto">A point in cartesian space can be mapped to the index of the hexagon that
contains it with the <code>cube_round</code> function.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="h = cube_round(23.5, 4.67)"><pre>h <span class="pl-k">=</span> <span class="pl-c1">cube_round</span>(<span class="pl-c1">23.5</span>, <span class="pl-c1">4.67</span>)</pre></div>
<h2 dir="auto"><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Status</h2>
<p dir="auto">This library is not mature or complete, but provides just enough to implement
hexagonal bin visualizations. If your hexagon project requires something
that's not provided, file bug or pull request.</p>
</article></div>