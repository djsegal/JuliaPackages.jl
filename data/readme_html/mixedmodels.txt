<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mixed-effects-models-in-julia" class="anchor" aria-hidden="true" href="#mixed-effects-models-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Mixed-effects models in Julia</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Citation</strong></th>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Code Coverage</strong></th>
<th align="left"><strong>Style Guide</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://juliastats.github.io/MixedModels.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable Docs" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://juliastats.github.io/MixedModels.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev Docs" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://zenodo.org/badge/latestdoi/9106942" rel="nofollow"><img src="https://camo.githubusercontent.com/5d027c837f0b263c80fed238aef237c25ec6447057de85fb447750be3fc9d7d3/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f393130363934322e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/9106942.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/JuliaStats/MixedModels.jl/actions?workflow=current"><img src="https://github.com/JuliaStats/MixedModels.jl/actions/workflows/current.yml/badge.svg" alt="Julia Current" style="max-width: 100%;"></a> <a href="https://github.com/JuliaStats/MixedModels.jl/actions?workflow=minimum"><img src="https://github.com/JuliaStats/MixedModels.jl/actions/workflows/minimum.yml/badge.svg" alt="Julia Minimum Supported Version" style="max-width: 100%;"></a> <a href="https://github.com/JuliaStats/MixedModels.jl/actions?workflow=nightly"><img src="https://github.com/JuliaStats/MixedModels.jl/actions/workflows/nightly.yml/badge.svg" alt="Julia Nightly" style="max-width: 100%;"></a> <a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/f68c71f6737a4adef1ff0abb9a3034d4844b13c42f022230179bf7665ef365c3/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f4d2f4d697865644d6f64656c732e737667" alt="PkgEval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/M/MixedModels.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://codecov.io/github/JuliaStats/MixedModels.jl?branch=main" rel="nofollow"><img src="https://camo.githubusercontent.com/0bcd37d2df8ab2abda479b458b0032d4530e2074e7908ddfb6f260aa35c4517e/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c696153746174732f4d697865644d6f64656c732e6a6c2f62616467652e7376673f6272616e63683d6d61696e" alt="CodeCov" data-canonical-src="https://codecov.io/github/JuliaStats/MixedModels.jl/badge.svg?branch=main" style="max-width: 100%;"></a></td>
<td align="left"><a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/b0b2e9f623d06065dc44b3d71fb123e6909983e12ff3419619fc1f0f37aad6cf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d426c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-Blue-4495d1.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">This package defines linear mixed models (<code>LinearMixedModel</code>) and generalized linear mixed models (<code>GeneralizedLinearMixedModel</code>). Users can use the abstraction for statistical model API to build, fit (<code>fit</code>/<code>fit!</code>), and query the fitted models.</p>
<p dir="auto">A <em>mixed-effects model</em> is a statistical model for a <em>response</em> variable as a function of one or more <em>covariates</em>.
For a categorical covariate the coefficients associated with the levels of the covariate are sometimes called <em>effects</em>, as in "the effect of using Treatment 1 versus the placebo".
If the potential levels of the covariate are fixed and reproducible, e.g. the levels for <code>Sex</code> could be <code>"F"</code> and <code>"M"</code>, they are modeled with <em>fixed-effects</em> parameters.
If the levels constitute a sample from a population, e.g. the <code>Subject</code> or the <code>Item</code> at a particular observation, they are modeled as <em>random effects</em>.</p>
<p dir="auto">A <em>mixed-effects</em> model contains both fixed-effects and random-effects terms.</p>
<p dir="auto">With fixed-effects it is the coefficients themselves or combinations of coefficients that are of interest.
For random effects it is the variability of the effects over the population that is of interest.</p>
<p dir="auto">In this package random effects are modeled as independent samples from a multivariate Gaussian distribution of the form 𝓑 ~ 𝓝(0, 𝚺).
For the response vector, 𝐲, only the mean of conditional distribution, 𝓨|𝓑 = 𝐛 depends on 𝐛 and it does so through a <em>linear predictor expression</em>, 𝛈 = 𝐗𝛃 + 𝐙𝐛, where 𝛃 is the fixed-effects coefficient vector and 𝐗 and 𝐙 are model matrices of the appropriate sizes,</p>
<p dir="auto">In a <code>LinearMixedModel</code> the conditional mean, 𝛍 = 𝔼[𝓨|𝓑 = 𝐛], is the linear predictor, 𝛈, and the conditional distribution is multivariate Gaussian, (𝓨|𝓑 = 𝐛) ~ 𝓝(𝛍, σ²𝐈).</p>
<p dir="auto">In a <code>GeneralizedLinearMixedModel</code>, the conditional mean, 𝔼[𝓨|𝓑 = 𝐛], is related to the linear predictor via a <em>link function</em>.
Typical distribution forms are <em>Bernoulli</em> for binary data or <em>Poisson</em> for count data.</p>
<h2 dir="auto"><a id="user-content-currently-tested-platforms" class="anchor" aria-hidden="true" href="#currently-tested-platforms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Currently Tested Platforms</h2>
<table>
<thead>
<tr>
<th align="center">OS</th>
<th align="center">OS Version</th>
<th align="center">Arch</th>
<th align="center">Julia</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">Linux</td>
<td align="center">Ubuntu 20.04</td>
<td align="center">x64</td>
<td align="center">v1.8</td>
</tr>
<tr>
<td align="center">Linux</td>
<td align="center">Ubuntu 20.04</td>
<td align="center">x64</td>
<td align="center">current release</td>
</tr>
<tr>
<td align="center">Linux</td>
<td align="center">Ubuntu 20.04</td>
<td align="center">x64</td>
<td align="center">nightly</td>
</tr>
<tr>
<td align="center">macOS</td>
<td align="center">Catalina 10.15</td>
<td align="center">x64</td>
<td align="center">v1.8</td>
</tr>
<tr>
<td align="center">Windows</td>
<td align="center">Server 2019</td>
<td align="center">x64</td>
<td align="center">v1.8</td>
</tr>
</tbody>
</table>
<p dir="auto">Note that previous releases still support older Julia versions.</p>
<h2 dir="auto"><a id="user-content-version-400" class="anchor" aria-hidden="true" href="#version-400"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Version 4.0.0</h2>
<p dir="auto">Version 4.0.0 contains some user-visible changes and many changes in the underlying code.</p>
<p dir="auto">Please see <a href="NEWS.md">NEWS</a> for a complete overview, but a few key points are:</p>
<ul dir="auto">
<li>The internal storage of the model matrices in <code>LinearMixedModel</code> has changed and been optimized. This change should be transparent to users who are not manipulating the fields of the model <code>struct</code> directly.</li>
<li>The <a href="https://juliastats.org/MixedModels.jl/v4.0/rankdeficiency/" rel="nofollow">handling of rank deficiency</a> continues to evolve.</li>
<li>Additional <a href="https://juliastats.org/MixedModels.jl/v4.0/prediction/" rel="nofollow"><code>predict</code> and <code>simulate</code></a> methods have been added for generalizing to new data.</li>
<li><code>saveoptsum</code> and <code>restoreoptsum!</code> provide for saving and restoring the <code>optsum</code> and thus offer a way to serialize a model fit.</li>
<li>There is improved support for the runtime construction of model formula, especially <code>RandomEffectsTerm</code>s and nested terms (methods for <code>Base.|(::AbstractTerm, ::AbstractTerm)</code> and <code>Base./(::AbstractTerm, ::AbstractTerm)</code>).</li>
<li>A progress display is shown by default for models taking more than a few hundred milliseconds to fit. This can be disabled with the keyword argument <code>progress=false</code>.</li>
</ul>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick Start</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using MixedModels

julia&gt; m1 = fit(MixedModel, @formula(yield ~ 1 + (1|batch)), MixedModels.dataset(:dyestuff))
Linear mixed model fit by maximum likelihood
 yield ~ 1 + (1 | batch)
   logLik   -2 logLik     AIC       AICc        BIC
  -163.6635   327.3271   333.3271   334.2501   337.5307

Variance components:
            Column    Variance Std.Dev.
batch    (Intercept)  1388.3332 37.2603
Residual              2451.2501 49.5101
 Number of obs: 30; levels of grouping factors: 6

  Fixed-effects parameters:
────────────────────────────────────────────────
              Coef.  Std. Error      z  Pr(&gt;|z|)
────────────────────────────────────────────────
(Intercept)  1527.5     17.6946  86.33    &lt;1e-99
────────────────────────────────────────────────

julia&gt; using Random

julia&gt; bs = parametricbootstrap(MersenneTwister(42), 1000, m1);
Progress: 100%%|████████████████████████████████████████████████| Time: 0:00:00

julia&gt; propertynames(bs)
13-element Vector{Symbol}:
 :allpars
 :objective
 :σ
 :β
 :se
 :coefpvalues
 :θ
 :σs
 :λ
 :inds
 :lowerbd
 :fits
 :fcnames

julia&gt; bs.coefpvalues # returns a row table
1000-element Vector{NamedTuple{(:iter, :coefname, :β, :se, :z, :p), Tuple{Int64, Symbol, Float64, Float64, Float64, Float64}}}:
 (iter = 1, coefname = Symbol(&quot;(Intercept)&quot;), β = 1517.0670832927115, se = 20.76271142094811, z = 73.0669059804057, p = 0.0)
 (iter = 2, coefname = Symbol(&quot;(Intercept)&quot;), β = 1503.5781855888436, se = 8.1387737362628, z = 184.7425956676446, p = 0.0)
 (iter = 3, coefname = Symbol(&quot;(Intercept)&quot;), β = 1529.2236379016574, se = 16.523824785737837, z = 92.54659001356465, p = 0.0)
 ⋮
 (iter = 998, coefname = Symbol(&quot;(Intercept)&quot;), β = 1498.3795009457242, se = 25.649682012258104, z = 58.417079019913054, p = 0.0)
 (iter = 999, coefname = Symbol(&quot;(Intercept)&quot;), β = 1526.1076747922416, se = 16.22412120273579, z = 94.06411945042063, p = 0.0)
 (iter = 1000, coefname = Symbol(&quot;(Intercept)&quot;), β = 1557.7546433870125, se = 12.557577103806015, z = 124.04898098653763, p = 0.0)

julia&gt; using DataFrames

julia&gt; DataFrame(bs.coefpvalues) # puts it into a DataFrame
1000×6 DataFrame
│ Row  │ iter  │ coefname    │ β       │ se      │ z       │ p       │
│      │ Int64 │ Symbol      │ Float64 │ Float64 │ Float64 │ Float64 │
├──────┼───────┼─────────────┼─────────┼─────────┼─────────┼─────────┤
│ 1    │ 1     │ (Intercept) │ 1517.07 │ 20.7627 │ 73.0669 │ 0.0     │
│ 2    │ 2     │ (Intercept) │ 1503.58 │ 8.13877 │ 184.743 │ 0.0     │
│ 3    │ 3     │ (Intercept) │ 1529.22 │ 16.5238 │ 92.5466 │ 0.0     │
⋮
│ 998  │ 998   │ (Intercept) │ 1498.38 │ 25.6497 │ 58.4171 │ 0.0     │
│ 999  │ 999   │ (Intercept) │ 1526.11 │ 16.2241 │ 94.0641 │ 0.0     │
│ 1000 │ 1000  │ (Intercept) │ 1557.75 │ 12.5576 │ 124.049 │ 0.0     │

julia&gt; DataFrame(bs.β)
1000×3 DataFrame
│ Row  │ iter  │ coefname    │ β       │
│      │ Int64 │ Symbol      │ Float64 │
├──────┼───────┼─────────────┼─────────┤
│ 1    │ 1     │ (Intercept) │ 1517.07 │
│ 2    │ 2     │ (Intercept) │ 1503.58 │
│ 3    │ 3     │ (Intercept) │ 1529.22 │
⋮
│ 998  │ 998   │ (Intercept) │ 1498.38 │
│ 999  │ 999   │ (Intercept) │ 1526.11 │
│ 1000 │ 1000  │ (Intercept) │ 1557.75 │"><pre lang="julia-repl" class="notranslate"><code>julia&gt; using MixedModels

julia&gt; m1 = fit(MixedModel, @formula(yield ~ 1 + (1|batch)), MixedModels.dataset(:dyestuff))
Linear mixed model fit by maximum likelihood
 yield ~ 1 + (1 | batch)
   logLik   -2 logLik     AIC       AICc        BIC
  -163.6635   327.3271   333.3271   334.2501   337.5307

Variance components:
            Column    Variance Std.Dev.
batch    (Intercept)  1388.3332 37.2603
Residual              2451.2501 49.5101
 Number of obs: 30; levels of grouping factors: 6

  Fixed-effects parameters:
────────────────────────────────────────────────
              Coef.  Std. Error      z  Pr(&gt;|z|)
────────────────────────────────────────────────
(Intercept)  1527.5     17.6946  86.33    &lt;1e-99
────────────────────────────────────────────────

julia&gt; using Random

julia&gt; bs = parametricbootstrap(MersenneTwister(42), 1000, m1);
Progress: 100%%|████████████████████████████████████████████████| Time: 0:00:00

julia&gt; propertynames(bs)
13-element Vector{Symbol}:
 :allpars
 :objective
 :σ
 :β
 :se
 :coefpvalues
 :θ
 :σs
 :λ
 :inds
 :lowerbd
 :fits
 :fcnames

julia&gt; bs.coefpvalues # returns a row table
1000-element Vector{NamedTuple{(:iter, :coefname, :β, :se, :z, :p), Tuple{Int64, Symbol, Float64, Float64, Float64, Float64}}}:
 (iter = 1, coefname = Symbol("(Intercept)"), β = 1517.0670832927115, se = 20.76271142094811, z = 73.0669059804057, p = 0.0)
 (iter = 2, coefname = Symbol("(Intercept)"), β = 1503.5781855888436, se = 8.1387737362628, z = 184.7425956676446, p = 0.0)
 (iter = 3, coefname = Symbol("(Intercept)"), β = 1529.2236379016574, se = 16.523824785737837, z = 92.54659001356465, p = 0.0)
 ⋮
 (iter = 998, coefname = Symbol("(Intercept)"), β = 1498.3795009457242, se = 25.649682012258104, z = 58.417079019913054, p = 0.0)
 (iter = 999, coefname = Symbol("(Intercept)"), β = 1526.1076747922416, se = 16.22412120273579, z = 94.06411945042063, p = 0.0)
 (iter = 1000, coefname = Symbol("(Intercept)"), β = 1557.7546433870125, se = 12.557577103806015, z = 124.04898098653763, p = 0.0)

julia&gt; using DataFrames

julia&gt; DataFrame(bs.coefpvalues) # puts it into a DataFrame
1000×6 DataFrame
│ Row  │ iter  │ coefname    │ β       │ se      │ z       │ p       │
│      │ Int64 │ Symbol      │ Float64 │ Float64 │ Float64 │ Float64 │
├──────┼───────┼─────────────┼─────────┼─────────┼─────────┼─────────┤
│ 1    │ 1     │ (Intercept) │ 1517.07 │ 20.7627 │ 73.0669 │ 0.0     │
│ 2    │ 2     │ (Intercept) │ 1503.58 │ 8.13877 │ 184.743 │ 0.0     │
│ 3    │ 3     │ (Intercept) │ 1529.22 │ 16.5238 │ 92.5466 │ 0.0     │
⋮
│ 998  │ 998   │ (Intercept) │ 1498.38 │ 25.6497 │ 58.4171 │ 0.0     │
│ 999  │ 999   │ (Intercept) │ 1526.11 │ 16.2241 │ 94.0641 │ 0.0     │
│ 1000 │ 1000  │ (Intercept) │ 1557.75 │ 12.5576 │ 124.049 │ 0.0     │

julia&gt; DataFrame(bs.β)
1000×3 DataFrame
│ Row  │ iter  │ coefname    │ β       │
│      │ Int64 │ Symbol      │ Float64 │
├──────┼───────┼─────────────┼─────────┤
│ 1    │ 1     │ (Intercept) │ 1517.07 │
│ 2    │ 2     │ (Intercept) │ 1503.58 │
│ 3    │ 3     │ (Intercept) │ 1529.22 │
⋮
│ 998  │ 998   │ (Intercept) │ 1498.38 │
│ 999  │ 999   │ (Intercept) │ 1526.11 │
│ 1000 │ 1000  │ (Intercept) │ 1557.75 │
</code></pre></div>
<h2 dir="auto"><a id="user-content-funding-acknowledgement" class="anchor" aria-hidden="true" href="#funding-acknowledgement"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Funding Acknowledgement</h2>
<p dir="auto">The development of this package was supported by the Center for Interdisciplinary Research, Bielefeld (ZiF)/Cooperation Group "Statistical models for psychological and linguistic data".</p>
</article></div>