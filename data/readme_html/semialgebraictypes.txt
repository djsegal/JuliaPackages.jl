<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto">The package <code>SemiAlgebraicTypes.jl</code> provides implementation of semialgebraic sets such as points, spheres, lines, cylinders, cones, ellipsoids, meshes, bspline functions, ...</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">To install the package within julia:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add https://github.com/AlgebraicGeometricModeling/SemiAlgebraicTypes.jl"><pre>] add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>AlgebraicGeometricModeling<span class="pl-k">/</span>SemiAlgebraicTypes<span class="pl-k">.</span>jl</pre></div>
<p dir="auto">(<code>]</code> key switches to the pkg mode)</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">To use it within julia:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SemiAlgebraicTypes

A = point(0.,0.,0.)
B = point(0.,0.,1.)
C = point(0.,0.,3.)

l0 = line(A,B)
c0 = cylinder(A,B,0.2)
c1 = cone(C,B,0.7)
s0 = sphere(c0.pt1,c1.radius)

m = mesh([[cos(i*pi/5), sin(i*pi/5), 0.0] for i in 1:10], Edge[], [[1,i,i+1] for i in 1:9])

B1 = BSplineBasis(LinRange(0., 2., 4), 3)
B2 = BSplineBasis(LinRange(0., 1., 3), 3)

f1 = BSplineCurve(rand(3,5), B1); f1(0.)
f2 = BSplineSurface(rand(3,5,4), B1,B2); f2(0.,0.)
f3 = BSplineVolume(rand(3,5,4, 4), B1,B2, B2); f3(0.,0.,0.)"><pre><span class="pl-k">using</span> SemiAlgebraicTypes

A <span class="pl-k">=</span> <span class="pl-c1">point</span>(<span class="pl-c1">0.</span>,<span class="pl-c1">0.</span>,<span class="pl-c1">0.</span>)
B <span class="pl-k">=</span> <span class="pl-c1">point</span>(<span class="pl-c1">0.</span>,<span class="pl-c1">0.</span>,<span class="pl-c1">1.</span>)
C <span class="pl-k">=</span> <span class="pl-c1">point</span>(<span class="pl-c1">0.</span>,<span class="pl-c1">0.</span>,<span class="pl-c1">3.</span>)

l0 <span class="pl-k">=</span> <span class="pl-c1">line</span>(A,B)
c0 <span class="pl-k">=</span> <span class="pl-c1">cylinder</span>(A,B,<span class="pl-c1">0.2</span>)
c1 <span class="pl-k">=</span> <span class="pl-c1">cone</span>(C,B,<span class="pl-c1">0.7</span>)
s0 <span class="pl-k">=</span> <span class="pl-c1">sphere</span>(c0<span class="pl-k">.</span>pt1,c1<span class="pl-k">.</span>radius)

m <span class="pl-k">=</span> <span class="pl-c1">mesh</span>([[<span class="pl-c1">cos</span>(i<span class="pl-k">*</span><span class="pl-c1">pi</span><span class="pl-k">/</span><span class="pl-c1">5</span>), <span class="pl-c1">sin</span>(i<span class="pl-k">*</span><span class="pl-c1">pi</span><span class="pl-k">/</span><span class="pl-c1">5</span>), <span class="pl-c1">0.0</span>] <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>], Edge[], [[<span class="pl-c1">1</span>,i,i<span class="pl-k">+</span><span class="pl-c1">1</span>] <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">9</span>])

B1 <span class="pl-k">=</span> <span class="pl-c1">BSplineBasis</span>(<span class="pl-c1">LinRange</span>(<span class="pl-c1">0.</span>, <span class="pl-c1">2.</span>, <span class="pl-c1">4</span>), <span class="pl-c1">3</span>)
B2 <span class="pl-k">=</span> <span class="pl-c1">BSplineBasis</span>(<span class="pl-c1">LinRange</span>(<span class="pl-c1">0.</span>, <span class="pl-c1">1.</span>, <span class="pl-c1">3</span>), <span class="pl-c1">3</span>)

f1 <span class="pl-k">=</span> <span class="pl-c1">BSplineCurve</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">3</span>,<span class="pl-c1">5</span>), B1); <span class="pl-c1">f1</span>(<span class="pl-c1">0.</span>)
f2 <span class="pl-k">=</span> <span class="pl-c1">BSplineSurface</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">3</span>,<span class="pl-c1">5</span>,<span class="pl-c1">4</span>), B1,B2); <span class="pl-c1">f2</span>(<span class="pl-c1">0.</span>,<span class="pl-c1">0.</span>)
f3 <span class="pl-k">=</span> <span class="pl-c1">BSplineVolume</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">3</span>,<span class="pl-c1">5</span>,<span class="pl-c1">4</span>, <span class="pl-c1">4</span>), B1,B2, B2); <span class="pl-c1">f3</span>(<span class="pl-c1">0.</span>,<span class="pl-c1">0.</span>,<span class="pl-c1">0.</span>)</pre></div>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<p dir="auto"><a href="https://AlgebraicGeometricModeling.github.io/SemiAlgebraicTypes.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></p>
</article></div>