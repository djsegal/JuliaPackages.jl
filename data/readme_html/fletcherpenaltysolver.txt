<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-fletcherpenaltysolverjl---fletchers-penalty-method" class="anchor" aria-hidden="true" href="#fletcherpenaltysolverjl---fletchers-penalty-method"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FletcherPenaltySolver.jl - Fletcher's Penalty Method</h1>
<p dir="auto"><a href="https://JuliaSmoothOptimizers.github.io/FletcherPenaltySolver.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="docs-stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://JuliaSmoothOptimizers.github.io/FletcherPenaltySolver.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/ef2963f072da1a61a3df68686ccef86709fad9d7007c9ae6d734e85ef0a6ba7c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d707572706c652e737667" alt="docs-dev" data-canonical-src="https://img.shields.io/badge/docs-dev-purple.svg" style="max-width: 100%;"></a> <a href="https://github.com/JuliaSmoothOptimizers/FletcherPenaltySolver.jl/actions"><img src="https://github.com/JuliaSmoothOptimizers/FletcherPenaltySolver.jl/workflows/CI/badge.svg?branch=main" alt="build-ci" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/JuliaSmoothOptimizers/FletcherPenaltySolver.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/86c7b3c26aa11539f67e376fd748f25bd9d28c5d7c444c6a1293c6fd175c99c4/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961536d6f6f74684f7074696d697a6572732f466c65746368657250656e616c7479536f6c7665722e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaSmoothOptimizers/FletcherPenaltySolver.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a> <a href="https://github.com/JuliaSmoothOptimizers/FletcherPenaltySolver.jl/releases"><img src="https://camo.githubusercontent.com/cdf62ae485f02196ab774e9eb79acb2d20a82fe9679a562748b8c363241f4915/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f4a756c6961536d6f6f74684f7074696d697a6572732f466c65746368657250656e616c7479536f6c7665722e6a6c2e7376673f7374796c653d666c61742d737175617265" alt="release" data-canonical-src="https://img.shields.io/github/v/release/JuliaSmoothOptimizers/FletcherPenaltySolver.jl.svg?style=flat-square" style="max-width: 100%;"></a> <a href="https://doi.org/10.5281/zenodo.7153564" rel="nofollow"><img src="https://camo.githubusercontent.com/d8535ff794217a36df36b39da875f0c2341f238af723eb5a6d68042ca87880b5/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e373135333536342e737667" alt="doi" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.7153564.svg" style="max-width: 100%;"></a></p>
<p dir="auto">FPS is a solver for equality-constrained nonlinear problems, i.e.,
optimization problems of the form</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="min f(x)     s.t.     c(x) = 0."><pre class="notranslate"><code>min f(x)     s.t.     c(x) = 0.
</code></pre></div>
<p dir="auto">It uses other <a href="https://juliasmoothoptimizers.github.io/" rel="nofollow">JuliaSmoothOptimizers</a> packages for development.
In particular, <a href="https://github.com/JuliaSmoothOptimizers/NLPModels.jl">NLPModels.jl</a> is used for defining the problem, and <a href="https://github.com/JuliaSmoothOptimizers/SolverCore.jl">SolverCore.jl</a> for the output.
If a general inequality-constrained problem is given to the solver, it solves the problem reformulated as a <code>SlackModel</code> from <a href="https://github.com/JuliaSmoothOptimizers/NLPModelsModifiers.jl">NLPModelsModifiers.jl</a>.</p>
<h2 dir="auto"><a id="user-content-algorithm" class="anchor" aria-hidden="true" href="#algorithm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Algorithm</h2>
<p dir="auto">For equality-constrained problems, the method iteratively solves an unconstrained problem. For bound and equality-constrained problems, the subproblems are bound-constrained problems. Any solver compatible with <a href="https://github.com/SolverStoppingJulia/Stopping.jl">Stopping.jl</a> can be used.
By default, we use <code>ipopt</code> from <a href="https://github.com/JuliaSmoothOptimizers/NLPModelsIpopt.jl">NLPModelsIpopt.jl</a> to solve the subproblem, but other solvers can be used such as <code>knitro</code> from <a href="https://github.com/JuliaSmoothOptimizers/NLPModelsKnitro.jl">NLPModelsKnitro.jl</a> or any solvers from <a href="https://github.com/JuliaSmoothOptimizers/JSOSolvers.jl">JSOSolvers.jl</a>. The Stopping version of these solvers is available in <a href="https://github.com/SolverStoppingJulia/StoppingInterface.jl">StoppingInterface.jl</a>.</p>
<p dir="auto">It uses <a href="https://github.com/JuliaSmoothOptimizers/LDLFactorizations.jl">LDLFactorizations.jl</a> by default to evaluate the derivatives of the penalized subproblem, but one can also use a matrix-free version with <a href="https://github.com/JuliaSmoothOptimizers/Krylov.jl">Krylov.jl</a>.</p>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<blockquote>
<p dir="auto">Estrin, R., Friedlander, M. P., Orban, D., &amp; Saunders, M. A. (2020).
Implementing a smooth exact penalty function for equality-constrained nonlinear optimization.
SIAM Journal on Scientific Computing, 42(3), A1809-A1835.
<a href="https://doi.org/10.1137/19M1238265" rel="nofollow">10.1137/19M1238265</a></p>
</blockquote>
<h2 dir="auto"><a id="user-content-how-to-cite" class="anchor" aria-hidden="true" href="#how-to-cite"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to Cite</h2>
<p dir="auto">If you use FletcherPenaltySolver.jl in your work, please cite using the format given in <a href="https://github.com/JuliaSmoothOptimizers/FletcherPenaltySolver.jl/blob/main/CITATION.cff">CITATION.cff</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto"><code>pkg&gt; add FletcherPenaltySolver</code></p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using FletcherPenaltySolver, ADNLPModels

# Rosenbrock
nlp = ADNLPModel(x -&gt; 100 * (x[2] - x[1]^2)^2 + (x[1] - 1)^2, [-1.2; 1.0])
stats = fps_solve(nlp)

# Constrained
nlp = ADNLPModel(
  x -&gt; 100 * (x[2] - x[1]^2)^2 + (x[1] - 1)^2,
  [-1.2; 1.0],
  x-&gt;[x[1] * x[2] - 1],
  [0.0],[1.0],
)
stats = fps_solve(nlp)"><pre><span class="pl-k">using</span> FletcherPenaltySolver, ADNLPModels

<span class="pl-c"><span class="pl-c">#</span> Rosenbrock</span>
nlp <span class="pl-k">=</span> <span class="pl-c1">ADNLPModel</span>(x <span class="pl-k">-&gt;</span> <span class="pl-c1">100</span> <span class="pl-k">*</span> (x[<span class="pl-c1">2</span>] <span class="pl-k">-</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> (x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">1</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>, [<span class="pl-k">-</span><span class="pl-c1">1.2</span>; <span class="pl-c1">1.0</span>])
stats <span class="pl-k">=</span> <span class="pl-c1">fps_solve</span>(nlp)

<span class="pl-c"><span class="pl-c">#</span> Constrained</span>
nlp <span class="pl-k">=</span> <span class="pl-c1">ADNLPModel</span>(
  x <span class="pl-k">-&gt;</span> <span class="pl-c1">100</span> <span class="pl-k">*</span> (x[<span class="pl-c1">2</span>] <span class="pl-k">-</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> (x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">1</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>,
  [<span class="pl-k">-</span><span class="pl-c1">1.2</span>; <span class="pl-c1">1.0</span>],
  x<span class="pl-k">-&gt;</span>[x[<span class="pl-c1">1</span>] <span class="pl-k">*</span> x[<span class="pl-c1">2</span>] <span class="pl-k">-</span> <span class="pl-c1">1</span>],
  [<span class="pl-c1">0.0</span>],[<span class="pl-c1">1.0</span>],
)
stats <span class="pl-k">=</span> <span class="pl-c1">fps_solve</span>(nlp)</pre></div>
<h1 dir="auto"><a id="user-content-bug-reports-and-discussions" class="anchor" aria-hidden="true" href="#bug-reports-and-discussions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bug reports and discussions</h1>
<p dir="auto">If you think you found a bug, feel free to open an <a href="https://github.com/JuliaSmoothOptimizers/FletcherPenaltySolver.jl/issues">issue</a>.
Focused suggestions and requests can also be opened as issues. Before opening a pull request, start an issue or a discussion on the topic, please.</p>
<p dir="auto">If you want to ask a question not suited for a bug report, feel free to start a discussion <a href="https://github.com/JuliaSmoothOptimizers/Organization/discussions">here</a>. This forum is for general discussion about this repository and the <a href="https://github.com/JuliaSmoothOptimizers">JuliaSmoothOptimizers</a>, so questions about any of our packages are welcome.</p>
</article></div>