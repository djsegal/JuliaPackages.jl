<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-symbolicregressionjl" class="anchor" aria-hidden="true" href="#symbolicregressionjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SymbolicRegression.jl</h1>
<table>
<thead>
<tr>
<th>Latest release</th>
<th>Documentation</th>
<th>Build status</th>
<th>Coverage</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://juliahub.com/ui/Packages/SymbolicRegression/X2eIS" rel="nofollow"><img src="https://camo.githubusercontent.com/a0a5dc19a63da9881743ea36c0f7208f361c9d6e5408680826898d37fb53c672/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f53796d626f6c696352656772657373696f6e2f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/SymbolicRegression/version.svg" style="max-width:100%;"></a></td>
<td><a href="https://astroautomata.com/SymbolicRegression.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a> <a href="https://astroautomata.com/SymbolicRegression.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a></td>
<td><a href=".github/workflows/CI.yml"><img src="https://github.com/MilesCranmer/SymbolicRegression.jl/workflows/CI/badge.svg" alt="CI" style="max-width:100%;"></a></td>
<td><a href="https://coveralls.io/github/MilesCranmer/SymbolicRegression.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/6cb0b09749d1bca5145911a027ad57db3e7f3e994eb6cd58e8a2f6e1fafe6382/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4d696c65734372616e6d65722f53796d626f6c696352656772657373696f6e2e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/MilesCranmer/SymbolicRegression.jl/badge.svg?branch=master" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>Distributed High-Performance symbolic regression in Julia.</p>
<p>Check out <a href="https://github.com/MilesCranmer/PySR">PySR</a> for
a Python frontend.</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1147a346e52a581554d6115ccdbc695c1921a6abd7454592b47f797f51dc29d0/68747470733a2f2f617374726f6175746f6d6174612e636f6d2f646174612f73725f64656d6f5f696d616765312e706e67"><img src="https://camo.githubusercontent.com/1147a346e52a581554d6115ccdbc695c1921a6abd7454592b47f797f51dc29d0/68747470733a2f2f617374726f6175746f6d6174612e636f6d2f646174612f73725f64656d6f5f696d616765312e706e67" alt="demo1" width="700" data-canonical-src="https://astroautomata.com/data/sr_demo_image1.png" style="max-width:100%;"></a> <a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0aa11e0205da06bb2425b277664a39033390e068baec90f206fd7c752f6d5a01/68747470733a2f2f617374726f6175746f6d6174612e636f6d2f646174612f73725f64656d6f5f696d616765322e706e67"><img src="https://camo.githubusercontent.com/0aa11e0205da06bb2425b277664a39033390e068baec90f206fd7c752f6d5a01/68747470733a2f2f617374726f6175746f6d6174612e636f6d2f646174612f73725f64656d6f5f696d616765322e706e67" alt="demo2" width="700" data-canonical-src="https://astroautomata.com/data/sr_demo_image2.png" style="max-width:100%;"></a></p>
<p><a href="https://github.com/MilesCranmer/PySR/blob/master/CITATION.md">Cite this software</a></p>
<h1><a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quickstart</h1>
<p>Install in Julia with:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;SymbolicRegression&quot;)
"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>SymbolicRegression<span class="pl-pds">"</span></span>)</pre></div>
<p>The heart of this package is the
<code>EquationSearch</code> function, which takes
a 2D array (shape [features, rows]) and attempts
to model a 1D array (shape [rows])
using analytic functional forms.</p>
<p>Run distributed on four processes with:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using SymbolicRegression

X = randn(Float32, 5, 100)
y = 2 * cos.(X[4, :]) + X[1, :] .^ 2 .- 2

options = SymbolicRegression.Options(
    binary_operators=(+, *, /, -),
    unary_operators=(cos, exp),
    npopulations=20
)

hallOfFame = EquationSearch(X, y, niterations=5, options=options, numprocs=4)
"><pre><span class="pl-k">using</span> SymbolicRegression

X <span class="pl-k">=</span> <span class="pl-c1">randn</span>(Float32, <span class="pl-c1">5</span>, <span class="pl-c1">100</span>)
y <span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">cos</span>.(X[<span class="pl-c1">4</span>, :]) <span class="pl-k">+</span> X[<span class="pl-c1">1</span>, :] <span class="pl-k">.^</span> <span class="pl-c1">2</span> <span class="pl-k">.-</span> <span class="pl-c1">2</span>

options <span class="pl-k">=</span> SymbolicRegression<span class="pl-k">.</span><span class="pl-c1">Options</span>(
    binary_operators<span class="pl-k">=</span>(<span class="pl-k">+</span>, <span class="pl-k">*</span>, <span class="pl-k">/</span>, <span class="pl-k">-</span>),
    unary_operators<span class="pl-k">=</span>(cos, exp),
    npopulations<span class="pl-k">=</span><span class="pl-c1">20</span>
)

hallOfFame <span class="pl-k">=</span> <span class="pl-c1">EquationSearch</span>(X, y, niterations<span class="pl-k">=</span><span class="pl-c1">5</span>, options<span class="pl-k">=</span>options, numprocs<span class="pl-k">=</span><span class="pl-c1">4</span>)</pre></div>
<p>We can view the equations in the dominating
Pareto frontier with:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="dominating = calculateParetoFrontier(X, y, hallOfFame, options)
"><pre>dominating <span class="pl-k">=</span> <span class="pl-c1">calculateParetoFrontier</span>(X, y, hallOfFame, options)</pre></div>
<p>We can convert the best equation
to <a href="https://github.com/JuliaSymbolics/SymbolicUtils.jl">SymbolicUtils.jl</a>
with the following function:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="eqn = node_to_symbolic(dominating[end].tree, options)
println(simplify(eqn*5 + 3))
"><pre>eqn <span class="pl-k">=</span> <span class="pl-c1">node_to_symbolic</span>(dominating[<span class="pl-c1">end</span>]<span class="pl-k">.</span>tree, options)
<span class="pl-c1">println</span>(<span class="pl-c1">simplify</span>(eqn<span class="pl-k">*</span><span class="pl-c1">5</span> <span class="pl-k">+</span> <span class="pl-c1">3</span>))</pre></div>
<p>We can also print out the full pareto frontier like so:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="println(&quot;Complexity\tMSE\tEquation&quot;)

for member in dominating
    size = countNodes(member.tree)
    score = member.score
    string = stringTree(member.tree, options)

    println(&quot;$(size)\t$(score)\t$(string)&quot;)
end
"><pre><span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Complexity<span class="pl-cce">\t</span>MSE<span class="pl-cce">\t</span>Equation<span class="pl-pds">"</span></span>)

<span class="pl-k">for</span> member <span class="pl-k">in</span> dominating
    size <span class="pl-k">=</span> <span class="pl-c1">countNodes</span>(member<span class="pl-k">.</span>tree)
    score <span class="pl-k">=</span> member<span class="pl-k">.</span>score
    string <span class="pl-k">=</span> <span class="pl-c1">stringTree</span>(member<span class="pl-k">.</span>tree, options)

    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(size)</span><span class="pl-cce">\t</span><span class="pl-v">$(score)</span><span class="pl-cce">\t</span><span class="pl-v">$(string)</span><span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
<h2><a id="user-content-search-options" class="anchor" aria-hidden="true" href="#search-options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Search options</h2>
<p>See <a href="https://astroautomata.com/SymbolicRegression.jl/stable/api/#Options" rel="nofollow">https://astroautomata.com/SymbolicRegression.jl/stable/api/#Options</a></p>
</article></div>