<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-i-have-decided-not-to-maintain-this-package-any-further-please-do-not-use-it" class="anchor" aria-hidden="true" href="#i-have-decided-not-to-maintain-this-package-any-further-please-do-not-use-it"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>I have decided NOT to maintain this package any further. Please do NOT use it.</h1>
<h1><a id="user-content-jlboostmljjl" class="anchor" aria-hidden="true" href="#jlboostmljjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>JLBoostMLJ.jl</h1>
<p>The <a href="https://github.com/alan-turing-institute/MLJ.jl">MLJ.jl</a> interface to <a href="https://github.com/xiaodaigh/JLBoost.jl">JLBoost.jl</a>, a hackable implementation of Gradient Boosting Regression Trees.</p>
<h2><a id="user-content-usage-example" class="anchor" aria-hidden="true" href="#usage-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage Example</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
using RDatasets;
iris = dataset(&quot;datasets&quot;, &quot;iris&quot;);
iris[!, :is_setosa] = iris.Species .== &quot;setosa&quot;;

using MLJ, JLBoostMLJ;
X, y = unpack(iris, x-&gt;!(x in [:is_setosa, :Species]), ==(:is_setosa));

using JLBoostMLJ:JLBoostClassifier;
model = JLBoostClassifier()
"><pre><span class="pl-k">using</span> RDatasets;
iris <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>datasets<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>iris<span class="pl-pds">"</span></span>);
iris[<span class="pl-k">!</span>, <span class="pl-c1">:is_setosa</span>] <span class="pl-k">=</span> iris<span class="pl-k">.</span>Species <span class="pl-k">.==</span> <span class="pl-s"><span class="pl-pds">"</span>setosa<span class="pl-pds">"</span></span>;

<span class="pl-k">using</span> MLJ, JLBoostMLJ;
X, y <span class="pl-k">=</span> <span class="pl-c1">unpack</span>(iris, x<span class="pl-k">-&gt;</span><span class="pl-k">!</span>(x <span class="pl-k">in</span> [<span class="pl-c1">:is_setosa</span>, <span class="pl-c1">:Species</span>]), <span class="pl-k">==</span>(<span class="pl-c1">:is_setosa</span>));

<span class="pl-k">using</span> JLBoostMLJ<span class="pl-k">:</span>JLBoostClassifier;
model <span class="pl-k">=</span> <span class="pl-c1">JLBoostClassifier</span>()</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="JLBoostClassifier(
    loss = JLBoost.LogitLogLoss(),
    nrounds = 1,
    subsample = 1.0,
    eta = 1.0,
    max_depth = 6,
    min_child_weight = 1.0,
    lambda = 0.0,
    gamma = 0.0,
    colsample_bytree = 1) @087
"><pre><code>JLBoostClassifier(
    loss = JLBoost.LogitLogLoss(),
    nrounds = 1,
    subsample = 1.0,
    eta = 1.0,
    max_depth = 6,
    min_child_weight = 1.0,
    lambda = 0.0,
    gamma = 0.0,
    colsample_bytree = 1) @087
</code></pre></div>
<h3><a id="user-content-using-mlj-machines" class="anchor" aria-hidden="true" href="#using-mlj-machines"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Using MLJ machines</h3>
<p>Put the model and data in a machine</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
mljmachine  = machine(model, X, y)
"><pre>mljmachine  <span class="pl-k">=</span> <span class="pl-c1">machine</span>(model, X, y)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="Machine{JLBoostClassifier} @730 trained 0 times.
  args: 
    1:	Source @910 ⏎ `ScientificTypes.Table{AbstractArray{ScientificTypes.C
ontinuous,1}}`
    2:	Source @954 ⏎ `AbstractArray{ScientificTypes.Count,1}`
"><pre><code>Machine{JLBoostClassifier} @730 trained 0 times.
  args: 
    1:	Source @910 ⏎ `ScientificTypes.Table{AbstractArray{ScientificTypes.C
ontinuous,1}}`
    2:	Source @954 ⏎ `AbstractArray{ScientificTypes.Count,1}`
</code></pre></div>
<p>Fit model using machine</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
fit!(mljmachine)
"><pre><span class="pl-c1">fit!</span>(mljmachine)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="Choosing a split on SepalLength
Choosing a split on SepalWidth
Choosing a split on PetalLength
Choosing a split on PetalWidth
(feature = :PetalLength, split_at = 1.9, cutpt = 50, gain = 133.33333333333
334, lweight = 2.0, rweight = -2.0)
Choosing a split on SepalLength
Choosing a split on SepalWidth
Choosing a split on PetalLength
Choosing a split on PetalWidth
Choosing a split on SepalLength
Choosing a split on SepalWidth
Choosing a split on PetalLength
Choosing a split on PetalWidth
Machine{JLBoostClassifier} @730 trained 1 time.
  args: 
    1:	Source @910 ⏎ `ScientificTypes.Table{AbstractArray{ScientificTypes.C
ontinuous,1}}`
    2:	Source @954 ⏎ `AbstractArray{ScientificTypes.Count,1}`
"><pre><code>Choosing a split on SepalLength
Choosing a split on SepalWidth
Choosing a split on PetalLength
Choosing a split on PetalWidth
(feature = :PetalLength, split_at = 1.9, cutpt = 50, gain = 133.33333333333
334, lweight = 2.0, rweight = -2.0)
Choosing a split on SepalLength
Choosing a split on SepalWidth
Choosing a split on PetalLength
Choosing a split on PetalWidth
Choosing a split on SepalLength
Choosing a split on SepalWidth
Choosing a split on PetalLength
Choosing a split on PetalWidth
Machine{JLBoostClassifier} @730 trained 1 time.
  args: 
    1:	Source @910 ⏎ `ScientificTypes.Table{AbstractArray{ScientificTypes.C
ontinuous,1}}`
    2:	Source @954 ⏎ `AbstractArray{ScientificTypes.Count,1}`
</code></pre></div>
<p>Predict using machine</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
predict(mljmachine, X)
"><pre><span class="pl-c1">predict</span>(mljmachine, X)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="150-element Array{MLJBase.UnivariateFinite{ScientificTypes.Multiclass{2},Bo
ol,UInt32,Float64},1}:
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 ⋮
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
"><pre><code>150-element Array{MLJBase.UnivariateFinite{ScientificTypes.Multiclass{2},Bo
ol,UInt32,Float64},1}:
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 ⋮
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
</code></pre></div>
<p>Feature importance using machine</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
feature_importance(fitted_params(mljmachine).fitresult, X, y)
"><pre><span class="pl-c1">feature_importance</span>(<span class="pl-c1">fitted_params</span>(mljmachine)<span class="pl-k">.</span>fitresult, X, y)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="1×4 DataFrame
│ Row │ feature     │ Quality_Gain │ Coverage │ Frequency │
│     │ Symbol      │ Float64      │ Float64  │ Float64   │
├─────┼─────────────┼──────────────┼──────────┼───────────┤
│ 1   │ PetalLength │ 1.0          │ 1.0      │ 1.0       │
"><pre><code>1×4 DataFrame
│ Row │ feature     │ Quality_Gain │ Coverage │ Frequency │
│     │ Symbol      │ Float64      │ Float64  │ Float64   │
├─────┼─────────────┼──────────────┼──────────┼───────────┤
│ 1   │ PetalLength │ 1.0          │ 1.0      │ 1.0       │
</code></pre></div>
<h4><a id="user-content-hyperparameter-tuning" class="anchor" aria-hidden="true" href="#hyperparameter-tuning"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Hyperparameter tuning</h4>
<p>Data preparation: need to convert <code>y</code> to categorical</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
y_cate = categorical(y)
"><pre>y_cate <span class="pl-k">=</span> <span class="pl-c1">categorical</span>(y)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="150-element CategoricalArrays.CategoricalArray{Bool,1,UInt32}:
 true
 true
 true
 true
 true
 true
 true
 true
 true
 true
 ⋮
 false
 false
 false
 false
 false
 false
 false
 false
 false
"><pre><code>150-element CategoricalArrays.CategoricalArray{Bool,1,UInt32}:
 true
 true
 true
 true
 true
 true
 true
 true
 true
 true
 ⋮
 false
 false
 false
 false
 false
 false
 false
 false
 false
</code></pre></div>
<p>Set up some hyperparameter ranges</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
using JLBoost, JLBoostMLJ, MLJ
jlb = JLBoostClassifier()
r1 = range(jlb, :nrounds, lower=1, upper = 6)
r2 = range(jlb, :max_depth, lower=1, upper = 6)
r3 = range(jlb, :eta, lower=0.1, upper=1.0)
"><pre><span class="pl-k">using</span> JLBoost, JLBoostMLJ, MLJ
jlb <span class="pl-k">=</span> <span class="pl-c1">JLBoostClassifier</span>()
r1 <span class="pl-k">=</span> <span class="pl-c1">range</span>(jlb, <span class="pl-c1">:nrounds</span>, lower<span class="pl-k">=</span><span class="pl-c1">1</span>, upper <span class="pl-k">=</span> <span class="pl-c1">6</span>)
r2 <span class="pl-k">=</span> <span class="pl-c1">range</span>(jlb, <span class="pl-c1">:max_depth</span>, lower<span class="pl-k">=</span><span class="pl-c1">1</span>, upper <span class="pl-k">=</span> <span class="pl-c1">6</span>)
r3 <span class="pl-k">=</span> <span class="pl-c1">range</span>(jlb, <span class="pl-c1">:eta</span>, lower<span class="pl-k">=</span><span class="pl-c1">0.1</span>, upper<span class="pl-k">=</span><span class="pl-c1">1.0</span>)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="MLJBase.NumericRange(Float64, :eta, ... )
"><pre><code>MLJBase.NumericRange(Float64, :eta, ... )
</code></pre></div>
<p>Set up the machine</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
tm = TunedModel(model = jlb, ranges = [r1, r2, r3], measure = cross_entropy)
m = machine(tm, X, y_cate)
"><pre>tm <span class="pl-k">=</span> <span class="pl-c1">TunedModel</span>(model <span class="pl-k">=</span> jlb, ranges <span class="pl-k">=</span> [r1, r2, r3], measure <span class="pl-k">=</span> cross_entropy)
m <span class="pl-k">=</span> <span class="pl-c1">machine</span>(tm, X, y_cate)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="Machine{ProbabilisticTunedModel{Grid,…}} @109 trained 0 times.
  args: 
    1:	Source @664 ⏎ `ScientificTypes.Table{AbstractArray{ScientificTypes.C
ontinuous,1}}`
    2:	Source @788 ⏎ `AbstractArray{ScientificTypes.Multiclass{2},1}`
"><pre><code>Machine{ProbabilisticTunedModel{Grid,…}} @109 trained 0 times.
  args: 
    1:	Source @664 ⏎ `ScientificTypes.Table{AbstractArray{ScientificTypes.C
ontinuous,1}}`
    2:	Source @788 ⏎ `AbstractArray{ScientificTypes.Multiclass{2},1}`
</code></pre></div>
<p>Fit it!</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
fit!(m)
"><pre><span class="pl-c1">fit!</span>(m)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="Machine{ProbabilisticTunedModel{Grid,…}} @109 trained 1 time.
  args: 
    1:	Source @664 ⏎ `ScientificTypes.Table{AbstractArray{ScientificTypes.C
ontinuous,1}}`
    2:	Source @788 ⏎ `AbstractArray{ScientificTypes.Multiclass{2},1}`
"><pre><code>Machine{ProbabilisticTunedModel{Grid,…}} @109 trained 1 time.
  args: 
    1:	Source @664 ⏎ `ScientificTypes.Table{AbstractArray{ScientificTypes.C
ontinuous,1}}`
    2:	Source @788 ⏎ `AbstractArray{ScientificTypes.Multiclass{2},1}`
</code></pre></div>
<p>Inspected the tuned parameters</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
fitted_params(m).best_model.max_depth
fitted_params(m).best_model.nrounds
fitted_params(m).best_model.eta
"><pre><span class="pl-c1">fitted_params</span>(m)<span class="pl-k">.</span>best_model<span class="pl-k">.</span>max_depth
<span class="pl-c1">fitted_params</span>(m)<span class="pl-k">.</span>best_model<span class="pl-k">.</span>nrounds
<span class="pl-c1">fitted_params</span>(m)<span class="pl-k">.</span>best_model<span class="pl-k">.</span>eta</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="0.9
"><pre><code>0.9
</code></pre></div>
<h3><a id="user-content-simple-fitting" class="anchor" aria-hidden="true" href="#simple-fitting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Simple Fitting</h3>
<p>Fit the model with <code>verbosity = 1</code></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
mljmodel = fit(model, 1, X, y)
"><pre>mljmodel <span class="pl-k">=</span> <span class="pl-c1">fit</span>(model, <span class="pl-c1">1</span>, X, y)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="Choosing a split on SepalLength
Choosing a split on SepalWidth
Choosing a split on PetalLength
Choosing a split on PetalWidth
(feature = :PetalLength, split_at = 1.9, cutpt = 50, gain = 133.33333333333
334, lweight = 2.0, rweight = -2.0)
Choosing a split on SepalLength
Choosing a split on SepalWidth
Choosing a split on PetalLength
Choosing a split on PetalWidth
Choosing a split on SepalLength
Choosing a split on SepalWidth
Choosing a split on PetalLength
Choosing a split on PetalWidth
(fitresult = (treemodel = JLBoost.JLBoostTrees.JLBoostTreeModel(JLBoost.JLB
oostTrees.AbstractJLBoostTree[eta = 1.0 (tree weight)

   -- PetalLength &lt;= 1.9
     ---- weight = 2.0

   -- PetalLength &gt; 1.9
     ---- weight = -2.0
], JLBoost.LogitLogLoss(), :__y__),
              target_levels = Bool[0, 1],),
 cache = nothing,
 report = (AUC = 0.16666666666666669,
           feature_importance = 1×4 DataFrame
│ Row │ feature     │ Quality_Gain │ Coverage │ Frequency │
│     │ Symbol      │ Float64      │ Float64  │ Float64   │
├─────┼─────────────┼──────────────┼──────────┼───────────┤
│ 1   │ PetalLength │ 1.0          │ 1.0      │ 1.0       │,),)
"><pre><code>Choosing a split on SepalLength
Choosing a split on SepalWidth
Choosing a split on PetalLength
Choosing a split on PetalWidth
(feature = :PetalLength, split_at = 1.9, cutpt = 50, gain = 133.33333333333
334, lweight = 2.0, rweight = -2.0)
Choosing a split on SepalLength
Choosing a split on SepalWidth
Choosing a split on PetalLength
Choosing a split on PetalWidth
Choosing a split on SepalLength
Choosing a split on SepalWidth
Choosing a split on PetalLength
Choosing a split on PetalWidth
(fitresult = (treemodel = JLBoost.JLBoostTrees.JLBoostTreeModel(JLBoost.JLB
oostTrees.AbstractJLBoostTree[eta = 1.0 (tree weight)

   -- PetalLength &lt;= 1.9
     ---- weight = 2.0

   -- PetalLength &gt; 1.9
     ---- weight = -2.0
], JLBoost.LogitLogLoss(), :__y__),
              target_levels = Bool[0, 1],),
 cache = nothing,
 report = (AUC = 0.16666666666666669,
           feature_importance = 1×4 DataFrame
│ Row │ feature     │ Quality_Gain │ Coverage │ Frequency │
│     │ Symbol      │ Float64      │ Float64  │ Float64   │
├─────┼─────────────┼──────────────┼──────────┼───────────┤
│ 1   │ PetalLength │ 1.0          │ 1.0      │ 1.0       │,),)
</code></pre></div>
<p>Predicting using the model</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
predict(model, mljmodel.fitresult, X)
"><pre><span class="pl-c1">predict</span>(model, mljmodel<span class="pl-k">.</span>fitresult, X)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="150-element Array{MLJBase.UnivariateFinite{ScientificTypes.Multiclass{2},Bo
ol,UInt32,Float64},1}:
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 ⋮
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
"><pre><code>150-element Array{MLJBase.UnivariateFinite{ScientificTypes.Multiclass{2},Bo
ol,UInt32,Float64},1}:
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.881, true=&gt;0.119)
 ⋮
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
 UnivariateFinite{ScientificTypes.Multiclass{2}}(false=&gt;0.119, true=&gt;0.881)
</code></pre></div>
<p>Feature Importance for simple fitting
One can obtain the feature importance using the <code>feature_importance</code> function</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
feature_importance(mljmodel.fitresult.treemodel, X, y)
"><pre><span class="pl-c1">feature_importance</span>(mljmodel<span class="pl-k">.</span>fitresult<span class="pl-k">.</span>treemodel, X, y)</pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="1×4 DataFrame
│ Row │ feature     │ Quality_Gain │ Coverage │ Frequency │
│     │ Symbol      │ Float64      │ Float64  │ Float64   │
├─────┼─────────────┼──────────────┼──────────┼───────────┤
│ 1   │ PetalLength │ 1.0          │ 1.0      │ 1.0       │
"><pre><code>1×4 DataFrame
│ Row │ feature     │ Quality_Gain │ Coverage │ Frequency │
│     │ Symbol      │ Float64      │ Float64  │ Float64   │
├─────┼─────────────┼──────────────┼──────────┼───────────┤
│ 1   │ PetalLength │ 1.0          │ 1.0      │ 1.0       │
</code></pre></div>
</article></div>