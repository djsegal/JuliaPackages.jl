<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-burrowswheeleraligner" class="anchor" aria-hidden="true" href="#burrowswheeleraligner"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>BurrowsWheelerAligner</h1>
<p dir="auto"><a href="https://github.com/jonathanBieler/BurrowsWheelerAligner.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/jonathanBieler/BurrowsWheelerAligner.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/jonathanBieler/BurrowsWheelerAligner.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5aa18586347abe4418a4894bc824252675c0666bdad677ae3ebf674dba3733d3/68747470733a2f2f636f6465636f762e696f2f67682f6a6f6e617468616e4269656c65722f427572726f7773576865656c6572416c69676e65722e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/jonathanBieler/BurrowsWheelerAligner.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Minimal WIP bindings for bwa (<a href="https://github.com/lh3/bwa">https://github.com/lh3/bwa</a>).</p>
<h2 dir="auto"><a id="user-content-example-see-tests" class="anchor" aria-hidden="true" href="#example-see-tests"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example (see tests)</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using BurrowsWheelerAligner
const BWA = BurrowsWheelerAligner
import BWA.FASTA

index_file = joinpath(@__DIR__, &quot;data&quot;, &quot;genome.fa&quot;)

aligner = BWA.Aligner(index_file)

record = FASTA.Record(&quot;&quot;&quot;&gt;test\nGAGTTTTATCGCTTCCATGACGCAGAAGTTAACACTTTCGGATATTTCTGATGAGTCGAAAAATTATCTT&quot;&quot;&quot;)
aln = BWA.align(aligner, record)[1]

@assert BWA.position(aln) == 1
@assert BWA.cigar(aln) == &quot;70M&quot;
@assert BWA.mappingquality(aln) == 60
@assert BWA.is_rev(aln) == false
@assert BWA.refname(aln, aligner) == &quot;PhiX&quot;"><pre><span class="pl-k">using</span> BurrowsWheelerAligner
<span class="pl-k">const</span> BWA <span class="pl-k">=</span> BurrowsWheelerAligner
<span class="pl-k">import</span> BWA<span class="pl-k">.</span>FASTA

index_file <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(<span class="pl-c1">@__DIR__</span>, <span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>genome.fa<span class="pl-pds">"</span></span>)

aligner <span class="pl-k">=</span> BWA<span class="pl-k">.</span><span class="pl-c1">Aligner</span>(index_file)

record <span class="pl-k">=</span> FASTA<span class="pl-k">.</span><span class="pl-c1">Record</span>(<span class="pl-s"><span class="pl-pds">"""</span>&gt;test<span class="pl-cce">\n</span>GAGTTTTATCGCTTCCATGACGCAGAAGTTAACACTTTCGGATATTTCTGATGAGTCGAAAAATTATCTT<span class="pl-pds">"""</span></span>)
aln <span class="pl-k">=</span> BWA<span class="pl-k">.</span><span class="pl-c1">align</span>(aligner, record)[<span class="pl-c1">1</span>]

<span class="pl-c1">@assert</span> BWA<span class="pl-k">.</span><span class="pl-c1">position</span>(aln) <span class="pl-k">==</span> <span class="pl-c1">1</span>
<span class="pl-c1">@assert</span> BWA<span class="pl-k">.</span><span class="pl-c1">cigar</span>(aln) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>70M<span class="pl-pds">"</span></span>
<span class="pl-c1">@assert</span> BWA<span class="pl-k">.</span><span class="pl-c1">mappingquality</span>(aln) <span class="pl-k">==</span> <span class="pl-c1">60</span>
<span class="pl-c1">@assert</span> BWA<span class="pl-k">.</span><span class="pl-c1">is_rev</span>(aln) <span class="pl-k">==</span> <span class="pl-c1">false</span>
<span class="pl-c1">@assert</span> BWA<span class="pl-k">.</span><span class="pl-c1">refname</span>(aln, aligner) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>PhiX<span class="pl-pds">"</span></span></pre></div>
</article></div>