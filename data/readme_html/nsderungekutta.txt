<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-rungekuttajl" class="anchor" aria-hidden="true" href="#rungekuttajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RungeKutta.jl</h1>
<p dir="auto">A Julia package implementing Runge-Kutta methods.</p>
<p dir="auto"><a href="https://giancarloantonucci.github.io/RungeKutta.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Docs Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a> <a href="https://github.com/giancarloantonucci/RungeKutta.jl/actions"><img src="https://camo.githubusercontent.com/f44f3ec55e5871dda8f5fed113bca178004da6fe54c6c2df9cae7c57c73e3ed6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6769616e6361726c6f616e746f6e756363692f52756e67654b757474612e6a6c2f4349" alt="Build Status" data-canonical-src="https://img.shields.io/github/workflow/status/giancarloantonucci/RungeKutta.jl/CI" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/giancarloantonucci/RungeKutta.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0a47e6de8c76ce889ab4d9d2498019fd5c29d1c9a8eace6d6aa96196d2bfe6ce/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6769616e6361726c6f616e746f6e756363692f52756e67654b757474612e6a6c3f6c6162656c3d636f766572616765" alt="Coverage" data-canonical-src="https://img.shields.io/codecov/c/github/giancarloantonucci/RungeKutta.jl?label=coverage" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">RungeKutta.jl is compatible with Julia v1.0 and above. From the Julia REPL,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="]add https://github.com/giancarloantonucci/RungeKutta.jl"><pre>]add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>giancarloantonucci<span class="pl-k">/</span>RungeKutta<span class="pl-k">.</span>jl</pre></div>
<p dir="auto">Read the <a href="https://giancarloantonucci.github.io/RungeKutta.jl/dev" rel="nofollow">documentation</a> for a complete overview of this package.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">Let's say that we want to solve the <a href="https://en.wikipedia.org/wiki/Pendulum_(mathematics)#Simple_gravity_pendulum" rel="nofollow">simple gravity pendulum problem</a> using the <a href="https://en.wikipedia.org/wiki/Midpoint_method" rel="nofollow">midpoint method</a>. Here is one way to do it with RungeKutta.jl:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using RungeKutta
f(u, t) = [u[2]; -sin(u[1])]
u0 = [0.0; π/4]
tspan = (0.0, 2π/3 * √9.81)
problem = IVP(f, u0, tspan)
solver = Midpoint(h = 1e-2)
solution = solve(problem, solver)"><pre><span class="pl-k">using</span> RungeKutta
<span class="pl-en">f</span>(u, t) <span class="pl-k">=</span> [u[<span class="pl-c1">2</span>]; <span class="pl-k">-</span><span class="pl-c1">sin</span>(u[<span class="pl-c1">1</span>])]
u0 <span class="pl-k">=</span> [<span class="pl-c1">0.0</span>; π<span class="pl-k">/</span><span class="pl-c1">4</span>]
tspan <span class="pl-k">=</span> (<span class="pl-c1">0.0</span>, <span class="pl-c1">2</span>π<span class="pl-k">/</span><span class="pl-c1">3</span> <span class="pl-k">*</span> <span class="pl-k">√</span><span class="pl-c1">9.81</span>)
problem <span class="pl-k">=</span> <span class="pl-c1">IVP</span>(f, u0, tspan)
solver <span class="pl-k">=</span> <span class="pl-c1">Midpoint</span>(h <span class="pl-k">=</span> <span class="pl-c1">1e-2</span>)
solution <span class="pl-k">=</span> <span class="pl-c1">solve</span>(problem, solver)</pre></div>
<p dir="auto">We can plot the obtained <code>solution</code> by extracting its fields <code>u</code> and <code>t</code>, e.g. using the convenient macro <code>@↓ u, t = solution</code> from <a href="https://github.com/giancarloantonucci/ArrowMacros.jl">ArrowMacros.jl</a>. Alternatively, we can use the available predefined recipes:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Plots, LaTeXStrings
p₁ = plot(solution, xlabel = L&quot;t&quot;, label = [L&quot;\theta&quot; L&quot;\omega&quot;])
p₂ = phaseplot(solution, vars = (1, 2), xlabel = L&quot;\theta&quot;, ylabel = L&quot;\omega&quot;)
plot(size = (900, 450), p₁, p₂)"><pre><span class="pl-k">using</span> Plots, LaTeXStrings
p₁ <span class="pl-k">=</span> <span class="pl-c1">plot</span>(solution, xlabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span>t<span class="pl-pds">"</span></span>, label <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span><span class="pl-cce">\t</span>heta<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span><span class="pl-cce">\o</span>mega<span class="pl-pds">"</span></span>])
p₂ <span class="pl-k">=</span> <span class="pl-c1">phaseplot</span>(solution, vars <span class="pl-k">=</span> (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>), xlabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span><span class="pl-cce">\t</span>heta<span class="pl-pds">"</span></span>, ylabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span><span class="pl-cce">\o</span>mega<span class="pl-pds">"</span></span>)
<span class="pl-c1">plot</span>(size <span class="pl-k">=</span> (<span class="pl-c1">900</span>, <span class="pl-c1">450</span>), p₁, p₂)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="imgs/pendulum.svg"><img src="imgs/pendulum.svg" alt="svg" style="max-width: 100%;"></a></p>
<p dir="auto">For convenience, RungeKutta.jl re-exports all the ODE problems defined in <a href="https://github.com/giancarloantonucci/NSDEBase.jl">NSDEBase.jl</a>, e.g. <code>SimplePendulum</code> for the above problem.</p>
<p dir="auto">RungeKutta.jl has some predefined recipes to plot <strong>stability regions</strong> and <strong>order stars</strong> too:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="p₁ = stabilityf(RK4(), xlabel = L&quot;\Re(z)&quot;, ylabel = L&quot;\Im(z)&quot;, colour = :blues)
p₂ = orderstarf(RK4(), xlabel = L&quot;\Re(z)&quot;, ylabel = L&quot;\Im(z)&quot;, colour = :blues)
plot(size = (1000, 400), p₁, p₂, left_margin = 5Plots.mm, bottom_margin = 5Plots.mm)"><pre>p₁ <span class="pl-k">=</span> <span class="pl-c1">stabilityf</span>(<span class="pl-c1">RK4</span>(), xlabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span><span class="pl-cce">\R</span>e(z)<span class="pl-pds">"</span></span>, ylabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span><span class="pl-cce">\I</span>m(z)<span class="pl-pds">"</span></span>, colour <span class="pl-k">=</span> <span class="pl-c1">:blues</span>)
p₂ <span class="pl-k">=</span> <span class="pl-c1">orderstarf</span>(<span class="pl-c1">RK4</span>(), xlabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span><span class="pl-cce">\R</span>e(z)<span class="pl-pds">"</span></span>, ylabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span><span class="pl-cce">\I</span>m(z)<span class="pl-pds">"</span></span>, colour <span class="pl-k">=</span> <span class="pl-c1">:blues</span>)
<span class="pl-c1">plot</span>(size <span class="pl-k">=</span> (<span class="pl-c1">1000</span>, <span class="pl-c1">400</span>), p₁, p₂, left_margin <span class="pl-k">=</span> <span class="pl-c1">5</span>Plots<span class="pl-k">.</span>mm, bottom_margin <span class="pl-k">=</span> <span class="pl-c1">5</span>Plots<span class="pl-k">.</span>mm)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="imgs/regions.svg"><img src="imgs/regions.svg" alt="svg" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-available-methods" class="anchor" aria-hidden="true" href="#available-methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Available methods</h2>
<p dir="auto">RungeKutta.jl currently supports the following methods:</p>
<p dir="auto"><strong>Explicit</strong>: <code>Euler</code>/<code>ExplicitEuler</code>, <code>Midpoint</code>/<code>ExplicitMidpoint</code>, <code>Heun2</code>, <code>Ralston2</code>, <code>Heun3</code>, <code>Kutta3</code>, <code>Ralston3</code>, <code>SSPRK3</code>, <code>RK4</code>, <code>Rule38</code>, <code>HeunEuler</code>, <code>Fehlberg45</code>/<code>F45</code>, <code>DormandPrince54</code>/<code>DP54</code>, <code>Verner65</code>/<code>V65</code>.</p>
<p dir="auto"><strong>Implicit</strong>: <code>BackwardEuler</code>/<code>ImplicitEuler</code>, <code>ImplicitMidpoint</code>, <code>CrankNicolson</code>, <code>SDIRK3</code>, <code>GaussLegendre4</code>/<code>GL4</code>, <code>GaussLegendre6</code>/<code>GL6</code>, <code>LobattoIIIA4</code>, <code>LobattoIIIB2</code>, <code>LobattoIIIB4</code>, <code>LobattoIIIC2</code>, <code>LobattoIIIC4</code>, <code>RadauIA3</code>, <code>RadauIA5</code>, <code>RadauIIA3</code>, <code>RadauIIA5</code>.</p>
<h2 dir="auto"><a id="user-content-future-improvements" class="anchor" aria-hidden="true" href="#future-improvements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Future improvements</h2>
<ul dir="auto">
<li>Add a PI step-size control. This will likely require changing <code>AdaptiveParameters</code> and <code>StepSize</code>.</li>
</ul>
</article></div>