<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-tensorvalues" class="anchor" aria-hidden="true" href="#tensorvalues"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TensorValues</h1>
<p dir="auto"><a href="https://travis-ci.com/gridap/TensorValues.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/60573360151b9328ef5fa190743723fc3bc35952b632d2074f989a6cf36148e0/68747470733a2f2f7472617669732d63692e636f6d2f6772696461702f54656e736f7256616c7565732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/gridap/TensorValues.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/gridap/TensorValues.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/495b507485e8afb998bd88c1d0e1d1490bc7d55567dcee39d0e826515a165a3a/68747470733a2f2f636f6465636f762e696f2f67682f6772696461702f54656e736f7256616c7565732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/gridap/TensorValues.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">If you <g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png">❤️</g-emoji> this project, give us a <g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png">⭐️</g-emoji>!</p>
<p dir="auto"><strong>TensorValues</strong> provides the types <code>VectorValue</code> (a 1-st order tensor), <code>TensorValue</code> (a 2-nd order tensor) and <code>MultiValue</code> (a generalization of <code>VectorValue</code> and <code>TensorValue</code>) and common tensor operations defined on these types (e.g., dot product, inner product, outer product, etc.)</p>
<h2 dir="auto"><a id="user-content-why" class="anchor" aria-hidden="true" href="#why"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Why</h2>
<p dir="auto">The main feature of the <strong>TensorValues</strong> package is that the provided types do not extend from <code>AbstractArray</code>, but from <code>Number</code>!</p>
<p dir="auto">This allows one to work with them as if they were scalar values in broadcasted operations on arrays of <code>VectorValue</code> objects (also for <code>TensorValue</code> or <code>MultiValue</code> objects). For instance, one can perform the following manipulations:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Assing a VectorValue to all the entries of an Array of VectorValues
A = zeros(VectorValue{2,Int}, (4,5))
v = VectorValue(12,31)
A .= v # This is posible since  VectorValue &lt;: Number

# Broatcasing of tensor operations in arrays of TensorValues
t = TensorValue(13,41,53,17) # creates a 2x2 TensorValue
g = TensorValue(32,41,3,14) # creates another 2x2 TensorValue
B = fill(t,(1,5))
C = inner.(g,B) # inner product of g against all TensorValues in the array B
@show C
# C = [2494 2494 2494 2494 2494]"><pre><span class="pl-c"><span class="pl-c">#</span> Assing a VectorValue to all the entries of an Array of VectorValues</span>
A <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(VectorValue{<span class="pl-c1">2</span>,Int}, (<span class="pl-c1">4</span>,<span class="pl-c1">5</span>))
v <span class="pl-k">=</span> <span class="pl-c1">VectorValue</span>(<span class="pl-c1">12</span>,<span class="pl-c1">31</span>)
A <span class="pl-k">.=</span> v <span class="pl-c"><span class="pl-c">#</span> This is posible since  VectorValue &lt;: Number</span>

<span class="pl-c"><span class="pl-c">#</span> Broatcasing of tensor operations in arrays of TensorValues</span>
t <span class="pl-k">=</span> <span class="pl-c1">TensorValue</span>(<span class="pl-c1">13</span>,<span class="pl-c1">41</span>,<span class="pl-c1">53</span>,<span class="pl-c1">17</span>) <span class="pl-c"><span class="pl-c">#</span> creates a 2x2 TensorValue</span>
g <span class="pl-k">=</span> <span class="pl-c1">TensorValue</span>(<span class="pl-c1">32</span>,<span class="pl-c1">41</span>,<span class="pl-c1">3</span>,<span class="pl-c1">14</span>) <span class="pl-c"><span class="pl-c">#</span> creates another 2x2 TensorValue</span>
B <span class="pl-k">=</span> <span class="pl-c1">fill</span>(t,(<span class="pl-c1">1</span>,<span class="pl-c1">5</span>))
C <span class="pl-k">=</span> <span class="pl-c1">inner</span>.(g,B) <span class="pl-c"><span class="pl-c">#</span> inner product of g against all TensorValues in the array B</span>
<span class="pl-c1">@show</span> C
<span class="pl-c"><span class="pl-c">#</span> C = [2494 2494 2494 2494 2494]</span></pre></div>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(&quot;TensorValues&quot;)"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>TensorValues<span class="pl-pds">"</span></span>)</pre></div>
</article></div>