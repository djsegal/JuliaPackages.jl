<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-hungarian" class="anchor" aria-hidden="true" href="#hungarian"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hungarian</h1>
<p dir="auto"><a href="https://github.com/Gnimuc/Hungarian.jl/actions/workflows/ci.yml"><img src="https://github.com/Gnimuc/Hungarian.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://github.com/Gnimuc/Hungarian.jl/actions/workflows/TagBot.yml"><img src="https://github.com/Gnimuc/Hungarian.jl/actions/workflows/TagBot.yml/badge.svg" alt="TagBot" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/Hungarian/effdR" rel="nofollow"><img src="https://camo.githubusercontent.com/0c7eca48075faf2cb6ab4bf4849794c1d55268fae5360933173af41d95cbbb76/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f48756e67617269616e2f706b676576616c2e737667" alt="pkgeval" data-canonical-src="https://juliahub.com/docs/Hungarian/pkgeval.svg" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/Gnimuc/Hungarian.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/f74c3e47d810730789d3cde692f0b590602bc5098f5da22710eec6f70b6569f7/687474703a2f2f636f6465636f762e696f2f6769746875622f476e696d75632f48756e67617269616e2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/Gnimuc/Hungarian.jl/coverage.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/Hungarian/effdR" rel="nofollow"><img src="https://camo.githubusercontent.com/89e662a7ced0769f23097d383ec095b9b0646a9b7b056e05f7dee8441189a1dc/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f48756e67617269616e2f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/Hungarian/version.svg" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/Hungarian/effdR?t=2" rel="nofollow"><img src="https://camo.githubusercontent.com/75ef5cf5814ef08aa9c07a586ae88a5416e94a7fa846151b184a3e6873e99d54/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f48756e67617269616e2f646570732e737667" alt="deps" data-canonical-src="https://juliahub.com/docs/Hungarian/deps.svg" style="max-width: 100%;"></a>
<a href="https://pkgs.genieframework.com?packages=Hungarian" rel="nofollow"><img src="https://camo.githubusercontent.com/4163d7413b63c3a1fd9a1a08bb5a8f0e06f7fc206b30e9e063e69a6a935644fe/68747470733a2f2f736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f706b67732e67656e69656672616d65776f726b2e636f6d2f6170692f76312f62616467652f48756e67617269616e" alt="Downloads" data-canonical-src="https://shields.io/endpoint?url=https://pkgs.genieframework.com/api/v1/badge/Hungarian" style="max-width: 100%;"></a></p>
<p dir="auto">The package provides one implementation of the <strong><a href="https://en.wikipedia.org/wiki/Hungarian_algorithm" rel="nofollow">Hungarian algorithm</a></strong>(<em>Kuhn-Munkres algorithm</em>) based on its matrix interpretation. This implementation uses a sparse matrix to keep tracking those marked zeros, so it costs less time and memory than <a href="https://github.com/FugroRoames/Munkres.jl">Munkres.jl</a>. Benchmark details can be found <a href="https://github.com/Gnimuc/Hungarian.jl/tree/master/benchmark">here</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add Hungarian"><pre>pkg<span class="pl-k">&gt;</span> add Hungarian</pre></div>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick start</h2>
<p dir="auto">Let's say we have 5 workers and 3 tasks with the following cost matrix:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="weights = [ 24     1     8;
             5     7    14;
             6    13    20;
            12    19    21;
            18    25     2]"><pre>weights <span class="pl-k">=</span> [ <span class="pl-c1">24</span>     <span class="pl-c1">1</span>     <span class="pl-c1">8</span>;
             <span class="pl-c1">5</span>     <span class="pl-c1">7</span>    <span class="pl-c1">14</span>;
             <span class="pl-c1">6</span>    <span class="pl-c1">13</span>    <span class="pl-c1">20</span>;
            <span class="pl-c1">12</span>    <span class="pl-c1">19</span>    <span class="pl-c1">21</span>;
            <span class="pl-c1">18</span>    <span class="pl-c1">25</span>     <span class="pl-c1">2</span>]</pre></div>
<p dir="auto">We can solve the assignment problem by:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Hungarian

julia&gt; assignment, cost = hungarian(weights)
([2, 1, 0, 0, 3], 8)

# worker 1 =&gt; task 2 with weights[1,2] = 1
# worker 2 =&gt; task 1 with weights[2,1] = 5
# worker 5 =&gt; task 3 with weights[5,3] = 2
# the minimal cost is 1 + 5 + 2 = 8  "><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Hungarian

julia<span class="pl-k">&gt;</span> assignment, cost <span class="pl-k">=</span> <span class="pl-c1">hungarian</span>(weights)
([<span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">3</span>], <span class="pl-c1">8</span>)

<span class="pl-c"><span class="pl-c">#</span> worker 1 =&gt; task 2 with weights[1,2] = 1</span>
<span class="pl-c"><span class="pl-c">#</span> worker 2 =&gt; task 1 with weights[2,1] = 5</span>
<span class="pl-c"><span class="pl-c">#</span> worker 5 =&gt; task 3 with weights[5,3] = 2</span>
<span class="pl-c"><span class="pl-c">#</span> the minimal cost is 1 + 5 + 2 = 8  </span></pre></div>
<p dir="auto">Since each worker can perform only one task and each task can be assigned to only one worker, those <code>0</code>s in the <code>assignment</code> mean that no task is assigned to those workers.</p>
<p dir="auto">If a job-worker assignment is not possible, use the special <code>missing</code> value to indicate which pairs are disallowed:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Hungarian

julia&gt; weights = [missing 1 1; 1 0 1; 1 1 0]
3×3 Matrix{Union{Missing, Int64}}:
  missing  1  1
 1         0  1
 1         1  0

julia&gt; assignment, cost = hungarian(weights)
([2, 1, 3], 2)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Hungarian

julia<span class="pl-k">&gt;</span> weights <span class="pl-k">=</span> [<span class="pl-c1">missing</span> <span class="pl-c1">1</span> <span class="pl-c1">1</span>; <span class="pl-c1">1</span> <span class="pl-c1">0</span> <span class="pl-c1">1</span>; <span class="pl-c1">1</span> <span class="pl-c1">1</span> <span class="pl-c1">0</span>]
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> Matrix{Union{Missing, Int64}}<span class="pl-k">:</span>
  <span class="pl-c1">missing</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>         <span class="pl-c1">0</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>         <span class="pl-c1">1</span>  <span class="pl-c1">0</span>

julia<span class="pl-k">&gt;</span> assignment, cost <span class="pl-k">=</span> <span class="pl-c1">hungarian</span>(weights)
([<span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-c1">3</span>], <span class="pl-c1">2</span>)</pre></div>
<p dir="auto"><strong>NOTE: This package does not support <code>Inf</code> weights. All <code>Inf</code>s are converted to <code>prevfloat(typemax(T))</code> before running the munkres algorithm.</strong></p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">When solving a canonical assignment problem, namely, the cost matrix is square, one can directly get the matching via <code>Hungarian.munkres(x)</code> instead of <code>hungarian(x)</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Hungarian

julia&gt; matching = Hungarian.munkres(rand(5,5))
5×5 SparseArrays.SparseMatrixCSC{Int8, Int64} with 9 stored entries:
 1  2  ⋅  ⋅  ⋅
 ⋅  ⋅  1  ⋅  2
 2  ⋅  ⋅  ⋅  ⋅
 1  ⋅  2  ⋅  ⋅
 ⋅  ⋅  ⋅  2  1

# 0 =&gt; non-zero
# 1 =&gt; zero
# 2 =&gt; STAR
julia&gt; Matrix(matching)
5×5 Matrix{Int8}:
 1  2  0  0  0
 0  0  1  0  2
 2  0  0  0  0
 1  0  2  0  0
 0  0  0  2  1

julia&gt; [findfirst(matching[i,:].==Hungarian.STAR) for i = 1:5]
5-element Vector{Int64}:
 2
 5
 1
 3
 4

julia&gt; [findfirst(matching[:,i].==Hungarian.STAR) for i = 1:5]
5-element Vector{Int64}:
 3
 1
 4
 5
 2"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Hungarian

julia<span class="pl-k">&gt;</span> matching <span class="pl-k">=</span> Hungarian<span class="pl-k">.</span><span class="pl-c1">munkres</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">5</span>,<span class="pl-c1">5</span>))
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> SparseArrays<span class="pl-k">.</span>SparseMatrixCSC{Int8, Int64} with <span class="pl-c1">9</span> stored entries<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">2</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>
 <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-c1">1</span>  <span class="pl-k">⋅</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">2</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>
 <span class="pl-c1">1</span>  <span class="pl-k">⋅</span>  <span class="pl-c1">2</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>
 <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-k">⋅</span>  <span class="pl-c1">2</span>  <span class="pl-c1">1</span>

<span class="pl-c"><span class="pl-c">#</span> 0 =&gt; non-zero</span>
<span class="pl-c"><span class="pl-c">#</span> 1 =&gt; zero</span>
<span class="pl-c"><span class="pl-c">#</span> 2 =&gt; STAR</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">Matrix</span>(matching)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> Matrix{Int8}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">2</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">0</span>  <span class="pl-c1">2</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">2</span>  <span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> [<span class="pl-c1">findfirst</span>(matching[i,:]<span class="pl-k">.</span><span class="pl-k">==</span>Hungarian<span class="pl-k">.</span>STAR) <span class="pl-k">for</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>]
<span class="pl-c1">5</span><span class="pl-k">-</span>element Vector{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">2</span>
 <span class="pl-c1">5</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>

julia<span class="pl-k">&gt;</span> [<span class="pl-c1">findfirst</span>(matching[:,i]<span class="pl-k">.</span><span class="pl-k">==</span>Hungarian<span class="pl-k">.</span>STAR) <span class="pl-k">for</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>]
<span class="pl-c1">5</span><span class="pl-k">-</span>element Vector{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">3</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">4</span>
 <span class="pl-c1">5</span>
 <span class="pl-c1">2</span></pre></div>
<p dir="auto">If a job-worker assignment is not possible, use the special <code>missing</code> value to indicate which pairs are disallowed:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Hungarian

julia&gt; weights = [missing 1 1; 1 0 1; 1 1 0]
3×3 Matrix{Union{Missing, Int64}}:
  missing  1  1
 1         0  1
 1         1  0

julia&gt; matching = Hungarian.munkres(weights)
3×3 SparseArrays.SparseMatrixCSC{Int8, Int64} with 6 stored entries:
 ⋅  2  1
 2  1  ⋅
 1  ⋅  2"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Hungarian

julia<span class="pl-k">&gt;</span> weights <span class="pl-k">=</span> [<span class="pl-c1">missing</span> <span class="pl-c1">1</span> <span class="pl-c1">1</span>; <span class="pl-c1">1</span> <span class="pl-c1">0</span> <span class="pl-c1">1</span>; <span class="pl-c1">1</span> <span class="pl-c1">1</span> <span class="pl-c1">0</span>]
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> Matrix{Union{Missing, Int64}}<span class="pl-k">:</span>
  <span class="pl-c1">missing</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>         <span class="pl-c1">0</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">1</span>         <span class="pl-c1">1</span>  <span class="pl-c1">0</span>

julia<span class="pl-k">&gt;</span> matching <span class="pl-k">=</span> Hungarian<span class="pl-k">.</span><span class="pl-c1">munkres</span>(weights)
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> SparseArrays<span class="pl-k">.</span>SparseMatrixCSC{Int8, Int64} with <span class="pl-c1">6</span> stored entries<span class="pl-k">:</span>
 <span class="pl-k">⋅</span>  <span class="pl-c1">2</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">1</span>  <span class="pl-k">⋅</span>
 <span class="pl-c1">1</span>  <span class="pl-k">⋅</span>  <span class="pl-c1">2</span></pre></div>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ol dir="auto">
<li>
<p dir="auto">J. Munkres, "Algorithms for the Assignment and Transportation Problems", Journal of the Society for Industrial and Applied Mathematics, 5(1):32–38, 1957 March.</p>
</li>
<li>
<p dir="auto"><a href="http://csclab.murraystate.edu/bob.pilgrim/445/munkres.html" rel="nofollow">http://csclab.murraystate.edu/bob.pilgrim/445/munkres.html</a></p>
</li>
</ol>
</article></div>