<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-hungarian" class="anchor" aria-hidden="true" href="#hungarian"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Hungarian</h1>
<p><a href="https://travis-ci.com/Gnimuc/Hungarian.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/59cfe968a11a50e0857d42c864ba115044861ada/68747470733a2f2f7472617669732d63692e636f6d2f476e696d75632f48756e67617269616e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/Gnimuc/Hungarian.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/Gnimuc/Hungarian.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/b5b3259c3f087e6be9090df348fa75560eff85bd/687474703a2f2f636f6465636f762e696f2f6769746875622f476e696d75632f48756e67617269616e2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/Gnimuc/Hungarian.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>The package provides one implementation of the <strong><a href="https://en.wikipedia.org/wiki/Hungarian_algorithm" rel="nofollow">Hungarian algorithm</a></strong>(<em>Kuhn-Munkres algorithm</em>) based on its matrix interpretation. This implementation uses a sparse matrix to keep tracking those marked zeros, so it costs less time and memory than <a href="https://github.com/FugroRoames/Munkres.jl">Munkres.jl</a>. Benchmark details can be found <a href="https://github.com/Gnimuc/Hungarian.jl/tree/master/benchmark">here</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add Hungarian</pre></div>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Quick start</h2>
<p>Let's say we have 5 workers and 3 tasks with the following cost matrix:</p>
<div class="highlight highlight-source-julia"><pre>weights <span class="pl-k">=</span> [ <span class="pl-c1">24</span>     <span class="pl-c1">1</span>     <span class="pl-c1">8</span>;
             <span class="pl-c1">5</span>     <span class="pl-c1">7</span>    <span class="pl-c1">14</span>;
             <span class="pl-c1">6</span>    <span class="pl-c1">13</span>    <span class="pl-c1">20</span>;
            <span class="pl-c1">12</span>    <span class="pl-c1">19</span>    <span class="pl-c1">21</span>;
            <span class="pl-c1">18</span>    <span class="pl-c1">25</span>     <span class="pl-c1">2</span>]</pre></div>
<p>We can solve the assignment problem by:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Hungarian

julia<span class="pl-k">&gt;</span> assignment, cost <span class="pl-k">=</span> <span class="pl-c1">hungarian</span>(weights)
([<span class="pl-c1">2</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">3</span>],<span class="pl-c1">8</span>)

<span class="pl-c"><span class="pl-c">#</span> worker 1 =&gt; task 2 with weights[1,2] = 1</span>
<span class="pl-c"><span class="pl-c">#</span> worker 2 =&gt; task 1 with weights[2,1] = 5</span>
<span class="pl-c"><span class="pl-c">#</span> worker 5 =&gt; task 3 with weights[5,3] = 2</span>
<span class="pl-c"><span class="pl-c">#</span> the minimal cost is 1 + 5 + 2 = 8  </span></pre></div>
<p>Since each worker can perform only one task and each task can be assigned to only one worker, those <code>0</code>s in the <code>assignment</code> mean that no task is assigned to those workers.</p>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h1>
<p>When solving a canonical assignment problem, namely, the cost matrix is square, one can directly get the matching via <code>Hungarian.munkres(x)</code> instead of <code>hungarian(x)</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Hungarian

julia<span class="pl-k">&gt;</span> matching <span class="pl-k">=</span> Hungarian<span class="pl-k">.</span><span class="pl-c1">munkres</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">5</span>,<span class="pl-c1">5</span>))
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> SparseArrays<span class="pl-k">.</span>SparseMatrixCSC{Int8,Int64} with <span class="pl-c1">7</span> stored entries<span class="pl-k">:</span>
  [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]  <span class="pl-k">=</span>  <span class="pl-c1">1</span>
  [<span class="pl-c1">5</span>, <span class="pl-c1">1</span>]  <span class="pl-k">=</span>  <span class="pl-c1">2</span>
  [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>]  <span class="pl-k">=</span>  <span class="pl-c1">2</span>
  [<span class="pl-c1">2</span>, <span class="pl-c1">3</span>]  <span class="pl-k">=</span>  <span class="pl-c1">2</span>
  [<span class="pl-c1">2</span>, <span class="pl-c1">4</span>]  <span class="pl-k">=</span>  <span class="pl-c1">1</span>
  [<span class="pl-c1">3</span>, <span class="pl-c1">4</span>]  <span class="pl-k">=</span>  <span class="pl-c1">2</span>
  [<span class="pl-c1">4</span>, <span class="pl-c1">5</span>]  <span class="pl-k">=</span>  <span class="pl-c1">2</span>

<span class="pl-c"><span class="pl-c">#</span> 0 =&gt; non-zero</span>
<span class="pl-c"><span class="pl-c">#</span> 1 =&gt; zero</span>
<span class="pl-c"><span class="pl-c">#</span> 2 =&gt; STAR</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">Matrix</span>(matching)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> Array{Int8,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">2</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">2</span>  <span class="pl-c1">1</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">2</span>  <span class="pl-c1">0</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">2</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>

julia<span class="pl-k">&gt;</span> [<span class="pl-c1">findfirst</span>(matching[i,:]<span class="pl-k">.</span><span class="pl-k">==</span>Hungarian<span class="pl-k">.</span>STAR) <span class="pl-k">for</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>]
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{Int64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>
 <span class="pl-c1">5</span>
 <span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> [<span class="pl-c1">findfirst</span>(matching[:,i]<span class="pl-k">.</span><span class="pl-k">==</span>Hungarian<span class="pl-k">.</span>STAR) <span class="pl-k">for</span> i <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>]
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{Int64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">5</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>
 <span class="pl-c1">4</span></pre></div>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>References</h2>
<ol>
<li>
<p>J. Munkres, "Algorithms for the Assignment and Transportation Problems", Journal of the Society for Industrial and Applied Mathematics, 5(1):32–38, 1957 March.</p>
</li>
<li>
<p><a href="http://csclab.murraystate.edu/bob.pilgrim/445/munkres.html" rel="nofollow">http://csclab.murraystate.edu/bob.pilgrim/445/munkres.html</a></p>
</li>
</ol>
</article></div>