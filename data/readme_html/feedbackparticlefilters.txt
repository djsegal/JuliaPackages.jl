<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-feedbackparticlefiltersjl" class="anchor" aria-hidden="true" href="#feedbackparticlefiltersjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>FeedbackParticleFilters.jl</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/646b448bd38200d1c7f3cd622b3cb9aa79d5abe0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667"><img src="https://camo.githubusercontent.com/646b448bd38200d1c7f3cd622b3cb9aa79d5abe0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6d61747572696e672d626c75652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-maturing-blue.svg" style="max-width:100%;"></a>
<a href="http://simsurace.github.io/FeedbackParticleFilters.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/simsurace/FeedbackParticleFilters.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b8c33714e3239a7f77568d60d5de45a7e9b5e994/68747470733a2f2f7472617669732d63692e6f72672f73696d7375726163652f466565646261636b5061727469636c6546696c746572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/simsurace/FeedbackParticleFilters.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/simsurace/FeedbackParticleFilters.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/08c3a542293488f46cf50d4873e5b4e92b85c120/68747470733a2f2f636f6465636f762e696f2f67682f73696d7375726163652f466565646261636b5061727469636c6546696c746572732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/simsurace/FeedbackParticleFilters.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>This package's aim is to provide a versatile and efficient feedback particle filter implementation in Julia, with abstractions to flexibly construct, run, and analyze feedback particle filters for a variety of uni- and multivariate filtering problems with both diffusion and point process observations.</p>
<p>In particular, the following features are planned to be implemented in FeedbackParticleFilters:</p>
<ul>
<li>Types for hidden state and observation models: diffusions, Poisson processes, etc.</li>
<li>A variety of gain estimation methods</li>
<li>Automatic filter deployment and simulation of the state and filtering equations</li>
<li>Storing of intermediate (trajectory) data from simulation</li>
<li>An interface to the powerful solvers from the <a href="https://github.com/JuliaDiffEq/DifferentialEquations.jl">DifferentialEquations</a> package</li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>Use the built-in package manager:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>FeedbackParticleFilters<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>To load the package, use the command:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> FeedbackParticleFilters</pre></div>
<p>Set up a basic one-dimensional linear-Gaussian continuous-time filtering problem:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Distributions
state_model <span class="pl-k">=</span> <span class="pl-c1">ScalarDiffusionStateModel</span>(x<span class="pl-k">-&gt;</span><span class="pl-k">-</span>x, x<span class="pl-k">-&gt;</span><span class="pl-c1">sqrt</span>(<span class="pl-c1">2.</span>), <span class="pl-c1">Normal</span>())
obs_model   <span class="pl-k">=</span> <span class="pl-c1">ScalarDiffusionObservationModel</span>(x<span class="pl-k">-&gt;</span>x)

filt_prob   <span class="pl-k">=</span> <span class="pl-c1">FilteringProblem</span>(state_model, obs_model)</pre></div>
<p>Once the filtering problem is defined, an appropriate filtering algorithm can be defined like this:</p>
<div class="highlight highlight-source-julia"><pre>method <span class="pl-k">=</span> <span class="pl-c1">ConstantGainApproximation</span>()
filter <span class="pl-k">=</span> <span class="pl-c1">FPF</span>(filt_prob, method, <span class="pl-c1">100</span>)</pre></div>
<p>The package comes with methods to automatically simulate a given system:</p>
<div class="highlight highlight-source-julia"><pre>simulation <span class="pl-k">=</span> <span class="pl-c1">ContinuousTimeSimulation</span>(filt_prob, filter, <span class="pl-c1">10000</span>, <span class="pl-c1">0.01</span>)
<span class="pl-c1">run!</span>(simulation)</pre></div>
<p>To learn more about how to use this package, please check out some tutorials or the documentation linked below.</p>
<h2><a id="user-content-tutorials" class="anchor" aria-hidden="true" href="#tutorials"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Tutorials</h2>
<p>There are various Jupyter notebooks that explore various key functions of the package:</p>
<ol>
<li><a href="https://github.com/simsurace/FeedbackParticleFilters.jl/blob/master/notebooks/Getting_started.ipynb">Getting started</a></li>
<li>Gain estimation using the <a href="https://github.com/simsurace/FeedbackParticleFilters.jl/blob/master/notebooks/Gain_semigroup.ipynb">semigroup method</a></li>
<li><a href="https://github.com/simsurace/FeedbackParticleFilters.jl/blob/master/notebooks/Harmonic_oscillator.ipynb">Harmonic oscillator example</a></li>
</ol>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Documentation</h2>
<p><a href="https://simsurace.github.io/FeedbackParticleFilters.jl/dev" rel="nofollow">In development...</a></p>
<h2><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Acknowledgements</h2>
<p>This package was developed as part of academic research at Department of Physiology, University of Bern, Switzerland.
The research was funded by the Swiss National Science Foundation.</p>
</article></div>