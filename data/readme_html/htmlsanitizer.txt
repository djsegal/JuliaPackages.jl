<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-htmlsanitizer" class="anchor" aria-hidden="true" href="#htmlsanitizer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>HTMLSanitizer</h1>
<p><a href="https://travis-ci.com/JuliaComputing/HTMLSanitizer.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4d0c78a29864794defe1a06aac0645d51414c515/68747470733a2f2f7472617669732d63692e636f6d2f4a756c6961436f6d707574696e672f48544d4c53616e6974697a65722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/JuliaComputing/HTMLSanitizer.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Whitelist-based HTML sanitizer inspired by <a href="https://github.com/rgrove/sanitize/">sanitize</a> and <a href="https://github.com/jch/html-pipeline/blob/13057c4dcde5e769dd116682f1bed7e65e920b40/lib/html/pipeline/sanitization_filter.rb">html-pipeline</a>.</p>
<p>HTMLSanitizer.jl parses your source HTML with <a href="https://github.com/JuliaWeb/Gumbo.jl">Gumbo.jl</a> and then filters tags and attributes according to a whitelist. The default whitelists are fairly close to GitHubs pipeline for rendering markdown to HTML.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<pre><code>julia&gt; sanitize("&lt;a onclick='javascript:alert(0)'&gt;YO DAWG&lt;/a&gt;")
"&lt;a&gt;YO DAWG&lt;/a&gt;"
</code></pre>
<pre><code>julia&gt; sanitize("""&lt;img src="./foo.jpg" longdesc="javascript:alert(1)"&gt;&lt;/img&gt;""")
"&lt;img src=\"./foo.jpg\"&gt;&lt;/img&gt;"
</code></pre>
<pre><code>julia&gt; whitelist = deepcopy(HTMLSanitizer.WHITELIST)
Dict{Symbol,Any} with 4 entries:
  :protocols       =&gt; Dict("del"=&gt;Dict("cite"=&gt;["http", "https", :relative]),"ins"=&gt;D…
  :attributes      =&gt; Dict{Any,Array{String,1}}("del"=&gt;["cite"],"ins"=&gt;["cite"],:ALL=…
  :elements        =&gt; ["h1", "h2", "h3", "h4", "h5", "h6", "h7", "h8", "br", "b"  …  …
  :remove_contents =&gt; ["script"]

julia&gt; append!(whitelist[:elements], ["body", "head"]); # body and head are not allowed by default

julia&gt; HTMLSanitizer.sanitize("""
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body onload!#\$%&amp;()*~+-_.,:;?@[/|\\]^`=alert("XSS")&gt;&lt;/body&gt;&lt;/html&gt;
       """, isfragment = false, whitelist = whitelist)
"&lt;HTML&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/HTML&gt;"
</code></pre>
<h2><a id="user-content-whitelists" class="anchor" aria-hidden="true" href="#whitelists"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Whitelists</h2>
<p>Two whitelists are provided: <code>HTMLSanitizer.WHITELIST</code> and <code>HTMLSanitizer.LIMITED</code>. Check out the
implementation if you want to know what exactly is whitelisted.</p>
</article></div>