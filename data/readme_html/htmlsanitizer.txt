<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-htmlsanitizer" class="anchor" aria-hidden="true" href="#htmlsanitizer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>HTMLSanitizer</h1>
<p><a href="https://travis-ci.com/JuliaComputing/HTMLSanitizer.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/10f423e5b7aadba6373c82fa23e51c2e8a8cc80eb8f8fe50f375b572cd8250f1/68747470733a2f2f7472617669732d63692e636f6d2f4a756c6961436f6d707574696e672f48544d4c53616e6974697a65722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/JuliaComputing/HTMLSanitizer.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Whitelist-based HTML sanitizer inspired by <a href="https://github.com/rgrove/sanitize/">sanitize</a> and <a href="https://github.com/jch/html-pipeline/blob/13057c4dcde5e769dd116682f1bed7e65e920b40/lib/html/pipeline/sanitization_filter.rb">html-pipeline</a>.</p>
<p>HTMLSanitizer.jl parses your source HTML with <a href="https://github.com/JuliaWeb/Gumbo.jl">Gumbo.jl</a> and then filters tags and attributes according to a whitelist. The default whitelists are fairly close to GitHubs pipeline for rendering markdown to HTML.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; sanitize(&quot;&lt;a onclick='javascript:alert(0)'&gt;YO DAWG&lt;/a&gt;&quot;)
&quot;&lt;a&gt;YO DAWG&lt;/a&gt;&quot;
"><pre><code>julia&gt; sanitize("&lt;a onclick='javascript:alert(0)'&gt;YO DAWG&lt;/a&gt;")
"&lt;a&gt;YO DAWG&lt;/a&gt;"
</code></pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; sanitize(&quot;&quot;&quot;&lt;img src=&quot;./foo.jpg&quot; longdesc=&quot;javascript:alert(1)&quot;&gt;&lt;/img&gt;&quot;&quot;&quot;)
&quot;&lt;img src=\&quot;./foo.jpg\&quot;&gt;&lt;/img&gt;&quot;
"><pre><code>julia&gt; sanitize("""&lt;img src="./foo.jpg" longdesc="javascript:alert(1)"&gt;&lt;/img&gt;""")
"&lt;img src=\"./foo.jpg\"&gt;&lt;/img&gt;"
</code></pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; whitelist = deepcopy(HTMLSanitizer.WHITELIST)
Dict{Symbol,Any} with 4 entries:
  :protocols       =&gt; Dict(&quot;del&quot;=&gt;Dict(&quot;cite&quot;=&gt;[&quot;http&quot;, &quot;https&quot;, :relative]),&quot;ins&quot;=&gt;D…
  :attributes      =&gt; Dict{Any,Array{String,1}}(&quot;del&quot;=&gt;[&quot;cite&quot;],&quot;ins&quot;=&gt;[&quot;cite&quot;],:ALL=…
  :elements        =&gt; [&quot;h1&quot;, &quot;h2&quot;, &quot;h3&quot;, &quot;h4&quot;, &quot;h5&quot;, &quot;h6&quot;, &quot;h7&quot;, &quot;h8&quot;, &quot;br&quot;, &quot;b&quot;  …  …
  :remove_contents =&gt; [&quot;script&quot;]

julia&gt; append!(whitelist[:elements], [&quot;body&quot;, &quot;head&quot;]); # body and head are not allowed by default

julia&gt; HTMLSanitizer.sanitize(&quot;&quot;&quot;
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body onload!#\$%&amp;()*~+-_.,:;?@[/|\\]^`=alert(&quot;XSS&quot;)&gt;&lt;/body&gt;&lt;/html&gt;
       &quot;&quot;&quot;, isfragment = false, whitelist = whitelist)
&quot;&lt;HTML&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/HTML&gt;&quot;
"><pre><code>julia&gt; whitelist = deepcopy(HTMLSanitizer.WHITELIST)
Dict{Symbol,Any} with 4 entries:
  :protocols       =&gt; Dict("del"=&gt;Dict("cite"=&gt;["http", "https", :relative]),"ins"=&gt;D…
  :attributes      =&gt; Dict{Any,Array{String,1}}("del"=&gt;["cite"],"ins"=&gt;["cite"],:ALL=…
  :elements        =&gt; ["h1", "h2", "h3", "h4", "h5", "h6", "h7", "h8", "br", "b"  …  …
  :remove_contents =&gt; ["script"]

julia&gt; append!(whitelist[:elements], ["body", "head"]); # body and head are not allowed by default

julia&gt; HTMLSanitizer.sanitize("""
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body onload!#\$%&amp;()*~+-_.,:;?@[/|\\]^`=alert("XSS")&gt;&lt;/body&gt;&lt;/html&gt;
       """, isfragment = false, whitelist = whitelist)
"&lt;HTML&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/HTML&gt;"
</code></pre></div>
<h2><a id="user-content-whitelists" class="anchor" aria-hidden="true" href="#whitelists"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Whitelists</h2>
<p>Two whitelists are provided: <code>HTMLSanitizer.WHITELIST</code> and <code>HTMLSanitizer.LIMITED</code>. Check out the
implementation if you want to know what exactly is whitelisted.</p>
</article></div>