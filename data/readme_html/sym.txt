<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-sym" class="anchor" aria-hidden="true" href="#sym"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Sym</h1>
<p><a href="https://travis-ci.com/Roger-luo/Sym.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/911b65eddb1388f884cddcbaab3bc6111b33e373/68747470733a2f2f7472617669732d63692e636f6d2f526f6765722d6c756f2f53796d2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/Roger-luo/Sym.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/Roger-luo/Sym.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/02c35ba511abaf884b7c8020a400f199cb403c2b/68747470733a2f2f636f6465636f762e696f2f67682f526f6765722d6c756f2f53796d2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/Roger-luo/Sym.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/Roger-luo/Sym.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/7b9af8f27c6369094e4c1acc265463137a37cc9b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f526f6765722d6c756f2f53796d2e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/Roger-luo/Sym.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>This is a package for symbolic computation in Julia with correct type bounds. It provides <code>SymReal</code>, <code>SymInteger</code>, <code>SymComplex</code> and <code>SymNumber</code> for each different
mathematical domain with correct subtyping. Unlike other symbolic engines provides only symbolic types that are subtypes of <code>Number</code>. This will make a lot more generic Julia function defined on such domain "just work".</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>Roger<span class="pl-k">-</span>luo<span class="pl-k">/</span>Sym<span class="pl-k">.</span>jl<span class="pl-k">.</span>git</pre></div>
<h2><a id="user-content-acknowledgement" class="anchor" aria-hidden="true" href="#acknowledgement"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Acknowledgement</h2>
<p>I appreciate the discussion under ModelingToolkit and slack with Mason Protter, Harrison Grodin, Chris Rackauckas and Taine Zhao. The implementation of pattern matching is taken from <a href="https://github.com/HarrisonGrodin/Simplify.jl">Simplify</a>
with a few modifications. In the future, I may replace the current naive
rewrite system with the <a href="https://github.com/HarrisonGrodin/Rewrite.jl">Rewrite.jl</a>.</p>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>License</h2>
<p>This package is released under Apache License 2.0.</p>
</article></div>