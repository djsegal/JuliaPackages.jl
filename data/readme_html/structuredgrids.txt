<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://travis-ci.org/haampie/StructuredGrids.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/436770835e1a767f12e4c7664b6405a7e1eeab2088afbdd66784908def0c812e/68747470733a2f2f7472617669732d63692e6f72672f6861616d7069652f5374727563747572656447726964732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/haampie/StructuredGrids.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://codecov.io/gh/haampie/StructuredGrids.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/690040de36b2a4ddacc49166d156d415ac1b7d69a67232d2fda96ad3405d5fb9/68747470733a2f2f636f6465636f762e696f2f67682f6861616d7069652f5374727563747572656447726964732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/haampie/StructuredGrids.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-structuredgridsjl" class="anchor" aria-hidden="true" href="#structuredgridsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>StructuredGrids.jl</h1>
<p>Tiny package for lazy structured grids:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using StructuredGrids

julia&gt; g = grid(-2:2, 1:3)
5×3 StructuredGrid.Grid{Tuple{Int64,Int64},2,Tuple{UnitRange{Int64},UnitRange{Int64}}}:
 (-2, 1)  (-2, 2)  (-2, 3)
 (-1, 1)  (-1, 2)  (-1, 3)
 (0, 1)   (0, 2)   (0, 3) 
 (1, 1)   (1, 2)   (1, 3) 
 (2, 1)   (2, 2)   (2, 3)
 
 julia&gt; g[2,2]
 (-1, 2)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> StructuredGrids

julia<span class="pl-k">&gt;</span> g <span class="pl-k">=</span> <span class="pl-c1">grid</span>(<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">2</span>, <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">3</span> StructuredGrid<span class="pl-k">.</span>Grid{Tuple{Int64,Int64},<span class="pl-c1">2</span>,Tuple{UnitRange{Int64},UnitRange{Int64}}}<span class="pl-k">:</span>
 (<span class="pl-k">-</span><span class="pl-c1">2</span>, <span class="pl-c1">1</span>)  (<span class="pl-k">-</span><span class="pl-c1">2</span>, <span class="pl-c1">2</span>)  (<span class="pl-k">-</span><span class="pl-c1">2</span>, <span class="pl-c1">3</span>)
 (<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>)  (<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">2</span>)  (<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">3</span>)
 (<span class="pl-c1">0</span>, <span class="pl-c1">1</span>)   (<span class="pl-c1">0</span>, <span class="pl-c1">2</span>)   (<span class="pl-c1">0</span>, <span class="pl-c1">3</span>) 
 (<span class="pl-c1">1</span>, <span class="pl-c1">1</span>)   (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>)   (<span class="pl-c1">1</span>, <span class="pl-c1">3</span>) 
 (<span class="pl-c1">2</span>, <span class="pl-c1">1</span>)   (<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)   (<span class="pl-c1">2</span>, <span class="pl-c1">3</span>)
 
 julia<span class="pl-k">&gt;</span> g[<span class="pl-c1">2</span>,<span class="pl-c1">2</span>]
 (<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">2</span>)</pre></div>
<p>It's more or less the same as <code>Iterators.product(-2:2, 1:3)</code>, but it allows indexing as well and subtypes <code>AbstractArray</code>.</p>
</article></div>