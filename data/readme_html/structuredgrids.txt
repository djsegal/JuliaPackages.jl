<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a href="https://travis-ci.org/haampie/StructuredGrids.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a3ebae250f71df84528216eac42077e35534e0af/68747470733a2f2f7472617669732d63692e6f72672f6861616d7069652f5374727563747572656447726964732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/haampie/StructuredGrids.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://codecov.io/gh/haampie/StructuredGrids.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f67b924f16d207e4bfff286a5f30f693d8d67d36/68747470733a2f2f636f6465636f762e696f2f67682f6861616d7069652f5374727563747572656447726964732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/haampie/StructuredGrids.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-structuredgridsjl" class="anchor" aria-hidden="true" href="#structuredgridsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>StructuredGrids.jl</h1>
<p>Tiny package for lazy structured grids:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> StructuredGrids

julia<span class="pl-k">&gt;</span> g <span class="pl-k">=</span> <span class="pl-c1">grid</span>(<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">2</span>, <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>)
<span class="pl-c1">5</span><span class="pl-k">Ã—</span><span class="pl-c1">3</span> StructuredGrid<span class="pl-k">.</span>Grid{Tuple{Int64,Int64},<span class="pl-c1">2</span>,Tuple{UnitRange{Int64},UnitRange{Int64}}}<span class="pl-k">:</span>
 (<span class="pl-k">-</span><span class="pl-c1">2</span>, <span class="pl-c1">1</span>)  (<span class="pl-k">-</span><span class="pl-c1">2</span>, <span class="pl-c1">2</span>)  (<span class="pl-k">-</span><span class="pl-c1">2</span>, <span class="pl-c1">3</span>)
 (<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>)  (<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">2</span>)  (<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">3</span>)
 (<span class="pl-c1">0</span>, <span class="pl-c1">1</span>)   (<span class="pl-c1">0</span>, <span class="pl-c1">2</span>)   (<span class="pl-c1">0</span>, <span class="pl-c1">3</span>) 
 (<span class="pl-c1">1</span>, <span class="pl-c1">1</span>)   (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>)   (<span class="pl-c1">1</span>, <span class="pl-c1">3</span>) 
 (<span class="pl-c1">2</span>, <span class="pl-c1">1</span>)   (<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)   (<span class="pl-c1">2</span>, <span class="pl-c1">3</span>)
 
 julia<span class="pl-k">&gt;</span> g[<span class="pl-c1">2</span>,<span class="pl-c1">2</span>]
 (<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">2</span>)</pre></div>
<p>It's more or less the same as <code>Iterators.product(-2:2, 1:3)</code>, but it allows indexing as well and subtypes <code>AbstractArray</code>.</p>
</article></div>