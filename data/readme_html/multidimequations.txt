<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-multidimequations" class="anchor" aria-hidden="true" href="#multidimequations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MultiDimEquations</h1>
<p dir="auto">Allows to write multi-dimensional equations in Julia using a readable and compact syntax:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@meq nTrees[r in reg, sp in species, dc in diameterClass[2-end], y in years] = nTrees[r, sp, dc, y-1]*(1-mortRate[r, sp, dc, y-1] - promotionRate[r, sp, dc, y-1]) +  nTrees[r, sp, dc-1, y-1] * promotionRate[r, sp, dc-1, y-1]"><pre><span class="pl-c1">@meq</span> nTrees[r <span class="pl-k">in</span> reg, sp <span class="pl-k">in</span> species, dc <span class="pl-k">in</span> diameterClass[<span class="pl-c1">2</span><span class="pl-k">-</span><span class="pl-c1">end</span>], y <span class="pl-k">in</span> years] <span class="pl-k">=</span> nTrees[r, sp, dc, y<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>mortRate[r, sp, dc, y<span class="pl-k">-</span><span class="pl-c1">1</span>] <span class="pl-k">-</span> promotionRate[r, sp, dc, y<span class="pl-k">-</span><span class="pl-c1">1</span>]) <span class="pl-k">+</span>  nTrees[r, sp, dc<span class="pl-k">-</span><span class="pl-c1">1</span>, y<span class="pl-k">-</span><span class="pl-c1">1</span>] <span class="pl-k">*</span> promotionRate[r, sp, dc<span class="pl-k">-</span><span class="pl-c1">1</span>, y<span class="pl-k">-</span><span class="pl-c1">1</span>]</pre></div>
<p dir="auto">It is a bit like using an Algebraic modeling language (AML) like GAMS or Julia/JuMP, but outside the domain of optimisation.</p>
<p dir="auto"><a href="https://sylvaticus.github.io/MultiDimEquations.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://sylvaticus.github.io/MultiDimEquations.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/sylvaticus/MultiDimEquations.jl/actions"><img src="https://github.com/sylvaticus/MultiDimEquations.jl/workflows/CI/badge.svg" alt="Build status (Github Actions)" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/sylvaticus/MultiDimEquations.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/71bbe335a71b5d4a9bf791f5af60c7e5d563540d816c86eefcac45e8d034100f/687474703a2f2f636f6465636f762e696f2f6769746875622f73796c766174696375732f4d756c746944696d4571756174696f6e732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/sylvaticus/MultiDimEquations.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<ul dir="auto">
<li><code>] add "MultiDimEquations"</code></li>
</ul>
<h2 dir="auto"><a id="user-content-using-the-package" class="anchor" aria-hidden="true" href="#using-the-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using the package</h2>
<p dir="auto"><code>using MultiDimEquations</code></p>
<h2 dir="auto"><a id="user-content-definition-of-the-variables" class="anchor" aria-hidden="true" href="#definition-of-the-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Definition of the variables:</h2>
<p dir="auto">Define or define and load the data for each group of variables from a DataFrame in long format, i.e. in the format dim1|dim2|...|value or dim1|dim2|...|variableName|value</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="df = CSV.read(IOBuffer(&quot;&quot;&quot;
reg prod var value
us banana production 10
us banana transfCoef    0.6
us banana trValues      2
us apples production    7
us apples transfCoef    0.7
us apples trValues      5
us juice production     missing
us juice transfCoef     missing
us juice trValues       missing
eu banana production    5
eu banana transfCoef    0.7
eu banana trValues      1
eu apples production    8
eu apples transfCoef    0.8
eu apples trValues 4
eu juice production missing
eu juice transfCoef missing
eu juice trValues missing
&quot;&quot;&quot;), DataFrame, delim=&quot; &quot;, ignorerepeated=true, copycols=true, missingstring=&quot;missing&quot;)

(production,transfCoef,trValues) = defLoadVars([&quot;production&quot;,&quot;transfCoef&quot;,&quot;trValues&quot;], df,[&quot;reg&quot;,&quot;prod&quot;], varNameCol=&quot;var&quot;, valueCol=&quot;value&quot;,sparse=true)
consumption                      = defVars([&quot;reg&quot;,&quot;prod&quot;],[String,String])"><pre>df <span class="pl-k">=</span> CSV<span class="pl-k">.</span><span class="pl-c1">read</span>(<span class="pl-c1">IOBuffer</span>(<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">reg prod var value</span>
<span class="pl-s">us banana production 10</span>
<span class="pl-s">us banana transfCoef    0.6</span>
<span class="pl-s">us banana trValues      2</span>
<span class="pl-s">us apples production    7</span>
<span class="pl-s">us apples transfCoef    0.7</span>
<span class="pl-s">us apples trValues      5</span>
<span class="pl-s">us juice production     missing</span>
<span class="pl-s">us juice transfCoef     missing</span>
<span class="pl-s">us juice trValues       missing</span>
<span class="pl-s">eu banana production    5</span>
<span class="pl-s">eu banana transfCoef    0.7</span>
<span class="pl-s">eu banana trValues      1</span>
<span class="pl-s">eu apples production    8</span>
<span class="pl-s">eu apples transfCoef    0.8</span>
<span class="pl-s">eu apples trValues 4</span>
<span class="pl-s">eu juice production missing</span>
<span class="pl-s">eu juice transfCoef missing</span>
<span class="pl-s">eu juice trValues missing</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>), DataFrame, delim<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span> <span class="pl-pds">"</span></span>, ignorerepeated<span class="pl-k">=</span><span class="pl-c1">true</span>, copycols<span class="pl-k">=</span><span class="pl-c1">true</span>, missingstring<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>missing<span class="pl-pds">"</span></span>)

(production,transfCoef,trValues) <span class="pl-k">=</span> <span class="pl-c1">defLoadVars</span>([<span class="pl-s"><span class="pl-pds">"</span>production<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>transfCoef<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>trValues<span class="pl-pds">"</span></span>], df,[<span class="pl-s"><span class="pl-pds">"</span>reg<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>prod<span class="pl-pds">"</span></span>], varNameCol<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>var<span class="pl-pds">"</span></span>, valueCol<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>value<span class="pl-pds">"</span></span>,sparse<span class="pl-k">=</span><span class="pl-c1">true</span>)
consumption                      <span class="pl-k">=</span> <span class="pl-c1">defVars</span>([<span class="pl-s"><span class="pl-pds">"</span>reg<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>prod<span class="pl-pds">"</span></span>],[String,String])</pre></div>
<p dir="auto">For more info type <code>?defVars</code> or <code>?defLoadVars</code> once you installed and loaded the package or consult the documentation (<a href="https://sylvaticus.github.io/MultiDimEquations.jl/stable" rel="nofollow">stable</a>|<a href="https://sylvaticus.github.io/MultiDimEquations.jl/dev" rel="nofollow">development</a>)</p>
<h1 dir="auto"><a id="user-content-defining-the-set-dimensions-of-your-data" class="anchor" aria-hidden="true" href="#defining-the-set-dimensions-of-your-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Defining the "set" (dimensions) of your data</h1>
<p dir="auto">These are simple Julia Arrays..</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="reg      = unique(df.reg)
products = unique(df.prod)
primPr   = products[1:2]
secPr    = [products[3]]"><pre>reg      <span class="pl-k">=</span> <span class="pl-c1">unique</span>(df<span class="pl-k">.</span>reg)
products <span class="pl-k">=</span> <span class="pl-c1">unique</span>(df<span class="pl-k">.</span>prod)
primPr   <span class="pl-k">=</span> products[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>]
secPr    <span class="pl-k">=</span> [products[<span class="pl-c1">3</span>]]</pre></div>
<h2 dir="auto"><a id="user-content-write-your-model-using-the-meq-macro" class="anchor" aria-hidden="true" href="#write-your-model-using-the-meq-macro"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Write your model using the @meq macro</h2>
<p dir="auto">The @meq macro adds a bit of convenience transforming at parse time (so, without adding run-time overheads) your equation from <code>par1[d1 in DIM1, d2 in DIM2, dfix3] = par2[d1,d2]+par3[d1,d2]</code> to <code>[par1[d1,d2,dfix3] = par2[d1,d2]+par3[d1,d2] for d1 in dim1, d2 in dim2]</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# equivalent to [production[r, sp] = sum(trValues[r,pp] * transfCoef[r,pp]  for pp in primPr) for r in reg, sp in secPr]
@meq production[r in reg, sp in secPr]   = sum(trValues[r,pp] * transfCoef[r,pp]  for pp in primPr)
@meq consumption[r in reg, pp in primPr] = production[r,pp] - trValues[r,pp]
@meq consumption[r in reg, sp in secPr]  = production[r, sp]"><pre><span class="pl-c"><span class="pl-c">#</span> equivalent to [production[r, sp] = sum(trValues[r,pp] * transfCoef[r,pp]  for pp in primPr) for r in reg, sp in secPr]</span>
<span class="pl-c1">@meq</span> production[r <span class="pl-k">in</span> reg, sp <span class="pl-k">in</span> secPr]   <span class="pl-k">=</span> <span class="pl-c1">sum</span>(trValues[r,pp] <span class="pl-k">*</span> transfCoef[r,pp]  <span class="pl-k">for</span> pp <span class="pl-k">in</span> primPr)
<span class="pl-c1">@meq</span> consumption[r <span class="pl-k">in</span> reg, pp <span class="pl-k">in</span> primPr] <span class="pl-k">=</span> production[r,pp] <span class="pl-k">-</span> trValues[r,pp]
<span class="pl-c1">@meq</span> consumption[r <span class="pl-k">in</span> reg, sp <span class="pl-k">in</span> secPr]  <span class="pl-k">=</span> production[r, sp]</pre></div>
<p dir="auto">For more info on the @meq macro type <code>?@meq</code> or consult the documentation (<a href="https://sylvaticus.github.io/MultiDimEquations.jl/stable" rel="nofollow">stable</a>|<a href="https://sylvaticus.github.io/MultiDimEquations.jl/dev" rel="nofollow">development</a>)</p>
<h2 dir="auto"><a id="user-content-known-limitation" class="anchor" aria-hidden="true" href="#known-limitation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Known limitation</h2>
<ul dir="auto">
<li>At this time, only <code>var = ...</code> assignments are supported.</li>
</ul>
<h2 dir="auto"><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgements</h2>
<p dir="auto">The development of this package was supported by the French National Research Agency through the <a href="http://mycor.nancy.inra.fr/ARBRE/" rel="nofollow">Laboratory of Excellence ARBRE</a>, a part of the “Investissements d'Avenir” Program (ANR 11 – LABX-0002-01).</p>
</article></div>