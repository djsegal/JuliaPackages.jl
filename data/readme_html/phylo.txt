<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-phylo" class="anchor" aria-hidden="true" href="#phylo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Phylo</h1>
<p><em>Package for creating and manipulating phylogenies</em></p>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status of master</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://richardreeve.github.io/Phylo.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://travis-ci.org/richardreeve/Phylo.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/b1b803cfc1a11b4b84249f64c13acef0cf16473b/68747470733a2f2f7472617669732d63692e6f72672f7269636861726472656576652f5068796c6f2e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.org/richardreeve/Phylo.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://ci.appveyor.com/project/richardreeve/phylo-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/9dcaa69aad3f5596ca66c84912c474fbc33d2d5f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f7269636861726472656576652f5068796c6f2e6a6c3f7376673d74727565266272616e63683d6d6173746572" alt="" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/richardreeve/Phylo.jl?svg=true&amp;branch=master" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="center"><a href="https://richardreeve.github.io/Phylo.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/richardreeve/Phylo.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3ee6b21f442dff7881b007ffc295193cf999f5bb/68747470733a2f2f636f6465636f762e696f2f67682f7269636861726472656576652f5068796c6f2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/richardreeve/Phylo.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a> <a href="https://coveralls.io/r/richardreeve/Phylo.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/034a1eeac3b17894b755ebbcaf4c15cd03218e92/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f7269636861726472656576652f5068796c6f2e6a6c2e737667" alt="" data-canonical-src="https://img.shields.io/coveralls/richardreeve/Phylo.jl.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>The package is registered in the <code>General</code> registry so can be
installed with <code>add</code>. For example on Julia v1.1:</p>
<div class="highlight highlight-source-julia"><pre>(<span class="pl-c1">@v1</span><span class="pl-c1">.4</span>) pkg<span class="pl-k">&gt;</span> add Phylo
 Resolving package versions<span class="pl-k">...</span>
  Updating <span class="pl-s"><span class="pl-pds">`</span>~/.julia/environments/v1.4/Project.toml<span class="pl-pds">`</span></span>
  [aea672f4] <span class="pl-k">+</span> Phylo v0<span class="pl-c1">.4.0</span>
  Updating <span class="pl-s"><span class="pl-pds">`</span>~/.julia/environments/v1.4/Manifest.toml<span class="pl-pds">`</span></span>

(<span class="pl-c1">@v1</span><span class="pl-c1">.4</span>) pkg<span class="pl-k">&gt;</span></pre></div>
<h2><a id="user-content-project-status" class="anchor" aria-hidden="true" href="#project-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Project Status</h2>
<p>The package is tested against the current Julia v1.4 release and
v1.0.x on Linux, macOS, and Windows. It is also tested against
nightly.</p>
<h2><a id="user-content-contributing-and-questions" class="anchor" aria-hidden="true" href="#contributing-and-questions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contributing and Questions</h2>
<p>Contributions are very welcome, as are feature requests and suggestions.
Please open an <a href="https://github.com/richardreeve/Phylo.jl/issues">issue</a> if you encounter any problems or would
just like to ask a question.</p>
<h2><a id="user-content-summary" class="anchor" aria-hidden="true" href="#summary"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Summary</h2>
<p><strong>Phylo</strong> is a <a href="http://www.julialang.org" rel="nofollow">Julia</a> package that provides
functionality for generating phylogenetic trees to feed into our
<a href="https://github.com/richardreeve/Diversity.jl/">Diversity</a> package to calculate phylogenetic
diversity. <code>Phylo</code> is currently in <em>beta</em>, but is probably still
missing much of the functionality that people may desire, so please
<a href="https://github.com/richardreeve/Phylo.jl/issues">raise an issue</a> if/when you find problems or missing
functionality - don't assume that I know!</p>
<p>Currently the package can be used to make trees manually, to generate
random trees using the framework from <code>Distributions</code>, and to read
newick and nexus format trees from files. It can also be used to
evolve continuous and discrete traits on the resultant phylogenies,
and plot all of this using <code>Plots</code> recipes. Finally, the trees and
traits are capable of handling <code>Unitful</code> units, so the branch lengths
can be time based, and traits that relate directly to physical units
(e.g. size) can be directly evolved.</p>
<h3><a id="user-content-random-tree-generation" class="anchor" aria-hidden="true" href="#random-tree-generation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Random tree generation</h3>
<p>For instance, to construct a sampler for 5 tip non-ultrametric trees,
and then generate one or two random tree of that type (the examples
below are from the master branch, but work similarly on the current
release):</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Phylo

julia<span class="pl-k">&gt;</span> nu <span class="pl-k">=</span> <span class="pl-c1">Nonultrametric</span>(<span class="pl-c1">5</span>);

julia<span class="pl-k">&gt;</span> tree <span class="pl-k">=</span> <span class="pl-c1">rand</span>(nu)
LinkTree{OneRoot,String,LinkNode{OneRoot,String,Dict{String,Any},LinkBranch{OneRoot,String,Dict{String,Any}}},LinkBranch{OneRoot,String,Dict{String,Any}},Dict{String,Any}} with <span class="pl-c1">5</span> tips, <span class="pl-c1">9</span> nodes and <span class="pl-c1">8</span> branches.
Leaf names are tip <span class="pl-c1">1</span>, tip <span class="pl-c1">2</span>, tip <span class="pl-c1">3</span>, tip <span class="pl-c1">4</span> and tip <span class="pl-c1">5</span>

julia<span class="pl-k">&gt;</span> trees <span class="pl-k">=</span> <span class="pl-c1">rand</span>(nu, [<span class="pl-s"><span class="pl-pds">"</span>Tree 1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Tree 2<span class="pl-pds">"</span></span>])
TreeSet with <span class="pl-c1">2</span> trees, each with <span class="pl-c1">5</span> tips.
Tree names are Tree <span class="pl-c1">2</span> and Tree <span class="pl-c1">1</span>

Tree <span class="pl-c1">2</span><span class="pl-k">:</span> LinkTree{OneRoot,String,LinkNode{OneRoot,String,Dict{String,Any},LinkBranch{OneRoot,String,Dict{String,Any}}},LinkBranch{OneRoot,String,Dict{String,Any}},Dict{String,Any}} with <span class="pl-c1">5</span> tips, <span class="pl-c1">9</span> nodes and <span class="pl-c1">8</span> branches.
Leaf names are tip <span class="pl-c1">1</span>, tip <span class="pl-c1">2</span>, tip <span class="pl-c1">3</span>, tip <span class="pl-c1">4</span> and tip <span class="pl-c1">5</span>

Tree <span class="pl-c1">1</span><span class="pl-k">:</span> LinkTree{OneRoot,String,LinkNode{OneRoot,String,Dict{String,Any},LinkBranch{OneRoot,String,Dict{String,Any}}},LinkBranch{OneRoot,String,Dict{String,Any}},Dict{String,Any}} with <span class="pl-c1">5</span> tips, <span class="pl-c1">9</span> nodes and <span class="pl-c1">8</span> branches.
Leaf names are tip <span class="pl-c1">1</span>, tip <span class="pl-c1">2</span>, tip <span class="pl-c1">3</span>, tip <span class="pl-c1">4</span> and tip <span class="pl-c1">5</span></pre></div>
<h3><a id="user-content-tree-traversal" class="anchor" aria-hidden="true" href="#tree-traversal"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Tree traversal</h3>
<p>The code also provides iterators, and filtered iterators over the branches,
nodes, branchnames and nodenames of a tree, though this may soon be superseded
by a simpler strategy.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">traversal</span>(tree, inorder)
<span class="pl-c1">9</span><span class="pl-k">-</span>element Array{LinkNode{OneRoot,String,Dict{String,Any},LinkBranch{OneRoot,String,Dict{String,Any}}},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 LinkNode tip <span class="pl-c1">1</span>, a tip of the tree with an incoming connection (branch <span class="pl-c1">5</span>).

 LinkNode Node <span class="pl-c1">8</span>, an internal node with <span class="pl-c1">1</span> inbound and <span class="pl-c1">2</span> outbound connections (branches <span class="pl-c1">7</span> and <span class="pl-c1">5</span>, <span class="pl-c1">6</span>)

 LinkNode tip <span class="pl-c1">3</span>, a tip of the tree with an incoming connection (branch <span class="pl-c1">6</span>).

 LinkNode Node <span class="pl-c1">9</span>, a root node with <span class="pl-c1">2</span> outbound connections (branches <span class="pl-c1">7</span>, <span class="pl-c1">8</span>)

 LinkNode tip <span class="pl-c1">5</span>, a tip of the tree with an incoming connection (branch <span class="pl-c1">3</span>).

 LinkNode Node <span class="pl-c1">7</span>, an internal node with <span class="pl-c1">1</span> inbound and <span class="pl-c1">2</span> outbound connections (branches <span class="pl-c1">8</span> and <span class="pl-c1">3</span>, <span class="pl-c1">4</span>)

 LinkNode tip <span class="pl-c1">2</span>, a tip of the tree with an incoming connection (branch <span class="pl-c1">1</span>).

 LinkNode Node <span class="pl-c1">6</span>, an internal node with <span class="pl-c1">1</span> inbound and <span class="pl-c1">2</span> outbound connections (branches <span class="pl-c1">4</span> and <span class="pl-c1">1</span>, <span class="pl-c1">2</span>)

 LinkNode tip <span class="pl-c1">4</span>, a tip of the tree with an incoming connection (branch <span class="pl-c1">2</span>).


julia<span class="pl-k">&gt;</span> <span class="pl-c1">getnodename</span>.(tree, <span class="pl-c1">traversal</span>(tree, preorder))
<span class="pl-c1">9</span><span class="pl-k">-</span>element Array{String,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>Node 9<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>Node 8<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>tip 1<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>tip 3<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>Node 7<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>tip 5<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>Node 6<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>tip 2<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>tip 4<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">collect</span>(<span class="pl-c1">nodenamefilter</span>(isleaf, tree))
<span class="pl-c1">5</span><span class="pl-k">-</span>element Array{String,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>tip 1<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>tip 2<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>tip 3<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>tip 4<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>tip 5<span class="pl-pds">"</span></span></pre></div>
<p>The current main purpose of this package is to provide a framework for
phylogenetics to use in our <a href="https://github.com/richardreeve/Diversity.jl/">Diversity</a> package, and
they will both be adapted as appropriate until both are functioning as
required (though they are currently working together reasonably successfully).</p>
<h3><a id="user-content-reading-from-a-file" class="anchor" aria-hidden="true" href="#reading-from-a-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Reading from a file</h3>
<p>It can also read newick trees either from strings or files:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Phylo

julia<span class="pl-k">&gt;</span> simpletree <span class="pl-k">=</span> <span class="pl-c1">parsenewick</span>(<span class="pl-s"><span class="pl-pds">"</span>((,Tip:1.0)Internal,)Root;<span class="pl-pds">"</span></span>)
LinkTree{OneRoot,String,LinkNode{OneRoot,String,Dict{String,Any},LinkBranch{OneRoot,String,Dict{String,Any}}},LinkBranch{OneRoot,String,Dict{String,Any}},Dict{String,Any}} with <span class="pl-c1">3</span> tips, <span class="pl-c1">5</span> nodes and <span class="pl-c1">4</span> branches.
Leaf names are Node <span class="pl-c1">1</span>, Tip and Node <span class="pl-c1">4</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">getbranchname</span>.(simpletree, <span class="pl-c1">getbranches</span>(simpletree))
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{Int64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>

julia<span class="pl-k">&gt;</span> tree <span class="pl-k">=</span> <span class="pl-c1">open</span>(parsenewick, Phylo<span class="pl-k">.</span><span class="pl-c1">path</span>(<span class="pl-s"><span class="pl-pds">"</span>H1N1.newick<span class="pl-pds">"</span></span>))
LinkTree{OneRoot,String,LinkNode{OneRoot,String,Dict{String,Any},LinkBranch{OneRoot,String,Dict{String,Any}}},LinkBranch{OneRoot,String,Dict{String,Any}},Dict{String,Any}} with <span class="pl-c1">507</span> tips, <span class="pl-c1">1013</span> nodes and <span class="pl-c1">1012</span> branches.
Leaf names are <span class="pl-c1">44</span>, <span class="pl-c1">429</span>, <span class="pl-c1">294</span>, <span class="pl-c1">295</span>, <span class="pl-c1">227</span>, <span class="pl-k">...</span> [<span class="pl-c1">501</span> omitted] <span class="pl-k">...</span> and <span class="pl-c1">418</span></pre></div>
<p>And it can read nexus trees from files too:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> ts <span class="pl-k">=</span> <span class="pl-c1">open</span>(parsenexus, Phylo<span class="pl-k">.</span><span class="pl-c1">path</span>(<span class="pl-s"><span class="pl-pds">"</span>H1N1.trees<span class="pl-pds">"</span></span>))
[ Info<span class="pl-k">:</span> Created a tree called <span class="pl-s"><span class="pl-pds">'</span>TREE1<span class="pl-pds">'</span></span>
[ Info<span class="pl-k">:</span> Created a tree called <span class="pl-s"><span class="pl-pds">'</span>TREE2<span class="pl-pds">'</span></span>
TreeSet with <span class="pl-c1">2</span> trees, each with <span class="pl-c1">507</span> tips.
Tree names are TREE2 and TREE1

TREE2<span class="pl-k">:</span> LinkTree{OneRoot,String,LinkNode{OneRoot,String,Dict{String,Any},LinkBranch{OneRoot,String,Dict{String,Any}}},LinkBranch{OneRoot,String,Dict{String,Any}},Dict{String,Any}} with <span class="pl-c1">507</span> tips, <span class="pl-c1">1013</span> nodes and <span class="pl-c1">1012</span> branches.
Leaf names are H1N1_A_MIYAGI_3_2000, H1N1_A_PARMA_6_2008, H1N1_A_AKITA_86_2002, H1N1_A_DAKAR_14_1997, H1N1_A_EGYPT_84_2001, <span class="pl-k">...</span> [<span class="pl-c1">501</span> omitted] <span class="pl-k">...</span> and H1N1_A_HONGKONG_2070_1999

TREE1<span class="pl-k">:</span> LinkTree{OneRoot,String,LinkNode{OneRoot,String,Dict{String,Any},LinkBranch{OneRoot,String,Dict{String,Any}}},LinkBranch{OneRoot,String,Dict{String,Any}},Dict{String,Any}} with <span class="pl-c1">507</span> tips, <span class="pl-c1">1013</span> nodes and <span class="pl-c1">1012</span> branches.
Leaf names are H1N1_A_MIYAGI_3_2000, H1N1_A_PARMA_6_2008, H1N1_A_AKITA_86_2002, H1N1_A_DAKAR_14_1997, H1N1_A_EGYPT_84_2001, <span class="pl-k">...</span> [<span class="pl-c1">501</span> omitted] <span class="pl-k">...</span> and H1N1_A_HONGKONG_2070_1999

julia<span class="pl-k">&gt;</span> ts[<span class="pl-s"><span class="pl-pds">"</span>TREE1<span class="pl-pds">"</span></span>]
LinkTree{OneRoot,String,LinkNode{OneRoot,String,Dict{String,Any},LinkBranch{OneRoot,String,Dict{String,Any}}},LinkBranch{OneRoot,String,Dict{String,Any}},Dict{String,Any}} with <span class="pl-c1">507</span> tips, <span class="pl-c1">1013</span> nodes and <span class="pl-c1">1012</span> branches.
Leaf names are H1N1_A_MIYAGI_3_2000, H1N1_A_PARMA_6_2008, H1N1_A_AKITA_86_2002, H1N1_A_DAKAR_14_1997, H1N1_A_EGYPT_84_2001, <span class="pl-k">...</span> [<span class="pl-c1">501</span> omitted] <span class="pl-k">...</span> and H1N1_A_HONGKONG_2070_1999


julia<span class="pl-k">&gt;</span> <span class="pl-c1">gettreeinfo</span>(ts)
Dict{String,Dict{String,Any}} with <span class="pl-c1">2</span> entries<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>TREE2<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String,Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>lnP<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-k">-</span><span class="pl-c1">1.0</span>)
  <span class="pl-s"><span class="pl-pds">"</span>TREE1<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String,Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>lnP<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">1.0</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">gettreeinfo</span>(ts, <span class="pl-s"><span class="pl-pds">"</span>TREE1<span class="pl-pds">"</span></span>)
Dict{String,Any} with <span class="pl-c1">1</span> entry<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>lnP<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1.0</span></pre></div>
<h3><a id="user-content-r-interface" class="anchor" aria-hidden="true" href="#r-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>R interface</h3>
<p>And while we wait for me (or kind <a href="https://github.com/richardreeve/Phylo.jl/pulls">contributors</a>!) to fill out
the other extensive functionality that many phylogenetics packages
have in other languages, the other important feature that it offers is
a fully(?)-functional interface to R, allowing any existing R library
functions to be carried out on julia trees, and trees to be read from
disk and written using R helper functions. Naturally the medium-term
plan is to fill in as many of these gaps as possible in Julia, so the R interface does not make RCall a dependency of the package (we use the
<code>Requires</code> package to avoid dependencies). Instead, if you want to use
the R interface you just need to use both packages:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Phylo

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> RCall
Creating Phylo RCall interface<span class="pl-k">...</span>

R<span class="pl-k">&gt;</span> <span class="pl-c1">library</span>(ape)</pre></div>
<p>You can then translate back and forth using <code>rcopy</code> on
R <code>phylo</code> objects, and <code>RObject</code> constructors on julia <code>NamedTree</code>
types to keep them in Julia or <code>@rput</code> to move the object into R:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> rt <span class="pl-k">=</span> <span class="pl-c1">rcall</span>(<span class="pl-c1">:rtree</span>, <span class="pl-c1">10</span>)
RObject{VecSxp}

Phylogenetic tree with <span class="pl-c1">10</span> tips and <span class="pl-c1">9</span> internal nodes.

Tip labels<span class="pl-k">:</span>
	t1, t4, t3, t6, t9, t7, <span class="pl-k">...</span>

Rooted; includes branch lengths.


julia<span class="pl-k">&gt;</span> jt <span class="pl-k">=</span> <span class="pl-c1">rcopy</span>(RootedTree, rt)
LinkTree{OneRoot,String,LinkNode{OneRoot,String,Dict{String,Any},LinkBranch{OneRoot,String,Dict{String,Any}}},LinkBranch{OneRoot,String,Dict{String,Any}},Dict{String,Any}} with <span class="pl-c1">10</span> tips, <span class="pl-c1">19</span> nodes and <span class="pl-c1">18</span> branches.
Leaf names are t1, t4, t3, t6, t9, <span class="pl-k">...</span> [<span class="pl-c1">4</span> omitted] <span class="pl-k">...</span> and t8


julia<span class="pl-k">&gt;</span> rjt <span class="pl-k">=</span> <span class="pl-c1">RObject</span>(jt); <span class="pl-c"><span class="pl-c">#</span> manually translate it back to R</span>

R<span class="pl-k">&gt;</span> all<span class="pl-k">.</span><span class="pl-c1">equal</span>(<span class="pl-k">$</span>rjt, <span class="pl-k">$</span>rt)
[<span class="pl-c1">1</span>] TRUE

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@rput</span> rt; <span class="pl-c"><span class="pl-c">#</span> Or use macros to pass R object back to R</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@rput</span> jt; <span class="pl-c"><span class="pl-c">#</span> And automatically translate jt back to R</span>

R<span class="pl-k">&gt;</span> jt

Phylogenetic tree with <span class="pl-c1">10</span> tips and <span class="pl-c1">9</span> internal nodes.

Tip labels<span class="pl-k">:</span>
	t1, t4, t3, t6, t9, t7, <span class="pl-k">...</span>

Rooted; includes branch lengths.

R<span class="pl-k">&gt;</span> <span class="pl-k">if</span> (all<span class="pl-k">.</span><span class="pl-c1">equal</span>(rt, jt)) <span class="pl-s"><span class="pl-pds">"</span>no damage in translation<span class="pl-pds">"</span></span>
[<span class="pl-c1">1</span>] <span class="pl-s"><span class="pl-pds">"</span>no damage in translation<span class="pl-pds">"</span></span></pre></div>
<p>For the time being the code will only work with rooted trees
with named tips and branch lengths. If there's <a href="https://github.com/richardreeve/Phylo.jl/issues">demand</a>
for other types of trees, I'll look into it.</p>
<h3><a id="user-content-trait-evolution" class="anchor" aria-hidden="true" href="#trait-evolution"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Trait evolution</h3>
<p>As far as traits are concerned, these can be continuous pr
discrete. First a continuous trait:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Phylo, Plots, DataFrames, Random

julia<span class="pl-k">&gt;</span> tree <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">Nonultrametric</span>(<span class="pl-c1">100</span>)) <span class="pl-c"><span class="pl-c">#</span> Defaults to mean tree depth of 1.0</span>
LinkTree{OneRoot,String,LinkNode{OneRoot,String,Dict{String,Any},LinkBranch{OneRoot,String,Dict{String,Any},Float64}},LinkBranch{OneRoot,String,Dict{String,Any},Float64},Dict{String,Any}} with <span class="pl-c1">100</span> tips, <span class="pl-c1">199</span> nodes and <span class="pl-c1">198</span> branches.
Leaf names are tip <span class="pl-c1">21</span>, tip <span class="pl-c1">81</span>, tip <span class="pl-c1">32</span>, tip <span class="pl-c1">12</span>, tip <span class="pl-c1">51</span>, <span class="pl-k">...</span> [<span class="pl-c1">94</span> omitted] <span class="pl-k">...</span> and tip <span class="pl-c1">93</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">rand!</span>(<span class="pl-c1">BrownianTrait</span>(tree, <span class="pl-s"><span class="pl-pds">"</span>Trait<span class="pl-pds">"</span></span>), tree)  <span class="pl-c"><span class="pl-c">#</span> Defaults to starting at 0.0, variance 1.0</span>
LinkTree{OneRoot,String,LinkNode{OneRoot,String,Dict{String,Any},LinkBranch{OneRoot,String,Dict{String,Any},Float64}},LinkBranch{OneRoot,String,Dict{String,Any},Float64},Dict{String,Any}} with <span class="pl-c1">100</span> tips, <span class="pl-c1">199</span> nodes and <span class="pl-c1">198</span> branches.
Leaf names are tip <span class="pl-c1">21</span>, tip <span class="pl-c1">81</span>, tip <span class="pl-c1">32</span>, tip <span class="pl-c1">12</span>, tip <span class="pl-c1">51</span>, <span class="pl-k">...</span> [<span class="pl-c1">94</span> omitted] <span class="pl-k">...</span> and tip <span class="pl-c1">93</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(tree, line_z <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Trait<span class="pl-pds">"</span></span>, lw <span class="pl-k">=</span> <span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> d <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(nodename<span class="pl-k">=</span><span class="pl-c1">getnodename</span>.(tree, <span class="pl-c1">traversal</span>(tree, preorder)), trait<span class="pl-k">=</span><span class="pl-c1">getnodedata</span>.(tree, <span class="pl-c1">traversal</span>(tree, preorder), <span class="pl-s"><span class="pl-pds">"</span>Trait<span class="pl-pds">"</span></span>))
<span class="pl-c1">199</span><span class="pl-k">×</span><span class="pl-c1">2</span> DataFrame
│ Row │ nodename │ trait     │
│     │ String   │ Float64   │
├─────┼──────────┼───────────┤
│ <span class="pl-c1">1</span>   │ Node <span class="pl-c1">199</span> │ <span class="pl-c1">0.0</span>       │
│ <span class="pl-c1">2</span>   │ Node <span class="pl-c1">198</span> │ <span class="pl-k">-</span><span class="pl-c1">0.517593</span> │
│ <span class="pl-c1">3</span>   │ Node <span class="pl-c1">197</span> │ <span class="pl-k">-</span><span class="pl-c1">0.314101</span> │
│ <span class="pl-c1">4</span>   │ Node <span class="pl-c1">172</span> │ <span class="pl-k">-</span><span class="pl-c1">0.391149</span> │
│ <span class="pl-c1">5</span>   │ Node <span class="pl-c1">164</span> │ <span class="pl-k">-</span><span class="pl-c1">0.797994</span> │
⋮
│ <span class="pl-c1">195</span> │ tip <span class="pl-c1">67</span>   │ <span class="pl-k">-</span><span class="pl-c1">0.21145</span>  │
│ <span class="pl-c1">196</span> │ Node <span class="pl-c1">125</span> │ <span class="pl-c1">0.236189</span>  │
│ <span class="pl-c1">197</span> │ tip <span class="pl-c1">79</span>   │ <span class="pl-c1">0.218236</span>  │
│ <span class="pl-c1">198</span> │ tip <span class="pl-c1">40</span>   │ <span class="pl-c1">0.745802</span>  │
│ <span class="pl-c1">199</span> │ tip <span class="pl-c1">81</span>   │ <span class="pl-k">-</span><span class="pl-c1">0.408055</span> │</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/richardreeve/Phylo.jl/tree/master/docs/img/browniantree.png"><img src="https://github.com/richardreeve/Phylo.jl/tree/master/docs/img/browniantree.png" alt="Continuous trait tree plot" title="Continuous trait tree plot" style="max-width:100%;"></a></p>
<p>Then a discrete trait:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@enum</span> TemperatureTrait lowTempPref midTempPref highTempPref

julia<span class="pl-k">&gt;</span> <span class="pl-c1">rand!</span>(<span class="pl-c1">SymmetricDiscreteTrait</span>(tree, TemperatureTrait, <span class="pl-c1">0.4</span>), tree);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(tree, marker_group <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>TemperatureTrait<span class="pl-pds">"</span></span>, legend <span class="pl-k">=</span> <span class="pl-c1">:topleft</span>,
            msc <span class="pl-k">=</span> <span class="pl-c1">:white</span>, treetype <span class="pl-k">=</span> <span class="pl-c1">:fan</span>, c <span class="pl-k">=</span> [<span class="pl-c1">:red</span> <span class="pl-c1">:blue</span> <span class="pl-c1">:green</span>])

julia<span class="pl-k">&gt;</span> d <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(nodename<span class="pl-k">=</span><span class="pl-c1">getnodename</span>.(tree, <span class="pl-c1">traversal</span>(tree, preorder)), trait<span class="pl-k">=</span><span class="pl-c1">getnodedata</span>.(tree, <span class="pl-c1">traversal</span>(tree, preorder), <span class="pl-s"><span class="pl-pds">"</span>TemperatureTrait<span class="pl-pds">"</span></span>))
<span class="pl-c1">199</span><span class="pl-k">×</span><span class="pl-c1">2</span> DataFrame
│ Row │ nodename │ trait        │
│     │ String   │ Temperat…    │
├─────┼──────────┼──────────────┤
│ <span class="pl-c1">1</span>   │ Node <span class="pl-c1">199</span> │ highTempPref │
│ <span class="pl-c1">2</span>   │ Node <span class="pl-c1">198</span> │ highTempPref │
│ <span class="pl-c1">3</span>   │ Node <span class="pl-c1">197</span> │ highTempPref │
│ <span class="pl-c1">4</span>   │ Node <span class="pl-c1">172</span> │ highTempPref │
│ <span class="pl-c1">5</span>   │ Node <span class="pl-c1">164</span> │ highTempPref │
⋮
│ <span class="pl-c1">195</span> │ tip <span class="pl-c1">67</span>   │ lowTempPref  │
│ <span class="pl-c1">196</span> │ Node <span class="pl-c1">125</span> │ midTempPref  │
│ <span class="pl-c1">197</span> │ tip <span class="pl-c1">79</span>   │ midTempPref  │
│ <span class="pl-c1">198</span> │ tip <span class="pl-c1">40</span>   │ lowTempPref  │
│ <span class="pl-c1">199</span> │ tip <span class="pl-c1">81</span>   │ highTempPref │</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/richardreeve/Phylo.jl/tree/master/docs/img/discretefan.png"><img src="https://github.com/richardreeve/Phylo.jl/tree/master/docs/img/discretefan.png" alt="Discrete trait fan plot" title="Discrete trait fan plot" style="max-width:100%;"></a></p>
</article></div>