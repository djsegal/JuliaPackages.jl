<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-phylo" class="anchor" aria-hidden="true" href="#phylo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Phylo</h1>
<p><em>Package for creating and manipulating phylogenies</em></p>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>PackageEvaluator</strong></th>
<th align="center"><strong>Build Status of master</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://richardreeve.github.io/Phylo.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="http://pkg.julialang.org/?pkg=Phylo&amp;ver=0.6" rel="nofollow"><img src="https://camo.githubusercontent.com/f6da171976e998521f4d902437d7ca5051205e9a/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f5068796c6f5f302e362e737667" alt="" data-canonical-src="http://pkg.julialang.org/badges/Phylo_0.6.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://travis-ci.org/richardreeve/Phylo.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/b1b803cfc1a11b4b84249f64c13acef0cf16473b/68747470733a2f2f7472617669732d63692e6f72672f7269636861726472656576652f5068796c6f2e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.org/richardreeve/Phylo.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://ci.appveyor.com/project/richardreeve/phylo-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/9dcaa69aad3f5596ca66c84912c474fbc33d2d5f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f7269636861726472656576652f5068796c6f2e6a6c3f7376673d74727565266272616e63683d6d6173746572" alt="" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/richardreeve/Phylo.jl?svg=true&amp;branch=master" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="center"><a href="https://richardreeve.github.io/Phylo.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="http://pkg.julialang.org/?pkg=Phylo&amp;ver=1.0" rel="nofollow"><img src="https://camo.githubusercontent.com/b85953f00eb4de6365cd561d0318bc38f34312d9/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f5068796c6f5f312e302e737667" alt="Works with 1.0!" data-canonical-src="http://pkg.julialang.org/badges/Phylo_1.0.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/richardreeve/Phylo.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3ee6b21f442dff7881b007ffc295193cf999f5bb/68747470733a2f2f636f6465636f762e696f2f67682f7269636861726472656576652f5068796c6f2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/richardreeve/Phylo.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a> <a href="https://coveralls.io/r/richardreeve/Phylo.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/034a1eeac3b17894b755ebbcaf4c15cd03218e92/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f7269636861726472656576652f5068796c6f2e6a6c2e737667" alt="" data-canonical-src="https://img.shields.io/coveralls/richardreeve/Phylo.jl.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>The package is registered in <code>METADATA</code> on Julia v0.6 and the <code>General</code>
registry on v0.7 and v1.0 and so can be installed with <code>add</code>. For example
on Julia v1.0:</p>
<div class="highlight highlight-source-julia"><pre>(v1<span class="pl-c1">.0</span>) pkg<span class="pl-k">&gt;</span> add Phylo
 Resolving package versions<span class="pl-k">...</span>
  Updating <span class="pl-s"><span class="pl-pds">`</span>~/.julia/environments/v1.0/Project.toml<span class="pl-pds">`</span></span>
  [aea672f4] <span class="pl-k">+</span> Phylo v0<span class="pl-c1">.3.2</span>
  Updating <span class="pl-s"><span class="pl-pds">`</span>~/.julia/environments/v1.0/Manifest.toml<span class="pl-pds">`</span></span>
  [<span class="pl-c1">7</span>d9fca2a] <span class="pl-k">+</span> Arpack v0<span class="pl-c1">.2.2</span>
  [<span class="pl-c1">9e28174</span>c] <span class="pl-k">+</span> BinDeps v0<span class="pl-c1">.8.9</span>
  [<span class="pl-c1">31</span>c24e10] <span class="pl-k">+</span> Distributions v0<span class="pl-c1">.16.2</span>
  [<span class="pl-c1">90014</span>a1f] <span class="pl-k">+</span> PDMats v0<span class="pl-c1">.9.4</span>
  [aea672f4] <span class="pl-k">+</span> Phylo v0<span class="pl-c1">.3.2</span>
  [<span class="pl-c1">1</span>fd47b50] <span class="pl-k">+</span> QuadGK v2<span class="pl-c1">.0.0</span>
  [<span class="pl-c1">79098</span>fc4] <span class="pl-k">+</span> Rmath v0<span class="pl-c1">.5.0</span>
  [<span class="pl-c1">276</span>daf66] <span class="pl-k">+</span> SpecialFunctions v0<span class="pl-c1">.7.0</span>
  [<span class="pl-c1">4</span>c63d2b9] <span class="pl-k">+</span> StatsFuns v0<span class="pl-c1">.7.0</span>
  [<span class="pl-c1">0796e94</span>c] <span class="pl-k">+</span> Tokenize v0<span class="pl-c1">.5.2</span>
  [<span class="pl-c1">30578</span>b45] <span class="pl-k">+</span> URIParser v0<span class="pl-c1">.4.0</span>
  [<span class="pl-c1">4607</span>b0f0] <span class="pl-k">+</span> SuiteSparse

(v1<span class="pl-c1">.0</span>) pkg<span class="pl-k">&gt;</span></pre></div>
<p>Note some features are <a href="https://github.com/JuliaLang/julia/issues/30612#issuecomment-451774694">currently broken</a> on the binary release of Julia v1.0.3 for linux. Unfortunately, this appears to be a bug in the Julia release. The current workarounds are to remain on Julia v1.0.2 or to use the Julia <a href="https://julialang.org/downloads/" rel="nofollow">v1.1.0-rc1 release candidate</a>.</p>
<h2><a id="user-content-project-status" class="anchor" aria-hidden="true" href="#project-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Project Status</h2>
<p>The package is tested against the current Julia v1.0 release, but also
the previous v0.6 and v0.7 versions on Linux, macOS, and Windows.</p>
<h2><a id="user-content-contributing-and-questions" class="anchor" aria-hidden="true" href="#contributing-and-questions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contributing and Questions</h2>
<p>Contributions are very welcome, as are feature requests and suggestions.
Please open an <a href="https://github.com/richardreeve/Phylo.jl/issues">issue</a> if you encounter any problems or would
just like to ask a question.</p>
<h2><a id="user-content-summary" class="anchor" aria-hidden="true" href="#summary"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Summary</h2>
<p><strong>Phylo</strong> is a <a href="http://www.julialang.org" rel="nofollow">Julia</a> package that provides
functionality for generating phylogenetic trees to feed into our
<a href="https://github.com/richardreeve/Diversity.jl/">Diversity</a> package to calculate phylogenetic
diversity. <code>Phylo</code> is currently in <em>alpha</em>, and is missing much
functionality that people may desire, so please
<a href="https://github.com/richardreeve/Phylo.jl/issues">raise an issue</a> if/when you find problems or missing
functionality - don't assume that I know! Currently the package can
be used to make trees manually, to generate random trees using the
framework from <code>Distributions</code>, and to read newick and nexus format
trees from files. For instance, to construct a sampler for 5 tip
non-ultrametric trees, and then generate one or two random tree of
that type (the examples below are from the master branch, but work similarly
on the current release):</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Phylo

julia<span class="pl-k">&gt;</span> nu <span class="pl-k">=</span> <span class="pl-c1">Nonultrametric</span>(<span class="pl-c1">5</span>);

julia<span class="pl-k">&gt;</span> tree <span class="pl-k">=</span> <span class="pl-c1">rand</span>(nu)
PolytomousTree{ManyRoots,DataFrames<span class="pl-k">.</span>DataFrame,Dict{String,Any}} with <span class="pl-c1">5</span> tips, <span class="pl-c1">9</span> nodes and <span class="pl-c1">8</span> branches.
Leaf names are tip <span class="pl-c1">1</span>, tip <span class="pl-c1">2</span>, tip <span class="pl-c1">3</span>, tip <span class="pl-c1">4</span> and tip <span class="pl-c1">5</span>


julia<span class="pl-k">&gt;</span> trees <span class="pl-k">=</span> <span class="pl-c1">rand</span>(nu, [<span class="pl-s"><span class="pl-pds">"</span>Tree 1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Tree 2<span class="pl-pds">"</span></span>])
TreeSet with <span class="pl-c1">2</span> trees, each with <span class="pl-c1">5</span> tips.
Tree names are Tree <span class="pl-c1">2</span> and Tree <span class="pl-c1">1</span>

Tree <span class="pl-c1">2</span><span class="pl-k">:</span> PolytomousTree{ManyRoots,DataFrames<span class="pl-k">.</span>DataFrame,Dict{String,Any}} with <span class="pl-c1">5</span> tips, <span class="pl-c1">9</span> nodes and <span class="pl-c1">8</span> branches.
Leaf names are tip <span class="pl-c1">1</span>, tip <span class="pl-c1">2</span>, tip <span class="pl-c1">3</span>, tip <span class="pl-c1">4</span> and tip <span class="pl-c1">5</span>

Tree <span class="pl-c1">1</span><span class="pl-k">:</span> PolytomousTree{ManyRoots,DataFrames<span class="pl-k">.</span>DataFrame,Dict{String,Any}} with <span class="pl-c1">5</span> tips, <span class="pl-c1">9</span> nodes and <span class="pl-c1">8</span> branches.
Leaf names are tip <span class="pl-c1">1</span>, tip <span class="pl-c1">2</span>, tip <span class="pl-c1">3</span>, tip <span class="pl-c1">4</span> and tip <span class="pl-c1">5</span></pre></div>
<p>The code also provides iterators, and filtered iterators over the branches,
nodes, branchnames and nodenames of a tree, though this may soon be superseded
by a simpler strategy.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">collect</span>(<span class="pl-c1">nodeiter</span>(tree))
<span class="pl-c1">9</span><span class="pl-k">-</span>element Array{Node{ManyRoots,String,Branch{ManyRoots,String}},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Node</span><span class="pl-c1">{ManyRoots,String,Branch{ManyRoots,String}}</span>(<span class="pl-s"><span class="pl-pds">"</span>tip 1<span class="pl-pds">"</span></span>, <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">7</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 4<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>tip 1<span class="pl-pds">"</span></span>, <span class="pl-c1">1.1281538707050067</span>), Branch{ManyRoots,String}[])
 <span class="pl-c1">Node</span><span class="pl-c1">{ManyRoots,String,Branch{ManyRoots,String}}</span>(<span class="pl-s"><span class="pl-pds">"</span>tip 2<span class="pl-pds">"</span></span>, <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>tip 2<span class="pl-pds">"</span></span>, <span class="pl-c1">1.4283209045962866</span>), Branch{ManyRoots,String}[])
 <span class="pl-c1">Node</span><span class="pl-c1">{ManyRoots,String,Branch{ManyRoots,String}}</span>(<span class="pl-s"><span class="pl-pds">"</span>tip 3<span class="pl-pds">"</span></span>, <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">4</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>tip 3<span class="pl-pds">"</span></span>, <span class="pl-c1">0.6551342237894014</span>), Branch{ManyRoots,String}[])
 <span class="pl-c1">Node</span><span class="pl-c1">{ManyRoots,String,Branch{ManyRoots,String}}</span>(<span class="pl-s"><span class="pl-pds">"</span>tip 4<span class="pl-pds">"</span></span>, <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>tip 4<span class="pl-pds">"</span></span>, <span class="pl-c1">0.0029623552238387534</span>), Branch{ManyRoots,String}[])
 <span class="pl-c1">Node</span><span class="pl-c1">{ManyRoots,String,Branch{ManyRoots,String}}</span>(<span class="pl-s"><span class="pl-pds">"</span>tip 5<span class="pl-pds">"</span></span>, <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>tip 5<span class="pl-pds">"</span></span>, <span class="pl-c1">0.25029135145968845</span>), Branch{ManyRoots,String}[])
 <span class="pl-c1">Node</span><span class="pl-c1">{ManyRoots,String,Branch{ManyRoots,String}}</span>(<span class="pl-s"><span class="pl-pds">"</span>Node 1<span class="pl-pds">"</span></span>, <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">5</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 3<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Node 1<span class="pl-pds">"</span></span>, <span class="pl-c1">0.3763450182758717</span>), Branch{ManyRoots,String}[<span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>tip 2<span class="pl-pds">"</span></span>, <span class="pl-c1">1.42832</span>), <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>tip 4<span class="pl-pds">"</span></span>, <span class="pl-c1">0.00296236</span>)])
 <span class="pl-c1">Node</span><span class="pl-c1">{ManyRoots,String,Branch{ManyRoots,String}}</span>(<span class="pl-s"><span class="pl-pds">"</span>Node 2<span class="pl-pds">"</span></span>, <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">6</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 3<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Node 2<span class="pl-pds">"</span></span>, <span class="pl-c1">0.20796611994615047</span>), Branch{ManyRoots,String}[<span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>tip 5<span class="pl-pds">"</span></span>, <span class="pl-c1">0.250291</span>), <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">4</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>tip 3<span class="pl-pds">"</span></span>, <span class="pl-c1">0.655134</span>)])
 <span class="pl-c1">Node</span><span class="pl-c1">{ManyRoots,String,Branch{ManyRoots,String}}</span>(<span class="pl-s"><span class="pl-pds">"</span>Node 3<span class="pl-pds">"</span></span>, <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">8</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 4<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Node 3<span class="pl-pds">"</span></span>, <span class="pl-c1">3.5927792827310996</span>), Branch{ManyRoots,String}[<span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">5</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 3<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Node 1<span class="pl-pds">"</span></span>, <span class="pl-c1">0.376345</span>), <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">6</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 3<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Node 2<span class="pl-pds">"</span></span>, <span class="pl-c1">0.207966</span>)])
 <span class="pl-c1">Node</span><span class="pl-c1">{ManyRoots,String,Branch{ManyRoots,String}}</span>(<span class="pl-s"><span class="pl-pds">"</span>Node 4<span class="pl-pds">"</span></span>, <span class="pl-c1">nothing</span>, Branch{ManyRoots,String}[<span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">7</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 4<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>tip 1<span class="pl-pds">"</span></span>, <span class="pl-c1">1.12815</span>), <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-c1">8</span>, <span class="pl-s"><span class="pl-pds">"</span>Node 4<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Node 3<span class="pl-pds">"</span></span>, <span class="pl-c1">3.59278</span>)])

julia<span class="pl-k">&gt;</span> <span class="pl-c1">collect</span>(<span class="pl-c1">nodenamefilter</span>(isroot, tree))
<span class="pl-c1">1</span><span class="pl-k">-</span>element Array{String,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>Node 4<span class="pl-pds">"</span></span></pre></div>
<p>The current main purpose of this package is to provide a framework for
phylogenetics to use in our <a href="https://github.com/richardreeve/Diversity.jl/">Diversity</a> package, and
they will both be adapted as appropriate until both are functioning as
required (though they are currently working together reasonably successfully).</p>
<p>It can also read newick trees either from strings or files:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Phylo

julia<span class="pl-k">&gt;</span> simpletree <span class="pl-k">=</span> <span class="pl-c1">parsenewick</span>(<span class="pl-s"><span class="pl-pds">"</span>((,Tip:1.0)Internal,)Root;<span class="pl-pds">"</span></span>)
PolytomousTree{ManyRoots,DataFrames<span class="pl-k">.</span>DataFrame,Dict{String,Any}} with <span class="pl-c1">3</span> tips, <span class="pl-c1">5</span> nodes and <span class="pl-c1">4</span> branches.
Leaf names are Node <span class="pl-c1">1</span>, Tip and Node <span class="pl-c1">2</span>


julia<span class="pl-k">&gt;</span> <span class="pl-c1">getbranches</span>(simpletree)
Base<span class="pl-k">.</span>ValueIterator <span class="pl-k">for</span> a Dict{Int64,Branch{ManyRoots,String}} with <span class="pl-c1">4</span> entries. Values<span class="pl-k">:</span>
  <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-s"><span class="pl-pds">"</span>Root<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Node 2<span class="pl-pds">"</span></span>, <span class="pl-c1">NaN</span>)
  <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-s"><span class="pl-pds">"</span>Internal<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Node 1<span class="pl-pds">"</span></span>, <span class="pl-c1">NaN</span>)
  <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-s"><span class="pl-pds">"</span>Root<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Internal<span class="pl-pds">"</span></span>, <span class="pl-c1">NaN</span>)
  <span class="pl-c1">Branch</span><span class="pl-c1">{ManyRoots,String}</span>(<span class="pl-s"><span class="pl-pds">"</span>Internal<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Tip<span class="pl-pds">"</span></span>, <span class="pl-c1">1.0</span>)

julia<span class="pl-k">&gt;</span> tree <span class="pl-k">=</span> <span class="pl-c1">open</span>(parsenewick, Phylo<span class="pl-k">.</span><span class="pl-c1">path</span>(<span class="pl-s"><span class="pl-pds">"</span>H1N1.newick<span class="pl-pds">"</span></span>))
PolytomousTree{ManyRoots,DataFrames<span class="pl-k">.</span>DataFrame,Dict{String,Any}} with <span class="pl-c1">507</span> tips, <span class="pl-c1">1013</span> nodes and <span class="pl-c1">1012</span> branches.
Leaf names are <span class="pl-c1">44</span>, <span class="pl-c1">429</span>, <span class="pl-c1">294</span>, <span class="pl-c1">295</span>, <span class="pl-c1">227</span>, <span class="pl-k">...</span> [<span class="pl-c1">501</span> omitted] <span class="pl-k">...</span> and <span class="pl-c1">418</span></pre></div>
<p>And it can read nexus trees from files too:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> ts <span class="pl-k">=</span> <span class="pl-c1">open</span>(parsenexus, Phylo<span class="pl-k">.</span><span class="pl-c1">path</span>(<span class="pl-s"><span class="pl-pds">"</span>H1N1.trees<span class="pl-pds">"</span></span>))
[ Info<span class="pl-k">:</span> Created a tree called <span class="pl-s"><span class="pl-pds">'</span>TREE1<span class="pl-pds">'</span></span>
[ Info<span class="pl-k">:</span> Created a tree called <span class="pl-s"><span class="pl-pds">'</span>TREE2<span class="pl-pds">'</span></span>
TreeSet with <span class="pl-c1">2</span> trees, each with <span class="pl-c1">507</span> tips.
Tree names are TREE2 and TREE1

TREE2<span class="pl-k">:</span> PolytomousTree{ManyRoots,DataFrames<span class="pl-k">.</span>DataFrame,Dict{String,Any}} with <span class="pl-c1">507</span> tips, <span class="pl-c1">1013</span> nodes and <span class="pl-c1">1012</span> branches.
Leaf names are H1N1_A_MIYAGI_3_2000, H1N1_A_PARMA_6_2008, H1N1_A_AKITA_86_2002, H1N1_A_DAKAR_14_1997, H1N1_A_EGYPT_84_2001, <span class="pl-k">...</span> [<span class="pl-c1">501</span> omitted] <span class="pl-k">...</span> and H1N1_A_HONGKONG_2070_1999

TREE1<span class="pl-k">:</span> PolytomousTree{ManyRoots,DataFrames<span class="pl-k">.</span>DataFrame,Dict{String,Any}} with <span class="pl-c1">507</span> tips, <span class="pl-c1">1013</span> nodes and <span class="pl-c1">1012</span> branches.
Leaf names are H1N1_A_MIYAGI_3_2000, H1N1_A_PARMA_6_2008, H1N1_A_AKITA_86_2002, H1N1_A_DAKAR_14_1997, H1N1_A_EGYPT_84_2001, <span class="pl-k">...</span> [<span class="pl-c1">501</span> omitted] <span class="pl-k">...</span> and H1N1_A_HONGKONG_2070_1999

julia<span class="pl-k">&gt;</span> ts[<span class="pl-s"><span class="pl-pds">"</span>TREE1<span class="pl-pds">"</span></span>]
PolytomousTree{ManyRoots,DataFrames<span class="pl-k">.</span>DataFrame,Dict{String,Any}} with <span class="pl-c1">507</span> tips, <span class="pl-c1">1013</span> nodes and <span class="pl-c1">1012</span> branches.
Leaf names are H1N1_A_MIYAGI_3_2000, H1N1_A_PARMA_6_2008, H1N1_A_AKITA_86_2002, H1N1_A_DAKAR_14_1997, H1N1_A_EGYPT_84_2001, <span class="pl-k">...</span> [<span class="pl-c1">501</span> omitted] <span class="pl-k">...</span> and H1N1_A_HONGKONG_2070_1999

julia<span class="pl-k">&gt;</span> <span class="pl-c1">gettreeinfo</span>(ts)
Dict{String,Dict{String,Any}} with <span class="pl-c1">2</span> entries<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>TREE2<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String,Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>lnP<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-k">-</span><span class="pl-c1">1.0</span>)
  <span class="pl-s"><span class="pl-pds">"</span>TREE1<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String,Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>lnP<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">1.0</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">gettreeinfo</span>(ts, <span class="pl-s"><span class="pl-pds">"</span>TREE1<span class="pl-pds">"</span></span>)
Dict{String,Any} with <span class="pl-c1">1</span> entry<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>lnP<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1.0</span></pre></div>
<p>And while we wait for me (or kind <a href="https://github.com/richardreeve/Phylo.jl/pulls">contributors</a>!) to fill out
the other extensive functionality that many phylogenetics packages
have in other languages, the other important feature that it offers is
a fully(?)-functional interface to R, allowing any existing R library
functions to be carried out on julia trees, and trees to be read from
disk and written using R helper functions. Naturally the medium-term
plan is to fill in as many of these gaps as possible in Julia, so the R interface does not make RCall a dependency of the package (we use the
<code>Requires</code> package to avoid dependencies). Instead, if you want to use
the R interface you just need to use both packages:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Phylo

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> RCall
Creating Phylo RCall interface<span class="pl-k">...</span>

R<span class="pl-k">&gt;</span> <span class="pl-c1">library</span>(ape)</pre></div>
<p>You can then translate back and forth using <code>rcopy</code> on
R <code>phylo</code> objects, and <code>RObject</code> constructors on julia <code>NamedTree</code>
types to keep them in Julia or <code>@rput</code> to move the object into R:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> rt <span class="pl-k">=</span> <span class="pl-c1">rcall</span>(<span class="pl-c1">:rtree</span>, <span class="pl-c1">10</span>)
RObject{VecSxp}

Phylogenetic tree with <span class="pl-c1">10</span> tips and <span class="pl-c1">9</span> internal nodes.

Tip labels<span class="pl-k">:</span>
	t3, t5, t8, t1, t10, t9, <span class="pl-k">...</span>

Rooted; includes branch lengths.


julia<span class="pl-k">&gt;</span> jt <span class="pl-k">=</span> <span class="pl-c1">rcopy</span>(NamedTree, rt)
PolytomousTree{ManyRoots,DataFrames<span class="pl-k">.</span>DataFrame,Dict{String,Any}} with <span class="pl-c1">10</span> tips, <span class="pl-c1">19</span> nodes and <span class="pl-c1">18</span> branches.
Leaf names are t3, t5, t8, t1, t10, <span class="pl-k">...</span> [<span class="pl-c1">4</span> omitted] <span class="pl-k">...</span> and t7

julia<span class="pl-k">&gt;</span> rjt <span class="pl-k">=</span> <span class="pl-c1">RObject</span>(jt); <span class="pl-c"><span class="pl-c">#</span> manually translate it back to R</span>

R<span class="pl-k">&gt;</span> all<span class="pl-k">.</span><span class="pl-c1">equal</span>(<span class="pl-k">$</span>rjt, <span class="pl-k">$</span>rt)
[<span class="pl-c1">1</span>] TRUE

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@rput</span> rt; <span class="pl-c"><span class="pl-c">#</span> Or use macros to pass R object back to R</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@rput</span> jt; <span class="pl-c"><span class="pl-c">#</span> And automatically translate jt back to R</span>

R<span class="pl-k">&gt;</span> jt

Phylogenetic tree with <span class="pl-c1">10</span> tips and <span class="pl-c1">9</span> internal nodes.

Tip labels<span class="pl-k">:</span>
	t3, t5, t8, t1, t10, t9, <span class="pl-k">...</span>

Rooted; includes branch lengths.

R<span class="pl-k">&gt;</span> all<span class="pl-k">.</span><span class="pl-c1">equal</span>(rt, jt) <span class="pl-c"><span class="pl-c">#</span> check no damage in translations</span>
[<span class="pl-c1">1</span>] TRUE</pre></div>
<p>For the time being the code will only work with rooted trees
with named tips and branch lengths. If there's <a href="https://github.com/richardreeve/Phylo.jl/issues">demand</a>
for other types of trees, I'll look into it.</p>
</article></div>