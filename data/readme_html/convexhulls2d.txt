<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-convexhulls2d" class="anchor" aria-hidden="true" href="#convexhulls2d"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ConvexHulls2d</h1>
<p dir="auto"><a href="https://jw3126.github.io/ConvexHulls2d.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://jw3126.github.io/ConvexHulls2d.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/jw3126/ConvexHulls2d.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/jw3126/ConvexHulls2d.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/jw3126/ConvexHulls2d.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8816649950fe1bd115f7d40993f20a91e8c15356ced7bae42b2a49387e6978f9/68747470733a2f2f636f6465636f762e696f2f67682f6a77333132362f436f6e76657848756c6c7332642e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/jw3126/ConvexHulls2d.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Zero dependency convex hulls in 2d.</p>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ConvexHulls2d
pts = [randn(2) for _ in 1:50]
h = CH.ConvexHull(pts)
CH.area(h)
CH.circumference(h)
CH.vertices(h) # corner points that span the convex hull
CH.indices(h)  # indices of the corner points as elements of pts

using GLMakie # requires &gt;= julia 1.9

fap = scatter(first.(pts), last.(pts), label=&quot;points&quot;, color=:blue)
lines!(h, label=&quot;ConvexHull&quot;, color=:red)
scatter!(h, label=&quot;vertices&quot;, color=:red)
axislegend()
fap"><pre><span class="pl-k">using</span> ConvexHulls2d
pts <span class="pl-k">=</span> [<span class="pl-c1">randn</span>(<span class="pl-c1">2</span>) <span class="pl-k">for</span> _ <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">50</span>]
h <span class="pl-k">=</span> CH<span class="pl-k">.</span><span class="pl-c1">ConvexHull</span>(pts)
CH<span class="pl-k">.</span><span class="pl-c1">area</span>(h)
CH<span class="pl-k">.</span><span class="pl-c1">circumference</span>(h)
CH<span class="pl-k">.</span><span class="pl-c1">vertices</span>(h) <span class="pl-c"><span class="pl-c">#</span> corner points that span the convex hull</span>
CH<span class="pl-k">.</span><span class="pl-c1">indices</span>(h)  <span class="pl-c"><span class="pl-c">#</span> indices of the corner points as elements of pts</span>

<span class="pl-k">using</span> GLMakie <span class="pl-c"><span class="pl-c">#</span> requires &gt;= julia 1.9</span>

fap <span class="pl-k">=</span> <span class="pl-c1">scatter</span>(<span class="pl-c1">first</span>.(pts), <span class="pl-c1">last</span>.(pts), label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>points<span class="pl-pds">"</span></span>, color<span class="pl-k">=</span><span class="pl-c1">:blue</span>)
<span class="pl-c1">lines!</span>(h, label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>ConvexHull<span class="pl-pds">"</span></span>, color<span class="pl-k">=</span><span class="pl-c1">:red</span>)
<span class="pl-c1">scatter!</span>(h, label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>vertices<span class="pl-pds">"</span></span>, color<span class="pl-k">=</span><span class="pl-c1">:red</span>)
<span class="pl-c1">axislegend</span>()
fap</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/7261506/221288722-fda37e04-a452-428b-ba0a-0aff1352dbc3.png"><img src="https://user-images.githubusercontent.com/7261506/221288722-fda37e04-a452-428b-ba0a-0aff1352dbc3.png" alt="image" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Alternatives</h1>
<p dir="auto">There are many packages in julia capapable of computing convex hulls. Some examples are:</p>
<ul dir="auto">
<li><a href="https://github.com/JuliaReach/LazySets.jl">LazySet</a></li>
<li><a href="https://github.com/JuliaPolyhedra/QHull.jl">QHull</a></li>
<li><a href="https://github.com/JuliaGeo/LibGEOS.jl">LibGEOS</a></li>
<li><a href="https://juliageometry.github.io/Meshes.jl/stable/algorithms/hulls.html" rel="nofollow">Meshes</a></li>
</ul>
<p dir="auto">All of these packages offer much more than this package, however they are more heavy depependencies.
Also this package is faster then most of them for small to medium numbers of points.</p>
</article></div>