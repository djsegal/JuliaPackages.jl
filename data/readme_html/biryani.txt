<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-biryani" class="anchor" aria-hidden="true" href="#biryani"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Biryani</h1>
<p>A data conversion and validation toolbox, written in Julia.</p>
<p><a href="https://travis-ci.org/eraviart/Biryani.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c5336b167b1c0f0725d59b9aa835c70c4baba59d/68747470733a2f2f7472617669732d63692e6f72672f65726176696172742f42697279616e692e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/eraviart/Biryani.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/r/eraviart/Biryani.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/be4f1720ccc283b1cf4ad74dafb3013dfb59b670/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f65726176696172742f42697279616e692e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/eraviart/Biryani.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=Biryani&amp;ver=release" rel="nofollow"><img src="https://camo.githubusercontent.com/f73f9d3de2083e2e1e929ebe643095c3ef5d2dcb/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f42697279616e695f72656c656173652e737667" alt="Biryani" data-canonical-src="http://pkg.julialang.org/badges/Biryani_release.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quickstart</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Biryani<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Biryani</pre></div>
<h2><a id="user-content-usage-examples" class="anchor" aria-hidden="true" href="#usage-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage Examples</h2>
<h3><a id="user-content-example-1-email-validator" class="anchor" aria-hidden="true" href="#example-1-email-validator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example 1: Email validator</h3>
<p>Before starting a conversion or validation, the value to convert must be wrapped in a <code>Convertible</code> object. A <code>Convertible</code> contains 3 fields:</p>
<ul>
<li>The value</li>
<li>A conversion context</li>
<li>An error</li>
</ul>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> convertible <span class="pl-k">=</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>John@DOE.name<span class="pl-pds">"</span></span>)
<span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>John@DOE.name<span class="pl-pds">"</span></span>,<span class="pl-c1">EmptyContext</span>(),<span class="pl-c1">nothing</span>)</pre></div>
<p>Every converter accepts a <code>Convertible</code> as argument and returns another Convertible:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">input_to_email</span>(convertible)
<span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>john@doe.name<span class="pl-pds">"</span></span>,<span class="pl-c1">EmptyContext</span>(),<span class="pl-c1">nothing</span>)</pre></div>
<p>Operations can be chained using the <code>|&gt;</code> operator:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>John@DOE.name<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> input_to_email
<span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>john@doe.name<span class="pl-pds">"</span></span>,<span class="pl-c1">EmptyContext</span>(),<span class="pl-c1">nothing</span>)</pre></div>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>   <span class="pl-cce">\n</span>  <span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> input_to_email
<span class="pl-c1">Convertible</span>(<span class="pl-c1">nothing</span>,<span class="pl-c1">EmptyContext</span>(),<span class="pl-c1">nothing</span>)</pre></div>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>John.DOE.name<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> input_to_email
<span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>john.doe.name<span class="pl-pds">"</span></span>,<span class="pl-c1">EmptyContext</span>(),<span class="pl-s"><span class="pl-pds">"</span>An email must contain exactly one <span class="pl-cce">\"</span>@<span class="pl-cce">\"</span>.<span class="pl-pds">"</span></span>)</pre></div>
<p>The value of a convertible can be extracted using the <code>to_value</code> function:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>John@DOE.name<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> input_to_email <span class="pl-k">|&gt;</span> to_value
<span class="pl-s"><span class="pl-pds">"</span>john@doe.name<span class="pl-pds">"</span></span></pre></div>
<p>When conversion has failed (the convertible has an <code>error</code> field), <code>to_value</code> throws an exception instead of returning the value:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>John.DOE.name<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> input_to_email <span class="pl-k">|&gt;</span> to_value
ERROR<span class="pl-k">:</span> An email must contain exactly one <span class="pl-s"><span class="pl-pds">"</span>@<span class="pl-pds">"</span></span>.
Value<span class="pl-k">:</span> john<span class="pl-k">.</span>doe<span class="pl-k">.</span>name
 <span class="pl-k">in</span> to_value at <span class="pl-k">...</span><span class="pl-k">/</span>Biryani<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">571</span>
 <span class="pl-k">in</span> <span class="pl-k">|&gt;</span> at <span class="pl-k">./</span>operators<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">178</span></pre></div>
<p>When you don't want an exception to be thrown, use the <code>to_value_error</code> function instead of <code>to_value</code>. It returns a couple <code>(value, error)</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> value, error <span class="pl-k">=</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>John@DOE.name<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> input_to_email <span class="pl-k">|&gt;</span> to_value_error
(<span class="pl-s"><span class="pl-pds">"</span>john@doe.name<span class="pl-pds">"</span></span>,<span class="pl-c1">nothing</span>)

julia<span class="pl-k">&gt;</span> value, error <span class="pl-k">=</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>John.DOE.name<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> input_to_email <span class="pl-k">|&gt;</span> to_value_error
(<span class="pl-s"><span class="pl-pds">"</span>john.doe.name<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>An email must contain exactly one <span class="pl-cce">\"</span>@<span class="pl-cce">\"</span>.<span class="pl-pds">"</span></span>)</pre></div>
<h3><a id="user-content-example-2-required-email-validator" class="anchor" aria-hidden="true" href="#example-2-required-email-validator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example 2: Required email validator</h3>
<p>Converters can be combined together to form more complex converters:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>John@DOE.name<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> input_to_email <span class="pl-k">|&gt;</span> require <span class="pl-k">|&gt;</span> to_value_error
(<span class="pl-s"><span class="pl-pds">"</span>john@doe.name<span class="pl-pds">"</span></span>,<span class="pl-c1">nothing</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>   <span class="pl-cce">\n</span>  <span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> input_to_email <span class="pl-k">|&gt;</span> require <span class="pl-k">|&gt;</span> to_value_error
(<span class="pl-c1">nothing</span>,<span class="pl-s"><span class="pl-pds">"</span>Missing value.<span class="pl-pds">"</span></span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>John.DOE.name<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> input_to_email <span class="pl-k">|&gt;</span> require <span class="pl-k">|&gt;</span> to_value_error
(<span class="pl-s"><span class="pl-pds">"</span>john.doe.name<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>An email must contain exactly one <span class="pl-cce">\"</span>@<span class="pl-cce">\"</span>.<span class="pl-pds">"</span></span>)</pre></div>
<p>The <code>pipe</code> converter can also be used to chain conversions:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>John@DOE.name<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">pipe</span>(input_to_email, require) <span class="pl-k">|&gt;</span> to_value_error
(<span class="pl-s"><span class="pl-pds">"</span>john@doe.name<span class="pl-pds">"</span></span>,<span class="pl-c1">nothing</span>)</pre></div>
<p>You can easily create new converters by combining existing ones:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> input_to_required_email <span class="pl-k">=</span> <span class="pl-c1">pipe</span>(input_to_email, require)
(anonymous <span class="pl-k">function</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>John@DOE.name<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> input_to_required_email <span class="pl-k">|&gt;</span> to_value_error
(<span class="pl-s"><span class="pl-pds">"</span>john@doe.name<span class="pl-pds">"</span></span>,<span class="pl-c1">nothing</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">Convertible</span>(<span class="pl-s"><span class="pl-pds">"</span>John.DOE.name<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> input_to_required_email <span class="pl-k">|&gt;</span> to_value_error
(<span class="pl-s"><span class="pl-pds">"</span>john.doe.name<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>An email must contain exactly one <span class="pl-cce">\"</span>@<span class="pl-cce">\"</span>.<span class="pl-pds">"</span></span>)</pre></div>
<h3><a id="user-content-example-3-web-form-validator" class="anchor" aria-hidden="true" href="#example-3-web-form-validator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example 3: Web form validator</h3>
<p>A sample validator for a web form containing the following fields:</p>
<ul>
<li>Username</li>
<li>Password (twice)</li>
<li>Email</li>
</ul>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> validate_form <span class="pl-k">=</span> <span class="pl-c1">struct</span>(
         [
           <span class="pl-s"><span class="pl-pds">"</span>username<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">pipe</span>(strip, require),
           <span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">pipe</span>(
             <span class="pl-c1">test</span>(passwords <span class="pl-k">-&gt;</span> <span class="pl-c1">length</span>(passwords) <span class="pl-k">==</span> <span class="pl-c1">2</span> <span class="pl-k">&amp;&amp;</span> passwords[<span class="pl-c1">1</span>] <span class="pl-k">==</span> passwords[<span class="pl-c1">2</span>], error <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Password mismatch.<span class="pl-pds">"</span></span>),
             <span class="pl-c1">call</span>(passwords <span class="pl-k">-&gt;</span> passwords[<span class="pl-c1">1</span>]),
           ),
           <span class="pl-s"><span class="pl-pds">"</span>email<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> input_to_email,
         ],
       )

julia<span class="pl-k">&gt;</span> input_data <span class="pl-k">=</span> [
         <span class="pl-s"><span class="pl-pds">"</span>username<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>   John Doe<span class="pl-cce">\n</span>  <span class="pl-pds">"</span></span>,
         <span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">"</span>secret<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>secret<span class="pl-pds">"</span></span>],
         <span class="pl-s"><span class="pl-pds">"</span>email<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>John@DOE.name<span class="pl-pds">"</span></span>,
       ]

julia<span class="pl-k">&gt;</span> result, errors <span class="pl-k">=</span> <span class="pl-c1">Convertible</span>(input_data) <span class="pl-k">|&gt;</span> validate_form <span class="pl-k">|&gt;</span> to_value_error
([<span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>secret<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>username<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>John Doe<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>email<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>john@doe.name<span class="pl-pds">"</span></span>],<span class="pl-c1">nothing</span>)</pre></div>
<p><strong>Note:</strong> The same validation using the classic composition of functions instead of <code>|&gt;</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> result, errors <span class="pl-k">=</span> <span class="pl-c1">to_value_error</span>(<span class="pl-c1">validate_form</span>(<span class="pl-c1">Convertible</span>(input_data)))
([<span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>secret<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>username<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>John Doe<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>email<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>john@doe.name<span class="pl-pds">"</span></span>],<span class="pl-c1">nothing</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">to_value_error</span>(<span class="pl-c1">validate_form</span>(<span class="pl-c1">Convertible</span>(
         [
           <span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">"</span>secret<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>other secret<span class="pl-pds">"</span></span>],
           <span class="pl-s"><span class="pl-pds">"</span>email<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>   John@DOE.name<span class="pl-cce">\n</span>  <span class="pl-pds">"</span></span>,
         ],
       )))
([<span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>ASCIIString[<span class="pl-s"><span class="pl-pds">"</span>secret<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>other secret<span class="pl-pds">"</span></span>],<span class="pl-s"><span class="pl-pds">"</span>username<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">nothing</span>,<span class="pl-s"><span class="pl-pds">"</span>email<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>john@doe.name<span class="pl-pds">"</span></span>],[<span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Password mismatch.<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>username<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Missing value.<span class="pl-pds">"</span></span>])</pre></div>
</article></div>