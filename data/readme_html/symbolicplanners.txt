<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-symbolicplannersjl" class="anchor" aria-hidden="true" href="#symbolicplannersjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SymbolicPlanners.jl</h1>
<p dir="auto"><a href="https://juliaplanners.github.io/SymbolicPlanners.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Documentation (Stable)" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://juliaplanners.github.io/SymbolicPlanners.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="Documentation (Latest)" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/65af74fc4213a3b2f36779a2c0d95bf3b84e04162513e5fabc7f4ca56c03f06f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f4a756c6961506c616e6e6572732f53796d626f6c6963506c616e6e6572732e6a6c2f43492e796d6c3f6272616e63683d6d6173746572"><img src="https://camo.githubusercontent.com/65af74fc4213a3b2f36779a2c0d95bf3b84e04162513e5fabc7f4ca56c03f06f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f4a756c6961506c616e6e6572732f53796d626f6c6963506c616e6e6572732e6a6c2f43492e796d6c3f6272616e63683d6d6173746572" alt="GitHub Workflow Status" data-canonical-src="https://img.shields.io/github/actions/workflow/status/JuliaPlanners/SymbolicPlanners.jl/CI.yml?branch=master" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/4282bf04d805db2dd153c5e42fbce61fc93aa3a5be553048165d8cfe73c9d15c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f4a756c6961506c616e6e6572732f53796d626f6c6963506c616e6e6572732e6a6c"><img src="https://camo.githubusercontent.com/4282bf04d805db2dd153c5e42fbce61fc93aa3a5be553048165d8cfe73c9d15c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f4a756c6961506c616e6e6572732f53796d626f6c6963506c616e6e6572732e6a6c" alt="GitHub release (latest SemVer)" data-canonical-src="https://img.shields.io/github/v/release/JuliaPlanners/SymbolicPlanners.jl" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/2949928513c753718942aeba40b7c63ff765afd59fe8a852da804f1249ceaff4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4a756c6961506c616e6e6572732f53796d626f6c6963506c616e6e6572732e6a6c3f636f6c6f723d6c6967687467726579"><img src="https://camo.githubusercontent.com/2949928513c753718942aeba40b7c63ff765afd59fe8a852da804f1249ceaff4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4a756c6961506c616e6e6572732f53796d626f6c6963506c616e6e6572732e6a6c3f636f6c6f723d6c6967687467726579" alt="License" data-canonical-src="https://img.shields.io/github/license/JuliaPlanners/SymbolicPlanners.jl?color=lightgrey" style="max-width: 100%;"></a></p>
<p dir="auto">Symbolic planners for problems and domains specified in <a href="https://github.com/JuliaPlanners/PDDL.jl">PDDL</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Make sure <a href="https://github.com/JuliaPlanners/PDDL.jl">PDDL.jl</a> is installed. For the stable version, press <code>]</code> to enter the Julia package manager REPL, then run:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="add SymbolicPlanners"><pre class="notranslate"><code>add SymbolicPlanners
</code></pre></div>
<p dir="auto">For the latest development version, run:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="add https://github.com/JuliaPlanners/SymbolicPlanners.jl"><pre class="notranslate"><code>add https://github.com/JuliaPlanners/SymbolicPlanners.jl
</code></pre></div>
<h2 dir="auto"><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h2>
<ul dir="auto">
<li>Forward state-space planning (A*, BFS, etc.)</li>
<li>Backward (i.e. regression) planning</li>
<li>Policy-based planning (RTDP, RTHS, MCTS, etc.)</li>
<li>Relaxed-distance heuristics (Manhattan, <em>h</em><sub>add</sub>, <em>h</em><sub>max</sub>, etc.)</li>
<li>Policy and plan simulation</li>
<li>Modular framework for goal, reward and cost specifications</li>
<li>Support for PDDL domains with numeric fluents and custom datatypes</li>
</ul>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">A simple usage example is shown below. More information can be found in the <a href="https://juliaplanners.github.io/SymbolicPlanners.jl/dev" rel="nofollow">documentation</a>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using PDDL, PlanningDomains, SymbolicPlanners

# Load Blocksworld domain and problem
domain = load_domain(:blocksworld)
problem = load_problem(:blocksworld, &quot;problem-4&quot;)

# Construct initial state from domain and problem
state = initstate(domain, problem)

# Construct goal specification that requires minimizing plan length
spec = MinStepsGoal(problem)

# Construct A* planner with h_add heuristic
planner = AStarPlanner(HAdd())

# Find a solution given the initial state and specification
sol = planner(domain, state, spec)"><pre><span class="pl-k">using</span> PDDL, PlanningDomains, SymbolicPlanners

<span class="pl-c"><span class="pl-c">#</span> Load Blocksworld domain and problem</span>
domain <span class="pl-k">=</span> <span class="pl-c1">load_domain</span>(<span class="pl-c1">:blocksworld</span>)
problem <span class="pl-k">=</span> <span class="pl-c1">load_problem</span>(<span class="pl-c1">:blocksworld</span>, <span class="pl-s"><span class="pl-pds">"</span>problem-4<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Construct initial state from domain and problem</span>
state <span class="pl-k">=</span> <span class="pl-c1">initstate</span>(domain, problem)

<span class="pl-c"><span class="pl-c">#</span> Construct goal specification that requires minimizing plan length</span>
spec <span class="pl-k">=</span> <span class="pl-c1">MinStepsGoal</span>(problem)

<span class="pl-c"><span class="pl-c">#</span> Construct A* planner with h_add heuristic</span>
planner <span class="pl-k">=</span> <span class="pl-c1">AStarPlanner</span>(<span class="pl-c1">HAdd</span>())

<span class="pl-c"><span class="pl-c">#</span> Find a solution given the initial state and specification</span>
sol <span class="pl-k">=</span> <span class="pl-c1">planner</span>(domain, state, spec)</pre></div>
<h2 dir="auto"><a id="user-content-planners" class="anchor" aria-hidden="true" href="#planners"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Planners</h2>
<ul dir="auto">
<li><a href="src/planners/bfs.jl">Forward Breadth-First Search</a></li>
<li><a href="src/planners/forward.jl">Forward Heuristic Search (A*, Greedy, etc.)</a></li>
<li><a href="src/planners/backward.jl">Backward Heuristic Search (A*, Greedy, etc.)</a></li>
<li><a href="src/planners/bidirectional.jl">Bidirectional Heuristic Search</a></li>
<li><a href="src/planners/rtdp.jl">Real Time Dynamic Programming (RTDP)</a></li>
<li><a href="src/planners/rths.jl">Real Time Heuristic Search (RTHS)</a></li>
<li><a href="src/planners/mcts.jl">Monte Carlo Tree Search (MCTS)</a></li>
<li><a href="src/planners/external.jl">FastDownward, Pyperplan, and ENHSP wrappers</a></li>
</ul>
<h2 dir="auto"><a id="user-content-heuristics" class="anchor" aria-hidden="true" href="#heuristics"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Heuristics</h2>
<ul dir="auto">
<li><a href="src/heuristics/basic.jl">Goal Count</a>: counts the number of unsatisfied goals</li>
<li><a href="src/heuristics/metric.jl">Manhattan</a>: L<sub>1</sub> distance for arbitrary numeric fluents</li>
<li><a href="src/heuristics/metric.jl">Euclidean</a>: L<sub>2</sub> distance for arbitrary numeric fluents</li>
<li><a href="src/heuristics/hsp.jl">HSP heuristics</a>: <em>h</em><sub>add</sub>, <em>h</em><sub>max</sub>, etc.</li>
<li><a href="src/heuristics/hsp.jl">HSPr heuristics</a>: the above, but for backward search</li>
<li><a href="src/heuristics/ff.jl">FF heuristic</a>: length of a relaxed plan, used by the Fast-Forward planner</li>
</ul>
<h2 dir="auto"><a id="user-content-specifications" class="anchor" aria-hidden="true" href="#specifications"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Specifications</h2>
<ul dir="auto">
<li><a href="src/specifications/min_steps.jl">MinStepsGoal</a>: Minimize steps to reach a (symbolically-defined) goal</li>
<li><a href="src/specifications/min_metric.jl">MinMetricGoal</a>: Minimize a metric formula when reaching a goal</li>
<li><a href="src/specifications/min_metric.jl">MaxMetricGoal</a>: Maximize a metric formula when reaching a goal</li>
<li><a href="src/specifications/state_constrained.jl">StateConstrainedGoal</a>: Adds state constraints that must hold throughout a plan</li>
<li><a href="src/specifications/goal_reward.jl">GoalReward</a>: Achieve reward upon reaching a goal state</li>
<li><a href="src/specifications/goal_reward.jl">BonusGoalReward</a>: Adds goal reward to an existing specification</li>
<li><a href="src/specifications/goal_reward.jl">MultiGoalReward</a>: Achieve separate rewards for achieving separate goals</li>
<li><a href="src/specifications/discounted.jl">DiscountedReward</a>: Discounts the rewards or costs of an existing specification</li>
</ul>
<h2 dir="auto"><a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Performance</h2>
<p dir="auto">After Julia's JIT compilation, and using the same search algorithm (A*) and search heuristic (<em>h</em><sub>add</sub>), SymbolicPlanners.jl with the <a href="https://github.com/JuliaPlanners/PDDL.jl">PDDL.jl</a> compiler is (as of February 2022):</p>
<ul dir="auto">
<li>10 to 50 times as fast as <a href="https://github.com/aibasel/pyperplan">Pyperplan</a>,</li>
<li>0.1 to 1.2 times as fast as <a href="https://www.fast-downward.org/" rel="nofollow">FastDownward</a>,</li>
<li>0.7 to 36 times as fast as <a href="https://sites.google.com/view/enhsp/" rel="nofollow">ENHSP</a> on numeric domains without action costs.</li>
</ul>
<p dir="auto">A comparison on domains and problems from the 2000 and 2002 International Planning Competitions is shown below. Runtimes are relative to SymbolicPlanners.jl using the PDDL.jl compiler. In each cell, we report the first quartile (Q1), median (M), and third quartile (Q3) across solved problems. Experiment code is <a href="https://github.com/JuliaPlanners/SymbolicPlanners.jl/tree/experiments/experiments">available here</a>.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="assets/runtime-comparison.png"><img src="assets/runtime-comparison.png" alt="Runtime comparison for SymbolicPlanners.jl vs. Pyperplan, FastDownward and ENHSP" style="max-width: 100%;"></a></p>
</article></div>