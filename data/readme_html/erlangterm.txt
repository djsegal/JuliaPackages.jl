<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-erlangterm" class="anchor" aria-hidden="true" href="#erlangterm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ErlangTerm</h1>
<p><em>(De-)serialize Julia data in Erlang's external term format</em></p>
<p><a href="https://travis-ci.org/helgee/ErlangTerm.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ed703b3ba983f7a62fa2ee9008fe81aed4b8a103/68747470733a2f2f7472617669732d63692e6f72672f68656c6765652f45726c616e675465726d2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status Unix" data-canonical-src="https://travis-ci.org/helgee/ErlangTerm.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://ci.appveyor.com/project/helgee/erlangterm-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/aa3f11dba666272fbcf4d708eeb295ed7833b5f1/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f673076787533393439743767763734343f7376673d74727565" alt="Build Status Windows" data-canonical-src="https://ci.appveyor.com/api/projects/status/g0vxu3949t7gv744?svg=true" style="max-width:100%;"></a> <a href="http://codecov.io/github/helgee/ErlangTerm.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/326ad69b80ee9b74a21b86e79a6cc7df84d5365e/687474703a2f2f636f6465636f762e696f2f6769746875622f68656c6765652f45726c616e675465726d2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Codecov" data-canonical-src="http://codecov.io/github/helgee/ErlangTerm.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p><strong>ErlangTerm.jl</strong> teaches Julia to talk to BEAM-based languages (Erlang, Elixir, ...) in their native tongue,
the <a href="http://erlang.org/doc/apps/erts/erl_ext_dist.html" rel="nofollow">Erlang external term format</a>.
The following data types are supported:</p>
<ul>
<li><code>Int</code> &lt;-&gt; <code>Integer</code></li>
<li><code>Float64</code> &lt;-&gt; <code>Float</code></li>
<li><code>Symbol</code> &lt;-&gt; <code>Atom</code></li>
<li><code>Tuple</code> &lt;-&gt; <code>Tuple</code></li>
<li><code>Array</code> &lt;-&gt; <code>List</code></li>
<li><code>Dict</code> &lt;-&gt; <code>Map</code></li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>The package can be installed through Julia's package manager:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>ErlangTerm<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ErlangTerm

<span class="pl-c"><span class="pl-c">#</span> Take a Julia data structure...</span>
d <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:erlang</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:id</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>, <span class="pl-c1">:greeting</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Hello, Erlang!<span class="pl-pds">"</span></span>),
         <span class="pl-c1">:elixir</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span>(<span class="pl-c1">:id</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>, <span class="pl-c1">:greeting</span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Hello, Elixir!<span class="pl-pds">"</span></span>))

<span class="pl-c"><span class="pl-c">#</span> ...serialize it...</span>
binary <span class="pl-k">=</span> <span class="pl-c1">serialize</span>(d)

<span class="pl-c"><span class="pl-c">#</span> ...and deserialize it!</span>
d1 <span class="pl-k">=</span> <span class="pl-c1">deserialize</span>(binary)</pre></div>
</article></div>