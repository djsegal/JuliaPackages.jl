<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-nlpmodels" class="anchor" aria-hidden="true" href="#nlpmodels"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>NLPModels</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>CI</strong></th>
<th align="center"><strong>Coverage</strong></th>
<th align="center"><strong>Release</strong></th>
<th align="center"><strong>DOI</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://JuliaSmoothOptimizers.github.io/NLPModels.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="docs-stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://JuliaSmoothOptimizers.github.io/NLPModels.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/ef2963f072da1a61a3df68686ccef86709fad9d7007c9ae6d734e85ef0a6ba7c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d707572706c652e737667" alt="docs-dev" data-canonical-src="https://img.shields.io/badge/docs-dev-purple.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/JuliaSmoothOptimizers/NLPModels.jl/actions"><img src="https://github.com/JuliaSmoothOptimizers/NLPModels.jl/workflows/CI/badge.svg?branch=main" alt="build-gh" style="max-width: 100%;"></a> <a href="https://cirrus-ci.com/github/JuliaSmoothOptimizers/NLPModels.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8e420317876cccba45a558986fa2362ff0e0b4620395487a64c0b180c35033f6/68747470733a2f2f696d672e736869656c64732e696f2f6369727275732f6769746875622f4a756c6961536d6f6f74684f7074696d697a6572732f4e4c504d6f64656c732e6a6c3f6c6f676f3d4369727275732532304349" alt="build-cirrus" data-canonical-src="https://img.shields.io/cirrus/github/JuliaSmoothOptimizers/NLPModels.jl?logo=Cirrus%20CI" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/JuliaSmoothOptimizers/NLPModels.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/dafc6991ac717397678aeb23c1a840700e036cc3226cb234264e619412fc64e0/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961536d6f6f74684f7074696d697a6572732f4e4c504d6f64656c732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaSmoothOptimizers/NLPModels.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/JuliaSmoothOptimizers/NLPModels.jl/releases"><img src="https://camo.githubusercontent.com/05ed7e01c35ecc5f73c5e30f83a29cdd77781d7a3c56f2b2a57b98470e4176f1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f4a756c6961536d6f6f74684f7074696d697a6572732f4e4c504d6f64656c732e6a6c2e7376673f7374796c653d666c61742d737175617265" alt="release" data-canonical-src="https://img.shields.io/github/v/release/JuliaSmoothOptimizers/NLPModels.jl.svg?style=flat-square" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://doi.org/10.5281/zenodo.2558627" rel="nofollow"><img src="https://camo.githubusercontent.com/eff53e4fbba98b4bf5a685e6dd886fd79a211db7a16fbe08611a2cae24861892/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e323535383632372e737667" alt="doi" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.2558627.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">This package provides general guidelines to represent non-linear programming (NLP)
problems in Julia and a standardized API to evaluate the functions and
their derivatives. The main objective is to be able to rely on that API when
designing optimization solvers in Julia.</p>
<h2 dir="auto"><a id="user-content-how-to-cite" class="anchor" aria-hidden="true" href="#how-to-cite"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to Cite</h2>
<p dir="auto">If you use NLPModels.jl in your work, please cite using the format given in <a href="https://github.com/JuliaSmoothOptimizers/NLPModels.jl/blob/main/CITATION.bib">CITATION.bib</a>.</p>
<h2 dir="auto"><a id="user-content-optimization-problems" class="anchor" aria-hidden="true" href="#optimization-problems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Optimization Problems</h2>
<p dir="auto">Optimization problems are represented by an instance of (a subtype of) <code>AbstractNLPModel</code>.
Such instances are composed of</p>
<ul dir="auto">
<li>an instance of <code>NLPModelMeta</code>, which provides information about the problem, including the number of variables, constraints, bounds on the variables, etc.</li>
<li>other data specific to the provenance of the problem.</li>
</ul>
<p dir="auto">See the
<a href="https://JuliaSmoothOptimizers.github.io/NLPModels.jl/dev" rel="nofollow">documentation</a> for
details on the models and the API.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add NLPModels"><pre>pkg<span class="pl-k">&gt;</span> add NLPModels</pre></div>
<h2 dir="auto"><a id="user-content-models" class="anchor" aria-hidden="true" href="#models"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Models</h2>
<p dir="auto">This package provides no models, although it allows the definition of manually written models.</p>
<p dir="auto">Check the list of packages that define models in <a href="https://JuliaSmoothOptimizers.github.io/NLPModels.jl/dev/models" rel="nofollow">this page of the docs</a></p>
<h2 dir="auto"><a id="user-content-main-methods" class="anchor" aria-hidden="true" href="#main-methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Main Methods</h2>
<p dir="auto">If <code>model</code> is an instance of an appropriate subtype of <code>AbstractNLPModel</code>, the following methods are normally defined:</p>
<ul dir="auto">
<li><code>obj(model, x)</code>: evaluate <em>f(x)</em>, the objective at <code>x</code></li>
<li><code>cons(model x)</code>: evaluate <em>c(x)</em>, the vector of general constraints at <code>x</code></li>
</ul>
<p dir="auto">The following methods are defined if first-order derivatives are available:</p>
<ul dir="auto">
<li><code>grad(model, x)</code>: evaluate <em>∇f(x)</em>, the objective gradient at <code>x</code></li>
<li><code>jac(model, x)</code>: evaluate <em>J(x)</em>, the Jacobian of <em>c</em> at <code>x</code> as a sparse matrix</li>
</ul>
<p dir="auto">If Jacobian-vector products can be computed more efficiently than by evaluating the Jacobian explicitly, the following methods may be implemented:</p>
<ul dir="auto">
<li><code>jprod(model, x, v)</code>: evaluate the result of the matrix-vector product <em>J(x)⋅v</em></li>
<li><code>jtprod(model, x, u)</code>: evaluate the result of the matrix-vector product <em>J(x)ᵀ⋅u</em></li>
</ul>
<p dir="auto">The following method is defined if second-order derivatives are available:</p>
<ul dir="auto">
<li><code>hess(model, x, y)</code>: evaluate <em>∇²L(x,y)</em>, the Hessian of the Lagrangian at <code>x</code> and <code>y</code></li>
</ul>
<p dir="auto">If Hessian-vector products can be computed more efficiently than by evaluating the Hessian explicitly, the following method may be implemented:</p>
<ul dir="auto">
<li><code>hprod(model, x, v, y)</code>: evaluate the result of the matrix-vector product <em>∇²L(x,y)⋅v</em></li>
</ul>
<p dir="auto">Several in-place variants of the methods above may also be implemented.</p>
<p dir="auto">The complete list of methods that an interface may implement can be found in the documentation.</p>
<h2 dir="auto"><a id="user-content-attributes" class="anchor" aria-hidden="true" href="#attributes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Attributes</h2>
<p dir="auto"><code>NLPModelMeta</code> objects have the following attributes (with <code>S &lt;: AbstractVector</code>):</p>
<table>
<thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Notes</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>nvar</code></td>
<td><code>Int             </code></td>
<td>number of variables</td>
</tr>
<tr>
<td><code>x0  </code></td>
<td><code>S</code></td>
<td>initial guess</td>
</tr>
<tr>
<td><code>lvar</code></td>
<td><code>S</code></td>
<td>vector of lower bounds</td>
</tr>
<tr>
<td><code>uvar</code></td>
<td><code>S</code></td>
<td>vector of upper bounds</td>
</tr>
<tr>
<td><code>ifix</code></td>
<td><code>Vector{Int}</code></td>
<td>indices of fixed variables</td>
</tr>
<tr>
<td><code>ilow</code></td>
<td><code>Vector{Int}</code></td>
<td>indices of variables with lower bound only</td>
</tr>
<tr>
<td><code>iupp</code></td>
<td><code>Vector{Int}</code></td>
<td>indices of variables with upper bound only</td>
</tr>
<tr>
<td><code>irng</code></td>
<td><code>Vector{Int}</code></td>
<td>indices of variables with lower and upper bound (range)</td>
</tr>
<tr>
<td><code>ifree</code></td>
<td><code>Vector{Int}</code></td>
<td>indices of free variables</td>
</tr>
<tr>
<td><code>iinf</code></td>
<td><code>Vector{Int}</code></td>
<td>indices of visibly infeasible bounds</td>
</tr>
<tr>
<td><code>ncon</code></td>
<td><code>Int             </code></td>
<td>total number of general constraints</td>
</tr>
<tr>
<td><code>nlin </code></td>
<td><code>Int             </code></td>
<td>number of linear constraints</td>
</tr>
<tr>
<td><code>nnln</code></td>
<td><code>Int             </code></td>
<td>number of nonlinear general constraints</td>
</tr>
<tr>
<td><code>y0  </code></td>
<td><code>S</code></td>
<td>initial Lagrange multipliers</td>
</tr>
<tr>
<td><code>lcon</code></td>
<td><code>S</code></td>
<td>vector of constraint lower bounds</td>
</tr>
<tr>
<td><code>ucon</code></td>
<td><code>S</code></td>
<td>vector of constraint upper bounds</td>
</tr>
<tr>
<td><code>lin </code></td>
<td><code>Vector{Int}</code></td>
<td>indices of linear constraints</td>
</tr>
<tr>
<td><code>nln</code></td>
<td><code>Vector{Int}</code></td>
<td>indices of nonlinear constraints</td>
</tr>
<tr>
<td><code>jfix</code></td>
<td><code>Vector{Int}</code></td>
<td>indices of equality constraints</td>
</tr>
<tr>
<td><code>jlow</code></td>
<td><code>Vector{Int}</code></td>
<td>indices of constraints of the form c(x) ≥ cl</td>
</tr>
<tr>
<td><code>jupp</code></td>
<td><code>Vector{Int}</code></td>
<td>indices of constraints of the form c(x) ≤ cu</td>
</tr>
<tr>
<td><code>jrng</code></td>
<td><code>Vector{Int}</code></td>
<td>indices of constraints of the form cl ≤ c(x) ≤ cu</td>
</tr>
<tr>
<td><code>jfree</code></td>
<td><code>Vector{Int}</code></td>
<td>indices of "free" constraints (there shouldn't be any)</td>
</tr>
<tr>
<td><code>jinf</code></td>
<td><code>Vector{Int}</code></td>
<td>indices of the visibly infeasible constraints</td>
</tr>
<tr>
<td><code>nnzo</code></td>
<td><code>Int             </code></td>
<td>number of nonzeros in the gradient</td>
</tr>
<tr>
<td><code>nnzj</code></td>
<td><code>Int             </code></td>
<td>number of nonzeros in the sparse Jacobian</td>
</tr>
<tr>
<td><code>nnzh</code></td>
<td><code>Int             </code></td>
<td>number of nonzeros in the sparse Hessian</td>
</tr>
<tr>
<td><code>minimize</code></td>
<td><code>Bool            </code></td>
<td>true if <code>optimize == minimize</code></td>
</tr>
<tr>
<td><code>islp</code></td>
<td><code>Bool            </code></td>
<td>true if the problem is a linear program</td>
</tr>
<tr>
<td><code>name</code></td>
<td><code>String</code></td>
<td>problem name</td>
</tr>
</tbody>
</table>
<h1 dir="auto"><a id="user-content-bug-reports-and-discussions" class="anchor" aria-hidden="true" href="#bug-reports-and-discussions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bug reports and discussions</h1>
<p dir="auto">If you think you found a bug, feel free to open an <a href="https://github.com/JuliaSmoothOptimizers/NLPModels.jl/issues">issue</a>.
Focused suggestions and requests can also be opened as issues. Before opening a pull request, start an issue or a discussion on the topic, please.</p>
<p dir="auto">If you want to ask a question not suited for a bug report, feel free to start a discussion <a href="https://github.com/JuliaSmoothOptimizers/Organization/discussions">here</a>. This forum is for general discussion about this repository and the <a href="https://github.com/JuliaSmoothOptimizers">JuliaSmoothOptimizers</a>, so questions about any of our packages are welcome.</p>
</article></div>