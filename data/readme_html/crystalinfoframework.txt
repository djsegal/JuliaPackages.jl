<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/jamesrhester/CrystalInfoFramework.jl/workflows/Run%20tests/badge.svg"><img src="https://github.com/jamesrhester/CrystalInfoFramework.jl/workflows/Run%20tests/badge.svg" alt="Testing" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/jamesrhester/CrystalInfoFramework.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/83ae1b36885f7cb1a8a70a895d248f94a42a0cf970c3dbedc6113a18368cd62c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6a616d6573726865737465722f4372797374616c496e666f4672616d65776f726b2e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/jamesrhester/CrystalInfoFramework.jl/badge.svg?branch=master&amp;service=github" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-crystalinfoframeworkjl" class="anchor" aria-hidden="true" href="#crystalinfoframeworkjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CrystalInfoFramework.jl</h1>
<p dir="auto">Julia tools for working with the
<a href="https://www.iucr.org/resources/cif" rel="nofollow">Crystallographic Information Framework</a>,
including reading data files in Crystallographic Information Format (CIF)
versions 1 and 2 (this includes mmCIF files from the PDB). As CIF format is a
significant subset of STAR format, files in STAR format are
likely to read in without problems. The tools also
understand dictionaries written in DDLm and DDL2, which can be used to return correct
types and find aliased datanames (note that this includes the PDB
mmCIF dictionaries).</p>
<h2 dir="auto"><a id="user-content-warning-pre-10-release" class="anchor" aria-hidden="true" href="#warning-pre-10-release"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Warning: pre-1.0 release</h2>
<p dir="auto">Types, method names, and method signatures may change in later versions.</p>
<p dir="auto">If you see ways to improve the naming or architecture,
now is the time to raise an issue.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Once Julia is installed, it is sufficient to <code>add CrystalInfoFramework</code>
at the Pkg prompt (accessed by the <code>]</code> character in the REPL).</p>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<p dir="auto">Detailed documentation is becoming progressively available
<a href="https://jamesrhester.github.io/CrystalInfoFramework.jl/dev" rel="nofollow">here</a>.</p>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting started</h2>
<p dir="auto">Type <code>Cif</code> is like a <code>Dict{String,Block}</code>. A
<code>Block</code> works like a <code>Dict{String,Array{Any,1}}</code>.  All returned
values are Arrays, <strong>even if the data name appears as a key-value
pair in the file</strong>. Primitive values are always <code>String</code>s.
CIF2 Tables become julia <code>Dict</code> types, and CIF2 lists are julia
<code>Array</code> types.</p>
<p dir="auto">Even in the presence of a dictionary, DDLm Set category values are
returned as 1-element Arrays. <strong>This may change in the future</strong></p>
<h3 dir="auto"><a id="user-content-reading" class="anchor" aria-hidden="true" href="#reading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reading</h3>
<p dir="auto"><code>Cif</code> objects are created by calling the <code>Cif</code> constructor with a file
name. File names should be provided as <code>FilePaths</code> paths. These can be
produced from strings be prepending the letter <code>p</code> once <code>FilePaths</code> is
added. If a <code>String</code> is provided to the <code>Cif</code> constructor it will be
interpreted as the contents of a CIF file. The optional argument <code>native</code>
switches between the <a href="https://github.com/COMCIFS/cif_api">C cif_api parser</a>
(<code>native=false</code>, not currently available for
Windows) and a native Julia parser (<code>native=true</code>, the default).</p>
<p dir="auto">To open a file, and read <code>_cell.length_a</code> from block <code>only_block</code>,
returning a one-element <code>Array{String,1}</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
julia&gt; using CrystalInfoFramework, FilePaths

julia&gt; nc = Cif(p&quot;my_cif.cif&quot;)
...
julia&gt; my_block = nc[&quot;only_block&quot;]  #could also use first(nc).second
...
julia&gt; l = my_block[&quot;_cell.length_a&quot;]
1-element Array{Any,1}:
 &quot;11.520(12)&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> CrystalInfoFramework, FilePaths

julia<span class="pl-k">&gt;</span> nc <span class="pl-k">=</span> <span class="pl-c1">Cif</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">p</span>"</span>my_cif.cif<span class="pl-pds">"</span></span>)
<span class="pl-k">...</span>
julia<span class="pl-k">&gt;</span> my_block <span class="pl-k">=</span> nc[<span class="pl-s"><span class="pl-pds">"</span>only_block<span class="pl-pds">"</span></span>]  <span class="pl-c"><span class="pl-c">#</span>could also use first(nc).second</span>
<span class="pl-k">...</span>
julia<span class="pl-k">&gt;</span> l <span class="pl-k">=</span> my_block[<span class="pl-s"><span class="pl-pds">"</span>_cell.length_a<span class="pl-pds">"</span></span>]
<span class="pl-c1">1</span><span class="pl-k">-</span>element Array{Any,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>11.520(12)<span class="pl-pds">"</span></span></pre></div>
<p dir="auto"><code>get_loop</code> returns a <code>DataFrame</code> object that can be manipulated using the
methods of that package, most obviously, <code>eachrow</code> to iterate over the
packets in a loop:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
julia&gt; l = get_loop(my_block,&quot;_atom_site.label&quot;)
...
julia&gt; for r in eachrow(l)
    println(&quot;$(r[Symbol(&quot;_atom_site.fract_x&quot;)])&quot;)
end"><pre>julia<span class="pl-k">&gt;</span> l <span class="pl-k">=</span> <span class="pl-c1">get_loop</span>(my_block,<span class="pl-s"><span class="pl-pds">"</span>_atom_site.label<span class="pl-pds">"</span></span>)
<span class="pl-k">...</span>
julia<span class="pl-k">&gt;</span> <span class="pl-k">for</span> r <span class="pl-k">in</span> <span class="pl-c1">eachrow</span>(l)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(r[<span class="pl-c1">Symbol</span>(<span class="pl-s"><span class="pl-pds">"</span>_atom_site.fract_x<span class="pl-pds">"</span></span>)])</span><span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
<h3 dir="auto"><a id="user-content-updating" class="anchor" aria-hidden="true" href="#updating"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Updating</h3>
<p dir="auto">Values are added in the same way as for a normal dictionary.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="my_block[&quot;_new_item&quot;] = [1,2,3]"><pre>my_block[<span class="pl-s"><span class="pl-pds">"</span>_new_item<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]</pre></div>
<p dir="auto">If the dataname belongs to a loop, following assignment of the value the
new dataname can be added to a previously-existing loop. The following
call adds <code>_new_item</code> to the loop containing <code>_old_item</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="add_to_loop(my_block,&quot;_old_item&quot;,&quot;_new_item&quot;)"><pre><span class="pl-c1">add_to_loop</span>(my_block,<span class="pl-s"><span class="pl-pds">"</span>_old_item<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>_new_item<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The number of values in the array assigned to <code>_new_item</code> must match
the length of the loop - this is checked.</p>
<h2 dir="auto"><a id="user-content-dictionaries-and-datasources" class="anchor" aria-hidden="true" href="#dictionaries-and-datasources"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Dictionaries and DataSources</h2>
<p dir="auto">CIF dictionaries are created by passing the dictionary file name to
<code>DDLm_Dictionary</code> or <code>DDL2_Dictionary</code>. Either a <code>FilePath</code> or
<code>String</code> may be used to specify the file location.</p>
<h2 dir="auto"><a id="user-content-datasources" class="anchor" aria-hidden="true" href="#datasources"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DataSources</h2>
<p dir="auto">A <code>DataSource</code> is any data source returning an array of values when
supplied with a string.  A CIF <code>Block</code> conforms to this specification.
<code>DataSource</code>s are defined in submodule <code>CrystalInfoFramework.DataContainer</code>.</p>
<p dir="auto">A CIF dictionary can be used to obtain data with correct Julia type from
a <code>DataSource</code> that uses data names defined in the dictionary by
creating a <code>TypedDataSource</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using CrystalInfoFramework.DataContainer
julia&gt; my_dict = DDLm_Dictionary(&quot;cif_core.dic&quot;)
julia&gt; bd = TypedDataSource(my_block,my_dict)
julia&gt; l = bd[&quot;_cell.length_a&quot;]
1-element Array{Float64,1}:
 11.52
julia&gt; l = bd[&quot;_cell_length_a&quot;] #understand aliases
1-element Array{Float64,1}:
 11.52"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> CrystalInfoFramework<span class="pl-k">.</span>DataContainer
julia<span class="pl-k">&gt;</span> my_dict <span class="pl-k">=</span> <span class="pl-c1">DDLm_Dictionary</span>(<span class="pl-s"><span class="pl-pds">"</span>cif_core.dic<span class="pl-pds">"</span></span>)
julia<span class="pl-k">&gt;</span> bd <span class="pl-k">=</span> <span class="pl-c1">TypedDataSource</span>(my_block,my_dict)
julia<span class="pl-k">&gt;</span> l <span class="pl-k">=</span> bd[<span class="pl-s"><span class="pl-pds">"</span>_cell.length_a<span class="pl-pds">"</span></span>]
<span class="pl-c1">1</span><span class="pl-k">-</span>element Array{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">11.52</span>
julia<span class="pl-k">&gt;</span> l <span class="pl-k">=</span> bd[<span class="pl-s"><span class="pl-pds">"</span>_cell_length_a<span class="pl-pds">"</span></span>] <span class="pl-c"><span class="pl-c">#</span>understand aliases</span>
<span class="pl-c1">1</span><span class="pl-k">-</span>element Array{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">11.52</span></pre></div>
<h3 dir="auto"><a id="user-content-writing" class="anchor" aria-hidden="true" href="#writing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Writing</h3>
<p dir="auto">Use <code>show(io::IO,::MIME"text/cif",d)</code> to produce
correctly-formatted dictionaries or data files.</p>
<h2 dir="auto"><a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Architecture</h2>
<p dir="auto">The C cif_api library parsing callbacks are used
to construct a <code>Cif</code> object during file traversal. The Julia parser uses
a pre-built parser generated by <code>Lerche</code> using a CIF
EBNF to produce a parse tree that is then transformed into a <code>Cif</code>
object.</p>
<h2 dir="auto"><a id="user-content-further-information" class="anchor" aria-hidden="true" href="#further-information"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Further information</h2>
<p dir="auto">Read the tests in the tests directory for typical usage examples.</p>
<h2 dir="auto"><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing</h2>
<p dir="auto">Contributions, suggestions, and bug reports are welcome! Please use
Github issues and pull requests to do this.</p>
</article></div>