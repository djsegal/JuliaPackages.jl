<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-blinkjl" class="anchor" aria-hidden="true" href="#blinkjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Blink.jl</h1>
<p><a href="https://travis-ci.org/JuliaGizmos/Blink.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/84ff04c56e4f0afb009b20f56e044f6d9e2626e2/68747470733a2f2f7472617669732d63692e6f72672f4a756c696147697a6d6f732f426c696e6b2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaGizmos/Blink.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://JuliaGizmos.github.io/Blink.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://JuliaGizmos.github.io/Blink.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>Blink.jl is the Julia wrapper around <a href="https://electronjs.org/" rel="nofollow">Electron</a>. It
can serve HTML content in a local window, and allows for communication between
Julia and the web page. In this way, therefore, Blink can be used as a GUI
toolkit for building HTML-based applications for the desktop.</p>
<p>To install, do:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> press ] to enter the Pkg REPL mode</span>
(v1<span class="pl-c1">.3</span>) pkg<span class="pl-k">&gt;</span> add Blink
<span class="pl-c"><span class="pl-c">#</span> ... Blink builds and downloads Electron ...</span>
(v1<span class="pl-c1">.3</span>) pkg<span class="pl-k">&gt;</span> <span class="pl-c"><span class="pl-c">#</span> press backspace to exit Pkg REPL mode</span>
julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Blink</pre></div>
<h3><a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Dependencies</h3>
<ul>
<li><a href="https://www.7-zip.org/download.html" rel="nofollow">7z</a> on Windows and <code>unzip</code> on Linux. You'll need to install the appropriate one for your system to be able to install Electron:
<ul>
<li>For Linux, <code>apt get install -y unzip</code> or similar should work.</li>
<li>For Windows, we use the <code>7z</code> that is normally packaged with binary distributions of Julia (via the BinDeps.jl build dependency). <code>7z</code> may be unavailable in case of a source build of Julia on Windows, in which case it can be obtained by running <code>make win-extras</code> after running <code>make</code>.</li>
</ul>
</li>
</ul>
<h1><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic usage:</h1>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Blink

julia<span class="pl-k">&gt;</span> w <span class="pl-k">=</span> <span class="pl-c1">Window</span>() <span class="pl-c"><span class="pl-c">#</span> Open a new window</span>
Blink<span class="pl-k">.</span>AtomShell<span class="pl-k">.</span><span class="pl-c1">Window</span>(<span class="pl-k">...</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">body!</span>(w, <span class="pl-s"><span class="pl-pds">"</span>Hello World<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> Set the body content</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">loadurl</span>(w, <span class="pl-s"><span class="pl-pds">"</span>http://julialang.org<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> Load a web page</span></pre></div>
<div align="left">
<a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/JuliaGizmos/Blink.jl/master/docs/src/ReadMeTutorialImage.png"><img src="https://raw.githubusercontent.com/JuliaGizmos/Blink.jl/master/docs/src/ReadMeTutorialImage.png" alt="Blink Window showing the JuliaLang website" width="480" style="max-width:100%;"></a>
</div>
<p>For options see the functions defined in <a href="src/AtomShell/window.jl">window.jl</a>, which closely follow <a href="https://github.com/atom/electron/blob/master/docs/api/browser-window.md">electron's API</a>.</p>
<p>You can also use the JS API to interact with the window. For example:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">@js</span> w Math<span class="pl-k">.</span><span class="pl-c1">log</span>(<span class="pl-c1">10</span>)
<span class="pl-c1">2.302585092994046</span></pre></div>
<p>If that's not convincing enough, open the console (<code>Cmd-Alt-I</code> on OS X) and evaluate:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">@js</span> w console<span class="pl-k">.</span><span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">"</span>hello, web-scale world<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-issues--caveats" class="anchor" aria-hidden="true" href="#issues--caveats"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Issues &amp; Caveats</h2>
<ul>
<li>
<p>On Windows, the spawned process dumps its output into Julia's STDOUT, which is kind of annoying.</p>
</li>
<li>
<p>When running on a headless linux instance (such as for CI tests), you must start julia via <code>xvfb-run julia</code>. More information can be found in the electron docs <a href="https://electronjs.org/docs/tutorial/testing-on-headless-ci#configuring-the-virtual-display-server" rel="nofollow">here</a>. See the Blink.jl <a href="https://github.com/JunoLab/Blink.jl/blob/master/.travis.yml">.travis.yml</a> file for an example.</p>
<p>Otherwise you will see the following error:</p>
<pre><code>â”‚    LoadError: IOError: connect: connection refused (ECONNREFUSED)
</code></pre>
</li>
</ul>
</article></div>