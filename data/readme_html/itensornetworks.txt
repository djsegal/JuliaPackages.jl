<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-itensornetworks" class="anchor" aria-hidden="true" href="#itensornetworks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ITensorNetworks</h1>
<p dir="auto">A package to provide general network data structures and tools to use with ITensors.jl.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">You can install this package through the Julia package manager:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ] add ITensorNetworks"><pre>julia<span class="pl-k">&gt;</span> ] add ITensorNetworks</pre></div>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">Here are is an example of making a tensor network on a chain graph (a tensor train or matrix product state):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using ITensors

julia&gt; using ITensorNetworks

julia&gt; tn = ITensorNetwork(named_grid(4); link_space=2)
ITensorNetwork{Int64} with 4 vertices:
4-element Vector{Int64}:
 1
 2
 3
 4

and 3 edge(s):
1 =&gt; 2
2 =&gt; 3
3 =&gt; 4

with vertex data:
4-element Dictionaries.Dictionary{Int64, Any}
 1 │ ((dim=2|id=739|&quot;1↔2&quot;),)
 2 │ ((dim=2|id=739|&quot;1↔2&quot;), (dim=2|id=920|&quot;2↔3&quot;))
 3 │ ((dim=2|id=920|&quot;2↔3&quot;), (dim=2|id=761|&quot;3↔4&quot;))
 4 │ ((dim=2|id=761|&quot;3↔4&quot;),)

julia&gt; tn[1]
ITensor ord=1 (dim=2|id=739|&quot;1↔2&quot;)
NDTensors.EmptyStorage{NDTensors.EmptyNumber, NDTensors.Dense{NDTensors.EmptyNumber, Vector{NDTensors.EmptyNumber}}}

julia&gt; tn[2]
ITensor ord=2 (dim=2|id=739|&quot;1↔2&quot;) (dim=2|id=920|&quot;2↔3&quot;)
NDTensors.EmptyStorage{NDTensors.EmptyNumber, NDTensors.Dense{NDTensors.EmptyNumber, Vector{NDTensors.EmptyNumber}}}

julia&gt; neighbors(tn, 1)
1-element Vector{Int64}:
 2

julia&gt; neighbors(tn, 2)
2-element Vector{Int64}:
 1
 3

julia&gt; neighbors(tn, 3)
2-element Vector{Int64}:
 2
 4

julia&gt; neighbors(tn, 4)
1-element Vector{Int64}:
 3"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ITensors

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ITensorNetworks

julia<span class="pl-k">&gt;</span> tn <span class="pl-k">=</span> <span class="pl-c1">ITensorNetwork</span>(<span class="pl-c1">named_grid</span>(<span class="pl-c1">4</span>); link_space<span class="pl-k">=</span><span class="pl-c1">2</span>)
ITensorNetwork{Int64} with <span class="pl-c1">4</span> vertices<span class="pl-k">:</span>
<span class="pl-c1">4</span><span class="pl-k">-</span>element Vector{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>
 <span class="pl-c1">4</span>

and <span class="pl-c1">3</span> <span class="pl-c1">edge</span>(s)<span class="pl-k">:</span>
<span class="pl-c1">1</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>
<span class="pl-c1">2</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">3</span>
<span class="pl-c1">3</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">4</span>

with vertex data<span class="pl-k">:</span>
<span class="pl-c1">4</span><span class="pl-k">-</span>element Dictionaries<span class="pl-k">.</span>Dictionary{Int64, Any}
 <span class="pl-c1">1</span> │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">739</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1↔2<span class="pl-pds">"</span></span>),)
 <span class="pl-c1">2</span> │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">739</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1↔2<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">920</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>2↔3<span class="pl-pds">"</span></span>))
 <span class="pl-c1">3</span> │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">920</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>2↔3<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">761</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>3↔4<span class="pl-pds">"</span></span>))
 <span class="pl-c1">4</span> │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">761</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>3↔4<span class="pl-pds">"</span></span>),)

julia<span class="pl-k">&gt;</span> tn[<span class="pl-c1">1</span>]
ITensor ord<span class="pl-k">=</span><span class="pl-c1">1</span> (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">739</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1↔2<span class="pl-pds">"</span></span>)
NDTensors<span class="pl-k">.</span>EmptyStorage{NDTensors<span class="pl-k">.</span>EmptyNumber, NDTensors<span class="pl-k">.</span>Dense{NDTensors<span class="pl-k">.</span>EmptyNumber, Vector{NDTensors<span class="pl-k">.</span>EmptyNumber}}}

julia<span class="pl-k">&gt;</span> tn[<span class="pl-c1">2</span>]
ITensor ord<span class="pl-k">=</span><span class="pl-c1">2</span> (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">739</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1↔2<span class="pl-pds">"</span></span>) (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">920</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>2↔3<span class="pl-pds">"</span></span>)
NDTensors<span class="pl-k">.</span>EmptyStorage{NDTensors<span class="pl-k">.</span>EmptyNumber, NDTensors<span class="pl-k">.</span>Dense{NDTensors<span class="pl-k">.</span>EmptyNumber, Vector{NDTensors<span class="pl-k">.</span>EmptyNumber}}}

julia<span class="pl-k">&gt;</span> <span class="pl-c1">neighbors</span>(tn, <span class="pl-c1">1</span>)
<span class="pl-c1">1</span><span class="pl-k">-</span>element Vector{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">neighbors</span>(tn, <span class="pl-c1">2</span>)
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">neighbors</span>(tn, <span class="pl-c1">3</span>)
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">2</span>
 <span class="pl-c1">4</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">neighbors</span>(tn, <span class="pl-c1">4</span>)
<span class="pl-c1">1</span><span class="pl-k">-</span>element Vector{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">3</span></pre></div>
<p dir="auto">and here is a similar example for making a tensor network on a grid (a tensor product state or project entangled pair state (PEPS)):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; tn = ITensorNetwork(named_grid((2, 2)); link_space=2)
ITensorNetwork{Tuple{Int64, Int64}} with 4 vertices:
4-element Vector{Tuple{Int64, Int64}}:
 (1, 1)
 (2, 1)
 (1, 2)
 (2, 2)

and 4 edge(s):
(1, 1) =&gt; (2, 1)
(1, 1) =&gt; (1, 2)
(2, 1) =&gt; (2, 2)
(1, 2) =&gt; (2, 2)

with vertex data:
4-element Dictionaries.Dictionary{Tuple{Int64, Int64}, Any}
 (1, 1) │ ((dim=2|id=74|&quot;1×1↔2×1&quot;), (dim=2|id=723|&quot;1×1↔1×2&quot;))
 (2, 1) │ ((dim=2|id=74|&quot;1×1↔2×1&quot;), (dim=2|id=823|&quot;2×1↔2×2&quot;))
 (1, 2) │ ((dim=2|id=723|&quot;1×1↔1×2&quot;), (dim=2|id=712|&quot;1×2↔2×2&quot;))
 (2, 2) │ ((dim=2|id=823|&quot;2×1↔2×2&quot;), (dim=2|id=712|&quot;1×2↔2×2&quot;))

julia&gt; tn[1, 1]
ITensor ord=2 (dim=2|id=74|&quot;1×1↔2×1&quot;) (dim=2|id=723|&quot;1×1↔1×2&quot;)
NDTensors.EmptyStorage{NDTensors.EmptyNumber, NDTensors.Dense{NDTensors.EmptyNumber, Vector{NDTensors.EmptyNumber}}}

julia&gt; neighbors(tn, (1, 1))
2-element Vector{Tuple{Int64, Int64}}:
 (2, 1)
 (1, 2)

julia&gt; neighbors(tn, (1, 2))
2-element Vector{Tuple{Int64, Int64}}:
 (1, 1)
 (2, 2)

julia&gt; tn_1 = subgraph(v -&gt; v[1] == 1, tn)
ITensorNetwork{Tuple{Int64, Int64}} with 2 vertices:
2-element Vector{Tuple{Int64, Int64}}:
 (1, 1)
 (1, 2)

and 1 edge(s):
(1, 1) =&gt; (1, 2)

with vertex data:
2-element Dictionaries.Dictionary{Tuple{Int64, Int64}, Any}
 (1, 1) │ ((dim=2|id=74|&quot;1×1↔2×1&quot;), (dim=2|id=723|&quot;1×1↔1×2&quot;))
 (1, 2) │ ((dim=2|id=723|&quot;1×1↔1×2&quot;), (dim=2|id=712|&quot;1×2↔2×2&quot;))

julia&gt; tn_2 = subgraph(v -&gt; v[1] == 2, tn)
ITensorNetwork{Tuple{Int64, Int64}} with 2 vertices:
2-element Vector{Tuple{Int64, Int64}}:
 (2, 1)
 (2, 2)

and 1 edge(s):
(2, 1) =&gt; (2, 2)

with vertex data:
2-element Dictionaries.Dictionary{Tuple{Int64, Int64}, Any}
 (2, 1) │ ((dim=2|id=74|&quot;1×1↔2×1&quot;), (dim=2|id=823|&quot;2×1↔2×2&quot;))
 (2, 2) │ ((dim=2|id=823|&quot;2×1↔2×2&quot;), (dim=2|id=712|&quot;1×2↔2×2&quot;))"><pre>julia<span class="pl-k">&gt;</span> tn <span class="pl-k">=</span> <span class="pl-c1">ITensorNetwork</span>(<span class="pl-c1">named_grid</span>((<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)); link_space<span class="pl-k">=</span><span class="pl-c1">2</span>)
ITensorNetwork{Tuple{Int64, Int64}} with <span class="pl-c1">4</span> vertices<span class="pl-k">:</span>
<span class="pl-c1">4</span><span class="pl-k">-</span>element Vector{Tuple{Int64, Int64}}<span class="pl-k">:</span>
 (<span class="pl-c1">1</span>, <span class="pl-c1">1</span>)
 (<span class="pl-c1">2</span>, <span class="pl-c1">1</span>)
 (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>)
 (<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)

and <span class="pl-c1">4</span> <span class="pl-c1">edge</span>(s)<span class="pl-k">:</span>
(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>) <span class="pl-k">=&gt;</span> (<span class="pl-c1">2</span>, <span class="pl-c1">1</span>)
(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>) <span class="pl-k">=&gt;</span> (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>)
(<span class="pl-c1">2</span>, <span class="pl-c1">1</span>) <span class="pl-k">=&gt;</span> (<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)
(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>) <span class="pl-k">=&gt;</span> (<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)

with vertex data<span class="pl-k">:</span>
<span class="pl-c1">4</span><span class="pl-k">-</span>element Dictionaries<span class="pl-k">.</span>Dictionary{Tuple{Int64, Int64}, Any}
 (<span class="pl-c1">1</span>, <span class="pl-c1">1</span>) │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">74</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×1↔2×1<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">723</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×1↔1×2<span class="pl-pds">"</span></span>))
 (<span class="pl-c1">2</span>, <span class="pl-c1">1</span>) │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">74</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×1↔2×1<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">823</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>2×1↔2×2<span class="pl-pds">"</span></span>))
 (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>) │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">723</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×1↔1×2<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">712</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×2↔2×2<span class="pl-pds">"</span></span>))
 (<span class="pl-c1">2</span>, <span class="pl-c1">2</span>) │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">823</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>2×1↔2×2<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">712</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×2↔2×2<span class="pl-pds">"</span></span>))

julia<span class="pl-k">&gt;</span> tn[<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]
ITensor ord<span class="pl-k">=</span><span class="pl-c1">2</span> (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">74</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×1↔2×1<span class="pl-pds">"</span></span>) (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">723</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×1↔1×2<span class="pl-pds">"</span></span>)
NDTensors<span class="pl-k">.</span>EmptyStorage{NDTensors<span class="pl-k">.</span>EmptyNumber, NDTensors<span class="pl-k">.</span>Dense{NDTensors<span class="pl-k">.</span>EmptyNumber, Vector{NDTensors<span class="pl-k">.</span>EmptyNumber}}}

julia<span class="pl-k">&gt;</span> <span class="pl-c1">neighbors</span>(tn, (<span class="pl-c1">1</span>, <span class="pl-c1">1</span>))
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Tuple{Int64, Int64}}<span class="pl-k">:</span>
 (<span class="pl-c1">2</span>, <span class="pl-c1">1</span>)
 (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">neighbors</span>(tn, (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>))
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Tuple{Int64, Int64}}<span class="pl-k">:</span>
 (<span class="pl-c1">1</span>, <span class="pl-c1">1</span>)
 (<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> tn_1 <span class="pl-k">=</span> <span class="pl-c1">subgraph</span>(v <span class="pl-k">-&gt;</span> v[<span class="pl-c1">1</span>] <span class="pl-k">==</span> <span class="pl-c1">1</span>, tn)
ITensorNetwork{Tuple{Int64, Int64}} with <span class="pl-c1">2</span> vertices<span class="pl-k">:</span>
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Tuple{Int64, Int64}}<span class="pl-k">:</span>
 (<span class="pl-c1">1</span>, <span class="pl-c1">1</span>)
 (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>)

and <span class="pl-c1">1</span> <span class="pl-c1">edge</span>(s)<span class="pl-k">:</span>
(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>) <span class="pl-k">=&gt;</span> (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>)

with vertex data<span class="pl-k">:</span>
<span class="pl-c1">2</span><span class="pl-k">-</span>element Dictionaries<span class="pl-k">.</span>Dictionary{Tuple{Int64, Int64}, Any}
 (<span class="pl-c1">1</span>, <span class="pl-c1">1</span>) │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">74</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×1↔2×1<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">723</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×1↔1×2<span class="pl-pds">"</span></span>))
 (<span class="pl-c1">1</span>, <span class="pl-c1">2</span>) │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">723</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×1↔1×2<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">712</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×2↔2×2<span class="pl-pds">"</span></span>))

julia<span class="pl-k">&gt;</span> tn_2 <span class="pl-k">=</span> <span class="pl-c1">subgraph</span>(v <span class="pl-k">-&gt;</span> v[<span class="pl-c1">1</span>] <span class="pl-k">==</span> <span class="pl-c1">2</span>, tn)
ITensorNetwork{Tuple{Int64, Int64}} with <span class="pl-c1">2</span> vertices<span class="pl-k">:</span>
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Tuple{Int64, Int64}}<span class="pl-k">:</span>
 (<span class="pl-c1">2</span>, <span class="pl-c1">1</span>)
 (<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)

and <span class="pl-c1">1</span> <span class="pl-c1">edge</span>(s)<span class="pl-k">:</span>
(<span class="pl-c1">2</span>, <span class="pl-c1">1</span>) <span class="pl-k">=&gt;</span> (<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)

with vertex data<span class="pl-k">:</span>
<span class="pl-c1">2</span><span class="pl-k">-</span>element Dictionaries<span class="pl-k">.</span>Dictionary{Tuple{Int64, Int64}, Any}
 (<span class="pl-c1">2</span>, <span class="pl-c1">1</span>) │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">74</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×1↔2×1<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">823</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>2×1↔2×2<span class="pl-pds">"</span></span>))
 (<span class="pl-c1">2</span>, <span class="pl-c1">2</span>) │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">823</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>2×1↔2×2<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">712</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1×2↔2×2<span class="pl-pds">"</span></span>))</pre></div>
<p dir="auto">Networks can also be merged/unioned:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using ITensorUnicodePlots

julia&gt; s = siteinds(&quot;S=1/2&quot;, named_grid(3))
IndsNetwork{Int64, Index} with 3 vertices:
3-element Vector{Int64}:
 1
 2
 3

and 2 edge(s):
1 =&gt; 2
2 =&gt; 3

with vertex data:
3-element Dictionaries.Dictionary{Int64, Vector{Index}}
 1 │ Index[(dim=2|id=598|&quot;S=1/2,Site,n=1&quot;)]
 2 │ Index[(dim=2|id=457|&quot;S=1/2,Site,n=2&quot;)]
 3 │ Index[(dim=2|id=683|&quot;S=1/2,Site,n=3&quot;)]

and edge data:
0-element Dictionaries.Dictionary{NamedEdge{Int64}, Vector{Index}}

julia&gt; tn1 = ITensorNetwork(s; link_space=2)
ITensorNetwork{Int64} with 3 vertices:
3-element Vector{Int64}:
 1
 2
 3

and 2 edge(s):
1 =&gt; 2
2 =&gt; 3

with vertex data:
3-element Dictionaries.Dictionary{Int64, Any}
 1 │ ((dim=2|id=598|&quot;S=1/2,Site,n=1&quot;), (dim=2|id=123|&quot;1↔2&quot;))
 2 │ ((dim=2|id=457|&quot;S=1/2,Site,n=2&quot;), (dim=2|id=123|&quot;1↔2&quot;), (dim=2|id=656|&quot;2↔3…
 3 │ ((dim=2|id=683|&quot;S=1/2,Site,n=3&quot;), (dim=2|id=656|&quot;2↔3&quot;))

julia&gt; tn2 = ITensorNetwork(s; link_space=2)
ITensorNetwork{Int64} with 3 vertices:
3-element Vector{Int64}:
 1
 2
 3

and 2 edge(s):
1 =&gt; 2
2 =&gt; 3

with vertex data:
3-element Dictionaries.Dictionary{Int64, Any}
 1 │ ((dim=2|id=598|&quot;S=1/2,Site,n=1&quot;), (dim=2|id=382|&quot;1↔2&quot;))
 2 │ ((dim=2|id=457|&quot;S=1/2,Site,n=2&quot;), (dim=2|id=382|&quot;1↔2&quot;), (dim=2|id=190|&quot;2↔3…
 3 │ ((dim=2|id=683|&quot;S=1/2,Site,n=3&quot;), (dim=2|id=190|&quot;2↔3&quot;))

julia&gt; @visualize tn1;
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀tn11⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠉⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠈⠒⠤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠈⠑⠢2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⠤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀tn12⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠈⠑⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠑⠢⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠒⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠢⢄⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀tn13⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 

julia&gt; @visualize tn2;
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀tn21⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠉⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠈⠒⠤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠈⠑⠢2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⠤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀tn22⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠈⠑⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠑⠢⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠒⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠢⢄⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀tn23⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 

julia&gt; Z = prime(tn1; sites=[]) ⊗ tn2;

julia&gt; @visualize Z;
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z(1, 2)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠊⠀⠈⠑⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢2⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⣀⠔2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z(2, 2)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀Z(1, 1)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠈⠑⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠁⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢2⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀(2)'⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⡠2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⢄⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z(3, 2)⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z(2, 1)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠁⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀(2)'⢄⡀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⢄⡀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z(3, 1)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 

julia&gt; contraction_sequence(Z)
2-element Vector{Vector}:
 Key{Tuple{Int64, Int64}}[Key((1, 1)), Key((1, 2))]
 Any[Key((2, 1)), Any[Key((2, 2)), Key{Tuple{Int64, Int64}}[Key((3, 1)), Key((3, 2))]]]

julia&gt; Z̃ = contract(Z, (1, 1) =&gt; (2, 1));

julia&gt; @visualize Z̃;
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z̃(2, 1)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀(2)'⠤⠤⠔⠒⠒⠉⠉⠀⠀⢱⠀⠈⠉⠑⠒⠢⠤⢄⣀2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⣀⣀⠤⠤⠔⠒⠊⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠒⠒⠤⠤⢄⣀⡀⠀⠀⠀⠀⠀ 
    ⠀Z̃(3, 1)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z̃(1, 2)⠀⠀ 
    ⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⡠2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀2⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⢀⠤⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z̃(2, 2)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡠⠤⠒⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠤2⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡀⠀⣀⡠⠤⠒⠊⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀Z̃(3, 2)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ "><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> ITensorUnicodePlots

julia<span class="pl-k">&gt;</span> s <span class="pl-k">=</span> <span class="pl-c1">siteinds</span>(<span class="pl-s"><span class="pl-pds">"</span>S=1/2<span class="pl-pds">"</span></span>, <span class="pl-c1">named_grid</span>(<span class="pl-c1">3</span>))
IndsNetwork{Int64, Index} with <span class="pl-c1">3</span> vertices<span class="pl-k">:</span>
<span class="pl-c1">3</span><span class="pl-k">-</span>element Vector{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>

and <span class="pl-c1">2</span> <span class="pl-c1">edge</span>(s)<span class="pl-k">:</span>
<span class="pl-c1">1</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>
<span class="pl-c1">2</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">3</span>

with vertex data<span class="pl-k">:</span>
<span class="pl-c1">3</span><span class="pl-k">-</span>element Dictionaries<span class="pl-k">.</span>Dictionary{Int64, Vector{Index}}
 <span class="pl-c1">1</span> │ Index[(dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">598</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>S=1/2,Site,n=1<span class="pl-pds">"</span></span>)]
 <span class="pl-c1">2</span> │ Index[(dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">457</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>S=1/2,Site,n=2<span class="pl-pds">"</span></span>)]
 <span class="pl-c1">3</span> │ Index[(dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">683</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>S=1/2,Site,n=3<span class="pl-pds">"</span></span>)]

and edge data<span class="pl-k">:</span>
<span class="pl-c1">0</span><span class="pl-k">-</span>element Dictionaries<span class="pl-k">.</span>Dictionary{NamedEdge{Int64}, Vector{Index}}

julia<span class="pl-k">&gt;</span> tn1 <span class="pl-k">=</span> <span class="pl-c1">ITensorNetwork</span>(s; link_space<span class="pl-k">=</span><span class="pl-c1">2</span>)
ITensorNetwork{Int64} with <span class="pl-c1">3</span> vertices<span class="pl-k">:</span>
<span class="pl-c1">3</span><span class="pl-k">-</span>element Vector{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>
 <span class="pl-c1">2</span>
 <span class="pl-c1">3</span>

and <span class="pl-c1">2</span> <span class="pl-c1">edge</span>(s)<span class="pl-k">:</span>
<span class="pl-c1">1</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>
<span class="pl-c1">2</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">3</span>

with vertex data<span class="pl-k">:</span>
<span class="pl-c1">3</span><span class="pl-k">-</span>element Dictionaries<span class="pl-k">.</span>Dictionary{Int64, Any}
 <span class="pl-c1">1</span> │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">598</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>S=1/2,Site,n=1<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">123</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1↔2<span class="pl-pds">"</span></span>))
 <span class="pl-c1">2</span> │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">457</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>S=1/2,Site,n=2<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">123</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>1↔2<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">656</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>2↔3…</span>
<span class="pl-s"> 3 │ ((dim=2|id=683|<span class="pl-pds">"</span></span>S<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>,Site,n<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-s"><span class="pl-pds">"</span>), (dim=2|id=656|<span class="pl-pds">"</span></span><span class="pl-c1">2</span>↔<span class="pl-c1">3</span><span class="pl-s"><span class="pl-pds">"</span>))</span>
<span class="pl-s"></span>
<span class="pl-s">julia&gt; tn2 = ITensorNetwork(s; link_space=2)</span>
<span class="pl-s">ITensorNetwork{Int64} with 3 vertices:</span>
<span class="pl-s">3-element Vector{Int64}:</span>
<span class="pl-s"> 1</span>
<span class="pl-s"> 2</span>
<span class="pl-s"> 3</span>
<span class="pl-s"></span>
<span class="pl-s">and 2 edge(s):</span>
<span class="pl-s">1 =&gt; 2</span>
<span class="pl-s">2 =&gt; 3</span>
<span class="pl-s"></span>
<span class="pl-s">with vertex data:</span>
<span class="pl-s">3-element Dictionaries.Dictionary{Int64, Any}</span>
<span class="pl-s"> 1 │ ((dim=2|id=598|<span class="pl-pds">"</span></span>S<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>,Site,n<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-s"><span class="pl-pds">"</span>), (dim=2|id=382|<span class="pl-pds">"</span></span><span class="pl-c1">1</span>↔<span class="pl-c1">2</span><span class="pl-s"><span class="pl-pds">"</span>))</span>
<span class="pl-s"> 2 │ ((dim=2|id=457|<span class="pl-pds">"</span></span>S<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">2</span>,Site,n<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-s"><span class="pl-pds">"</span>), (dim=2|id=382|<span class="pl-pds">"</span></span><span class="pl-c1">1</span>↔<span class="pl-c1">2</span><span class="pl-s"><span class="pl-pds">"</span>), (dim=2|id=190|<span class="pl-pds">"</span></span><span class="pl-c1">2</span>↔<span class="pl-c1">3</span>…
 <span class="pl-c1">3</span> │ ((dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">683</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>S=1/2,Site,n=3<span class="pl-pds">"</span></span>), (dim<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">|</span>id<span class="pl-k">=</span><span class="pl-c1">190</span><span class="pl-k">|</span><span class="pl-s"><span class="pl-pds">"</span>2↔3<span class="pl-pds">"</span></span>))

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@visualize</span> tn1;
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀tn11⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠉⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠈⠒⠤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠈⠑⠢2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⠤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀tn12⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠈⠑⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠑⠢⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠒⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠢⢄⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀tn13⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@visualize</span> tn2;
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀tn21⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠉⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠈⠒⠤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠈⠑⠢2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⠤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀tn22⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠈⠑⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠑⠢⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠒⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠢⢄⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀tn23⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 

julia<span class="pl-k">&gt;</span> Z <span class="pl-k">=</span> <span class="pl-c1">prime</span>(tn1; sites<span class="pl-k">=</span>[]) ⊗ tn2;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@visualize</span> Z;
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    <span class="pl-c1">⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠊⠀⠈⠑⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢2⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⣀⠔2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    <span class="pl-c1">⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z</span>(<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    <span class="pl-c1">⠀⠀Z</span>(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠈⠑⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠁⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢2⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    <span class="pl-c1">⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</span>(<span class="pl-c1">2</span>)<span class="pl-k">'</span>⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⡠2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀ 
    <span class="pl-c1">⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⢄⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z</span>(<span class="pl-c1">3</span>, <span class="pl-c1">2</span>)⠀⠀ 
    <span class="pl-c1">⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z</span>(<span class="pl-c1">2</span>, <span class="pl-c1">1</span>)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠁⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀ 
    <span class="pl-c1">⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</span>(<span class="pl-c1">2</span>)<span class="pl-k">'</span>⢄⡀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⢄⡀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    <span class="pl-c1">⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z</span>(<span class="pl-c1">3</span>, <span class="pl-c1">1</span>)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 

julia<span class="pl-k">&gt;</span> <span class="pl-c1">contraction_sequence</span>(Z)
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Vector}<span class="pl-k">:</span>
 Key{Tuple{Int64, Int64}}[<span class="pl-c1">Key</span>((<span class="pl-c1">1</span>, <span class="pl-c1">1</span>)), <span class="pl-c1">Key</span>((<span class="pl-c1">1</span>, <span class="pl-c1">2</span>))]
 Any[<span class="pl-c1">Key</span>((<span class="pl-c1">2</span>, <span class="pl-c1">1</span>)), Any[<span class="pl-c1">Key</span>((<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)), Key{Tuple{Int64, Int64}}[<span class="pl-c1">Key</span>((<span class="pl-c1">3</span>, <span class="pl-c1">1</span>)), <span class="pl-c1">Key</span>((<span class="pl-c1">3</span>, <span class="pl-c1">2</span>))]]]

julia<span class="pl-k">&gt;</span> Z̃ <span class="pl-k">=</span> <span class="pl-c1">contract</span>(Z, (<span class="pl-c1">1</span>, <span class="pl-c1">1</span>) <span class="pl-k">=&gt;</span> (<span class="pl-c1">2</span>, <span class="pl-c1">1</span>));

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@visualize</span> Z̃;
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    <span class="pl-c1">⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z̃</span>(<span class="pl-c1">2</span>, <span class="pl-c1">1</span>)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    <span class="pl-c1">⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀</span>(<span class="pl-c1">2</span>)<span class="pl-k">'</span>⠤⠤⠔⠒⠒⠉⠉⠀⠀⢱⠀⠈⠉⠑⠒⠢⠤⢄⣀2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⣀⣀⠤⠤⠔⠒⠊⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠒⠒⠤⠤⢄⣀⡀⠀⠀⠀⠀⠀ 
    <span class="pl-c1">⠀Z̃</span>(<span class="pl-c1">3</span>, <span class="pl-c1">1</span>)<span class="pl-c1">⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z̃</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>)⠀⠀ 
    ⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⡠2⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀2⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⢀⠤⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    <span class="pl-c1">⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀Z̃</span>(<span class="pl-c1">2</span>, <span class="pl-c1">2</span>)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡠⠤⠒⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠤2⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡀⠀⣀⡠⠤⠒⠊⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    <span class="pl-c1">⠀⠀⠀⠀⠀⠀Z̃</span>(<span class="pl-c1">3</span>, <span class="pl-c1">2</span>)⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ </pre></div>
<h2 dir="auto"><a id="user-content-generating-this-readme" class="anchor" aria-hidden="true" href="#generating-this-readme"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Generating this README</h2>
<p dir="auto">This file was generated with <a href="https://github.com/JunoLab/Weave.jl">weave.jl</a> with the following commands:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ITensorNetworks, Weave
weave(
  joinpath(pkgdir(ITensorNetworks), &quot;examples&quot;, &quot;README.jl&quot;);
  doctype=&quot;github&quot;,
  out_path=pkgdir(ITensorNetworks),
)"><pre><span class="pl-k">using</span> ITensorNetworks, Weave
<span class="pl-c1">weave</span>(
  <span class="pl-c1">joinpath</span>(<span class="pl-c1">pkgdir</span>(ITensorNetworks), <span class="pl-s"><span class="pl-pds">"</span>examples<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>README.jl<span class="pl-pds">"</span></span>);
  doctype<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>github<span class="pl-pds">"</span></span>,
  out_path<span class="pl-k">=</span><span class="pl-c1">pkgdir</span>(ITensorNetworks),
)</pre></div>
</article></div>