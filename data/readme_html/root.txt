<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-rootjl-root-bindings-for-julia" class="anchor" aria-hidden="true" href="#rootjl-root-bindings-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ROOT.jl: ROOT bindings for julia</h1>
<p>Provides basic access to the <a href="https://root.cern.ch/" rel="nofollow">CERN ROOT Framework</a>
for the Julia language.</p>
<h2><a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Requirements</h2>
<ul>
<li>Julia v0.5</li>
<li>The current master branch of <a href="https://github.com/Keno/Cxx.jl">CXX.jl</a> (until
Cxx.jl v0.1.1 or so is released).</li>
<li>ROOT-6 (ROOT-5 may work, but is no longer recommended)</li>
</ul>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Enable RTTI for Cxx.jl:</p>
<div class="highlight highlight-source-shell"><pre><span class="pl-k">export</span> JULIA_CXX_RTTI=<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span></pre></div>
<p>Install ROOT.jl:</p>
<pre><code>julia&gt; Pkg.add("ROOT")
</code></pre>
<p>ROOT.jl will install a special Julia executable that initializes ROOT
before starting Julia. This avoids conflicts between Cling's LLVM instance
and Julia's LLVM instance. The ROOT-compatible Julia binary resides at:
<code>joinpath(Pkg.dir("ROOT"), "deps", "usr", "bin", "julia")</code>.</p>
<p>You can directly use the standard ROOT API via Cxx.jl:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ROOT, Cxx
<span class="pl-c1">cxxinclude</span>(<span class="pl-s"><span class="pl-pds">"</span>TCanvas.h<span class="pl-pds">"</span></span>)
<span class="pl-c1">cxxinclude</span>(<span class="pl-s"><span class="pl-pds">"</span>TH1D.h<span class="pl-pds">"</span></span>)

canvas <span class="pl-k">=</span> <span class="pl-c1">icxx</span><span class="pl-pds">"</span><span class="pl-s1"><span class="pl-k">new</span> TCanvas();</span><span class="pl-pds">"</span>
hist <span class="pl-k">=</span> <span class="pl-c1">icxx</span><span class="pl-pds">"""</span><span class="pl-s1"><span class="pl-k">new</span> TH1D(<span class="pl-s"><span class="pl-pds">"</span>hist<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Hist<span class="pl-pds">"</span></span>, <span class="pl-c1">20</span>, -<span class="pl-c1">4</span>, <span class="pl-c1">4</span>);</span><span class="pl-pds">"""</span>
<span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100000</span>
    <span class="pl-c1">@cxx</span> hist<span class="pl-k">-&gt;</span><span class="pl-c1">Fill</span>(<span class="pl-c1">randn</span>())
<span class="pl-k">end</span>
<span class="pl-c1">@cxx</span> hist<span class="pl-k">-&gt;</span><span class="pl-c1">Draw</span>()
<span class="pl-c1">@cxx</span> canvas<span class="pl-k">-&gt;</span><span class="pl-c1">SaveAs</span>(<span class="pl-c1">pointer</span>(<span class="pl-s"><span class="pl-pds">"</span>myhist.png<span class="pl-pds">"</span></span>))</pre></div>
<p>Julia API wrappers for specific ROOT functionalities are left to more
specialized packages.</p>
<h2><a id="user-content-thread-safety" class="anchor" aria-hidden="true" href="#thread-safety"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Thread-safety</h2>
<p>During startup, ROOT.jl will also enable basic thread-safety for ROOT
(via <code>TThread::Initialize()</code>).</p>
<p>It is possible to run certain ROOT operations in multi-threaded Julia code
(e.g. TTree I/O, provided each thread uses a separate <code>TFile</code>/<code>TTree</code> resp.
<code>TChain</code> instance.). However, certain operations (e.g. creating and deleting
a <code>TChain</code>) are not thread-safe. Use</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">lock</span>(<span class="pl-c1">gROOTMutex</span>()) <span class="pl-k">do</span>
    <span class="pl-c"><span class="pl-c">#</span> ... non thread-safe code ...</span>
<span class="pl-k">end</span></pre></div>
<p>for non-thread-safe code blocks within multi-threaded code.</p>
</article></div>