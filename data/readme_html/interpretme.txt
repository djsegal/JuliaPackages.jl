<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-interpretme" class="anchor" aria-hidden="true" href="#interpretme"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>InterpretMe</h1>
<p dir="auto"><a href="https://travis-ci.com/mmahrouss/InterpretMe.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/62a2617a1d6b72ecfa3e0ded4476251fb3d1db36ef8200af0154c1dda190460e/68747470733a2f2f7472617669732d63692e636f6d2f6d6d6168726f7573732f496e746572707265744d652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/mmahrouss/InterpretMe.jl.svg?branch=master" style="max-width: 100%;"></a> <a href="https://ci.appveyor.com/project/mmahrouss/InterpretMe-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/31b04c32540cfd10f84227c95869b5019d9b4a03588416a64a3c259ec5364232/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6d6d6168726f7573732f496e746572707265744d652e6a6c3f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/mmahrouss/InterpretMe.jl?svg=true" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/mmahrouss/InterpretMe.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/21329fd77850d426dc5c4a2aa9afbbec211f207f7876db9c32bfee1128a23fb4/68747470733a2f2f636f6465636f762e696f2f67682f6d6d6168726f7573732f496e746572707265744d652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/mmahrouss/InterpretMe.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a> <a href="https://coveralls.io/github/mmahrouss/InterpretMe.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/6bd5c55320ad5e66b8fee26d979bdd1cf8689f20c718754ebb945ab7aa6f4af2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d6d6168726f7573732f496e746572707265744d652e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/mmahrouss/InterpretMe.jl/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">InterpretMe is Julia Package aimed at providing interpret-ability tools for Machine Learning models in Julia.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt;]
pkg&gt; add InterpretMe"><pre>julia<span class="pl-k">&gt;</span>]
pkg<span class="pl-k">&gt;</span> add InterpretMe</pre></div>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">First import the package:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Using InterpretMe"><pre>Using InterpretMe</pre></div>
<p dir="auto">Then train a model from <a href="https://github.com/cstjean/ScikitLearn.jl">ScikitLearn.jl</a>'s examples. We are going to use the <a href="https://github.com/cstjean/ScikitLearn.jl/blob/master/notebooks/Iris.ipynb">Iris Example</a></p>
<p dir="auto">Load the packages and train the model:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import ScikitLearn
import RDatasets

ScikitLearn.@sk_import linear_model: LogisticRegression

iris = RDatasets.dataset(&quot;datasets&quot;, &quot;iris&quot;)

X = convert(Array, iris[[:SepalLength, :SepalWidth, :PetalLength, :PetalWidth]])
y = convert(Array, iris[:Species])

model = ScikitLearn.fit!(LogisticRegression(), X, y)"><pre><span class="pl-k">import</span> ScikitLearn
<span class="pl-k">import</span> RDatasets

ScikitLearn<span class="pl-k">.</span><span class="pl-c1">@sk_import</span> linear_model<span class="pl-k">:</span> LogisticRegression

iris <span class="pl-k">=</span> RDatasets<span class="pl-k">.</span><span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>datasets<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>iris<span class="pl-pds">"</span></span>)

X <span class="pl-k">=</span> <span class="pl-c1">convert</span>(Array, iris[[<span class="pl-c1">:SepalLength</span>, <span class="pl-c1">:SepalWidth</span>, <span class="pl-c1">:PetalLength</span>, <span class="pl-c1">:PetalWidth</span>]])
y <span class="pl-k">=</span> <span class="pl-c1">convert</span>(Array, iris[<span class="pl-c1">:Species</span>])

model <span class="pl-k">=</span> ScikitLearn<span class="pl-k">.</span><span class="pl-c1">fit!</span>(<span class="pl-c1">LogisticRegression</span>(), X, y)</pre></div>
<p dir="auto">Now we can calculate the partial_dependance function from InterpretMe.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pd, vals = partial_dependence(x, [1], x -&gt; ScikitLearn.predict_proba(model,x),
                              100, false)"><pre>pd, vals <span class="pl-k">=</span> <span class="pl-c1">partial_dependence</span>(x, [<span class="pl-c1">1</span>], x <span class="pl-k">-&gt;</span> ScikitLearn<span class="pl-k">.</span><span class="pl-c1">predict_proba</span>(model,x),
                              <span class="pl-c1">100</span>, <span class="pl-c1">false</span>)</pre></div>
</article></div>