<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-empiricalmodedecompositionjl" class="anchor" aria-hidden="true" href="#empiricalmodedecompositionjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>EmpiricalModeDecomposition.jl</h1>
<p dir="auto"><a href="https://atmnpatel.github.io/EmpiricalModeDecomposition.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/atmnpatel/EmpiricalModeDecomposition.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6e7d0143c4a5989c776a0a2089645f64d361bf643e8cd1b438b7b4b14bc47497/68747470733a2f2f636f6465636f762e696f2f67682f61746d6e706174656c2f456d7069726963616c4d6f64654465636f6d706f736974696f6e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/atmnpatel/EmpiricalModeDecomposition.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://travis-ci.com/atmnpatel/EmpiricalModeDecomposition.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e0748ffd82ec071a574722ca0558155fb68e9e60440466833f0af49cc274ce84/68747470733a2f2f7472617669732d63692e636f6d2f61746d6e706174656c2f456d7069726963616c4d6f64654465636f6d706f736974696f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/atmnpatel/EmpiricalModeDecomposition.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">Empirical Mode Decomposition methods for implemented in Julia. Currently only EMD, EEMD and the Hilbert-Huang transform are implemented for 1D signals. The S number convergence criterion is used for convergence to the intrinsic mode functions.</p>
</article></div>