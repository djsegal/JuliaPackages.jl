<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-maracas" class="anchor" aria-hidden="true" href="#maracas"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Maracas</h1>
<p dir="auto"><a href="https://travis-ci.org/apieum/Maracas.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cd5f6c62683c96f1111262eee96eb685452f5edede391f38e0f51b8f49d2cfe2/68747470733a2f2f7472617669732d63692e6f72672f61706965756d2f4d6172616361732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/apieum/Maracas.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">The <strong>Maracas</strong> package extends julia base/test.jl to provide syntactic sugar and verbose output to tests.</p>
<p dir="auto"><strong>Launch your tests as usual</strong></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="demo.gif"><img src="demo.gif" alt="Maracas tests run Demo" data-animated-image="" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h2>
<ul dir="auto">
<li>document your code with nested typed test sets</li>
<li>show indented colored results, modifiable by user</li>
<li><code>@describe description::String begin ... end</code> : group tests under the given description</li>
<li><code>@it description::String begin ... end</code> : describe a specification</li>
<li><code>@unit description::String begin ... end</code> : describe a simple unit test</li>
<li><code>@skip</code> : will mark as skipped any assertion test, or maracas testset, macro placed after it.</li>
</ul>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">First, in your test file declare you're using the package:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Maracas"><pre><span class="pl-k">using</span> Maracas</pre></div>
<p dir="auto">Then write your testsets with <code>@describe</code>, <code>@it</code>, or <code>@unit</code> functions with the same assertions as usual (<code>@test</code>, <code>@test_throws</code>)</p>
<p dir="auto">You can also prefix testset functions with @skip like '@skip @describe', '@skip @it', or '@skip @unit' to skip a testset: the title will be shown in test results but the testset is not executed and all contained tests are ignored.</p>
<p dir="auto">@skip works also before any macro starting with <em>"@test"</em> (<code>@test</code>, <code>@test_throws</code>, <code>@test_broken</code>...)</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Maracas
is_magenta(ts::MaracasTestSet)=occursin(Base.text_colors[:magenta], ts.description)
is_blue(ts::MaracasTestSet)=occursin(Base.text_colors[:blue], ts.description)
is_cyan(ts::MaracasTestSet)=occursin(Base.text_colors[:cyan], ts.description)

@describe &quot;it is a test suite&quot; begin
    @it &quot;has specs&quot; begin
        a_spec = @it(&quot;is made with macro '@it'&quot;, begin end)
        @test occursin(&quot;[Spec]&quot;, a_spec.description)
    end
    @it &quot;has tests&quot; begin
        a_test = @unit(&quot;made with macro '@unit'&quot;, begin end)
        @test occursin(&quot;[Test]&quot;, a_test.description)
    end

    @unit &quot;test suite title is magenta by default&quot; begin
        nested_describe = @describe(&quot;you can document your code with your tests&quot;, begin end)
        @test is_magenta(nested_describe)
    end

    @unit &quot;spec title is cyan by default&quot; begin
        @test is_cyan(@it(&quot;is cyan&quot;, begin end))
    end
    @unit &quot;test title is blue by default&quot; begin
        @test is_blue(@unit(&quot;in blue&quot;, begin end))
    end

    @unit &quot;'it' is prepended to specs&quot; begin
        description = &quot;had a spec description not starting with it&quot;
        a_spec = @it(&quot;had a spec description not starting with it&quot;, begin end)
        @test occursin(string(&quot;it &quot;, description), a_spec.description)
    end

    @skip @describe &quot;a whole describe can be skipped&quot; begin
        @it &quot;should not be executed&quot; begin
            @test false
        end
    end
    @skip @it &quot;can skip '@it' with @skip&quot; begin
        @test false
    end
    @skip @unit &quot;'@unit' can be skipped with @skip&quot; begin
        @test false
    end
    @skip @testset &quot;@skip works with default testset but it's not shown in results&quot; begin
        @test false
    end
    @unit &quot;@skip can also skip @test assertions&quot; begin
        @skip @test false
        @skip @test_throws false
        @skip @test_skip false
        @skip @test_broken false
    end
end
"><pre><span class="pl-k">using</span> Maracas
<span class="pl-en">is_magenta</span>(ts<span class="pl-k">::</span><span class="pl-c1">MaracasTestSet</span>)<span class="pl-k">=</span><span class="pl-c1">occursin</span>(Base<span class="pl-k">.</span>text_colors[<span class="pl-c1">:magenta</span>], ts<span class="pl-k">.</span>description)
<span class="pl-en">is_blue</span>(ts<span class="pl-k">::</span><span class="pl-c1">MaracasTestSet</span>)<span class="pl-k">=</span><span class="pl-c1">occursin</span>(Base<span class="pl-k">.</span>text_colors[<span class="pl-c1">:blue</span>], ts<span class="pl-k">.</span>description)
<span class="pl-en">is_cyan</span>(ts<span class="pl-k">::</span><span class="pl-c1">MaracasTestSet</span>)<span class="pl-k">=</span><span class="pl-c1">occursin</span>(Base<span class="pl-k">.</span>text_colors[<span class="pl-c1">:cyan</span>], ts<span class="pl-k">.</span>description)

<span class="pl-c1">@describe</span> <span class="pl-s"><span class="pl-pds">"</span>it is a test suite<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
    <span class="pl-c1">@it</span> <span class="pl-s"><span class="pl-pds">"</span>has specs<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        a_spec <span class="pl-k">=</span> <span class="pl-c1">@it</span>(<span class="pl-s"><span class="pl-pds">"</span>is made with macro '@it'<span class="pl-pds">"</span></span>, <span class="pl-k">begin</span> <span class="pl-k">end</span>)
        <span class="pl-c1">@test</span> <span class="pl-c1">occursin</span>(<span class="pl-s"><span class="pl-pds">"</span>[Spec]<span class="pl-pds">"</span></span>, a_spec<span class="pl-k">.</span>description)
    <span class="pl-k">end</span>
    <span class="pl-c1">@it</span> <span class="pl-s"><span class="pl-pds">"</span>has tests<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        a_test <span class="pl-k">=</span> <span class="pl-c1">@unit</span>(<span class="pl-s"><span class="pl-pds">"</span>made with macro '@unit'<span class="pl-pds">"</span></span>, <span class="pl-k">begin</span> <span class="pl-k">end</span>)
        <span class="pl-c1">@test</span> <span class="pl-c1">occursin</span>(<span class="pl-s"><span class="pl-pds">"</span>[Test]<span class="pl-pds">"</span></span>, a_test<span class="pl-k">.</span>description)
    <span class="pl-k">end</span>

    <span class="pl-c1">@unit</span> <span class="pl-s"><span class="pl-pds">"</span>test suite title is magenta by default<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        nested_describe <span class="pl-k">=</span> <span class="pl-c1">@describe</span>(<span class="pl-s"><span class="pl-pds">"</span>you can document your code with your tests<span class="pl-pds">"</span></span>, <span class="pl-k">begin</span> <span class="pl-k">end</span>)
        <span class="pl-c1">@test</span> <span class="pl-c1">is_magenta</span>(nested_describe)
    <span class="pl-k">end</span>

    <span class="pl-c1">@unit</span> <span class="pl-s"><span class="pl-pds">"</span>spec title is cyan by default<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@test</span> <span class="pl-c1">is_cyan</span>(<span class="pl-c1">@it</span>(<span class="pl-s"><span class="pl-pds">"</span>is cyan<span class="pl-pds">"</span></span>, <span class="pl-k">begin</span> <span class="pl-k">end</span>))
    <span class="pl-k">end</span>
    <span class="pl-c1">@unit</span> <span class="pl-s"><span class="pl-pds">"</span>test title is blue by default<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@test</span> <span class="pl-c1">is_blue</span>(<span class="pl-c1">@unit</span>(<span class="pl-s"><span class="pl-pds">"</span>in blue<span class="pl-pds">"</span></span>, <span class="pl-k">begin</span> <span class="pl-k">end</span>))
    <span class="pl-k">end</span>

    <span class="pl-c1">@unit</span> <span class="pl-s"><span class="pl-pds">"</span>'it' is prepended to specs<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        description <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>had a spec description not starting with it<span class="pl-pds">"</span></span>
        a_spec <span class="pl-k">=</span> <span class="pl-c1">@it</span>(<span class="pl-s"><span class="pl-pds">"</span>had a spec description not starting with it<span class="pl-pds">"</span></span>, <span class="pl-k">begin</span> <span class="pl-k">end</span>)
        <span class="pl-c1">@test</span> <span class="pl-c1">occursin</span>(<span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds">"</span>it <span class="pl-pds">"</span></span>, description), a_spec<span class="pl-k">.</span>description)
    <span class="pl-k">end</span>

    <span class="pl-c1">@skip</span> <span class="pl-c1">@describe</span> <span class="pl-s"><span class="pl-pds">"</span>a whole describe can be skipped<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@it</span> <span class="pl-s"><span class="pl-pds">"</span>should not be executed<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">false</span>
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
    <span class="pl-c1">@skip</span> <span class="pl-c1">@it</span> <span class="pl-s"><span class="pl-pds">"</span>can skip '@it' with @skip<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@test</span> <span class="pl-c1">false</span>
    <span class="pl-k">end</span>
    <span class="pl-c1">@skip</span> <span class="pl-c1">@unit</span> <span class="pl-s"><span class="pl-pds">"</span>'@unit' can be skipped with @skip<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@test</span> <span class="pl-c1">false</span>
    <span class="pl-k">end</span>
    <span class="pl-c1">@skip</span> <span class="pl-c1">@testset</span> <span class="pl-s"><span class="pl-pds">"</span>@skip works with default testset but it's not shown in results<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@test</span> <span class="pl-c1">false</span>
    <span class="pl-k">end</span>
    <span class="pl-c1">@unit</span> <span class="pl-s"><span class="pl-pds">"</span>@skip can also skip @test assertions<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@skip</span> <span class="pl-c1">@test</span> <span class="pl-c1">false</span>
        <span class="pl-c1">@skip</span> <span class="pl-c1">@test_throws</span> <span class="pl-c1">false</span>
        <span class="pl-c1">@skip</span> <span class="pl-c1">@test_skip</span> <span class="pl-c1">false</span>
        <span class="pl-c1">@skip</span> <span class="pl-c1">@test_broken</span> <span class="pl-c1">false</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span>
</pre></div>
<h3 dir="auto"><a id="user-content-changing-styles" class="anchor" aria-hidden="true" href="#changing-styles"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Changing Styles</h3>
<p dir="auto">You can modify color and boldness with the folowing functions:</p>
<ul dir="auto">
<li><code>set_title_style(color::TextColor, bold::Bool=true)</code>: change the style of titles defined with <code>describe</code> (default: <code>:magenta</code>)</li>
<li><code>set_test_style(color::TextColor, bold::Bool=true)</code>:  change the style of <code>[test]</code>  (default: <code>:blue</code>)</li>
<li><code>set_spec_style(color::TextColor, bold::Bool=true)</code>: change the style of <code>[spec]</code>  (default: <code>:cyan</code>)</li>
<li><code>set_error_color(color::TextColor)</code>: set the color of error results  (default: <code>:red</code>)</li>
<li><code>set_warn_color(color::TextColor)</code>: set the color of warn results  (default: <code>:yellow</code>)</li>
<li><code>set_pass_color(color::TextColor)</code>: set the color of pass results  (default: <code>:green</code>)</li>
<li><code>set_info_color(color::TextColor)</code>: set the color of total results  (default: <code>:blue</code>)</li>
</ul>
<p dir="auto">Available colors are defined by <code>Base.text_colors</code>, which are either UInt8 between 0 and 255 inclusive or symbols you'll find inside julia REPL Help mode about <code>Base.text_colors</code>.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="$ julia
               _
   _       _ _(_)_     |  A fresh approach to technical computing
  (_)     | (_) (_)    |  Documentation: https://docs.julialang.org
   _ _   _| |_  __ _   |  Type &quot;?help&quot; for help.
  | | | | | | |/ _` |  |
  | | |_| | | | (_| |  |  Version 0.6.0 (2017-06-19 13:05 UTC)
 _/ |\__'_|_|_|\__'_|  |
|__/                   |  x86_64-redhat-linux

help?&gt; Base.text_colors
  Dictionary of color codes for the terminal.

  Available colors are: :normal, :default, :bold, :black, :blue, :cyan, :green, :light_black, :light_blue, :light_cyan, :light_green, :light_magenta, :light_red, :light_yellow, :magenta, :nothing, :red,
  :white, or :yellow as well as the integers 0 to 255 inclusive.

  The color :default will print text in the default color while the color :normal will print text with all text properties (like boldness) reset. Printing with the color :nothing will print the string without
  modifications.
"><pre class="notranslate"><code>$ julia
               _
   _       _ _(_)_     |  A fresh approach to technical computing
  (_)     | (_) (_)    |  Documentation: https://docs.julialang.org
   _ _   _| |_  __ _   |  Type "?help" for help.
  | | | | | | |/ _` |  |
  | | |_| | | | (_| |  |  Version 0.6.0 (2017-06-19 13:05 UTC)
 _/ |\__'_|_|_|\__'_|  |
|__/                   |  x86_64-redhat-linux

help?&gt; Base.text_colors
  Dictionary of color codes for the terminal.

  Available colors are: :normal, :default, :bold, :black, :blue, :cyan, :green, :light_black, :light_blue, :light_cyan, :light_green, :light_magenta, :light_red, :light_yellow, :magenta, :nothing, :red,
  :white, or :yellow as well as the integers 0 to 255 inclusive.

  The color :default will print text in the default color while the color :normal will print text with all text properties (like boldness) reset. Printing with the color :nothing will print the string without
  modifications.

</code></pre></div>
</article></div>