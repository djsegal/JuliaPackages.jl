<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-maracas" class="anchor" aria-hidden="true" href="#maracas"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Maracas</h1>
<p><a href="https://travis-ci.org/apieum/Maracas.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0efc7ae163e5d87a1c8361613996ea218ea6a907/68747470733a2f2f7472617669732d63692e6f72672f61706965756d2f4d6172616361732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/apieum/Maracas.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>The <strong>Maracas</strong> package extends julia base/test.jl to provide syntactic sugar and verbose output to tests.</p>
<p><strong>Launch your tests as usual</strong></p>
<p><a target="_blank" rel="noopener noreferrer" href="demo.gif"><img src="demo.gif" alt="Maracas tests run Demo" style="max-width:100%;"></a></p>
<h2><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Features</h2>
<ul>
<li>document your code with nested typed test sets</li>
<li>show indented colored results, modifiable by user</li>
<li><code>@describe description::String begin ... end</code> : group tests under the given description</li>
<li><code>@it description::String begin ... end</code> : describe a specification</li>
<li><code>@unit description::String begin ... end</code> : describe a simple unit test</li>
<li><code>@skip</code> : will mark as skipped any assertion test, or maracas testset, macro placed after it.</li>
</ul>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>First, in your test file declare you're using the package:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Maracas</pre></div>
<p>Then write your testsets with <code>@describe</code>, <code>@it</code>, or <code>@unit</code> functions with the same assertions as usual (<code>@test</code>, <code>@test_throws</code>)</p>
<p>You can also prefix testset functions with @skip like '@skip @describe', '@skip @it', or '@skip @unit' to skip a testset: the title will be shown in test results but the testset is not executed and all contained tests are ignored.</p>
<p>@skip works also before any macro starting with <em>"@test"</em> (<code>@test</code>, <code>@test_throws</code>, <code>@test_broken</code>...)</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Maracas
<span class="pl-en">is_magenta</span>(ts<span class="pl-k">::</span><span class="pl-c1">MaracasTestSet</span>)<span class="pl-k">=</span><span class="pl-c1">occursin</span>(Base<span class="pl-k">.</span>text_colors[<span class="pl-c1">:magenta</span>], ts<span class="pl-k">.</span>description)
<span class="pl-en">is_blue</span>(ts<span class="pl-k">::</span><span class="pl-c1">MaracasTestSet</span>)<span class="pl-k">=</span><span class="pl-c1">occursin</span>(Base<span class="pl-k">.</span>text_colors[<span class="pl-c1">:blue</span>], ts<span class="pl-k">.</span>description)
<span class="pl-en">is_cyan</span>(ts<span class="pl-k">::</span><span class="pl-c1">MaracasTestSet</span>)<span class="pl-k">=</span><span class="pl-c1">occursin</span>(Base<span class="pl-k">.</span>text_colors[<span class="pl-c1">:cyan</span>], ts<span class="pl-k">.</span>description)

<span class="pl-c1">@describe</span> <span class="pl-s"><span class="pl-pds">"</span>it is a test suite<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
    <span class="pl-c1">@it</span> <span class="pl-s"><span class="pl-pds">"</span>has specs<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        a_spec <span class="pl-k">=</span> <span class="pl-c1">@it</span>(<span class="pl-s"><span class="pl-pds">"</span>is made with macro '@it'<span class="pl-pds">"</span></span>, <span class="pl-k">begin</span> <span class="pl-k">end</span>)
        <span class="pl-c1">@test</span> <span class="pl-c1">occursin</span>(<span class="pl-s"><span class="pl-pds">"</span>[Spec]<span class="pl-pds">"</span></span>, a_spec<span class="pl-k">.</span>description)
    <span class="pl-k">end</span>
    <span class="pl-c1">@it</span> <span class="pl-s"><span class="pl-pds">"</span>has tests<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        a_test <span class="pl-k">=</span> <span class="pl-c1">@unit</span>(<span class="pl-s"><span class="pl-pds">"</span>made with macro '@unit'<span class="pl-pds">"</span></span>, <span class="pl-k">begin</span> <span class="pl-k">end</span>)
        <span class="pl-c1">@test</span> <span class="pl-c1">occursin</span>(<span class="pl-s"><span class="pl-pds">"</span>[Test]<span class="pl-pds">"</span></span>, a_test<span class="pl-k">.</span>description)
    <span class="pl-k">end</span>

    <span class="pl-c1">@unit</span> <span class="pl-s"><span class="pl-pds">"</span>test suite title is magenta by default<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        nested_describe <span class="pl-k">=</span> <span class="pl-c1">@describe</span>(<span class="pl-s"><span class="pl-pds">"</span>you can document your code with your tests<span class="pl-pds">"</span></span>, <span class="pl-k">begin</span> <span class="pl-k">end</span>)
        <span class="pl-c1">@test</span> <span class="pl-c1">is_magenta</span>(nested_describe)
    <span class="pl-k">end</span>

    <span class="pl-c1">@unit</span> <span class="pl-s"><span class="pl-pds">"</span>spec title is cyan by default<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@test</span> <span class="pl-c1">is_cyan</span>(<span class="pl-c1">@it</span>(<span class="pl-s"><span class="pl-pds">"</span>is cyan<span class="pl-pds">"</span></span>, <span class="pl-k">begin</span> <span class="pl-k">end</span>))
    <span class="pl-k">end</span>
    <span class="pl-c1">@unit</span> <span class="pl-s"><span class="pl-pds">"</span>test title is blue by default<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@test</span> <span class="pl-c1">is_blue</span>(<span class="pl-c1">@unit</span>(<span class="pl-s"><span class="pl-pds">"</span>in blue<span class="pl-pds">"</span></span>, <span class="pl-k">begin</span> <span class="pl-k">end</span>))
    <span class="pl-k">end</span>

    <span class="pl-c1">@unit</span> <span class="pl-s"><span class="pl-pds">"</span>'it' is prepended to specs<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        description <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>had a spec description not starting with it<span class="pl-pds">"</span></span>
        a_spec <span class="pl-k">=</span> <span class="pl-c1">@it</span>(<span class="pl-s"><span class="pl-pds">"</span>had a spec description not starting with it<span class="pl-pds">"</span></span>, <span class="pl-k">begin</span> <span class="pl-k">end</span>)
        <span class="pl-c1">@test</span> <span class="pl-c1">occursin</span>(<span class="pl-c1">string</span>(<span class="pl-s"><span class="pl-pds">"</span>it <span class="pl-pds">"</span></span>, description), a_spec<span class="pl-k">.</span>description)
    <span class="pl-k">end</span>

    <span class="pl-c1">@skip</span> <span class="pl-c1">@describe</span> <span class="pl-s"><span class="pl-pds">"</span>a whole describe can be skipped<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@it</span> <span class="pl-s"><span class="pl-pds">"</span>should not be executed<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
            <span class="pl-c1">@test</span> <span class="pl-c1">false</span>
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
    <span class="pl-c1">@skip</span> <span class="pl-c1">@it</span> <span class="pl-s"><span class="pl-pds">"</span>can skip '@it' with @skip<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@test</span> <span class="pl-c1">false</span>
    <span class="pl-k">end</span>
    <span class="pl-c1">@skip</span> <span class="pl-c1">@unit</span> <span class="pl-s"><span class="pl-pds">"</span>'@unit' can be skipped with @skip<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@test</span> <span class="pl-c1">false</span>
    <span class="pl-k">end</span>
    <span class="pl-c1">@skip</span> <span class="pl-c1">@testset</span> <span class="pl-s"><span class="pl-pds">"</span>@skip works with default testset but it's not shown in results<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@test</span> <span class="pl-c1">false</span>
    <span class="pl-k">end</span>
    <span class="pl-c1">@unit</span> <span class="pl-s"><span class="pl-pds">"</span>@skip can also skip @test assertions<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
        <span class="pl-c1">@skip</span> <span class="pl-c1">@test</span> <span class="pl-c1">false</span>
        <span class="pl-c1">@skip</span> <span class="pl-c1">@test_throws</span> <span class="pl-c1">false</span>
        <span class="pl-c1">@skip</span> <span class="pl-c1">@test_skip</span> <span class="pl-c1">false</span>
        <span class="pl-c1">@skip</span> <span class="pl-c1">@test_broken</span> <span class="pl-c1">false</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span>
</pre></div>
<h3><a id="user-content-changing-styles" class="anchor" aria-hidden="true" href="#changing-styles"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Changing Styles</h3>
<p>You can modify color and boldness with the folowing functions:</p>
<ul>
<li><code>set_title_style(color::TextColor, bold::Bool=true)</code>: change the style of titles defined with <code>describe</code> (default: <code>:magenta</code>)</li>
<li><code>set_test_style(color::TextColor, bold::Bool=true)</code>:  change the style of <code>[test]</code>  (default: <code>:blue</code>)</li>
<li><code>set_spec_style(color::TextColor, bold::Bool=true)</code>: change the style of <code>[spec]</code>  (default: <code>:cyan</code>)</li>
<li><code>set_error_color(color::TextColor)</code>: set the color of error results  (default: <code>:red</code>)</li>
<li><code>set_warn_color(color::TextColor)</code>: set the color of warn results  (default: <code>:yellow</code>)</li>
<li><code>set_pass_color(color::TextColor)</code>: set the color of pass results  (default: <code>:green</code>)</li>
<li><code>set_info_color(color::TextColor)</code>: set the color of total results  (default: <code>:blue</code>)</li>
</ul>
<p>Available colors are defined by <code>Base.text_colors</code>, which are either UInt8 between 0 and 255 inclusive or symbols you'll find inside julia REPL Help mode about <code>Base.text_colors</code>.</p>
<pre><code>$ julia
               _
   _       _ _(_)_     |  A fresh approach to technical computing
  (_)     | (_) (_)    |  Documentation: https://docs.julialang.org
   _ _   _| |_  __ _   |  Type "?help" for help.
  | | | | | | |/ _` |  |
  | | |_| | | | (_| |  |  Version 0.6.0 (2017-06-19 13:05 UTC)
 _/ |\__'_|_|_|\__'_|  |
|__/                   |  x86_64-redhat-linux

help?&gt; Base.text_colors
  Dictionary of color codes for the terminal.

  Available colors are: :normal, :default, :bold, :black, :blue, :cyan, :green, :light_black, :light_blue, :light_cyan, :light_green, :light_magenta, :light_red, :light_yellow, :magenta, :nothing, :red,
  :white, or :yellow as well as the integers 0 to 255 inclusive.

  The color :default will print text in the default color while the color :normal will print text with all text properties (like boldness) reset. Printing with the color :nothing will print the string without
  modifications.

</code></pre>
</article></div>