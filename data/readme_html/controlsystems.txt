<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-controlsystemsjl" class="anchor" aria-hidden="true" href="#controlsystemsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ControlSystems.jl</h1>
<p><a href="https://travis-ci.org/JuliaControl/ControlSystems.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4f07ac53913acb0491e0406ad94462e3bf0fe2e5/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961436f6e74726f6c2f436f6e74726f6c53797374656d732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaControl/ControlSystems.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/726f2d95176819fac1e4dfaa769be9690db7bf49/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f432f436f6e74726f6c53797374656d732e737667" alt="PkgEval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/C/ControlSystems.svg" style="max-width:100%;"></a>
<a href="https://gitter.im/JuliaControl/ControlSystems.jl?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge" rel="nofollow"><img src="https://camo.githubusercontent.com/952f4c387d5203efa42965e37527040a8dea94ca/68747470733a2f2f6261646765732e6769747465722e696d2f4a756c6961436f6e74726f6c2f436f6e74726f6c53797374656d732e6a6c2e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/JuliaControl/ControlSystems.jl.svg" style="max-width:100%;"></a></p>
<p><a href="https://juliacontrol.github.io/ControlSystems.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://juliacontrol.github.io/ControlSystems.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>A control systems design toolbox for Julia.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>To install, in the Julia REPL:</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>ControlSystems<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-news" class="anchor" aria-hidden="true" href="#news"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>News</h2>
<h3><a id="user-content-2019-11-03" class="anchor" aria-hidden="true" href="#2019-11-03"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>2019-11-03</h3>
<ul>
<li>Poles and zeros are "not sorted" as in Julia versions &lt; 1.2, even on newer versions of Julia. This should imply that complex conjugates are kept together.</li>
</ul>
<h3><a id="user-content-2019-05-28" class="anchor" aria-hidden="true" href="#2019-05-28"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>2019-05-28</h3>
<h4><a id="user-content-delay-systems" class="anchor" aria-hidden="true" href="#delay-systems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Delay systems</h4>
<ul>
<li>We now support systems with time delays. Example:</li>
</ul>
<div class="highlight highlight-source-julia"><pre>sys <span class="pl-k">=</span> <span class="pl-c1">tf</span>(<span class="pl-c1">1</span>, [<span class="pl-c1">1</span>,<span class="pl-c1">1</span>])<span class="pl-k">*</span><span class="pl-c1">delay</span>(<span class="pl-c1">1</span>)
<span class="pl-c1">stepplot</span>(sys, <span class="pl-c1">5</span>) <span class="pl-c"><span class="pl-c">#</span> Compilation time might be long for first simulation</span>
<span class="pl-c1">nyquistplot</span>(sys)</pre></div>
<h4><a id="user-content-new-examples" class="anchor" aria-hidden="true" href="#new-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>New examples</h4>
<ul>
<li><a href="https://github.com/JuliaControl/ControlSystems.jl/blob/master/example/delayed_lti_system.jl">Delayed systems (frequency domain)</a></li>
<li><a href="https://github.com/JuliaControl/ControlSystems.jl/blob/master/example/delayed_lti_timeresp.jl">Delayed systems (time domain)</a></li>
<li><a href="https://github.com/baggepinnen/MonteCarloMeasurements.jl/blob/master/examples/controlsystems.jl">Systems with uncertainty</a></li>
<li><a href="https://github.com/baggepinnen/MonteCarloMeasurements.jl/blob/master/examples/robust_controller_opt.jl">Robust PID optimization</a></li>
</ul>
<h3><a id="user-content-2019-05-22" class="anchor" aria-hidden="true" href="#2019-05-22"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>2019-05-22</h3>
<p>New state-space type <code>HeteroStateSpace</code> that accepts matrices of heterogeneous types: <a href="https://juliacontrol.github.io/ControlSystems.jl/latest/man/creating_systems/#Creating-State-Space-Systems-1" rel="nofollow">example using <code>StaticArrays</code></a>.</p>
<h3><a id="user-content-2019-01-31" class="anchor" aria-hidden="true" href="#2019-01-31"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>2019-01-31</h3>
<p>System identification using <a href="https://github.com/baggepinnen/ControlSystemIdentification.jl">ControlSystemIdentification.jl</a> is now available. The <a href="https://github.com/baggepinnen/ControlSystemIdentification.jl">readme</a> together with a series of notebooks serve as documentation.</p>
<ul>
<li><a href="https://github.com/JuliaControl/ControlExamples.jl/blob/master/identification_statespace.ipynb">State-space identification</a></li>
<li><a href="https://github.com/JuliaControl/ControlExamples.jl/blob/master/identification_arx.ipynb">ARX/PLR</a></li>
<li><a href="https://github.com/JuliaControl/ControlExamples.jl/blob/master/identification_spectral.ipynb">Transfer-function estimation using spectral methods</a></li>
<li><a href="https://github.com/JuliaControl/ControlExamples.jl/blob/master/identification_impulse_response.ipynb">Impulse-response estimation</a></li>
</ul>
<h3><a id="user-content-2018-09-30" class="anchor" aria-hidden="true" href="#2018-09-30"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>2018-09-30</h3>
<p>Support for Julia 0.7/1.0 added.</p>
<h3><a id="user-content-2018-09-01" class="anchor" aria-hidden="true" href="#2018-09-01"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>2018-09-01</h3>
<ul>
<li>LTISystem types are now more generic and can hold matrices/vectors of arbitrary type. Examples (partly pseudo-code):</li>
</ul>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">ss</span>(<span class="pl-c1">1</span>)
<span class="pl-c1">ss</span>(<span class="pl-c1">1.</span>)
<span class="pl-c1">ss</span>(<span class="pl-c1">1im</span>)
<span class="pl-c1">ss</span>(ForwardDiff<span class="pl-k">.</span><span class="pl-c1">Dual</span>(<span class="pl-c1">1.</span>))
<span class="pl-c1">ss</span>(<span class="pl-c1">GPUArray</span>([<span class="pl-c1">1</span>]))
<span class="pl-c1">ss</span>(<span class="pl-c1">SparseMatrix</span>([<span class="pl-c1">1</span>]))</pre></div>
<p>Similar for <code>tf,zpk</code> etc.</p>
<ul>
<li>Continuous time systems are simulated with continuous time solvers from <code>OrdinaryDiffEq.jl</code></li>
<li>Freqresp now returns frequencies in the first dimension.</li>
<li>Breaking: <code>lsim(sys, u::Function)</code> syntax has changed from <code>u(t,x)</code> to <code>u(x,t)</code> to be consistent with <code>OrdinaryDiffEq</code></li>
<li>Breaking: <code>feedback(P,C)</code> no longer returns <code>feedback(P*C)</code>. The behavior is changed to <code>feedback(P1, P2) = P1/(1+P1*P2)</code>.</li>
<li>Type <code>Simulator</code> provides lower level interface to continuous time simulation.</li>
<li>Example <a href="https://github.com/JuliaControl/ControlSystems.jl/tree/master/example/autodiff.jl">autodiff.jl</a> provides an illustration of how the new generic types can be used for automatic differentiation of a cost function through the continuous-time solver, which allows for optimization of the cost function w.r.t. PID parameters.</li>
</ul>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Documentation</h2>
<p>All functions have docstrings, which can be viewed from the REPL, using for example <code>?tf </code>.</p>
<p>A documentation website is available at <a href="http://juliacontrol.github.io/ControlSystems.jl/latest/" rel="nofollow">http://juliacontrol.github.io/ControlSystems.jl/latest/</a>.</p>
<p>Some of the available commands are:</p>
<h5><a id="user-content-constructing-systems" class="anchor" aria-hidden="true" href="#constructing-systems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Constructing systems</h5>
<p>ss, tf, zpk, ss2tf</p>
<h5><a id="user-content-analysis" class="anchor" aria-hidden="true" href="#analysis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Analysis</h5>
<p>pole, tzero, norm, hinfnorm, linfnorm, ctrb, obsv, gangoffour, margin, markovparam, damp, dampreport, zpkdata, dcgain, covar, gram, sigma, sisomargin</p>
<h5><a id="user-content-synthesis" class="anchor" aria-hidden="true" href="#synthesis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Synthesis</h5>
<p>care, dare, dlyap, lqr, dlqr, place, leadlink, laglink, leadlinkat, rstd, rstc, dab, balreal, baltrunc</p>
<h6><a id="user-content-pid-design" class="anchor" aria-hidden="true" href="#pid-design"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PID design</h6>
<p>pid, stabregionPID, loopshapingPI, pidplots</p>
<h5><a id="user-content-time-and-frequency-response" class="anchor" aria-hidden="true" href="#time-and-frequency-response"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Time and Frequency response</h5>
<p>step, impulse, lsim, freqresp, evalfr, bode, nyquist</p>
<h5><a id="user-content-plotting" class="anchor" aria-hidden="true" href="#plotting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Plotting</h5>
<p>lsimplot, stepplot, impulseplot, bodeplot, nyquistplot, sigmaplot, marginplot, gangoffourplot, pidplots, pzmap, nicholsplot, pidplots, rlocus, leadlinkcurve</p>
<h5><a id="user-content-other" class="anchor" aria-hidden="true" href="#other"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Other</h5>
<p>minreal, sminreal, c2d</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>This toolbox works similar to that of other major computer-aided control
systems design (CACSD) toolboxes. Systems can be created in either a <a href="http://en.wikipedia.org/wiki/Transfer_function" rel="nofollow">transfer
function</a> or a <a href="http://en.wikipedia.org/wiki/State-space_representation" rel="nofollow">state
space</a> representation.
These systems can then be combined into larger architectures, simulated in both
time and frequency domain, and analyzed for stability/performance properties.</p>
<h3><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example</h3>
<p>Here we create a simple position controller for an electric motor with an
inertial load.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ControlSystems

<span class="pl-c"><span class="pl-c">#</span> Motor parameters</span>
J <span class="pl-k">=</span> <span class="pl-c1">2.0</span>
b <span class="pl-k">=</span> <span class="pl-c1">0.04</span>
K <span class="pl-k">=</span> <span class="pl-c1">1.0</span>
R <span class="pl-k">=</span> <span class="pl-c1">0.08</span>
L <span class="pl-k">=</span> <span class="pl-c1">1e-4</span>

<span class="pl-c"><span class="pl-c">#</span> Create the model transfer function</span>
s <span class="pl-k">=</span> <span class="pl-c1">tf</span>(<span class="pl-s"><span class="pl-pds">"</span>s<span class="pl-pds">"</span></span>)
P <span class="pl-k">=</span> K<span class="pl-k">/</span>(s<span class="pl-k">*</span>((J<span class="pl-k">*</span>s <span class="pl-k">+</span> b)<span class="pl-k">*</span>(L<span class="pl-k">*</span>s <span class="pl-k">+</span> R) <span class="pl-k">+</span> K<span class="pl-k">^</span><span class="pl-c1">2</span>))
<span class="pl-c"><span class="pl-c">#</span> This generates the system</span>
<span class="pl-c"><span class="pl-c">#</span> TransferFunction:</span>
<span class="pl-c"><span class="pl-c">#</span>                1.0</span>
<span class="pl-c"><span class="pl-c">#</span> ---------------------------------</span>
<span class="pl-c"><span class="pl-c">#</span> 0.0002s^3 + 0.160004s^2 + 1.0032s</span>
<span class="pl-c"><span class="pl-c">#</span></span>
<span class="pl-c"><span class="pl-c">#</span>Continuous-time transfer function model</span>

<span class="pl-c"><span class="pl-c">#</span> Create an array of closed loop systems for different values of Kp</span>
CLs <span class="pl-k">=</span> TransferFunction[kp<span class="pl-k">*</span>P<span class="pl-k">/</span>(<span class="pl-c1">1</span> <span class="pl-k">+</span> kp<span class="pl-k">*</span>P) <span class="pl-k">for</span> kp <span class="pl-k">=</span> [<span class="pl-c1">1</span>, <span class="pl-c1">5</span>, <span class="pl-c1">15</span>]];

<span class="pl-c"><span class="pl-c">#</span> Plot the step response of the controllers</span>
<span class="pl-c"><span class="pl-c">#</span> Any keyword arguments supported in Plots.jl can be supplied</span>
<span class="pl-c1">stepplot</span>(CLs, label<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">"</span>Kp = 1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Kp = 5<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Kp = 15<span class="pl-pds">"</span></span>])</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="/example/step_response.png"><img src="/example/step_response.png" alt="StepResponse" style="max-width:100%;"></a></p>
<h3><a id="user-content-additional-examples" class="anchor" aria-hidden="true" href="#additional-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Additional examples</h3>
<p>See the examples folder</p>
</article></div>