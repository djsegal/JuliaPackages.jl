<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-the-boykov-kolmogorov-maxflow-algorithm" class="anchor" aria-hidden="true" href="#the-boykov-kolmogorov-maxflow-algorithm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>The Boykov-Kolmogorov Maxflow Algorithm</h1>
<p><a href="https://travis-ci.org/Gnimuc/BKMaxflow.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1305870bde3a279a3a635887626de0e35909b741/68747470733a2f2f7472617669732d63692e6f72672f476e696d75632f424b4d6178666c6f772e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Gnimuc/BKMaxflow.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/Gnimuc/bkmaxflow-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/e39ef581f9655730814692c1ae22f6a5d393d696/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7931383579773834386c6e30753430352f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/y185yw848ln0u405/branch/master?svg=true" style="max-width:100%;"></a>
<a href="http://codecov.io/github/Gnimuc/BKMaxflow.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/3512a952c05c83ef0857711cf08e0b66581603b1/687474703a2f2f636f6465636f762e696f2f6769746875622f476e696d75632f424b4d6178666c6f772e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/Gnimuc/BKMaxflow.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/Gnimuc/BKMaxflow.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/cd3ffabf59a3f43f855ea77d6c7187d63af100ed/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f476e696d75632f424b4d6178666c6f772e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/Gnimuc/BKMaxflow.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package provides a wrapper for <a href="http://www.csd.uwo.ca/faculty/yuri/Abstracts/pami04-abs.shtml" rel="nofollow">Vladimir Kolmogorov's Max-flow/min-cut library</a> and a pure Julia implementation of the algorithm. The wrapper will automatically download those precompiled binaries(<strong>note the <a href="http://vision.csd.uwo.ca/code/maxflow-v3.01.zip" rel="nofollow">maxflow-v3.01</a> library has its own license, you may need to take a look before using it</strong>) from <a href="https://github.com/Gnimuc/BKMaxflowBuilder/releases">BKMaxflowBuilder</a> and it is much faster than the Julia implementation. However, the Julia version is more understandable and could be served as a good learning material for the algorithm. In addition, this implementation is 3x faster and more scalable than the one in <a href="https://github.com/JuliaGraphs/LightGraphsFlows.jl">LightGraphsFlows.jl</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>This package is not officially registered, you could either use it as an unregistered package or an isolated project which means it's not in your default environment.</p>
<h3><a id="user-content-package" class="anchor" aria-hidden="true" href="#package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Package</h3>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>Gnimuc<span class="pl-k">/</span>BKMaxflow<span class="pl-k">.</span>jl<span class="pl-k">.</span>git
<span class="pl-c"><span class="pl-c">#</span> or</span>
pkg<span class="pl-k">&gt;</span> dev https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>Gnimuc<span class="pl-k">/</span>BKMaxflow<span class="pl-k">.</span>jl<span class="pl-k">.</span>git</pre></div>
<h3><a id="user-content-project" class="anchor" aria-hidden="true" href="#project"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Project</h3>
<ul>
<li>clone this repo to any directory you prefer</li>
<li><code>cd</code> to that directory</li>
<li>start Julia and run <code>activate .</code> in <code>pkg&gt;</code> mode</li>
<li>run <code>pkg&gt; build</code> or <code>pkg&gt; instantiate</code> if needed</li>
</ul>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick Start</h2>
<h3><a id="user-content-julia-api" class="anchor" aria-hidden="true" href="#julia-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Julia API</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> BKMaxflow

weights, neighbors <span class="pl-k">=</span> <span class="pl-c1">create_graph</span>(JuliaImpl{Float64,Int}, <span class="pl-c1">4</span>)

<span class="pl-c1">add_edge!</span>(weights, neighbors, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1.</span>, <span class="pl-c1">1.</span>)
<span class="pl-c1">add_edge!</span>(weights, neighbors, <span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2.</span>, <span class="pl-c1">2.</span>)
<span class="pl-c1">add_edge!</span>(weights, neighbors, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">3.</span>, <span class="pl-c1">4.</span>)
<span class="pl-c1">add_edge!</span>(weights, neighbors, <span class="pl-c1">2</span>, <span class="pl-c1">4</span>, <span class="pl-c1">5.</span>, <span class="pl-c1">5.</span>)
<span class="pl-c1">add_edge!</span>(weights, neighbors, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">6.</span>, <span class="pl-c1">6.</span>)

w <span class="pl-k">=</span> <span class="pl-c1">reshape</span>(weights, <span class="pl-c1">2</span>, :)
flow, label <span class="pl-k">=</span> <span class="pl-c1">boykov_kolmogorov</span>(<span class="pl-c1">1</span>, <span class="pl-c1">4</span>, neighbors, w)</pre></div>
<h3><a id="user-content-c-apihigh-level" class="anchor" aria-hidden="true" href="#c-apihigh-level"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>C API(high-level)</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> BKMaxflow

g <span class="pl-k">=</span> <span class="pl-c1">create_graph</span>(CImpl{Cdouble}, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>)

<span class="pl-c1">add_node</span>(CImpl{Cdouble}, g, <span class="pl-c1">1</span>)
<span class="pl-c1">add_node</span>(CImpl{Cdouble}, g, <span class="pl-c1">1</span>)

<span class="pl-c1">add_tweights</span>(CImpl, g, <span class="pl-c1">0</span>, <span class="pl-c1">1.</span>, <span class="pl-c1">5.</span>)
<span class="pl-c1">add_tweights</span>(CImpl, g, <span class="pl-c1">1</span>, <span class="pl-c1">2.</span>, <span class="pl-c1">6.</span>)

<span class="pl-c1">add_edge</span>(CImpl, g, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-c1">3.</span>, <span class="pl-c1">4.</span>)

flow <span class="pl-k">=</span> <span class="pl-c1">maxflow</span>(CImpl{Cdouble}, g)  <span class="pl-c"><span class="pl-c">#</span>-&gt; 3</span>

<span class="pl-c1">what_segment</span>(CImpl{Cdouble}, g, <span class="pl-c1">0</span>)  <span class="pl-c"><span class="pl-c">#</span>-&gt; 1 which means it belongs to sink</span>
<span class="pl-c1">what_segment</span>(CImpl{Cdouble}, g, <span class="pl-c1">1</span>)  <span class="pl-c"><span class="pl-c">#</span>-&gt; 1 which means it belongs to sink</span>

<span class="pl-c1">delete_graph</span>(CImpl{Cdouble}, g)</pre></div>
<h3><a id="user-content-c-apilow-level" class="anchor" aria-hidden="true" href="#c-apilow-level"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>C API(low-level)</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> BKMaxflow

err <span class="pl-k">=</span> <span class="pl-c1">Ref</span><span class="pl-c1">{bk_error}</span>(C_NULL)

g <span class="pl-k">=</span> <span class="pl-c1">bk_create_graph_double</span>(<span class="pl-c1">2</span>, <span class="pl-c1">1</span>, err[])

<span class="pl-c1">bk_add_node_double</span>(g, <span class="pl-c1">1</span>, err[])
<span class="pl-c1">bk_add_node_double</span>(g, <span class="pl-c1">1</span>, err[])

<span class="pl-c1">bk_add_tweights_double</span>(g, <span class="pl-c1">0</span>, <span class="pl-c1">1.</span>, <span class="pl-c1">5.</span>, err[])
<span class="pl-c1">bk_add_tweights_double</span>(g, <span class="pl-c1">1</span>, <span class="pl-c1">2.</span>, <span class="pl-c1">6.</span>, err[])

<span class="pl-c1">bk_add_edge_double</span>(g, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-c1">3.</span>, <span class="pl-c1">4.</span>, err[])

flow <span class="pl-k">=</span> <span class="pl-c1">bk_maxflow_double</span>(g, <span class="pl-c1">false</span>, err[])

<span class="pl-c1">bk_what_segment_double</span>(g, <span class="pl-c1">0</span>, err[])
<span class="pl-c1">bk_what_segment_double</span>(g, <span class="pl-c1">1</span>, err[])

<span class="pl-c1">bk_delete_graph_double</span>(g)</pre></div>
<h2><a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Reference</h2>
<p>Boykov, Yuri, and Vladimir Kolmogorov. "An experimental comparison of min-cut/max-flow algorithms for energy minimization in vision." Pattern Analysis and Machine Intelligence, IEEE Transactions on 26.9 (2004): 1124-1137.</p>
</article></div>