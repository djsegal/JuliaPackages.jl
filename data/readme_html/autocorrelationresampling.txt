<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-autocorrelationresampling" class="anchor" aria-hidden="true" href="#autocorrelationresampling"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AutoCorrelationResampling</h1>
<p dir="auto"><a href="https://github.com/shamazmazum/AutoCorrelationResampling.jl/actions/workflows/test.yml"><img src="https://github.com/shamazmazum/AutoCorrelationResampling.jl/actions/workflows/test.yml/badge.svg" alt="CI" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides means to resample autocorrelation functions.</p>
<p dir="auto">Autocorrelation function of one variable is a Laurent polynomial on ℝ in the
form <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="b700f4ece28c70a2a5d63fce092d0a71">$s(x) = f(x)f(x^{-1})$</math-renderer> where <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="b700f4ece28c70a2a5d63fce092d0a71">$f(x)$</math-renderer> is a usual polynomial on ℝ.</p>
<p dir="auto">This package provides resampling of autocorrelation function in the sense that
it changes the degree of <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="b700f4ece28c70a2a5d63fce092d0a71">$s(x)$</math-renderer> while maintaining the form <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="b700f4ece28c70a2a5d63fce092d0a71">$f(x)f(x^{-1})$</math-renderer>.</p>
<p dir="auto">Technically, this package works with autocorrelation function of three variables
<math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="b700f4ece28c70a2a5d63fce092d0a71">$s(x,y,z)$</math-renderer> in the form of three-dimensional arrays and rescales them along the
third variable (or axis), i.e. an array of shape <code>(x, y, z)</code> becomes an array of
shape <code>(x, y, nz)</code> where <code>n</code> is a resampling factor.</p>
<h2 dir="auto">
<a id="user-content-why-is-it-needed" class="anchor" aria-hidden="true" href="#why-is-it-needed"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Why is it needed?</h2>
<p dir="auto">This package is an attempt to solve the problem of reconstruction of a porous
media when only a fraction of information about original media is available
(e.g. you have to reconstruct 3D cube from a stack of 2D slices taken along <code>z</code>
axis). If those slices are evenly sampled (i.e. you have each <code>n</code>-th slice), you
can do the following:</p>
<ol dir="auto">
<li>Stack the slices in 3D array. This array will have a length along <code>z</code> axis
reduced by <code>n</code> times.</li>
<li>Calculate autocorrelation function (also known as two-point function) for the
reduced array.</li>
<li>Upsample it by <code>n</code> times using this package</li>
<li>Reconstruct original 3D image (you can use <code>PhaseRec.jl</code> package for it).</li>
</ol>
<h2 dir="auto">
<a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to use?</h2>
<p dir="auto">Resampling is done by <code>ac_resample</code> function which takes an autocorrelation
array and a resample ratio. An optional low-pass filter can be passed to
<code>ac_resample</code> and by default is obtained with <code>filter_coeffs</code> function. These
filters are not unique, you can play with them supplying different argument
<code>initial</code> to <code>filter_coeffs</code>.</p>
</article></div>