<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-biostockholmjl" class="anchor" aria-hidden="true" href="#biostockholmjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>BioStockholm.jl</h1>
<p dir="auto">Julia parser for the <a href="https://en.wikipedia.org/wiki/Stockholm_format" rel="nofollow">Stockholm file
format</a> (.sto) used
for multiple sequence alignments (Pfam, Rfam, etc).  This package uses
<a href="https://github.com/BioJulia/Automa.jl">Automa.jl</a> under the hood to
generate a finite state machine parser.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Enter the package mode from the Julia REPL by pressing <code>]</code>, then
install with:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="add BioStockholm"><pre class="notranslate"><code>add BioStockholm
</code></pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using BioStockholm

msa = MSA{Char}(;
    seq = Dict(&quot;human&quot;   =&gt; &quot;ACACGCGAAA.GCGCAA.CAAACGUGCACGG&quot;,
               &quot;chimp&quot;   =&gt; &quot;GAAUGUGAAAAACACCA.CUCUUGAGGACCU&quot;,
               &quot;bigfoot&quot; =&gt; &quot;UUGAG.UUCG..CUCGUUUUCUCGAGUACAC&quot;),
     GC = Dict(&quot;SS_cons&quot; =&gt; &quot;...&lt;&lt;&lt;.....&gt;&gt;&gt;....&lt;&lt;....&gt;&gt;.....&quot;)
)

# read from file
# example2.sto contains an example Stockholm file
msa_path = joinpath(dirname(pathof(BioStockholm)), &quot;..&quot;,
                    &quot;test&quot;, &quot;example2.sto&quot;)
msa_str = read(msa_path, String)
print(msa_str)

# read from a file or parse from a String
msa = read(msa_path, MSA)
msa = parse(MSA, msa_str)

# write to a file
write(&quot;foobar.sto&quot;, msa)

# pretty-print
print(msa)
print(stdout, msa)"><pre><span class="pl-k">using</span> BioStockholm

msa <span class="pl-k">=</span> <span class="pl-c1">MSA</span><span class="pl-c1">{Char}</span>(;
    seq <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>human<span class="pl-pds">"</span></span>   <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>ACACGCGAAA.GCGCAA.CAAACGUGCACGG<span class="pl-pds">"</span></span>,
               <span class="pl-s"><span class="pl-pds">"</span>chimp<span class="pl-pds">"</span></span>   <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>GAAUGUGAAAAACACCA.CUCUUGAGGACCU<span class="pl-pds">"</span></span>,
               <span class="pl-s"><span class="pl-pds">"</span>bigfoot<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>UUGAG.UUCG..CUCGUUUUCUCGAGUACAC<span class="pl-pds">"</span></span>),
     GC <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>SS_cons<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>...&lt;&lt;&lt;.....&gt;&gt;&gt;....&lt;&lt;....&gt;&gt;.....<span class="pl-pds">"</span></span>)
)

<span class="pl-c"><span class="pl-c">#</span> read from file</span>
<span class="pl-c"><span class="pl-c">#</span> example2.sto contains an example Stockholm file</span>
msa_path <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">pathof</span>(BioStockholm)), <span class="pl-s"><span class="pl-pds">"</span>..<span class="pl-pds">"</span></span>,
                    <span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>example2.sto<span class="pl-pds">"</span></span>)
msa_str <span class="pl-k">=</span> <span class="pl-c1">read</span>(msa_path, String)
<span class="pl-c1">print</span>(msa_str)

<span class="pl-c"><span class="pl-c">#</span> read from a file or parse from a String</span>
msa <span class="pl-k">=</span> <span class="pl-c1">read</span>(msa_path, MSA)
msa <span class="pl-k">=</span> <span class="pl-c1">parse</span>(MSA, msa_str)

<span class="pl-c"><span class="pl-c">#</span> write to a file</span>
<span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">"</span>foobar.sto<span class="pl-pds">"</span></span>, msa)

<span class="pl-c"><span class="pl-c">#</span> pretty-print</span>
<span class="pl-c1">print</span>(msa)
<span class="pl-c1">print</span>(<span class="pl-c1">stdout</span>, msa)</pre></div>
<h2 dir="auto"><a id="user-content-limitations--todo" class="anchor" aria-hidden="true" href="#limitations--todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Limitations / TODO</h2>
<ul dir="auto">
<li>when writing, long sequences or text is never split over multiple lines</li>
<li>integrate with BioJulia string types</li>
</ul>
<h2 dir="auto"><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related packages</h2>
<p dir="auto"><a href="https://github.com/diegozea/MIToS.jl">MIToS.jl</a> is a package for
analysing protein sequences that also supports parsing the Stockholm
format (and many more things).</p>
</article></div>