<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-pomdpstresstestingjl" class="anchor" aria-hidden="true" href="#pomdpstresstestingjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>POMDPStressTesting.jl</h1>
<p><a href="https://sisl.github.io/POMDPStressTesting.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/sisl/POMDPStressTesting.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/907f9fd9b8a07557df5726aa533305314e40d3383a222d5b61a1015824ee09b4/68747470733a2f2f7472617669732d63692e6f72672f7369736c2f504f4d445053747265737354657374696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/sisl/POMDPStressTesting.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/sisl/POMDPStressTesting.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/41df00ad023b0e86f2ed9dc082da7718363b32631333b1fc9ed9135799eee695/68747470733a2f2f636f6465636f762e696f2f67682f7369736c2f504f4d445053747265737354657374696e672e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/sisl/POMDPStressTesting.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Adaptive stress testing of black-box systems, implemented within the <a href="https://github.com/JuliaPOMDP/POMDPs.jl">POMDPs.jl</a> ecosystem.</p>
<p>See the <a href="https://sisl.github.io/POMDPStressTesting.jl/dev/" rel="nofollow">documentation</a> for more details.</p>
<h1><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Citation</h1>
<p>If you use this package for research purposes, please cite the following:</p>
<p><a href="https://joss.theoj.org/papers/04dc39ea89e90938727d789a2e402b0b" rel="nofollow"><img src="https://camo.githubusercontent.com/8a03c07495b843b730d7459410cc29933f56aa198390ca909bb11bc399307586/68747470733a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f30346463333965613839653930393338373237643738396132653430326230622f7374617475732e737667" alt="status" data-canonical-src="https://joss.theoj.org/papers/04dc39ea89e90938727d789a2e402b0b/status.svg" style="max-width:100%;"></a></p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="@article{moss2021pomdpstresstesting,
  title = {{POMDPStressTesting.jl}: Adaptive Stress Testing for Black-Box Systems},
  author = {Robert J. Moss},
  journal = {Journal of Open Source Software},
  year = {2021},
  volume = {6},
  number = {60},
  pages = {2749},
  doi = {10.21105/joss.02749}
}
"><pre><code>@article{moss2021pomdpstresstesting,
  title = {{POMDPStressTesting.jl}: Adaptive Stress Testing for Black-Box Systems},
  author = {Robert J. Moss},
  journal = {Journal of Open Source Software},
  year = {2021},
  volume = {6},
  number = {60},
  pages = {2749},
  doi = {10.21105/joss.02749}
}
</code></pre></div>
<h1><a id="user-content-interface" class="anchor" aria-hidden="true" href="#interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Interface</h1>
<p>To stress test a new system, the user has to define the <code>GrayBox</code> and <code>BlackBox</code> interface outlined in <a href="https://github.com/mossr/POMDPStressTesting.jl/blob/master/src/GrayBox.jl"><code>src/GrayBox.jl</code></a> and <a href="https://github.com/mossr/POMDPStressTesting.jl/blob/master/src/BlackBox.jl"><code>src/BlackBox.jl</code></a>.</p>
<h3><a id="user-content-graybox-interface" class="anchor" aria-hidden="true" href="#graybox-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GrayBox Interface</h3>
<p>The <code>GrayBox</code> simulator and environment interface includes:</p>
<ul>
<li><code>GrayBox.Simulation</code> type to hold simulation variables</li>
<li><code>GrayBox.environment(sim::Simulation)</code> to return the collection of environment distributions</li>
<li><code>GrayBox.transition!(sim::Simulation)</code> to transition the simulator, returning the log-likelihood</li>
</ul>
<h3><a id="user-content-blackbox--interface" class="anchor" aria-hidden="true" href="#blackbox--interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>BlackBox  Interface</h3>
<p>The <code>BlackBox</code> system interface includes:</p>
<ul>
<li><code>BlackBox.initialize!(sim::Simulation)</code> to initialize/reset the system under test</li>
<li><code>BlackBox.evaluate!(sim::Simulation)</code> to evaluate/execute the system under test</li>
<li><code>BlackBox.distance(sim::Simulation)</code> to return how close we are to an event</li>
<li><code>BlackBox.isevent(sim::Simulation)</code> to indicate if a failure event occurred</li>
<li><code>BlackBox.isterminal(sim::Simulation)</code> to indicate the simulation is in a terminal state</li>
</ul>
<p>Functions ending with <code>!</code> may modify the <code>Simulation</code> object in place.</p>
<h1><a id="user-content-solvers" class="anchor" aria-hidden="true" href="#solvers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Solvers</h1>
<p>Several solvers are implemented.</p>
<h4><a id="user-content-reinforcement-learning-solvers" class="anchor" aria-hidden="true" href="#reinforcement-learning-solvers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Reinforcement learning solvers</h4>
<ul>
<li><a href="https://github.com/mossr/POMDPStressTesting.jl/blob/master/src/solvers/mcts.jl"><code>MCTSPWSolver</code></a></li>
</ul>
<h4><a id="user-content-deep-reinforcement-learning-solvers1" class="anchor" aria-hidden="true" href="#deep-reinforcement-learning-solvers1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Deep reinforcement learning solvers<sup>1</sup></h4>
<ul>
<li><a href="https://github.com/mossr/POMDPStressTesting.jl/blob/master/src/solvers/drl/trpo.jl"><code>TRPOSolver</code></a></li>
<li><a href="https://github.com/mossr/POMDPStressTesting.jl/blob/master/src/solvers/drl/ppo.jl"><code>PPOSolver</code></a></li>
</ul>
<h4><a id="user-content-stochastic-optimization-solvers" class="anchor" aria-hidden="true" href="#stochastic-optimization-solvers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Stochastic optimization solvers</h4>
<ul>
<li><a href="https://github.com/mossr/POMDPStressTesting.jl/blob/master/src/solvers/cem.jl"><code>CEMSolver</code></a></li>
</ul>
<h4><a id="user-content-baseline-solvers" class="anchor" aria-hidden="true" href="#baseline-solvers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Baseline solvers</h4>
<ul>
<li><a href="https://github.com/mossr/POMDPStressTesting.jl/blob/master/src/solvers/random_search.jl"><code>RandomSearchSolver</code></a></li>
</ul>
<h1><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h1>
<p><a href="https://nbviewer.jupyter.org/github/sisl/POMDPStressTesting.jl/blob/master/notebooks/Walk1D.ipynb" rel="nofollow"><img src="https://camo.githubusercontent.com/ee9cfc14066b87ad099de24501068d5934bdf8fa4c67d5ad099ad46231071ec8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6578616d706c652d6e6f7465626f6f6b2d626c7565" alt="Example Notebook" data-canonical-src="https://img.shields.io/badge/example-notebook-blue" style="max-width:100%;"></a></p>
<p>An example implementation of the AST interface is provided for the Walk1D problem:</p>
<ul>
<li><strong>Julia source</strong>: <a href="https://github.com/mossr/POMDPStressTesting.jl/blob/master/test/Walk1D.jl"><code>test/Walk1D.jl</code></a></li>
<li><strong>Jupyter notebook</strong>: <a href="https://nbviewer.jupyter.org/github/sisl/POMDPStressTesting.jl/blob/master/notebooks/Walk1D.ipynb" rel="nofollow"><code>Walk1D.ipynb</code></a></li>
<li><strong>Descriptive tutorial-style write-up</strong>: <a href="./test/pdf/walk1d.pdf"><code>walk1d.pdf</code></a> (created using <a href="https://github.com/mossr/TeX.jl">TeX.jl</a>)</li>
</ul>

<kbd>
<p align="center">
  <a href="./test/pdf/walk1d.pdf">
    <img src="./test/svg/walk1d.svg" style="max-width:100%;">
  </a>
</p>
</kbd>

<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h1>
<p>Install <code>RLInterface.jl</code> then the <code>POMDPStressTesting.jl</code> package via:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg
pkg&quot;add https://github.com/JuliaPOMDP/RLInterface.jl&quot;
pkg&quot;add https://github.com/sisl/POMDPStressTesting.jl&quot;
"><pre><span class="pl-k">using</span> Pkg
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add https://github.com/JuliaPOMDP/RLInterface.jl<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add https://github.com/sisl/POMDPStressTesting.jl<span class="pl-pds">"</span></span></pre></div>
<h3><a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Testing</h3>
<p>To run the test suite, you can use the Julia package manager.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="] test POMDPStressTesting
"><pre>] test POMDPStressTesting</pre></div>
<h1><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing</h1>
<p>We welcome contributions! Please fork the repository and submit a new Pull Request.</p>
<hr>
<p>Package maintained by Robert Moss: <a href="mailto:mossr@cs.stanford.edu">mossr@cs.stanford.edu</a></p>
<p><sup>1</sup> TRPO and PPO thanks to <a href="https://github.com/shreyas-kowshik/RL-baselines.jl">Shreyas Kowshik's</a> initial implementation.</p>
</article></div>