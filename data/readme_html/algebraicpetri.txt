<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-algebraicpetrijl" class="anchor" aria-hidden="true" href="#algebraicpetrijl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AlgebraicPetri.jl</h1>
<p dir="auto"><a href="https://AlgebraicJulia.github.io/AlgebraicPetri.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable Documentation" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://AlgebraicJulia.github.io/AlgebraicPetri.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Development Documentation" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/AlgebraicJulia/AlgebraicPetri.jl/actions/workflows/julia_ci.yml"><img src="https://github.com/AlgebraicJulia/AlgebraicPetri.jl/actions/workflows/julia_ci.yml/badge.svg" alt="CI/CD" style="max-width: 100%;"></a>
<a href="https://zenodo.org/badge/latestdoi/275202510" rel="nofollow"><img src="https://camo.githubusercontent.com/1a208004b5e727bc8efe150d106867fadad23a5b8e954b7a3f84ba7d88e2c9b6/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3237353230323531302e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/275202510.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><code>AlgebraicPetri.jl</code> is a Julia library for building Petri Net models
compositionally. This library acts as a bridge between
<a href="https://github.com/AlgebraicJulia/Catlab.jl">Catlab.jl</a> and
<a href="https://github.com/mehalter/Petri.jl">Petri.jl</a>. This package defines the
category of Open Petri Nets as described in [<a href="https://arxiv.org/abs/1808.05415" rel="nofollow">Baez 2018</a>].</p>
</article></div>