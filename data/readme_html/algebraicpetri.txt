<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-algebraicpetrijl" class="anchor" aria-hidden="true" href="#algebraicpetrijl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>AlgebraicPetri.jl</h1>
<p><a href="https://algebraicjulia.github.io/AlgebraicPetri.jl/dev/" rel="nofollow"><img src="https://github.com/AlgebraicJulia/AlgebraicPetri.jl/workflows/Documentation/badge.svg" alt="Documentation" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/AlgebraicJulia/AlgebraicPetri.jl/workflows/Tests/badge.svg"><img src="https://github.com/AlgebraicJulia/AlgebraicPetri.jl/workflows/Tests/badge.svg" alt="Tests" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/AlgebraicJulia/AlgebraicPetri.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4cf38afbeb514ad887647076c62152239d367e30e7d7bb7df404460cf784766c/68747470733a2f2f636f6465636f762e696f2f67682f416c676562726169634a756c69612f416c6765627261696350657472692e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Code Coverage" data-canonical-src="https://codecov.io/gh/AlgebraicJulia/AlgebraicPetri.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://zenodo.org/badge/latestdoi/275202510" rel="nofollow"><img src="https://camo.githubusercontent.com/1a208004b5e727bc8efe150d106867fadad23a5b8e954b7a3f84ba7d88e2c9b6/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3237353230323531302e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/275202510.svg" style="max-width:100%;"></a></p>
<p><code>AlgebraicPetri.jl</code> is a Julia library for building Petri Net models
compositionally. This library acts as a bridge between
<a href="https://github.com/AlgebraicJulia/Catlab.jl">Catlab.jl</a> and
<a href="https://github.com/mehalter/Petri.jl">Petri.jl</a>. This package defines the
category of Open Petri Nets as described in [<a href="https://arxiv.org/abs/1808.05415" rel="nofollow">Baez 2018</a>].</p>
</article></div>