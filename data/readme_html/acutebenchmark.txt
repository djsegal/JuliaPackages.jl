<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-acutebenchmark" class="anchor" aria-hidden="true" href="#acutebenchmark"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AcuteBenchmark</h1>
<p dir="auto"><a href="https://aminya.github.io/AcuteBenchmark.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/aminya/AcuteBenchmark.jl/workflows/CI/badge.svg"><img src="https://github.com/aminya/AcuteBenchmark.jl/workflows/CI/badge.svg" alt="Build Status (Github Actions)" style="max-width: 100%;"></a></p>
<p dir="auto">AcuteBenchmark allows you to benchmark functions that get Arrays as their input.</p>
<p dir="auto">It is used inside <a href="https://github.com/JuliaMath/VML.jl">IntelVectorMath</a> for benchmarking its functions. A fully working example available here: <a href="https://github.com/JuliaMath/VML.jl/blob/AcuteBenchmark/benchmark/benchmark.jl">https://github.com/JuliaMath/VML.jl/blob/AcuteBenchmark/benchmark/benchmark.jl</a></p>
<p dir="auto">Creates random inputs for a function based on limits, types, and dims specified.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="config = Funb(
    fun = sin,
    limits = [(-1,1)],
    types = [Float32, Float64],
    dims = [10 100 200],
)"><pre>config <span class="pl-k">=</span> <span class="pl-c1">Funb</span>(
    fun <span class="pl-k">=</span> sin,
    limits <span class="pl-k">=</span> [(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)],
    types <span class="pl-k">=</span> [Float32, Float64],
    dims <span class="pl-k">=</span> [<span class="pl-c1">10</span> <span class="pl-c1">100</span> <span class="pl-c1">200</span>],
)</pre></div>
<p dir="auto">or just in a compact form:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="config = Funb( sin, [(-1,1)], [Float32, Float64], [10 100 200])"><pre>config <span class="pl-k">=</span> <span class="pl-c1">Funb</span>( sin, [(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)], [Float32, Float64], [<span class="pl-c1">10</span> <span class="pl-c1">100</span> <span class="pl-c1">200</span>])</pre></div>
<ul dir="auto">
<li>fun: the function <code>:fun</code> or :(Module.fun)</li>
<li>limits: min and max of possible values</li>
<li>types : type of elements</li>
<li>dims:
<ul dir="auto">
<li>each element gives the size of the input, and it is a:
<ul dir="auto">
<li>Number (for 1D)</li>
<li>Tuple (for N-D)</li>
</ul>
</li>
<li>each row for each function argument</li>
<li>each column for each dimension set.</li>
</ul>
</li>
</ul>
<p dir="auto">use benchmark! to run the benchmark:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using AcuteBenchmark

configs = FunbArray([
    Funb( sin, [(-1,1)],[Float32, Float64], [10] );
    Funb( atan, [(-1,1), (-1,1)],[Float32, Float64],[10; 10] );
    Funb( *, [(-1, 1), (-1, 1), (-1, 1)], [Float32, Float64], [(10,10); (10,10)] );
    ])

benchmark!(configs)"><pre><span class="pl-k">using</span> AcuteBenchmark

configs <span class="pl-k">=</span> <span class="pl-c1">FunbArray</span>([
    <span class="pl-c1">Funb</span>( sin, [(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)],[Float32, Float64], [<span class="pl-c1">10</span>] );
    <span class="pl-c1">Funb</span>( atan, [(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>), (<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)],[Float32, Float64],[<span class="pl-c1">10</span>; <span class="pl-c1">10</span>] );
    <span class="pl-c1">Funb</span>( <span class="pl-k">*</span>, [(<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>), (<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>), (<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>)], [Float32, Float64], [(<span class="pl-c1">10</span>,<span class="pl-c1">10</span>); (<span class="pl-c1">10</span>,<span class="pl-c1">10</span>)] );
    ])

<span class="pl-c1">benchmark!</span>(configs)</pre></div>
<p dir="auto">Plot the benchmark result using:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="bar(configs)"><pre><span class="pl-c1">bar</span>(configs)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="test/bar/bench-dims-set1.png"><img src="test/bar/bench-dims-set1.png" alt="bench-dims-set1" style="max-width: 100%;"></a></p>
<p dir="auto">To have a same color for the same types use:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="bar(configs, uniqueType = true, dimAnnotation = true)"><pre><span class="pl-c1">bar</span>(configs, uniqueType <span class="pl-k">=</span> <span class="pl-c1">true</span>, dimAnnotation <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="test/bar/bench-dims-set1-unique.png"><img src="test/bar/bench-dims-set1-unique.png" alt="bench-dims-set1-unique" style="max-width: 100%;"></a></p>
<p dir="auto">To plot the relative speed, pass a pair of configs:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="bar(configsRealBase =&gt; configsRealIVM, uniqueType = true, dimAnnotation = false, uniqueDim = true, &quot;Base&quot; =&gt; &quot;IntelVectorMath&quot;)"><pre><span class="pl-c1">bar</span>(configsRealBase <span class="pl-k">=&gt;</span> configsRealIVM, uniqueType <span class="pl-k">=</span> <span class="pl-c1">true</span>, dimAnnotation <span class="pl-k">=</span> <span class="pl-c1">false</span>, uniqueDim <span class="pl-k">=</span> <span class="pl-c1">true</span>, <span class="pl-s"><span class="pl-pds">"</span>Base<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>IntelVectorMath<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/aminya/AcuteBenchmark-Results/master/IntelVectorMath/Real/bar/bench-dims-set6-relative.png"><img src="https://raw.githubusercontent.com/aminya/AcuteBenchmark-Results/master/IntelVectorMath/Real/bar/bench-dims-set6-relative.png" alt="IntelVectorMath Performance Comparison" style="max-width: 100%;"></a></p>
<p dir="auto">To plot how the function acts over different dimension sets:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="configs2 = Funb( sin, [(-1,1)],[Float32, Float64], [10 30 50 100 200 500] );
benchmark!(configs2)
dimplot(configs2)"><pre>configs2 <span class="pl-k">=</span> <span class="pl-c1">Funb</span>( sin, [(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)],[Float32, Float64], [<span class="pl-c1">10</span> <span class="pl-c1">30</span> <span class="pl-c1">50</span> <span class="pl-c1">100</span> <span class="pl-c1">200</span> <span class="pl-c1">500</span>] );
<span class="pl-c1">benchmark!</span>(configs2)
<span class="pl-c1">dimplot</span>(configs2)</pre></div>
<p dir="auto">The axes are logarithmic.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="test/dimplot/bench-sin.png"><img src="test/dimplot/bench-sin.png" alt="bench-sin" style="max-width: 100%;"></a></p>
<p dir="auto">To compare different sets pass an array of configs:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="dimplot([configsRealBase,configsRealIVM],[&quot;Base&quot;, &quot;IntelVectorMath&quot;])"><pre><span class="pl-c1">dimplot</span>([configsRealBase,configsRealIVM],[<span class="pl-s"><span class="pl-pds">"</span>Base<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>IntelVectorMath<span class="pl-pds">"</span></span>])</pre></div>

<p dir="auto">Use <code>AcuteBenchmark.save</code> and <code>AcuteBenchmark.load</code> to read and write the benchmark data.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="AcuteBenchmark.save(&quot;test.jld2&quot;, configs)
configs_loaded = AcuteBenchmark.load(&quot;test.jld2&quot;)"><pre>AcuteBenchmark<span class="pl-k">.</span><span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>test.jld2<span class="pl-pds">"</span></span>, configs)
configs_loaded <span class="pl-k">=</span> AcuteBenchmark<span class="pl-k">.</span><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>test.jld2<span class="pl-pds">"</span></span>)</pre></div>
</article></div>