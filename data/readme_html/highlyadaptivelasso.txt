<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-highlyadaptivelasso" class="anchor" aria-hidden="true" href="#highlyadaptivelasso"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>HighlyAdaptiveLasso</h1>
<p dir="auto"><a href="https://olivierlabayle.github.io/HighlyAdaptiveLasso.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://olivierlabayle.github.io/HighlyAdaptiveLasso.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/olivierlabayle/HighlyAdaptiveLasso.jl/actions"><img src="https://github.com/olivierlabayle/HighlyAdaptiveLasso.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/olivierlabayle/HighlyAdaptiveLasso.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5284db04bc0f52c84a0c59fb02e58f9af8c95240efc508de9de51ad40ed3b359/68747470733a2f2f636f6465636f762e696f2f67682f6f6c69766965726c616261796c652f486967686c7941646170746976654c6173736f2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/olivierlabayle/HighlyAdaptiveLasso.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">A MLJ wrapper to the R <a href="https://github.com/tlverse/hal9001">HAL</a> package.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The project relies on <a href="https://juliainterop.github.io/RCall.jl/stable/installation/" rel="nofollow">RCall</a>, if you don't want to fallback on a Conda installation, you should make sure the <code>R_HOME</code> environment variable is correctly set. For known issues regarding RCall compatibility look into the RCall intallation section.</p>
<p dir="auto">You will also need to install the original <a href="https://github.com/tlverse/hal9001">HAL package</a> in your R environment.</p>
<p dir="auto">This wrapper can then be installed via:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="add HighlyAdaptiveLasso"><pre>add HighlyAdaptiveLasso</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
using HighlyAdaptiveLasso, MLJ, Random

X = randn(100, 4)
y = randn(100)

hal = HALRegressor()
mach = machine(hal, X, y)

evaluate!(mach)
"><pre><span class="pl-k">using</span> HighlyAdaptiveLasso, MLJ, Random

X <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">100</span>, <span class="pl-c1">4</span>)
y <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">100</span>)

hal <span class="pl-k">=</span> <span class="pl-c1">HALRegressor</span>()
mach <span class="pl-k">=</span> <span class="pl-c1">machine</span>(hal, X, y)

<span class="pl-c1">evaluate!</span>(mach)
</pre></div>
</article></div>