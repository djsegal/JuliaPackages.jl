<div id="readme" class="md" data-path="Readme.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-loadflint" class="anchor" aria-hidden="true" href="#loadflint"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LoadFlint</h1>
<p><a href="https://github.com/oscar-system/LoadFlint.jl/actions?query=workflow%3A%22Run+tests%22"><img src="https://github.com/oscar-system/LoadFlint.jl/workflows/Run%20tests/badge.svg" alt="Build Status" style="max-width:100%;"></a></p>
<p>Problem:
Polymake needs flint needs gmp
Nemo needs antic needs flint needs gmp</p>
<p>Depending on the order of the calls to <strong>init</strong> two copies of libflint (and libgmp) are loaded.
The ones coming from Nemo have the memory allocators set to use the julia allocators, while
Polymake does not.</p>
<p>Later in the code
I call libantic
which calls libflint to alloc memory
Then I call libflint to free the memory, as antic is a derivative of flint.</p>
<p>Now antic calls the 2nd copy of libflint, the one where memory management is done by
the system</p>
<p>Thus the free from the 1st call to libflint crashes.</p>
<p>Alternative approach
set all memory functions in all gmp's to match julia:
fails as allocations in polymake are happening before Julia can change this.</p>
<p>Thus LoadFlint</p>
<p>which will only make sure that libgmp and libflint are in the process space and properly initialized.</p>
</article></div>