<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-concavehull" class="anchor" aria-hidden="true" href="#concavehull"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ConcaveHull</h1>
<p><a href="https://travis-ci.org/lstagner/ConcaveHull.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/593731a9ecfa93b8110eface0794257db97ba882/68747470733a2f2f7472617669732d63692e6f72672f6c737461676e65722f436f6e6361766548756c6c2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/lstagner/ConcaveHull.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package computes the concave/convex hull of a set of points using a nearest neighbours algorithm[1].</p>
<blockquote>
<p>[1] Moreira, Adriano, and Maribel Yasmina Santos. "Concave hull: A k-nearest neighbours approach for the computation of the region occupied by a set of points." (2007).</p>
</blockquote>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>ConcaveHull<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> Add package</span>
<span class="pl-k">using</span> ConcaveHull
<span class="pl-k">using</span> Plots

points <span class="pl-k">=</span> [[th, <span class="pl-k">-</span><span class="pl-c1">sin</span>(th)] <span class="pl-k">.+</span> (<span class="pl-c1">0.4</span><span class="pl-k">*</span><span class="pl-c1">rand</span>(<span class="pl-c1">2</span>) <span class="pl-k">.-</span> <span class="pl-c1">0.2</span>) <span class="pl-k">for</span> th <span class="pl-k">in</span> <span class="pl-c1">range</span>(<span class="pl-c1">0</span>, stop<span class="pl-k">=</span><span class="pl-c1">2</span>pi, length<span class="pl-k">=</span><span class="pl-c1">5000</span>)];
x <span class="pl-k">=</span> [p[<span class="pl-c1">1</span>] <span class="pl-k">for</span> p <span class="pl-k">in</span> points];
y <span class="pl-k">=</span> [p[<span class="pl-c1">2</span>] <span class="pl-k">for</span> p <span class="pl-k">in</span> points];

hull <span class="pl-k">=</span> <span class="pl-c1">concave_hull</span>(points)
hull_area <span class="pl-k">=</span> <span class="pl-c1">area</span>(hull)

<span class="pl-c1">scatter</span>(x,y,ms<span class="pl-k">=</span><span class="pl-c1">1</span>,label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>,axis<span class="pl-k">=</span><span class="pl-c1">false</span>,grid<span class="pl-k">=</span><span class="pl-c1">false</span>,markerstrokewidth<span class="pl-k">=</span><span class="pl-c1">0.0</span>)
<span class="pl-c1">plot!</span>(hull)
<span class="pl-c1">annotate!</span>(pi<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-c1">0.5</span>,<span class="pl-s"><span class="pl-pds">"</span>K = <span class="pl-v">$(hull<span class="pl-k">.</span>k)</span><span class="pl-pds">"</span></span>)
<span class="pl-c1">annotate!</span>(pi<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-c1">0.25</span>,<span class="pl-s"><span class="pl-pds">"</span>Area <span class="pl-v">$(<span class="pl-c1">round</span>(hull_area, digits<span class="pl-k">=</span><span class="pl-c1">3</span>))</span><span class="pl-pds">"</span></span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="./docs/hull_15.png"><img src="./docs/hull_15.png" alt="" style="max-width:100%;"></a></p>
<h2><a id="user-content-smoothness" class="anchor" aria-hidden="true" href="#smoothness"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Smoothness</h2>
<p>The smoothness of the concave hull can be adjusted by increasing the number of neighbours used</p>
<div class="highlight highlight-source-julia"><pre>hull <span class="pl-k">=</span> <span class="pl-c1">concave_hull</span>(points,<span class="pl-c1">100</span>) <span class="pl-c"><span class="pl-c">#</span> Use 100 neighbours</span>
hull_area <span class="pl-k">=</span> <span class="pl-c1">area</span>(hull)

<span class="pl-c1">scatter</span>(x,y,ms<span class="pl-k">=</span><span class="pl-c1">1</span>,label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>,axis<span class="pl-k">=</span><span class="pl-c1">false</span>,grid<span class="pl-k">=</span><span class="pl-c1">false</span>,markerstrokewidth<span class="pl-k">=</span><span class="pl-c1">0.0</span>)
<span class="pl-c1">plot!</span>(hull)
<span class="pl-c1">annotate!</span>(pi<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-c1">0.5</span>,<span class="pl-s"><span class="pl-pds">"</span>K = <span class="pl-v">$(hull<span class="pl-k">.</span>k)</span><span class="pl-pds">"</span></span>)
<span class="pl-c1">annotate!</span>(pi<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-c1">0.25</span>,<span class="pl-s"><span class="pl-pds">"</span>Area <span class="pl-v">$(<span class="pl-c1">round</span>(hull_area, digits<span class="pl-k">=</span><span class="pl-c1">3</span>))</span><span class="pl-pds">"</span></span>)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="./docs/hull_100.png"><img src="./docs/hull_100.png" alt="" style="max-width:100%;"></a></p>
</article></div>