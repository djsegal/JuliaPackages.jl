<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-financialsymbology-v034" class="anchor" aria-hidden="true" href="#financialsymbology-v034"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FinancialSymbology v0.3.4</h1>
<p dir="auto">A package to standardise financial security symbology with the <a href="https://www.openfigi.com" rel="nofollow">OpenFIGI</a> methodology.</p>
<p dir="auto">Inlcudes automatic symbol type detection to allow for various ID input types (i.e. Sedol, Cusip, ISIN etc.).</p>
<p dir="auto">Communicates with the <a href="https://www.openfigi.com/api" rel="nofollow">OpenFIGI API</a> to retrieve security information.</p>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<p dir="auto"><code>fetchsecuritydata</code> can be used either using <code>String</code>s as identifiers or the built-in <code>Type</code>s in the Identifiers module.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using FinancialSymbology

julia&gt; aapl_5 = first(fetchsecuritydata(&quot;AAPL&quot;, &quot;TICKER&quot;), 5)
5-element StructArray(::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}) with eltype FinancialSymbology.OpenFigiAsset:
 FIGI: BBG000B9XRY4 Common Stock
 FIGI: BBG000B9XSK7 Common Stock
 FIGI: BBG000B9XT70 Common Stock
 FIGI: BBG000B9XVV8 Common Stock
 FIGI: BBG000B9XWM6 Common Stock

julia&gt; aapl_5.exchCode
5-element Vector{Union{Nothing, String}}:
 &quot;US&quot;
 &quot;UA&quot;
 &quot;UC&quot;
 &quot;UN&quot;
 &quot;UP&quot;

julia&gt; aapl_us = fetchsecuritydata(&quot;AAPL&quot;, &quot;TICKER&quot;; exchCode=&quot;US&quot;)
1-element StructArray(::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}) with eltype FinancialSymbology.OpenFigiAsset:
 FIGI: BBG000B9XRY4 Common Stock

julia&gt; aapl_us[1]
FIGI: BBG000B9XRY4 Common Stock

julia&gt; aapl_us[1].name
&quot;APPLE INC&quot;"><pre lang="julia-repl" class="notranslate"><code>julia&gt; using FinancialSymbology

julia&gt; aapl_5 = first(fetchsecuritydata("AAPL", "TICKER"), 5)
5-element StructArray(::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}) with eltype FinancialSymbology.OpenFigiAsset:
 FIGI: BBG000B9XRY4 Common Stock
 FIGI: BBG000B9XSK7 Common Stock
 FIGI: BBG000B9XT70 Common Stock
 FIGI: BBG000B9XVV8 Common Stock
 FIGI: BBG000B9XWM6 Common Stock

julia&gt; aapl_5.exchCode
5-element Vector{Union{Nothing, String}}:
 "US"
 "UA"
 "UC"
 "UN"
 "UP"

julia&gt; aapl_us = fetchsecuritydata("AAPL", "TICKER"; exchCode="US")
1-element StructArray(::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}) with eltype FinancialSymbology.OpenFigiAsset:
 FIGI: BBG000B9XRY4 Common Stock

julia&gt; aapl_us[1]
FIGI: BBG000B9XRY4 Common Stock

julia&gt; aapl_us[1].name
"APPLE INC"
</code></pre></div>
<p dir="auto">Individual constructors can create <code>Identifier</code> types or the convenience function <code>makeidentifier</code> will automatically detect the identifier type and convert it.
Single <code>Identifier</code>s or <code>Vector{&lt;:Identifier}</code> can be passed to the <code>fetchsecuritydata</code> function without the need for the <code>idType</code> argument.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; identifiers = makeidentifier.([&quot;AAPL US Equity&quot;, &quot;BDDXSM4&quot;])
2-element Vector{Identifier}:
 &quot;AAPL US Equity&quot;
 &quot;BDDXSM4&quot;

julia&gt; fetchsecuritydata(identifiers)
Dict{String, StructArrays.StructArray} with 2 entries:
  &quot;AAPL US Equity&quot; =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
  &quot;BDDXSM4&quot;        =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…"><pre lang="julia-repl" class="notranslate"><code>julia&gt; identifiers = makeidentifier.(["AAPL US Equity", "BDDXSM4"])
2-element Vector{Identifier}:
 "AAPL US Equity"
 "BDDXSM4"

julia&gt; fetchsecuritydata(identifiers)
Dict{String, StructArrays.StructArray} with 2 entries:
  "AAPL US Equity" =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
  "BDDXSM4"        =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; identifiers = [Ticker(&quot;AAPL US Equity&quot;), Sedol(&quot;BDDXSM4&quot;)]
2-element Vector{Identifier}:
 &quot;AAPL US Equity&quot;
 &quot;BDDXSM4&quot;

julia&gt; fetchsecuritydata(identifiers)
Dict{String, StructArrays.StructArray} with 2 entries:
  &quot;AAPL US Equity&quot; =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
  &quot;BDDXSM4&quot;        =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…"><pre lang="julia-repl" class="notranslate"><code>julia&gt; identifiers = [Ticker("AAPL US Equity"), Sedol("BDDXSM4")]
2-element Vector{Identifier}:
 "AAPL US Equity"
 "BDDXSM4"

julia&gt; fetchsecuritydata(identifiers)
Dict{String, StructArrays.StructArray} with 2 entries:
  "AAPL US Equity" =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
  "BDDXSM4"        =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; aapl = fetchsecuritydata(Ticker(&quot;AAPL US Equity&quot;))
1-element StructArray(::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}) with eltype FinancialSymbology.OpenFigiAsset:
 FIGI: BBG000B9XRY4 Common Stock

julia&gt; aapl.figi
1-element Vector{Union{Nothing, String}}:
 &quot;BBG000B9XRY4&quot;

julia&gt; using DataFrames

julia&gt; aapl |&gt; DataFrame
1×10 DataFrame
 Row │ figi          marketSector  securityType  ticker  name       exchCode   ⋯
     │ Union…        Union…        Union…        Union…  Union…     Union…     ⋯
─────┼──────────────────────────────────────────────────────────────────────────
   1 │ BBG000B9XRY4  Equity        Common Stock  AAPL    APPLE INC  US         ⋯
                                                               4 columns omitted"><pre lang="julia-repl" class="notranslate"><code>julia&gt; aapl = fetchsecuritydata(Ticker("AAPL US Equity"))
1-element StructArray(::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}, ::Vector{Union{Nothing, String}}) with eltype FinancialSymbology.OpenFigiAsset:
 FIGI: BBG000B9XRY4 Common Stock

julia&gt; aapl.figi
1-element Vector{Union{Nothing, String}}:
 "BBG000B9XRY4"

julia&gt; using DataFrames

julia&gt; aapl |&gt; DataFrame
1×10 DataFrame
 Row │ figi          marketSector  securityType  ticker  name       exchCode   ⋯
     │ Union…        Union…        Union…        Union…  Union…     Union…     ⋯
─────┼──────────────────────────────────────────────────────────────────────────
   1 │ BBG000B9XRY4  Equity        Common Stock  AAPL    APPLE INC  US         ⋯
                                                               4 columns omitted
</code></pre></div>
<h1 dir="auto"><a id="user-content-more-examples" class="anchor" aria-hidden="true" href="#more-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>More Examples</h1>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; tickers = [&quot;AAPL&quot;, &quot;VOD&quot;, &quot;TSLA&quot;]
3-element Vector{String}:
 &quot;AAPL&quot;
 &quot;VOD&quot;
 &quot;TSLA&quot;

julia&gt; fetchsecuritydata(tickers, &quot;TICKER&quot;; marketSecDes=&quot;Equity&quot;, exchCode=[&quot;US&quot;, &quot;LN&quot;, &quot;US&quot;])
Dict{String, StructArrays.StructArray} with 3 entries:
  &quot;AAPL&quot; =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
  &quot;VOD&quot;  =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
  &quot;TSLA&quot; =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…"><pre lang="julia-repl" class="notranslate"><code>julia&gt; tickers = ["AAPL", "VOD", "TSLA"]
3-element Vector{String}:
 "AAPL"
 "VOD"
 "TSLA"

julia&gt; fetchsecuritydata(tickers, "TICKER"; marketSecDes="Equity", exchCode=["US", "LN", "US"])
Dict{String, StructArrays.StructArray} with 3 entries:
  "AAPL" =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
  "VOD"  =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
  "TSLA" =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; idstrings = [&quot;BBG000B9XRY4&quot;, &quot;037833100&quot;, &quot;US0378331005&quot;]
3-element Vector{String}:
 &quot;BBG000B9XRY4&quot;
 &quot;037833100&quot;
 &quot;US0378331005&quot;

julia&gt; idtypes = [&quot;ID_BB_GLOBAL&quot;, &quot;ID_CUSIP&quot;, &quot;ID_ISIN&quot;]
3-element Vector{String}:
 &quot;ID_BB_GLOBAL&quot;
 &quot;ID_CUSIP&quot;
 &quot;ID_ISIN&quot;

julia&gt; fetchsecuritydata(idstrings, idtypes; exchCode=&quot;US&quot;)
Dict{String, StructArrays.StructArray} with 3 entries:
  &quot;US0378331005&quot; =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
  &quot;037833100&quot;    =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
  &quot;BBG000B9XRY4&quot; =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…"><pre lang="julia-repl" class="notranslate"><code>julia&gt; idstrings = ["BBG000B9XRY4", "037833100", "US0378331005"]
3-element Vector{String}:
 "BBG000B9XRY4"
 "037833100"
 "US0378331005"

julia&gt; idtypes = ["ID_BB_GLOBAL", "ID_CUSIP", "ID_ISIN"]
3-element Vector{String}:
 "ID_BB_GLOBAL"
 "ID_CUSIP"
 "ID_ISIN"

julia&gt; fetchsecuritydata(idstrings, idtypes; exchCode="US")
Dict{String, StructArrays.StructArray} with 3 entries:
  "US0378331005" =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
  "037833100"    =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
  "BBG000B9XRY4" =&gt; FinancialSymbology.OpenFigiAsset[OpenFigiAsset…
</code></pre></div>
<h2 dir="auto"><a id="user-content-identifiers" class="anchor" aria-hidden="true" href="#identifiers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Identifiers</h2>
<p dir="auto">Financial symbols must first be converted to a vector of <code>Identifier</code>. This can be automated or done manually (automated detection unavailable for <code>Index</code> identifiers).</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; ids = makeidentifier.([&quot;B0YQ5W0&quot;,
                              &quot;037833100&quot;,
                              &quot;US0378331005&quot;,
                              &quot;BBG000B9Y5X2&quot;,
                              &quot;AAPL US Equity&quot;])
5-element Vector{Identifier}:
 &quot;B0YQ5W0&quot;
 &quot;037833100&quot;
 &quot;US0378331005&quot;
 &quot;BBG000B9Y5X2&quot;
 &quot;AAPL US Equity&quot;

julia&gt; typeof.(ids)
5-element Vector{DataType}:
 Sedol
 Cusip
 Isin
 Figi
 Ticker"><pre lang="julia-repl" class="notranslate"><code>julia&gt; ids = makeidentifier.(["B0YQ5W0",
                              "037833100",
                              "US0378331005",
                              "BBG000B9Y5X2",
                              "AAPL US Equity"])
5-element Vector{Identifier}:
 "B0YQ5W0"
 "037833100"
 "US0378331005"
 "BBG000B9Y5X2"
 "AAPL US Equity"

julia&gt; typeof.(ids)
5-element Vector{DataType}:
 Sedol
 Cusip
 Isin
 Figi
 Ticker
</code></pre></div>
</article></div>