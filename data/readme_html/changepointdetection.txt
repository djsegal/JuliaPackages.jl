<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-changepointdetectionjl" class="anchor" aria-hidden="true" href="#changepointdetectionjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ChangePointDetection.jl</h1>
<p><a href="https://travis-ci.com/johncwok/ChangePointDetection.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/152d170e0bafe1902c2d2868df92542d5856023db15f62bc16ff3fcbca814500/68747470733a2f2f7472617669732d63692e636f6d2f6a6f686e63776f6b2f4368616e6765506f696e74446574656374696f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/johncwok/ChangePointDetection.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>A fast Julia implementation of the least square density difference (LSDD) method. It is used to detect changepoints in time-series or to infer wether or not two time-series come from the same underlying probability distribution. The LSDD method was developped in the article <em>Density-difference estimation</em> from <em>M. Sugiyama, T. Suzuki, T. Kanamori, M. C. du Plessis, S. Liu, and I. Takeuchi.</em> in 2013.</p>
<p>Given two time-series <a target="_blank" rel="noopener noreferrer" href="https://render.githubusercontent.com/render/math?math=x_{1}(t)"><img src="https://render.githubusercontent.com/render/math?math=x_{1}(t)" style="max-width:100%;"></a> and <a target="_blank" rel="noopener noreferrer" href="https://render.githubusercontent.com/render/math?math=x_{2}(t)"><img src="https://render.githubusercontent.com/render/math?math=x_{2}(t)" style="max-width:100%;"></a> produced by underlying probability densities <a target="_blank" rel="noopener noreferrer" href="https://render.githubusercontent.com/render/math?math=p_{1}(x)"><img src="https://render.githubusercontent.com/render/math?math=p_{1}(x)" style="max-width:100%;"></a> and <a target="_blank" rel="noopener noreferrer" href="https://render.githubusercontent.com/render/math?math=p_{2}(x)"><img src="https://render.githubusercontent.com/render/math?math=p_{2}(x)" style="max-width:100%;"></a>, the LSDD method directly modelizes the difference <a target="_blank" rel="noopener noreferrer" href="https://render.githubusercontent.com/render/math?math=g(x) = p_{1}(x) - p_{2}(x)"><img src="https://render.githubusercontent.com/render/math?math=g(x) = p_{1}(x) - p_{2}(x)" style="max-width:100%;"></a> to compute its L2 norm. This approach has good convergence properties and is more accurate than computing the KL-divergence of <a target="_blank" rel="noopener noreferrer" href="https://render.githubusercontent.com/render/math?math=p_{1}(x)"><img src="https://render.githubusercontent.com/render/math?math=p_{1}(x)" style="max-width:100%;"></a> and <a target="_blank" rel="noopener noreferrer" href="https://render.githubusercontent.com/render/math?math=p_{2}(x)"><img src="https://render.githubusercontent.com/render/math?math=p_{2}(x)" style="max-width:100%;"></a> after estimating them from scratch.</p>
<p>In practice, the closer the LSDD value is to 0, the more similar <a target="_blank" rel="noopener noreferrer" href="https://render.githubusercontent.com/render/math?math=p_{1}(x)"><img src="https://render.githubusercontent.com/render/math?math=p_{1}(x)" style="max-width:100%;"></a> and <a target="_blank" rel="noopener noreferrer" href="https://render.githubusercontent.com/render/math?math=p_{2}(x)"><img src="https://render.githubusercontent.com/render/math?math=p_{2}(x)" style="max-width:100%;"></a> are. To estimate changepoints in a time-series, two sliding windows are used. The LSDD value of these two sliding windows is computed along the whole time-series. Spikes in the obtained LSDD "profile" indicate potential changepoints. The procedure is best understood graphically :</p>
<p align="center">
  <a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/34754896/85131911-1052dc80-b238-11ea-9e36-31d33a2fbd48.png"><img width="600" height="300" src="https://user-images.githubusercontent.com/34754896/85131911-1052dc80-b238-11ea-9e36-31d33a2fbd48.png" style="max-width:100%;"></a>
</p>
<p>One ends up with a time-dependant LSDD "profile", and threshold can be set to detect changepoints when exceeded.</p>
<h2><a id="user-content-usage-" class="anchor" aria-hidden="true" href="#usage-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage :</h2>
<p>To infer if two time-series come from the same underlying probability density, use the <code>lsdd(ts1, ts2)</code> function :</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="lsdd(x::Array{Float64,1}, y::Array{Float64,1}; folds = 5, sigma_list = nothing, lambda_list = nothing)
    Input :
        'x', 'y' : the time-series of data upon which to perform the lsdd computation.
        folds : the number of cross-validation tests. higher is more precise but more expensive.
        sigma_list, lambda_list : points defining the grid search during the optimization of gaussian kernels.
    Returns :
        L2 : lsdd value.
"><pre><code>lsdd(x::Array{Float64,1}, y::Array{Float64,1}; folds = 5, sigma_list = nothing, lambda_list = nothing)
    Input :
        'x', 'y' : the time-series of data upon which to perform the lsdd computation.
        folds : the number of cross-validation tests. higher is more precise but more expensive.
        sigma_list, lambda_list : points defining the grid search during the optimization of gaussian kernels.
    Returns :
        L2 : lsdd value.
</code></pre></div>
<p>To compute the LSDD profile of a time-series, use the <code>lsdd_profile(ts; window = 70)</code> function :</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="lsdd_profile(ts; window = 70)
  Input :
      `ts` : the time-series to analyze
       window : the size of the sliding windows used for the lsdd computation. Bigger windows will be more accurate but can rapidly become very cumputationally expensive.
  Returns : lsdd profile of the input time-series. Note that since we are using 2 sliding windows, only time steps [1:end-2*window] are actually taken in account.  
"><pre><code>lsdd_profile(ts; window = 70)
  Input :
      `ts` : the time-series to analyze
       window : the size of the sliding windows used for the lsdd computation. Bigger windows will be more accurate but can rapidly become very cumputationally expensive.
  Returns : lsdd profile of the input time-series. Note that since we are using 2 sliding windows, only time steps [1:end-2*window] are actually taken in account.  
</code></pre></div>
<p>Finally, to run an automatized changepoint detection, you can use the <code>changepoints(ts; threshold = 0.5, window = 150)</code> function.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="Input
    ts : time-series to analyse
    threshold : when exceeded, a changepoint is detected
    window : size of the sliding windows;
Returns : a 1-D array of all detected change points.
"><pre><code>Input
    ts : time-series to analyse
    threshold : when exceeded, a changepoint is detected
    window : size of the sliding windows;
Returns : a 1-D array of all detected change points.
</code></pre></div>
<h2><a id="user-content-example-" class="anchor" aria-hidden="true" href="#example-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example :</h2>
<p>The following code</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using Plots

ts1 = rand(500)
ts2 = 1.5 * rand(500) .+ 1
ts = vcat(ts1, ts2)
profile = lsdd_profile(ts; window = 50)
points = getpoints(profile)
a = plot(ts,xlabel = &quot;Time steps&quot;,ylabel = &quot;Value&quot;,label = &quot;&quot;,title = &quot;Random time-series with change point&quot;,color = &quot;black&quot;)
b = plot(profile,xlabel = &quot;Time steps&quot;,ylabel = &quot;LSDD value&quot;,label = &quot;lsdd&quot;,title = &quot;Corresponding LSDD profile&quot;,color = &quot;black&quot;)
vline!(b,points,label = &quot;detected changepoint \n (threshold exceeded)&quot;,color = &quot;red&quot;,lw = 3,linestyle = :dash)
p = plot(a, b, layout = (2, 1), legend = true)
display(p)
"><pre><code>using Plots

ts1 = rand(500)
ts2 = 1.5 * rand(500) .+ 1
ts = vcat(ts1, ts2)
profile = lsdd_profile(ts; window = 50)
points = getpoints(profile)
a = plot(ts,xlabel = "Time steps",ylabel = "Value",label = "",title = "Random time-series with change point",color = "black")
b = plot(profile,xlabel = "Time steps",ylabel = "LSDD value",label = "lsdd",title = "Corresponding LSDD profile",color = "black")
vline!(b,points,label = "detected changepoint \n (threshold exceeded)",color = "red",lw = 3,linestyle = :dash)
p = plot(a, b, layout = (2, 1), legend = true)
display(p)
</code></pre></div>
<p>Produced the following output :</p>
<p align="center">
  <a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/34754896/85133006-2bbee700-b23a-11ea-8478-203e90fdf1a4.PNG"><img width="800" height="500" src="https://user-images.githubusercontent.com/34754896/85133006-2bbee700-b23a-11ea-8478-203e90fdf1a4.PNG" style="max-width:100%;"></a>
</p>
</article></div>