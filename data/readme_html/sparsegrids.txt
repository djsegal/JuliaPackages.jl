<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-sparsegrids" class="anchor" aria-hidden="true" href="#sparsegrids"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SparseGrids</h1>
<p><a href="https://travis-ci.org/robertdj/SparseGrids.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/eeecf4ccc54c3e32586ffb719434052c8df0a7f7/68747470733a2f2f7472617669732d63692e6f72672f726f62657274646a2f53706172736547726964732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/robertdj/SparseGrids.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/github/robertdj/SparseGrids.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/d7563e928573aaa5159b9976b3bf6458c4382dbf/68747470733a2f2f636f6465636f762e696f2f6769746875622f726f62657274646a2f53706172736547726964732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/robertdj/SparseGrids.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package computes sparse grids for quadrature rules used to compute multidimensional integrals.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>In Julia, run</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>SparseGrids<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>If <code>f</code> is a function that returns <code>nodes, weights = f(n)</code>, for any (integer) order <code>n</code>, then the function <code>sparsegrid</code> computes the sparse extension to <code>D</code> dimensions of order <code>O</code>:</p>
<div class="highlight highlight-source-julia"><pre>nodes, weigths <span class="pl-k">=</span> <span class="pl-c1">sparsegrid</span>(D, O, f)</pre></div>
<p>By default, <code>f</code> is <code>gausshermite</code> from the <a href="https://github.com/ajt60gaibb/FastGaussQuadrature.jl">FastGaussQuadrature</a> package.
The <code>gausshermite</code> quadrature rule is used for computing integrals over <code>R^D</code> with integrants of the form <code>g(x) * exp(-|x|^2)</code>.
To approximate such an integral, compute</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">dot</span>( weigths, <span class="pl-c1">g</span>(nodes) )</pre></div>
<p>Note that when integrating against <code>exp(-|x|^2)</code> instead of the standard Gaussian density, the nodes and weigths are rescaled compared to e.g. the source of the Kronrod-Patterson nodes mentioned below.</p>
<p>This package offers another node generating function for "Gaussian" integrals, <code>kpn</code>, for the <em>nested</em> Kronrod-Patterson nodes.
When the 1D nodes are nested, the higher dimensional sparse grids contain fewer points.</p>
<p>The easy extension of 1D nodes (where the number of nodes also grows <em>much</em> faster) is by tensor products.
This is available by the function <code>tensorgrid</code> that takes the same inputs as <code>sparsegrid</code>.</p>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h2>
<p>The sparse grid quadrature rules are described in e.g.</p>
<ul>
<li>Thomas Gerstner, Michael Griebel, "Numerical integration using sparse grids", Numerical Algorithms, 1998, 209--232.
DOI: <a href="http://dx.doi.org/10.1023/A:1019129717644" rel="nofollow">10.1023/A:1019129717644</a></li>
<li>Florian Heiss, Victor Winschel, "Likelihood approximation by numerical integration on sparse grids", Journal of Econometrics, 2008, vol. 144, pp. 62--80.
DOI: <a href="http://dx.doi.org/10.1016/j.jeconom.2007.12.004" rel="nofollow">10.1016/j.jeconom.2007.12.004</a></li>
<li>Vesa Kaarnioja, "<a href="http://hdl.handle.net/10138/40159" rel="nofollow">Smolyak Quadrature</a>", Master's thesis, University of Helsinki, 2013.</li>
</ul>
<p>The Matlab scripts released in connection with the paper by Heiss &amp; Winschel have also served as an inspiration in the implementation.
These are found at <a href="http://www.sparse-grids.de" rel="nofollow">http://www.sparse-grids.de</a>.
Note that there are some disagreements between these Matlab scripts and the paper; the Matlab scripts are correct, as confirmed by testing.</p>
<p>The algorithm for computing the integer D-vectors with constant 1-norm is found in e.g. Kaarnioja's thesis as Algorithm 1.11.</p>
<p>The nested nodes are obtained from the sparse-grids web page.</p>
<h2><a id="user-content-todos" class="anchor" aria-hidden="true" href="#todos"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ToDos</h2>
<p>At some point methods for <em>computing</em> nested nodes may be implemented using techniques from e.g.</p>
<ul>
<li>Sanjay Mehrotra, David Papp, "Generating nested quadrature formulas for general weight functions with known moments"
arXiv: <a href="http://arxiv.org/abs/1203.1554v1" rel="nofollow">1203.1554 [math.NA]</a></li>
</ul>
</article></div>