<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-percivaljl---an-augmented-lagrangian-solver" class="anchor" aria-hidden="true" href="#percivaljl---an-augmented-lagrangian-solver"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Percival.jl - An augmented Lagrangian solver</h1>
<p dir="auto"><a href="https://github.com/JuliaSmoothOptimizers/Percival.jl/actions"><img src="https://github.com/JuliaSmoothOptimizers/Percival.jl/workflows/CI/badge.svg?branch=main" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/github/JuliaSmoothOptimizers/Percival.jl?branch=main" rel="nofollow"><img src="https://camo.githubusercontent.com/363b6fa4d6ada54b2372846beaa64e423a80cdcf8a66a04ef3adabca51959016/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c6961536d6f6f74684f7074696d697a6572732f506572636976616c2e6a6c2f636f7665726167652e7376673f6272616e63683d6d61696e" alt="codecov.io" data-canonical-src="https://codecov.io/github/JuliaSmoothOptimizers/Percival.jl/coverage.svg?branch=main" style="max-width: 100%;"></a>
<a href="https://JuliaSmoothOptimizers.github.io/Percival.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/6e0212a02bcf5c6976a054fd0941c8445d753dd1382e44d79d942c1fd829edac/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d3366353162352e737667" alt="docs-stable" data-canonical-src="https://img.shields.io/badge/docs-stable-3f51b5.svg" style="max-width: 100%;"></a>
<a href="https://JuliaSmoothOptimizers.github.io/Percival.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/30097dda6debc8df22e6ecba9fa16a03f962387dbf66b7c28a4f8d99ef654896/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d3366353162352e737667" alt="docs-dev" data-canonical-src="https://img.shields.io/badge/docs-dev-3f51b5.svg" style="max-width: 100%;"></a>
<a href="https://doi.org/10.5281/zenodo.3969045" rel="nofollow"><img src="https://camo.githubusercontent.com/6da28ee10015c943d3a2e9454569f7216f13ecb4451c9a674d53f4625c13549a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f444f492d31302e353238312f7a656e6f646f2e333936393034352d626c75652e7376673f7374796c653d666c6174" alt="DOI" data-canonical-src="https://img.shields.io/badge/DOI-10.5281/zenodo.3969045-blue.svg?style=flat" style="max-width: 100%;"></a></p>
<p dir="auto">Percival is an implementation of the augmented Lagrangian solver described in</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="S. Arreckx, A. Lambe, Martins, J. R. R. A., &amp; Orban, D. (2016).
A Matrix-Free Augmented Lagrangian Algorithm with Application to Large-Scale Structural Design Optimization.
Optimization And Engineering, 17, 359–384. doi:10.1007/s11081-015-9287-9"><pre class="notranslate"><code>S. Arreckx, A. Lambe, Martins, J. R. R. A., &amp; Orban, D. (2016).
A Matrix-Free Augmented Lagrangian Algorithm with Application to Large-Scale Structural Design Optimization.
Optimization And Engineering, 17, 359–384. doi:10.1007/s11081-015-9287-9
</code></pre></div>
<p dir="auto">with internal solver <code>tron</code> from <a href="https://github.com/JuliaSmoothOptimizers/JSOSolvers.jl">JSOSolvers.jl</a>.
To use Percival, you have to pass it an <a href="https://github.com/JuliaSmoothOptimizers/NLPModels.jl">NLPModel</a>.</p>
<h2 dir="auto"><a id="user-content-how-to-cite" class="anchor" aria-hidden="true" href="#how-to-cite"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to Cite</h2>
<p dir="auto">If you use Percival.jl in your work, please cite using the format given in <a href="CITATION.bib">CITATION.bib</a>.</p>
<h2 dir="auto"><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install</h2>
<p dir="auto">Use <code>]</code> to enter <code>pkg&gt;</code> mode of Julia, then</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add Percival"><pre>pkg<span class="pl-k">&gt;</span> add Percival</pre></div>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">Consider the following 2-dimensional optimization problem with an equality constraint</p>
<p dir="auto"><math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="fbc83cff9f8bbec5e48c12797797063f">$$
\begin{equation}
\min_{(x_1,x_2)} \quad (x_1 - 1)^2 + 100 (x_2 - x_1^2)^2 \quad \text{s.to} \quad x_1^2 + x_2^2 = 1.
\end{equation}
$$</math-renderer></p>
<p dir="auto">You can solve an JuMP model <code>model</code> by using <a href="https://github.com/JuliaSmoothOptimizers/NLPModelsJuMP.jl">NLPModelsJuMP.jl</a> to convert it.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JuMP, NLPModelsJuMP, Percival
model = Model()
@variable(model, x[i=1:2], start = [-1.2; 1.0][i])
@NLobjective(model, Min, (x[1] - 1)^2 + 100 * (x[2] - x[1]^2)^2)
@NLconstraint(model, x[1]^2 + x[2]^2 == 1)
nlp = MathOptNLPModel(model) # thin wrapper converting JuMP Model as NLPModel
output = percival(nlp, verbose = 1)"><pre><span class="pl-k">using</span> JuMP, NLPModelsJuMP, Percival
model <span class="pl-k">=</span> <span class="pl-c1">Model</span>()
<span class="pl-c1">@variable</span>(model, x[i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>], start <span class="pl-k">=</span> [<span class="pl-k">-</span><span class="pl-c1">1.2</span>; <span class="pl-c1">1.0</span>][i])
<span class="pl-c1">@NLobjective</span>(model, Min, (x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">1</span>)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">100</span> <span class="pl-k">*</span> (x[<span class="pl-c1">2</span>] <span class="pl-k">-</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>)
<span class="pl-c1">@NLconstraint</span>(model, x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">==</span> <span class="pl-c1">1</span>)
nlp <span class="pl-k">=</span> <span class="pl-c1">MathOptNLPModel</span>(model) <span class="pl-c"><span class="pl-c">#</span> thin wrapper converting JuMP Model as NLPModel</span>
output <span class="pl-k">=</span> <span class="pl-c1">percival</span>(nlp, verbose <span class="pl-k">=</span> <span class="pl-c1">1</span>)</pre></div>
<p dir="auto"><code>percival</code> accept as input any instance of <code>AbstractNLPModel</code>, for instance, using automatic differentiation via <a href="https://github.com/JuliaSmoothOptimizers/ADNLPModels.jl">ADNLPModels.jl</a> to solve the same problem.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ADNLPModels, Percival
nlp = ADNLPModel(
  x -&gt; (x[1] - 1)^2 + 100 * (x[2] - x[1]^2)^2,
  [-1.2; 1.0],
  x -&gt; [x[1]^2 + x[2]^2],
  [1.0],
  [1.0],
)
output = percival(nlp, verbose = 1)"><pre><span class="pl-k">using</span> ADNLPModels, Percival
nlp <span class="pl-k">=</span> <span class="pl-c1">ADNLPModel</span>(
  x <span class="pl-k">-&gt;</span> (x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">1</span>)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">100</span> <span class="pl-k">*</span> (x[<span class="pl-c1">2</span>] <span class="pl-k">-</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>,
  [<span class="pl-k">-</span><span class="pl-c1">1.2</span>; <span class="pl-c1">1.0</span>],
  x <span class="pl-k">-&gt;</span> [x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x[<span class="pl-c1">2</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>],
  [<span class="pl-c1">1.0</span>],
  [<span class="pl-c1">1.0</span>],
)
output <span class="pl-k">=</span> <span class="pl-c1">percival</span>(nlp, verbose <span class="pl-k">=</span> <span class="pl-c1">1</span>)</pre></div>
<h1 dir="auto">
<a id="user-content-bug-reports-and-discussions" class="anchor" aria-hidden="true" href="#bug-reports-and-discussions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bug reports and discussions</h1>
<p dir="auto">If you think you found a bug, feel free to open an <a href="https://github.com/JuliaSmoothOptimizers/Percival.jl/issues">issue</a>.
Focused suggestions and requests can also be opened as issues. Before opening a pull request, start an issue or a discussion on the topic, please.</p>
<p dir="auto">If you want to ask a question not suited for a bug report, feel free to start a discussion <a href="https://github.com/JuliaSmoothOptimizers/Organization/discussions">here</a>. This forum is for general discussion about this repository and the <a href="https://github.com/JuliaSmoothOptimizers">JuliaSmoothOptimizers</a>, so questions about any of our packages are welcome.</p>
</article></div>