<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-jackpolynomialsjl" class="anchor" aria-hidden="true" href="#jackpolynomialsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>JackPolynomials.jl</h1>
<p dir="auto"><a href="https://stla.github.io/JackPolynomials.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Schur polynomials have applications in combinatorics and zonal polynomials have
applications in multivariate statistics. They are particular cases of
<a href="https://en.wikipedia.org/wiki/Jack_function" rel="nofollow">Jack polynomials</a>. This package
allows to evaluate these polynomials. It can also compute their symbolic form:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; jack = JackPolynomial(2, [3 ; 1], 2.5)
24.5x₁³x₂ + 14.0x₁²x₂² + 24.5x₁x₂³

julia&gt; jack(1,2)
301.0"><pre>julia<span class="pl-k">&gt;</span> jack <span class="pl-k">=</span> <span class="pl-c1">JackPolynomial</span>(<span class="pl-c1">2</span>, [<span class="pl-c1">3</span> ; <span class="pl-c1">1</span>], <span class="pl-c1">2.5</span>)
<span class="pl-c1">24.5</span>x₁³x₂ <span class="pl-k">+</span> <span class="pl-c1">14.0</span>x₁²x₂² <span class="pl-k">+</span> <span class="pl-c1">24.5</span>x₁x₂³

julia<span class="pl-k">&gt;</span> <span class="pl-c1">jack</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>)
<span class="pl-c1">301.0</span></pre></div>
<p dir="auto">Here <code>2.5</code> is the value of the <code>alpha</code> parameter. One can use a rational
number instead:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="JackPolynomial(2, [3; 1], 1//4)
25//8x₁³x₂ + 5//1x₁²x₂² + 25//8x₁x₂³"><pre><span class="pl-c1">JackPolynomial</span>(<span class="pl-c1">2</span>, [<span class="pl-c1">3</span>; <span class="pl-c1">1</span>], <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">4</span>)
<span class="pl-c1">25</span><span class="pl-k">//</span><span class="pl-c1">8</span>x₁³x₂ <span class="pl-k">+</span> <span class="pl-c1">5</span><span class="pl-k">//</span><span class="pl-c1">1</span>x₁²x₂² <span class="pl-k">+</span> <span class="pl-c1">25</span><span class="pl-k">//</span><span class="pl-c1">8</span>x₁x₂³</pre></div>
<p dir="auto">It is also possible to deal with a symbolic <code>alpha</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; jack = JackPolynomial(2, [2 ; 1])
(alpha + 2)*x_1^2*x_2 + (alpha + 2)*x_1*x_2^2

julia&gt; jack(1,2)
6*alpha + 12"><pre>julia<span class="pl-k">&gt;</span> jack <span class="pl-k">=</span> <span class="pl-c1">JackPolynomial</span>(<span class="pl-c1">2</span>, [<span class="pl-c1">2</span> ; <span class="pl-c1">1</span>])
(alpha <span class="pl-k">+</span> <span class="pl-c1">2</span>)<span class="pl-k">*</span>x_1<span class="pl-k">^</span><span class="pl-c1">2</span><span class="pl-k">*</span>x_2 <span class="pl-k">+</span> (alpha <span class="pl-k">+</span> <span class="pl-c1">2</span>)<span class="pl-k">*</span>x_1<span class="pl-k">*</span>x_2<span class="pl-k">^</span><span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">jack</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>)
<span class="pl-c1">6</span><span class="pl-k">*</span>alpha <span class="pl-k">+</span> <span class="pl-c1">12</span></pre></div>
</article></div>