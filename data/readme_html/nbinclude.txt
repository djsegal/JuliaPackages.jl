<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-nbinclude" class="anchor" aria-hidden="true" href="#nbinclude"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>NBInclude</h1>
<p><a href="https://travis-ci.org/stevengj/NBInclude.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ccf0191a08bd9ff8cf92239aad7d5aa4a1a16f8c/68747470733a2f2f7472617669732d63692e6f72672f73746576656e676a2f4e42496e636c7564652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/stevengj/NBInclude.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/StevenGJohnson/nbinclude-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8dfbabdd2ce41f5ef27b4a6c62887fa1550b3359/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f386b697864626c7077356f69386e64333f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/8kixdblpw5oi8nd3?svg=true" style="max-width:100%;"></a></p>
<p>NBInclude is a package for the <a href="http://julialang.org/" rel="nofollow">Julia language</a> which allows you to include and execute <a href="https://github.com/JuliaLang/IJulia.jl">IJulia</a> (Julia-language <a href="https://jupyter.org/" rel="nofollow">Jupyter</a>) notebook files just as you would include an ordinary Julia file.  That is, analogous to doing <a href="http://docs.julialang.org/en/latest/stdlib/base/#Base.include" rel="nofollow"><code>include("myfile.jl")</code></a> in Julia to execute <code>myfile.jl</code>, you can do</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> NBInclude
<span class="pl-c1">@nbinclude</span>(<span class="pl-s"><span class="pl-pds">"</span>myfile.ipynb<span class="pl-pds">"</span></span>)</pre></div>
<p>to execute all of the code cells in the IJulia notebook <code>myfile.ipynb</code>. Similar to <code>include</code>, the value of the last evaluated expression in the last evaluated code cell is returned.</p>
<p>The goal of this package is to make notebook files just as easy to incorporate into Julia programs as ordinary Julia (<code>.jl</code>) files, giving you the advantages of a notebook (integrated code, formatted text, equations, graphics, and other results) while retaining the modularity and re-usability of <code>.jl</code> files.</p>
<p>Note: Scoping rules have changed between Julia 0.6 and Julia 1.0. Running a notebook as <code>@nbinclude("foo.ipynb"; softscope=true)</code> will load notebooks as they work for interactive use in the IJulia kernel ("soft" global scoping, or 0.6-style). That flag's default value, <code>false</code>, will load notebooks with the "hard" scoping rule of Julia 1.0 (e.g. in <code>include</code>); see the <a href="https://github.com/stevengj/SoftGlobalScope.jl">SoftGlobalScope package</a> for more details.</p>
<p>Key features of NBInclude are:</p>
<ul>
<li>The path of the notebook is relative to the path of the current file (if any),
and nested inclusions can use paths relative to the notebook, just as for <code>include</code>.</li>
<li>In a module, included notebooks work fine with <a href="http://docs.julialang.org/en/latest/manual/modules/#module-initialization-and-precompilation" rel="nofollow">precompilation</a> in Julia 0.4 (and re-compilation is automatically triggered if the notebook changes).</li>
<li>Code is associated with accurate line numbers (e.g. for backtraces when exceptions are thrown), in the form of <code>myfile.ipynb:In[N]:M</code> for line <code>M</code> in input cell <code>N</code> of the <code>myfile.ipynb</code> notebook.  Un-numbered cells (e.g. unevaluated cells) are given a number
<code>+N</code> for the <code>N</code>-th nonempty cell in the notebook.  You can use <code>@nbinclude("myfile.ipynb", renumber=true)</code> to automatically renumber the cells in sequence (as if you had selected <em>Run All</em> from the Jupyter <em>Cell</em> menu), without altering the file.</li>
<li>The Julia <code>@__FILE__</code> macro returns <code>/path/to/myfile.ipynb:In[N]</code> for input cell <code>N</code>.</li>
<li>In IJulia, cells beginning with <code>;</code> or <code>?</code> are interpreted as shell commands or help requests, respectively.  Such cells are ignored by <code>@nbinclude</code>.</li>
<li><code>counters</code> and <code>regex</code> keywords can be used to include a subset of notebook cells to those for which <code>counter âˆˆ counters</code> and the cell text matches <code>regex</code>. For example, <code>@nbinclude("notebook.ipynb"; counters=1:10, regex=r"#\s*EXECUTE")</code>
would include cells 1 to 10 from <code>notebook.ipynb</code> that contain comments like <code># EXECUTE</code>.</li>
<li>A keyword <code>anshook</code> can be used to run a passed function on the return value of all the cells.</li>
<li>No Python or Jupyter dependency.</li>
<li>The <code>softscope</code> flag mentioned above.</li>
</ul>
<p>To install it, simply do <code>Pkg.add("NBInclude")</code> as usual for Julia packages.</p>
<h2><a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contact</h2>
<p>NBInclude was written by <a href="http://math.mit.edu/~stevenj/" rel="nofollow">Steven G. Johnson</a> and is free/open-source software under the <a href="LICENSE.md">MIT/Expat license</a>.  Please file bug reports and feature requests at the <a href="https://github.com/stevengj/NBInclude.jl">NBInclude github page</a>.</p>
</article></div>