<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-sparsevectormatrix" class="anchor" aria-hidden="true" href="#sparsevectormatrix"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>SparseVectorMatrix</h1>
<p>This packages provides an alternative implementation of SparseMatrices that maintains a
vector of SparseVectors. Such an implementation is best used when all matrix operations require access
to just one column each.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> SparseVectorMatrix

<span class="pl-c"><span class="pl-c">#</span> Random Generation</span>
a <span class="pl-k">=</span> <span class="pl-c1">svmrand</span>(<span class="pl-c1">100</span>, <span class="pl-c1">100</span>, <span class="pl-c1">0.1</span>)

<span class="pl-c"><span class="pl-c">#</span> Getindex</span>
a[:, <span class="pl-c1">1</span>]                      <span class="pl-c"><span class="pl-c">#</span> Returns an entire column quickly</span>
a[<span class="pl-c1">1</span>, :]                      <span class="pl-c"><span class="pl-c">#</span> Returns an entire row, but slowly.</span>

<span class="pl-c"><span class="pl-c">#</span> SetIndex</span>
a[:, <span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>              <span class="pl-c"><span class="pl-c">#</span> Assign an entire column quickly.</span>
a[<span class="pl-c1">1</span>, :] <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>              <span class="pl-c"><span class="pl-c">#</span> Assign an entire row, by slowly.</span>

<span class="pl-c"><span class="pl-c">#</span>Concatenation</span>
b <span class="pl-k">=</span> <span class="pl-c1">svmrand</span>(<span class="pl-c1">100</span>, <span class="pl-c1">100</span>, <span class="pl-c1">0.1</span>)
<span class="pl-c1">hcat</span>(a, b)                   <span class="pl-c"><span class="pl-c">#</span> Concatenates horizontally. Very fast.</span>
<span class="pl-c1">vcat</span>(a, b)                   <span class="pl-c"><span class="pl-c">#</span> Concatenates vertically. Not as fast.</span>

arr <span class="pl-k">=</span> [<span class="pl-c1">svmrand</span>(<span class="pl-c1">100</span>, <span class="pl-c1">100</span>, <span class="pl-c1">0.1</span>) <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">4</span>]
<span class="pl-c1">hvcat</span>((<span class="pl-c1">2</span>,<span class="pl-c1">2</span>), arr<span class="pl-k">..</span>)          <span class="pl-c"><span class="pl-c">#</span> Grid Concatenation. Quite fast.</span></pre></div>
<h2><a id="user-content-whats-supported" class="anchor" aria-hidden="true" href="#whats-supported"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>What's supported?</h2>
<ul>
<li>svmrand (Similar to sprand)</li>
<li>getindex</li>
<li>setindex</li>
<li>hcat</li>
<li>vcat</li>
<li>hvcat</li>
<li>A bunch of other basic methods like nnz, size, full, etc.</li>
</ul>
<h2><a id="user-content-benchmarking" class="anchor" aria-hidden="true" href="#benchmarking"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Benchmarking</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span>benchmarks/run.jl<span class="pl-pds">"</span></span>)</pre></div>
</article></div>