<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-kdestimation-kernel-density-estimation" class="anchor" aria-hidden="true" href="#kdestimation-kernel-density-estimation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>KDEstimation (Kernel Density Estimation)</h1>
<p dir="auto"><a href="https://travis-ci.com/m-wells/KDEstimation.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c64505d0bbdf61e17855753693028caba3bdb5ef5229d79c6259d4b3e9f207c5/68747470733a2f2f7472617669732d63692e636f6d2f6d2d77656c6c732f4b44457374696d6174696f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/m-wells/KDEstimation.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/m-wells/KDEstimation.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e0fd05f2aa002fbeae9b68c867194329d9de76a7bbcbedf3bbbe228465f23e61/68747470733a2f2f636f6465636f762e696f2f67682f6d2d77656c6c732f4b44457374696d6174696f6e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f6272616e63683d6d6173746572" alt="codecov" data-canonical-src="https://codecov.io/gh/m-wells/KDEstimation.jl/branch/master/graph/badge.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/m-wells/KDEstimation.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/84cfb955f3f4a04c6c98f3d930b6ac184f68a8e0abb9ea1cc97717c641193151/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d2d77656c6c732f4b44457374696d6174696f6e2e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/m-wells/KDEstimation.jl/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">The purpose of this package is to provide a general framework for implementing Kernel Density Estimation methods.</p>
<h2 dir="auto"><a id="user-content-univariate-kde" class="anchor" aria-hidden="true" href="#univariate-kde"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Univariate KDE</h2>
<p dir="auto">The density estimator</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/95415a1226c703104481df2e7784d51a6417c40537c2e0e8aceaac4fb57afbfd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c4c415247452673706163653b5c62677b77686974657d5c6861747b667d2878293d5c667261637b317d7b6e7d5c73756d5f7b693d317d5e6e4b5c6c656674285c667261637b782d785f697d7b687d5c726967687429"><img src="https://camo.githubusercontent.com/95415a1226c703104481df2e7784d51a6417c40537c2e0e8aceaac4fb57afbfd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c4c415247452673706163653b5c62677b77686974657d5c6861747b667d2878293d5c667261637b317d7b6e7d5c73756d5f7b693d317d5e6e4b5c6c656674285c667261637b782d785f697d7b687d5c726967687429" data-canonical-src="https://latex.codecogs.com/png.image?\LARGE&amp;space;\bg{white}\hat{f}(x)=\frac{1}{n}\sum_{i=1}^nK\left(\frac{x-x_i}{h}\right)" style="max-width: 100%;"></a></p>
<p dir="auto">where</p>
<ul dir="auto">
<li><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0e24e15164ee929ad8d992b7b2fc9b0848585672db97dc62491c2c1ca06615e4/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d5c6861747b667d287829"><img src="https://camo.githubusercontent.com/0e24e15164ee929ad8d992b7b2fc9b0848585672db97dc62491c2c1ca06615e4/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d5c6861747b667d287829" data-canonical-src="https://latex.codecogs.com/png.image?\large&amp;space;\bg{white}\hat{f}(x)" style="max-width: 100%;"></a> is the estimator</li>
<li><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/d519036589a0888f29705d07d6e5e486aee9b8c67d80ab81324afb232b7b59f7/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4b287529"><img src="https://camo.githubusercontent.com/d519036589a0888f29705d07d6e5e486aee9b8c67d80ab81324afb232b7b59f7/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4b287529" data-canonical-src="https://latex.codecogs.com/png.image?\large&amp;space;\bg{white}K(u)" style="max-width: 100%;"></a> is the kernel function</li>
<li><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/6a24777b21d9991ad4deaab5238fc052ba907003befa1a1dba4ee3ca7d78b712/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d68"><img src="https://camo.githubusercontent.com/6a24777b21d9991ad4deaab5238fc052ba907003befa1a1dba4ee3ca7d78b712/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d68" data-canonical-src="https://latex.codecogs.com/png.image?\large&amp;space;\bg{white}h" style="max-width: 100%;"></a> is the bandwidth
can be evaluated using one of three implemented methods.</li>
<li><code>Direct()</code>
<ul dir="auto">
<li><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/f53d6c400ff28eca0d7d49ee2dac242db47fc3d184c49ad7f1d113874293285d/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4f284e5e3229"><img src="https://camo.githubusercontent.com/f53d6c400ff28eca0d7d49ee2dac242db47fc3d184c49ad7f1d113874293285d/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4f284e5e3229" data-canonical-src="https://latex.codecogs.com/png.image?\large&amp;space;\bg{white}O(N^2)" style="max-width: 100%;"></a> where <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/51fae0f2a6f71e290eef0f7a94d489c7440d7db63e0da82fcc418be47b66fa89/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4e"><img src="https://camo.githubusercontent.com/51fae0f2a6f71e290eef0f7a94d489c7440d7db63e0da82fcc418be47b66fa89/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4e" data-canonical-src="https://latex.codecogs.com/png.image?\large&amp;space;\bg{white}N" style="max-width: 100%;"></a> is the sample size</li>
</ul>
</li>
<li><code>Binned()</code>
<ul dir="auto">
<li><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ffc4752170513f77ac61ecb949ee6eaba34e2e435249777df80c209ea1194349/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4f284d5e3229"><img src="https://camo.githubusercontent.com/ffc4752170513f77ac61ecb949ee6eaba34e2e435249777df80c209ea1194349/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4f284d5e3229" data-canonical-src="https://latex.codecogs.com/png.image?\large&amp;space;\bg{white}O(M^2)" style="max-width: 100%;"></a> where <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/9ec8347e19d21c9bc587d3feaf98ebb721522640f581e23ddb2692cd189833af/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4d"><img src="https://camo.githubusercontent.com/9ec8347e19d21c9bc587d3feaf98ebb721522640f581e23ddb2692cd189833af/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4d" data-canonical-src="https://latex.codecogs.com/png.image?\large&amp;space;\bg{white}M" style="max-width: 100%;"></a> is the number of evaluation points</li>
<li><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/aef8c202326fc19eda46621b9bed582c7df618d4373a11fc31239a4d978502f7/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4d3d34303936"><img src="https://camo.githubusercontent.com/aef8c202326fc19eda46621b9bed582c7df618d4373a11fc31239a4d978502f7/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4d3d34303936" data-canonical-src="https://latex.codecogs.com/png.image?\large&amp;space;\bg{white}M=4096" style="max-width: 100%;"></a> by default</li>
</ul>
</li>
<li><code>FFT()</code>
<ul dir="auto">
<li><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/9be86e5205a59ce8fc0123d899896faa636fb7ba68ffa4dff1dbd69c1e323139/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4f284d5c6c6f67204d29"><img src="https://camo.githubusercontent.com/9be86e5205a59ce8fc0123d899896faa636fb7ba68ffa4dff1dbd69c1e323139/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4f284d5c6c6f67204d29" data-canonical-src="https://latex.codecogs.com/png.image?\large&amp;space;\bg{white}O(M\log M)" style="max-width: 100%;"></a> where <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/9ec8347e19d21c9bc587d3feaf98ebb721522640f581e23ddb2692cd189833af/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4d"><img src="https://camo.githubusercontent.com/9ec8347e19d21c9bc587d3feaf98ebb721522640f581e23ddb2692cd189833af/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4d" data-canonical-src="https://latex.codecogs.com/png.image?\large&amp;space;\bg{white}M" style="max-width: 100%;"></a> is the number of evaluation points</li>
<li><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/aef8c202326fc19eda46621b9bed582c7df618d4373a11fc31239a4d978502f7/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4d3d34303936"><img src="https://camo.githubusercontent.com/aef8c202326fc19eda46621b9bed582c7df618d4373a11fc31239a4d978502f7/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d4d3d34303936" data-canonical-src="https://latex.codecogs.com/png.image?\large&amp;space;\bg{white}M=4096" style="max-width: 100%;"></a> by default</li>
</ul>
</li>
</ul>
<h2 dir="auto"><a id="user-content-multivariate-kde-work-in-progress" class="anchor" aria-hidden="true" href="#multivariate-kde-work-in-progress"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Multivariate KDE (work in progress)</h2>
<h2 dir="auto"><a id="user-content-kernels-implemented" class="anchor" aria-hidden="true" href="#kernels-implemented"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Kernels implemented</h2>
<p dir="auto">Here is a link to the <a href="https://en.wikipedia.org/wiki/Kernel_(statistics)#Kernel_functions_in_common_use" rel="nofollow">relevant wikipedia article</a></p>
<table>
  <tbody><tr>
    <th>Kernel</th>
    <th><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/198ce816a21ebe45baaf05a80aaf28a9a8c448242098be0960cfa13c84e3c2ff/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d4b287529"><img src="https://camo.githubusercontent.com/198ce816a21ebe45baaf05a80aaf28a9a8c448242098be0960cfa13c84e3c2ff/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d4b287529" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}K(u)" style="max-width: 100%;"></a></th>
    <th>Support</th>
  </tr>
  <tr>
    <td>Biweight</td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/bae80eb109376411c1cf30386d19fd5a8a1dca6a5246e209d810f4f606a2cbec/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b31357d7b31367d28312d755e32295e32"><img src="https://camo.githubusercontent.com/bae80eb109376411c1cf30386d19fd5a8a1dca6a5246e209d810f4f606a2cbec/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b31357d7b31367d28312d755e32295e32" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}\frac{15}{16}(1-u^2)^2" style="max-width: 100%;"></a></td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/506ace787d5acb48863e90343fbc7640f32bf674c7155e8defda20e68a4e25fd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d7c757c5c6c652031"><img src="https://camo.githubusercontent.com/506ace787d5acb48863e90343fbc7640f32bf674c7155e8defda20e68a4e25fd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d7c757c5c6c652031" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}|u|\le 1" style="max-width: 100%;"></a></td>
  </tr>
  <tr>
    <td>Cosine</td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/a44bfbf9e3df39788be9d615f77c5e26eb929d6fb62c26ad909f3a3d21425a44/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b5c70697d7b347d5c636f73285c667261637b5c70697d7b327d7529"><img src="https://camo.githubusercontent.com/a44bfbf9e3df39788be9d615f77c5e26eb929d6fb62c26ad909f3a3d21425a44/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b5c70697d7b347d5c636f73285c667261637b5c70697d7b327d7529" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}\frac{\pi}{4}\cos(\frac{\pi}{2}u)" style="max-width: 100%;"></a></td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/506ace787d5acb48863e90343fbc7640f32bf674c7155e8defda20e68a4e25fd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d7c757c5c6c652031"><img src="https://camo.githubusercontent.com/506ace787d5acb48863e90343fbc7640f32bf674c7155e8defda20e68a4e25fd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d7c757c5c6c652031" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}|u|\le 1" style="max-width: 100%;"></a></td>
  </tr>
  <tr>
    <td>Epanechnikov</td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/c186848bdd2058ab77da3d2061dd6b4b048fb5d9966d3b13901cef2c6ebf45ba/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b337d7b347d28312d755e3229"><img src="https://camo.githubusercontent.com/c186848bdd2058ab77da3d2061dd6b4b048fb5d9966d3b13901cef2c6ebf45ba/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b337d7b347d28312d755e3229" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}\frac{3}{4}(1-u^2)" style="max-width: 100%;"></a></td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/506ace787d5acb48863e90343fbc7640f32bf674c7155e8defda20e68a4e25fd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d7c757c5c6c652031"><img src="https://camo.githubusercontent.com/506ace787d5acb48863e90343fbc7640f32bf674c7155e8defda20e68a4e25fd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d7c757c5c6c652031" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}|u|\le 1" style="max-width: 100%;"></a></td>
  </tr>
  <tr>
    <td>Logistic</td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/83f5bdde8cbd9bd5449514a39c4cf1a8eaa34fe5c5cf141a88d07d6e240678dd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b317d7b655e752b322b655e7b2d757d7d"><img src="https://camo.githubusercontent.com/83f5bdde8cbd9bd5449514a39c4cf1a8eaa34fe5c5cf141a88d07d6e240678dd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b317d7b655e752b322b655e7b2d757d7d" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}\frac{1}{e^u+2+e^{-u}}" style="max-width: 100%;"></a></td>
    <td>unbounded</td>
  </tr>
  <tr>
    <td>Normal</td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/adb2700e924bfe645831b156e9cd54636eca7a19f279f7da2e2acd794657ffb4/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b317d7b5c737172747b325c70697d7d5c6578705c6c656674282d5c667261637b317d7b327d755e325c726967687429"><img src="https://camo.githubusercontent.com/adb2700e924bfe645831b156e9cd54636eca7a19f279f7da2e2acd794657ffb4/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b317d7b5c737172747b325c70697d7d5c6578705c6c656674282d5c667261637b317d7b327d755e325c726967687429" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}\frac{1}{\sqrt{2\pi}}\exp\left(-\frac{1}{2}u^2\right)" style="max-width: 100%;"></a></td>
    <td>unbounded</td>
  </tr>
  <tr>
    <td>SymTriangularDist</td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/8d98f395619aacc47613920a564e5648ed926c17e1d94838eb9432c93f65ca7d/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d312d7c757c"><img src="https://camo.githubusercontent.com/8d98f395619aacc47613920a564e5648ed926c17e1d94838eb9432c93f65ca7d/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d312d7c757c" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}1-|u|" style="max-width: 100%;"></a></td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/506ace787d5acb48863e90343fbc7640f32bf674c7155e8defda20e68a4e25fd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d7c757c5c6c652031"><img src="https://camo.githubusercontent.com/506ace787d5acb48863e90343fbc7640f32bf674c7155e8defda20e68a4e25fd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d7c757c5c6c652031" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}|u|\le 1" style="max-width: 100%;"></a></td>
  </tr>
  <tr>
    <td>Triweight</td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/00d29d183b7c5f6cb3a722d8883b84f0fcfc000d481d4412d77234b5239d0aa2/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b33357d7b33327d28312d755e32295e33"><img src="https://camo.githubusercontent.com/00d29d183b7c5f6cb3a722d8883b84f0fcfc000d481d4412d77234b5239d0aa2/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b33357d7b33327d28312d755e32295e33" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}\frac{35}{32}(1-u^2)^3" style="max-width: 100%;"></a></td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/506ace787d5acb48863e90343fbc7640f32bf674c7155e8defda20e68a4e25fd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d7c757c5c6c652031"><img src="https://camo.githubusercontent.com/506ace787d5acb48863e90343fbc7640f32bf674c7155e8defda20e68a4e25fd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d7c757c5c6c652031" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}|u|\le 1" style="max-width: 100%;"></a></td>
  </tr>
  <tr>
    <td>Uniform</td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/98bdf087fa897ae2546efe577faee32e157153826f1cae8181fbd63aabcd09bf/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b317d7b327d"><img src="https://camo.githubusercontent.com/98bdf087fa897ae2546efe577faee32e157153826f1cae8181fbd63aabcd09bf/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d5c667261637b317d7b327d" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}\frac{1}{2}" style="max-width: 100%;"></a></td>
    <td><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/506ace787d5acb48863e90343fbc7640f32bf674c7155e8defda20e68a4e25fd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d7c757c5c6c652031"><img src="https://camo.githubusercontent.com/506ace787d5acb48863e90343fbc7640f32bf674c7155e8defda20e68a4e25fd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c62677b77686974657d7c757c5c6c652031" data-canonical-src="https://latex.codecogs.com/png.image?\bg{white}|u|\le 1" style="max-width: 100%;"></a></td>
  </tr>
</tbody></table>
<p dir="auto">This package uses <a href="https://github.com/JuliaStats/Distributions.jl">Distributions.jl</a> to suppy kernels such that</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/40b6b7799ec098480f4f5ef2bd1f36ababce0cfdc7265629c9321fc2ced04e1f/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c4c415247452673706163653b5c62677b77686974657d4b5f685c6c65667428782d785f695c7269676874293d5c746578747b7064667d284428785f692c68292c782929"><img src="https://camo.githubusercontent.com/40b6b7799ec098480f4f5ef2bd1f36ababce0cfdc7265629c9321fc2ced04e1f/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c4c415247452673706163653b5c62677b77686974657d4b5f685c6c65667428782d785f695c7269676874293d5c746578747b7064667d284428785f692c68292c782929" data-canonical-src="https://latex.codecogs.com/png.image?\LARGE&amp;space;\bg{white}K_h\left(x-x_i\right)=\text{pdf}(D(x_i,h),x))" style="max-width: 100%;"></a></p>
<p dir="auto">where</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/545036e7038f9e8717594a389ad1cb1d77a086b0dcaea8aaad3141bb8c5e840f/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c4c415247452673706163653b5c62677b77686974657d4b5f682875293d5c74667261637b317d7b687d4b5c215c6c656674285c74667261637b757d7b687d5c726967687429"><img src="https://camo.githubusercontent.com/545036e7038f9e8717594a389ad1cb1d77a086b0dcaea8aaad3141bb8c5e840f/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c4c415247452673706163653b5c62677b77686974657d4b5f682875293d5c74667261637b317d7b687d4b5c215c6c656674285c74667261637b757d7b687d5c726967687429" data-canonical-src="https://latex.codecogs.com/png.image?\LARGE&amp;space;\bg{white}K_h(u)=\tfrac{1}{h}K\!\left(\tfrac{u}{h}\right)" style="max-width: 100%;"></a></p>
<p dir="auto">and <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/b2a8670acd1012c63f114a71cb28ead9d47e18b6df175cba2e855d54aa90dacf/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d44"><img src="https://camo.githubusercontent.com/b2a8670acd1012c63f114a71cb28ead9d47e18b6df175cba2e855d54aa90dacf/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c6c617267652673706163653b5c62677b77686974657d44" data-canonical-src="https://latex.codecogs.com/png.image?\large&amp;space;\bg{white}D" style="max-width: 100%;"></a> is one of the kernels listed in the table above.</p>
<p dir="auto"><strong>Note:</strong> for the Uniform distribution, <a href="https://github.com/JuliaStats/Distributions.jl">Distributions.jl</a> defines <code>(loc,scale) = (a, b-a))</code> where <code>a</code> and <code>b</code> are the bounds lower and upper bounds, respectively.
This package accounts for this inconsistancy by evaluating the Uniform kernel as</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/703b2e9b323f8bd281dbc7a4c6752e3b4d278803a860b0b264e60cc30c9e858e/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c4c415247452673706163653b5c62677b77686974657d5c746578747b7064667d5c6c656674285c746578747b556e69666f726d7d5c6c65667428785f692d5c74667261637b687d7b327d2c785f692b5c74667261637b687d7b327d5c7269676874292c785c726967687429"><img src="https://camo.githubusercontent.com/703b2e9b323f8bd281dbc7a4c6752e3b4d278803a860b0b264e60cc30c9e858e/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c4c415247452673706163653b5c62677b77686974657d5c746578747b7064667d5c6c656674285c746578747b556e69666f726d7d5c6c65667428785f692d5c74667261637b687d7b327d2c785f692b5c74667261637b687d7b327d5c7269676874292c785c726967687429" data-canonical-src="https://latex.codecogs.com/png.image?\LARGE&amp;space;\bg{white}\text{pdf}\left(\text{Uniform}\left(x_i-\tfrac{h}{2},x_i+\tfrac{h}{2}\right),x\right)" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-bandwidth-selection-via-least-squares-cross-validation" class="anchor" aria-hidden="true" href="#bandwidth-selection-via-least-squares-cross-validation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bandwidth selection via Least Squares Cross Validation</h2>
<p dir="auto">The objective function to minimize is given by</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/1b51343211001776d60227c5c6bb15ed35bafde33f69b1d5a8fa9dc9dbc7e3ec/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c4c415247452673706163653b5c62677b77686974657d4c5343562868293d5c696e745c6861747b667d5e325f6828782964782d5c667261637b327d7b6e7d5c73756d5f695c6861747b667d5f7b682c2d697d28585f6929"><img src="https://camo.githubusercontent.com/1b51343211001776d60227c5c6bb15ed35bafde33f69b1d5a8fa9dc9dbc7e3ec/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c4c415247452673706163653b5c62677b77686974657d4c5343562868293d5c696e745c6861747b667d5e325f6828782964782d5c667261637b327d7b6e7d5c73756d5f695c6861747b667d5f7b682c2d697d28585f6929" data-canonical-src="https://latex.codecogs.com/png.image?\LARGE&amp;space;\bg{white}LSCV(h)=\int\hat{f}^2_h(x)dx-\frac{2}{n}\sum_i\hat{f}_{h,-i}(X_i)" style="max-width: 100%;"></a></p>
<p dir="auto">where</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/bea69dba6c1644d479d2896517d2d9bc71e15b231a3c533783c1d50407dacd48/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c4c415247452673706163653b5c62677b77686974657d5c6861747b667d5f7b682c2d697d28585f69293d5c667261637b317d7b286e2d3129687d5c73756d5f7b6a5c6e6520697d4b5c6c656674285c667261637b585f692d585f6a7d7b687d5c726967687429"><img src="https://camo.githubusercontent.com/bea69dba6c1644d479d2896517d2d9bc71e15b231a3c533783c1d50407dacd48/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f706e672e696d6167653f5c4c415247452673706163653b5c62677b77686974657d5c6861747b667d5f7b682c2d697d28585f69293d5c667261637b317d7b286e2d3129687d5c73756d5f7b6a5c6e6520697d4b5c6c656674285c667261637b585f692d585f6a7d7b687d5c726967687429" data-canonical-src="https://latex.codecogs.com/png.image?\LARGE&amp;space;\bg{white}\hat{f}_{h,-i}(X_i)=\frac{1}{(n-1)h}\sum_{j\ne i}K\left(\frac{X_i-X_j}{h}\right)" style="max-width: 100%;"></a></p>
<p dir="auto">This has also been implemented using <code>Direct</code>, <code>Binned</code>, and <code>FFT</code> methods.</p>
<h1 dir="auto"><a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example usage</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using KDEstimation, Distributions
# set a seed for reproducibility
using StableRNGs
rng = StableRNG(1111)
# generate random data
x = randn(rng, 100)
rot = rule_of_thumb2(Normal,x)
println(&quot;rule of thumb: &quot;, rot)
lscv_res = lscv(Normal,x,FFT())"><pre><span class="pl-k">using</span> KDEstimation, Distributions
<span class="pl-c"><span class="pl-c">#</span> set a seed for reproducibility</span>
<span class="pl-k">using</span> StableRNGs
rng <span class="pl-k">=</span> <span class="pl-c1">StableRNG</span>(<span class="pl-c1">1111</span>)
<span class="pl-c"><span class="pl-c">#</span> generate random data</span>
x <span class="pl-k">=</span> <span class="pl-c1">randn</span>(rng, <span class="pl-c1">100</span>)
rot <span class="pl-k">=</span> <span class="pl-c1">rule_of_thumb2</span>(Normal,x)
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>rule of thumb: <span class="pl-pds">"</span></span>, rot)
lscv_res <span class="pl-k">=</span> <span class="pl-c1">lscv</span>(Normal,x,<span class="pl-c1">FFT</span>())</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="rule of thumb: 0.3955940866915174

LSCV{Normal,FFT(4096),1}
Results of Optimization Algorithm
 * Algorithm: Golden Section Search
 * Search Interval: [0.289408, 0.389348]
 * Minimizer: 3.457826e-01
 * Minimum: -2.834224e-01
 * Iterations: 33
 * Convergence: max(|x - x_upper|, |x - x_lower|) &lt;= 2*(1.5e-08*|x|+2.2e-16): true
 * Objective Function Calls: 34"><pre class="notranslate"><code>rule of thumb: 0.3955940866915174

LSCV{Normal,FFT(4096),1}
Results of Optimization Algorithm
 * Algorithm: Golden Section Search
 * Search Interval: [0.289408, 0.389348]
 * Minimizer: 3.457826e-01
 * Minimum: -2.834224e-01
 * Iterations: 33
 * Convergence: max(|x - x_upper|, |x - x_lower|) &lt;= 2*(1.5e-08*|x|+2.2e-16): true
 * Objective Function Calls: 34
</code></pre></div>
<h1 dir="auto"><a id="user-content-visualization-using-plotsjl" class="anchor" aria-hidden="true" href="#visualization-using-plotsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Visualization using <a href="https://github.com/JuliaPlots/PlotDocs.jl">Plots.jl</a></h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Plots; pyplot()
plot(lscv_res)"><pre><span class="pl-k">using</span> Plots; <span class="pl-c1">pyplot</span>()
<span class="pl-c1">plot</span>(lscv_res)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="README_files/output_3_0.png"><img src="README_files/output_3_0.png" alt="png" style="max-width: 100%;"></a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="h = minimizer(lscv_res)
fkde = kde(Normal, h, x, FFT())
frot = kde(Normal, rot, x, FFT())
# these are callable
@show fkde(0.3);
@show frot(-2);"><pre>h <span class="pl-k">=</span> <span class="pl-c1">minimizer</span>(lscv_res)
fkde <span class="pl-k">=</span> <span class="pl-c1">kde</span>(Normal, h, x, <span class="pl-c1">FFT</span>())
frot <span class="pl-k">=</span> <span class="pl-c1">kde</span>(Normal, rot, x, <span class="pl-c1">FFT</span>())
<span class="pl-c"><span class="pl-c">#</span> these are callable</span>
<span class="pl-c1">@show</span> <span class="pl-c1">fkde</span>(<span class="pl-c1">0.3</span>);
<span class="pl-c1">@show</span> <span class="pl-c1">frot</span>(<span class="pl-k">-</span><span class="pl-c1">2</span>);</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="fkde(0.3) = 0.38237039523949345
frot(-2) = 0.04546902308913938"><pre class="notranslate"><code>fkde(0.3) = 0.38237039523949345
frot(-2) = 0.04546902308913938
</code></pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="plot(fkde, label=&quot;LSCV&quot;, lw=2)
plot!(frot, label=&quot;Rule of thumb&quot;, lw=2)"><pre><span class="pl-c1">plot</span>(fkde, label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>LSCV<span class="pl-pds">"</span></span>, lw<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">plot!</span>(frot, label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Rule of thumb<span class="pl-pds">"</span></span>, lw<span class="pl-k">=</span><span class="pl-c1">2</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="README_files/output_5_0.png"><img src="README_files/output_5_0.png" alt="png" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-further-reading" class="anchor" aria-hidden="true" href="#further-reading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Further Reading</h1>
<p dir="auto">This work has been heavily influenced by Artur Gramacki's book "Nonparametric Kernel Density Estimation and Its Computational Aspects"</p>
</article></div>