<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-fcajl" class="anchor" aria-hidden="true" href="#fcajl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>FCA.jl</h1>
<p><a href="https://doi.org/10.5281/zenodo.2655935" rel="nofollow"><img src="https://camo.githubusercontent.com/3beb212930cec120e54d24d5e47e5adb197eaa89/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e323635353933352e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.2655935.svg" style="max-width:100%;"></a></p>
<p>FCA.jl is a package for <a href="https://julialang.org/" rel="nofollow">julia</a> implementing <a href="https://ieeexplore.ieee.org/document/7868999" rel="nofollow">free component analysis</a>, which separates freely-independent random matrices out of their additive mixture.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>The package has not been registered in <code>METADATA.jl</code> and can be installed with <code>Pkg.clone</code>.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/lingluanwh/FCA.jl<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example</h2>
<p>A typical example of the usage of fca.jl is</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> separate freely independent rectangular random matrices out of their additive mixture</span>
<span class="pl-k">using</span> FCA, LinearAlgebra

<span class="pl-c"><span class="pl-c">#</span> generate freely two freely independent rectangular random matrices X1 and X2</span>
N, M <span class="pl-k">=</span> <span class="pl-c1">300</span>, <span class="pl-c1">500</span>
X1 <span class="pl-k">=</span> <span class="pl-c1">randn</span>(N, M) <span class="pl-k">/</span> <span class="pl-c1">sqrt</span>(M)
U, V <span class="pl-k">=</span> <span class="pl-c1">Matrix</span>(<span class="pl-c1">qr</span>(<span class="pl-c1">randn</span>(N,N))<span class="pl-k">.</span>Q), <span class="pl-c1">Matrix</span>(<span class="pl-c1">qr</span>(<span class="pl-c1">randn</span>(M,M))<span class="pl-k">.</span>Q)
D <span class="pl-k">=</span> [<span class="pl-c1">Diagonal</span>((<span class="pl-c1">collect</span>(<span class="pl-c1">range</span>(<span class="pl-c1">1</span>,stop <span class="pl-k">=</span> <span class="pl-c1">0</span>,length <span class="pl-k">=</span> N)) <span class="pl-k">.-</span> <span class="pl-c1">1</span>)<span class="pl-k">.^</span><span class="pl-c1">4</span>) <span class="pl-c1">zeros</span>(N, M <span class="pl-k">-</span> N)]
X2 <span class="pl-k">=</span> U<span class="pl-k">*</span>D<span class="pl-k">*</span>V<span class="pl-k">'</span>
X <span class="pl-k">=</span> [X1, X2];

<span class="pl-c"><span class="pl-c">#</span> mix X1, X2 linearly</span>
A <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">2</span>,<span class="pl-c1">2</span>) <span class="pl-c"><span class="pl-c">#</span> mixing matrix</span>
Z <span class="pl-k">=</span> A<span class="pl-k">*</span>X

<span class="pl-c"><span class="pl-c">#</span> use freecf to recover mixing matrix and free components (up to permutation and rescaling)</span>
Aest, Xest <span class="pl-k">=</span> <span class="pl-c1">freecf</span>(Z; mat <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>rec<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> "rec" tells the function that we are dealing with the rectangular matrices</span>

<span class="pl-c"><span class="pl-c">#</span> Aest recover A upto column permutation and column rescaling.</span>
<span class="pl-c1">@show</span> <span class="pl-c1">pinv</span>(Aest)<span class="pl-k">*</span>A <span class="pl-c"><span class="pl-c">#</span> their product should approximate a diagonal matrix</span></pre></div>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>License</h2>
<p>This package is provided as is under the MIT License.</p>
<h2><a id="user-content-author" class="anchor" aria-hidden="true" href="#author"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Author</h2>
<p>Hao Wu</p>
<p><a href="mailto:lingluan@umich.edu">lingluan@umich.edu</a></p>
<p>University of Michigan, Department of Mathematics</p>
</article></div>