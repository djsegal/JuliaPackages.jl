<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-catboostjl" class="anchor" aria-hidden="true" href="#catboostjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CatBoost.jl</h1>
<p><a href="https://github.com/beacon-biosignals/CatBoost.jl/actions"><img src="https://github.com/beacon-biosignals/CatBoost.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a> <a href="https://codecov.io/github/beacon-biosignals/CatBoost.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b5d51748aa5f850744e6a2c847a4450aab26905c6e91dbd6f14cdd35764c0a80/68747470733a2f2f636f6465636f762e696f2f67682f626561636f6e2d62696f7369676e616c732f436174426f6f73742e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d65345246424e6b423961" alt="CodeCov" data-canonical-src="https://codecov.io/gh/beacon-biosignals/CatBoost.jl/branch/main/graph/badge.svg?token=e4RFBNkB9a" style="max-width:100%;"></a> <a href="https://beacon-biosignals.github.io/CatBoost.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a></p>
<p>Julia interface to <a href="https://catboost.ai/" rel="nofollow">CatBoost</a>.</p>
<h2><a id="user-content-setting-up-pycall" class="anchor" aria-hidden="true" href="#setting-up-pycall"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Setting up PyCall</h2>
<p>Please follow the PyCall guidelines described in <a href="https://github.com/JuliaPy/PyCall.jl">PyCall.jl</a>.</p>
<p>We highly recommend using a Julia-specific Python environment to handle dependencies. We recommend that users follow the build instructions in <a href="https://github.com/JuliaPy/Conda.jl">Conda.jl</a>.</p>
<p>If users have installed <a href="https://docs.conda.io/en/latest/miniconda.html" rel="nofollow">miniconda</a> on their local machine, we recommend checking out the Julia-specific Python environment (which is usually located at <code>$HOME/.julia/conda/3</code>) and installing <code>catboost</code> there with <code>pip</code>:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="pip install catboost
"><pre><code>pip install catboost
</code></pre></div>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="module Regression

using CatBoost

train_data = [[1, 4, 5, 6], [4, 5, 6, 7], [30, 40, 50, 60]]
eval_data = [[2, 4, 6, 8], [1, 4, 50, 60]]
train_labels = [10, 20, 30]

# Initialize CatBoostRegressor
model = CatBoostRegressor(iterations = 2, learning_rate = 1, depth = 2)

# Fit model
fit!(model, train_data, train_labels)

# Get predictions
preds = predict(model, eval_data)

end # module
"><pre><span class="pl-k">module</span> Regression

<span class="pl-k">using</span> CatBoost

train_data <span class="pl-k">=</span> [[<span class="pl-c1">1</span>, <span class="pl-c1">4</span>, <span class="pl-c1">5</span>, <span class="pl-c1">6</span>], [<span class="pl-c1">4</span>, <span class="pl-c1">5</span>, <span class="pl-c1">6</span>, <span class="pl-c1">7</span>], [<span class="pl-c1">30</span>, <span class="pl-c1">40</span>, <span class="pl-c1">50</span>, <span class="pl-c1">60</span>]]
eval_data <span class="pl-k">=</span> [[<span class="pl-c1">2</span>, <span class="pl-c1">4</span>, <span class="pl-c1">6</span>, <span class="pl-c1">8</span>], [<span class="pl-c1">1</span>, <span class="pl-c1">4</span>, <span class="pl-c1">50</span>, <span class="pl-c1">60</span>]]
train_labels <span class="pl-k">=</span> [<span class="pl-c1">10</span>, <span class="pl-c1">20</span>, <span class="pl-c1">30</span>]

<span class="pl-c"><span class="pl-c">#</span> Initialize CatBoostRegressor</span>
model <span class="pl-k">=</span> <span class="pl-c1">CatBoostRegressor</span>(iterations <span class="pl-k">=</span> <span class="pl-c1">2</span>, learning_rate <span class="pl-k">=</span> <span class="pl-c1">1</span>, depth <span class="pl-k">=</span> <span class="pl-c1">2</span>)

<span class="pl-c"><span class="pl-c">#</span> Fit model</span>
<span class="pl-c1">fit!</span>(model, train_data, train_labels)

<span class="pl-c"><span class="pl-c">#</span> Get predictions</span>
preds <span class="pl-k">=</span> <span class="pl-c1">predict</span>(model, eval_data)

<span class="pl-k">end</span> <span class="pl-c"><span class="pl-c">#</span> module</span></pre></div>
</article></div>