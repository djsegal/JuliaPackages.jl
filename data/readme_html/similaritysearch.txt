<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://sadit.github.io/SimilaritySearch.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/sadit/SimilaritySearch.jl/actions"><img src="https://github.com/sadit/SimilaritySearch.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/sadit/SimilaritySearch.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e4954a0eb1991fdcb46d44727c7c0f4234e60f1921f9f1274899053efe656b18/68747470733a2f2f636f6465636f762e696f2f67682f73616469742f53696d696c61726974795365617263682e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/sadit/SimilaritySearch.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://doi.org/10.21105/joss.04442" rel="nofollow"><img src="https://camo.githubusercontent.com/341dfc756d1707122b5012b8199e168a48d0dd2c8fc520897e5fa1877390c51d/68747470733a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30343434322f7374617475732e737667" alt="DOI" data-canonical-src="https://joss.theoj.org/papers/10.21105/joss.04442/status.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-similaritysearchjl" class="anchor" aria-hidden="true" href="#similaritysearchjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SimilaritySearch.jl</h1>
<p dir="auto">SimilaritySearch.jl is a library for nearest neighbor search. In particular, it contains the implementation for <code>SearchGraph,</code> a fast and flexible search index using any metric function. It is designed to support multithreading in most of its functions and structures.</p>
<p dir="auto">The package provides the following indexes:</p>
<ul dir="auto">
<li><code>ParallelExhaustiveSearch</code>: A brute force search index where each query is solved using all available threads.</li>
<li><code>ExhaustiveSearch</code>: A brute force search index, each query is solved using a single thread.</li>
<li><code>SearchGraph</code>: An approximate search index with parallel construction.</li>
</ul>
<p dir="auto">The main set of functions are:</p>
<ul dir="auto">
<li>
<code>search</code>: Solves a single query.</li>
<li>
<code>searchbatch</code>: Solves a set of queries.</li>
<li>
<code>allknn</code>: Computes the <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="f7dfefad185b64ca36b55f47b1966a36">$k$</math-renderer> nearest neighbors for all elements in an index.</li>
<li>
<code>neardup</code>: Removes near-duplicates from a metric dataset.</li>
<li>
<code>closestpair</code>: Computes the closest pair in a metric dataset.</li>
</ul>
<p dir="auto">The precise definitions of these functions and the complete set of functions and structures can be found in the <a href="https://sadit.github.io/SimilaritySearch.jl/dev" rel="nofollow">documentation</a>.</p>
<h1 dir="auto">
<a id="user-content-similarity-search-ecosystem-in-julia" class="anchor" aria-hidden="true" href="#similarity-search-ecosystem-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Similarity search <em>ecosystem</em> in Julia</h1>
<p dir="auto">Currently, there exists several packages dedicated to nearest neighbor search, for instance we have <a href="https://github.com/KristofferC/NearestNeighbors.jl"><code>NearestNeighbors.jl</code></a>, <a href="https://github.com/rdeits/RegionTrees.jl"><code>RegionTrees.jl</code></a>, and <a href="https://github.com/JuliaNeighbors"><code>JuliaNeighbors</code></a> implement search structures like <a href="https://en.wikipedia.org/wiki/K-d_tree" rel="nofollow">kd-trees</a>, <a href="https://en.wikipedia.org/wiki/Ball_tree" rel="nofollow">ball trees</a>, <a href="https://en.wikipedia.org/wiki/Quadtree" rel="nofollow">quadtrees</a>, <a href="https://en.wikipedia.org/wiki/Octree" rel="nofollow">octrees</a>, <a href="https://en.wikipedia.org/wiki/BK-tree" rel="nofollow">bk-trees</a>, <a href="https://en.wikipedia.org/wiki/Vantage-point_tree" rel="nofollow">vp-tree</a> and other multidimensional and metric structures. These structures work quite well for low dimensional data since they are designed to solve exact similarity queries.</p>
<p dir="auto">There exist several packages performing approximate similarity search, like <a href="https://github.com/una-dinosauria/Rayuela.jl"><code>Rayuela.jl</code></a> using product quantization schemes, the wrapper for the <a href="https://faiss.ai/" rel="nofollow"><code>FAISS</code></a> library <a href="https://github.com/zsz00/Faiss.jl"><code>Faiss.jl</code></a>. The FAISS library provides high-performance implementations of product quantization schemes and locality-sensitive hashing schemes, along with an industrial-strength implementation of the <a href="https://github.com/nmslib/hnswlib"><code>HNSW</code></a> index. The <a href="https://github.com/dillondaudert/NearestNeighborDescent.jl"><code>NearestNeighborDescent.jl</code></a> implements the search algorithm behind <a href="https://pynndescent.readthedocs.io/en/latest/?badge=latest" rel="nofollow"><code>pynndescent</code></a>.</p>
<p dir="auto">The <code>SimilaritySearch.jl</code> package tries to enrich the ecosystem with search structures and algorithms designed to take advantage of multithreading systems and a unique autotuning feature that simplifies its usage for practitioners. These features are succinctly and efficiently implemented due to the Julia programming language dynamism and performance.
Regarding performance characteristics, the construction times are vastly reduced compared to similar approaches without reducing search performance or result quality.</p>
<h1 dir="auto">
<a id="user-content-installing-similaritysearch" class="anchor" aria-hidden="true" href="#installing-similaritysearch"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installing SimilaritySearch</h1>
<p dir="auto">You may install the package as follows</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] add SimilaritySearch.jl"><pre>] add SimilaritySearch<span class="pl-k">.</span>jl</pre></div>
<p dir="auto">also, you can run the set of tests as follows</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="] test SimilaritySearch"><pre>] test SimilaritySearch</pre></div>
<h1 dir="auto">
<a id="user-content-using-the-library" class="anchor" aria-hidden="true" href="#using-the-library"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using the library</h1>
<p dir="auto">Please see <a href="https://github.com/sadit/SimilaritySearchDemos">examples</a>. You will find a list of Jupyter and Pluto notebooks, and some scripts that exemplifies its usage.</p>
<h1 dir="auto">
<a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contribute</h1>
<p dir="auto">Contributions are welcome. Please fill a pull request for documentating and implementation contributions. For issues, please fill an issue with the necessary information (see below.) If you already have a solution please also provide a pull request.</p>
<h1 dir="auto">
<a id="user-content-issues" class="anchor" aria-hidden="true" href="#issues"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Issues</h1>
<p dir="auto">Report issues in the package providing a minimal reproducible example. If the issue is data dependant, please don't forget to provide the necessary data to reproduce it.</p>
<h2 dir="auto">
<a id="user-content-limitations-of-searchgraph" class="anchor" aria-hidden="true" href="#limitations-of-searchgraph"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Limitations of <code>SearchGraph</code>
</h2>
<p dir="auto">The main search structure, the <code>SearchGraph,</code> is a graph with several characteristics, many of them induced by the dataset being indexed. Some of its known limitations are related to these characteristics. For instance:</p>
<ul dir="auto">
<li>Metric distances work well; on the other hand, semi-metric should work, but routing capabilities are not yet characterized.</li>
<li>Even when it performs pretty well compared to alternatives, discrete metrics like Levenshtein distance and others that take few possible values may also get low performances.</li>
<li>Something similar will happen when there are many near-duplicates (elements that are <strong>pretty</strong> close). In this case, it is necessary to remove near-duplicates and put them in <em>bags</em> associated with some of its near objects.</li>
<li>Very high dimensional datasets will produce <em>long-tail</em> distributions of the number of edges per vertex. In extreme cases, you must prune large neighborhoods and enrich single-edge paths.</li>
</ul>
<h1 dir="auto">
<a id="user-content-about-the-structures-and-algorithms" class="anchor" aria-hidden="true" href="#about-the-structures-and-algorithms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>About the structures and algorithms</h1>
<p dir="auto">The following manuscript describes and benchmarks the <code>SearchGraph</code> index (package version <code>0.6</code>):</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@article{tellezscalable,
  title={A scalable solution to the nearest neighbor search problem through local-search methods on neighbor graphs},
  author={Tellez, Eric S and Ruiz, Guillermo and Chavez, Edgar and Graff, Mario},
  journal={Pattern Analysis and Applications},
  pages={1--15},
  publisher={Springer}
}
"><pre class="notranslate"><code>@article{tellezscalable,
  title={A scalable solution to the nearest neighbor search problem through local-search methods on neighbor graphs},
  author={Tellez, Eric S and Ruiz, Guillermo and Chavez, Edgar and Graff, Mario},
  journal={Pattern Analysis and Applications},
  pages={1--15},
  publisher={Springer}
}

</code></pre></div>
<p dir="auto">The current algorithm (version <code>0.8</code> and <code>0.9</code>) is described and benchmarked in the following manuscript:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="
@misc{tellez2022similarity,
      title={Similarity search on neighbor's graphs with automatic Pareto optimal performance and minimum expected quality setups based on hyperparameter optimization}, 
      author={Eric S. Tellez and Guillermo Ruiz},
      year={2022},
      eprint={2201.07917},
      archivePrefix={arXiv},
      primaryClass={cs.IR}
}"><pre class="notranslate"><code>
@misc{tellez2022similarity,
      title={Similarity search on neighbor's graphs with automatic Pareto optimal performance and minimum expected quality setups based on hyperparameter optimization}, 
      author={Eric S. Tellez and Guillermo Ruiz},
      year={2022},
      eprint={2201.07917},
      archivePrefix={arXiv},
      primaryClass={cs.IR}
}
</code></pre></div>
<p dir="auto">This package is also described in the JOSS paper:</p>
<blockquote>
<p dir="auto">Eric S. Tellez and Guillermo Ruiz. <em><code>SimilaritySearch.jl</code>: Autotuned nearest neighbor indexes for Julia</em>. Journal of Open Source Software <a href="https://doi.org/10.21105/joss.04442" rel="nofollow">https://doi.org/10.21105/joss.04442</a>.</p>
</blockquote>
<h2 dir="auto">
<a id="user-content-about-v09x-series" class="anchor" aria-hidden="true" href="#about-v09x-series"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>About v0.9.X series</h2>
<p dir="auto">The algorithms of this version are the same as v0.8 but break API compatibility:</p>
<ul dir="auto">
<li>Now, it uses the <code>Polyester</code> package to handle multithreading instead of Threads.@threads</li>
<li>Multithreading methods are enabled by default if the process is started with several threads; in v0.8 was the contrary</li>
<li>
<code>allknn</code> now preserves self-references to simplify algorithms and improve efficiency (<code>allknn</code> in v0.8 removes self-references automatically)</li>
</ul>
<p dir="auto">Others:</p>
<ul dir="auto">
<li>Adds function docs and benchmarks</li>
<li>Adds <code>SearchGraph</code> graph pruning methods</li>
<li>Removes the <code>timedsearchbatch</code> function</li>
</ul>
</article></div>