<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-fixedpointjl" class="anchor" aria-hidden="true" href="#fixedpointjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FixedPoint.jl</h1>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="afps(f, x; iters::Int = 5000, vel::Float64 = 0.9, ep::Float64 = 0.01, tol::Float64 = 1e-12, grad_norm=x-&gt;maximum(abs,x))"><pre class="notranslate"><code>afps(f, x; iters::Int = 5000, vel::Float64 = 0.9, ep::Float64 = 0.01, tol::Float64 = 1e-12, grad_norm=x-&gt;maximum(abs,x))
</code></pre></div>
<p dir="auto">solve equation <code>f(x) = x</code> according to:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="`f` : function to find fixed point for

`x` : initial condition, ideally it should be close to the final solution

`vel` : amount of Nesterov acceleration in [0,1]

`ep` : learning rate, typically in ]0,1[

`tol` : absolute tolerance on |f(x)-x|

`grad_norm` : function to evaluate the norm |f(x)-x|"><pre class="notranslate"><code>`f` : function to find fixed point for

`x` : initial condition, ideally it should be close to the final solution

`vel` : amount of Nesterov acceleration in [0,1]

`ep` : learning rate, typically in ]0,1[

`tol` : absolute tolerance on |f(x)-x|

`grad_norm` : function to evaluate the norm |f(x)-x|
</code></pre></div>
<p dir="auto">returns a named tuple (x, error, iters) where:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="`x` : is the solution found for f(x)=x

`error` : is the norm of f(x)-x at the solution point

`iters` : total number of iterations performed"><pre class="notranslate"><code>`x` : is the solution found for f(x)=x

`error` : is the norm of f(x)-x at the solution point

`iters` : total number of iterations performed
</code></pre></div>
<h1 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h1>
<h2 dir="auto"><a id="user-content-scalar-function-example" class="anchor" aria-hidden="true" href="#scalar-function-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Scalar function example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using FixedPoint
s = afps(x -&gt; 2 - x^2 + x, 1.3)
@show s.x, √2"><pre><span class="pl-k">using</span> FixedPoint
s <span class="pl-k">=</span> <span class="pl-c1">afps</span>(x <span class="pl-k">-&gt;</span> <span class="pl-c1">2</span> <span class="pl-k">-</span> x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> x, <span class="pl-c1">1.3</span>)
<span class="pl-c1">@show</span> s<span class="pl-k">.</span>x, <span class="pl-k">√</span><span class="pl-c1">2</span></pre></div>
<h2 dir="auto"><a id="user-content-vector-function-example" class="anchor" aria-hidden="true" href="#vector-function-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Vector function example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using FixedPoint, LinearAlgebra
Ts = LinRange(0.01, 2.0, 500)
βs = 1 ./ Ts
f(x) = tanh.(βs .* x)
s = afps(
    f,
    zero(βs) .+ 1,
    iters = 5000,
)
@show norm(f(s.x).-s.x)"><pre><span class="pl-k">using</span> FixedPoint, LinearAlgebra
Ts <span class="pl-k">=</span> <span class="pl-c1">LinRange</span>(<span class="pl-c1">0.01</span>, <span class="pl-c1">2.0</span>, <span class="pl-c1">500</span>)
βs <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">./</span> Ts
<span class="pl-en">f</span>(x) <span class="pl-k">=</span> <span class="pl-c1">tanh</span>.(βs <span class="pl-k">.*</span> x)
s <span class="pl-k">=</span> <span class="pl-c1">afps</span>(
    f,
    <span class="pl-c1">zero</span>(βs) <span class="pl-k">.+</span> <span class="pl-c1">1</span>,
    iters <span class="pl-k">=</span> <span class="pl-c1">5000</span>,
)
<span class="pl-c1">@show</span> <span class="pl-c1">norm</span>(<span class="pl-c1">f</span>(s<span class="pl-k">.</span>x)<span class="pl-k">.-</span>s<span class="pl-k">.</span>x)</pre></div>
<h2 dir="auto"><a id="user-content-inplace-version" class="anchor" aria-hidden="true" href="#inplace-version"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Inplace version</h2>
<p dir="auto">for the inplace method use <code>afps!</code> as</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Ts = LinRange(0.01, 2.0, 500)
βs = 1 ./ Ts
function f!(out,x)
    @. out = tanh(βs * x)
end
x  = zero(βs) .+ 1 
afps!(
    f!,
    x,
    grad_norm = x -&gt; maximum(abs, x),
    iters = 5000,
)
@show maximum(abs, x .- tanh.(βs .* x))"><pre>Ts <span class="pl-k">=</span> <span class="pl-c1">LinRange</span>(<span class="pl-c1">0.01</span>, <span class="pl-c1">2.0</span>, <span class="pl-c1">500</span>)
βs <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">./</span> Ts
<span class="pl-k">function</span> <span class="pl-en">f!</span>(out,x)
    <span class="pl-c1">@.</span> out <span class="pl-k">=</span> <span class="pl-c1">tanh</span>(βs <span class="pl-k">*</span> x)
<span class="pl-k">end</span>
x  <span class="pl-k">=</span> <span class="pl-c1">zero</span>(βs) <span class="pl-k">.+</span> <span class="pl-c1">1</span> 
<span class="pl-c1">afps!</span>(
    f!,
    x,
    grad_norm <span class="pl-k">=</span> x <span class="pl-k">-&gt;</span> <span class="pl-c1">maximum</span>(abs, x),
    iters <span class="pl-k">=</span> <span class="pl-c1">5000</span>,
)
<span class="pl-c1">@show</span> <span class="pl-c1">maximum</span>(abs, x <span class="pl-k">.-</span> <span class="pl-c1">tanh</span>.(βs <span class="pl-k">.*</span> x))</pre></div>
</article></div>