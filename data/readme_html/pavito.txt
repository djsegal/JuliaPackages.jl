<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-pavitojl" class="anchor" aria-hidden="true" href="#pavitojl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Pavito.jl</h1>
<p dir="auto"><a href="https://github.com/jump-dev/Pavito.jl/actions"><img src="https://github.com/jump-dev/Pavito.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/jump-dev/Pavito.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/318803b16d2e87365ed011ce3313aa52d2a7ff4144fe3ad5ee08f0de9d54ae8e/68747470733a2f2f636f6465636f762e696f2f67682f6a756d702d6465762f50617669746f2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/jump-dev/Pavito.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/jump-dev/Pavito.jl">Pavito.jl</a> is a mixed-integer convex
programming (MICP) solver package written in <a href="http://julialang.org/" rel="nofollow">Julia</a>.</p>
<p dir="auto">MICP problems are convex, except for restrictions that some variables take
binary or integer values.</p>
<p dir="auto">Pavito solves MICP problems by constructing sequential polyhedral
outer-approximations of the convex feasible set, similar to <a href="https://projects.coin-or.org/Bonmin" rel="nofollow">Bonmin</a>.</p>
<p dir="auto">Pavito accesses state-of-the-art MILP solvers and continuous, derivative-based
nonlinear programming (NLP) solvers through <a href="https://github.com/jump-dev/MathOptInterface.jl">MathOptInterface</a>.</p>
<p dir="auto">For algorithms that use a conic solver instead of an NLP solver, use
<a href="https://github.com/jump-dev/Pajarito.jl">Pajarito</a>. Pajarito is a robust
mixed-integer conic solver that can handle such established problem classes as
mixed-integer second-order cone programming (MISOCP) and mixed-integer
semidefinite programming (MISDP).</p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto"><code>Pavito.jl</code> is licensed under the <a href="https://github.com/jump-dev/Pavito.jl/blob/master/LICENSE.md">MPL 2.0 license</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Install Pavito using <code>Pkg.add</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import Pkg
Pkg.add(&quot;Pavito&quot;)"><pre><span class="pl-k">import</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Pavito<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-use-with-jump" class="anchor" aria-hidden="true" href="#use-with-jump"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Use with JuMP</h2>
<p dir="auto">To use Pavito with <a href="https://github.com/jump-dev/JuMP.jl">JuMP</a>, use
<code>Pavito.Optimizer</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JuMP, Pavito
import GLPK, Ipopt
model = Model(
    optimizer_with_attributes(
        Pavito.Optimizer,
        &quot;mip_solver&quot; =&gt; optimizer_with_attributes(GLPK.Optimizer),
        &quot;cont_solver&quot; =&gt;
            optimizer_with_attributes(Ipopt.Optimizer, &quot;print_level&quot; =&gt; 0),
    ),
)"><pre><span class="pl-k">using</span> JuMP, Pavito
<span class="pl-k">import</span> GLPK, Ipopt
model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(
    <span class="pl-c1">optimizer_with_attributes</span>(
        Pavito<span class="pl-k">.</span>Optimizer,
        <span class="pl-s"><span class="pl-pds">"</span>mip_solver<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">optimizer_with_attributes</span>(GLPK<span class="pl-k">.</span>Optimizer),
        <span class="pl-s"><span class="pl-pds">"</span>cont_solver<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span>
            <span class="pl-c1">optimizer_with_attributes</span>(Ipopt<span class="pl-k">.</span>Optimizer, <span class="pl-s"><span class="pl-pds">"</span>print_level<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0</span>),
    ),
)</pre></div>
<p dir="auto">The algorithm implemented by Pavito itself is relatively simple; most of the
hard work is performed by the MILP solver passed as <code>mip_solver</code> and the NLP
solver passed as <code>cont_solver</code>.</p>
<p dir="auto"><strong>The performance of Pavito depends on these two types of solvers.</strong></p>
<p dir="auto">For better performance, you should use a commercial MILP solver such as CPLEX
or Gurobi.</p>
<h2 dir="auto"><a id="user-content-options" class="anchor" aria-hidden="true" href="#options"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Options</h2>
<p dir="auto">The following optimizer attributes can set to a <code>Pavito.Optimizer</code> to modify its
behavior:</p>
<ul dir="auto">
<li><code>log_level::Int</code> Verbosity flag: 0 for quiet, higher for basic solve info</li>
<li><code>timeout::Float64</code> Time limit for algorithm (in seconds)</li>
<li><code>rel_gap::Float64</code> Relative optimality gap termination condition</li>
<li><code>mip_solver_drives::Bool</code> Let MILP solver manage convergence ("branch and
cut")</li>
<li><code>mip_solver::MOI.OptimizerWithAttributes</code> MILP solver</li>
<li><code>cont_solver::MOI.OptimizerWithAttributes</code> Continuous NLP solver</li>
</ul>
<p dir="auto"><strong>Pavito is not yet numerically robust and may require tuning of parameters to
improve convergence.</strong></p>
<p dir="auto">If the default parameters don't work for you, please let us know by opening an
issue.</p>
<p dir="auto">For improved Pavito performance, MILP solver integrality tolerance and
feasibility tolerances should typically be tightened, for example to <code>1e-8</code>.</p>
<h2 dir="auto"><a id="user-content-bug-reports-and-support" class="anchor" aria-hidden="true" href="#bug-reports-and-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bug reports and support</h2>
<p dir="auto">Please report any issues via the <a href="https://github.com/jump-dev/Pavito.jl/issues">GitHub issue tracker</a>.
All types of issues are welcome and encouraged; this includes bug reports,
documentation typos, feature requests, etc. The <a href="https://discourse.julialang.org/c/domain/opt" rel="nofollow">Optimization (Mathematical)</a> category on Discourse is appropriate for general
discussion.</p>
</article></div>