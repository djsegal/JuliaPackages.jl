<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://github.com/matthieugomez/PairsMacros.jl/actions"><img src="https://github.com/matthieugomez/PairsMacros.jl/workflows/CI/badge.svg" alt="Build status" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-pairsmacrosjl" class="anchor" aria-hidden="true" href="#pairsmacrosjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>PairsMacros.jl</h1>
<p dir="auto">This package exports two macros:</p>
<ul dir="auto">
<li><code>@cols</code> to make it easier to construct pairs of the form <code>source =&gt; function =&gt; target</code>.</li>
<li><code>@rows</code> to make it easier to construct pairs of the form <code>source =&gt; ByRow(function) =&gt; target</code>.</li>
</ul>
<p dir="auto">These macros can be used within DataFrames.jl  <code>transform</code>, <code>select</code>, <code>subset</code>, etc. It is a minimal alternative to <a href="https://github.com/JuliaData/DataFramesMeta.jl">DataFramesMeta.jl</a>.</p>
<h2 dir="auto"><a id="user-content-syntax" class="anchor" aria-hidden="true" href="#syntax"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Syntax</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using  PairsMacros
@cols z = sum(x)
#&gt; [:x] =&gt; sum =&gt; :z
@rows z = x + y
#&gt; [:x, :y] =&gt; ByRow(+) =&gt; :z"><pre><span class="pl-k">using</span>  PairsMacros
<span class="pl-c1">@cols</span> z <span class="pl-k">=</span> <span class="pl-c1">sum</span>(x)
<span class="pl-c"><span class="pl-c">#</span>&gt; [:x] =&gt; sum =&gt; :z</span>
<span class="pl-c1">@rows</span> z <span class="pl-k">=</span> x <span class="pl-k">+</span> y
<span class="pl-c"><span class="pl-c">#</span>&gt; [:x, :y] =&gt; ByRow(+) =&gt; :z</span></pre></div>
<p dir="auto">Use <code>$</code> to substitute the name of certain columns by symbols</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="u = :y
@cols z = sum($u)
#&gt; [:y] =&gt; sum =&gt; :z
@cols $u = sum(x)
#&gt; [:x] =&gt; sum =&gt; :y
u = &quot;my variable name&quot;
@cols z = sum($u)
&quot;my variable name&quot; =&gt; sum =&gt; :z"><pre>u <span class="pl-k">=</span> <span class="pl-c1">:y</span>
<span class="pl-c1">@cols</span> z <span class="pl-k">=</span> <span class="pl-c1">sum</span>(<span class="pl-k">$</span>u)
<span class="pl-c"><span class="pl-c">#</span>&gt; [:y] =&gt; sum =&gt; :z</span>
<span class="pl-c1">@cols</span> <span class="pl-k">$</span>u <span class="pl-k">=</span> <span class="pl-c1">sum</span>(x)
<span class="pl-c"><span class="pl-c">#</span>&gt; [:x] =&gt; sum =&gt; :y</span>
u <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>my variable name<span class="pl-pds">"</span></span>
<span class="pl-c1">@cols</span> z <span class="pl-k">=</span> <span class="pl-c1">sum</span>(<span class="pl-k">$</span>u)
<span class="pl-s"><span class="pl-pds">"</span>my variable name<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> sum <span class="pl-k">=&gt;</span> <span class="pl-c1">:z</span></pre></div>
<p dir="auto">Use <code>esc</code> to denote variables that do not refer to columns</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="u = [0.25, 0.75]
@cols z = quantile(y, esc(u))
#&gt; [:y] =&gt; (x -&gt; quantile(x, u)) =&gt; :z
@cols z = map(esc(cos), y)
#&gt; [:y] =&gt; (x -&gt; map(cos, x)) =&gt; :z
@rows z = tryparse(esc(Float64), y)
#&gt; [:y] =&gt; ByRow(x -&gt; tryparse(Float64, x)) =&gt; :z"><pre>u <span class="pl-k">=</span> [<span class="pl-c1">0.25</span>, <span class="pl-c1">0.75</span>]
<span class="pl-c1">@cols</span> z <span class="pl-k">=</span> <span class="pl-c1">quantile</span>(y, <span class="pl-c1">esc</span>(u))
<span class="pl-c"><span class="pl-c">#</span>&gt; [:y] =&gt; (x -&gt; quantile(x, u)) =&gt; :z</span>
<span class="pl-c1">@cols</span> z <span class="pl-k">=</span> <span class="pl-c1">map</span>(<span class="pl-c1">esc</span>(cos), y)
<span class="pl-c"><span class="pl-c">#</span>&gt; [:y] =&gt; (x -&gt; map(cos, x)) =&gt; :z</span>
<span class="pl-c1">@rows</span> z <span class="pl-k">=</span> <span class="pl-c1">tryparse</span>(<span class="pl-c1">esc</span>(Float64), y)
<span class="pl-c"><span class="pl-c">#</span>&gt; [:y] =&gt; ByRow(x -&gt; tryparse(Float64, x)) =&gt; :z</span></pre></div>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">Use <code>PairsMacros</code> in conjunction with <code>DataFrames</code></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using DataFrames, Chain, Statistics, PairsMacros
df = DataFrame(a = repeat(1:5, outer = 20),
               b = repeat([&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;], inner = 25),
               x = repeat(1:20, inner = 5))
transform(@rows y = 10 * x)"><pre><span class="pl-k">using</span> DataFrames, Chain, Statistics, PairsMacros
df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(a <span class="pl-k">=</span> <span class="pl-c1">repeat</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>, outer <span class="pl-k">=</span> <span class="pl-c1">20</span>),
               b <span class="pl-k">=</span> <span class="pl-c1">repeat</span>([<span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>c<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>d<span class="pl-pds">"</span></span>], inner <span class="pl-k">=</span> <span class="pl-c1">25</span>),
               x <span class="pl-k">=</span> <span class="pl-c1">repeat</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">20</span>, inner <span class="pl-k">=</span> <span class="pl-c1">5</span>))
<span class="pl-c1">transform</span>(<span class="pl-c1">@rows</span> y <span class="pl-k">=</span> <span class="pl-c1">10</span> <span class="pl-k">*</span> x)</pre></div>
<p dir="auto">Use <code>Chain</code> for a sequence of transformations:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="x_thread = @chain df begin
    transform(@rows y = 10 * x)
    subset(@rows a &gt; 2)
    groupby(:b)
    combine(@cols meanX = mean(x) meanY = mean(y))
    sort(:meanX)
    select(@cols meanX meanY var = b)
end"><pre>x_thread <span class="pl-k">=</span> <span class="pl-c1">@chain</span> df <span class="pl-k">begin</span>
    <span class="pl-c1">transform</span>(<span class="pl-c1">@rows</span> y <span class="pl-k">=</span> <span class="pl-c1">10</span> <span class="pl-k">*</span> x)
    <span class="pl-c1">subset</span>(<span class="pl-c1">@rows</span> a <span class="pl-k">&gt;</span> <span class="pl-c1">2</span>)
    <span class="pl-c1">groupby</span>(<span class="pl-c1">:b</span>)
    <span class="pl-c1">combine</span>(<span class="pl-c1">@cols</span> meanX <span class="pl-k">=</span> <span class="pl-c1">mean</span>(x) meanY <span class="pl-k">=</span> <span class="pl-c1">mean</span>(y))
    <span class="pl-c1">sort</span>(<span class="pl-c1">:meanX</span>)
    <span class="pl-c1">select</span>(<span class="pl-c1">@cols</span> meanX meanY var <span class="pl-k">=</span> b)
<span class="pl-k">end</span></pre></div>
<h2 dir="auto"><a id="user-content-details" class="anchor" aria-hidden="true" href="#details"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Details</h2>
<p dir="auto">All symbols are assumed to refer to columns, with the exception of:</p>
<ul dir="auto">
<li>symbol <code>missing</code></li>
<li>first <code>args</code> of a <code>:call</code> or <code>:.</code> expression (e.g. function calls)</li>
<li>arguments inside of a splicing/interpolation expression <code>$()</code></li>
<li>arguments inside  <code>esc()</code></li>
</ul>
</article></div>