<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-darknetjl" class="anchor" aria-hidden="true" href="#darknetjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Darknet.jl</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/ianshmean/Darknet.jl/workflows/Run%20tests/badge.svg"><img src="https://github.com/ianshmean/Darknet.jl/workflows/Run%20tests/badge.svg" alt="Run tests" style="max-width:100%;"></a>
<a href="https://travis-ci.org/ianshmean/Darknet.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/18459d7afc8fb9285ab3b05b6e2f0372cc288208/68747470733a2f2f7472617669732d63692e6f72672f69616e73686d65616e2f4461726b6e65742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ianshmean/Darknet.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/ianshmean/darknet-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a6e9780cfcecf76f5f3f4faed5d044e17769e762/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f326e3838617735666c726378706d336e3f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/2n88aw5flrcxpm3n?svg=true" style="max-width:100%;"></a>
<a href="https://cloud.drone.io/ianshmean/Darknet.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/549cef1e280d7a90991a76dd8ea2ba4de8138b19/68747470733a2f2f636c6f75642e64726f6e652e696f2f6170692f6261646765732f69616e73686d65616e2f4461726b6e65742e6a6c2f7374617475732e737667" alt="Build Status" data-canonical-src="https://cloud.drone.io/api/badges/ianshmean/Darknet.jl/status.svg" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/ianshmean/Darknet.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a80387f8e60894a9da4d7207630f244fe4e761cf/68747470733a2f2f636f6465636f762e696f2f67682f69616e73686d65616e2f4461726b6e65742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/ianshmean/Darknet.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Wrapper for <a href="https://github.com/AlexeyAB/darknet">https://github.com/AlexeyAB/darknet</a> based on pre-build binaries.</p>
<p>Current support:</p>
<ul>
<li>CPU-only with OpenMP via BinaryBuilder: <a href="https://github.com/JuliaPackaging/Yggdrasil/blob/master/D/Darknet">https://github.com/JuliaPackaging/Yggdrasil/blob/master/D/Darknet</a></li>
</ul>
<pre><code>Platforms:
- i686-linux-gnu
- x86_64-linux-gnu
- aarch64-linux-gnu
- armv7l-linux-gnueabihf
- powerpc64le-linux-gnu
- i686-linux-musl
- x86_64-linux-musl
- aarch64-linux-musl
- armv7l-linux-musleabihf
- x86_64-apple-darwin14
- x86_64-unknown-freebsd11.1
- i686-w64-mingw32
- x86_64-w64-mingw32
</code></pre>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Requires julia 1.3+. Install with Pkg, just like any other registered Julia package:</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add Darknet  <span class="pl-c"><span class="pl-c">#</span> Press ']' to enter the Pkg REPL mode.</span></pre></div>
<h2><a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Testing</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Darknet, Images
d <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>/path/to/weights_and_config_files/<span class="pl-pds">"</span></span>
weightsfile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>yolov3-tiny.weights<span class="pl-pds">"</span></span>
cfgfile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>yolov3-tiny.cfg<span class="pl-pds">"</span></span>
datafile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>coco.data<span class="pl-pds">"</span></span>

imagefile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>/path/to/images/test.jpg<span class="pl-pds">"</span></span>

net <span class="pl-k">=</span> Darknet<span class="pl-k">.</span><span class="pl-c1">load_network</span>(<span class="pl-c1">joinpath</span>(d,cfgfile), <span class="pl-c1">joinpath</span>(d,weightsfile),<span class="pl-c1">1</span>)
meta <span class="pl-k">=</span> Darknet<span class="pl-k">.</span><span class="pl-c1">get_metadata</span>(<span class="pl-c1">joinpath</span>(d,datafile));
</pre></div>
<p>Reading in an image from file:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Read image using Darknet method</span>
img <span class="pl-k">=</span> <span class="pl-c1">load</span>(imagefile)  <span class="pl-c"><span class="pl-c">#</span>Image for plotting in julia purposes only (below)</span>
img_d <span class="pl-k">=</span> Darknet<span class="pl-k">.</span><span class="pl-c1">load_image_color</span>(imagefile,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);  <span class="pl-c"><span class="pl-c">#</span>Darknet native way to read in image from file. Produces an image type with pointers</span></pre></div>
<p>or from an array in julia memory:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Send image via an image in julia memory</span>
img <span class="pl-k">=</span> <span class="pl-c1">convert</span>(Array{Float32}, <span class="pl-c1">load</span>(imagefile)) <span class="pl-c"><span class="pl-c">#</span>Read in array via a julia method</span>
img_d <span class="pl-k">=</span> Darknet<span class="pl-k">.</span><span class="pl-c1">array_to_image</span>(img) <span class="pl-c"><span class="pl-c">#</span>Darknet image type with pointers to source data</span></pre></div>
<p>or for looping through images from julia, avoid reallocation due to permuted dims:</p>
<div class="highlight highlight-source-julia"><pre>img <span class="pl-k">=</span> <span class="pl-c1">convert</span>(Array{Float32}, <span class="pl-c1">load</span>(imagefile)) <span class="pl-c"><span class="pl-c">#</span>Read in array via a julia method</span>

<span class="pl-c"><span class="pl-c">#</span> Darknet flips the first 2 dims of an image (cols,rows,colorchannels)</span>
<span class="pl-c"><span class="pl-c">#</span> so preallocate a permuted dims array to prevent reallocation in </span>
<span class="pl-k">if</span> <span class="pl-c1">size</span>(img,<span class="pl-c1">3</span>) <span class="pl-k">&gt;</span> <span class="pl-c1">1</span> <span class="pl-c"><span class="pl-c">#</span>if more than 1 color channel </span>
    img_permuted <span class="pl-k">=</span> <span class="pl-c1">Array</span><span class="pl-c1">{Float32}</span>(undef,<span class="pl-c1">size</span>(img,<span class="pl-c1">2</span>),<span class="pl-c1">size</span>(img,<span class="pl-c1">1</span>),<span class="pl-c1">size</span>(img,<span class="pl-c1">3</span>)) 
<span class="pl-k">else</span>
    img_permuted <span class="pl-k">=</span> <span class="pl-c1">Array</span><span class="pl-c1">{Float32}</span>(undef,<span class="pl-c1">size</span>(img,<span class="pl-c1">2</span>),<span class="pl-c1">size</span>(img,<span class="pl-c1">1</span>)) 
<span class="pl-k">end</span>

img_d <span class="pl-k">=</span> Darknet<span class="pl-k">.</span><span class="pl-c1">array_to_image</span>(img,img_permuted) <span class="pl-c"><span class="pl-c">#</span>Darknet image type with pointers to source data</span></pre></div>
<p>Run detection</p>
<div class="highlight highlight-source-julia"><pre>results <span class="pl-k">=</span> Darknet<span class="pl-k">.</span><span class="pl-c1">detect</span>(net,meta,img_d,thresh<span class="pl-k">=</span><span class="pl-c1">0.1</span>,nms<span class="pl-k">=</span><span class="pl-c1">0.3</span>)</pre></div>
<p>Preview result using Makie:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Makie, GeometryTypes
scene <span class="pl-k">=</span> <span class="pl-c1">Scene</span>(resolution <span class="pl-k">=</span> <span class="pl-c1">size</span>(img<span class="pl-k">'</span>))
<span class="pl-c1">image!</span>(scene,img<span class="pl-k">'</span>,scale_plot <span class="pl-k">=</span> <span class="pl-c1">false</span>)

<span class="pl-k">for</span> res <span class="pl-k">in</span> results
    bbox <span class="pl-k">=</span> res[<span class="pl-c1">3</span>]
    <span class="pl-c1">poly!</span>(scene,[<span class="pl-c1">Rectangle</span><span class="pl-c1">{Float32}</span>(bbox[<span class="pl-c1">1</span>]<span class="pl-k">-</span>(bbox[<span class="pl-c1">3</span>]<span class="pl-k">/</span><span class="pl-c1">2</span>),bbox[<span class="pl-c1">2</span>]<span class="pl-k">-</span>(bbox[<span class="pl-c1">4</span>]<span class="pl-k">/</span><span class="pl-c1">2</span>),bbox[<span class="pl-c1">3</span>],bbox[<span class="pl-c1">4</span>])],color<span class="pl-k">=</span><span class="pl-c1">RGBA</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">clamp</span>(conf,<span class="pl-c1">0.05</span>,<span class="pl-c1">0.5</span>)))
<span class="pl-k">end</span>
scene</pre></div>
</article></div>