<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-baselet-base-api-optimized-for-tuples" class="anchor" aria-hidden="true" href="#baselet-base-api-optimized-for-tuples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Baselet: <code>Base</code> API optimized for tuples</h1>
<p><a href="https://github.com/tkf/Baselet.jl/actions?query=workflow%3A%22Run+tests%22"><img src="https://github.com/tkf/Baselet.jl/workflows/Run%20tests/badge.svg" alt="GitHub Actions" style="max-width:100%;"></a>
<a href="https://github.com/tkf/Aqua.jl"><img src="https://camo.githubusercontent.com/6100188045368e759fea6ce8c4df2e322ea75b3d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417175612e6a6c2d2546302539462538432541322d617175612e737667" alt="Aqua QA" data-canonical-src="https://img.shields.io/badge/Aqua.jl-%F0%9F%8C%A2-aqua.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>API</h2>
<ul>
<li>
<p><code>Baselet.$f</code> provides a possibly-optimized version of <code>$f</code> exported
from <code>Base</code> (e.g., <code>Baselet.sort(::Tuple)</code>).</p>
</li>
<li>
<p><code>Baselet.Specialized.$f</code> provides a function <code>$f</code> with a subset of
API from <code>Base.$f</code> that is <em>guaranteed</em> to have optimized
specializations (e.g., <code>Baselet.Specialized.sort(::Tuple)</code>).</p>
</li>
<li>
<p><code>Baselet.$f</code> fallbacks to <code>Base.$f</code> if associated
<code>Baselet.Specialized.$f</code> is not found.  For example,
<code>Baselet.sort(::Vector)</code> just calls <code>Base.sort(::Vector)</code>.</p>
</li>
</ul>
<p>The list of supported functions can be found by typing
<code>Baselet.Specialized.</code> + <kbd>TAB</kbd> in the REPL:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Baselet

julia<span class="pl-k">&gt;</span> Baselet<span class="pl-k">.</span>Specialized.
accumulate   cumprod      findall      flatten      isdisjoint   sort
all          cumsum       findfirst    foreach      issubset     symdiff
any          enumerate    findlast     getindex     maximum      union
argmax       extrema      findmax      <span class="pl-k">in</span>           minimum      unique
argmin       filter       findmin      intersect    setdiff      zip</pre></div>
</article></div>