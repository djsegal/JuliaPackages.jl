<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-brillouin" class="anchor" aria-hidden="true" href="#brillouin"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Brillouin</h1>
<p><a href="https://thchr.github.io/Brillouin.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://thchr.github.io/Brillouin.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/thchr/Brillouin.jl/actions"><img src="https://github.com/thchr/Brillouin.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/thchr/Brillouin.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/13fb52f9692b388f9b5336adf6cbd1a5f90414daa08969d6c51c0e207b886775/68747470733a2f2f636f6465636f762e696f2f67682f74686368722f4272696c6c6f75696e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/thchr/Brillouin.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Brillouin.jl is a Julia package that provides tools to generate and visualize <strong>k</strong>-space paths and Brillouin zones that arise for crystalline eigenvalue problems.
The functionalities are inspired by the Python <a href="https://github.com/giovannipizzi/seekpath">SeeK-path package</a>.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<p>Generate the Brillouin zone of a crystal in space group 147 (Bravais type hP; using <a href="https://github.com/thchr/Crystalline.jl">Crystalline.jl</a> to easily generate a standard basis):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Brillouin, Crystalline
julia&gt; Rs   = directbasis(147)
julia&gt; Gs   = reciprocalbasis(Rs)
julia&gt; cell = wignerseitz(Gs)
Cell{3} (8 faces, 12 vertices):
 verts: [-0.0, -0.577, -0.866]
        [0.0, 0.577, -0.866]
        [0.5, 0.289, -0.866]
        [0.5, -0.289, -0.866]
        [-0.0, -0.577, 0.866]
        [0.0, 0.577, 0.866]
        [-0.5, 0.289, 0.866]
        [-0.5, -0.289, 0.866]
        [-0.5, -0.289, -0.866]
        [-0.5, 0.289, -0.866]
        [0.5, -0.289, 0.866]
        [0.5, 0.289, 0.866]
 faces: [4, 3, 12, 11]
        [2, 6, 12, 3]
        [11, 12, 6, 7, 8, 5]
        [10, 9, 8, 7]
        [7, 6, 2, 10]
        [2, 3, 4, 1, 9, 10]
        [5, 8, 9, 1]
        [4, 11, 5, 1]
 basis: [6.283, 3.628, 0.0]
        [0.0, 7.255, 0.0]
        [0.0, 0.0, 5.027]
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Brillouin, Crystalline
julia<span class="pl-k">&gt;</span> Rs   <span class="pl-k">=</span> <span class="pl-c1">directbasis</span>(<span class="pl-c1">147</span>)
julia<span class="pl-k">&gt;</span> Gs   <span class="pl-k">=</span> <span class="pl-c1">reciprocalbasis</span>(Rs)
julia<span class="pl-k">&gt;</span> cell <span class="pl-k">=</span> <span class="pl-c1">wignerseitz</span>(Gs)
Cell{<span class="pl-c1">3</span>} (<span class="pl-c1">8</span> faces, <span class="pl-c1">12</span> vertices)<span class="pl-k">:</span>
 verts<span class="pl-k">:</span> [<span class="pl-k">-</span><span class="pl-c1">0.0</span>, <span class="pl-k">-</span><span class="pl-c1">0.577</span>, <span class="pl-k">-</span><span class="pl-c1">0.866</span>]
        [<span class="pl-c1">0.0</span>, <span class="pl-c1">0.577</span>, <span class="pl-k">-</span><span class="pl-c1">0.866</span>]
        [<span class="pl-c1">0.5</span>, <span class="pl-c1">0.289</span>, <span class="pl-k">-</span><span class="pl-c1">0.866</span>]
        [<span class="pl-c1">0.5</span>, <span class="pl-k">-</span><span class="pl-c1">0.289</span>, <span class="pl-k">-</span><span class="pl-c1">0.866</span>]
        [<span class="pl-k">-</span><span class="pl-c1">0.0</span>, <span class="pl-k">-</span><span class="pl-c1">0.577</span>, <span class="pl-c1">0.866</span>]
        [<span class="pl-c1">0.0</span>, <span class="pl-c1">0.577</span>, <span class="pl-c1">0.866</span>]
        [<span class="pl-k">-</span><span class="pl-c1">0.5</span>, <span class="pl-c1">0.289</span>, <span class="pl-c1">0.866</span>]
        [<span class="pl-k">-</span><span class="pl-c1">0.5</span>, <span class="pl-k">-</span><span class="pl-c1">0.289</span>, <span class="pl-c1">0.866</span>]
        [<span class="pl-k">-</span><span class="pl-c1">0.5</span>, <span class="pl-k">-</span><span class="pl-c1">0.289</span>, <span class="pl-k">-</span><span class="pl-c1">0.866</span>]
        [<span class="pl-k">-</span><span class="pl-c1">0.5</span>, <span class="pl-c1">0.289</span>, <span class="pl-k">-</span><span class="pl-c1">0.866</span>]
        [<span class="pl-c1">0.5</span>, <span class="pl-k">-</span><span class="pl-c1">0.289</span>, <span class="pl-c1">0.866</span>]
        [<span class="pl-c1">0.5</span>, <span class="pl-c1">0.289</span>, <span class="pl-c1">0.866</span>]
 faces<span class="pl-k">:</span> [<span class="pl-c1">4</span>, <span class="pl-c1">3</span>, <span class="pl-c1">12</span>, <span class="pl-c1">11</span>]
        [<span class="pl-c1">2</span>, <span class="pl-c1">6</span>, <span class="pl-c1">12</span>, <span class="pl-c1">3</span>]
        [<span class="pl-c1">11</span>, <span class="pl-c1">12</span>, <span class="pl-c1">6</span>, <span class="pl-c1">7</span>, <span class="pl-c1">8</span>, <span class="pl-c1">5</span>]
        [<span class="pl-c1">10</span>, <span class="pl-c1">9</span>, <span class="pl-c1">8</span>, <span class="pl-c1">7</span>]
        [<span class="pl-c1">7</span>, <span class="pl-c1">6</span>, <span class="pl-c1">2</span>, <span class="pl-c1">10</span>]
        [<span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">4</span>, <span class="pl-c1">1</span>, <span class="pl-c1">9</span>, <span class="pl-c1">10</span>]
        [<span class="pl-c1">5</span>, <span class="pl-c1">8</span>, <span class="pl-c1">9</span>, <span class="pl-c1">1</span>]
        [<span class="pl-c1">4</span>, <span class="pl-c1">11</span>, <span class="pl-c1">5</span>, <span class="pl-c1">1</span>]
 basis<span class="pl-k">:</span> [<span class="pl-c1">6.283</span>, <span class="pl-c1">3.628</span>, <span class="pl-c1">0.0</span>]
        [<span class="pl-c1">0.0</span>, <span class="pl-c1">7.255</span>, <span class="pl-c1">0.0</span>]
        [<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">5.027</span>]</pre></div>
<p>The resulting Brillouin zone can be plotted using e.g. <a href="https://github.com/JuliaPlots/PlotlyJS.jl">PlotlyJS.jl</a> (or 3D-capable backends of <a href="https://github.com/JuliaPlots/AbstractPlotting.jl">AbstractPlotting.jl</a> such as <a href="https://github.com/JuliaPlots/GLMakie.jl">GLMakie.jl</a>):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using PlotlyJS
julia&gt; plot(cell)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PlotlyJS
julia<span class="pl-k">&gt;</span> <span class="pl-c1">plot</span>(cell)</pre></div>
<p>Examples of interactive visualizations are <a href="https://thchr.github.io/Brillouin.jl/stable/wignerseitz/" rel="nofollow">included in the documentation</a>.</p>
<p>Irreducible <strong>k</strong>-paths are returned by <code>irrfbz_path</code>, and can similarly be visualized (see <a href="https://thchr.github.io/Brillouin.jl/stable/kpaths/" rel="nofollow">examples in documentation</a>):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; kp = irrfbz_path(147, Rs)
KPath{3} (7 points, 3 paths, 13 points in paths):
 points: :M =&gt; [0.5, 0.0, 0.0]
         :A =&gt; [0.0, 0.0, 0.5]
         :H =&gt; [0.3333333333333333, 0.3333333333333333, 0.5]
         :K =&gt; [0.3333333333333333, 0.3333333333333333, 0.0]
         :Γ =&gt; [0.0, 0.0, 0.0]
         :L =&gt; [0.5, 0.0, 0.5]
         :H₂ =&gt; [0.3333333333333333, 0.3333333333333333, -0.5]
  paths: [:Γ, :M, :K, :Γ, :A, :L, :H, :A]
         [:L, :M]
         [:H, :K, :H₂]
"><pre>julia<span class="pl-k">&gt;</span> kp <span class="pl-k">=</span> <span class="pl-c1">irrfbz_path</span>(<span class="pl-c1">147</span>, Rs)
KPath{<span class="pl-c1">3</span>} (<span class="pl-c1">7</span> points, <span class="pl-c1">3</span> paths, <span class="pl-c1">13</span> points <span class="pl-k">in</span> paths)<span class="pl-k">:</span>
 points<span class="pl-k">:</span> <span class="pl-c1">:M</span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">0.5</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>]
         <span class="pl-c1">:A</span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.5</span>]
         <span class="pl-c1">:H</span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">0.3333333333333333</span>, <span class="pl-c1">0.3333333333333333</span>, <span class="pl-c1">0.5</span>]
         <span class="pl-c1">:K</span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">0.3333333333333333</span>, <span class="pl-c1">0.3333333333333333</span>, <span class="pl-c1">0.0</span>]
         <span class="pl-c1">:Γ</span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>]
         <span class="pl-c1">:L</span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">0.5</span>, <span class="pl-c1">0.0</span>, <span class="pl-c1">0.5</span>]
         <span class="pl-c1">:H₂</span> <span class="pl-k">=&gt;</span> [<span class="pl-c1">0.3333333333333333</span>, <span class="pl-c1">0.3333333333333333</span>, <span class="pl-k">-</span><span class="pl-c1">0.5</span>]
  paths<span class="pl-k">:</span> [<span class="pl-c1">:Γ</span>, <span class="pl-c1">:M</span>, <span class="pl-c1">:K</span>, <span class="pl-c1">:Γ</span>, <span class="pl-c1">:A</span>, <span class="pl-c1">:L</span>, <span class="pl-c1">:H</span>, <span class="pl-c1">:A</span>]
         [<span class="pl-c1">:L</span>, <span class="pl-c1">:M</span>]
         [<span class="pl-c1">:H</span>, <span class="pl-c1">:K</span>, <span class="pl-c1">:H₂</span>]</pre></div>
<p>The resulting object can be interpolated, using either <code>interpolate(kp, N)</code> or <code>splice(kp, N)</code>, which produces an <code>KPathInterpolant</code> iterable whose elements interpolate the connected paths (and enable convenient plotting of <a href="https://thchr.github.io/Brillouin.jl/stable/kpaths/#Band-structure" rel="nofollow">band structure diagrams</a>).</p>
</article></div>