<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-lopshelvejl" class="anchor" aria-hidden="true" href="#lopshelvejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LopShelve.jl
<a href="https://lopuniverse.me/LopShelve.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></h1>
<h3 dir="auto"><a id="user-content-julia-implementation-of-python-shelve" class="anchor" aria-hidden="true" href="#julia-implementation-of-python-shelve"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Julia implementation of Python Shelve</h3>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/40785379/178375594-9693995a-3b67-40fb-aca7-5fce51b1ba94.png"><img src="https://user-images.githubusercontent.com/40785379/178375594-9693995a-3b67-40fb-aca7-5fce51b1ba94.png" alt="image" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://buymeacoffee.com/machkouroke" rel="nofollow"><img src="https://camo.githubusercontent.com/c3f856bacd5b09669157ed4774f80fb9d8622dd45ce8fdf2990d3552db99bd27/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67" alt="Buy Me A Coffee" data-canonical-src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-why-use-lopshelve-" class="anchor" aria-hidden="true" href="#why-use-lopshelve-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Why use LopShelve ?</h2>
<p dir="auto">A shelf is an object similar to a dictionary but which allows data persistence. You could thus save your data in a file as if it were a dictionary. This julia implementation is based on the <a href="https://docs.python.org/3/library/shelve.html" rel="nofollow">Shelve version of python</a>. So if you used the Shelve version of python you would not be out of place.
However this implementation does not stop there, you could also use LopShelve to map
your data from database (Sqlite) to dictionary</p>
<h2 dir="auto"><a id="user-content-how-use-lopshelve-" class="anchor" aria-hidden="true" href="#how-use-lopshelve-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How use LopShelve ?</h2>
<ul dir="auto">
<li>Add the Shelve module by entering the following lines in your REPL</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="]add LopShelve
"><pre>]add LopShelve
</pre></div>
<ul dir="auto">
<li>Import the LopShelve module then create a <b>Shelf</b> object with the open method! as following (Please specify the name of the file to open without extensions, if it does not exist it will be created)</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using LopShelve: open!"><pre><span class="pl-k">using</span> LopShelve<span class="pl-k">:</span> open!</pre></div>
<h3 dir="auto"><a id="user-content-ordinary-file" class="anchor" aria-hidden="true" href="#ordinary-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Ordinary File</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data = open!(&quot;test_file&quot;) "><pre>data <span class="pl-k">=</span> <span class="pl-c1">open!</span>(<span class="pl-s"><span class="pl-pds">"</span>test_file<span class="pl-pds">"</span></span>) </pre></div>
<ul dir="auto">
<li>You can then use your Shelf object as a dictionary (The data is automatically saved in the file)</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data[&quot;user_name&quot;] = &quot;machkouroke&quot;
data[&quot;password&quot;] = &quot;abcdefgh&quot;"><pre>data[<span class="pl-s"><span class="pl-pds">"</span>user_name<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>machkouroke<span class="pl-pds">"</span></span>
data[<span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>abcdefgh<span class="pl-pds">"</span></span></pre></div>
<ul dir="auto">
<li>To  save the data in the file</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="commit(data)"><pre><span class="pl-c1">commit</span>(data)</pre></div>
<ul dir="auto">
<li>You can also use the do...end syntax to automatically save the data if you end up using the shelf (Recommended)</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="open!(&quot;test_file&quot;) do data
  data[&quot;user_name&quot;] = &quot;machkouroke&quot;
  data[&quot;password&quot;] = &quot;abcdefgh&quot;
end"><pre><span class="pl-c1">open!</span>(<span class="pl-s"><span class="pl-pds">"</span>test_file<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> data
  data[<span class="pl-s"><span class="pl-pds">"</span>user_name<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>machkouroke<span class="pl-pds">"</span></span>
  data[<span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>abcdefgh<span class="pl-pds">"</span></span>
<span class="pl-k">end</span></pre></div>
<ul dir="auto">
<li>You can delete a Shelf's file with the <code>delete</code> function</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="delete(data)"><pre><span class="pl-c1">delete</span>(data)</pre></div>
<ul dir="auto">
<li>If you use the do...end syntax</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="open!(&quot;test_file&quot;; deletion=true) do data
  data[&quot;user_name&quot;] = &quot;machkouroke&quot;
  data[&quot;password&quot;] = &quot;abcdefgh&quot;
end"><pre><span class="pl-c1">open!</span>(<span class="pl-s"><span class="pl-pds">"</span>test_file<span class="pl-pds">"</span></span>; deletion<span class="pl-k">=</span><span class="pl-c1">true</span>) <span class="pl-k">do</span> data
  data[<span class="pl-s"><span class="pl-pds">"</span>user_name<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>machkouroke<span class="pl-pds">"</span></span>
  data[<span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>abcdefgh<span class="pl-pds">"</span></span>
<span class="pl-k">end</span></pre></div>
<h3 dir="auto"><a id="user-content-database-interface" class="anchor" aria-hidden="true" href="#database-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DataBase Interface</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data = open!(&quot;test_file.db&quot;, &quot;table_name&quot;) "><pre>data <span class="pl-k">=</span> <span class="pl-c1">open!</span>(<span class="pl-s"><span class="pl-pds">"</span>test_file.db<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>table_name<span class="pl-pds">"</span></span>) </pre></div>
<ul dir="auto">
<li>You can then use your Shelf object as a dictionary with table's primary key for indexing
For example The <code>table_name</code> table has two columns: username (Primary key) and password so we can register a user as follows</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="data[&quot;machkouroke&quot;] = (password=&quot;abcdefgh&quot;)
data[&quot;johndoe&quot;] = (password=&quot;abcdefghj&quot;)

length(data) # 2

&quot;machkouroke&quot; in data # true
&quot;alex&quot; in data # false

for i in data
  print(i)
end"><pre>data[<span class="pl-s"><span class="pl-pds">"</span>machkouroke<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> (password<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>abcdefgh<span class="pl-pds">"</span></span>)
data[<span class="pl-s"><span class="pl-pds">"</span>johndoe<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> (password<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>abcdefghj<span class="pl-pds">"</span></span>)

<span class="pl-c1">length</span>(data) <span class="pl-c"><span class="pl-c">#</span> 2</span>

<span class="pl-s"><span class="pl-pds">"</span>machkouroke<span class="pl-pds">"</span></span> <span class="pl-k">in</span> data <span class="pl-c"><span class="pl-c">#</span> true</span>
<span class="pl-s"><span class="pl-pds">"</span>alex<span class="pl-pds">"</span></span> <span class="pl-k">in</span> data <span class="pl-c"><span class="pl-c">#</span> false</span>

<span class="pl-k">for</span> i <span class="pl-k">in</span> data
  <span class="pl-c1">print</span>(i)
<span class="pl-k">end</span></pre></div>
<p dir="auto"><b>Output</b></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Dict{Symbol, AbstractVector} with 2 entries:
  :username  =&gt; [&quot;machkouroke&quot;]
  :Title    =&gt; [&quot;abcdefgh&quot;]
Dict{Symbol, AbstractVector} with 2 entries:
  :username  =&gt; [&quot;johndoe&quot;]
  :Title    =&gt; [&quot;abcdefghj&quot;]"><pre>Dict{Symbol, AbstractVector} with <span class="pl-c1">2</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">:username</span>  <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">"</span>machkouroke<span class="pl-pds">"</span></span>]
  <span class="pl-c1">:Title</span>    <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">"</span>abcdefgh<span class="pl-pds">"</span></span>]
Dict{Symbol, AbstractVector} with <span class="pl-c1">2</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">:username</span>  <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">"</span>johndoe<span class="pl-pds">"</span></span>]
  <span class="pl-c1">:Title</span>    <span class="pl-k">=&gt;</span> [<span class="pl-s"><span class="pl-pds">"</span>abcdefghj<span class="pl-pds">"</span></span>]</pre></div>
<ul dir="auto">
<li>You can also delete a ShelfSql file with the <code>delete</code> function</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="delete(data)"><pre><span class="pl-c1">delete</span>(data)</pre></div>
</article></div>