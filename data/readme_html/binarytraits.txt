<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-binarytraitsjl" class="anchor" aria-hidden="true" href="#binarytraitsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>BinaryTraits.jl</h1>
<p><a href="https://tk3369.github.io/BinaryTraits.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev Docs" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/tk3369/BinaryTraits.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8f76cea5d50db5786789b170af7206e496ce99a5/68747470733a2f2f7472617669732d63692e6f72672f746b333336392f42696e6172795472616974732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/tk3369/BinaryTraits.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/tk3369/BinaryTraits.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/7bf3ec1959e006fe387fa56815c2a536ff28adb7/687474703a2f2f636f6465636f762e696f2f6769746875622f746b333336392f42696e6172795472616974732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/tk3369/BinaryTraits.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>BinaryTraits focuses on usability - traits should be simple to understand and easy to use.
For that reason, every trait is binary.  An object either has the trait (positive) or does not
have the trait (negative).</p>
<p>The design is heavily influenced by the Holy Traits pattern as explained in my
<a href="https://ahsmart.com/pub/holy-traits-design-patterns-and-best-practice-book.html" rel="nofollow">Holy Traits book excerpt</a>
as well as in Julia manual's
<a href="https://docs.julialang.org/en/v1/manual/methods/#Trait-based-dispatch-1" rel="nofollow">trait-based dispatch section</a>.
If you think about Holy Traits as the powerful manual transmission, then BinaryTraits
gives you automatic transmission.  The machinery is the same but it is a lot more pleasant
to use.</p>
<p><em>NOTE:</em> This package is under active development and we may introduce breaking
changes.  Please follow the
<a href="https://github.com/tk3369/BinaryTraits.jl/issues">issues list</a>
if you would like to contribute to the project or have a stake in
the design.</p>
<h2><a id="user-content-motivation" class="anchor" aria-hidden="true" href="#motivation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Motivation</h2>
<p>Just a quick example below.  More details can be found
in our <a href="https://tk3369.github.io/BinaryTraits.jl/dev" rel="nofollow">documentation</a>.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Use package and import desired positive/negative trait type aliases</span>
<span class="pl-k">using</span> BinaryTraits
<span class="pl-k">using</span> BinaryTraits<span class="pl-k">.</span>Prefix<span class="pl-k">:</span> Can

<span class="pl-c"><span class="pl-c">#</span> Define a trait and its interface contracts</span>
<span class="pl-c1">@trait</span> Fly
<span class="pl-c1">@implement</span> Can{Fly} by <span class="pl-c1">fly</span>(_, destination<span class="pl-k">::</span><span class="pl-c1">Location</span>, speed<span class="pl-k">::</span><span class="pl-c1">Float64</span>)

<span class="pl-c"><span class="pl-c">#</span> Define your data type and implementation</span>
<span class="pl-k">struct</span> Bird <span class="pl-k">end</span>
<span class="pl-en">fly</span>(<span class="pl-k">::</span><span class="pl-c1">Bird</span>, destination<span class="pl-k">::</span><span class="pl-c1">Location</span>, speed<span class="pl-k">::</span><span class="pl-c1">Float64</span>) <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Wohoo! Arrived! üê¶<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> Assign your data type to a trait</span>
<span class="pl-c1">@assign</span> Bird with Can{Fly}

<span class="pl-c"><span class="pl-c">#</span> Verify that your implementation is correct</span>
<span class="pl-c1">@check</span>(Bird)</pre></div>
<h2><a id="user-content-main-features" class="anchor" aria-hidden="true" href="#main-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Main Features</h2>
<p>Current features are listed below. Additional features are planned and
logged in the issues list.</p>
<ul>
<li>Define traits and assigning them to your own data types</li>
<li>Define composite traits that exhibits all of the underlying traits</li>
<li>Define interface contracts required for a trait</li>
<li>Verify that your data type fully implements all interface contracts</li>
<li>Define traits/interfaces in one module and use them from another module</li>
</ul>
<h2><a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Credits</h2>
<ul>
<li><a href="https://github.com/KlausC">Klaus Crusius</a> for his ideas, articulation, and significant contributions to this project</li>
<li><a href="https://github.com/akels">JƒÅnis Erdmanis</a> for his proposal of a new design based upon parametric types</li>
</ul>
<h2><a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Related Projects</h2>
<p>There are quite a few traits libraries around.  If this package isn't for
you, take a look at these others:</p>
<ul>
<li><a href="https://github.com/schlichtanders/Traits.jl">Traits.jl</a></li>
<li><a href="https://github.com/mauro3/SimpleTraits.jl">SimpleTraits.jl</a></li>
<li><a href="https://github.com/thautwarm/CanonicalTraits.jl">CanonicalTraits.jl</a></li>
<li><a href="https://github.com/xiaodaigh/TraitWrappers.jl">TraitWrappers.jl</a></li>
</ul>
</article></div>