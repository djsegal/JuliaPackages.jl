<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-largecolumns" class="anchor" aria-hidden="true" href="#largecolumns"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>LargeColumns</h1>
<p><a href="http://www.repostatus.org/#wip" rel="nofollow"><img src="https://camo.githubusercontent.com/0749f25183695b4417d8b995933f3528de416a49/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f7769702e737667" alt="Project Status: WIP – Initial development is in progress, but there has not yet been a stable, usable release suitable for the public." data-canonical-src="http://www.repostatus.org/badges/latest/wip.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/tpapp/LargeColumns.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/38c394f9e8681cdce5cac0bf6015a67c68cf21a6/68747470733a2f2f7472617669732d63692e6f72672f74706170702f4c61726765436f6c756d6e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/tpapp/LargeColumns.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/tpapp/LargeColumns.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/aad72e3d3e080fddb8fbf00a9764d352e1802717/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f74706170702f4c61726765436f6c756d6e732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/tpapp/LargeColumns.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/tpapp/LargeColumns.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/bee416204a6d49cfed7ea2a0db919ac37b5d3bac/687474703a2f2f636f6465636f762e696f2f6769746875622f74706170702f4c61726765436f6c756d6e732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/tpapp/LargeColumns.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Manage large vectors of bits types in Julia. A thin wrapper for
mmapped binary data, with a few sanity checks and convenience
functions.</p>
<h2><a id="user-content-specification" class="anchor" aria-hidden="true" href="#specification"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Specification</h2>
<p>For each dataset, the columns (vectors of equal length) and metadata
are stored in a directory like this:</p>
<pre><code>dir/
├── layout.jld2
├── meta/
│   └ ...
├── 1.bin
├── 2.bin
├── ...
├── ...
└── ...
</code></pre>
<p>The file <code>layout.jld2</code> specifies the number and types of columns (using
<a href="https://github.com/simonster/JLD2.jl">JLD2.jl</a>, and the total number of
elements. The <code>$i.bin</code> files contain the data for each column, which
can be <a href="https://en.wikipedia.org/wiki/Memory-mapped_file" rel="nofollow">memory mapped</a>.</p>
<p>Additional metadata can be saved as in files in the directory
<code>meta</code>. This is ignored by this library; use the function <code>meta_path</code>
to calculate paths relative to <code>dir/meta</code>.</p>
<h2><a id="user-content-interfaces" class="anchor" aria-hidden="true" href="#interfaces"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Interfaces</h2>
<p>Two interfaces are provided. Use <code>SinkColumns</code> for an <em>ex ante</em>
unknown number of elements, written sequentially. This is useful for
ingesting data.</p>
<p><code>MmappedColumns</code> is useful when the number of records is known and
fixed.</p>
<p>Types for the columns are specified as <code>Tuple</code>s. See the docstrings
for both interfaces and the unit tests for examples.</p>
<h1><a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Acknowledgments</h1>
<p>Work on this library was supported by the Austrian National Bank
Jubiläumsfonds grant #17378.</p>
</article></div>