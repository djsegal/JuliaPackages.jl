<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-tetrisjl" class="anchor" aria-hidden="true" href="#tetrisjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Tetris.jl</h1>
<p><a href="https://travis-ci.org/mossr/Tetris.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6be65bda018509851ff8ba8e0131031a3bc0e19f4533ffd00d992c4f626feb7f/68747470733a2f2f7472617669732d63692e6f72672f6d6f7373722f5465747269732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/mossr/Tetris.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Tetris in the Julia REPL...<em>in one line of code!</em></p>
<p align="center">
  <a target="_blank" rel="noopener noreferrer" href="./img/tetris.png"><img src="./img/tetris.png" style="max-width:100%;"></a>
</p>
<p align="center">
  <a target="_blank" rel="noopener noreferrer" href="./img/tetris-one-liner.svg"><img src="./img/tetris-one-liner.svg" style="max-width:100%;"></a>
</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="module Tetris (__init__(██=&quot;██&quot;, ■■=&quot;[]&quot;, S=&quot; &quot;^2, R=&quot;\e[31m$██\e[0m&quot;, B=&quot;\e[31;1m$██\e[0m&quot;, G=&quot;\e[32m$██\e[0m&quot;, L=&quot;\e[33m$██\e[0m&quot;, N=&quot;\e[34m$██\e[0m&quot;, M=&quot;\e[35m$██\e[0m&quot;, C=&quot;\e[36m$██\e[0m&quot;, W=&quot;\e[37m$██\e[0m&quot;, bs=[[S S C S; S S C S; S S C S; S S C S], [S B S S; S B S S; S B B S; S S S S], [S S N S; S S N S; S N N S; S S S S], [S S S S; S L L S; S L L S; S S S S], [S G S S; S G G S; S S G S; S S S S], [S S R S; S R R S; S R S S; S S S S], [S S M S; S M M S; S S M S; S S S S]], b=rand(bs), nb=rand(bs), rb=nothing, fd=false, go=false, rtx=false, h=false, fw=12, fh=18, sX=div(fw,2)-1, sY=2, X=sX, Y=sY, p=(X,Y), rcan=false, lr=[], fwlr=nothing, key=nothing, sc=0, t=0, sp=10, rf=(ls=0) -&gt; [&quot;┌&quot; &quot;────&quot; &quot;───&quot; &quot;T&quot; &quot;E&quot; &quot;T&quot; &quot;R&quot; &quot;I&quot; &quot;S&quot; &quot;────&quot; &quot;───&quot; &quot;┐&quot;; &quot;│&quot; S S S S S S S S S S &quot;│ ┌──NEXT──┐&quot;; &quot;│&quot; S S S S S S S S S S &quot;│ │$S$S$S$(S)│&quot;; &quot;│&quot; S S S S S S S S S S &quot;│ │$S$S$S$(S)│&quot;; &quot;│&quot; S S S S S S S S S S &quot;│ │$S$S$S$(S)│&quot;; &quot;│&quot; S S S S S S S S S S &quot;│ │$S$S$S$(S)│&quot;; &quot;│&quot; S S S S S S S S S S &quot;│ └────────┘&quot;; &quot;│&quot; S S S S S S S S S S &quot;│$(S)Score: $ls&quot;; &quot;│&quot; S S S S S S S S S S &quot;│&quot;; &quot;│&quot; S S S S S S S S S S &quot;│&quot;;&quot;│&quot; S S S S S S S S S S &quot;│&quot;;&quot;│&quot; S S S S S S S S S S &quot;│&quot;; &quot;│&quot; S S S S S S S S S S &quot;│&quot;; &quot;│&quot; S S S S S S S S S S &quot;│&quot;; &quot;│&quot; S S S S S S S S S S &quot;│&quot;; &quot;│&quot; S S S S S S S S S S &quot;│&quot;; &quot;│&quot; S S S S S S S S S S &quot;│&quot;; &quot;│&quot; S S S S S S S S S S &quot;│&quot;; &quot;└&quot; &quot;──&quot; &quot;──&quot; &quot;──&quot; &quot;──&quot; &quot;──&quot; &quot;──&quot; &quot;──&quot; &quot;──&quot; &quot;──&quot; &quot;──&quot; &quot;┘&quot;], f=rf(), af=copy(f), dn= (lf, lnb) -&gt; [lf[y,end] = replace(lf[y,end], r&quot; │.{8,100}│&quot;=&gt;&quot; │&quot;*join(lnb[i,:])*&quot;│&quot;) for (i,y) in enumerate(3:6)], c=(lb, lf, xy, rt::Bool=false) -&gt; ([rt ? nothing : (rt = (lb[j,i] != S &amp;&amp; lf[y,max(1,x)] != S)) for (i,x) in enumerate(xy[1]:xy[1]+3) for (j,y) in enumerate(xy[2]:xy[2]+3)], rt)[end], gd=(lb, lf, lX, ly, lp, rt::Bool=false) -&gt; ([rt ? nothing : (!c(lb, lf, lp) ? (()-&gt;lp=(lX,py))() : rt=true) for py in ly:fh], (()-&gt;ly=lp[2]-1)(), (lp, ly))[end], sh=(lb) -&gt; map(s-&gt;replace(s,██=&gt;■■), lb), m=(lb, lf, xy, nf=deepcopy(lf)) -&gt; ([lb[j,i] != S ? (nf[y,x] = lb[j,i]) : nothing for (i,x) in enumerate(xy[1]:xy[1]+3) for (j,y) in enumerate(xy[2]:xy[2]+3)], nf)[end], ds=(lf, lb, laf, lX, ly, lp, sb=sh(lb), np=gd(sb,lf,lX,ly,lp)[1]) -&gt; m(lb, m(sb, laf, (np[1], np[2]-1)), lp), df=(lf, lb, lX, ly, lp, laf=lf, naf=(!go &amp;&amp; !isempty(lp) ? ds(lf, lb, laf, lX, ly, lp) : laf)) -&gt; println(&quot;\033[1;1H&quot;,join(join.([naf[i,:] for i in 1:size(naf,1)]), &quot;\n&quot;), &quot;\033[$(fh+1);$(fw+1)H&quot;), cr=(lrb, lp::Tuple, rt::Tuple=(false,lp)) -&gt; ([!c(lrb, f, (lp[1]+r,lp[2])) ? (r == 0 ? rt=(true, lp) : rt=(rt[1] ? rt : (true,(lp[1]+r, lp[2])))) : nothing for (i,r) in enumerate([0,-1,1,-2,2])], rt)[end], cl=(lf) -&gt; [all(map(line-&gt;!occursin(S,line), lf[i,2:end-1])) for i in 2:size(lf,1)-1], cc=ccall(:jl_tty_set_mode, Int32, (Ptr{Cvoid}, Int32), stdin.handle, true), buf=Channel{Char}(100), asy=let _asy=@async begin for __ in 1:72_000 put!(buf, read(stdin, Char)) end end end, ri=() -&gt; (isready(buf) ? take!(buf) : nothing), eg=() -&gt; (println(&quot;╔────────────────────╗\n&quot;, &quot;║$S$S$(S)GAMEOVER$S$S$(S)║\n&quot;, &quot;╚────────────────────╝\e[?25h&quot;), exit())) = (println(&quot;\33[2J&quot;), print(&quot;\e[?25l&quot;), (()-&gt;f=rf())(), dn(f, nb), [(sleep(0.05), (()-&gt;t+=1)(), (()-&gt;fd=(t==sp))(), (()-&gt;p=(X,Y))(), (!isempty(lr) ? (df(f,b,X,Y,p), (()-&gt;sc+=length(lr))(), (()-&gt;fwlr=f[setdiff(2:size(f,1)-1,lr),2:end-1])(), (()-&gt;f=rf(sc))(), (()-&gt;f[(2+length(lr)):end-1, 2:end-1]=fwlr)(), dn(f, nb), sleep(0.05), (()-&gt;lr=[])(), df(f,b,X,Y,p)) : nothing), (()-&gt;key=ri())(), ((key=='a') ? ((!rtx ? (()-&gt;p=(X-1,Y))() : nothing), (()-&gt;rtx=true)()) : ((key=='d') ? ((!rtx ? (()-&gt;p=(X+1,Y))() : nothing), (()-&gt;rtx=true)()) : ((key=='s') ? (()-&gt;p=(X,Y+1))() : ((key=='w') ? ((!h ? ((()-&gt;(p,Y)=gd(b,f,X,Y,p))(), (()-&gt;fd=true)()) : nothing), (()-&gt;h=true)()) : (((key=='q') || (key=='e')) ? (((()-&gt;rb=((key=='q') ? rotl90(b) : rotr90(b)))(), (!h ? (()-&gt;((()-&gt;(rcan,p)=cr(rb,p))(), (rcan ? (()-&gt;b=rb)() : nothing)))() : nothing), (()-&gt;h=true)())) : ((key=='\e') ? ((()-&gt;go=true)()) : (()-&gt;h=false)())))))), rtx ? (sleep(0.025),(()-&gt;rtx=false)()) : nothing, !c(b,f,p) ? (()-&gt;(X,Y)=p)() : (()-&gt;p=(X,Y))(), (()-&gt;af=m(b,f,p))(), fd ? (!c(b, f, (p[1], p[2]+1)) ? (()-&gt;Y+=1)() : ((()-&gt;f[:]=af)(), (any(cl(f)) ? ((l=findall(cl(f)).+1)-&gt; (f[l,2:end-1] .= W, (()-&gt;lr=l)()))() : (()-&gt;lr=[])()), ((()-&gt;X=sX)(), (()-&gt;Y=sY)(), (()-&gt;p=(X,Y))(), (()-&gt;b=nb)(), (()-&gt;nb=rand(bs))(), dn(f, nb), (()-&gt;go=c(b,f,p))())), (()-&gt;t=0)()) : df(f,b,X,Y,p,af), go ? eg() : nothing) for _ in 1:72000])) end
"><pre>module Tetris (__init__(██="██", ■■="[]", S=" "^2, R="\e[31m$██\e[0m", B="\e[31;1m$██\e[0m", G="\e[32m$██\e[0m", L="\e[33m$██\e[0m", N="\e[34m$██\e[0m", M="\e[35m$██\e[0m", C="\e[36m$██\e[0m", W="\e[37m$██\e[0m", bs=[[S S C S; S S C S; S S C S; S S C S], [S B S S; S B S S; S B B S; S S S S], [S S N S; S S N S; S N N S; S S S S], [S S S S; S L L S; S L L S; S S S S], [S G S S; S G G S; S S G S; S S S S], [S S R S; S R R S; S R S S; S S S S], [S S M S; S M M S; S S M S; S S S S]], b=rand(bs), nb=rand(bs), rb=nothing, fd=false, go=false, rtx=false, h=false, fw=12, fh=18, sX=div(fw,2)-1, sY=2, X=sX, Y=sY, p=(X,Y), rcan=false, lr=[], fwlr=nothing, key=nothing, sc=0, t=0, sp=10, rf=(ls=0) -&gt; ["┌" "────" "───" "T" "E" "T" "R" "I" "S" "────" "───" "┐"; "│" S S S S S S S S S S "│ ┌──NEXT──┐"; "│" S S S S S S S S S S "│ │$S$S$S$(S)│"; "│" S S S S S S S S S S "│ │$S$S$S$(S)│"; "│" S S S S S S S S S S "│ │$S$S$S$(S)│"; "│" S S S S S S S S S S "│ │$S$S$S$(S)│"; "│" S S S S S S S S S S "│ └────────┘"; "│" S S S S S S S S S S "│$(S)Score: $ls"; "│" S S S S S S S S S S "│"; "│" S S S S S S S S S S "│";"│" S S S S S S S S S S "│";"│" S S S S S S S S S S "│"; "│" S S S S S S S S S S "│"; "│" S S S S S S S S S S "│"; "│" S S S S S S S S S S "│"; "│" S S S S S S S S S S "│"; "│" S S S S S S S S S S "│"; "│" S S S S S S S S S S "│"; "└" "──" "──" "──" "──" "──" "──" "──" "──" "──" "──" "┘"], f=rf(), af=copy(f), dn= (lf, lnb) -&gt; [lf[y,end] = replace(lf[y,end], r" │.{8,100}│"=&gt;" │"*join(lnb[i,:])*"│") for (i,y) in enumerate(3:6)], c=(lb, lf, xy, rt::Bool=false) -&gt; ([rt ? nothing : (rt = (lb[j,i] != S &amp;&amp; lf[y,max(1,x)] != S)) for (i,x) in enumerate(xy[1]:xy[1]+3) for (j,y) in enumerate(xy[2]:xy[2]+3)], rt)[end], gd=(lb, lf, lX, ly, lp, rt::Bool=false) -&gt; ([rt ? nothing : (!c(lb, lf, lp) ? (()-&gt;lp=(lX,py))() : rt=true) for py in ly:fh], (()-&gt;ly=lp[2]-1)(), (lp, ly))[end], sh=(lb) -&gt; map(s-&gt;replace(s,██=&gt;■■), lb), m=(lb, lf, xy, nf=deepcopy(lf)) -&gt; ([lb[j,i] != S ? (nf[y,x] = lb[j,i]) : nothing for (i,x) in enumerate(xy[1]:xy[1]+3) for (j,y) in enumerate(xy[2]:xy[2]+3)], nf)[end], ds=(lf, lb, laf, lX, ly, lp, sb=sh(lb), np=gd(sb,lf,lX,ly,lp)[1]) -&gt; m(lb, m(sb, laf, (np[1], np[2]-1)), lp), df=(lf, lb, lX, ly, lp, laf=lf, naf=(!go &amp;&amp; !isempty(lp) ? ds(lf, lb, laf, lX, ly, lp) : laf)) -&gt; println("\033[1;1H",join(join.([naf[i,:] for i in 1:size(naf,1)]), "\n"), "\033[$(fh+1);$(fw+1)H"), cr=(lrb, lp::Tuple, rt::Tuple=(false,lp)) -&gt; ([!c(lrb, f, (lp[1]+r,lp[2])) ? (r == 0 ? rt=(true, lp) : rt=(rt[1] ? rt : (true,(lp[1]+r, lp[2])))) : nothing for (i,r) in enumerate([0,-1,1,-2,2])], rt)[end], cl=(lf) -&gt; [all(map(line-&gt;!occursin(S,line), lf[i,2:end-1])) for i in 2:size(lf,1)-1], cc=ccall(:jl_tty_set_mode, Int32, (Ptr{Cvoid}, Int32), stdin.handle, true), buf=Channel{Char}(100), asy=let _asy=@async begin for __ in 1:72_000 put!(buf, read(stdin, Char)) end end end, ri=() -&gt; (isready(buf) ? take!(buf) : nothing), eg=() -&gt; (println("╔────────────────────╗\n", "║$S$S$(S)GAMEOVER$S$S$(S)║\n", "╚────────────────────╝\e[?25h"), exit())) = (println("\33[2J"), print("\e[?25l"), (()-&gt;f=rf())(), dn(f, nb), [(sleep(0.05), (()-&gt;t+=1)(), (()-&gt;fd=(t==sp))(), (()-&gt;p=(X,Y))(), (!isempty(lr) ? (df(f,b,X,Y,p), (()-&gt;sc+=length(lr))(), (()-&gt;fwlr=f[setdiff(2:size(f,1)-1,lr),2:end-1])(), (()-&gt;f=rf(sc))(), (()-&gt;f[(2+length(lr)):end-1, 2:end-1]=fwlr)(), dn(f, nb), sleep(0.05), (()-&gt;lr=[])(), df(f,b,X,Y,p)) : nothing), (()-&gt;key=ri())(), ((key=='a') ? ((!rtx ? (()-&gt;p=(X-1,Y))() : nothing), (()-&gt;rtx=true)()) : ((key=='d') ? ((!rtx ? (()-&gt;p=(X+1,Y))() : nothing), (()-&gt;rtx=true)()) : ((key=='s') ? (()-&gt;p=(X,Y+1))() : ((key=='w') ? ((!h ? ((()-&gt;(p,Y)=gd(b,f,X,Y,p))(), (()-&gt;fd=true)()) : nothing), (()-&gt;h=true)()) : (((key=='q') || (key=='e')) ? (((()-&gt;rb=((key=='q') ? rotl90(b) : rotr90(b)))(), (!h ? (()-&gt;((()-&gt;(rcan,p)=cr(rb,p))(), (rcan ? (()-&gt;b=rb)() : nothing)))() : nothing), (()-&gt;h=true)())) : ((key=='\e') ? ((()-&gt;go=true)()) : (()-&gt;h=false)())))))), rtx ? (sleep(0.025),(()-&gt;rtx=false)()) : nothing, !c(b,f,p) ? (()-&gt;(X,Y)=p)() : (()-&gt;p=(X,Y))(), (()-&gt;af=m(b,f,p))(), fd ? (!c(b, f, (p[1], p[2]+1)) ? (()-&gt;Y+=1)() : ((()-&gt;f[:]=af)(), (any(cl(f)) ? ((l=findall(cl(f)).+1)-&gt; (f[l,2:end-1] .= W, (()-&gt;lr=l)()))() : (()-&gt;lr=[])()), ((()-&gt;X=sX)(), (()-&gt;Y=sY)(), (()-&gt;p=(X,Y))(), (()-&gt;b=nb)(), (()-&gt;nb=rand(bs))(), dn(f, nb), (()-&gt;go=c(b,f,p))())), (()-&gt;t=0)()) : df(f,b,X,Y,p,af), go ? eg() : nothing) for _ in 1:72000])) end</pre></div>
<p>View the raw one-liner at <a href="https://raw.githubusercontent.com/mossr/Tetris.jl/master/src/Tetris.jl" rel="nofollow"><code>Tetris.jl</code></a> and an exanded/indented version at <a href="https://github.com/mossr/Tetris.jl/blob/master/src/TetrisExpanded.jl"><code>TetrisExpanded.jl</code></a>. For an un-obfuscated version, see my <a href="https://github.com/JuliaGaming/Tetris/tree/master/Tetris-mossr">JuliaGaming implementation</a>.</p>
<h3><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="] add Tetris
"><pre>] add Tetris</pre></div>
<p>Works across operating systems—even on Android using <a href="https://github.com/termux/termux-packages/issues/58#issuecomment-529036798">Termux</a>!</p>
<h3><a id="user-content-playing" class="anchor" aria-hidden="true" href="#playing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Playing</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Tetris
"><pre><span class="pl-k">using</span> Tetris</pre></div>
<p>Running this will automatically start the game and exit the REPL at gameover.</p>
<h2><a id="user-content-controls-wasd--qe" class="anchor" aria-hidden="true" href="#controls-wasd--qe"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Controls (wasd + qe)</h2>
<ul>
<li><code>a</code> and <code>d</code> for left and right movement</li>
<li><code>s</code> to move down</li>
<li><code>w</code> to snap down</li>
<li><code>q</code> and <code>e</code> for left and right rotations</li>
<li><code>esc</code> to quit</li>
</ul>
<h2><a id="user-content-one-line-timelapse" class="anchor" aria-hidden="true" href="#one-line-timelapse"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>One-line Timelapse</h2>
<p>In going from the full implementation (pushed to <a href="https://github.com/JuliaGaming/Tetris/tree/master/Tetris-mossr">JuliaGaming</a>) down to one line, I recorded my screen for others to witness the abomination. (Click to zoom-in)</p>
<p align="center">
  <a target="_blank" rel="noopener noreferrer" href="https://github.com/mossr/Tetris.jl/blob/master/img/timelapse.gif"><img src="https://github.com/mossr/Tetris.jl/raw/master/img/timelapse.gif" style="max-width:100%;"></a>
</p>
<p>Sidenote, this was actually recorded <em>after</em> I finished. I used the Sublime Text <code>ctrl-z</code> buffer all the way back, then hit record and used <code>crtl-y</code> to go forward.</p>
<h1><a id="user-content-why" class="anchor" aria-hidden="true" href="#why"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Why?</h1>
<p>Great question. I first wanted to create Tetris in Julia, then made it a goal to reduce it down to one functional line of Julia code. I'm not using semicolons to break up separate Julia lines. Instead, I'm using tricks to define one inner <code>__init__()</code> function that encodes the game state variables and subroutines as function arguments and then runs the game loop when the <a href="https://raw.githubusercontent.com/mossr/Tetris.jl/master/src/Tetris.jl" rel="nofollow"><code>Tetris</code></a> module is loaded.</p>
<p>It works cross-plaform in pure Julia as I did not want to rely on any external libraries. Games are limited to 1 hour (72,000 iterations with a game clock of 0.05 seconds), as while loops would break my <em>"don't use semicolons to separate lines"</em> rule (aside from Matrix row definitions). To play, run <code>using Tetris</code> or copy and paste the one-liner into the Julia REPL and enjoy!</p>
<hr>
<p><a href="http://web.stanford.edu/~mossr" rel="nofollow">Robert Moss</a></p>
</article></div>