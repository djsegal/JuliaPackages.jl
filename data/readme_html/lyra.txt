<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-lyra" class="anchor" aria-hidden="true" href="#lyra"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Lyra</h1>
<p><a href="https://www.repostatus.org/#wip" rel="nofollow"><img src="https://camo.githubusercontent.com/fab25c6424d2b4ea02669e7a51a2d5abc4d1ab7f/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f7769702e737667" alt="Project Status: WIP â€“ Initial development is in progress, but there has not yet been a stable, usable release suitable for the public." data-canonical-src="https://www.repostatus.org/badges/latest/wip.svg" style="max-width:100%;"></a>
<a href="http://codecov.io/github/queryverse/Lyra.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/c38eb816b83a1205c3863a3b8e1e27af7b2994e9/687474703a2f2f636f6465636f762e696f2f6769746875622f717565727976657273652f4c7972612e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/queryverse/Lyra.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Overview</h2>
<p>This package provides Julia integration for the <a href="https://github.com/vega/lyra">Lyra</a> Visualization Design Environment.</p>
<p>NOTE THAT THIS PACKAGE CURRENTLY USES A VERY EXPERIMENTAL AND UNSTABLE BUILD OF LYRA AND IS NOT READY FOR REAL USE.</p>
<h2><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Getting Started</h2>
<p>Lyra.jl is an interactive environment that enables custom visualization design without writing any code.</p>
<p>You can install the package at the Pkg REPL-mode with:</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>queryverse<span class="pl-k">/</span>Lyra<span class="pl-k">.</span>jl</pre></div>
<h2><a id="user-content-visualizing-data" class="anchor" aria-hidden="true" href="#visualizing-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Visualizing data</h2>
<p>You create a new Lyra window by calling <code>LyraWindow</code>:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Lyra

l <span class="pl-k">=</span> <span class="pl-c1">LyraWindow</span>()</pre></div>
<p>By itself this is not very useful, the next step is to load some data into Lyra. Lets assume your data is in a <code>DataFrame</code>:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> DataFrames, Lyra

data <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(a<span class="pl-k">=</span><span class="pl-c1">rand</span>(<span class="pl-c1">100</span>), b<span class="pl-k">=</span><span class="pl-c1">randn</span>(<span class="pl-c1">100</span>))

l <span class="pl-k">=</span> <span class="pl-c1">LyraWindow</span>(data)</pre></div>
<p>You can also use the pipe to load data into Lyra:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> DataFrames, Lyra

data <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(a<span class="pl-k">=</span><span class="pl-c1">rand</span>(<span class="pl-c1">100</span>), b<span class="pl-k">=</span><span class="pl-c1">randn</span>(<span class="pl-c1">100</span>))

l <span class="pl-k">=</span> data <span class="pl-k">|&gt;</span> <span class="pl-c1">LyraWindow</span>()</pre></div>
<p>With a more interesting data source</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VegaDatasets, Lyra

l <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">LyraWindow</span>()</pre></div>
<p>You can load any source that implements the <a href="https://github.com/queryverse/TableTraits.jl">TableTraits.jl</a> interface into Lyra, i.e. not just <code>DataFrame</code>s. For example, you can load some data from a CSV file with <a href="https://github.com/queryverse/CSVFiles.jl">CSVFiles.jl</a>, filter them with <a href="https://github.com/queryverse/Query.jl">Query.jl</a> and then visualize the result with Lyra:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> FileIO, CSVFiles, Query, Lyra

l <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>data.csv<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">@filter</span>(_<span class="pl-k">.</span>age<span class="pl-k">&gt;</span><span class="pl-c1">30</span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">LyraWindow</span>()</pre></div>
<p>In this example the data is streamed directly into Lyra and at no point is any <code>DataFrame</code> allocated.</p>
<p>The datasets we added so far were named with the default name <code>dataset</code>. You can also give the dataset your own name, by passing a <code>Pair</code> instead of the raw data to <code>LyraWindow</code>:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VegaDatasets, Lyra

l <span class="pl-k">=</span> <span class="pl-c1">LyraWindow</span>(<span class="pl-c1">:cars</span><span class="pl-k">=&gt;</span><span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>))</pre></div>
<p>You can also make multiple datasets available to the Lyra environment. In that case you need to give each a unique name. The following example passes both the <code>cars</code> and <code>movies</code> dataset to Lyra:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VegaDatasets, Lyra

l <span class="pl-k">=</span> <span class="pl-c1">LyraWindow</span>(<span class="pl-c1">:cars</span><span class="pl-k">=&gt;</span><span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>), <span class="pl-c1">:movies</span><span class="pl-k">=&gt;</span><span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>movies<span class="pl-pds">"</span></span>))</pre></div>
<p>You can use the <code>add!</code> function to add additional datasets to an existing Lyra window:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VegaDatasets, Lyra

l <span class="pl-k">=</span> <span class="pl-c1">LyraWindow</span>()

<span class="pl-c1">add!</span>(l, <span class="pl-c1">:movies</span><span class="pl-k">=&gt;</span><span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>movies<span class="pl-pds">"</span></span>))</pre></div>
<h2><a id="user-content-extracting-plots" class="anchor" aria-hidden="true" href="#extracting-plots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Extracting plots</h2>
<p>You can also access a plot that you have created in the Lyra UI from Julia, for example to save the plot to disc.</p>
<p>You can access the currently active plot in a given Lyra window <code>l</code> with the brackets syntax:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VegaDatasets, Lyra, VegaLite

l <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">LyraWindow</span>()

plot1 <span class="pl-k">=</span> l[]</pre></div>
<p>At this point <code>plot1</code> will hold a standard <a href="https://github.com/queryverse/VegaLite.jl">VegaLite.jl</a> plot object. You can use the normal <a href="https://github.com/queryverse/VegaLite.jl">VegaLite.jl</a> functions to display such a plot, or save it to disc:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">display</span>(plot1)

plot1 <span class="pl-k">|&gt;</span> <span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>figure1.pdf<span class="pl-pds">"</span></span>)</pre></div>
<p>A useful pattern here is to save the plot as a Vega JSON file to disc, without the data:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VegaDatasets, Lyra, VegaLite

l <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">LyraWindow</span>()

<span class="pl-c"><span class="pl-c">#</span> Now create the plot in the UI</span>

l[] <span class="pl-k">|&gt;</span> <span class="pl-c1">save</span>(<span class="pl-s"><span class="pl-pds">"</span>figure1.vega<span class="pl-pds">"</span></span>)</pre></div>
<p>At a later point you can then load this plot specification again, but pipe new data into it [TODO Make sure this works]:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VegaLite, VegaDatasets

<span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>cars<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>figure1.vega<span class="pl-pds">"</span></span>)</pre></div>
</article></div>