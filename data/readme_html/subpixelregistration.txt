<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-subpixelregistration" class="anchor" aria-hidden="true" href="#subpixelregistration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>SubpixelRegistration</h1>
<p><a href="http://pkg.julialang.org/detail/SubpixelRegistration" rel="nofollow"><img src="https://camo.githubusercontent.com/246a0d928015ee9055a87968a8db0d5ad086c569/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f537562706978656c526567697374726174696f6e5f302e362e737667" alt="SubpixelRegistration" data-canonical-src="http://pkg.julialang.org/badges/SubpixelRegistration_0.6.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/detail/SubpixelRegistration" rel="nofollow"><img src="https://camo.githubusercontent.com/f4bd371a153110822b1a5f065bd49b6b267e0935/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f537562706978656c526567697374726174696f6e5f302e372e737667" alt="SubpixelRegistration" data-canonical-src="http://pkg.julialang.org/badges/SubpixelRegistration_0.7.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/romainFr/SubpixelRegistration.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ca928d84e1a4fedf3558c2bf18b7e8d867b257ae/68747470733a2f2f7472617669732d63692e6f72672f726f6d61696e46722f537562706978656c526567697374726174696f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/romainFr/SubpixelRegistration.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://romainFr.github.io/SubpixelRegistration.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>Algorithm modified from the <a href="http://www.mathworks.com/matlabcentral/fileexchange/18401-efficient-subpixel-image-registration-by-cross-correlation" rel="nofollow">Matlab code</a> accompanying
<a href="http://www.opticsinfobase.org/ol/fulltext.cfm?uri=ol-33-2-156&amp;id=148843" rel="nofollow">Manuel Guizar-Sicairos, Samuel T. Thurman, and James R. Fienup, "Efficient subpixel image registration algorithms," Opt. Lett. 33, 156-158 (2008)</a> . This implementation allows to register arrays of arbitrary dimensions (not just 2d). Functions are written for <code>AbstractArray</code>s and should work for <code>Image</code>s.</p>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SubpixelRegistration

<span class="pl-c"><span class="pl-c">#</span># Building a simple 4d array</span>
julia<span class="pl-k">&gt;</span> test4d <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(<span class="pl-c1">40</span>,<span class="pl-c1">40</span>,<span class="pl-c1">20</span>,<span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> test4d[<span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">20</span>,<span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">20</span>,<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">10</span>,<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">1</span>
julia<span class="pl-k">&gt;</span> test4d[<span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">15</span>,<span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">25</span>,<span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">13</span>,<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">1</span>

<span class="pl-c"><span class="pl-c">#</span># By using larger ufac one gets to higher subpixel resolution</span>
julia<span class="pl-k">&gt;</span> dftResults <span class="pl-k">=</span> <span class="pl-c1">stackDftReg</span>(test4d,ufac<span class="pl-k">=</span><span class="pl-c1">1</span>)
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{Any,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Dict</span><span class="pl-c1">{ASCIIString,Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">4.440892098500626e-16</span>,<span class="pl-s"><span class="pl-pds">"</span>shift<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>[<span class="pl-c1">0.0</span>,<span class="pl-c1">0.0</span>,<span class="pl-c1">0.0</span>])
 <span class="pl-c1">Dict</span><span class="pl-c1">{ASCIIString,Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">0.0</span>,<span class="pl-s"><span class="pl-pds">"</span>shift<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>[<span class="pl-c1">5.0</span>,<span class="pl-k">-</span><span class="pl-c1">5.0</span>,<span class="pl-k">-</span><span class="pl-c1">3.0</span>])

<span class="pl-c"><span class="pl-c">#</span># The array can theb be realigned from this dictionary</span>
julia<span class="pl-k">&gt;</span> back4d <span class="pl-k">=</span> <span class="pl-c1">alignFromDict</span>(test4d,dftResults)

</pre></div>
</article></div>