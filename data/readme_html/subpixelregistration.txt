<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-subpixelregistration" class="anchor" aria-hidden="true" href="#subpixelregistration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SubpixelRegistration</h1>
<p><a href="http://pkg.julialang.org/detail/SubpixelRegistration" rel="nofollow"><img src="https://camo.githubusercontent.com/e6bd9d94345c562c877e40b43c54cfe6edfe8cbeed392594bcfe37fe610d3f60/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f537562706978656c526567697374726174696f6e5f302e362e737667" alt="SubpixelRegistration" data-canonical-src="http://pkg.julialang.org/badges/SubpixelRegistration_0.6.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/detail/SubpixelRegistration" rel="nofollow"><img src="https://camo.githubusercontent.com/bae1d82fa267eb0c779ab4dfc2b6c9b9e8cae44b3c153c09795f8f4852f6cc8a/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f537562706978656c526567697374726174696f6e5f302e372e737667" alt="SubpixelRegistration" data-canonical-src="http://pkg.julialang.org/badges/SubpixelRegistration_0.7.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/romainFr/SubpixelRegistration.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/06b133bf2c3329eb5e589793cd889b7c3f1cf6a01636abbe9fbc2465ffc21b03/68747470733a2f2f7472617669732d63692e6f72672f726f6d61696e46722f537562706978656c526567697374726174696f6e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/romainFr/SubpixelRegistration.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://romainFr.github.io/SubpixelRegistration.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>Algorithm modified from the <a href="http://www.mathworks.com/matlabcentral/fileexchange/18401-efficient-subpixel-image-registration-by-cross-correlation" rel="nofollow">Matlab code</a> accompanying
<a href="http://www.opticsinfobase.org/ol/fulltext.cfm?uri=ol-33-2-156&amp;id=148843" rel="nofollow">Manuel Guizar-Sicairos, Samuel T. Thurman, and James R. Fienup, "Efficient subpixel image registration algorithms," Opt. Lett. 33, 156-158 (2008)</a> . This implementation allows to register arrays of arbitrary dimensions (not just 2d). Functions are written for <code>AbstractArray</code>s and should work for <code>Image</code>s.</p>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using SubpixelRegistration

## Building a simple 4d array
julia&gt; test4d = zeros(40,40,20,2)

julia&gt; test4d[10:20,10:20,2:10,1] = 1
julia&gt; test4d[5:15,15:25,5:13,2] = 1

## By using larger ufac one gets to higher subpixel resolution
julia&gt; dftResults = stackDftReg(test4d,ufac=1)
2-element Array{Any,1}:
 Dict{ASCIIString,Any}(&quot;error&quot;=&gt;4.440892098500626e-16,&quot;shift&quot;=&gt;[0.0,0.0,0.0])
 Dict{ASCIIString,Any}(&quot;error&quot;=&gt;0.0,&quot;shift&quot;=&gt;[5.0,-5.0,-3.0])

## The array can theb be realigned from this dictionary
julia&gt; back4d = alignFromDict(test4d,dftResults)


"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SubpixelRegistration

<span class="pl-c"><span class="pl-c">#</span># Building a simple 4d array</span>
julia<span class="pl-k">&gt;</span> test4d <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(<span class="pl-c1">40</span>,<span class="pl-c1">40</span>,<span class="pl-c1">20</span>,<span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> test4d[<span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">20</span>,<span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">20</span>,<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">10</span>,<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">1</span>
julia<span class="pl-k">&gt;</span> test4d[<span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">15</span>,<span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-c1">25</span>,<span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">13</span>,<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">1</span>

<span class="pl-c"><span class="pl-c">#</span># By using larger ufac one gets to higher subpixel resolution</span>
julia<span class="pl-k">&gt;</span> dftResults <span class="pl-k">=</span> <span class="pl-c1">stackDftReg</span>(test4d,ufac<span class="pl-k">=</span><span class="pl-c1">1</span>)
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{Any,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Dict</span><span class="pl-c1">{ASCIIString,Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">4.440892098500626e-16</span>,<span class="pl-s"><span class="pl-pds">"</span>shift<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>[<span class="pl-c1">0.0</span>,<span class="pl-c1">0.0</span>,<span class="pl-c1">0.0</span>])
 <span class="pl-c1">Dict</span><span class="pl-c1">{ASCIIString,Any}</span>(<span class="pl-s"><span class="pl-pds">"</span>error<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">0.0</span>,<span class="pl-s"><span class="pl-pds">"</span>shift<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span>[<span class="pl-c1">5.0</span>,<span class="pl-k">-</span><span class="pl-c1">5.0</span>,<span class="pl-k">-</span><span class="pl-c1">3.0</span>])

<span class="pl-c"><span class="pl-c">#</span># The array can theb be realigned from this dictionary</span>
julia<span class="pl-k">&gt;</span> back4d <span class="pl-k">=</span> <span class="pl-c1">alignFromDict</span>(test4d,dftResults)

</pre></div>
</article></div>