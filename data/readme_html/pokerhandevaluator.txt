<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-pokerhandevaluatorjl" class="anchor" aria-hidden="true" href="#pokerhandevaluatorjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>PokerHandEvaluator.jl</h1>
<table>
<thead>
<tr>
<th align="right"></th>
<th align="left"></th>
</tr>
</thead>
<tbody>
<tr>
<td align="right"><strong>Docs Build</strong></td>
<td align="left"><a href="https://github.com/charleskawczynski/PokerHandEvaluator.jl/actions?query=workflow%3ADocumentation"><img src="https://github.com/charleskawczynski/PokerHandEvaluator.jl/workflows/Documentation/badge.svg" alt="docs build" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>Documentation</strong></td>
<td align="left"><a href="https://charleskawczynski.github.io/PokerHandEvaluator.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>GHA CI</strong></td>
<td align="left"><a href="https://github.com/charleskawczynski/PokerHandEvaluator.jl/actions?query=workflow%3Aci"><img src="https://github.com/charleskawczynski/PokerHandEvaluator.jl/workflows/ci/badge.svg" alt="gha ci" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>Code Coverage</strong></td>
<td align="left"><a href="https://codecov.io/gh/charleskawczynski/PokerHandEvaluator.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fb0a5c21f160b887221bc91779c10ff5ec7533df1296f95291c7959295015e3e/68747470733a2f2f636f6465636f762e696f2f67682f636861726c65736b6177637a796e736b692f506f6b657248616e644576616c7561746f722e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/charleskawczynski/PokerHandEvaluator.jl/branch/main/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>Bors enabled</strong></td>
<td align="left"><a href="https://app.bors.tech/repositories/32815" rel="nofollow"><img src="https://camo.githubusercontent.com/0974fbc63eeb2ed86d518ed0afaafe112e9e907ffa1c459396b0be2434c4f83b/68747470733a2f2f626f72732e746563682f696d616765732f62616467655f736d616c6c2e737667" alt="bors" data-canonical-src="https://bors.tech/images/badge_small.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>A package for evaluating poker hands.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt;]
(v1.x) pkg&gt; add PokerHandEvaluator
"><pre lang="@repl"><code>julia&gt;]
(v1.x) pkg&gt; add PokerHandEvaluator
</code></pre></div>
<h2><a id="user-content-functionality" class="anchor" aria-hidden="true" href="#functionality"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Functionality</h2>
<p>PokerHandEvaluator.jl can be used to determine which player wins in a game of poker. PokerHandEvaluator.jl exports two types:</p>
<ul>
<li><code>CompactHandEval</code>: a compact hand evaluation with limited properties and getter-methods defined:
<ul>
<li><code>hand_rank</code></li>
<li><code>hand_type</code></li>
</ul>
</li>
<li><code>FullHandEval</code>: a comprehensive hand evaluation with more properties and additional methods defined:
<ul>
<li><code>hand_rank</code></li>
<li><code>hand_type</code></li>
<li><code>best_cards</code></li>
<li><code>all_cards</code></li>
</ul>
</li>
</ul>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using PlayingCards, PokerHandEvaluator
table_cards = (J♡,J♣,2♣,3♢,5♣)
player_cards = (
  (A♠,2♠,table_cards...),
  (J♠,T♣,table_cards...),
);
fhe = FullHandEval.(player_cards);
winner_id = argmin(hand_rank.(fhe)) # = 2
winning_hand = hand_type(fhe[winner_id]) # = Trips()
winning_rank = hand_rank(fhe[winner_id]) # = 1842
winning_cards = best_cards(fhe[winner_id]) # = (J♠, T♣, J♡, J♣, 5♣)
allcards = all_cards(fhe[winner_id]) # = (J♠, T♣, J♡, J♣, 2♣, 3♢, 5♣)
"><pre><span class="pl-k">using</span> PlayingCards, PokerHandEvaluator
table_cards <span class="pl-k">=</span> (J♡,J♣,<span class="pl-c1">2</span>♣,<span class="pl-c1">3</span>♢,<span class="pl-c1">5</span>♣)
player_cards <span class="pl-k">=</span> (
  (A♠,<span class="pl-c1">2</span>♠,table_cards<span class="pl-k">...</span>),
  (J♠,T♣,table_cards<span class="pl-k">...</span>),
);
fhe <span class="pl-k">=</span> <span class="pl-c1">FullHandEval</span>.(player_cards);
winner_id <span class="pl-k">=</span> <span class="pl-c1">argmin</span>(<span class="pl-c1">hand_rank</span>.(fhe)) <span class="pl-c"><span class="pl-c">#</span> = 2</span>
winning_hand <span class="pl-k">=</span> <span class="pl-c1">hand_type</span>(fhe[winner_id]) <span class="pl-c"><span class="pl-c">#</span> = Trips()</span>
winning_rank <span class="pl-k">=</span> <span class="pl-c1">hand_rank</span>(fhe[winner_id]) <span class="pl-c"><span class="pl-c">#</span> = 1842</span>
winning_cards <span class="pl-k">=</span> <span class="pl-c1">best_cards</span>(fhe[winner_id]) <span class="pl-c"><span class="pl-c">#</span> = (J♠, T♣, J♡, J♣, 5♣)</span>
allcards <span class="pl-k">=</span> <span class="pl-c1">all_cards</span>(fhe[winner_id]) <span class="pl-c"><span class="pl-c">#</span> = (J♠, T♣, J♡, J♣, 2♣, 3♢, 5♣)</span></pre></div>
<h2><a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Performance</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using PokerHandEvaluator

julia&gt; phe_dir = dirname(dirname(pathof(PokerHandEvaluator)));

julia&gt; include(joinpath(phe_dir, &quot;perf.jl&quot;)) # compile first
Δt_per_hand_eval = 1.4598465e-5

julia&gt; include(joinpath(phe_dir, &quot;perf.jl&quot;))
Δt_per_hand_eval = 1.082814e-6
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PokerHandEvaluator

julia<span class="pl-k">&gt;</span> phe_dir <span class="pl-k">=</span> <span class="pl-c1">dirname</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">pathof</span>(PokerHandEvaluator)));

julia<span class="pl-k">&gt;</span> <span class="pl-c1">include</span>(<span class="pl-c1">joinpath</span>(phe_dir, <span class="pl-s"><span class="pl-pds">"</span>perf.jl<span class="pl-pds">"</span></span>)) <span class="pl-c"><span class="pl-c">#</span> compile first</span>
Δt_per_hand_eval <span class="pl-k">=</span> <span class="pl-c1">1.4598465e-5</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">include</span>(<span class="pl-c1">joinpath</span>(phe_dir, <span class="pl-s"><span class="pl-pds">"</span>perf.jl<span class="pl-pds">"</span></span>))
Δt_per_hand_eval <span class="pl-k">=</span> <span class="pl-c1">1.082814e-6</span></pre></div>
</article></div>