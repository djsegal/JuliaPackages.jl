<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-fdesolverjl-solving-fractional-differential-equations" class="anchor" aria-hidden="true" href="#fdesolverjl-solving-fractional-differential-equations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FdeSolver.jl: Solving fractional differential equations</h1>
<p dir="auto"><a href="https://juliaturkudatascience.github.io/FdeSolver.jl/stable/readme/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaTurkuDataScience/FdeSolver.jl/actions/workflows/CI.yml"><img src="https://github.com/JuliaTurkuDataScience/FdeSolver.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaTurkuDataScience/FdeSolver.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3931d3ad91eefbb77429e914adf40d9aa5421d49e099ef5681e8bb70f8e8a50a/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69615475726b7544617461536369656e63652f466465536f6c7665722e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d534a3546365251333150" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaTurkuDataScience/FdeSolver.jl/branch/main/graph/badge.svg?token=SJ5F6RQ31P" style="max-width: 100%;"></a>
<a href="https://doi.org/10.5281/zenodo.7462094" rel="nofollow"><img src="https://camo.githubusercontent.com/962367e7f9ae7092ca4998626c52a6c33bff74df52acdc3675a1dd31db061d47/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e373436323039342e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.7462094.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This is a <strong>Julia</strong> package for fractional differential equations and ODEs. It provides numerical solutions for nonlinear fractional ordinary differential equations (in the sense of Caputo).</p>
<p dir="auto">Related work includes the independent <a href="https://github.com/SciFracX/FractionalDiffEq.jl">FractionalDiffEq</a> Julia Package that provides solutions of differential equations with different fractional operators, and earlier tools that are available in <a href="https://www.dm.uniba.it/members/garrappa/software" rel="nofollow">Matlab</a>.</p>
<h2 dir="auto"><a id="user-content-publications" class="anchor" aria-hidden="true" href="#publications"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Publications</h2>
<p dir="auto">The package development is linked with the following publications/preprints:</p>
<ul dir="auto">
<li>
<p dir="auto">Three-species Lotka-Volterra model with respect to Caputo and Caputo-Fabrizio fractional operators. M Khalighi, L Eftekhari, S Hosseinpour, L Lahti. Symmetry 13 (3):368, 2021. <a href="https://doi.org/10.3390/sym13030368" rel="nofollow">doi:10.3390/sym13030368</a></p>
</li>
<li>
<p dir="auto">Quantifying the impact of ecological memory on the dynamics of interacting communities. M Khalighi, G Sommeria-Klein, D Gonze, K Faust, L Lahti. bioRxiv 2021.09.01.458486 <a href="https://doi.org/10.1101/2021.09.01.458486" rel="nofollow">doi:10.1101/2021.09.01.458486</a></p>
</li>
</ul>
<h2 dir="auto"><a id="user-content-method" class="anchor" aria-hidden="true" href="#method"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Method</h2>
<p dir="auto">We implement the <a href="https://link.springer.com/article/10.1023/A:1016592219341" rel="nofollow">predictor-corrector</a> algorithms with a sufficient <a href="https://link.springer.com/article/10.1023/B:NUMA.0000027736.85078.be" rel="nofollow">convergence and accuracy</a>, including fast Fourier transform technique that gives us high computation speed. Interested readers can also find the <a href="https://www.tandfonline.com/doi/full/10.1080/00207160802624331" rel="nofollow">stability</a> of the methods and see how to implement the methods for solving <a href="https://link.springer.com/article/10.1007/s00607-003-0033-3" rel="nofollow">multi-term</a> fractional differential equations.</p>
<p dir="auto">Let us suppose the following initial value problem with the Caputo fractional derivative for  <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="e16ee5e9ac39e336fa0362d364f5cf29">$\beta&amp;gt;0$</math-renderer>:</p>
<math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="e16ee5e9ac39e336fa0362d364f5cf29">$${}_{C}\!D_{t_0}^{\beta}y(t)=f(t,y(t))$$</math-renderer>
<p dir="auto">with the initial condition:</p>
<math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="e16ee5e9ac39e336fa0362d364f5cf29">$$y(t_0)=y_0,y^{(1)}(t_0)=y^{(1)}_0,...,y^{(m-1)}(t_0)=y^{(m-1)}_0$$</math-renderer>
<p dir="auto">where m is the smallest integer or equal to the order of derivative.</p>
<p dir="auto">We solve the problem by using <a href="https://www.mdpi.com/2227-7390/6/2/16#" rel="nofollow">predictor corrector and Newton Raphson method</a>.</p>
<h2 dir="auto">
<a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">If Julia is installed correctly, you can import FdeSolver.jl as:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import Pkg; Pkg.add(&quot;FdeSolver&quot;)"><pre><span class="pl-k">import</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>FdeSolver<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">A few methods on its usage are explained in <a href="https://juliaturkudatascience.github.io/FdeSolver.jl/stable/examples/" rel="nofollow">Examples</a>.</p>
</article></div>