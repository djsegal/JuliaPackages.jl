<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p>This package has been deprecated in favour of <a href="https://github.com/Keno/Polynomials.jl">https://github.com/Keno/Polynomials.jl</a> (which started out as a fork of this package with the coefficient order reversed)</p>
<h1><a id="user-content-polynomial" class="anchor" aria-hidden="true" href="#polynomial"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Polynomial</h1>
<p>Basic arithmetic, integration, differentiation, evaluation, and root finding over dense polynomials.</p>
<p><a href="https://travis-ci.org/vtjnash/Polynomial.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9c8384c8e4537b160dad32a41bf104c92742759d/68747470733a2f2f7472617669732d63692e6f72672f76746a6e6173682f506f6c796e6f6d69616c2e6a6c2e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/vtjnash/Polynomial.jl.png?branch=master" style="max-width:100%;"></a></p>
<h4><a id="user-content-polytnumberavector" class="anchor" aria-hidden="true" href="#polytnumberavector"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Poly{T&lt;:Number}(a::Vector)</h4>
<p>Construct a polynomial from its coefficients, highest order first.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Poly</span>([<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>])
<span class="pl-c1">Poly</span>(<span class="pl-c1">1</span>x<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">3</span>x<span class="pl-k">^</span><span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">4</span>)</pre></div>
<p>Leading zeros are stripped.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Poly</span>([<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>])
<span class="pl-c1">Poly</span>(<span class="pl-c1">1</span>x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">2</span>x<span class="pl-k">^</span><span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">3</span>)</pre></div>
<p>An optional variable parameter can be added.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Poly</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], <span class="pl-s"><span class="pl-pds">'</span>s<span class="pl-pds">'</span></span>)
<span class="pl-c1">Poly</span>(s<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">2</span> s <span class="pl-k">+</span> <span class="pl-c1">3</span>)</pre></div>
<h4><a id="user-content-polyrabstractvector" class="anchor" aria-hidden="true" href="#polyrabstractvector"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>poly(r::AbstractVector)</h4>
<p>Construct a polynomial from its roots. This is in contrast to the <code>Poly</code> constructor, which constructs a polynomial from its coefficients.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">//</span> Represents (x <span class="pl-k">-</span> <span class="pl-c1">1</span>)<span class="pl-k">*</span>(x<span class="pl-k">-</span><span class="pl-c1">2</span>)<span class="pl-k">*</span>(x<span class="pl-k">-</span><span class="pl-c1">3</span>)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">poly</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>])
<span class="pl-c1">Poly</span>(<span class="pl-c1">1</span>x<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">6</span>x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">11</span>x<span class="pl-k">^</span><span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">6</span>)</pre></div>
<h4><a id="user-content------" class="anchor" aria-hidden="true" href="#-----"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>+, -, *, /, ==</h4>
<p>The usual arithmetic operators are overloaded to work on polynomials, and combinations of polynomials and scalars.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">Poly</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>])
<span class="pl-c1">Poly</span>(<span class="pl-c1">1</span>x<span class="pl-k">^</span><span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">Poly</span>([<span class="pl-c1">1</span>, <span class="pl-c1">0</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>])
<span class="pl-c1">Poly</span>(<span class="pl-c1">1</span>x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">2</span><span class="pl-k">*</span>a
<span class="pl-c1">Poly</span>(<span class="pl-c1">2</span>x<span class="pl-k">^</span><span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">4</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">2</span> <span class="pl-k">+</span> a
<span class="pl-c1">Poly</span>(<span class="pl-c1">1</span>x<span class="pl-k">^</span><span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">4</span>)

julia<span class="pl-k">&gt;</span> a <span class="pl-k">-</span> b
<span class="pl-c1">Poly</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>x<span class="pl-k">^</span><span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">3</span>)

julia<span class="pl-k">&gt;</span> a<span class="pl-k">*</span>b
<span class="pl-c1">Poly</span>(<span class="pl-c1">1</span>x<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">2</span>x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">1</span>x<span class="pl-k">^</span><span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> b<span class="pl-k">/</span><span class="pl-c1">2</span>
<span class="pl-c1">Poly</span>(<span class="pl-c1">0.5</span>x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">0.5</span>)</pre></div>
<p>Note that operations involving polynomials with different variables will error.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">Poly</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], <span class="pl-s"><span class="pl-pds">'</span>x<span class="pl-pds">'</span></span>);
julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">Poly</span>([<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>], <span class="pl-s"><span class="pl-pds">'</span>s<span class="pl-pds">'</span></span>);
julia<span class="pl-k">&gt;</span> a <span class="pl-k">+</span> b
ERROR<span class="pl-k">:</span> Polynomials must have same variable.</pre></div>
<h4><a id="user-content-polyvalppoly-xnumber" class="anchor" aria-hidden="true" href="#polyvalppoly-xnumber"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>polyval(p::Poly, x::Number)</h4>
<p>Evaluate the polynomial <code>p</code> at <code>x</code>.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">polyval</span>(<span class="pl-c1">Poly</span>([<span class="pl-c1">1</span>, <span class="pl-c1">0</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>]), <span class="pl-c1">0.1</span>)
<span class="pl-k">-</span><span class="pl-c1">0.99</span></pre></div>
<h4><a id="user-content-polyintppoly-knumber0" class="anchor" aria-hidden="true" href="#polyintppoly-knumber0"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>polyint(p::Poly, k::Number=0)</h4>
<p>Integrate the polynomial <code>p</code> term by term, optionally adding constant term <code>k</code>. The order of the resulting polynomial is one higher than the order of <code>p</code>.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">polyint</span>(<span class="pl-c1">Poly</span>([<span class="pl-c1">1</span>, <span class="pl-c1">0</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>]))
<span class="pl-c1">Poly</span>(<span class="pl-c1">0.3333333333333333</span>x<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">1.0</span>x<span class="pl-k">^</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">polyint</span>(<span class="pl-c1">Poly</span>([<span class="pl-c1">1</span>, <span class="pl-c1">0</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>]), <span class="pl-c1">2</span>)
<span class="pl-c1">Poly</span>(<span class="pl-c1">0.3333333333333333</span>x<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-k">-</span><span class="pl-c1">1.0</span>x<span class="pl-k">^</span><span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">2.0</span>)</pre></div>
<h4><a id="user-content-polyderppoly" class="anchor" aria-hidden="true" href="#polyderppoly"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>polyder(p::Poly)</h4>
<p>Differentiate the polynomial <code>p</code> term by term. The order of the resulting polynomial is one lower than the order of <code>p</code>.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">polyder</span>(<span class="pl-c1">Poly</span>([<span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>]))
<span class="pl-c1">Poly</span>(<span class="pl-c1">2</span>x<span class="pl-k">^</span><span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">3</span>)</pre></div>
<h4><a id="user-content-rootsppoly" class="anchor" aria-hidden="true" href="#rootsppoly"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>roots(p::Poly)</h4>
<p>Return the roots (zeros) of <code>p</code>, with multiplicity. The number of roots returned is equal to the order of <code>p</code>. The returned roots may be real or complex.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">roots</span>(<span class="pl-c1">Poly</span>([<span class="pl-c1">1</span>, <span class="pl-c1">0</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>]))
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">1.0</span>
  <span class="pl-c1">1.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">roots</span>(<span class="pl-c1">Poly</span>([<span class="pl-c1">1</span>, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>]))
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{Complex{Float64},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0.0</span><span class="pl-k">-</span><span class="pl-c1">1.0im</span>
 <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">1.0im</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">roots</span>(<span class="pl-c1">Poly</span>([<span class="pl-c1">1</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>]))
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{Float64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0.0</span>
 <span class="pl-c1">0.0</span></pre></div>
</article></div>