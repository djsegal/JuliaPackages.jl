<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-core" class="anchor" aria-hidden="true" href="#core"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a target="_blank" rel="noopener noreferrer" href="NeXL_sm.png"><img src="NeXL_sm.png" alt="NeXL Logo" style="max-width: 100%;"></a>Core</h1>
<h2 dir="auto"><a id="user-content-core-x-ray-microanalysis-data-and-algorithms" class="anchor" aria-hidden="true" href="#core-x-ray-microanalysis-data-and-algorithms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Core X-ray Microanalysis Data and Algorithms</h2>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://pages.nist.gov/NeXLCore.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://travis-ci.com/usnistgov/NeXLCore.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/38bccae332422f72ac02f8bba6a58a1c6b289c0dc03b1f558119dbebacc5bffa/68747470733a2f2f7472617669732d63692e636f6d2f75736e697374676f762f4e65584c436f72652e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.com/usnistgov/NeXLCore.jl.svg?branch=master" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h4 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h4>
<p dir="auto">Install NeXLCore using the Julia package manager</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="&gt; ]add NeXLCore"><pre class="notranslate"><code>&gt; ]add NeXLCore
</code></pre></div>
<p dir="auto">or</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="&gt; using Pkg
&gt; Pkg.add(&quot;NeXLCore&quot;)"><pre class="notranslate"><code>&gt; using Pkg
&gt; Pkg.add("NeXLCore")
</code></pre></div>
<p dir="auto">While you're at it, you might as well also add DataFrames and Gadfly, two libraries that you'll probably also want...</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="&gt; ]add DataFrames, Gadfly"><pre class="notranslate"><code>&gt; ]add DataFrames, Gadfly
</code></pre></div>
<p dir="auto">or</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="&gt; Pkg.add([&quot;DataFrames&quot;, &quot;Gadfly&quot;])"><pre class="notranslate"><code>&gt; Pkg.add(["DataFrames", "Gadfly"])
</code></pre></div>
<p dir="auto">NeXLCore is part of the NeXL collection of Julia language packages.</p>
<h4 dir="auto"><a id="user-content-released" class="anchor" aria-hidden="true" href="#released"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Released</h4>
<ul dir="auto">
<li><a href="https://github.com/usnistgov/NeXLUncertainties.jl">NeXLUncertainties</a> - Basic data structures and algorithms for single uncertain values and collects of related uncertain values</li>
<li><a href="https://github.com/usnistgov/NeXLCore.jl">NeXLCore</a> - Core data and algorithms for X-ray microanalysis (elements, shells, transitions and their properties)</li>
<li><a href="https://github.com/usnistgov/NeXLSpectrum.jl">NeXLSpectrum</a> - Data structures and algorithms for EDS spectrum and hyperspectral data (reading/writing/fitting/etc.)</li>
<li><a href="https://github.com/usnistgov/NeXLMatrixCorrection.jl">NeXLMatrixCorrection</a> - Data structures and algorithms for matrix correction of electron excited X-ray k-ratios</li>
</ul>
<h4 dir="auto"><a id="user-content-under-rapid-development-but-largely-functional-pre-α" class="anchor" aria-hidden="true" href="#under-rapid-development-but-largely-functional-pre-α"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Under rapid development but largely functional (pre-α)</h4>
<ul dir="auto">
<li><a href="https://github.com/usnistgov/NeXLDatabase.jl">NeXLDatabase</a> - A database for handling NeXL library datatypes</li>
<li><a href="https://github.com/usnistgov/NeXLParticle.jl">NeXLParticle</a> - Data structures and algorithms for dealing with particle data (particularly ASPEX Zeppelin datasets)</li>
</ul>
<h3 dir="auto"><a id="user-content-standards-in-nexl" class="anchor" aria-hidden="true" href="#standards-in-nexl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Standards in NeXL</h3>
<p dir="auto">To reduce ambiguity, the following X-ray microanalysis-standard units are used by all packages even when there are more common or accessible units for a quantity.  Thus stage position is in cm (not mm), coating thicknesses are in cm (not nm), etc.  This means you never need to consult the documentation to know what units a function expects.</p>
<ul dir="auto">
<li>Mass is measured in grams (g)</li>
<li>Length is measured in centimeters (cm)</li>
<li>Time is measured in seconds (s)</li>
<li>Energy is measured in electron-volts (eV)</li>
<li>Pressure is measured in Pascal (p)</li>
<li>Mixed units are expressed in combinations of these units (MACS are in cm<sup>2</sup>/g)</li>
</ul>
<p dir="auto">NeXLCore implements a <code>@n_str</code> macro to parse Element, SubShell and Transition objects at compile time.  The <code>n"???"</code> notation is used throughout NeXL.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="n&quot;Fe&quot; # constructs an Element representing iron
n&quot;L3&quot; # constructs a SubShell object representing an L3 shell (not element specific)
      # Note: The ambiguiuty between potassium K and shell K is handled by calling the shell n&quot;K1&quot;
n&quot;Fe L3&quot; # constructs an AtomicSubShell representing the iron L3 sub-shell.
n&quot;L3-M5&quot; # constructs a Transition representing the L3-M5 transition (not element specific)
n&quot;Fe L3-M5&quot; # Constructs a CharXRay representing the L3-M5 transition in iron."><pre><span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>Fe<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> constructs an Element representing iron</span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>L3<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> constructs a SubShell object representing an L3 shell (not element specific)</span>
      <span class="pl-c"><span class="pl-c">#</span> Note: The ambiguiuty between potassium K and shell K is handled by calling the shell n"K1"</span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>Fe L3<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> constructs an AtomicSubShell representing the iron L3 sub-shell.</span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>L3-M5<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> constructs a Transition representing the L3-M5 transition (not element specific)</span>
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>Fe L3-M5<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> Constructs a CharXRay representing the L3-M5 transition in iron.</span></pre></div>
<p dir="auto">To access the characteristic energies associated with these items, use the function <code>energy(...)</code> which returns eV.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="energy(n&quot;Fe K&quot;) # 7112.0
energy(n&quot;Fe K-L3&quot;) # 6403.9"><pre><span class="pl-c1">energy</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>Fe K<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> 7112.0</span>
<span class="pl-c1">energy</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>Fe K-L3<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> 6403.9</span></pre></div>
<p dir="auto">NeXL uses <a href="https://github.com/JuliaPhysics/PeriodicTable.jl">https://github.com/JuliaPhysics/PeriodicTable.jl</a> for elemental data.</p>
<p dir="auto">NeXLCore also implements many generally useful X-ray and electron physics algorithms including Bremstrahlung generation, Bethe energy loss, mean-ionization potential, elastic scattering cross-sections and others.</p>
<p dir="auto">NeXL implements spectrum file support in the <code>NeXLSpectrum</code> package including spectrum file input/output.  Various different X-ray microanalysis related file types are recognise by a combination of file extension and file content and can be read using code like</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using FileIO
using NeXLSpectrum
spec = loadspectrum(&quot;~/home/data/spectrum.msa&quot;) # To read an EMSA spectrum"><pre><span class="pl-k">using</span> FileIO
<span class="pl-k">using</span> NeXLSpectrum
spec <span class="pl-k">=</span> <span class="pl-c1">loadspectrum</span>(<span class="pl-s"><span class="pl-pds">"</span>~/home/data/spectrum.msa<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> To read an EMSA spectrum</span></pre></div>
<p dir="auto">NeXL uses Gadfly (<a href="https://github.com/GiovineItalia/Gadfly.jl">https://github.com/GiovineItalia/Gadfly.jl</a>) to plot data items.  However, the Gadfly support is not loaded unless/until the user <code>using Gadfly</code> elsewhere in their code.  Thus Gadfly support is lightweight and doesn't hinder those who don't want to use it.  However, NeXL implements different specializations of the <code>Gadfly.plot(...)</code> method to handle NeXL-related data types.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Gadfly
plot([ n&quot;K-L3&quot;, n&quot;L3-M5&quot; ]) # plots the edge-energies associated with these shells over the range of supported elements"><pre><span class="pl-k">using</span> Gadfly
<span class="pl-c1">plot</span>([ <span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>K-L3<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>L3-M5<span class="pl-pds">"</span></span> ]) <span class="pl-c"><span class="pl-c">#</span> plots the edge-energies associated with these shells over the range of supported elements</span></pre></div>
<p dir="auto">or (when <code>using NeXLSpectrum</code>)</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Gadfly
plot(spec,klms=[n&quot;Fe&quot;,n&quot;Si&quot;,n&quot;O&quot;,n&quot;Al&quot;])#  To plot a spectrum with KLM lines.
plot([spec1,spec2,spec3],klms=[n&quot;Fe&quot;,n&quot;Si&quot;,n&quot;O&quot;,n&quot;Al&quot;]) #  To plot a list of spectra with KLM lines."><pre><span class="pl-k">using</span> Gadfly
<span class="pl-c1">plot</span>(spec,klms<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>Fe<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>Si<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>O<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>Al<span class="pl-pds">"</span></span>])<span class="pl-c"><span class="pl-c">#</span>  To plot a spectrum with KLM lines.</span>
<span class="pl-c1">plot</span>([spec1,spec2,spec3],klms<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>Fe<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>Si<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>O<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds"><span class="pl-c1">n</span>"</span>Al<span class="pl-pds">"</span></span>]) <span class="pl-c"><span class="pl-c">#</span>  To plot a list of spectra with KLM lines.</span></pre></div>
<p dir="auto">NeXL uses <code>DataFrames</code> to tabulate data.  To convert an object or list of objects to a <code>DataFrame</code> use <code>asa(DataFrame,item)</code>.</p>
</article></div>