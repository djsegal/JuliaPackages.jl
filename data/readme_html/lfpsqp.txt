<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-lfpsqpjl" class="anchor" aria-hidden="true" href="#lfpsqpjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LFPSQP.jl</h1>
<p dir="auto">Julia implementation of <strong>L</strong>ocally <strong>F</strong>easibly <strong>P</strong>rojected <strong>S</strong>equential <strong>Q</strong>uadratic <strong>P</strong>rogramming</p>
<p dir="auto">Performs feasible nonlinear constrained optimization (i.e., every iterate satisfies the proposed constraints) on problems of the form:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/88445367c564de955526c8c0cc49dfc7f5321db677a4565ba9e8a21d32603657/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f253543626567696e2537426172726179253744253742726c253744253230253543646973706c61797374796c652532302535436d696e5f2537422535436d617468626625323078253230253543696e2532302535436d6174686262253230522535456e253744253230253236253230662532382535436d6174686266253230782532392532302535432535432532302535436d617468726d253742732e742e2537442532302532362532302535436d6174686266253230632532382535436d6174686266253230782532392532302533442532302535436d6174686266253230302532302535432535432532302532362532302535436d6174686266253230642535456c2532302535436c65712532302535436d6174686266253230642532382535436d6174686266253230782532392532302535436c65712532302535436d617468626625323064253545752532302535432535432532302532362532302535436d6174686266253230782535456c2532302535436c65712532302535436d6174686266253230782532302535436c65712532302535436d61746862662532307825354575253230253543656e642537426172726179253744"><img src="https://camo.githubusercontent.com/88445367c564de955526c8c0cc49dfc7f5321db677a4565ba9e8a21d32603657/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f253543626567696e2537426172726179253744253742726c253744253230253543646973706c61797374796c652532302535436d696e5f2537422535436d617468626625323078253230253543696e2532302535436d6174686262253230522535456e253744253230253236253230662532382535436d6174686266253230782532392532302535432535432532302535436d617468726d253742732e742e2537442532302532362532302535436d6174686266253230632532382535436d6174686266253230782532392532302533442532302535436d6174686266253230302532302535432535432532302532362532302535436d6174686266253230642535456c2532302535436c65712532302535436d6174686266253230642532382535436d6174686266253230782532392532302535436c65712532302535436d617468626625323064253545752532302535432535432532302532362532302535436d6174686266253230782535456c2532302535436c65712532302535436d6174686266253230782532302535436c65712532302535436d61746862662532307825354575253230253543656e642537426172726179253744" alt="optimization_problem" data-canonical-src="https://latex.codecogs.com/svg.latex?%5Cbegin%7Barray%7D%7Brl%7D%20%5Cdisplaystyle%20%5Cmin_%7B%5Cmathbf%20x%20%5Cin%20%5Cmathbb%20R%5En%7D%20%26%20f%28%5Cmathbf%20x%29%20%5C%5C%20%5Cmathrm%7Bs.t.%7D%20%26%20%5Cmathbf%20c%28%5Cmathbf%20x%29%20%3D%20%5Cmathbf%200%20%5C%5C%20%26%20%5Cmathbf%20d%5El%20%5Cleq%20%5Cmathbf%20d%28%5Cmathbf%20x%29%20%5Cleq%20%5Cmathbf%20d%5Eu%20%5C%5C%20%26%20%5Cmathbf%20x%5El%20%5Cleq%20%5Cmathbf%20x%20%5Cleq%20%5Cmathbf%20x%5Eu%20%5Cend%7Barray%7D" style="max-width: 100%;"></a></p>
<p dir="auto">where <em>f</em> is the objective function, <strong>c</strong> are equality constraints, <strong>d</strong> are inequality constraints with lower and upper bounds of <strong>d</strong><sup>l</sup> and <strong>d</strong><sup>u</sup>, and <strong>x</strong><sup>l</sup> and <strong>x</strong><sup>u</sup> are box constraints.</p>
<p dir="auto">Please cite as:<br>
K.S. Silmore and J.W. Swan, Locally Feasibly Projected Sequential Quadratic Programming for Nonlinear Programming on Arbitrary Smooth Constraint Manifolds, <a href="https://arxiv.org/abs/2111.03236" rel="nofollow">ArXiv:2111.03236 [math.OC]</a> (2021).</p>
<h1 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h1>
<h2 dir="auto"><a id="user-content-unconstrained" class="anchor" aria-hidden="true" href="#unconstrained"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Unconstrained</h2>
<p dir="auto">Let's optimize the classic Rosenbrock function:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="f = x -&gt; (1 - x[1])^2 + 100*(x[2] - x[1]^2)^2

x0 = [0.0, 0.0]

x, obj_values, λ_kkt, term_info = optimize(f, x0)"><pre>f <span class="pl-k">=</span> x <span class="pl-k">-&gt;</span> (<span class="pl-c1">1</span> <span class="pl-k">-</span> x[<span class="pl-c1">1</span>])<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">100</span><span class="pl-k">*</span>(x[<span class="pl-c1">2</span>] <span class="pl-k">-</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>

x0 <span class="pl-k">=</span> [<span class="pl-c1">0.0</span>, <span class="pl-c1">0.0</span>]

x, obj_values, λ_kkt, term_info <span class="pl-k">=</span> <span class="pl-c1">optimize</span>(f, x0)</pre></div>
<p dir="auto">Here, <code>x</code> is the final value of the variables, <code>obj_values</code> is a vector of objective function values at each iterate (including the initial one), <code>λ_kkt</code> is a vector of Lagrange multipliers (here an empty vector), and <code>term_info</code> is a struct that summarizes the optimization procedure. For example,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="term_info"><pre>term_info</pre></div>
<p dir="auto">produces</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="TerminationInfo:
condition = f_tol
       Δf = 1.0898882046786806e-7
   ||Δx|| = 0.0007384068067118611
||P(∇f)|| = 4.332627751789361e-5
    iters = 17"><pre class="notranslate"><code>TerminationInfo:
condition = f_tol
       Δf = 1.0898882046786806e-7
   ||Δx|| = 0.0007384068067118611
||P(∇f)|| = 4.332627751789361e-5
    iters = 17
</code></pre></div>
<p dir="auto">where <code>condition</code> is the termination criterion (here the change in objective function value was smaller than the default tolerance), <code>Δf</code> is the change in objective function value at the last iteration, <code>||Δx||</code> is the 2-norm of increment of the variables at the last iteration, <code>||P(∇f)||</code> is the 2-norm of the final objective function gradient, and <code>iters</code> is the total number of (outer) iterations taken.</p>
<h2 dir="auto"><a id="user-content-equality-constrained" class="anchor" aria-hidden="true" href="#equality-constrained"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Equality constrained</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="n = 50     # number of variables
m = 1      # number of constraints

f = x -&gt; dot(x, x)

function c!(cval, x)
    cval[1] = x[1] - 0.75
end

x0 = ones(n)

x, obj_values, λ_kkt, term_info = optimize(f, c!, x0, m)"><pre>n <span class="pl-k">=</span> <span class="pl-c1">50</span>     <span class="pl-c"><span class="pl-c">#</span> number of variables</span>
m <span class="pl-k">=</span> <span class="pl-c1">1</span>      <span class="pl-c"><span class="pl-c">#</span> number of constraints</span>

f <span class="pl-k">=</span> x <span class="pl-k">-&gt;</span> <span class="pl-c1">dot</span>(x, x)

<span class="pl-k">function</span> <span class="pl-en">c!</span>(cval, x)
    cval[<span class="pl-c1">1</span>] <span class="pl-k">=</span> x[<span class="pl-c1">1</span>] <span class="pl-k">-</span> <span class="pl-c1">0.75</span>
<span class="pl-k">end</span>

x0 <span class="pl-k">=</span> <span class="pl-c1">ones</span>(n)

x, obj_values, λ_kkt, term_info <span class="pl-k">=</span> <span class="pl-c1">optimize</span>(f, c!, x0, m)</pre></div>
<h2 dir="auto"><a id="user-content-inequality-constrained" class="anchor" aria-hidden="true" href="#inequality-constrained"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Inequality constrained</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="n = 50     # number of variables
m = 0      # number of equality constraints
p = 1      # number of inequality constraints

coeff = randn(n)
f = x -&gt; dot(coeff, x)

# circle constraint
function d!(dval, x)
    dval[1] = dot(x, x) - 1.0
end

x0 = zeros(n)

xl = -Inf .* ones(n)       # no bound constraints
xu = Inf .* ones(n)

x, obj_values, λ_kkt, term_info = optimize(f, nothing, d!, x0, xl, xu, m, p)"><pre>n <span class="pl-k">=</span> <span class="pl-c1">50</span>     <span class="pl-c"><span class="pl-c">#</span> number of variables</span>
m <span class="pl-k">=</span> <span class="pl-c1">0</span>      <span class="pl-c"><span class="pl-c">#</span> number of equality constraints</span>
p <span class="pl-k">=</span> <span class="pl-c1">1</span>      <span class="pl-c"><span class="pl-c">#</span> number of inequality constraints</span>

coeff <span class="pl-k">=</span> <span class="pl-c1">randn</span>(n)
f <span class="pl-k">=</span> x <span class="pl-k">-&gt;</span> <span class="pl-c1">dot</span>(coeff, x)

<span class="pl-c"><span class="pl-c">#</span> circle constraint</span>
<span class="pl-k">function</span> <span class="pl-en">d!</span>(dval, x)
    dval[<span class="pl-c1">1</span>] <span class="pl-k">=</span> <span class="pl-c1">dot</span>(x, x) <span class="pl-k">-</span> <span class="pl-c1">1.0</span>
<span class="pl-k">end</span>

x0 <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(n)

xl <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">Inf</span> <span class="pl-k">.*</span> <span class="pl-c1">ones</span>(n)       <span class="pl-c"><span class="pl-c">#</span> no bound constraints</span>
xu <span class="pl-k">=</span> <span class="pl-c1">Inf</span> <span class="pl-k">.*</span> <span class="pl-c1">ones</span>(n)

x, obj_values, λ_kkt, term_info <span class="pl-k">=</span> <span class="pl-c1">optimize</span>(f, <span class="pl-c1">nothing</span>, d!, x0, xl, xu, m, p)</pre></div>
<h1 dir="auto"><a id="user-content-to-do" class="anchor" aria-hidden="true" href="#to-do"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>To-do</h1>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Documentation</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Handling of sparsity in constraints</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Other miscellaneous features</li>
</ul>
</article></div>