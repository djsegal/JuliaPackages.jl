<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-the-gr-module-for-julia" class="anchor" aria-hidden="true" href="#the-gr-module-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>The GR module for Julia</h1>
<p dir="auto"><a href="LICENSE.md"><img src="https://camo.githubusercontent.com/34c33e2f7f61f9b82750baf175f4aa3260f774ead54e160dd013b7d818992096/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d6f72616e67652e737667" alt="The MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-orange.svg" style="max-width: 100%;"></a>
<a href="https://github.com/jheinen/GR.jl/releases"><img src="https://camo.githubusercontent.com/bfca5ed2fd919ba16fe3d32d370589e95fa02890ca4d8c4d2cf807c1b95dfe68/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f6a6865696e656e2f47522e6a6c2e737667" alt="GitHub tag" data-canonical-src="https://img.shields.io/github/tag/jheinen/GR.jl.svg" style="max-width: 100%;"></a>
<a href="https://pkgs.genieframework.com?packages=GR" rel="nofollow"><img src="https://camo.githubusercontent.com/775e9dfeb011341f6e68c8b50076e65c01fa85f529b9a0b5b8ca1c247ddb2b21/68747470733a2f2f736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f706b67732e67656e69656672616d65776f726b2e636f6d2f6170692f76312f62616467652f4752" alt="GR Downloads" data-canonical-src="https://shields.io/endpoint?url=https://pkgs.genieframework.com/api/v1/badge/GR" style="max-width: 100%;"></a>
<a href="https://zenodo.org/badge/latestdoi/29193648" rel="nofollow"><img src="https://camo.githubusercontent.com/3e2954360d586f0e80f93bdada4576a8ad5a56f3a9c7a575c67b95f0cc754c49/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f32393139333634382e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/29193648.svg" style="max-width: 100%;"></a>
<a href="https://mybinder.org/v2/gh/jheinen/GR.jl/master" rel="nofollow"><img src="https://camo.githubusercontent.com/581c077bdbc6ca6899c86d0acc6145ae85e9d80e6f805a1071793dbe48917982/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667" alt="Binder" data-canonical-src="https://mybinder.org/badge_logo.svg" style="max-width: 100%;"></a>
<a href="https://gitter.im/jheinen/GR.jl?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge" rel="nofollow"><img src="https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/jheinen/GR.jl" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/G/GR.html" rel="nofollow"><img src="https://camo.githubusercontent.com/e7737d087c22892d4fa71851a4edd9bd3e4c3e0fff771aab79ee6b4f46003171/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f472f47522e6e616d65642e737667" alt="PkgEval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/G/GR.named.svg" style="max-width: 100%;"></a>
<a href="https://github.com/jheinen/GR.jl/actions/workflows/ci.yml"><img src="https://github.com/jheinen/GR.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://app.codecov.io/gh/jheinen/GR.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/aaa02dbf693b61aa17a6873249c0c1a8fb45eb745f04883af60eb551abe6ffff/68747470733a2f2f636f6465636f762e696f2f67682f6a6865696e656e2f47522e6a6c2f6272616e63682f6d61737465722f6772617068732f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://codecov.io/gh/jheinen/GR.jl/branch/master/graphs/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://gr-framework.org" rel="nofollow"><img src="https://camo.githubusercontent.com/19d5aa67c6146d9b7ffd03bfcbdecb4e273df86a8bd100ca98043c0f5f70f6b6/68747470733a2f2f67722d6672616d65776f726b2e6f72672f5f696d616765732f73637265656e73686f74732e706e67" alt="Screenshots" data-canonical-src="https://gr-framework.org/_images/screenshots.png" style="max-width: 100%;"></a></p>
<p dir="auto">This module provides a Julia interface to
<a href="http://gr-framework.org/" rel="nofollow">GR</a>, a framework for
visualisation applications.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">From the Julia REPL an up to date version can be installed with:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg
julia&gt; Pkg.add(&quot;GR&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg
julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>GR<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">or in the <a href="https://docs.julialang.org/en/v1/stdlib/Pkg/index.html#Getting-Started-1" rel="nofollow">Pkg REPL-mode</a>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add GR"><pre>pkg<span class="pl-k">&gt;</span> add GR</pre></div>
<p dir="auto">The Julia package manager will download and install a pre-compiled
run-time (for your hardware architecture), if the GR software is not
already installed in the recommended locations.</p>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting started</h2>
<p dir="auto">In Julia simply type <code>using GR</code> and begin calling functions
in the <a href="http://gr-framework.org/julia-gr.html" rel="nofollow">GR framework</a> API.</p>
<p dir="auto">Let's start with a simple example. We generate 10,000 random numbers and
create a histogram. The histogram function automatically chooses an appropriate
number of bins to cover the range of values in x and show the shape of the
underlying distribution.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GR
histogram(randn(10000))"><pre><span class="pl-k">using</span> GR
<span class="pl-c1">histogram</span>(<span class="pl-c1">randn</span>(<span class="pl-c1">10000</span>))</pre></div>
<h2 dir="auto"><a id="user-content-using-gr-as-backend-for-plotsjl" class="anchor" aria-hidden="true" href="#using-gr-as-backend-for-plotsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using GR as backend for Plots.jl</h2>
<p dir="auto"><code>Plots</code> is a powerful wrapper around other Julia visualization
"backends", where <code>GR</code> seems to be one of the favorite ones.
To get an impression how complex visualizations may become
easier with <a href="https://juliaplots.github.io" rel="nofollow">Plots</a>, take a look at
<a href="https://docs.juliaplots.org/stable/gallery/gr/" rel="nofollow">these</a>  examples.</p>
<p dir="auto"><code>Plots</code> is great on its own, but the real power comes from the ecosystem surrounding it. You can find more information
<a href="https://docs.juliaplots.org/latest/ecosystem/" rel="nofollow">here</a>.</p>
<h2 dir="auto"><a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Alternatives</h2>
<p dir="auto">Besides <code>GR</code> and <code>Plots</code> there is a nice package called <a href="https://github.com/heliosdrm/GRUtils.jl">GRUtils</a> which provides a user-friendly interface to the low-level <code>GR</code> subsytem, but in a more "Julian" and modular style. Newcomers are recommended to use this package. A detailed documentation can be found <a href="https://heliosdrm.github.io/GRUtils.jl/stable/" rel="nofollow">here</a>.</p>
<p dir="auto"><code>GR</code> and <code>GRUtils</code> are currently still being developed in parallel - but there are plans to merge the two modules in the future.</p>
<h2 dir="auto"><a id="user-content-run-time-environment" class="anchor" aria-hidden="true" href="#run-time-environment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Run-time environment</h2>
<p dir="auto"><code>GR.jl</code> is a wrapper for the <code>GR</code> Framework. Therefore, the <code>GR</code> run-time libraries are required to use the software. These are provided via the <a href="https://github.com/JuliaBinaryWrappers/GR_jll.jl">GR_jll.jl</a> package, which is an autogenerated package constructed using <a href="https://github.com/JuliaPackaging/BinaryBuilder.jl">BinaryBuilder</a>. This is the default setting.</p>
<p dir="auto">Another alternative is the use of binaries from GR tarballs, which are provided directly by the GR developers as stand-alone distributions for selected platforms - regardless of the programming language. In this case, only one GR runtime environment is required for different language environments (Julia, Python, C/C++), whose installation path can be specified by the environment variable <code>GRDIR</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ENV[&quot;JULIA_DEBUG&quot;] = &quot;GR&quot; # Turn on debug statements for the GR package
ENV[&quot;GRDIR&quot;] = &quot;&lt;path of you GR installation&gt;&quot; # e.g. &quot;/usr/local/gr&quot;
using GR"><pre><span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>JULIA_DEBUG<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>GR<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> Turn on debug statements for the GR package</span>
<span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>GRDIR<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>&lt;path of you GR installation&gt;<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> e.g. "/usr/local/gr"</span>
<span class="pl-k">using</span> GR</pre></div>
<p dir="auto">For more information about setting up a local GR installation, see the <a href="https://gr-framework.org" rel="nofollow">GR Framework</a> website.</p>
<p dir="auto">However, if you want to permanently use your own GR run-time, you have to set the environment variable <code>GRDIR</code> accordingly before starting Julia, e.g.</p>
<ul dir="auto">
<li>macOS or Linux: <code>export GRDIR=/usr/local/gr</code></li>
<li>Windows: <code>set GRDIR=C:\gr</code></li>
</ul>
<p dir="auto">Please note that with the method shown here, <code>GR_jll</code> is not imported.</p>
<h3 dir="auto"><a id="user-content-switching-binaries-via-grgrpreferences" class="anchor" aria-hidden="true" href="#switching-binaries-via-grgrpreferences"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Switching binaries via GR.GRPreferences</h3>
<p dir="auto">To aid in switching between BinaryBuilder and upstream framework binaries, the <code>GR.GRPReferences</code> module implements three methods <code>use_system_binary()</code>, <code>use_upstream_binary()</code>, and <code>use_jll_binary()</code>. These use <a href="https://github.com/JuliaPackaging/Preferences.jl">Preferences.jl</a> to configure GR.jl
and GR_jll.jl.</p>
<p dir="auto">To use an existing GR install, invoke <code>use_system_binary</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GR
GR.GRPreferences.use_system_binary(&quot;/path/to/gr&quot;; force = true)"><pre><span class="pl-k">using</span> GR
GR<span class="pl-k">.</span>GRPreferences<span class="pl-k">.</span><span class="pl-c1">use_system_binary</span>(<span class="pl-s"><span class="pl-pds">"</span>/path/to/gr<span class="pl-pds">"</span></span>; force <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<p dir="auto">To download and switch to <a href="https://github.com/sciapp/gr/releases">upstream binaries</a> invoke <code>use_upstream_binary</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GR # repeat this if there is an error
GR.GRPreferences.use_upstream_binary(; force = true)"><pre><span class="pl-k">using</span> GR <span class="pl-c"><span class="pl-c">#</span> repeat this if there is an error</span>
GR<span class="pl-k">.</span>GRPreferences<span class="pl-k">.</span><span class="pl-c1">use_upstream_binary</span>(; force <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<p dir="auto"><code>use_system_binary</code> and <code>use_upstream_binary</code> accept an <code>override</code> keyword. This may be set to one of the following:</p>
<ul dir="auto">
<li><code>:depot</code> (default) - Use Overrides.toml in the Julia depot. This normally resides in <code>.julia/artifacts/Overrides.toml</code></li>
<li><code>:project</code> - Use LocalPreferences.toml. This is usually located near the Project.toml of your active project environment.</li>
<li><code>(:depot, :project)</code> - Use both of the override mechanisms above.</li>
</ul>
<p dir="auto">To switch back to BinaryBuilder binaries supplied with <a href="https://github.com/JuliaBinaryWrappers/GR_jll.jl">GR_jll</a>, invoke <code>use_jll_binary</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GR # repeat this if there is an error
GR.GRPreferences.use_jll_binary(; force = true)"><pre><span class="pl-k">using</span> GR <span class="pl-c"><span class="pl-c">#</span> repeat this if there is an error</span>
GR<span class="pl-k">.</span>GRPreferences<span class="pl-k">.</span><span class="pl-c1">use_jll_binary</span>(; force <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<p dir="auto">This will reset both the <code>:depot</code> and <code>:project</code> override mechanisms above.</p>
<p dir="auto">If you encounter difficulties switching between binaries, the <code>diagnostics()</code> function will provide useful information.
Please include this information when asking for assistance.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GR
GR.GRPreferences.diagnostics()"><pre><span class="pl-k">using</span> GR
GR<span class="pl-k">.</span>GRPreferences<span class="pl-k">.</span><span class="pl-c1">diagnostics</span>()</pre></div>
</article></div>