<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-kitfortjl" class="anchor" aria-hidden="true" href="#kitfortjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>KitFort.jl</h1>
<p dir="auto"><a href="https://juliahub.com/ui/Packages/KitFort/2mlJf" rel="nofollow"><img src="https://camo.githubusercontent.com/c110828d97ca19ce84883552c317d3d10725f536e7c39f23a643e520d95a51a0/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4b6974466f72742f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/KitFort/version.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/e6a8beefc2ff9f00db7fcd51773d21217c4631216556f038a451fc50ac70a605/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f76617672696e65732f4b6974466f72742e6a6c2f6d61696e2e796d6c3f6272616e63683d6d61696e"><img src="https://camo.githubusercontent.com/e6a8beefc2ff9f00db7fcd51773d21217c4631216556f038a451fc50ac70a605/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f76617672696e65732f4b6974466f72742e6a6c2f6d61696e2e796d6c3f6272616e63683d6d61696e" alt="CI" data-canonical-src="https://img.shields.io/github/actions/workflow/status/vavrines/KitFort.jl/main.yml?branch=main" style="max-width: 100%;"></a>
<a href="https://xiaotianbai.com/Kinetic.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/vavrines/KitFort.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3925d7a4b64aefd9655c9ca3ae053b847e6a06c3efde7a66f4276525e309c074/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f76617672696e65732f4b6974466f72742e6a6c" alt="codecov" data-canonical-src="https://img.shields.io/codecov/c/github/vavrines/KitFort.jl" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/KitBase/YOFTS?t=2" rel="nofollow"><img src="https://camo.githubusercontent.com/3b7050e7c3793a189c3686afb007afdb32cd31b98532075cdc585532f5ed743d/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4b6974426173652f646570732e737667" alt="deps" data-canonical-src="https://juliahub.com/docs/KitBase/deps.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This lightweight module provides the Fortran backends in <a href="https://github.com/vavrines/Kinetic.jl">Kinetic.jl</a> ecosystem.
It's not included in the main module by default, and can be manually imported in the extreme pursuit of efficiency.
<a href="https://xiaotianbai.com/Kinetic.jl/dev/" rel="nofollow">Check the documentation</a> for information on the implementation and use of the package.</p>
<h2 dir="auto"><a id="user-content-dynamic-library" class="anchor" aria-hidden="true" href="#dynamic-library"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Dynamic library</h2>
<p dir="auto">The modern Fortran methods is provided by the shared library <a href="https://github.com/vavrines/KitFort.jl/blob/main/src/fortran/kitmod.so">kitmod.so</a> and called from Julia with the help of <code>ccall</code> function.</p>
<h2 dir="auto"><a id="user-content-recompilation" class="anchor" aria-hidden="true" href="#recompilation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Recompilation</h2>
<p dir="auto">To generate the dynamic library file to be called from Julia, make sure the GNU Fortran compiler has been installed in the computer.</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="gfortran kitmod.f90 -o kitmod.so -shared -fPIC -O3"><pre>gfortran kitmod.f90 -o kitmod.so -shared -fPIC -O3</pre></div>
<p dir="auto">Alternatively, the Intel Fortran compiler <code>ifort</code> can be employed with the same command above.</p>
<p dir="auto">Note that GNU and Intel compilers present slightly different behaviors on the function call.
For example, the low-level KFVS flux function takes:</p>
<ul dir="auto">
<li><code>:__kinetic_MOD_flux_kfvs_1f1v</code> for GNU</li>
<li><code>:kinetic_mp_flux_kfvs_1f1v_</code> for Intel</li>
</ul>
<p dir="auto">Please don't do the recompilation unless you're sure what's exactly going on.</p>
</article></div>