<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-kitfortjl" class="anchor" aria-hidden="true" href="#kitfortjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>KitFort.jl</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/vavrines/KitFort.jl/workflows/CI/badge.svg"><img src="https://github.com/vavrines/KitFort.jl/workflows/CI/badge.svg" alt="CI" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/vavrines/KitFort.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d995159803b6e2739654b8e7563343b2a387d56c35d11d8fbb8981744631948e/68747470733a2f2f636f6465636f762e696f2f67682f76617672696e65732f4b6974466f72742e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d36377466566333417457" alt="codecov" data-canonical-src="https://codecov.io/gh/vavrines/KitFort.jl/branch/main/graph/badge.svg?token=67tfVc3AtW" style="max-width:100%;"></a></p>
<p>This package serves as a lightweight module of Fortran methods in <a href="https://github.com/vavrines/Kinetic.jl">Kinetic.jl</a> ecosystem.
It's not included in the main module by default, and can be manually imported in the cases with extreme pursuit of efficiency.</p>
<h2><a id="user-content-dynamic-library" class="anchor" aria-hidden="true" href="#dynamic-library"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Dynamic library</h2>
<p>The modern Fortran methods is provided by the shared library <a href="https://github.com/vavrines/KitFort.jl/blob/main/src/fortran/kitmod.so">kitmod.so</a> and called from Julia with the help of <code>ccall</code> function.</p>
<h2><a id="user-content-recompilation" class="anchor" aria-hidden="true" href="#recompilation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Recompilation</h2>
<p>To generate the dynamic library file to be called from Julia, make sure the GNU Fortran compiler has been installed in the computer.</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="gfortran kitmod.f90 -o kitmod.so -shared -fPIC -O3
"><pre>gfortran kitmod.f90 -o kitmod.so -shared -fPIC -O3</pre></div>
<p>Alternatively, the Intel Fortran compiler <code>ifort</code> can be employed with the same command above.</p>
<p>Note that GNU and Intel compilers present slightly different behaviors on the function call.
For example, the low-level KFVS flux function takes:</p>
<ul>
<li><code>:__kinetic_MOD_flux_kfvs_1f1v</code> for GNU</li>
<li><code>:kinetic_mp_flux_kfvs_1f1v_</code> for Intel</li>
</ul>
<p>Please don't do the recompilation unless you're sure what's exactly going on.</p>
</article></div>