<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-jlfzf" class="anchor" aria-hidden="true" href="#jlfzf"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>JLFzf</h1>
<p>To use Fzf in Julia REPL, you don't have to use this pacakge if you're already a user of <a href="https://github.com/KristofferC/OhMyREPL.jl">OhMyREPL.jl</a>. Keep reading if you want to use Fzf for your own package or don't want to use <code>OhMyREPL</code> but still want Fzf search.</p>
<h1><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h1>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using JLFzf
julia&gt; a = JLFzf.inter_fzf([&quot;a&quot;, &quot;b&quot;, &quot;c&quot;], &quot;--read0&quot;)
# interactive session happens here, --read0 because we could be searching for multi-line commands in history
&quot;b&quot;


julia&gt; @show a
a = &quot;b&quot;
&quot;b&quot;
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> JLFzf
julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> JLFzf<span class="pl-k">.</span><span class="pl-c1">inter_fzf</span>([<span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>c<span class="pl-pds">"</span></span>], <span class="pl-s"><span class="pl-pds">"</span>--read0<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> interactive session happens here, --read0 because we could be searching for multi-line commands in history</span>
<span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>


julia<span class="pl-k">&gt;</span> <span class="pl-c1">@show</span> a
a <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>
<span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span></pre></div>
<p>also try <code>JLFzf.inter_fzf(Fzf.read_repl_hist())</code></p>
<h2><a id="user-content-sample-startupjl" class="anchor" aria-hidden="true" href="#sample-startupjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Sample <code>startup.jl</code></h2>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="import REPL
import REPL.LineEdit
import JLFzf
const mykeys = Dict{Any,Any}(
    # primary history search: most recent first
    &quot;^R&quot; =&gt; function (mistate, o, c)
        line = JLFzf.inter_fzf(JLFzf.read_repl_hist(), 
        &quot;--read0&quot;, 
        &quot;--tiebreak=index&quot;,
        &quot;--height=80%&quot;);
        JLFzf.insert_history_to_repl(mistate, line)
    end,
)
function customize_keys(repl)
    repl.interface = REPL.setup_interface(repl; extra_repl_keymap = mykeys)
end
atreplinit(customize_keys)
"><pre><code>import REPL
import REPL.LineEdit
import JLFzf
const mykeys = Dict{Any,Any}(
    # primary history search: most recent first
    "^R" =&gt; function (mistate, o, c)
        line = JLFzf.inter_fzf(JLFzf.read_repl_hist(), 
        "--read0", 
        "--tiebreak=index",
        "--height=80%");
        JLFzf.insert_history_to_repl(mistate, line)
    end,
)
function customize_keys(repl)
    repl.interface = REPL.setup_interface(repl; extra_repl_keymap = mykeys)
end
atreplinit(customize_keys)
</code></pre></div>
<p>when in REPL, press <code>Ctril-R</code> to start a search, <code>mode</code> will be automatically switched upon
selecting search results (<code>Pkg&gt;</code>, <code>Help&gt;</code> etc.).</p>
</article></div>