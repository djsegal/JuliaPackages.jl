<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-counterfactualregretjl" class="anchor" aria-hidden="true" href="#counterfactualregretjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CounterfactualRegret.jl</h1>
<p dir="auto"><a href="https://whifflefish.github.io/CounterfactualRegret.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/WhiffleFish/CounterfactualRegret.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ab7f25df2f225158658b51f56d218403e1477e167fcae1507b8db05a4479c70d/68747470733a2f2f636f6465636f762e696f2f67682f57686966666c65466973682f436f756e7465726661637475616c5265677265742e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d5833324e4249554e395a" alt="codecov" data-canonical-src="https://codecov.io/gh/WhiffleFish/CounterfactualRegret.jl/branch/main/graph/badge.svg?token=X32NBIUN9Z" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg; Pkg.add(&quot;CounterfactualRegret&quot;)"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CounterfactualRegret<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-implemented-solvers" class="anchor" aria-hidden="true" href="#implemented-solvers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Implemented Solvers</h2>
<table>
<thead>
<tr>
<th>Solver Name  </th>
<th>Description        </th>
</tr>
</thead>
<tbody>
<tr>
<td><code>CFRSolver</code>  </td>
<td>Vanilla CFR solver</td>
</tr>
<tr>
<td><code>CSCFRSolver</code></td>
<td>Chance Sampling    </td>
</tr>
<tr>
<td><code>ESCFRSolver</code></td>
<td>External Sampling  </td>
</tr>
<tr>
<td><code>OSCFRSolver</code></td>
<td>Outcome Sampling  </td>
</tr>
</tbody>
</table>
<p dir="auto">Each solver takes optional kwarg <code>method</code>, which can an instantiation of either <code>Vanilla</code>, <code>Plus</code>, or <code>Discount</code> types, which correspond to Vanilla CFR, CFR+, and discounted CFR respectively.</p>
<h2 dir="auto"><a id="user-content-external-solver-packages" class="anchor" aria-hidden="true" href="#external-solver-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>External Solver Packages</h2>
<table>
<thead>
<tr>
<th>Name</th>
<th>Status</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/WhiffleFish/DeepCFR.jl">DeepCFR</a></td>
<td><a href="https://github.com/WhiffleFish/DeepCFR.jl/actions/workflows/CI.yml"><img src="https://github.com/WhiffleFish/DeepCFR.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/WhiffleFish/DeepCFR.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5dddaf7348c5b715fe6b63b8b043c846ba430b0be5d0eb85089ae01cc69904bc/68747470733a2f2f636f6465636f762e696f2f67682f57686966666c65466973682f446565704346522e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d4e4d324b553632464732" alt="codecov" data-canonical-src="https://codecov.io/gh/WhiffleFish/DeepCFR.jl/branch/main/graph/badge.svg?token=NM2KU62FG2" style="max-width: 100%;"></a></td>
</tr>
<tr>
<td><a href="https://github.com/WhiffleFish/ESCHER.jl">ESCHER</a></td>
<td><a href="https://github.com/WhiffleFish/ESCHER.jl/actions/workflows/CI.yml"><img src="https://github.com/WhiffleFish/ESCHER.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/WhiffleFish/ESCHER.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8d84d2310c43b4ba1880824911e6362f1df2e8c31da14a5c493d87d52af458f1/68747470733a2f2f636f6465636f762e696f2f67682f57686966666c65466973682f4553434845522e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d727071544d5763795863" alt="codecov" data-canonical-src="https://codecov.io/gh/WhiffleFish/ESCHER.jl/branch/main/graph/badge.svg?token=rpqTMWcyXc" style="max-width: 100%;"></a></td>
</tr>
<tr>
<td><a href="https://github.com/WhiffleFish/BestResponsePOMDP.jl">POMDPBestResponse</a></td>
<td><a href="https://github.com/WhiffleFish/BestResponsePOMDP.jl/actions/workflows/CI.yml"><img src="https://github.com/WhiffleFish/BestResponsePOMDP.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/WhiffleFish/BestResponsePOMDP.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1b881b0cf232da9539a026606eb8e5713b765cd384e3c100f556a7c66ac8539c/68747470733a2f2f636f6465636f762e696f2f67682f57686966666c65466973682f42657374526573706f6e7365504f4d44502e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d6c4b477537454e636646" alt="codecov" data-canonical-src="https://codecov.io/gh/WhiffleFish/BestResponsePOMDP.jl/branch/main/graph/badge.svg?token=lKGu7ENcfF" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-solving-a-matrix-game" class="anchor" aria-hidden="true" href="#solving-a-matrix-game"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Solving a Matrix Game</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using CounterfactualRegret
const CFR = CounterfactualRegret
using CounterfactualRegret.Games
using Plots

game = MatrixGame([
    (1,1) (0,0) (0,0);
    (0,0) (0,2) (3,0);
    (0,0) (2,0) (0,3);
])
sol = CFRSolver(game; debug=true)
cb = CFR.ExploitabilityCallback(sol, 10) # optional callback to monitor training
train!(sol, 10_000; cb=cb)
plot(cb, lw=2)"><pre><span class="pl-k">using</span> CounterfactualRegret
<span class="pl-k">const</span> CFR <span class="pl-k">=</span> CounterfactualRegret
<span class="pl-k">using</span> CounterfactualRegret<span class="pl-k">.</span>Games
<span class="pl-k">using</span> Plots

game <span class="pl-k">=</span> <span class="pl-c1">MatrixGame</span>([
    (<span class="pl-c1">1</span>,<span class="pl-c1">1</span>) (<span class="pl-c1">0</span>,<span class="pl-c1">0</span>) (<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);
    (<span class="pl-c1">0</span>,<span class="pl-c1">0</span>) (<span class="pl-c1">0</span>,<span class="pl-c1">2</span>) (<span class="pl-c1">3</span>,<span class="pl-c1">0</span>);
    (<span class="pl-c1">0</span>,<span class="pl-c1">0</span>) (<span class="pl-c1">2</span>,<span class="pl-c1">0</span>) (<span class="pl-c1">0</span>,<span class="pl-c1">3</span>);
])
sol <span class="pl-k">=</span> <span class="pl-c1">CFRSolver</span>(game; debug<span class="pl-k">=</span><span class="pl-c1">true</span>)
cb <span class="pl-k">=</span> CFR<span class="pl-k">.</span><span class="pl-c1">ExploitabilityCallback</span>(sol, <span class="pl-c1">10</span>) <span class="pl-c"><span class="pl-c">#</span> optional callback to monitor training</span>
<span class="pl-c1">train!</span>(sol, <span class="pl-c1">10_000</span>; cb<span class="pl-k">=</span>cb)
<span class="pl-c1">plot</span>(cb, lw<span class="pl-k">=</span><span class="pl-c1">2</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./img/matrix_exploitability.svg"><img src="./img/matrix_exploitability.svg" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-finding-kuhn-poker-nash-equilibrium-with-external-sampling--discounting" class="anchor" aria-hidden="true" href="#finding-kuhn-poker-nash-equilibrium-with-external-sampling--discounting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Finding Kuhn Poker Nash Equilibrium with external sampling &amp; discounting</h2>
<p dir="auto"><a href="src/games/Kuhn.jl">Kuhn Poker Implementation &amp; Game Definition Tutorial</a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="game = Kuhn()
sol = ESCFRSolver(game; method=Discount(α=1.0, β=1.0, γ=1.0))
cb = CFR.ExploitabilityCallback(sol)
train!(sol, 100_001; cb=cb)

hist = cb.hist
exp_idxs = 10 .^(0:5) .+ 1
plot(
    hist.x[exp_idxs], hist.y[exp_idxs];
    xscale = :log10, lw=2, label=&quot;&quot;,
    xlabel = &quot;Training Iterations&quot;,
    ylabel = &quot;Exploitability&quot;
)"><pre>game <span class="pl-k">=</span> <span class="pl-c1">Kuhn</span>()
sol <span class="pl-k">=</span> <span class="pl-c1">ESCFRSolver</span>(game; method<span class="pl-k">=</span><span class="pl-c1">Discount</span>(α<span class="pl-k">=</span><span class="pl-c1">1.0</span>, β<span class="pl-k">=</span><span class="pl-c1">1.0</span>, γ<span class="pl-k">=</span><span class="pl-c1">1.0</span>))
cb <span class="pl-k">=</span> CFR<span class="pl-k">.</span><span class="pl-c1">ExploitabilityCallback</span>(sol)
<span class="pl-c1">train!</span>(sol, <span class="pl-c1">100_001</span>; cb<span class="pl-k">=</span>cb)

hist <span class="pl-k">=</span> cb<span class="pl-k">.</span>hist
exp_idxs <span class="pl-k">=</span> <span class="pl-c1">10</span> <span class="pl-k">.^</span>(<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">5</span>) <span class="pl-k">.+</span> <span class="pl-c1">1</span>
<span class="pl-c1">plot</span>(
    hist<span class="pl-k">.</span>x[exp_idxs], hist<span class="pl-k">.</span>y[exp_idxs];
    xscale <span class="pl-k">=</span> <span class="pl-c1">:log10</span>, lw<span class="pl-k">=</span><span class="pl-c1">2</span>, label<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>,
    xlabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Training Iterations<span class="pl-pds">"</span></span>,
    ylabel <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Exploitability<span class="pl-pds">"</span></span>
)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./img/kuhn_exploitability.svg"><img src="./img/kuhn_exploitability.svg" style="max-width: 100%;"></a></p>
</article></div>