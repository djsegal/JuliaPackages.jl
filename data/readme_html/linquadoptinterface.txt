<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><strong>This package is deprecated. All solvers relying on it have been updated to pure MOI wrappers. Do not use this as an intermediate layer when constructing new solver wrappers.</strong></p>
<h1><a id="user-content-linquadoptinterfacejl" class="anchor" aria-hidden="true" href="#linquadoptinterfacejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>LinQuadOptInterface.jl</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Social</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://travis-ci.org/JuliaOpt/LinQuadOptInterface.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/351be8a0304f924b772291474857dbfee0b36d08/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614f70742f4c696e517561644f7074496e746572666163652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaOpt/LinQuadOptInterface.jl.svg?branch=master" style="max-width:100%;"></a> <a href="http://codecov.io/github/JuliaOpt/LinQuadOptInterface.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/65372fd8b58f4221fc99321bcde237a823910643/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614f70742f4c696e517561644f7074496e746572666163652e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Codecov branch" data-canonical-src="http://codecov.io/github/JuliaOpt/LinQuadOptInterface.jl/coverage.svg?branch=master" style="max-width:100%;"></a></td>
<td align="center"><a href="https://gitter.im/JuliaOpt/JuMP-dev?utm_source=share-link&amp;utm_medium=link&amp;utm_campaign=share-link" rel="nofollow"><img src="https://camo.githubusercontent.com/2c5bce5b1b878238d738462b8e2d86f3e28d1ccc/68747470733a2f2f6261646765732e6769747465722e696d2f4a756c69614f70742f4a754d502d6465762e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/JuliaOpt/JuMP-dev.svg" style="max-width:100%;"></a> <a href="https://discourse.julialang.org/c/domain/opt" rel="nofollow"><img src="https://camo.githubusercontent.com/844580b76167bd89eb6ec484c60c71856712a94e/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f612f61662f446973636f757273655f6c6f676f2e706e672f37393970782d446973636f757273655f6c6f676f2e706e67" width="64" data-canonical-src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Discourse_logo.png/799px-Discourse_logo.png" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>LinQuadOptInterface.jl (LQOI) is designed to provide an intermediate interface
to <a href="https://github.com/JuliaOpt/MathOptInterface.jl">MathOptInterface.jl</a>
for some solvers. The target use-cases are low-level wrappers designed to bridge
low-level mixed integer linear and quadratic solvers.</p>
<p>Examples of packages currently using LQOI include <a href="https://github.com/JuliaOpt/Clp.jl">Clp.jl</a>,
<a href="https://github.com/JuliaOpt/GLPK.jl">GLPK.jl</a>, <a href="https://github.com/JuliaOpt/Gurobi.jl">Gurobi.jl</a>, and <a href="https://github.com/JuliaOpt/Xpress.jl">Xpress.jl</a>.</p>
<p>The interface is documented <a href="https://github.com/JuliaOpt/LinQuadOptInterface.jl/blob/master/src/solver_interface.jl">here</a>.</p>
<h2><a id="user-content-note-to-solver-developers" class="anchor" aria-hidden="true" href="#note-to-solver-developers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Note to solver developers</h2>
<p>The use of LQOI for MOI wrappers of low-level solvers is entirely optional.
Using LQOI introduces an extra abstraction layer between a solver and MOI. We
recommend that you carefully analyze the solver's low-level API to check if it
is close to what LQOI expects.</p>
<p>If a solver low-level API does not support most of the functions required by LQOI, then following the example of
<a href="https://github.com/JuliaOpt/SCS.jl">SCS.jl</a> and
<a href="https://github.com/JuliaOpt/ECOS.jl">ECOS.jl</a>
might be a better idea.</p>
</article></div>