<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-gswdesignjl" class="anchor" aria-hidden="true" href="#gswdesignjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>GSWDesign.jl</h1>
<p>GSWDesign is a Julia package which contains a fast implementation of the Gram--Schmidt Walk
for balancing covariates in randomized experiments.
The Gram--Schmidt Walk design allows experimenters the flexibilty to control the amount of covariate balancing.
See the references below for details of the Gram--Schmidt Walk design and its analysis.</p>
<ol>
<li>Christopher Harshaw, Fredrik Sävje, Daniel Spielman, Peng Zhang. "Balancing covariates in randomized experiments
using the Gram–Schmidt walk". Arxiv 1911.03071, 2019. <a href="https://arxiv.org/abs/1911.03071" rel="nofollow">arxiv</a></li>
<li>Nikhil Bansal, Daniel Dadush, Shashwat Garg, and Shachar Lovett. "The Gram–Schmidt walk: a
cure for the Banaszczyk blues". In STOC, 2018. <a href="https://arxiv.org/abs/1708.01079" rel="nofollow">arxiv</a></li>
</ol>
<h2><a id="user-content-installing-this-package" class="anchor" aria-hidden="true" href="#installing-this-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installing this package</h2>
<p>To install this package, you must first have installed the Julia programming language.
If you have not done this, visit <a href="https://julialang.org/" rel="nofollow">julialang.org</a> for instructions on how to do so.</p>
<p>The best way to install this package is using Julia's builtin package manager, <code>Pkg</code>.
GSWDesign is currently an unregistered package and so the command for adding it is slightly different than for registered packages.
We discuss how to do this for Julia versions v1.0 and higher.</p>
<ol>
<li>At the command line, type <code>julia</code> to enter an interactive Julia session.</li>
<li>Enter the package manager by pressing <code>]</code>.</li>
<li>To download our GSWDesign package, enter the command <code>add https://github.com/crharshaw/GSWDesign.jl</code></li>
<li>Exit the package manager by pressing press backspace or ^C.</li>
</ol>
<p>Now GSWDesign is installed with your version of Julia and you can use it.</p>
<h2><a id="user-content-how-to-use-this-package" class="anchor" aria-hidden="true" href="#how-to-use-this-package"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>How to use this package</h2>
<p>The main functionality of this package is the function <code>sample_gs_walk</code> which is a fast implementation to sample
from the Gram--Schmidt Walk design.
The function <code>sample_gs_walk</code> maintains a Cholesky factorization so the runtime for producing one sample from the design scales like $O(n^2 d)$ for $n &gt; d$, where $n$ is the number of units and $d$ is the number of covariates for each unit.
Moreover, a recursive implementation is used for more efficient memory allocation.</p>
<p>Here is an example of how to use the function <code>sample_gs_walk</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# import the package
using GSWDesign

# generate a random matrix of covariates
n = 20
d = 4
X = randn(n,d)

# run the Gram--Schmidt walk
lambda = 0.5
assignment_list = sample_gs_walk(X, lambda, num_samples=5)
"><pre><span class="pl-c"><span class="pl-c">#</span> import the package</span>
<span class="pl-k">using</span> GSWDesign

<span class="pl-c"><span class="pl-c">#</span> generate a random matrix of covariates</span>
n <span class="pl-k">=</span> <span class="pl-c1">20</span>
d <span class="pl-k">=</span> <span class="pl-c1">4</span>
X <span class="pl-k">=</span> <span class="pl-c1">randn</span>(n,d)

<span class="pl-c"><span class="pl-c">#</span> run the Gram--Schmidt walk</span>
lambda <span class="pl-k">=</span> <span class="pl-c1">0.5</span>
assignment_list <span class="pl-k">=</span> <span class="pl-c1">sample_gs_walk</span>(X, lambda, num_samples<span class="pl-k">=</span><span class="pl-c1">5</span>)</pre></div>
<p>Note that covariate matrices are n-by-d, so the covariates vectors for each unit are the <em>rows</em> of the matrix $X$.
The return variable <code>assignment_list</code> is an array of size <code>num_samples</code>-by-n with entries in 0 and 1.
The function <code>sample_gs_walk</code> has several other features, including the ability to set individual assignment probabilities and the option for strictly balanced assignments.
A complete description of these features is available by typing <code>?sample_gs_walk</code> in the interactive terminal.</p>
<p>For a more detailed walkthrough of how to use this package, please see the Jupyter notebook <code>walkthrough.ipynb</code> in the <code>notebooks</code> directory.</p>
<h2><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Related Packages</h2>
<p>We also developed an R wrapper for GSWDesign, which you can <a href="https://github.com/fsavje/gswdesign-R">find here</a>.</p>
<h2><a id="user-content-support" class="anchor" aria-hidden="true" href="#support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Support</h2>
<p>The development of this package was supported in part by by NSF Grant CCF-1562041, ONR Awards
N00014-16-2374 and N00014-20-1-2335, a Simons Investigator Award to Daniel Spielman,
and an NSF Graduate Research Fellowship (DGE1122492) awarded to Christopher Harshaw.</p>
</article></div>