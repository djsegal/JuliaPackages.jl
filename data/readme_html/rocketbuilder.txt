<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-rocket-builder" class="anchor" aria-hidden="true" href="#rocket-builder"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Rocket Builder</h1>
<p dir="auto"><a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width: 100%;"></a></p>
<p dir="auto">A package for educational use. It is mainly for creating a Gtk3 GUI for manipulating objects created in the Rockets package.</p>
<h2 dir="auto"><a id="user-content-gtk-resources" class="anchor" aria-hidden="true" href="#gtk-resources"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GTK Resources</h2>
<p dir="auto">While developing a GTK application, these are useful resources</p>
<ul dir="auto">
<li><a href="https://docs.gtk.org/gtk3/visual_index.html" rel="nofollow">Widget</a> - Visual overview over GTK3 widgets.</li>
<li><a href="https://docs.gtk.org/gtk3/class.Builder.html" rel="nofollow">GtkBuilder</a> - Used to load <code>.glade</code> UI design files.</li>
</ul>
<h2 dir="auto"><a id="user-content-data" class="anchor" aria-hidden="true" href="#data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Data</h2>
<p dir="auto">Under the <code>data</code> directory we have <code>rockets.sql</code> which contains SQL statements needed to create the <code>rockets.db</code> SQLite3 database.</p>
<h2 dir="auto"><a id="user-content-source-code" class="anchor" aria-hidden="true" href="#source-code"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Source Code</h2>
<p dir="auto">The <code>rocketbuilder.jl</code> file is meant as a way of easily launching the application. It needs some more work to function properly.</p>
<p dir="auto">Under the <code>src</code> directory you find these files of significance:</p>
<ul dir="auto">
<li><code>db.jl</code> - Code interfacing with SQLite3 database found in <code>data/rockets.db</code></li>
<li><code>tank-editor.jl</code> - Shows a GUI for adding and removing data for propellant tanks to the database.</li>
</ul>
<h2 dir="auto"><a id="user-content-usable-observations-from-development" class="anchor" aria-hidden="true" href="#usable-observations-from-development"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usable Observations From Development</h2>
<p dir="auto">Not all SQL statements support placeholdres such as <code>?</code>. For instance this is possible:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="query = DBInterface.prepare(db, &quot;INSERT INTO Tanks VALUES(?, ?, ?)&quot;)
DBInterface.execute(query, [name, tank.total_mass, tank.dry_mass])"><pre class="notranslate"><code>query = DBInterface.prepare(db, "INSERT INTO Tanks VALUES(?, ?, ?)")
DBInterface.execute(query, [name, tank.total_mass, tank.dry_mass])
</code></pre></div>
<p dir="auto">However using a placeholder for the <code>SELECT</code> statement doesn't seem to work.</p>
<p dir="auto">When working with Gtk3 keep in mind that you are working with a C library with a minimal wrapper. For instance there has been no attempt to wrap the setting of all properties with a Julia function. Gtk objects are GObjects which have properties which can be looked up and set at runtime. In julia we do it like this:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="set_gtk_property!(win, :title, &quot;New title&quot;)"><pre class="notranslate"><code>set_gtk_property!(win, :title, "New title")
</code></pre></div>
<p dir="auto">This applies to windows, buttons, layout or pretty much anything. You can get a property like this:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="get_gtk_property(win, :title, String)"><pre class="notranslate"><code>get_gtk_property(win, :title, String)
</code></pre></div>
<p dir="auto">Notice how you got to write that you want a <code>String</code> back. Don't get clever about this. It is not smart enough to convert a string to a number. So when getting the content of a textfield you need to convert to a number explicitly.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="drytxt = get_gtk_property(dryentry, :text, String)
totaltxt = get_gtk_property(totalnetry, :text, String)

dry = parse(Float64, drytxt)
total = parse(Float64, totaltxt"><pre class="notranslate"><code>drytxt = get_gtk_property(dryentry, :text, String)
totaltxt = get_gtk_property(totalnetry, :text, String)

dry = parse(Float64, drytxt)
total = parse(Float64, totaltxt
</code></pre></div>
<p dir="auto">Remember when done with the database to close it:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="db = opendb()

# Do a bunch of stuff

DBInterface.close!(db)"><pre class="notranslate"><code>db = opendb()

# Do a bunch of stuff

DBInterface.close!(db)
</code></pre></div>
<h2 dir="auto"><a id="user-content-tree-view" class="anchor" aria-hidden="true" href="#tree-view"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tree View</h2>
<p dir="auto">One of the more complex controls in Gtk is the tree view so lets have some remarks on how to use it.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="model = GtkTreeModel(list)
tree = GtkTreeView(model)"><pre class="notranslate"><code>model = GtkTreeModel(list)
tree = GtkTreeView(model)
</code></pre></div>
<p dir="auto">You got different ways of rendering a cell in the tree view. You need
one of these if you are showing text.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="txtcell = GtkCellRendererText()"><pre class="notranslate"><code>txtcell = GtkCellRendererText()
</code></pre></div>
<p dir="auto">The tree view can have multiple columns. Here we are defining only a single column with the header <code>Tank</code>. The list store provided to the model can have many columns. <code>Dict([("text", 0)])</code> says we are using a <code>txtcell</code> renderer for the value in the first column in the list store.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="col1 = GtkTreeViewColumn(&quot;Tank&quot;, txtcell, Dict([(&quot;text&quot;,0)]))
push!(tree, col1)"><pre class="notranslate"><code>col1 = GtkTreeViewColumn("Tank", txtcell, Dict([("text",0)]))
push!(tree, col1)
</code></pre></div>
</article></div>