<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://Marco-Congedo.github.io/FourierAnalysis.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p><a target="_blank" rel="noopener noreferrer" href="/docs/src/assets/Fig1.jpg"><img src="/docs/src/assets/Fig1.jpg" alt="" style="max-width:100%;"></a></p>
<p><strong>FourierAnalysis</strong> is a signal-processing <a href="https://julialang.org/" rel="nofollow"><strong>Julia</strong></a> package for
performing the analysis of <em>real multivariate data</em> (e.g., multivariate time series)
in the <em>frequency</em> domain and in the <em>time-frequency</em> domain. It is based upon the
<a href="https://github.com/JuliaDSP/DSP.jl">DSP.jl</a>, <a href="https://github.com/JuliaMath/FFTW.jl">FFTW.jl</a> and <a href="https://github.com/JuliaMath/AbstractFFTs.jl">AbstractFFTs.jl</a> packages.</p>
<p>In the frequency domain <em>FourierAnalysis</em> computes <strong>spectra</strong>, <em>linear</em> and
<em>non-linear</em> <strong>cross-spectral matrices</strong> and several <em>linear</em> and <em>non-linear</em> <strong>coherence matrices</strong> using the sliding-windows <a href="https://en.wikipedia.org/wiki/Welch%27s_method" rel="nofollow">Welch method</a>.</p>
<p>Time-frequency representations are obtained applying a
<a href="https://en.wikipedia.org/wiki/Filter_bank" rel="nofollow">filter-bank</a> and the
<a href="https://en.wikipedia.org/wiki/Hilbert_transform" rel="nofollow">Hilbert transform</a>.
This way <em>FourierAnalysis</em> computes the <strong>analytic signal</strong>, from which the <strong>instantaneous amplitude</strong> (envelope) and <strong>instantaneous phase</strong> are obtained, along with several popular <em>linear</em> and <em>non-linear</em>, <em>weighted</em>, <em>univariate</em> and <em>bivariate</em> statistics, such as</p>
<ul>
<li><strong>mean amplitude</strong></li>
<li><strong>mean direction</strong></li>
<li><strong>phase concentration</strong> (the non-linear version of which is the directional statistic <em>circular mean resultant length</em>)</li>
<li><strong>comodulation</strong></li>
<li><strong>coherence</strong> (the non-linear version of which is known as <em>phase-locking values</em> or <em>phase coherence</em>).</li>
</ul>
<p>All these measures are provided in a simple and unified fashion, following the conceptual approach previously illustrated in
in the context of electroencephalography (<a href="https://hal.archives-ouvertes.fr/hal-01868538v2/document" rel="nofollow">Congedo, 2018</a>), for which all default settings have been tailored. The package has been written with the <em>do-it-with-one-line</em> spirit, but without sacrificing full control over relevant options.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>Execute the following command in Julia's REPL:</p>
<pre><code>]add FourierAnalysis
</code></pre>
<h2><a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Disclaimer</h2>
<p>Although fully functional, this package is still in a pre-release stage. It needs throughout testing.
Independent reviewers are more then welcome.</p>
<h2><a id="user-content-about-the-author" class="anchor" aria-hidden="true" href="#about-the-author"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>About the Author</h2>
<p><a href="https://sites.google.com/site/marcocongedo" rel="nofollow">Marco Congedo</a> is
a research scientist of <a href="http://www.cnrs.fr/en" rel="nofollow">CNRS</a> (Centre National de la Recherche Scientifique), working at <a href="https://www.univ-grenoble-alpes.fr/english/" rel="nofollow">UGA</a> (University of Grenoble Alpes), in Grenoble (France), the city where Jean-Baptiste Joseph Fourier has served as a Prefect:).</p>
<h2><a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contact</h2>
<p>first name <em>dot</em> last name <em>at</em> gmail <em>dot</em> com</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Examples</h2>
<pre><code>using FourierAnalysis, Plots

# Set sampling rate (sr) and FFT window length (wl):
sr, wl = 128, 128

# Generate a sinusoidal wave at 10Hz with peak amplitude 0.5 and add some white noise:
v = sinusoidal(0.5, 10, sr, wl*16) + randn(wl*16)

# Get the power spectrum with a rectangular tapering window:
S = spectra(v, sr, wl; tapering=rectangular)

# Plot the power spectrum:
plot(S; maxf=24)

# The same syntax applies in the case of multivariate data (e.g., 4 time-series):
V = randn(t*16, 4)
S = spectra(V, sr, wl; tapering=hamming)
plot(S)

# Get the analytic amplitude in the time-Frequency domain:
A = TFamplitude(v, sr, wl; fmax=24)

# plot the analytic amplitude:
heatmap(A)

</code></pre>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://Marco-Congedo.github.io/FourierAnalysis.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
</article></div>