<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-determinantalpointprocessesjl" class="anchor" aria-hidden="true" href="#determinantalpointprocessesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DeterminantalPointProcesses.jl</h1>
<p><a href="https://travis-ci.org/theogf/DeterminantalPointProcesses.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4260c8d665fff4e6c2e88ab79e9dfc8fe02deb6f/68747470733a2f2f7472617669732d63692e6f72672f7468656f67662f44657465726d696e616e74616c506f696e7450726f6365737365732e6a6c2e737667" alt="Build Badge" data-canonical-src="https://travis-ci.org/theogf/DeterminantalPointProcesses.jl.svg" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/theogf/DeterminantalPointProcesses.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/81def92bb865db0683017d5d90e74a42690e7769/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7468656f67662f44657465726d696e616e74616c506f696e7450726f6365737365732e6a6c2f62616467652e737667" alt="Coverage Badge" data-canonical-src="https://coveralls.io/repos/github/theogf/DeterminantalPointProcesses.jl/badge.svg" style="max-width:100%;"></a></p>
<p>!<strong>Disclaimer</strong>! This package is based on the work of <a href="https://github.com/alshedivat/DeterminantalPointProcesses.jl">alshedivat/DeterminantalPointProcesses.jl</a> and aims at keeping this package alive.</p>
<p>An efficient implementation of Determinantal Point Processes (DPP) in Julia.</p>
<h3><a id="user-content-current-features" class="anchor" aria-hidden="true" href="#current-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Current features</h3>
<ul>
<li>Exact sampling [1] from DPP and k-DPP (can be executed in parallel).</li>
<li>MCMC sampling [2] from DPP and k-DPP (parallelization will be added).</li>
<li><code>pmf</code> and <code>logpmf</code> evaluation functions [1] for DPP and k-DPP.</li>
</ul>
<h3><a id="user-content-planned-features" class="anchor" aria-hidden="true" href="#planned-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Planned features</h3>
<ul>
<li>Exact sampling using dual representation [1].</li>
<li>Better integration with MCMC frameworks in Julia (such as <a href="https://github.com/JuliaStats/Lora.jl">Lora.jl</a>).</li>
<li>Fitting DPP and k-DPP models to data [3, 4].</li>
<li>Reduced rank DPP and k-DPP.</li>
<li>Kronecker Determinantal Point Processes [5].</li>
</ul>
<h3><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing</h3>
<p>Currently, no timeline, no milestones, no promisses.</p>
<p>Contributions are sought (especially if you are an author of a related paper).
Bug reports are welcome.</p>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h2>
<p>[1] Kulesza, A., and B. Taskar. Determinantal point processes for machine learning. <a href="https://arxiv.org/abs/1207.6083" rel="nofollow">arXiv:1207.6083</a>, 2012.</p>
<p>[2] Kang, B. Fast determinantal point process sampling with application to clustering. NIPS, 2013.</p>
<p>[3] Gillenwater, J., A. Kulesza, E. Fox, and B. Taskar. Expectation-Maximization for learning Determinantal Point Processes. NIPS, 2014.</p>
<p>[4] Mariet, Z., and S. Sra. Fixed-point algorithms for learning determinantal point processes. NIPS, 2015.</p>
<p>[5] Mariet, Z., and S. Sra. Kronecker Determinantal Point Processes. <a href="https://arxiv.org/abs/1605.08374" rel="nofollow">arXiv:1605.08374</a>, 2016.</p>
</article></div>