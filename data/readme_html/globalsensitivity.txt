<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-globalsensitivityjl" class="anchor" aria-hidden="true" href="#globalsensitivityjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GlobalSensitivity.jl</h1>
<p dir="auto"><a href="https://julialang.zulipchat.com/#narrow/stream/279055-sciml-bridged" rel="nofollow"><img src="https://camo.githubusercontent.com/667867fc71b8b3c9ed350ce154a04d38adca002ecfa38edf519284e0365ee553/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d5a756c6970266d6573736167653d6368617426636f6c6f723d393535386232266c6162656c436f6c6f723d333839383236" alt="Join the chat at https://julialang.zulipchat.com #sciml-bridged" data-canonical-src="https://img.shields.io/static/v1?label=Zulip&amp;message=chat&amp;color=9558b2&amp;labelColor=389826" style="max-width: 100%;"></a>
<a href="https://docs.sciml.ai/GlobalSensitivity/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/88037a523f970520933771e764f5abff55de9382efc91cd89dd43ef0bb49a85f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d5363694d4c2d626c75652e737667" alt="Global Docs" data-canonical-src="https://img.shields.io/badge/docs-SciML-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://codecov.io/gh/SciML/GlobalSensitivity.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/38bd3f160e58b0d4839f7de6f74ecebbd3ad1ba9973c4a0fd3ad0be7e25dd48a/68747470733a2f2f636f6465636f762e696f2f67682f5363694d4c2f476c6f62616c53656e73697469766974792e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/SciML/GlobalSensitivity.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/GlobalSensitivity.jl/actions?query=workflow%3ACI"><img src="https://github.com/SciML/GlobalSensitivity.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/SciMLStyle"><img src="https://camo.githubusercontent.com/3e16f03bad047817fbc07f49307817ed7919ef79c339dc75ad4ce813012c3e0b/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d636f64652532307374796c65266d6573736167653d5363694d4c26636f6c6f723d393535386232266c6162656c436f6c6f723d333839383236" alt="SciML Code Style" data-canonical-src="https://img.shields.io/static/v1?label=code%20style&amp;message=SciML&amp;color=9558b2&amp;labelColor=389826" style="max-width: 100%;"></a>
<a href="https://doi.org/10.21105/joss.04561" rel="nofollow"><img src="https://camo.githubusercontent.com/67933c434c2cddd371f98b7cf5b80466b9339f71e3ab72465eab933d857ecfae/68747470733a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30343536312f7374617475732e737667" alt="DOI" data-canonical-src="https://joss.theoj.org/papers/10.21105/joss.04561/status.svg" style="max-width: 100%;"></a></p>
<p dir="auto">GlobalSensitivity.jl package contains implementation of some the most popular GSA methods. Currently it supports Delta Moment-Independent, DGSM, EASI, eFAST, Morris, Fractional Factorial, RBD-FAST, Sobol and Regression based sensitivity methods.</p>
<h2 dir="auto"><a id="user-content-tutorials-and-documentation" class="anchor" aria-hidden="true" href="#tutorials-and-documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tutorials and Documentation</h2>
<p dir="auto">For information on using the package,
<a href="https://docs.sciml.ai/GlobalSensitivity/stable/" rel="nofollow">see the stable documentation</a>. Use the
<a href="https://docs.sciml.ai/GlobalSensitivity/dev/" rel="nofollow">in-development documentation</a> for the version of
the documentation, which contains the unreleased features.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The GlobalSensitivity.jl package can be installed with julia's package manager as shown below:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;GlobalSensitivity&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>GlobalSensitivity<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-general-interface" class="anchor" aria-hidden="true" href="#general-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>General Interface</h2>
<p dir="auto">The general interface for performing global sensitivity analysis using this package is:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="res = gsa(f, method, param_range; samples, batch=false)"><pre>res <span class="pl-k">=</span> <span class="pl-c1">gsa</span>(f, method, param_range; samples, batch<span class="pl-k">=</span><span class="pl-c1">false</span>)</pre></div>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<h3 dir="auto"><a id="user-content-sobol-method-on-the-ishigami-function" class="anchor" aria-hidden="true" href="#sobol-method-on-the-ishigami-function"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Sobol method on the <a href="https://www.sfu.ca/~ssurjano/ishigami.html" rel="nofollow">Ishigami function</a>.</h3>
<p dir="auto">Serial execution</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function ishi(X)
    A = 7
    B = 0.1
    sin(X[1]) + A * sin(X[2])^2 + B * X[3]^4 * sin(X[1])
end

n = 600000
lb = -ones(4) * π
ub = ones(4) * π
sampler = SobolSample()
A, B = QuasiMonteCarlo.generate_design_matrices(n, lb, ub, sampler)

res1 = gsa(ishi, Sobol(order = [0, 1, 2]), A, B)"><pre><span class="pl-k">function</span> <span class="pl-en">ishi</span>(X)
    A <span class="pl-k">=</span> <span class="pl-c1">7</span>
    B <span class="pl-k">=</span> <span class="pl-c1">0.1</span>
    <span class="pl-c1">sin</span>(X[<span class="pl-c1">1</span>]) <span class="pl-k">+</span> A <span class="pl-k">*</span> <span class="pl-c1">sin</span>(X[<span class="pl-c1">2</span>])<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> B <span class="pl-k">*</span> X[<span class="pl-c1">3</span>]<span class="pl-k">^</span><span class="pl-c1">4</span> <span class="pl-k">*</span> <span class="pl-c1">sin</span>(X[<span class="pl-c1">1</span>])
<span class="pl-k">end</span>

n <span class="pl-k">=</span> <span class="pl-c1">600000</span>
lb <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">ones</span>(<span class="pl-c1">4</span>) <span class="pl-k">*</span> π
ub <span class="pl-k">=</span> <span class="pl-c1">ones</span>(<span class="pl-c1">4</span>) <span class="pl-k">*</span> π
sampler <span class="pl-k">=</span> <span class="pl-c1">SobolSample</span>()
A, B <span class="pl-k">=</span> QuasiMonteCarlo<span class="pl-k">.</span><span class="pl-c1">generate_design_matrices</span>(n, lb, ub, sampler)

res1 <span class="pl-k">=</span> <span class="pl-c1">gsa</span>(ishi, <span class="pl-c1">Sobol</span>(order <span class="pl-k">=</span> [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>]), A, B)</pre></div>
<p dir="auto">Using batching interface</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function ishi_batch(X)
    A = 7
    B = 0.1
    @. sin(X[1, :]) + A * sin(X[2, :])^2 + B * X[3, :]^4 * sin(X[1, :])
end

res2 = gsa(ishi_batch, Sobol(), A, B, batch = true)"><pre><span class="pl-k">function</span> <span class="pl-en">ishi_batch</span>(X)
    A <span class="pl-k">=</span> <span class="pl-c1">7</span>
    B <span class="pl-k">=</span> <span class="pl-c1">0.1</span>
    <span class="pl-c1">@.</span> <span class="pl-c1">sin</span>(X[<span class="pl-c1">1</span>, :]) <span class="pl-k">+</span> A <span class="pl-k">*</span> <span class="pl-c1">sin</span>(X[<span class="pl-c1">2</span>, :])<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> B <span class="pl-k">*</span> X[<span class="pl-c1">3</span>, :]<span class="pl-k">^</span><span class="pl-c1">4</span> <span class="pl-k">*</span> <span class="pl-c1">sin</span>(X[<span class="pl-c1">1</span>, :])
<span class="pl-k">end</span>

res2 <span class="pl-k">=</span> <span class="pl-c1">gsa</span>(ishi_batch, <span class="pl-c1">Sobol</span>(), A, B, batch <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<h3 dir="auto"><a id="user-content-regression-based-and-morris-method-sensitivity-analysis-of-lotka-volterra-model" class="anchor" aria-hidden="true" href="#regression-based-and-morris-method-sensitivity-analysis-of-lotka-volterra-model"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Regression based and Morris method sensitivity analysis of Lotka Volterra model.</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GlobalSensitivity, QuasiMonteCarlo, OrdinaryDiffEq, Statistics, CairoMakie

function f(du,u,p,t)
  du[1] = p[1]*u[1] - p[2]*u[1]*u[2] #prey
  du[2] = -p[3]*u[2] + p[4]*u[1]*u[2] #predator
end

u0 = [1.0;1.0]
tspan = (0.0,10.0)
p = [1.5,1.0,3.0,1.0]
prob = ODEProblem(f,u0,tspan,p)
t = collect(range(0, stop=10, length=200))


f1 = function (p)
    prob1 = remake(prob;p=p)
    sol = solve(prob1,Tsit5();saveat=t)
    return [mean(sol[1,:]), maximum(sol[2,:])]
end

bounds = [[1,5],[1,5],[1,5],[1,5]]

reg_sens = gsa(f1, RegressionGSA(true), bounds)
fig = Figure(resolution = (600, 400))
ax, hm = CairoMakie.heatmap(fig[1,1], reg_sens.partial_correlation,
                            figure = (resolution = (300, 200),),
                            axis = (xticksvisible = false,
                            yticksvisible = false,
                            yticklabelsvisible = false,
                            xticklabelsvisible = false,
                            title = &quot;Partial correlation&quot;))
Colorbar(fig[1, 2], hm)
ax, hm = CairoMakie.heatmap(fig[2,1], reg_sens.standard_regression,
                            figure = (resolution = (300, 200),),
                            axis = (xticksvisible = false,
                            yticksvisible = false,
                            yticklabelsvisible = false,
                            xticklabelsvisible = false,
                            title = &quot;Standard regression&quot;))
Colorbar(fig[2, 2], hm)
fig"><pre><span class="pl-k">using</span> GlobalSensitivity, QuasiMonteCarlo, OrdinaryDiffEq, Statistics, CairoMakie

<span class="pl-k">function</span> <span class="pl-en">f</span>(du,u,p,t)
  du[<span class="pl-c1">1</span>] <span class="pl-k">=</span> p[<span class="pl-c1">1</span>]<span class="pl-k">*</span>u[<span class="pl-c1">1</span>] <span class="pl-k">-</span> p[<span class="pl-c1">2</span>]<span class="pl-k">*</span>u[<span class="pl-c1">1</span>]<span class="pl-k">*</span>u[<span class="pl-c1">2</span>] <span class="pl-c"><span class="pl-c">#</span>prey</span>
  du[<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-k">-</span>p[<span class="pl-c1">3</span>]<span class="pl-k">*</span>u[<span class="pl-c1">2</span>] <span class="pl-k">+</span> p[<span class="pl-c1">4</span>]<span class="pl-k">*</span>u[<span class="pl-c1">1</span>]<span class="pl-k">*</span>u[<span class="pl-c1">2</span>] <span class="pl-c"><span class="pl-c">#</span>predator</span>
<span class="pl-k">end</span>

u0 <span class="pl-k">=</span> [<span class="pl-c1">1.0</span>;<span class="pl-c1">1.0</span>]
tspan <span class="pl-k">=</span> (<span class="pl-c1">0.0</span>,<span class="pl-c1">10.0</span>)
p <span class="pl-k">=</span> [<span class="pl-c1">1.5</span>,<span class="pl-c1">1.0</span>,<span class="pl-c1">3.0</span>,<span class="pl-c1">1.0</span>]
prob <span class="pl-k">=</span> <span class="pl-c1">ODEProblem</span>(f,u0,tspan,p)
t <span class="pl-k">=</span> <span class="pl-c1">collect</span>(<span class="pl-c1">range</span>(<span class="pl-c1">0</span>, stop<span class="pl-k">=</span><span class="pl-c1">10</span>, length<span class="pl-k">=</span><span class="pl-c1">200</span>))


f1 <span class="pl-k">=</span> <span class="pl-k">function</span> (p)
    prob1 <span class="pl-k">=</span> <span class="pl-c1">remake</span>(prob;p<span class="pl-k">=</span>p)
    sol <span class="pl-k">=</span> <span class="pl-c1">solve</span>(prob1,<span class="pl-c1">Tsit5</span>();saveat<span class="pl-k">=</span>t)
    <span class="pl-k">return</span> [<span class="pl-c1">mean</span>(sol[<span class="pl-c1">1</span>,:]), <span class="pl-c1">maximum</span>(sol[<span class="pl-c1">2</span>,:])]
<span class="pl-k">end</span>

bounds <span class="pl-k">=</span> [[<span class="pl-c1">1</span>,<span class="pl-c1">5</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">5</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">5</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">5</span>]]

reg_sens <span class="pl-k">=</span> <span class="pl-c1">gsa</span>(f1, <span class="pl-c1">RegressionGSA</span>(<span class="pl-c1">true</span>), bounds)
fig <span class="pl-k">=</span> <span class="pl-c1">Figure</span>(resolution <span class="pl-k">=</span> (<span class="pl-c1">600</span>, <span class="pl-c1">400</span>))
ax, hm <span class="pl-k">=</span> CairoMakie<span class="pl-k">.</span><span class="pl-c1">heatmap</span>(fig[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>], reg_sens<span class="pl-k">.</span>partial_correlation,
                            figure <span class="pl-k">=</span> (resolution <span class="pl-k">=</span> (<span class="pl-c1">300</span>, <span class="pl-c1">200</span>),),
                            axis <span class="pl-k">=</span> (xticksvisible <span class="pl-k">=</span> <span class="pl-c1">false</span>,
                            yticksvisible <span class="pl-k">=</span> <span class="pl-c1">false</span>,
                            yticklabelsvisible <span class="pl-k">=</span> <span class="pl-c1">false</span>,
                            xticklabelsvisible <span class="pl-k">=</span> <span class="pl-c1">false</span>,
                            title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Partial correlation<span class="pl-pds">"</span></span>))
<span class="pl-c1">Colorbar</span>(fig[<span class="pl-c1">1</span>, <span class="pl-c1">2</span>], hm)
ax, hm <span class="pl-k">=</span> CairoMakie<span class="pl-k">.</span><span class="pl-c1">heatmap</span>(fig[<span class="pl-c1">2</span>,<span class="pl-c1">1</span>], reg_sens<span class="pl-k">.</span>standard_regression,
                            figure <span class="pl-k">=</span> (resolution <span class="pl-k">=</span> (<span class="pl-c1">300</span>, <span class="pl-c1">200</span>),),
                            axis <span class="pl-k">=</span> (xticksvisible <span class="pl-k">=</span> <span class="pl-c1">false</span>,
                            yticksvisible <span class="pl-k">=</span> <span class="pl-c1">false</span>,
                            yticklabelsvisible <span class="pl-k">=</span> <span class="pl-c1">false</span>,
                            xticklabelsvisible <span class="pl-k">=</span> <span class="pl-c1">false</span>,
                            title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Standard regression<span class="pl-pds">"</span></span>))
<span class="pl-c1">Colorbar</span>(fig[<span class="pl-c1">2</span>, <span class="pl-c1">2</span>], hm)
fig</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/23134958/127019339-607b8d0b-6c38-4a18-b62e-e3ea0ae40941.png"><img src="https://user-images.githubusercontent.com/23134958/127019339-607b8d0b-6c38-4a18-b62e-e3ea0ae40941.png" alt="heatmapreg" style="max-width: 100%;"></a></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using StableRNGs
_rng = StableRNG(1234)
morris_sens = gsa(f1, Morris(), bounds, rng = _rng)
fig = Figure(resolution = (300, 200))
scatter(fig[1,1], [1,2,3,4], morris_sens.means_star[1,:],
        color = :green, axis = (xticksvisible = false,
        xticklabelsvisible = false, title = &quot;Prey (Morris)&quot;,))
scatter(fig[1,2], [1,2,3,4], morris_sens.means_star[2,:],
        color = :red, axis = (xticksvisible = false,
        xticklabelsvisible = false, title = &quot;Predator (Morris)&quot;,))
fig"><pre><span class="pl-k">using</span> StableRNGs
_rng <span class="pl-k">=</span> <span class="pl-c1">StableRNG</span>(<span class="pl-c1">1234</span>)
morris_sens <span class="pl-k">=</span> <span class="pl-c1">gsa</span>(f1, <span class="pl-c1">Morris</span>(), bounds, rng <span class="pl-k">=</span> _rng)
fig <span class="pl-k">=</span> <span class="pl-c1">Figure</span>(resolution <span class="pl-k">=</span> (<span class="pl-c1">300</span>, <span class="pl-c1">200</span>))
<span class="pl-c1">scatter</span>(fig[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>], [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>], morris_sens<span class="pl-k">.</span>means_star[<span class="pl-c1">1</span>,:],
        color <span class="pl-k">=</span> <span class="pl-c1">:green</span>, axis <span class="pl-k">=</span> (xticksvisible <span class="pl-k">=</span> <span class="pl-c1">false</span>,
        xticklabelsvisible <span class="pl-k">=</span> <span class="pl-c1">false</span>, title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Prey (Morris)<span class="pl-pds">"</span></span>,))
<span class="pl-c1">scatter</span>(fig[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>], [<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>], morris_sens<span class="pl-k">.</span>means_star[<span class="pl-c1">2</span>,:],
        color <span class="pl-k">=</span> <span class="pl-c1">:red</span>, axis <span class="pl-k">=</span> (xticksvisible <span class="pl-k">=</span> <span class="pl-c1">false</span>,
        xticklabelsvisible <span class="pl-k">=</span> <span class="pl-c1">false</span>, title <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Predator (Morris)<span class="pl-pds">"</span></span>,))
fig</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/23134958/127019346-2b5548c5-f4ec-4547-9f8f-af3e4b4c317c.png"><img src="https://user-images.githubusercontent.com/23134958/127019346-2b5548c5-f4ec-4547-9f8f-af3e4b4c317c.png" alt="morrisscat" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-citing" class="anchor" aria-hidden="true" href="#citing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citing</h2>
<p dir="auto">If you use this software in your work, please cite:</p>
<div class="highlight highlight-text-bibtex notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@article{dixit2022globalsensitivity,
  title={GlobalSensitivity. jl: Performant and Parallel Global Sensitivity Analysis with Julia},
  author={Dixit, Vaibhav Kumar and Rackauckas, Christopher},
  journal={Journal of Open Source Software},
  volume={7},
  number={76},
  pages={4561},
  year={2022}
}"><pre><span class="pl-k">@article</span>{<span class="pl-en">dixit2022globalsensitivity</span>,
  <span class="pl-s">title</span>=<span class="pl-s"><span class="pl-pds">{</span>GlobalSensitivity. jl: Performant and Parallel Global Sensitivity Analysis with Julia<span class="pl-pds">}</span></span>,
  <span class="pl-s">author</span>=<span class="pl-s"><span class="pl-pds">{</span>Dixit, Vaibhav Kumar and Rackauckas, Christopher<span class="pl-pds">}</span></span>,
  <span class="pl-s">journal</span>=<span class="pl-s"><span class="pl-pds">{</span>Journal of Open Source Software<span class="pl-pds">}</span></span>,
  <span class="pl-s">volume</span>=<span class="pl-s"><span class="pl-pds">{</span>7<span class="pl-pds">}</span></span>,
  <span class="pl-s">number</span>=<span class="pl-s"><span class="pl-pds">{</span>76<span class="pl-pds">}</span></span>,
  <span class="pl-s">pages</span>=<span class="pl-s"><span class="pl-pds">{</span>4561<span class="pl-pds">}</span></span>,
  <span class="pl-s">year</span>=<span class="pl-s"><span class="pl-pds">{</span>2022<span class="pl-pds">}</span></span>
}</pre></div>
</article></div>