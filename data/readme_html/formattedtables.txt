<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-formattedtables" class="anchor" aria-hidden="true" href="#formattedtables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FormattedTables</h1>
<p>A Julia package for formatting tabular data.</p>
<p><a href="https://travis-ci.org/tom--lee/FormattedTables.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/067a440a245a1a2017f8b0300888e51f6e355ec5190488eb064b134f724b2e0f/68747470733a2f2f7472617669732d63692e6f72672f746f6d2d2d6c65652f466f726d61747465645461626c65732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/tom--lee/FormattedTables.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package contains a single function, <code>FormattedTables.write</code>, used to write
tabular data stored in an object supporting the <a href="https://github.com/JuliaData/Tables.jl">Tables.jl
interface</a>. For each column, a
<code>FormatSpec</code>, provided by <a href="https://github.com/JuliaString/Format.jl">the Format.jl
package</a>, can be used to format the
column.</p>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h1>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="FormattedTables.write(
    file::Union{IO,String},
    table;
    delim = ' ',
    column_names=Tables.schema(table).names,
    formatters=Dict(name=&gt;&quot;&quot; for name in column_names),
    header_fmt=Dict(name=&gt;&quot;&quot; for name in column_names),
)
"><pre>FormattedTables<span class="pl-k">.</span><span class="pl-c1">write</span>(
    file<span class="pl-k">::</span><span class="pl-c1">Union{IO,String}</span>,
    table;
    delim <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">'</span> <span class="pl-pds">'</span></span>,
    column_names<span class="pl-k">=</span>Tables<span class="pl-k">.</span><span class="pl-c1">schema</span>(table)<span class="pl-k">.</span>names,
    formatters<span class="pl-k">=</span><span class="pl-c1">Dict</span>(name<span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span> <span class="pl-k">for</span> name <span class="pl-k">in</span> column_names),
    header_fmt<span class="pl-k">=</span><span class="pl-c1">Dict</span>(name<span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span> <span class="pl-k">for</span> name <span class="pl-k">in</span> column_names),
)</pre></div>
<p>Write a <a href="https://github.com/JuliaData/Tables.jl">Tables.jl interface input</a>
to a stream or a named file using the <a href="https://github.com/JuliaString/Format.jl">format specifiers</a>
provided via the <code>formatters</code> keyword argument. The <code>formatters</code> argument must
be a dictionary, named tuple, or similar collection that can be indexed using
the column names of the table.</p>
<p>Keyword arguments include:</p>
<ul>
<li><code>delim</code>: A delimiter to print between list items.</li>
<li><code>column_names</code>: An iterable collection containing, in order, the names (as
<code>Symbol</code>s) of the columns of the table to be written.</li>
<li><code>formatters</code>: A dictionary, named tuple, or similar collection that maps
the the names (<code>Symbol</code>s) of the columns to be written to a <code>Format.FormatSpec</code>
used to format the column.</li>
<li><code>header_fmt</code>: A dictionary, named tuple, or similar collection that maps the
the names (<code>Symbol</code>s) of the columns to be written to a <code>Format.FormatSpec</code>
used to format the column headers. Set to <code>nothing</code> to skip writing column
headers.</li>
</ul>
<h1><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h1>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using FormattedTables

julia&gt; using DataFrames

julia&gt; using Format

julia&gt; using CSV

julia&gt; csv = IOBuffer(&quot;&quot;&quot;name,height,age
       Alice,1.60,21
       Bob,1.83,40
       Claire,1.75,31
       David,1.50,25
       Edith,1.68,30
       &quot;&quot;&quot;)
IOBuffer(data=UInt8[...], readable=true, writable=false, seekable=true, append=false, size=85, maxsize=Inf, ptr=1, mark=-1)

julia&gt; data = CSV.read(csv) |&gt; DataFrame
5×3 DataFrame
│ Row │ name    │ height   │ age    │
│     │ String  │ Float64  │ Int64  │
├─────┼─────────┼──────────┼────────┤
│ 1   │ Alice   │ 1.6      │ 21     │
│ 2   │ Bob     │ 1.83     │ 40     │
│ 3   │ Claire  │ 1.75     │ 31     │
│ 4   │ David   │ 1.5      │ 25     │
│ 5   │ Edith   │ 1.68     │ 30     │

julia&gt; b = PipeBuffer()
IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=false, append=true, size=0, maxsize=Inf, ptr=1, mark=-1)

julia&gt; FormattedTables.write(b, data)

julia&gt; result = String(take!(b))
&quot;name height age\nAlice 1.6 21\nBob 1.83 40\nClaire 1.75 31\nDavid 1.5 25\nEdith 1.68 30\n&quot;

julia&gt; println(result)
name height age
Alice 1.6 21
Bob 1.83 40
Claire 1.75 31
David 1.5 25
Edith 1.68 30


julia&gt; const fs = FormatSpec
FormatSpec

julia&gt; formatters = (
       name=fs(&quot;10s&quot;),
       height=fs(&quot;7.2f&quot;),
       age=fs(&quot;3d&quot;),
       )
(name = FormatSpec
  cls   = s
  typ   = s
  fill  =
  align = &lt;
  sign  = -
  width = 10
  prec  = -1
  ipre  = false
  zpad  = false
  tsep  = false
, height = FormatSpec
  cls   = f
  typ   = f
  fill  =
  align = &gt;
  sign  = -
  width = 7
  prec  = 2
  ipre  = false
  zpad  = false
  tsep  = false
, age = FormatSpec
  cls   = i
  typ   = d
  fill  =
  align = &gt;
  sign  = -
  width = 3
  prec  = -1
  ipre  = false
  zpad  = false
  tsep  = false
)

julia&gt; header_fmt = (
       name=fs(&quot;10s&quot;),
       height=fs(&quot;&gt;7s&quot;),
       age=fs(&quot;&gt;3s&quot;),
       )
(name = FormatSpec
  cls   = s
  typ   = s
  fill  =
  align = &lt;
  sign  = -
  width = 10
  prec  = -1
  ipre  = false
  zpad  = false
  tsep  = false
, height = FormatSpec
  cls   = s
  typ   = s
  fill  =
  align = &gt;
  sign  = -
  width = 7
  prec  = -1
  ipre  = false
  zpad  = false
  tsep  = false
, age = FormatSpec
  cls   = s
  typ   = s
  fill  =
  align = &gt;
  sign  = -
  width = 3
  prec  = -1
  ipre  = false
  zpad  = false
  tsep  = false
)

julia&gt; b = PipeBuffer()
IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=false, append=true, size=0, maxsize=Inf, ptr=1, mark=-1)

julia&gt; FormattedTables.write( b, data, delim = &quot; &quot;, formatters = formatters, header_fmt = header_fmt)

julia&gt; result = String(take!(b))
&quot;name        height age\nAlice         1.60  21\nBob           1.83  40\nClaire        1.75  31\nDavid         1.50  25\nEdith         1.68  30\n&quot;

julia&gt; println(result)
name        height age
Alice         1.60  21
Bob           1.83  40
Claire        1.75  31
David         1.50  25
Edith         1.68  30


julia&gt; b = PipeBuffer()
IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=false, append=true, size=0, maxsize=Inf, ptr=1, mark=-1)

julia&gt; FormattedTables.write( b, data, delim = &quot; &quot;, column_names=(:age, :name), formatters = formatters, header_fmt = header_fmt)

julia&gt; result = String(take!(b))
&quot;age name      \n 21 Alice     \n 40 Bob       \n 31 Claire    \n 25 David     \n 30 Edith     \n&quot;

julia&gt; println(result)
age name
 21 Alice
 40 Bob
 31 Claire
 25 David
 30 Edith

julia&gt; b = PipeBuffer()
IOBuffer(data=UInt8[...], readable=true, writable=true, seekable=false, append=true, size=0, maxsize=Inf, ptr=1, mark=-1)

julia&gt; FormattedTables.write( b, data, delim = &quot; &quot;, formatters = formatters, header_fmt = nothing)

julia&gt; result = String(take!(b))
&quot;Alice         1.60  21\nBob           1.83  40\nClaire        1.75  31\nDavid         1.50  25\nEdith         1.68  30\n&quot;

julia&gt; println(result)
Alice         1.60  21
Bob           1.83  40
Claire        1.75  31
David         1.50  25
Edith         1.68  30


julia&gt; FormattedTables.write(&quot;test-out.dat&quot;, data, delim = &quot; &quot;, formatters = formatters, header_fmt = header_fmt)

julia&gt; result = open(x-&gt;read(x,String), &quot;test-out.dat&quot;,)
&quot;name        height age\nAlice         1.60  21\nBob           1.83  40\nClaire        1.75  31\nDavid         1.50  25\nEdith         1.68  30\n&quot;

julia&gt; println(result)
name        height age
Alice         1.60  21
Bob           1.83  40
Claire        1.75  31
David         1.50  25
Edith         1.68  30
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> FormattedTables

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> DataFrames

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Format

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> CSV

julia<span class="pl-k">&gt;</span> csv <span class="pl-k">=</span> <span class="pl-c1">IOBuffer</span>(<span class="pl-s"><span class="pl-pds">"""</span>name,height,age</span>
<span class="pl-s">       Alice,1.60,21</span>
<span class="pl-s">       Bob,1.83,40</span>
<span class="pl-s">       Claire,1.75,31</span>
<span class="pl-s">       David,1.50,25</span>
<span class="pl-s">       Edith,1.68,30</span>
<span class="pl-s">       <span class="pl-pds">"""</span></span>)
<span class="pl-c1">IOBuffer</span>(data<span class="pl-k">=</span>UInt8[<span class="pl-k">...</span>], readable<span class="pl-k">=</span><span class="pl-c1">true</span>, writable<span class="pl-k">=</span><span class="pl-c1">false</span>, seekable<span class="pl-k">=</span><span class="pl-c1">true</span>, append<span class="pl-k">=</span><span class="pl-c1">false</span>, size<span class="pl-k">=</span><span class="pl-c1">85</span>, maxsize<span class="pl-k">=</span><span class="pl-c1">Inf</span>, ptr<span class="pl-k">=</span><span class="pl-c1">1</span>, mark<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> data <span class="pl-k">=</span> CSV<span class="pl-k">.</span><span class="pl-c1">read</span>(csv) <span class="pl-k">|&gt;</span> DataFrame
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">3</span> DataFrame
│ Row │ name    │ height   │ age    │
│     │ String  │ Float64  │ Int64  │
├─────┼─────────┼──────────┼────────┤
│ <span class="pl-c1">1</span>   │ Alice   │ <span class="pl-c1">1.6</span>      │ <span class="pl-c1">21</span>     │
│ <span class="pl-c1">2</span>   │ Bob     │ <span class="pl-c1">1.83</span>     │ <span class="pl-c1">40</span>     │
│ <span class="pl-c1">3</span>   │ Claire  │ <span class="pl-c1">1.75</span>     │ <span class="pl-c1">31</span>     │
│ <span class="pl-c1">4</span>   │ David   │ <span class="pl-c1">1.5</span>      │ <span class="pl-c1">25</span>     │
│ <span class="pl-c1">5</span>   │ Edith   │ <span class="pl-c1">1.68</span>     │ <span class="pl-c1">30</span>     │

julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">PipeBuffer</span>()
<span class="pl-c1">IOBuffer</span>(data<span class="pl-k">=</span>UInt8[<span class="pl-k">...</span>], readable<span class="pl-k">=</span><span class="pl-c1">true</span>, writable<span class="pl-k">=</span><span class="pl-c1">true</span>, seekable<span class="pl-k">=</span><span class="pl-c1">false</span>, append<span class="pl-k">=</span><span class="pl-c1">true</span>, size<span class="pl-k">=</span><span class="pl-c1">0</span>, maxsize<span class="pl-k">=</span><span class="pl-c1">Inf</span>, ptr<span class="pl-k">=</span><span class="pl-c1">1</span>, mark<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> FormattedTables<span class="pl-k">.</span><span class="pl-c1">write</span>(b, data)

julia<span class="pl-k">&gt;</span> result <span class="pl-k">=</span> <span class="pl-c1">String</span>(<span class="pl-c1">take!</span>(b))
<span class="pl-s"><span class="pl-pds">"</span>name height age<span class="pl-cce">\n</span>Alice 1.6 21<span class="pl-cce">\n</span>Bob 1.83 40<span class="pl-cce">\n</span>Claire 1.75 31<span class="pl-cce">\n</span>David 1.5 25<span class="pl-cce">\n</span>Edith 1.68 30<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">println</span>(result)
name height age
Alice <span class="pl-c1">1.6</span> <span class="pl-c1">21</span>
Bob <span class="pl-c1">1.83</span> <span class="pl-c1">40</span>
Claire <span class="pl-c1">1.75</span> <span class="pl-c1">31</span>
David <span class="pl-c1">1.5</span> <span class="pl-c1">25</span>
Edith <span class="pl-c1">1.68</span> <span class="pl-c1">30</span>


julia<span class="pl-k">&gt;</span> <span class="pl-k">const</span> fs <span class="pl-k">=</span> FormatSpec
FormatSpec

julia<span class="pl-k">&gt;</span> formatters <span class="pl-k">=</span> (
       name<span class="pl-k">=</span><span class="pl-c1">fs</span>(<span class="pl-s"><span class="pl-pds">"</span>10s<span class="pl-pds">"</span></span>),
       height<span class="pl-k">=</span><span class="pl-c1">fs</span>(<span class="pl-s"><span class="pl-pds">"</span>7.2f<span class="pl-pds">"</span></span>),
       age<span class="pl-k">=</span><span class="pl-c1">fs</span>(<span class="pl-s"><span class="pl-pds">"</span>3d<span class="pl-pds">"</span></span>),
       )
(name <span class="pl-k">=</span> FormatSpec
  cls   <span class="pl-k">=</span> s
  typ   <span class="pl-k">=</span> s
  fill  <span class="pl-k">=</span>
  align <span class="pl-k">=</span> <span class="pl-k">&lt;</span>
  sign  <span class="pl-k">=</span> <span class="pl-k">-</span>
  width <span class="pl-k">=</span> <span class="pl-c1">10</span>
  prec  <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>
  ipre  <span class="pl-k">=</span> <span class="pl-c1">false</span>
  zpad  <span class="pl-k">=</span> <span class="pl-c1">false</span>
  tsep  <span class="pl-k">=</span> <span class="pl-c1">false</span>
, height <span class="pl-k">=</span> FormatSpec
  cls   <span class="pl-k">=</span> f
  typ   <span class="pl-k">=</span> f
  fill  <span class="pl-k">=</span>
  align <span class="pl-k">=</span> <span class="pl-k">&gt;</span>
  sign  <span class="pl-k">=</span> <span class="pl-k">-</span>
  width <span class="pl-k">=</span> <span class="pl-c1">7</span>
  prec  <span class="pl-k">=</span> <span class="pl-c1">2</span>
  ipre  <span class="pl-k">=</span> <span class="pl-c1">false</span>
  zpad  <span class="pl-k">=</span> <span class="pl-c1">false</span>
  tsep  <span class="pl-k">=</span> <span class="pl-c1">false</span>
, age <span class="pl-k">=</span> FormatSpec
  cls   <span class="pl-k">=</span> i
  typ   <span class="pl-k">=</span> d
  fill  <span class="pl-k">=</span>
  align <span class="pl-k">=</span> <span class="pl-k">&gt;</span>
  sign  <span class="pl-k">=</span> <span class="pl-k">-</span>
  width <span class="pl-k">=</span> <span class="pl-c1">3</span>
  prec  <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>
  ipre  <span class="pl-k">=</span> <span class="pl-c1">false</span>
  zpad  <span class="pl-k">=</span> <span class="pl-c1">false</span>
  tsep  <span class="pl-k">=</span> <span class="pl-c1">false</span>
)

julia<span class="pl-k">&gt;</span> header_fmt <span class="pl-k">=</span> (
       name<span class="pl-k">=</span><span class="pl-c1">fs</span>(<span class="pl-s"><span class="pl-pds">"</span>10s<span class="pl-pds">"</span></span>),
       height<span class="pl-k">=</span><span class="pl-c1">fs</span>(<span class="pl-s"><span class="pl-pds">"</span>&gt;7s<span class="pl-pds">"</span></span>),
       age<span class="pl-k">=</span><span class="pl-c1">fs</span>(<span class="pl-s"><span class="pl-pds">"</span>&gt;3s<span class="pl-pds">"</span></span>),
       )
(name <span class="pl-k">=</span> FormatSpec
  cls   <span class="pl-k">=</span> s
  typ   <span class="pl-k">=</span> s
  fill  <span class="pl-k">=</span>
  align <span class="pl-k">=</span> <span class="pl-k">&lt;</span>
  sign  <span class="pl-k">=</span> <span class="pl-k">-</span>
  width <span class="pl-k">=</span> <span class="pl-c1">10</span>
  prec  <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>
  ipre  <span class="pl-k">=</span> <span class="pl-c1">false</span>
  zpad  <span class="pl-k">=</span> <span class="pl-c1">false</span>
  tsep  <span class="pl-k">=</span> <span class="pl-c1">false</span>
, height <span class="pl-k">=</span> FormatSpec
  cls   <span class="pl-k">=</span> s
  typ   <span class="pl-k">=</span> s
  fill  <span class="pl-k">=</span>
  align <span class="pl-k">=</span> <span class="pl-k">&gt;</span>
  sign  <span class="pl-k">=</span> <span class="pl-k">-</span>
  width <span class="pl-k">=</span> <span class="pl-c1">7</span>
  prec  <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>
  ipre  <span class="pl-k">=</span> <span class="pl-c1">false</span>
  zpad  <span class="pl-k">=</span> <span class="pl-c1">false</span>
  tsep  <span class="pl-k">=</span> <span class="pl-c1">false</span>
, age <span class="pl-k">=</span> FormatSpec
  cls   <span class="pl-k">=</span> s
  typ   <span class="pl-k">=</span> s
  fill  <span class="pl-k">=</span>
  align <span class="pl-k">=</span> <span class="pl-k">&gt;</span>
  sign  <span class="pl-k">=</span> <span class="pl-k">-</span>
  width <span class="pl-k">=</span> <span class="pl-c1">3</span>
  prec  <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>
  ipre  <span class="pl-k">=</span> <span class="pl-c1">false</span>
  zpad  <span class="pl-k">=</span> <span class="pl-c1">false</span>
  tsep  <span class="pl-k">=</span> <span class="pl-c1">false</span>
)

julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">PipeBuffer</span>()
<span class="pl-c1">IOBuffer</span>(data<span class="pl-k">=</span>UInt8[<span class="pl-k">...</span>], readable<span class="pl-k">=</span><span class="pl-c1">true</span>, writable<span class="pl-k">=</span><span class="pl-c1">true</span>, seekable<span class="pl-k">=</span><span class="pl-c1">false</span>, append<span class="pl-k">=</span><span class="pl-c1">true</span>, size<span class="pl-k">=</span><span class="pl-c1">0</span>, maxsize<span class="pl-k">=</span><span class="pl-c1">Inf</span>, ptr<span class="pl-k">=</span><span class="pl-c1">1</span>, mark<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> FormattedTables<span class="pl-k">.</span><span class="pl-c1">write</span>( b, data, delim <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span> <span class="pl-pds">"</span></span>, formatters <span class="pl-k">=</span> formatters, header_fmt <span class="pl-k">=</span> header_fmt)

julia<span class="pl-k">&gt;</span> result <span class="pl-k">=</span> <span class="pl-c1">String</span>(<span class="pl-c1">take!</span>(b))
<span class="pl-s"><span class="pl-pds">"</span>name        height age<span class="pl-cce">\n</span>Alice         1.60  21<span class="pl-cce">\n</span>Bob           1.83  40<span class="pl-cce">\n</span>Claire        1.75  31<span class="pl-cce">\n</span>David         1.50  25<span class="pl-cce">\n</span>Edith         1.68  30<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">println</span>(result)
name        height age
Alice         <span class="pl-c1">1.60</span>  <span class="pl-c1">21</span>
Bob           <span class="pl-c1">1.83</span>  <span class="pl-c1">40</span>
Claire        <span class="pl-c1">1.75</span>  <span class="pl-c1">31</span>
David         <span class="pl-c1">1.50</span>  <span class="pl-c1">25</span>
Edith         <span class="pl-c1">1.68</span>  <span class="pl-c1">30</span>


julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">PipeBuffer</span>()
<span class="pl-c1">IOBuffer</span>(data<span class="pl-k">=</span>UInt8[<span class="pl-k">...</span>], readable<span class="pl-k">=</span><span class="pl-c1">true</span>, writable<span class="pl-k">=</span><span class="pl-c1">true</span>, seekable<span class="pl-k">=</span><span class="pl-c1">false</span>, append<span class="pl-k">=</span><span class="pl-c1">true</span>, size<span class="pl-k">=</span><span class="pl-c1">0</span>, maxsize<span class="pl-k">=</span><span class="pl-c1">Inf</span>, ptr<span class="pl-k">=</span><span class="pl-c1">1</span>, mark<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> FormattedTables<span class="pl-k">.</span><span class="pl-c1">write</span>( b, data, delim <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span> <span class="pl-pds">"</span></span>, column_names<span class="pl-k">=</span>(<span class="pl-c1">:age</span>, <span class="pl-c1">:name</span>), formatters <span class="pl-k">=</span> formatters, header_fmt <span class="pl-k">=</span> header_fmt)

julia<span class="pl-k">&gt;</span> result <span class="pl-k">=</span> <span class="pl-c1">String</span>(<span class="pl-c1">take!</span>(b))
<span class="pl-s"><span class="pl-pds">"</span>age name      <span class="pl-cce">\n</span> 21 Alice     <span class="pl-cce">\n</span> 40 Bob       <span class="pl-cce">\n</span> 31 Claire    <span class="pl-cce">\n</span> 25 David     <span class="pl-cce">\n</span> 30 Edith     <span class="pl-cce">\n</span><span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">println</span>(result)
age name
 <span class="pl-c1">21</span> Alice
 <span class="pl-c1">40</span> Bob
 <span class="pl-c1">31</span> Claire
 <span class="pl-c1">25</span> David
 <span class="pl-c1">30</span> Edith

julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">PipeBuffer</span>()
<span class="pl-c1">IOBuffer</span>(data<span class="pl-k">=</span>UInt8[<span class="pl-k">...</span>], readable<span class="pl-k">=</span><span class="pl-c1">true</span>, writable<span class="pl-k">=</span><span class="pl-c1">true</span>, seekable<span class="pl-k">=</span><span class="pl-c1">false</span>, append<span class="pl-k">=</span><span class="pl-c1">true</span>, size<span class="pl-k">=</span><span class="pl-c1">0</span>, maxsize<span class="pl-k">=</span><span class="pl-c1">Inf</span>, ptr<span class="pl-k">=</span><span class="pl-c1">1</span>, mark<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> FormattedTables<span class="pl-k">.</span><span class="pl-c1">write</span>( b, data, delim <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span> <span class="pl-pds">"</span></span>, formatters <span class="pl-k">=</span> formatters, header_fmt <span class="pl-k">=</span> <span class="pl-c1">nothing</span>)

julia<span class="pl-k">&gt;</span> result <span class="pl-k">=</span> <span class="pl-c1">String</span>(<span class="pl-c1">take!</span>(b))
<span class="pl-s"><span class="pl-pds">"</span>Alice         1.60  21<span class="pl-cce">\n</span>Bob           1.83  40<span class="pl-cce">\n</span>Claire        1.75  31<span class="pl-cce">\n</span>David         1.50  25<span class="pl-cce">\n</span>Edith         1.68  30<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">println</span>(result)
Alice         <span class="pl-c1">1.60</span>  <span class="pl-c1">21</span>
Bob           <span class="pl-c1">1.83</span>  <span class="pl-c1">40</span>
Claire        <span class="pl-c1">1.75</span>  <span class="pl-c1">31</span>
David         <span class="pl-c1">1.50</span>  <span class="pl-c1">25</span>
Edith         <span class="pl-c1">1.68</span>  <span class="pl-c1">30</span>


julia<span class="pl-k">&gt;</span> FormattedTables<span class="pl-k">.</span><span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">"</span>test-out.dat<span class="pl-pds">"</span></span>, data, delim <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span> <span class="pl-pds">"</span></span>, formatters <span class="pl-k">=</span> formatters, header_fmt <span class="pl-k">=</span> header_fmt)

julia<span class="pl-k">&gt;</span> result <span class="pl-k">=</span> <span class="pl-c1">open</span>(x<span class="pl-k">-&gt;</span><span class="pl-c1">read</span>(x,String), <span class="pl-s"><span class="pl-pds">"</span>test-out.dat<span class="pl-pds">"</span></span>,)
<span class="pl-s"><span class="pl-pds">"</span>name        height age<span class="pl-cce">\n</span>Alice         1.60  21<span class="pl-cce">\n</span>Bob           1.83  40<span class="pl-cce">\n</span>Claire        1.75  31<span class="pl-cce">\n</span>David         1.50  25<span class="pl-cce">\n</span>Edith         1.68  30<span class="pl-cce">\n</span><span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">println</span>(result)
name        height age
Alice         <span class="pl-c1">1.60</span>  <span class="pl-c1">21</span>
Bob           <span class="pl-c1">1.83</span>  <span class="pl-c1">40</span>
Claire        <span class="pl-c1">1.75</span>  <span class="pl-c1">31</span>
David         <span class="pl-c1">1.50</span>  <span class="pl-c1">25</span>
Edith         <span class="pl-c1">1.68</span>  <span class="pl-c1">30</span></pre></div>
</article></div>