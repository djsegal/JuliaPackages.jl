<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-fielddefaults" class="anchor" aria-hidden="true" href="#fielddefaults"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FieldDefaults</h1>
<p dir="auto"><a href="https://travis-ci.org/rafaqz/FieldDefaults.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/afbca0f693af9622f233b4793b5f6800f3b598c24e419731c8fa9243b4307a55/68747470733a2f2f7472617669732d63692e6f72672f72616661717a2f4669656c6444656661756c74732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/rafaqz/FieldDefaults.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/rafaqz/FieldDefaults.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a64803522a1877efc3e2b0d486d9146dde8dbc6b26dc50865d7f753b3d450207/687474703a2f2f636f6465636f762e696f2f6769746875622f72616661717a2f4669656c6444656661756c74732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/rafaqz/FieldDefaults.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">A lightweight package that adds keyword defaults to (the also lightweight!)
<a href="https://github.com/rafaqz/FieldMetadata.jl">FieldMetadata.jl</a>.</p>
<p dir="auto">The <code>@default_kw</code> macro adds a keyword arg constructor to a type:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@default_kw struct MyStruct
    foo::Int | 1
    bar::Int | 2
end

julia&gt; m = MyStruct()
julia&gt; m.foo
1

julia&gt; m.bar
2"><pre><span class="pl-c1">@default_kw</span> <span class="pl-k">struct</span> MyStruct
    foo<span class="pl-k">::</span><span class="pl-c1">Int</span> <span class="pl-k">|</span> <span class="pl-c1">1</span>
    bar<span class="pl-k">::</span><span class="pl-c1">Int</span> <span class="pl-k">|</span> <span class="pl-c1">2</span>
<span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> m <span class="pl-k">=</span> <span class="pl-c1">MyStruct</span>()
julia<span class="pl-k">&gt;</span> m<span class="pl-k">.</span>foo
<span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> m<span class="pl-k">.</span>bar
<span class="pl-c1">2</span></pre></div>
<p dir="auto">It has a similar outcome (though entirely difference mechanism) to
Parameters.jl. It has some limitations: presently it only adds an outside
constructor, and defaults can't use the other default values.</p>
<p dir="auto">But it has some other nice features. Defaults can be added to a struct that has
already been defined by prefixing <code>re</code> to the macro name, as in
FieldMetadata.jl:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="struct SomeoneElseDefined
    foo::Int
    bar::Int
end

@redefault struct SomeoneElseDefined
    foo | 7
    bar | 19
end"><pre><span class="pl-k">struct</span> SomeoneElseDefined
    foo<span class="pl-k">::</span><span class="pl-c1">Int</span>
    bar<span class="pl-k">::</span><span class="pl-c1">Int</span>
<span class="pl-k">end</span>

<span class="pl-c1">@redefault</span> <span class="pl-k">struct</span> SomeoneElseDefined
    foo <span class="pl-k">|</span> <span class="pl-c1">7</span>
    bar <span class="pl-k">|</span> <span class="pl-c1">19</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">Each default value can also be overridden by declaring a new function:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="default(::YourType, ::Type{Val{:fieldname}}) = 99"><pre class="notranslate"><code>default(::YourType, ::Type{Val{:fieldname}}) = 99
</code></pre></div>
<p dir="auto">The <code>u@default_kw</code> behaves as <code>@default_kw</code> but combines defaults
with the units metadata field in the constructor.</p>
<h2 dir="auto"><a id="user-content-additional-info" class="anchor" aria-hidden="true" href="#additional-info"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Additional info</h2>
<p dir="auto">Extra metadata fields are easy to add to a struct at definition time or
afterwards, using a <a href="https://github.com/rafaqz/FieldMetadata.jl">@metadata</a> macro.</p>
<p dir="auto">Default values of single structs or more complex composite types can be
flattened to tuples or vectors using
<a href="https://github.com/rafaqz/Flatten.jl">Flatten.jl</a>. This can be combined with
fieldnames, other metadata and current field values for generating tabular
displays, or other uses.</p>
</article></div>