<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-onerulejl" class="anchor" aria-hidden="true" href="#onerulejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>OneRule.jl</h1>
<p dir="auto">Implementation of the <em>1-Rule</em> data mining algorithm by Robert Holte (<em>"Very simple classification rules perform well on most commonly used datasets"</em> in: Machine Learning 11.1 (1993), pp. 63-90) using the Julia programming language.</p>
<p dir="auto">For more information about the algorithm see e.g.: <a href="https://datacadamia.com/data_mining/one_rule" rel="nofollow">Machine Learning - (One|Simple) Rule</a>, <a href="http://rasbt.github.io/mlxtend/user_guide/classifier/OneRClassifier/" rel="nofollow">OneRClassifier - One Rule for Classification</a> or have a look at</p>
<blockquote>
<p dir="auto">Witten, Ian H., Eibe Frank, and Mark A. Hall.
<em>Data Mining Practical Machine Learning Tools and Techniques</em>
Third Edition. Morgan Kaufmann, 2017, pp. 93-96</p>
</blockquote>
<p dir="auto">The implementation of this algorithm has started as an example for a university course in data science at <a href="https://www.karlsruhe.dhbw.de/en/general/about-us.html" rel="nofollow">Baden-WÃ¼rttemberg Cooperative State University  Karlsruhe</a>.</p>
<p dir="auto">It has beend extended to offer full functionality (e.g. for predicting) and it has been adapted to conform to common ML interfaces. It's now part of the meta-package <a href="https://alan-turing-institute.github.io/MLJ.jl/dev/" rel="nofollow">MLJ.jl</a>).</p>
<p dir="auto">The model works on categorical data for the features as well as the target class for training (using the <code>get_best_tree</code> function.) You find an example on how to use it in the <code>examples</code> directory.</p>
<p dir="auto">For a description on its use within the context of the MLJ package, just type</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using MLJ
doc(&quot;OneRuleClassifier&quot;, pkg=&quot;OneRule&quot;)"><pre><span class="pl-k">using</span> MLJ
<span class="pl-c1">doc</span>(<span class="pl-s"><span class="pl-pds">"</span>OneRuleClassifier<span class="pl-pds">"</span></span>, pkg<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>OneRule<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The core algorithm used to explain the inner workings of the OneRule model in the above-mentioned course, can still be found in the branch <code>teaching</code>.</p>
</article></div>