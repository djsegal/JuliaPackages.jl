<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-tikzqtreesjl" class="anchor" aria-hidden="true" href="#tikzqtreesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TikzQTrees.jl</h1>
<p><a href="https://travis-ci.org/dharasim/TikzQTrees.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/58cd4db070d0a758359fc1fdde83028bef4e6fa278ca9e8063d85fc02575edc7/68747470733a2f2f7472617669732d63692e6f72672f646861726173696d2f54696b7a5154726565732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dharasim/TikzQTrees.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/dharasim/TikzQTrees.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/5b935b7ea5b82452b03a95c1c652d583deff8ed9aa33cff63da5b8023168127f/687474703a2f2f636f6465636f762e696f2f6769746875622f646861726173696d2f54696b7a5154726565732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/dharasim/TikzQTrees.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Plotting trees using <a href="https://github.com/JuliaTeX/TikzPictures.jl">TikzPictures.jl</a> and the latex package <a href="https://www.ctan.org/pkg/tikz-qtree" rel="nofollow">tikz-qtree</a>.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Install the latest version of this package by:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="(v0.7) pkg&gt; add https://github.com/dharasim/TikzQTrees.jl#master
"><pre><code>(v0.7) pkg&gt; add https://github.com/dharasim/TikzQTrees.jl#master
</code></pre></div>
<p>TikzQTrees is build on top of <a href="https://github.com/JuliaTeX/TikzPictures.jl">TikzPictures.jl</a>. If you can install TikzPictures, you should also be able to use TikzQTrees.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>The package implements a wrapper type <code>TikzQTree</code> of tree data types which implement the functions</p>
<ul>
<li><code>value(tree)</code> that returns the value of the root of the tree, and</li>
<li><code>children(tree)</code> that returns an iterator over the children of the root of the tree.</li>
</ul>
<p>It also provides <code>SimpleTree</code>, an example of a type that can be wrapped into <code>TikzQTree</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="mutable struct SimpleTree{T}
    value    :: T
    children :: Vector{SimpleTree{T}}
end
"><pre><span class="pl-k">mutable struct</span> SimpleTree{T}
    value    <span class="pl-k">::</span> <span class="pl-c1">T</span>
    children <span class="pl-k">::</span> <span class="pl-c1">Vector{SimpleTree{T}}</span>
<span class="pl-k">end</span></pre></div>
<p>TikzQTrees are converted into TikzPictures to show them in the Juno plot pane and IJulia notebooks. In the REPL, the tex code of the tikz-qtree is printed.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using TikzQTrees, TikzPictures

julia&gt; tree = SimpleTree(&quot;root&quot;, [SimpleTree(&quot;left&quot;), SimpleTree(&quot;right&quot;)]);

julia&gt; TikzQTree(tree)
[.root left right ]

julia&gt; save(SVG(&quot;test_tree&quot;), TikzPicture(TikzQTree(tree)))

"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> TikzQTrees, TikzPictures

julia<span class="pl-k">&gt;</span> tree <span class="pl-k">=</span> <span class="pl-c1">SimpleTree</span>(<span class="pl-s"><span class="pl-pds">"</span>root<span class="pl-pds">"</span></span>, [<span class="pl-c1">SimpleTree</span>(<span class="pl-s"><span class="pl-pds">"</span>left<span class="pl-pds">"</span></span>), <span class="pl-c1">SimpleTree</span>(<span class="pl-s"><span class="pl-pds">"</span>right<span class="pl-pds">"</span></span>)]);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">TikzQTree</span>(tree)
[<span class="pl-k">.</span>root left right ]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">save</span>(<span class="pl-c1">SVG</span>(<span class="pl-s"><span class="pl-pds">"</span>test_tree<span class="pl-pds">"</span></span>), <span class="pl-c1">TikzPicture</span>(<span class="pl-c1">TikzQTree</span>(tree)))
</pre></div>
<p>The saved plot is:</p>
<p align="center">
  <a target="_blank" rel="noopener noreferrer" href="tree_plots/test_tree.svg"><img src="tree_plots/test_tree.svg" width="140" style="max-width:100%;"></a>
</p>
<h2><a id="user-content-one-more-thing" class="anchor" aria-hidden="true" href="#one-more-thing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>One more thing</h2>
<p>This package additionally provides the macro <code>@qtree</code> for pretty printing of Julia's syntax trees:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; qt = @qtree a * (b+c) == a*b + a*c
[.{==} [.{*} {a} [.{+} {b} {c} ] ] [.{+} [.{*} {a} {b} ] [.{*} {a} {c} ] ] ]

julia&gt; save(SVG(&quot;distributivity&quot;), TikzPicture(qt))

"><pre>julia<span class="pl-k">&gt;</span> qt <span class="pl-k">=</span> <span class="pl-c1">@qtree</span> a <span class="pl-k">*</span> (b<span class="pl-k">+</span>c) <span class="pl-k">==</span> a<span class="pl-k">*</span>b <span class="pl-k">+</span> a<span class="pl-k">*</span>c
[.{<span class="pl-k">==</span>} [.{<span class="pl-k">*</span>} {a} [.{<span class="pl-k">+</span>} {b} {c} ] ] [.{<span class="pl-k">+</span>} [.{<span class="pl-k">*</span>} {a} {b} ] [.{<span class="pl-k">*</span>} {a} {c} ] ] ]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">save</span>(<span class="pl-c1">SVG</span>(<span class="pl-s"><span class="pl-pds">"</span>distributivity<span class="pl-pds">"</span></span>), <span class="pl-c1">TikzPicture</span>(qt))
</pre></div>
<p align="center">
  <a target="_blank" rel="noopener noreferrer" href="tree_plots/distributivity.svg"><img src="tree_plots/distributivity.svg" width="300" style="max-width:100%;"></a>
</p>
<p><a href="https://github.com/JuliaTeX/TreeView.jl">TreeView.jl</a> is a related package that implements a macro <code>@tree</code> which is build on top of <a href="https://github.com/JuliaTeX/TikzGraphs.jl">TikzGraphs.jl</a>.</p>
</article></div>