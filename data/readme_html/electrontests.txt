<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-electrontests" class="anchor" aria-hidden="true" href="#electrontests"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ElectronTests</h1>
<p><a href="https://travis-ci.com/beacon-biosignals/ElectronTests.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cc2fdb20fe46ff2b2fb6f15de1b111790d18812d/68747470733a2f2f7472617669732d63692e636f6d2f626561636f6e2d62696f7369676e616c732f456c656374726f6e54657374732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/beacon-biosignals/ElectronTests.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/beacon-biosignals/ElectronTests.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/cb781bccac4b795c2607dd2c9f4c4d98a301615a/68747470733a2f2f636f6465636f762e696f2f67682f626561636f6e2d62696f7369676e616c732f456c656374726f6e54657374732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/beacon-biosignals/ElectronTests.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Build for and with JSServe!</p>
<p>Usage:
Allows you to run javascript inside your app to test all sorts of values:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ElectronTests
<span class="pl-k">using</span> JSServe<span class="pl-k">:</span> <span class="pl-c1">@js_str</span>, Slider, Button, TextField, linkjs, onjs
<span class="pl-k">using</span> JSServe<span class="pl-k">.</span>DOM
<span class="pl-k">using</span> ElectronTests<span class="pl-k">:</span> testsession, runjs, <span class="pl-c1">@wait_for</span>, trigger_keyboard_press
<span class="pl-k">using</span> Test
<span class="pl-k">using</span> Markdown

<span class="pl-k">function</span> <span class="pl-en">test_handler</span>(session, req)
    s1 <span class="pl-k">=</span> <span class="pl-c1">Slider</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>)
    s2 <span class="pl-k">=</span> <span class="pl-c1">Slider</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>)
    b <span class="pl-k">=</span> <span class="pl-c1">Button</span>(<span class="pl-s"><span class="pl-pds">"</span>hi<span class="pl-pds">"</span></span>)
    t <span class="pl-k">=</span> <span class="pl-c1">TextField</span>(<span class="pl-s"><span class="pl-pds">"</span>Write!<span class="pl-pds">"</span></span>)

    <span class="pl-c1">linkjs</span>(session, s1<span class="pl-k">.</span>value, s2<span class="pl-k">.</span>value)


    dom <span class="pl-k">=</span> <span class="pl-c1">md</span><span class="pl-pds">"""</span><span class="pl-s1"></span>
<span class="pl-s1">    # IS THIS REAL?</span>
<span class="pl-s1"></span>
<span class="pl-s1">    My first slider: <span class="pl-v">$(s1)</span></span>
<span class="pl-s1"></span>
<span class="pl-s1">    My second slider: <span class="pl-v">$(s2)</span></span>
<span class="pl-s1"></span>
<span class="pl-s1">    Test: <span class="pl-v">$(s1<span class="pl-k">.</span>value)</span></span>
<span class="pl-s1"></span>
<span class="pl-s1">    The BUTTON: <span class="pl-v">$(b)</span></span>
<span class="pl-s1"></span>
<span class="pl-s1">    Type something for the list: <span class="pl-v">$(t)</span></span>
<span class="pl-s1"></span>
<span class="pl-s1">    some list <span class="pl-v">$(t<span class="pl-k">.</span>value)</span></span>
<span class="pl-s1">    </span><span class="pl-pds">"""</span>
    <span class="pl-k">return</span> DOM<span class="pl-k">.</span><span class="pl-c1">div</span>(dom, id<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>testapp<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>

<span class="pl-c1">testsession</span>(test_handler) <span class="pl-k">do</span> app
    <span class="pl-c1">@test</span> <span class="pl-c1">runjs</span>(app, <span class="pl-c1">js</span><span class="pl-pds">"</span><span class="pl-s1"><span class="pl-c1">document</span>.<span class="pl-c1">getElementById</span>(<span class="pl-s"><span class="pl-pds">'</span>testapp<span class="pl-pds">'</span></span>).<span class="pl-smi">children</span>.<span class="pl-c1">length</span></span><span class="pl-pds">"</span>) <span class="pl-k">==</span> <span class="pl-c1">1</span>
    <span class="pl-c1">@test</span> <span class="pl-c1">runjs</span>(app, <span class="pl-c1">js</span><span class="pl-pds">"</span><span class="pl-s1"><span class="pl-c1">document</span>.<span class="pl-c1">getElementById</span>(<span class="pl-s"><span class="pl-pds">'</span>testapp<span class="pl-pds">'</span></span>).<span class="pl-smi">children</span>[<span class="pl-c1">0</span>].<span class="pl-smi">children</span>[<span class="pl-c1">0</span>].<span class="pl-smi">innerText</span></span><span class="pl-pds">"</span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>IS THIS REAL?<span class="pl-pds">"</span></span>
    <span class="pl-c1">@test</span> <span class="pl-c1">runjs</span>(app, <span class="pl-c1">js</span><span class="pl-pds">"</span><span class="pl-s1"><span class="pl-c1">document</span>.<span class="pl-c1">querySelectorAll</span>(<span class="pl-s"><span class="pl-pds">'</span>input[type=<span class="pl-cce">\"</span>button<span class="pl-cce">\"</span>]<span class="pl-pds">'</span></span>).<span class="pl-c1">length</span></span><span class="pl-pds">"</span>) <span class="pl-k">==</span> <span class="pl-c1">1</span>
    <span class="pl-c1">@test</span> <span class="pl-c1">runjs</span>(app, <span class="pl-c1">js</span><span class="pl-pds">"</span><span class="pl-s1"><span class="pl-c1">document</span>.<span class="pl-c1">querySelectorAll</span>(<span class="pl-s"><span class="pl-pds">'</span>input[type=<span class="pl-cce">\"</span>range<span class="pl-cce">\"</span>]<span class="pl-pds">'</span></span>).<span class="pl-c1">length</span></span><span class="pl-pds">"</span>) <span class="pl-k">==</span> <span class="pl-c1">2</span>
<span class="pl-k">end</span></pre></div>
</article></div>