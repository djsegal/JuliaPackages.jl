<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-electrontests" class="anchor" aria-hidden="true" href="#electrontests"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ElectronTests</h1>
<p dir="auto"><a href="https://travis-ci.com/beacon-biosignals/ElectronTests.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/945be80d906b38809b7c54d8461871d32ccc5041a4b914127a76631428d3341b/68747470733a2f2f7472617669732d63692e636f6d2f626561636f6e2d62696f7369676e616c732f456c656374726f6e54657374732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/beacon-biosignals/ElectronTests.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/beacon-biosignals/ElectronTests.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9385e63fd258790ab1bbc758b4c5d48488c51ae87f6b8e85538f7498b506f76f/68747470733a2f2f636f6465636f762e696f2f67682f626561636f6e2d62696f7369676e616c732f456c656374726f6e54657374732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/beacon-biosignals/ElectronTests.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Build for and with JSServe!</p>
<p dir="auto">Usage:
Allows you to run javascript inside your app to test all sorts of values:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ElectronTests
using JSServe: @js_str, Slider, Button, TextField, linkjs, onjs
using JSServe.DOM
using ElectronTests: testsession, runjs, @wait_for, trigger_keyboard_press
using Test
using Markdown

function test_handler(session, req)
    s1 = Slider(1:100)
    s2 = Slider(1:100)
    b = Button(&quot;hi&quot;)
    t = TextField(&quot;Write!&quot;)

    linkjs(session, s1.value, s2.value)


    dom = md&quot;&quot;&quot;
    # IS THIS REAL?

    My first slider: $(s1)

    My second slider: $(s2)

    Test: $(s1.value)

    The BUTTON: $(b)

    Type something for the list: $(t)

    some list $(t.value)
    &quot;&quot;&quot;
    return DOM.div(dom, id=&quot;testapp&quot;)
end

testsession(test_handler) do app
    @test runjs(app, js&quot;document.getElementById('testapp').children.length&quot;) == 1
    @test runjs(app, js&quot;document.getElementById('testapp').children[0].children[0].innerText&quot;) == &quot;IS THIS REAL?&quot;
    @test runjs(app, js&quot;document.querySelectorAll('input[type=\&quot;button\&quot;]').length&quot;) == 1
    @test runjs(app, js&quot;document.querySelectorAll('input[type=\&quot;range\&quot;]').length&quot;) == 2
end"><pre><span class="pl-k">using</span> ElectronTests
<span class="pl-k">using</span> JSServe<span class="pl-k">:</span> <span class="pl-c1">@js_str</span>, Slider, Button, TextField, linkjs, onjs
<span class="pl-k">using</span> JSServe<span class="pl-k">.</span>DOM
<span class="pl-k">using</span> ElectronTests<span class="pl-k">:</span> testsession, runjs, <span class="pl-c1">@wait_for</span>, trigger_keyboard_press
<span class="pl-k">using</span> Test
<span class="pl-k">using</span> Markdown

<span class="pl-k">function</span> <span class="pl-en">test_handler</span>(session, req)
    s1 <span class="pl-k">=</span> <span class="pl-c1">Slider</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>)
    s2 <span class="pl-k">=</span> <span class="pl-c1">Slider</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">100</span>)
    b <span class="pl-k">=</span> <span class="pl-c1">Button</span>(<span class="pl-s"><span class="pl-pds">"</span>hi<span class="pl-pds">"</span></span>)
    t <span class="pl-k">=</span> <span class="pl-c1">TextField</span>(<span class="pl-s"><span class="pl-pds">"</span>Write!<span class="pl-pds">"</span></span>)

    <span class="pl-c1">linkjs</span>(session, s1<span class="pl-k">.</span>value, s2<span class="pl-k">.</span>value)


    dom <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">md</span>"""</span></span>
<span class="pl-s">    # IS THIS REAL?</span>
<span class="pl-s"></span>
<span class="pl-s">    My first slider: $(s1)</span>
<span class="pl-s"></span>
<span class="pl-s">    My second slider: $(s2)</span>
<span class="pl-s"></span>
<span class="pl-s">    Test: $(s1.value)</span>
<span class="pl-s"></span>
<span class="pl-s">    The BUTTON: $(b)</span>
<span class="pl-s"></span>
<span class="pl-s">    Type something for the list: $(t)</span>
<span class="pl-s"></span>
<span class="pl-s">    some list $(t.value)</span>
<span class="pl-s">    <span class="pl-pds">"""</span></span>
    <span class="pl-k">return</span> DOM<span class="pl-k">.</span><span class="pl-c1">div</span>(dom, id<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>testapp<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>

<span class="pl-c1">testsession</span>(test_handler) <span class="pl-k">do</span> app
    <span class="pl-c1">@test</span> <span class="pl-c1">runjs</span>(app, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">js</span>"</span>document.getElementById('testapp').children.length<span class="pl-pds">"</span></span>) <span class="pl-k">==</span> <span class="pl-c1">1</span>
    <span class="pl-c1">@test</span> <span class="pl-c1">runjs</span>(app, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">js</span>"</span>document.getElementById('testapp').children[0].children[0].innerText<span class="pl-pds">"</span></span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>IS THIS REAL?<span class="pl-pds">"</span></span>
    <span class="pl-c1">@test</span> <span class="pl-c1">runjs</span>(app, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">js</span>"</span>document.querySelectorAll('input[type=<span class="pl-cce">\"</span>button<span class="pl-cce">\"</span>]').length<span class="pl-pds">"</span></span>) <span class="pl-k">==</span> <span class="pl-c1">1</span>
    <span class="pl-c1">@test</span> <span class="pl-c1">runjs</span>(app, <span class="pl-s"><span class="pl-pds"><span class="pl-c1">js</span>"</span>document.querySelectorAll('input[type=<span class="pl-cce">\"</span>range<span class="pl-cce">\"</span>]').length<span class="pl-pds">"</span></span>) <span class="pl-k">==</span> <span class="pl-c1">2</span>
<span class="pl-k">end</span></pre></div>
</article></div>