<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-sgp4jl" class="anchor" aria-hidden="true" href="#sgp4jl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SGP4.jl</h1>
<p><a href="https://travis-ci.org/crbinz/SGP4.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3ee32307fb20d9c65db510c3c6b85a558590c44e68d1c3978fc79693cf144c6c/68747470733a2f2f7472617669732d63692e6f72672f637262696e7a2f534750342e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/crbinz/SGP4.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><em>NOTE</em>: Consider using the pure-julia SGP4 implementation in <a href="https://github.com/JuliaSpace/SatelliteToolbox.jl#sgp4">SatelliteToolbox.jl</a>.</p>
<p>This package enables satellite orbit propagation using the <a href="https://en.wikipedia.org/wiki/Simplified_perturbations_models" rel="nofollow">SGP4</a> models, given the satellites two-line element set (<a href="http://www.celestrak.com/NORAD/documentation/tle-fmt.asp" rel="nofollow">TLE</a>). For now, this is a simple wrapper of <a href="https://github.com/brandon-rhodes/python-sgp4">python-sgp4</a> using <a href="https://github.com/stevengj/PyCall.jl">PyCall.jl</a>. There are several small changes from <code>python-sgp4</code>:</p>
<ol>
<li>
<p>Gravity coefficients are loaded into a <code>GravityModel</code> type. For instance, to load the WGS-72 coefficients, just do <code>GravityModel("wgs72")</code>. The other two options are "wgs72old" and "wgs84".</p>
</li>
<li>
<p>Propagation is a standalone function, as opposed to a <code>satellite</code> member function. So, propagation is accomplished by <code>propagate( sat, year, month, day, hour, min, sec)</code>.</p>
</li>
</ol>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Following the example given <a href="https://pypi.python.org/pypi/sgp4/" rel="nofollow">here</a>, the TEME position and velocity for Vanguard 1 at 12:50:19 on 29 June 2000 may be calculated by:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using SGP4
line1 = &quot;1 00005U 58002B   00179.78495062  .00000023  00000-0  28098-4 0  4753&quot;
line2 = &quot;2 00005  34.2682 348.7242 1859667 331.7664  19.3264 10.82419157413667&quot;
wgs72 = GravityModel(&quot;wgs72&quot;)
satellite = twoline2rv(line1, line2, wgs72)
(position, velocity) = propagate(satellite, 2000, 6, 29, 12, 50, 19)
"><pre><code>using SGP4
line1 = "1 00005U 58002B   00179.78495062  .00000023  00000-0  28098-4 0  4753"
line2 = "2 00005  34.2682 348.7242 1859667 331.7664  19.3264 10.82419157413667"
wgs72 = GravityModel("wgs72")
satellite = twoline2rv(line1, line2, wgs72)
(position, velocity) = propagate(satellite, 2000, 6, 29, 12, 50, 19)
</code></pre></div>
<p><code>satellite</code> attributes, such as the TLE epoch, may be accessed as <code>satellite[:epoch]</code>.</p>
<p>You can also generate an ephemeris, given a TLE, start date/time, stop date/time, and time step:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="(positions, velocities) = propagate(satellite, Dates.DateTime(&quot;2000-06-29T12:50:19.000&quot;), Dates.DateTime(&quot;2000-06-30T12:50:19.000&quot;), Dates.Second(60))
"><pre><code>(positions, velocities) = propagate(satellite, Dates.DateTime("2000-06-29T12:50:19.000"), Dates.DateTime("2000-06-30T12:50:19.000"), Dates.Second(60))
</code></pre></div>
<p>For more examples, see <code>test/runtests.jl</code>.</p>
<p>For other documentation, see <a href="https://pypi.python.org/pypi/sgp4/" rel="nofollow">this page</a>.</p>
</article></div>