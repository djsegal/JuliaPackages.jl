<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-media" class="anchor" aria-hidden="true" href="#media"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Media</h1>
<p><a href="https://travis-ci.org/JunoLab/Media.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ef7b1cba3d82af820d4794a1dddb41987d362945c25f471e94c27ef672562953/68747470733a2f2f7472617669732d63692e6f72672f4a756e6f4c61622f4d656469612e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JunoLab/Media.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Media.jl provides a display system which enables the user handle multiple input/output devices and decide what media types get displayed where. It's used by DevTools.jl and Juno.</p>
<p>Set media types:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Media
media(Gadfly.Plot, Media.Graphical)
media(DataFrames.DataFrame, Media.Tabular)
"><pre><span class="pl-k">using</span> Media
<span class="pl-c1">media</span>(Gadfly<span class="pl-k">.</span>Plot, Media<span class="pl-k">.</span>Graphical)
<span class="pl-c1">media</span>(DataFrames<span class="pl-k">.</span>DataFrame, Media<span class="pl-k">.</span>Tabular)</pre></div>
<p>Hook media and concrete types up to outputs:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="setdisplay(Media.Graphical, BlinkDisplay._display)
"><pre><span class="pl-c1">setdisplay</span>(Media<span class="pl-k">.</span>Graphical, BlinkDisplay<span class="pl-k">.</span>_display)</pre></div>
<p>which means "display graphical output on the BlinkDisplay device". You could also set tabular data (e.g. Matrices and DataFrames) to display with Blink.jl:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="setdisplay(Media.Tabular, BlinkDisplay._display)
rand(5, 5) #&gt; Displays in pop up window
"><pre><span class="pl-c1">setdisplay</span>(Media<span class="pl-k">.</span>Tabular, BlinkDisplay<span class="pl-k">.</span>_display)
<span class="pl-c1">rand</span>(<span class="pl-c1">5</span>, <span class="pl-c1">5</span>) <span class="pl-c"><span class="pl-c">#</span>&gt; Displays in pop up window</span></pre></div>
<p>or set the display for specific types (abstract or concrete):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="setdisplay(FloatingPoint, BlinkDisplay._display)
2.3 #&gt; Displays with Blink
"><pre><span class="pl-c1">setdisplay</span>(FloatingPoint, BlinkDisplay<span class="pl-k">.</span>_display)
<span class="pl-c1">2.3</span> <span class="pl-c"><span class="pl-c">#</span>&gt; Displays with Blink</span></pre></div>
<p>In principle you can also set displays for a given input device, although this needs more support from Base to work well.</p>
<p>Use</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="unsetdisplay(Media.Tabular)
"><pre><span class="pl-c1">unsetdisplay</span>(Media<span class="pl-k">.</span>Tabular)</pre></div>
<p>to undo the change.</p>
</article></div>