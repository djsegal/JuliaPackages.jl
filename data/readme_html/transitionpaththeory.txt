<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-transitionpaththeoryjl" class="anchor" aria-hidden="true" href="#transitionpaththeoryjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TransitionPathTheory.jl</h1>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto">This is a package for computing transition path theory<sup><a href="#user-content-fn-fn1-1e0dd1744477f3c2c5040713c4e2c264" id="user-content-fnref-fn1-1e0dd1744477f3c2c5040713c4e2c264" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup> (TPT) statistics of an ergodic Markov chain on a discrete set <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="1e0dd1744477f3c2c5040713c4e2c264">$\mathbb{S}$</math-renderer>. All that is required to apply TPT is</p>
<ul dir="auto">
<li>A strongly connected, stochastic transition probability matrix <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="1e0dd1744477f3c2c5040713c4e2c264">$P$</math-renderer>.</li>
<li>A "source" set <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="1e0dd1744477f3c2c5040713c4e2c264">$\mathbb{A} \subset \mathbb{S}$</math-renderer> and a "target" set <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="1e0dd1744477f3c2c5040713c4e2c264">$\mathbb{B} \subset \mathbb{S}$</math-renderer>. The set <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="1e0dd1744477f3c2c5040713c4e2c264">$\mathbb{A} \cap \mathbb{B}$</math-renderer> is automatically avoided by TPT.</li>
</ul>
<p dir="auto">The main function of TPT is to compute statistics of "reactive" trajectories, namely trajectories which travel directly from the source to the target with no intermediate visit to either.</p>
<h2 dir="auto">
<a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">In the Julia REPL, run the following code and follow the prompts:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(TransitionPathTheory)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(TransitionPathTheory)</pre></div>
<p dir="auto">Make the package available to use in your code by including the following line:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TransitionPathTheory"><pre><span class="pl-k">using</span> TransitionPathTheory</pre></div>
<h2 dir="auto">
<a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quickstart</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="P = P_stoc(10)      # a 10 x 10 stochastic matrix w/ random entries
A = [1, 2, 5]       # the source indices
B = [5, 9, 10]      # the target indices

# validate and setup a homogenous TPT problem
tpt_homog = TPTHomog(P, A, B)

# compute TPT statistics in the stationary case
tpt_stat = tpt_stationary_statistics(tpt_homog)
tpt_stat.q_plus # the forward committor; note that q_plus[5] = 0 
tpt_stat.normalized_reactive_density # normalized muAB

# compute TPT statistics in the nonstationary case
tpt_nonstat = tpt_nonstationary_statistics(tpt_homog)
tpt_nonstat.q_plus # the forward committor is the same for homogeneous problems
tpt_nonstat.normalized_reactive_density # normalized muAB; columns refer to increasing time

# write the results to an .h5 file
f_name = &quot;tpt_results.h5&quot;
tpt_write(f_name, tpt_stat, dir_name = &quot;tpt_stat&quot;)
tpt_write(f_name, tpt_nonstat, dir_name = &quot;tpt_nonstat&quot;)"><pre>P <span class="pl-k">=</span> <span class="pl-c1">P_stoc</span>(<span class="pl-c1">10</span>)      <span class="pl-c"><span class="pl-c">#</span> a 10 x 10 stochastic matrix w/ random entries</span>
A <span class="pl-k">=</span> [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">5</span>]       <span class="pl-c"><span class="pl-c">#</span> the source indices</span>
B <span class="pl-k">=</span> [<span class="pl-c1">5</span>, <span class="pl-c1">9</span>, <span class="pl-c1">10</span>]      <span class="pl-c"><span class="pl-c">#</span> the target indices</span>

<span class="pl-c"><span class="pl-c">#</span> validate and setup a homogenous TPT problem</span>
tpt_homog <span class="pl-k">=</span> <span class="pl-c1">TPTHomog</span>(P, A, B)

<span class="pl-c"><span class="pl-c">#</span> compute TPT statistics in the stationary case</span>
tpt_stat <span class="pl-k">=</span> <span class="pl-c1">tpt_stationary_statistics</span>(tpt_homog)
tpt_stat<span class="pl-k">.</span>q_plus <span class="pl-c"><span class="pl-c">#</span> the forward committor; note that q_plus[5] = 0 </span>
tpt_stat<span class="pl-k">.</span>normalized_reactive_density <span class="pl-c"><span class="pl-c">#</span> normalized muAB</span>

<span class="pl-c"><span class="pl-c">#</span> compute TPT statistics in the nonstationary case</span>
tpt_nonstat <span class="pl-k">=</span> <span class="pl-c1">tpt_nonstationary_statistics</span>(tpt_homog)
tpt_nonstat<span class="pl-k">.</span>q_plus <span class="pl-c"><span class="pl-c">#</span> the forward committor is the same for homogeneous problems</span>
tpt_nonstat<span class="pl-k">.</span>normalized_reactive_density <span class="pl-c"><span class="pl-c">#</span> normalized muAB; columns refer to increasing time</span>

<span class="pl-c"><span class="pl-c">#</span> write the results to an .h5 file</span>
f_name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>tpt_results.h5<span class="pl-pds">"</span></span>
<span class="pl-c1">tpt_write</span>(f_name, tpt_stat, dir_name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>tpt_stat<span class="pl-pds">"</span></span>)
<span class="pl-c1">tpt_write</span>(f_name, tpt_nonstat, dir_name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>tpt_nonstat<span class="pl-pds">"</span></span>)</pre></div>
<section data-footnotes="" class="footnotes"><h2 id="footnote-label" class="sr-only" dir="auto">Footnotes</h2>
<ol dir="auto">
<li id="user-content-fn-fn1-1e0dd1744477f3c2c5040713c4e2c264">
<p dir="auto">Vanden-Eijnden, Eric. "Transition path theory." Computer Simulations in Condensed Matter Systems: From Materials to Chemical Biology Volume 1. Springer, Berlin, Heidelberg, 2006. 453-493. <a href="#user-content-fnref-fn1-1e0dd1744477f3c2c5040713c4e2c264" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref"><g-emoji class="g-emoji" alias="leftwards_arrow_with_hook" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/21a9.png">â†©</g-emoji></a></p>
</li>
</ol>
</section>
</article></div>