<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-gradient-based-covariance-matrix-adaptation-evolutionary-strategy-for-real-blackbox--optimization" class="anchor" aria-hidden="true" href="#gradient-based-covariance-matrix-adaptation-evolutionary-strategy-for-real-blackbox--optimization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Gradient-based Covariance Matrix Adaptation Evolutionary Strategy for Real Blackbox  Optimization</h1>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add GCMAES<span class="pl-pds">"</span></span></pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> GCMAES
D <span class="pl-k">=</span> <span class="pl-c1">2000</span>            <span class="pl-c"><span class="pl-c">#</span> dimension of x</span>
x0 <span class="pl-k">=</span> <span class="pl-c1">fill</span>(<span class="pl-c1">0.3</span>, D)   <span class="pl-c"><span class="pl-c">#</span> initial x</span>
σ<span class="pl-c1">0</span> <span class="pl-k">=</span> <span class="pl-c1">0.2</span>            <span class="pl-c"><span class="pl-c">#</span> initial search variance</span>
lo <span class="pl-k">=</span> <span class="pl-c1">fill</span>(<span class="pl-k">-</span><span class="pl-c1">5.12</span>, D) <span class="pl-c"><span class="pl-c">#</span> lower bound for each dimension</span>
hi <span class="pl-k">=</span> <span class="pl-c1">fill</span>(<span class="pl-c1">5.12</span>, D)  <span class="pl-c"><span class="pl-c">#</span> upper bound for each dimension</span></pre></div>
<p>Minimize a blackbox function</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-en">rastrigin</span>(x) <span class="pl-k">=</span> <span class="pl-c1">10</span><span class="pl-c1">length</span>(x) <span class="pl-k">+</span> <span class="pl-c1">sum</span>(x<span class="pl-k">.^</span><span class="pl-c1">2</span> <span class="pl-k">.-</span> <span class="pl-c1">10</span> <span class="pl-k">.*</span> <span class="pl-c1">cos</span>.(<span class="pl-c1">2</span>π <span class="pl-k">.*</span> x))
xmin, fmin, status <span class="pl-k">=</span> GCMAES<span class="pl-k">.</span><span class="pl-c1">minimize</span>(rastrigin, x0, σ<span class="pl-c1">0</span>, lo, hi, maxiter <span class="pl-k">=</span> <span class="pl-c1">200</span>)</pre></div>
<p>If the optimization terminate prematurely before <code>maxiter</code> is reached, <code>status</code> will be <code>1</code>, otherwise <code>0</code>.</p>
<p>You can speed up the optimization process by providing additional gradient infomation if the loss function is differentialble but noisy. The evolution part can help escaping local minima while the gradient part can speed up convergence in non-noisy regions.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ForwardDiff
<span class="pl-en">∇rastrigin</span>(x) <span class="pl-k">=</span> ForwardDiff<span class="pl-k">.</span><span class="pl-c1">gradient</span>(rastrigin, x)
GCMAES<span class="pl-k">.</span><span class="pl-c1">minimize</span>((rastrigin, ∇rastrigin), x0, σ<span class="pl-c1">0</span>, lo, hi, maxiter <span class="pl-k">=</span> <span class="pl-c1">200</span>)</pre></div>
<p>A checkpoint file named <code>CMAES.bson</code> will be created in the current working directory during optimization, which will be loaded back to initilize <code>CMAESOpt</code> if dimensions are equal.</p>
</article></div>