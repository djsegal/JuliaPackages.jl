<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-dotnetjl" class="anchor" aria-hidden="true" href="#dotnetjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>DotNET.jl</h1>
<p><a href="https://travis-ci.org/azurefx/DotNET.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6341ae528ff2f8b8ee50e3ad70b1e5fba05bd4fd/68747470733a2f2f7472617669732d63692e6f72672f617a75726566782f446f744e45542e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/azurefx/DotNET.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package provides interoperability between Julia and <a href="https://docs.microsoft.com/dotnet/standard/clr" rel="nofollow"><code>Common Language Runtime</code></a>, the execution engine of <code>.NET</code> applications. Many languages run on CLR, including <code>C#</code>, <code>Visual Basic .NET</code> and <code>PowerShell</code>.</p>
<p>⚠ This package is still a Work-In-Progress, its behaviors and public APIs may change dramatically.</p>
<h2><a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Prerequisites</h2>
<p>You will need to have <code>.NET Core</code> SDK/runtime 2.0 or higher installed on the machine (<a href="https://dotnet.microsoft.com/download" rel="nofollow">Download</a>). If the package fails to locate the runtime, set <code>DOTNET_ROOT</code> environment variable to the path containing the <code>dotnet</code> or <code>dotnet.exe</code> binary.</p>
<p>⚠ <code>.NET Framework</code> is currently not supported (but on the roadmap).</p>
<p>This package uses <code>Artifacts</code> to provide binary dependencies, so Julia 1.3+ is required.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg

julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-c1">PackageSpec</span>(url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/azurefx/DotNET.jl<span class="pl-pds">"</span></span>))</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<ol>
<li>Use <a href="https://docs.microsoft.com/dotnet/standard/assembly/find-fully-qualified-name" rel="nofollow"><code>T"AssemblyQualifiedTypeName"</code></a> to address a type:</li>
</ol>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Console<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">T</span>"</span>System.Console, mscorlib<span class="pl-pds">"</span></span>
System<span class="pl-k">.</span>Console</pre></div>
<ol start="2">
<li>Use <code>.</code> to access a member:</li>
</ol>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Console<span class="pl-k">.</span><span class="pl-c1">WriteLine</span>(<span class="pl-s"><span class="pl-pds">"</span>Hello, CLR!<span class="pl-pds">"</span></span>);
Hello, CLR!</pre></div>
<ol start="3">
<li>Use reflection to load assemblies from file:</li>
</ol>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">T</span>"</span>System.Reflection.Assembly<span class="pl-pds">"</span></span><span class="pl-k">.</span><span class="pl-c1">LoadFrom</span>(<span class="pl-s"><span class="pl-c1">raw</span><span class="pl-pds">"</span>C:\Users\Azure\Desktop\test.dll<span class="pl-pds">"</span></span>)
System<span class="pl-k">.</span>Reflection<span class="pl-k">.</span><span class="pl-c1">RuntimeAssembly</span>(<span class="pl-s"><span class="pl-pds">"</span>test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null<span class="pl-pds">"</span></span>)</pre></div>
<ol start="4">
<li>To create an object:</li>
</ol>
<pre><code>julia&gt; T"System.String".new('6',Int32(3))
"666"

julia&gt; List=T"System.Collections.Generic.List`1"
System.Collections.Generic.List`1[T]

julia&gt; List.new[T"System.Int64"]()
System.Collections.Generic.List`1[System.Int64]("System.Collections.Generic.List`1[System.Int64]")

</code></pre>
<ol start="5">
<li>To create delegates from Julia methods:</li>
</ol>
<pre><code>julia&gt; list=List.new[T"System.Int64"](1:5);

julia&gt; list.RemoveAll(delegate(iseven,T"System.Predicate`1[System.Int64]"))
2

julia&gt; collect(list)
3-element Array{Int64,1}:
 1
 3
 5
</code></pre>
<h2><a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>TODO</h2>
<ul>
<li>Implicit conversions when calling CLR methods</li>
<li>More operators</li>
<li><code>using</code> directive like C#</li>
<li>Smart assembly/type resolution</li>
<li>Configurable runtime versions</li>
<li>Julia type system consistency</li>
<li>.NET Framework support</li>
<li>PowerShell support (maybe in another package)</li>
</ul>
</article></div>