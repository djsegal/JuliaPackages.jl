<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-inter-process-communication-for-julia" class="anchor" aria-hidden="true" href="#inter-process-communication-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Inter-Process Communication for Julia</h1>
<table>
<thead>
<tr>
<th align="left"><strong>Documentation</strong></th>
<th align="left"><strong>License</strong></th>
<th align="left"><strong>Build Status</strong></th>
<th align="left"><strong>Code Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="left"><a href="https://emmt.github.io/IPC.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></td>
<td align="left"><a href="./LICENSE.md"><img src="https://camo.githubusercontent.com/4440d5deb3a53c4f8661ee765378e6071e7878e8/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c6174" alt="" data-canonical-src="http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat" style="max-width:100%;"></a></td>
<td align="left"><a href="https://travis-ci.org/emmt/IPC.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6e37e8956198648ae92903b47c8384ca9a82e741/68747470733a2f2f7472617669732d63692e6f72672f656d6d742f4950432e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.org/emmt/IPC.jl.svg?branch=master" style="max-width:100%;"></a></td>
<td align="left"><a href="https://coveralls.io/github/emmt/IPC.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/bb7fa6aea26d11c5555b51f40d8e78e75120915b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f656d6d742f4950432e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="" data-canonical-src="https://coveralls.io/repos/emmt/IPC.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a> <a href="http://codecov.io/github/emmt/IPC.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/193125c9327253b0adc508cd168f9ab9141a0144/687474703a2f2f636f6465636f762e696f2f6769746875622f656d6d742f4950432e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="http://codecov.io/github/emmt/IPC.jl/coverage.svg?branch=master" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p><strong>IPC.jl has been renamed as <a href="https://github.com/emmt/InterProcessCommunication.jl">InterProcessCommunication.jl</a></strong></p>
<p>Julia has already many methods for inter-process communication (IPC): sockets,
semaphores, memory mapped files, etc.  You may however want to have Julia
interacts with other processes or threads by means of BSD (System V) IPC or
POSIX shared memory, semaphores, message queues or mutexes and condition
variables.  Package <code>IPC.jl</code> intends to provide such facilities.</p>
<p>Julia <code>IPC.jl</code> package provides:</p>
<ul>
<li>
<p>Two kinds of <strong>shared memory</strong> objects: <em>named shared memory</em> which are
identified by their name and old-style (BSD System V) <em>shared memory
segments</em> which are identified by a key.</p>
</li>
<li>
<p>Two kinds of <strong>semaphores</strong>: <em>named semaphores</em> which are identified by their
name and <em>anonymous semaphores</em> which are backed by <em>memory</em> objects (usually
shared memory) providing the necessary storage.</p>
</li>
<li>
<p>Management of <strong>signals</strong> including so called real-time signals.</p>
</li>
<li>
<p>Array-like objects stored in shared memory.</p>
</li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Installation is not yet fully automated in the spirit of official Julia
packages but is rather easy.  It is sufficient to:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-c1">PackageSpec</span>(url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/emmt/IPC.jl.git<span class="pl-pds">"</span></span>))
Pkg<span class="pl-k">.</span><span class="pl-c1">build</span>(<span class="pl-s"><span class="pl-pds">"</span>IPC<span class="pl-pds">"</span></span>)</pre></div>
<p>Optionally, you may test the package:</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">test</span>(<span class="pl-s"><span class="pl-pds">"</span>IPC<span class="pl-pds">"</span></span>)</pre></div>
<p>Later, it is sufficient to do:</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">update</span>(<span class="pl-s"><span class="pl-pds">"</span>IPC<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">build</span>(<span class="pl-s"><span class="pl-pds">"</span>IPC<span class="pl-pds">"</span></span>)</pre></div>
<p>to pull the latest version and rebuild the dependencies.</p>
<p>All these can be done at the prompt of Julia's package manager:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">...</span> pkg<span class="pl-k">&gt;</span> add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>emmt<span class="pl-k">/</span>IPC<span class="pl-k">.</span>jl<span class="pl-k">.</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">git</span>"</span></span>
<span class="pl-s">... pkg&gt; build IPC</span>
<span class="pl-s">... pkg&gt; test IPC</span>
<span class="pl-s">... pkg&gt; update IPC</span>
<span class="pl-s">... pkg&gt; build IPC</span></pre></div>
</article></div>