<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-structdualdynprog" class="anchor" aria-hidden="true" href="#structdualdynprog"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>StructDualDynProg</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>PackageEvaluator</strong></th>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Social</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://juliastochopt.github.io/StructDualDynProg.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="http://pkg.julialang.org/?pkg=StructDualDynProg" rel="nofollow"><img src="https://camo.githubusercontent.com/f70c0a50cd28969519501c7670f85590c925403e/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f5374727563744475616c44796e50726f675f302e362e737667" alt="" data-canonical-src="http://pkg.julialang.org/badges/StructDualDynProg_0.6.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://travis-ci.org/JuliaStochOpt/StructDualDynProg.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f998c4b52815b336c502355991aa5689f028e672/68747470733a2f2f7472617669732d63692e6f72672f4a756c696153746f63684f70742f5374727563744475616c44796e50726f672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaStochOpt/StructDualDynProg.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://ci.appveyor.com/project/blegat/structdualdynprog-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/572d8f6f54ccd15e82c7ff80cd849b51e00d87c7/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f336c6839653674756a6f6a676f6461722f6272616e63682f6d61737465723f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/3lh9e6tujojgodar/branch/master?svg=true" style="max-width:100%;"></a></td>
<td align="center"><a href="https://gitter.im/JuliaOpt/StochasticDualDynamicProgramming.jl?utm_source=share-link&amp;utm_medium=link&amp;utm_campaign=share-link" rel="nofollow"><img src="https://camo.githubusercontent.com/494a77a91754fd8ea78536fde0135e1e9bcc50c5/68747470733a2f2f6261646765732e6769747465722e696d2f4a756c69614f70742f53746f636861737469634475616c44796e616d696350726f6772616d6d696e672e6a6c2e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/JuliaOpt/StochasticDualDynamicProgramming.jl.svg" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="center"><a href="https://juliastochopt.github.io/StructDualDynProg.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="http://pkg.julialang.org/?pkg=StructDualDynProg" rel="nofollow"><img src="https://camo.githubusercontent.com/4a2c5495caad72f6230ffd112ba1c8358a3d4251/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f5374727563744475616c44796e50726f675f302e372e737667" alt="" data-canonical-src="http://pkg.julialang.org/badges/StructDualDynProg_0.7.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://coveralls.io/github/JuliaStochOpt/StructDualDynProg.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9f2c1333be9264e5fa3bb1041cf82583703438c9/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f626c656761742f5374727563744475616c44796e50726f672e6a6c2f62616467652e737667" alt="Coveralls branch" data-canonical-src="https://coveralls.io/repos/github/blegat/StructDualDynProg.jl/badge.svg" style="max-width:100%;"></a> <a href="https://codecov.io/gh/JuliaStochOpt/StructDualDynProg.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/482ff5a50b6c7d21e9d377da61b59a9c748b7e86/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696153746f63684f70742f5374727563744475616c44796e50726f672e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov branch" data-canonical-src="https://codecov.io/gh/JuliaStochOpt/StructDualDynProg.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://discourse.julialang.org/c/domain/opt" rel="nofollow"><img src="https://camo.githubusercontent.com/844580b76167bd89eb6ec484c60c71856712a94e/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f612f61662f446973636f757273655f6c6f676f2e706e672f37393970782d446973636f757273655f6c6f676f2e706e67" width="64" data-canonical-src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Discourse_logo.png/799px-Discourse_logo.png" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p>Generic interface for the <a href="http://www.optimization-online.org/DB_FILE/2009/12/2509.pdf" rel="nofollow">Stochastic Dual Dynamic Programming (SDDP) algorithm</a> as well as a generic implementation.
The problem can either be provided using the <a href="https://github.com/joehuchette/StructJuMP.jl">StructJuMP</a> modeling interface or using a lower level interface.</p>
<p>This package is used by the <a href="https://github.com/blegat/EntropicCone.jl">Entropic Cone</a> package.</p>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<ul>
<li><a href="https://juliastochopt.github.io/StructDualDynProg.jl/stable" rel="nofollow"><strong>STABLE</strong></a> — <strong>most recently tagged version of the documentation.</strong></li>
<li><a href="https://juliastochopt.github.io/StructDualDynProg.jl/latest" rel="nofollow"><strong>LATEST</strong></a> — <em>in-development version of the documentation.</em></li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>The <code>master</code> branch is aimed at JuMP v0.19. To try this
package with JuMP v0.19, do:</p>
<div class="highlight highlight-source-julia"><pre>] add StructJuMP<span class="pl-c"><span class="pl-c">#</span>master</span>
] add StructDualDynProg<span class="pl-c"><span class="pl-c">#</span>master</span></pre></div>
<p>Note that this package has not been updated yet to JuMP v0.19, see <a href="https://github.com/JuliaStochOpt/StructDualDynProg.jl/issues/22">here</a>.</p>
<h2><a id="user-content-notes-for-choice-of-solvers" class="anchor" aria-hidden="true" href="#notes-for-choice-of-solvers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Notes for choice of solvers</h2>
<p>This package should work with any linear programming (LP) solver <a href="http://www.juliaopt.org/" rel="nofollow">supported by MathProgBase</a>.
If some subproblems are infeasible, an infeasibility ray will be asked to the solver.
In this case, it is advised to turn presolve off in <code>CPLEX</code> (i.e. <code>CPLEX.CplexSolver(CPX_PARAM_REDUCE=0)</code>) and to avoid using Clp since it <a href="https://projects.coin-or.org/Clp/ticket/79" rel="nofollow">often cannot find the infeasibility ray</a>.
If some subproblems are unbounded, an unbounded ray and a feasible solution will be asked for the solver. Again, <a href="https://projects.coin-or.org/Clp/ticket/82" rel="nofollow">avoid using Clp in that case</a>. Hopefully subproblems shouldn't be unbounded if <code>detectlb</code> is left at <code>true</code> when calling <code>SOI.stochasticprogram</code>.</p>
</article></div>