<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-cftime" class="anchor" aria-hidden="true" href="#cftime"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CFTime</h1>
<p dir="auto"><a href="https://github.com/JuliaGeo/CFTime.jl/actions"><img src="https://github.com/JuliaGeo/CFTime.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/JuliaGeo/CFTime.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/9dbe34463f5f0fbf4bc45f1d422757c8c8c863b514e65c37d74d9eefc33d032f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c696147656f2f434654696d652e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaGeo/CFTime.jl/badge.svg?branch=master&amp;service=github" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/JuliaGeo/CFTime.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/0db35d55bd56a6c678fbb9ef639cdbd8fcc9656a6d047355179ddfe3c07fb1c7/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c696147656f2f434654696d652e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaGeo/CFTime.jl/coverage.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://juliageo.github.io/CFTime.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="documentation stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://juliageo.github.io/CFTime.jl/latest/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="documentation latest" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><code>CFTime</code> encodes and decodes time units conforming to the Climate and Forecasting (CF) netCDF conventions.
<code>CFTime</code> was split out of the <a href="https://github.com/Alexander-Barth/NCDatasets.jl">NCDatasets</a> julia package.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Inside the <a href="https://julialang.org/" rel="nofollow">Julia</a> shell, you can download and install the package by issuing:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;CFTime&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CFTime<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using CFTime, Dates

# standard calendar

dt = CFTime.timedecode([0,1,2,3],&quot;days since 2000-01-01 00:00:00&quot;)
# 4-element Array{Dates.DateTime,1}:
#  2000-01-01T00:00:00
#  2000-01-02T00:00:00
#  2000-01-03T00:00:00
#  2000-01-04T00:00:00


CFTime.timeencode(dt,&quot;days since 2000-01-01 00:00:00&quot;)
# 4-element Array{Float64,1}:
#  0.0
#  1.0
#  2.0
#  3.0

# &quot;360 day&quot; calendar

dt = CFTime.timedecode([0,1,2,3],&quot;days since 2000-01-01 00:00:00&quot;,DateTime360Day)
# 4-element Array{DateTime360Day,1}:
#  DateTime360Day(2000-01-01T00:00:00)
#  DateTime360Day(2000-01-02T00:00:00)
#  DateTime360Day(2000-01-03T00:00:00)
#  DateTime360Day(2000-01-04T00:00:00)

dt[2]-dt[1]
# 86400000 milliseconds

Dates.Day(dt[2]-dt[1])
# 1 day

CFTime.timeencode(dt,&quot;days since 2000-01-01 00:00:00&quot;,DateTime360Day)
# 4-element Array{Float64,1}:
#  0.0
#  1.0
#  2.0
#  3.0

DateTime360Day(2000,1,1) + Dates.Day(360)
# DateTime360Day(2001-01-01T00:00:00)"><pre><span class="pl-k">using</span> CFTime, Dates

<span class="pl-c"><span class="pl-c">#</span> standard calendar</span>

dt <span class="pl-k">=</span> CFTime<span class="pl-k">.</span><span class="pl-c1">timedecode</span>([<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>],<span class="pl-s"><span class="pl-pds">"</span>days since 2000-01-01 00:00:00<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> 4-element Array{Dates.DateTime,1}:</span>
<span class="pl-c"><span class="pl-c">#</span>  2000-01-01T00:00:00</span>
<span class="pl-c"><span class="pl-c">#</span>  2000-01-02T00:00:00</span>
<span class="pl-c"><span class="pl-c">#</span>  2000-01-03T00:00:00</span>
<span class="pl-c"><span class="pl-c">#</span>  2000-01-04T00:00:00</span>


CFTime<span class="pl-k">.</span><span class="pl-c1">timeencode</span>(dt,<span class="pl-s"><span class="pl-pds">"</span>days since 2000-01-01 00:00:00<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> 4-element Array{Float64,1}:</span>
<span class="pl-c"><span class="pl-c">#</span>  0.0</span>
<span class="pl-c"><span class="pl-c">#</span>  1.0</span>
<span class="pl-c"><span class="pl-c">#</span>  2.0</span>
<span class="pl-c"><span class="pl-c">#</span>  3.0</span>

<span class="pl-c"><span class="pl-c">#</span> "360 day" calendar</span>

dt <span class="pl-k">=</span> CFTime<span class="pl-k">.</span><span class="pl-c1">timedecode</span>([<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>],<span class="pl-s"><span class="pl-pds">"</span>days since 2000-01-01 00:00:00<span class="pl-pds">"</span></span>,DateTime360Day)
<span class="pl-c"><span class="pl-c">#</span> 4-element Array{DateTime360Day,1}:</span>
<span class="pl-c"><span class="pl-c">#</span>  DateTime360Day(2000-01-01T00:00:00)</span>
<span class="pl-c"><span class="pl-c">#</span>  DateTime360Day(2000-01-02T00:00:00)</span>
<span class="pl-c"><span class="pl-c">#</span>  DateTime360Day(2000-01-03T00:00:00)</span>
<span class="pl-c"><span class="pl-c">#</span>  DateTime360Day(2000-01-04T00:00:00)</span>

dt[<span class="pl-c1">2</span>]<span class="pl-k">-</span>dt[<span class="pl-c1">1</span>]
<span class="pl-c"><span class="pl-c">#</span> 86400000 milliseconds</span>

Dates<span class="pl-k">.</span><span class="pl-c1">Day</span>(dt[<span class="pl-c1">2</span>]<span class="pl-k">-</span>dt[<span class="pl-c1">1</span>])
<span class="pl-c"><span class="pl-c">#</span> 1 day</span>

CFTime<span class="pl-k">.</span><span class="pl-c1">timeencode</span>(dt,<span class="pl-s"><span class="pl-pds">"</span>days since 2000-01-01 00:00:00<span class="pl-pds">"</span></span>,DateTime360Day)
<span class="pl-c"><span class="pl-c">#</span> 4-element Array{Float64,1}:</span>
<span class="pl-c"><span class="pl-c">#</span>  0.0</span>
<span class="pl-c"><span class="pl-c">#</span>  1.0</span>
<span class="pl-c"><span class="pl-c">#</span>  2.0</span>
<span class="pl-c"><span class="pl-c">#</span>  3.0</span>

<span class="pl-c1">DateTime360Day</span>(<span class="pl-c1">2000</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>) <span class="pl-k">+</span> Dates<span class="pl-k">.</span><span class="pl-c1">Day</span>(<span class="pl-c1">360</span>)
<span class="pl-c"><span class="pl-c">#</span> DateTime360Day(2001-01-01T00:00:00)</span></pre></div>
<p dir="auto">You can replace in the example above the type <code>DateTime360Day</code> by the string <code>"360_day"</code> (the name according to the CF conversion).</p>
<h2 dir="auto"><a id="user-content-parsing-dates" class="anchor" aria-hidden="true" href="#parsing-dates"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Parsing dates</h2>
<p dir="auto">Dates can be parsed by using <code>dateformat</code> from julia's <code>Dates</code> module, for example:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="dt = DateTimeNoLeap(&quot;21001231&quot;,dateformat&quot;yyyymmdd&quot;);
# or
# dt = parse(DateTimeNoLeap,&quot;21001231&quot;,dateformat&quot;yyyymmdd&quot;)
Dates.year(dt),Dates.month(dt),Dates.day(dt)
# output (2100, 12, 31)"><pre>dt <span class="pl-k">=</span> <span class="pl-c1">DateTimeNoLeap</span>(<span class="pl-s"><span class="pl-pds">"</span>21001231<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds"><span class="pl-c1">dateformat</span>"</span>yyyymmdd<span class="pl-pds">"</span></span>);
<span class="pl-c"><span class="pl-c">#</span> or</span>
<span class="pl-c"><span class="pl-c">#</span> dt = parse(DateTimeNoLeap,"21001231",dateformat"yyyymmdd")</span>
Dates<span class="pl-k">.</span><span class="pl-c1">year</span>(dt),Dates<span class="pl-k">.</span><span class="pl-c1">month</span>(dt),Dates<span class="pl-k">.</span><span class="pl-c1">day</span>(dt)
<span class="pl-c"><span class="pl-c">#</span> output (2100, 12, 31)</span></pre></div>
<h2 dir="auto"><a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgments</h2>
<p dir="auto">Thanks to Jeff Whitaker and <a href="https://github.com/Unidata/cftime/graphs/contributors">contributors</a> for python's <a href="https://github.com/Unidata/cftime">cftime</a> released under the MIT license which has helped the developpement of this package.</p>
</article></div>