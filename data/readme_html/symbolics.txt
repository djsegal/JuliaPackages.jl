<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-symbolicsjl" class="anchor" aria-hidden="true" href="#symbolicsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Symbolics.jl</h1>
<p><a href="https://github.com/JuliaSymbolics/Symbolics.jl/actions"><img src="https://github.com/JuliaSymbolics/Symbolics.jl/workflows/CI/badge.svg" alt="Github Action CI" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaSymbolics/Symbolics.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/51c93b5a4863917044d1eb0b79c7b2ac0741f547f8a5521d9366c2ccee618c51/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c696153796d626f6c6963732f4d6f64656c696e67546f6f6c6b69742e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaSymbolics/ModelingToolkit.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://symbolics.juliasymbolics.org/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://symbolics.juliasymbolics.org/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<p>Symbolics.jl is a fast and modern Computer Algebra System (CAS) for a fast and modern
programming language (Julia). The goal is to have a high-performance and parallelized
symbolic algebra system that is directly extendable in the same language as the users.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>To install Symbolics.jl, use the Julia package manager:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;Symbolics&quot;)
"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Symbolics<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<p>For information on using the package, see the <a href="https://juliasymbolics.github.io/Symbolics.jl/dev/" rel="nofollow">stable documentation</a>.
Use the <a href="https://juliasymbolics.github.io/Symbolics.jl/dev/" rel="nofollow">in-development documentation</a>
for the version of the documentation which contains the unreleased features.</p>
<h2><a id="user-content-relationship-to-other-packages" class="anchor" aria-hidden="true" href="#relationship-to-other-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Relationship to Other Packages</h2>
<ul>
<li><a href="https://github.com/JuliaSymbolics/SymbolicUtils.jl">SymbolicUtils.jl</a>: This is a
rule-rewriting system that is the core of Symbolics.jl. Symbolics.jl builds off of
SymbolicUtils.jl to extend it to a whole symbolic algebra system, complete with
support for differentation, solving symbolic systems of equations, etc. If you're
looking for the barebones to build a new CAS for specific algebras, SymbolicUtils.jl
is that foundation. Otherwise, Symbolics.jl is for you.</li>
<li><a href="https://github.com/SciML/ModelingToolkit.jl">ModelingToolkit.jl</a>: This is a
symbolic-numeric modeling system for the SciML ecosystem. It heavily uses Symbolics.jl
for its representation of symbolic equations along with tools like differentiation,
and adds the representation of common modeling systems like ODEs, SDEs, and more.</li>
</ul>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Symbolics

@variables t x y
D = Differential(t)

z = t + t^2
D(z) # symbolic representation of derivative(t + t^2, t)
expand_derivatives(D(z)) # 1 + 2t

Symbolics.jacobian([x + x*y, x^2 + y],[x, y])

#2×2 Matrix{Num}:
# 1 + y  x
#    2x  1

B = simplify.([t^2 + t + t^2  2t + 4t
              x + y + y + 2t  x^2 - x^2 + y^2])

#2×2 Matrix{Num}:
#   t + 2(t^2)   6t
# x + 2(t + y)  y^2

simplify.(substitute.(B, (Dict(x =&gt; y^2),)))

#2×2 Matrix{Num}:
#     t + 2(t^2)   6t
# y^2 + 2(t + y)  y^2

substitute.(B, (Dict(x =&gt; 2.0, y =&gt; 3.0, t =&gt; 4.0),))

#2×2 Matrix{Num}:
# 36.0  24.0
# 16.0   9.0
"><pre><span class="pl-k">using</span> Symbolics

<span class="pl-c1">@variables</span> t x y
D <span class="pl-k">=</span> <span class="pl-c1">Differential</span>(t)

z <span class="pl-k">=</span> t <span class="pl-k">+</span> t<span class="pl-k">^</span><span class="pl-c1">2</span>
<span class="pl-c1">D</span>(z) <span class="pl-c"><span class="pl-c">#</span> symbolic representation of derivative(t + t^2, t)</span>
<span class="pl-c1">expand_derivatives</span>(<span class="pl-c1">D</span>(z)) <span class="pl-c"><span class="pl-c">#</span> 1 + 2t</span>

Symbolics<span class="pl-k">.</span><span class="pl-c1">jacobian</span>([x <span class="pl-k">+</span> x<span class="pl-k">*</span>y, x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> y],[x, y])

<span class="pl-c"><span class="pl-c">#</span>2×2 Matrix{Num}:</span>
<span class="pl-c"><span class="pl-c">#</span> 1 + y  x</span>
<span class="pl-c"><span class="pl-c">#</span>    2x  1</span>

B <span class="pl-k">=</span> <span class="pl-c1">simplify</span>.([t<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> t <span class="pl-k">+</span> t<span class="pl-k">^</span><span class="pl-c1">2</span>  <span class="pl-c1">2</span>t <span class="pl-k">+</span> <span class="pl-c1">4</span>t
              x <span class="pl-k">+</span> y <span class="pl-k">+</span> y <span class="pl-k">+</span> <span class="pl-c1">2</span>t  x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">-</span> x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> y<span class="pl-k">^</span><span class="pl-c1">2</span>])

<span class="pl-c"><span class="pl-c">#</span>2×2 Matrix{Num}:</span>
<span class="pl-c"><span class="pl-c">#</span>   t + 2(t^2)   6t</span>
<span class="pl-c"><span class="pl-c">#</span> x + 2(t + y)  y^2</span>

<span class="pl-c1">simplify</span>.(<span class="pl-c1">substitute</span>.(B, (<span class="pl-c1">Dict</span>(x <span class="pl-k">=&gt;</span> y<span class="pl-k">^</span><span class="pl-c1">2</span>),)))

<span class="pl-c"><span class="pl-c">#</span>2×2 Matrix{Num}:</span>
<span class="pl-c"><span class="pl-c">#</span>     t + 2(t^2)   6t</span>
<span class="pl-c"><span class="pl-c">#</span> y^2 + 2(t + y)  y^2</span>

<span class="pl-c1">substitute</span>.(B, (<span class="pl-c1">Dict</span>(x <span class="pl-k">=&gt;</span> <span class="pl-c1">2.0</span>, y <span class="pl-k">=&gt;</span> <span class="pl-c1">3.0</span>, t <span class="pl-k">=&gt;</span> <span class="pl-c1">4.0</span>),))

<span class="pl-c"><span class="pl-c">#</span>2×2 Matrix{Num}:</span>
<span class="pl-c"><span class="pl-c">#</span> 36.0  24.0</span>
<span class="pl-c"><span class="pl-c">#</span> 16.0   9.0</span></pre></div>
<h2><a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Citation</h2>
<p>If you use Symbolics.jl, please <a href="https://arxiv.org/abs/2105.03949" rel="nofollow">cite this paper</a></p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="@article{gowda2021high,
  title={High-performance symbolic-numerics via multiple dispatch},
  author={Gowda, Shashi and Ma, Yingbo and Cheli, Alessandro and Gwozdz, Maja and Shah, Viral B and Edelman, Alan and Rackauckas, Christopher},
  journal={arXiv preprint arXiv:2105.03949},
  year={2021}
}
"><pre><code>@article{gowda2021high,
  title={High-performance symbolic-numerics via multiple dispatch},
  author={Gowda, Shashi and Ma, Yingbo and Cheli, Alessandro and Gwozdz, Maja and Shah, Viral B and Edelman, Alan and Rackauckas, Christopher},
  journal={arXiv preprint arXiv:2105.03949},
  year={2021}
}
</code></pre></div>
</article></div>