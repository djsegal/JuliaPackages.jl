<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content--csetautomorphismsjl---" class="anchor" aria-hidden="true" href="#-csetautomorphismsjl---"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/logo.png"><img src="docs/src/assets/logo.png" alt="CSetAutomorphisms.jl" style="max-width: 100%;"></a> CSetAutomorphisms.jl <a href="https://AlgebraicJulia.github.io/CSetAutomorphisms.jl/dev/" rel="nofollow"><img src="https://github.com/AlgebraicJulia/CSetAutomorphisms.jl/workflows/Documentation/badge.svg" alt="Documentation" style="max-width: 100%;"></a>  <a target="_blank" rel="noopener noreferrer" href="https://github.com/AlgebraicJulia/CSetAutomorphisms.jl/workflows/Tests/badge.svg"><img src="https://github.com/AlgebraicJulia/CSetAutomorphisms.jl/workflows/Tests/badge.svg" alt="Tests" style="max-width: 100%;"></a></h1>
<p dir="auto"><a href="https://arxiv.org/pdf/2106.04703.pdf" rel="nofollow">Attributed C-sets</a> encompass a broad class of data structures, including many generalizations of graphs (e.g. <a href="https://www.algebraicjulia.org/blog/post/2020/09/cset-graphs-1/" rel="nofollow">directed</a>, <a href="https://www.algebraicjulia.org/blog/post/2020/09/cset-graphs-2" rel="nofollow">symmetric</a>, <a href="https://www.algebraicjulia.org/blog/post/2021/04/cset-graphs-3/" rel="nofollow">reflexive</a>), tabular data (e.g. <a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html" rel="nofollow">data frames</a>), and combinations of the two (e.g. weighted graphs, <a href="https://en.wikiversity.org/wiki/Relational_Databases/Introduction" rel="nofollow">relational databases</a>). This repo generalizes the <a href="https://pallini.di.uniroma1.it/Introduction.html" rel="nofollow">Nauty</a> algorithm, which produces canonical members of an isomorphism class, to cover any data structure encompassed by C-Sets. Furthermore, we compute and represent orbits and full automorphism groups of a C-Set, which can be applied to solving certain problems (e.g. searching for homomorphisms from A to B, up to isomorphism).</p>
<p dir="auto">More background is found in the <a href="https://algebraicjulia.github.io/CSetAutomorphisms.jl/dev/" rel="nofollow">documentation</a> or this <a href="https://www.algebraicjulia.org/blog/post/2022/01/cset-automorphisms/" rel="nofollow">blog</a> post.</p>
<h2 dir="auto"><a id="user-content-to-do" class="anchor" aria-hidden="true" href="#to-do"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>To do</h2>
<ul dir="auto">
<li>The recently-released <a href="https://github.com/olynch/CompTime.jl">CompTime.jl</a> will make it feasible to reimplement the core algorithm using code custom generated for a given C-Set, offering new opportunities for performance improvements.</li>
<li>For now, it is recommended to just use <code>NautyInterface</code> which reduces a C-Set automorphism problem to an undirected simple graph automorphism problem, which is fed to <code>nauty.c</code>.</li>
</ul>
</article></div>