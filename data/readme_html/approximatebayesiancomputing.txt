<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-approximatebayesiancomputing-abc" class="anchor" aria-hidden="true" href="#approximatebayesiancomputing-abc"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ApproximateBayesianComputing (ABC)</h1>
<p><a href="https://travis-ci.org/eford/ApproximateBayesianComputing.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7c9274eb6fb91f11e59cc70ef0d05f33ab96e444/68747470733a2f2f7472617669732d63692e6f72672f65666f72642f417070726f78696d617465426179657369616e436f6d707574696e672e6a6c2e706e67" alt="Build Status" data-canonical-src="https://travis-ci.org/eford/ApproximateBayesianComputing.jl.png" style="max-width:100%;"></a></p>
<p><a href="https://eford.github.io/ApproximateBayesianComputing.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://eford.github.io/ApproximateBayesianComputing.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p>This package implements basic algorithms fo Approximate Bayesian Computing (ABC) in Julia.<br>
Currently, it implements a single algorithm, ABC-PMC based on Beaumont et al. 2002 via abc_pmc_plan_type.</p>
<h1><a id="user-content-to-do" class="anchor" aria-hidden="true" href="#to-do"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>To Do</h1>
<ul>
<li>Write more realistic examples, before finalizing interface</li>
<li>Develope test cases</li>
<li>Generalize to work with an abstract abc_plan_type</li>
<li>Parallelize code</li>
<li>Expand documentation</li>
<li>Try to move GaussianMixtureModelCommonCovar to Distributions package</li>
<li>Look into moving cov_weighted, ess (effective sample size) and calc_dist_ks to more general pacakges</li>
<li>Implement additional ABC algorithms</li>
</ul>
</article></div>