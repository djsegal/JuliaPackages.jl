<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-offsetarraysjl" class="anchor" aria-hidden="true" href="#offsetarraysjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>OffsetArrays.jl</h1>
<p><a href="https://JuliaArrays.github.io/OffsetArrays.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/JuliaArrays/OffsetArrays.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0a1bb118d1db1711131fc32cf6b404e735a1792a/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614172726179732f4f66667365744172726179732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaArrays/OffsetArrays.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/JuliaArrays/OffsetArrays.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a11787af76b36850c8d5b1ef5bed948d1bd97de8/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614172726179732f4f66667365744172726179732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaArrays/OffsetArrays.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/7667b24da9f167cca25f6a4e3b21451a7f5b29e4/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f4f2f4f66667365744172726179732e737667" alt="PkgEval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/O/OffsetArrays.svg" style="max-width:100%;"></a></p>
<p>OffsetArrays provides Julia users with arrays that have arbitrary
indices, similar to those found in some other programming languages
like Fortran.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>You can construct such arrays as follows:</p>
<div class="highlight highlight-source-julia"><pre>OA <span class="pl-k">=</span> <span class="pl-c1">OffsetArray</span>(A, axis1, axis2, <span class="pl-k">...</span>)</pre></div>
<p>where you want <code>OA</code> to have axes <code>(axis1, axis2, ...)</code> and be indexed by values that
fall within these axis ranges. Example:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> OffsetArrays
A <span class="pl-k">=</span> <span class="pl-c1">reshape</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">15</span>, <span class="pl-c1">3</span>, <span class="pl-c1">5</span>)
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>here is A:<span class="pl-pds">"</span></span>)
<span class="pl-c1">display</span>(A)
OA <span class="pl-k">=</span> <span class="pl-c1">OffsetArray</span>(A, <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>, <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">4</span>)    <span class="pl-c"><span class="pl-c">#</span> OA will have axes (-1:1, 0:4)</span>
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>here is OA:<span class="pl-pds">"</span></span>)
<span class="pl-c1">display</span>(OA)
<span class="pl-c1">@show</span> OA[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>] OA[<span class="pl-c1">1</span>,<span class="pl-c1">4</span>]</pre></div>
<p>which prints out</p>
<pre><code>here is A:
3×5 reshape(::UnitRange{Int64}, 3, 5) with eltype Int64:
 1  4  7  10  13
 2  5  8  11  14
 3  6  9  12  15
here is OA:
OffsetArray(reshape(::UnitRange{Int64}, 3, 5), -1:1, 0:4) with eltype Int64 with indices -1:1×0:4:
 1  4  7  10  13
 2  5  8  11  14
 3  6  9  12  15
OA[-1, 0] = 1
OA[1, 4] = 15
</code></pre>
</article></div>