<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-robustneuralnetworksjl" class="anchor" aria-hidden="true" href="#robustneuralnetworksjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RobustNeuralNetworks.jl</h1>
<p dir="auto"><a href="https://github.com/acfr/RobustNeuralNetworks.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/acfr/RobustNeuralNetworks.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://acfr.github.io/RobustNeuralNetworks.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://acfr.github.io/RobustNeuralNetworks.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">A Julia package for robust neural networks built from the <a href="https://arxiv.org/abs/2104.05942" rel="nofollow">Recurrent Equilibrium Network (REN)</a> and <a href="https://arxiv.org/abs/2301.11526" rel="nofollow">Lipschitz-Bounded Deep Network (LBDN)</a> model classes. Please visit <a href="https://acfr.github.io/RobustNeuralNetworks.jl/dev/" rel="nofollow">the docs page</a> for detailed documentation</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">To install the package, type the following into the REPL.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="] add RobustNeuralNetworks"><pre class="notranslate"><code>] add RobustNeuralNetworks
</code></pre></div>
<p dir="auto">You should now be able to construct robust neural network models. The following example constructs a contracting REN and evalutates it given a batch of random initial states <code>x0</code> and inputs <code>u0</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Random
using RobustNeuralNetworks

# Setup
rng = MersenneTwister(42)
batches = 10
nu, nx, nv, ny = 4, 2, 20, 1

# Construct a REN
contracting_ren_ps = ContractingRENParams{Float64}(nu, nx, nv, ny; rng=rng)
ren = REN(contracting_ren_ps)

# Some random inputs
x0 = init_states(ren, batches; rng=rng)
u0 = randn(rng, ren.nu, batches)

# Evaluate the REN over one timestep
x1, y1 = ren(x0, u0)

println(round.(y1;digits=2))"><pre><span class="pl-k">using</span> Random
<span class="pl-k">using</span> RobustNeuralNetworks

<span class="pl-c"><span class="pl-c">#</span> Setup</span>
rng <span class="pl-k">=</span> <span class="pl-c1">MersenneTwister</span>(<span class="pl-c1">42</span>)
batches <span class="pl-k">=</span> <span class="pl-c1">10</span>
nu, nx, nv, ny <span class="pl-k">=</span> <span class="pl-c1">4</span>, <span class="pl-c1">2</span>, <span class="pl-c1">20</span>, <span class="pl-c1">1</span>

<span class="pl-c"><span class="pl-c">#</span> Construct a REN</span>
contracting_ren_ps <span class="pl-k">=</span> <span class="pl-c1">ContractingRENParams</span><span class="pl-c1">{Float64}</span>(nu, nx, nv, ny; rng<span class="pl-k">=</span>rng)
ren <span class="pl-k">=</span> <span class="pl-c1">REN</span>(contracting_ren_ps)

<span class="pl-c"><span class="pl-c">#</span> Some random inputs</span>
x0 <span class="pl-k">=</span> <span class="pl-c1">init_states</span>(ren, batches; rng<span class="pl-k">=</span>rng)
u0 <span class="pl-k">=</span> <span class="pl-c1">randn</span>(rng, ren<span class="pl-k">.</span>nu, batches)

<span class="pl-c"><span class="pl-c">#</span> Evaluate the REN over one timestep</span>
x1, y1 <span class="pl-k">=</span> <span class="pl-c1">ren</span>(x0, u0)

<span class="pl-c1">println</span>(<span class="pl-c1">round</span>.(y1;digits<span class="pl-k">=</span><span class="pl-c1">2</span>))</pre></div>
<p dir="auto">The output should be:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="[-31.41 0.57 -0.55 -3.56 -35.0 -18.28 -25.48 -7.49 -4.14 15.31]"><pre>[<span class="pl-k">-</span><span class="pl-c1">31.41</span> <span class="pl-c1">0.57</span> <span class="pl-k">-</span><span class="pl-c1">0.55</span> <span class="pl-k">-</span><span class="pl-c1">3.56</span> <span class="pl-k">-</span><span class="pl-c1">35.0</span> <span class="pl-k">-</span><span class="pl-c1">18.28</span> <span class="pl-k">-</span><span class="pl-c1">25.48</span> <span class="pl-k">-</span><span class="pl-c1">7.49</span> <span class="pl-k">-</span><span class="pl-c1">4.14</span> <span class="pl-c1">15.31</span>]</pre></div>
<h2 dir="auto"><a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contact</h2>
<p dir="auto">Please contact Nic Barbara (<a href="mailto:nicholas.barbara@sydney.edu.au">nicholas.barbara@sydney.edu.au</a>) with any questions.</p>
</article></div>