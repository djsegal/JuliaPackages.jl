<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-geometric-algebra-for-julia" class="anchor" aria-hidden="true" href="#geometric-algebra-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Geometric Algebra for Julia</h1>
<p>This is work-in-progress straight port of <a href="http://www.geometricalgebra.net/reference_impl.html" title="Fontijne's implementation in Java" rel="nofollow">Fontijne's reference implementation</a> of geometric
algebra utilities to Julia. The code is right now mostly unperformant and non-idiomatic, but I try to
improve it whenever I can.</p>
<p>This project follows the license of the original implementation, GPL2.</p>
<h2><a id="user-content-things-to-do" class="anchor" aria-hidden="true" href="#things-to-do"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Things to do</h2>
<p>A list of things to do, in no particular order:</p>
<ul>
<li>Rewrite in idiomatic Julia</li>
<li>Implement general_inverse and utility functions for Multivectors</li>
<li>Support named basis vectors</li>
<li>Maybe a builtin support for popular geometry models (conformal, hyperbolic, homogeneous etc)</li>
<li>A comprehensive test suite</li>
<li>cos() and sin()</li>
<li>Multivector types</li>
<li>meet and join (possibly using the new method described <a href="http://www.geometricalgebra.net/downloads/fontijne_agacse2008_fact_join_blades.pdf" title="Fontijne's paper" rel="nofollow">here</a></li>
<li>A comprehensive benchmark to track performance improvements/regressions</li>
<li>Travis-ci support?</li>
<li>Write documentation</li>
<li>Use BitArray for bitmaps instead of integers?</li>
</ul>
</article></div>