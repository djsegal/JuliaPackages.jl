<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-geometric-algebra-for-julia" class="anchor" aria-hidden="true" href="#geometric-algebra-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Geometric Algebra for Julia</h1>
<p>This is work-in-progress straight port of <a href="http://www.geometricalgebra.net/reference_impl.html" title="Fontijne's implementation in Java" rel="nofollow">Fontijne's reference implementation</a> of geometric
algebra utilities to Julia. The code is right now mostly unperformant and non-idiomatic, but I try to
improve it whenever I can.</p>
<p>This project follows the license of the original implementation, GPL2.</p>
<h2><a id="user-content-things-to-do" class="anchor" aria-hidden="true" href="#things-to-do"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Things to do</h2>
<p>A list of things to do, in no particular order:</p>
<ul>
<li>Rewrite in idiomatic Julia</li>
<li>Implement general_inverse and utility functions for Multivectors</li>
<li>Support named basis vectors</li>
<li>Maybe a builtin support for popular geometry models (conformal, hyperbolic, homogeneous etc)</li>
<li>A comprehensive test suite</li>
<li>cos() and sin()</li>
<li>Multivector types</li>
<li>meet and join (possibly using the new method described <a href="http://www.geometricalgebra.net/downloads/fontijne_agacse2008_fact_join_blades.pdf" title="Fontijne's paper" rel="nofollow">here</a></li>
<li>A comprehensive benchmark to track performance improvements/regressions</li>
<li>Travis-ci support?</li>
<li>Write documentation</li>
<li>Use BitArray for bitmaps instead of integers?</li>
</ul>
</article></div>