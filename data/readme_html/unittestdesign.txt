<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-unittestdesign" class="anchor" aria-hidden="true" href="#unittestdesign"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>UnitTestDesign</h1>
<p><a href="https://adolgert.github.io/UnitTestDesign.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://adolgert.github.io/UnitTestDesign.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/adolgert/UnitTestDesign.jl/actions"><img src="https://github.com/adolgert/UnitTestDesign.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/adolgert/UnitTestDesign.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/83d66674bac9cc49ca0c85703e9d0610f1b3d641858c85491c4dccf616a0a0f0/68747470733a2f2f636f6465636f762e696f2f67682f61646f6c676572742f556e69745465737444657369676e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/adolgert/UnitTestDesign.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Chooses function arguments to make unit testing faster and more effective.</p>
<ul>
<li><a href="http://computingkitchen.com/UnitTestDesign.jl/stable/" rel="nofollow">Documentation</a></li>
</ul>
<p>This package generates parameter values for unit tests, chooses software configurations for integration testing, or generates test datasets. If the system-under-test takes a long time to run or has many possible parameters or many possible values each parameter can take, this library chooses combinations of parameters that are more likely to find faults in the code. It assumes that code will break when there are <em>interactions</em> between different parameter choices, so it generates test data that covers all possible interactions among two parameters, the <strong>all-pairs</strong> algorithm, or three parameters, the <strong>all-triples</strong> algorithm, or higher-order combinatorial interactions.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="pkg&gt; add UnitTestDesign
"><pre><code>pkg&gt; add UnitTestDesign
</code></pre></div>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="test_set = all_pairs(
    [1, 2, 3], [&quot;low&quot;, &quot;mid&quot; ,&quot;high&quot;], [1.0, 3.7, 4.9], [:greedy, :relax, :optim]
    )
for test_case in test_set
    test_result = function_under_test(test_case...)
    @test test_result == known_result(test_case)
end
"><pre>test_set <span class="pl-k">=</span> <span class="pl-c1">all_pairs</span>(
    [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">3</span>], [<span class="pl-s"><span class="pl-pds">"</span>low<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>mid<span class="pl-pds">"</span></span> ,<span class="pl-s"><span class="pl-pds">"</span>high<span class="pl-pds">"</span></span>], [<span class="pl-c1">1.0</span>, <span class="pl-c1">3.7</span>, <span class="pl-c1">4.9</span>], [<span class="pl-c1">:greedy</span>, <span class="pl-c1">:relax</span>, <span class="pl-c1">:optim</span>]
    )
<span class="pl-k">for</span> test_case <span class="pl-k">in</span> test_set
    test_result <span class="pl-k">=</span> <span class="pl-c1">function_under_test</span>(test_case<span class="pl-k">...</span>)
    <span class="pl-c1">@test</span> test_result <span class="pl-k">==</span> <span class="pl-c1">known_result</span>(test_case)
<span class="pl-k">end</span></pre></div>
</article></div>