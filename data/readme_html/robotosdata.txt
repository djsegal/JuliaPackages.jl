<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-robotosdata" class="anchor" aria-hidden="true" href="#robotosdata"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>RobotOSData</h1>
<p><em>Work in progress: you can use this package by installing it directly from this git repository, but it is not registered yet</em></p>
<p><a href="https://travis-ci.org/damiendr/RobotOSData.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/03db3995fcf39174bedb633e6e980f89c4ca3e85/68747470733a2f2f7472617669732d63692e6f72672f64616d69656e64722f526f626f744f53446174612e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/damiendr/RobotOSData.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/damiendr/RobotOSData.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/51ad2bc440cce8b7ec3fd38dc5a4190839798039/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f64616d69656e64722f526f626f744f53446174612e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/damiendr/RobotOSData.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></p>
<p>A library to read data from <a href="http://wiki.ros.org/Bags/" rel="nofollow">ROS bags</a> and <a href="http://wiki.ros.org/Messages" rel="nofollow">messages</a> in Julia.</p>
<p>This package has no dependencies on the ROS codebase: you can use it without a working ROS install.</p>
<p>Only ROS bags v2.0 are supported at the moment. If you'd like support for earlier versions, do open an issue or submit a pull request.</p>
<p>Reading from uncompressed bags is pretty fast (up to 500 MB/s on my laptop). Bags with BZip2 compression are supported, but reading these is about two orders of magnitude slower. Profiling shows that most of that time is spent in <code>libbzip2</code> itself, so there is probably not much that can be done to make it faster.</p>
<h2><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic Usage</h2>
<p>Load a bag file through FileIO:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> RobotOSData
<span class="pl-k">using</span> FileIO
bag <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>indoor_flying1_data.bag<span class="pl-pds">"</span></span>)</pre></div>
<p>This parses the index structure and shows a summary of the contents:</p>
<pre><code>ROS Bag v2.0 at indoor_flying1_data.bag
1437 uncompressed chunks with 1.2 GiB of message data
154942 messages in 9 topics:
 └─/davis/right/imu:                sensor_msgs/Imu =&gt; RobotOSData.CommonMsgs.sensor_msgs.Imu
 └─/davis/left/imu:                 sensor_msgs/Imu =&gt; RobotOSData.CommonMsgs.sensor_msgs.Imu
 └─/davis/right/events:         dvs_msgs/EventArray =&gt; Array{UInt8,1}
 └─/davis/left/events:          dvs_msgs/EventArray =&gt; Array{UInt8,1}
 └─/davis/left/camera_info:  sensor_msgs/CameraInfo =&gt; RobotOSData.CommonMsgs.sensor_msgs.CameraInfo
 └─/davis/left/image_raw:         sensor_msgs/Image =&gt; RobotOSData.CommonMsgs.sensor_msgs.Image
 └─/velodyne_point_cloud:   sensor_msgs/PointCloud2 =&gt; RobotOSData.CommonMsgs.sensor_msgs.PointCloud2
 └─/davis/right/camera_info: sensor_msgs/CameraInfo =&gt; RobotOSData.CommonMsgs.sensor_msgs.CameraInfo
 └─/davis/right/image_raw:        sensor_msgs/Image =&gt; RobotOSData.CommonMsgs.sensor_msgs.Image
</code></pre>
<p>Note how the standard ROS messages are resolved to a Julia type, while topics with the non-standard type "dvs_msgs/EventArray" will be parsed as raw <code>Array{UInt8,1}</code>. See below to add support for non-standard types.</p>
<p>You can now read the messages in the bag:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-k">using</span> RobotOSData
<span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">@time</span> bag[:] <span class="pl-c"><span class="pl-c">#</span> read all messages</span>
  <span class="pl-c1">2.655052</span> seconds (<span class="pl-c1">6.83</span> M allocations<span class="pl-k">:</span> <span class="pl-c1">1.556</span> GiB, <span class="pl-c1">8.31</span><span class="pl-k">%</span> gc time)
Dict{String,Array{T,<span class="pl-c1">1</span>} <span class="pl-k">where</span> T} with <span class="pl-c1">9</span> entries<span class="pl-k">:</span>
  <span class="pl-s"><span class="pl-pds">"</span>/davis/right/imu<span class="pl-pds">"</span></span>         <span class="pl-k">=&gt;</span> MessageData{RobotOSData<span class="pl-k">.</span>CommonMsgs<span class="pl-k">.</span>sensor_msgs.…
  <span class="pl-s"><span class="pl-pds">"</span>/davis/right/camera_info<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> MessageData{RobotOSData<span class="pl-k">.</span>CommonMsgs<span class="pl-k">.</span>sensor_msgs.…
  <span class="pl-s"><span class="pl-pds">"</span>/davis/right/image_raw<span class="pl-pds">"</span></span>   <span class="pl-k">=&gt;</span> MessageData{RobotOSData<span class="pl-k">.</span>CommonMsgs<span class="pl-k">.</span>sensor_msgs.…
  <span class="pl-s"><span class="pl-pds">"</span>/davis/left/camera_info<span class="pl-pds">"</span></span>  <span class="pl-k">=&gt;</span> MessageData{RobotOSData<span class="pl-k">.</span>CommonMsgs<span class="pl-k">.</span>sensor_msgs.…
  <span class="pl-s"><span class="pl-pds">"</span>/davis/right/events<span class="pl-pds">"</span></span>      <span class="pl-k">=&gt;</span> MessageData{Array{UInt8,<span class="pl-c1">1</span>}}[MessageData{Array{U…
  <span class="pl-s"><span class="pl-pds">"</span>/davis/left/image_raw<span class="pl-pds">"</span></span>    <span class="pl-k">=&gt;</span> MessageData{RobotOSData<span class="pl-k">.</span>CommonMsgs<span class="pl-k">.</span>sensor_msgs.…
  <span class="pl-s"><span class="pl-pds">"</span>/davis/left/imu<span class="pl-pds">"</span></span>          <span class="pl-k">=&gt;</span> MessageData{RobotOSData<span class="pl-k">.</span>CommonMsgs<span class="pl-k">.</span>sensor_msgs.…
  <span class="pl-s"><span class="pl-pds">"</span>/velodyne_point_cloud<span class="pl-pds">"</span></span>    <span class="pl-k">=&gt;</span> MessageData{RobotOSData<span class="pl-k">.</span>CommonMsgs<span class="pl-k">.</span>sensor_msgs.…
  <span class="pl-s"><span class="pl-pds">"</span>/davis/left/events<span class="pl-pds">"</span></span>       <span class="pl-k">=&gt;</span> MessageData{Array{UInt8,<span class="pl-c1">1</span>}}[MessageData{Array{U…</pre></div>
<p>You can also read only some of the messages, which is faster than reading the whole file:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> read chunks 1 to 10:</span>
<span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">@time</span> bag[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>]
  <span class="pl-c1">0.016518</span> seconds (<span class="pl-c1">56.23</span> k allocations<span class="pl-k">:</span> <span class="pl-c1">11.630</span> MiB)
<span class="pl-c"><span class="pl-c">#</span> read a specific topic:</span>
<span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">@time</span> bag[<span class="pl-s"><span class="pl-pds">"</span>/davis/right/imu<span class="pl-pds">"</span></span>]
  <span class="pl-c1">0.707286</span> seconds (<span class="pl-c1">3.60</span> M allocations<span class="pl-k">:</span> <span class="pl-c1">244.969</span> MiB)
<span class="pl-c"><span class="pl-c">#</span> read a time span:</span>
<span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">@time</span> bag[<span class="pl-c1">ROSTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2017-09-05T20:59:40<span class="pl-pds">"</span></span>)<span class="pl-k">:</span><span class="pl-c1">ROSTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2017-09-05T20:59:50<span class="pl-pds">"</span></span>)]
  <span class="pl-c1">0.317334</span> seconds (<span class="pl-c1">743.59</span> k allocations<span class="pl-k">:</span> <span class="pl-c1">231.204</span> MiB)
<span class="pl-c"><span class="pl-c">#</span> combine a specific topic and time span:</span>
<span class="pl-k">&gt;&gt;&gt;</span> <span class="pl-c1">@time</span> bag[<span class="pl-s"><span class="pl-pds">"</span>/davis/left/image_raw<span class="pl-pds">"</span></span>, <span class="pl-c1">ROSTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2017-09-05T20:59:40<span class="pl-pds">"</span></span>)<span class="pl-k">:</span><span class="pl-c1">ROSTime</span>(<span class="pl-s"><span class="pl-pds">"</span>2017-09-05T20:59:50<span class="pl-pds">"</span></span>)]
  <span class="pl-c1">0.116424</span> seconds (<span class="pl-c1">323.86</span> k allocations<span class="pl-k">:</span> <span class="pl-c1">50.807</span> MiB)</pre></div>
<h2><a id="user-content-message-types" class="anchor" aria-hidden="true" href="#message-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Message Types</h2>
<p>RobotOSData comes with parsers for the message types in the ROS packages <code>std_msgs</code> and <code>common_msgs</code>, and these are enabled by default. To disable them, use the following:</p>
<div class="highlight highlight-source-julia"><pre>bag <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>indoor_flying1_data.bag<span class="pl-pds">"</span></span>; std_types<span class="pl-k">=</span>[])</pre></div>
<p>In the absence of a suitable parser, the message data will be read as raw bytes.</p>
<h3><a id="user-content-writing-new-message-types" class="anchor" aria-hidden="true" href="#writing-new-message-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Writing new message types</h3>
<p>If you want to support a new message type, for instance <code>my_ros_pkg/NewMsgType</code>, you can do so as follows:</p>
<div class="highlight highlight-source-julia"><pre>bag <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>recording.bag<span class="pl-pds">"</span></span>, ExtraMessages)</pre></div>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">module</span> ExtraMessages
    <span class="pl-k">module</span> my_ros_pkg
        <span class="pl-k">using</span> RobotOSData<span class="pl-k">.</span>Messages <span class="pl-c"><span class="pl-c">#</span> imports Readable, Header</span>
        <span class="pl-k">using</span> RobotOSData<span class="pl-k">.</span>StdMsgs
        <span class="pl-k">using</span> RobotOSData<span class="pl-k">.</span>CommonMsgs <span class="pl-c"><span class="pl-c">#</span> for sensor_msgs</span>
        <span class="pl-k">struct</span> NewMsgType <span class="pl-k">&lt;:</span> <span class="pl-c1">Readable</span>
            header<span class="pl-k">::</span><span class="pl-c1">Header</span>
            imu<span class="pl-k">::</span><span class="pl-c1">sensor_msgs.Imu</span>
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p>The parser will call <code>read(io, NewMsgType)</code> to deserialize the new type. <code>Readable</code> already provides a generic implementation of <code>read</code> that should be adequate in most cases. But you could also write your own <code>read(io::IO, ::Type{NewMsgType})</code>. Have a look at the <code>read_field()</code> methods <a href="https://github.com/damiendr/RobotOSData.jl/blob/master/src/messages.jl">here</a>.</p>
<h3><a id="user-content-auto-generating-message-types" class="anchor" aria-hidden="true" href="#auto-generating-message-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Auto-generating message types</h3>
<p>RobotOSData provides a tool that lets you generate modules like the one above from the <code>.msg</code> files in a ROS package. To keep things simple, this tool does not try to resolve the dependencies between packages — it is up to you to indicate them. It will, however, handle dependencies between message files in the same package.</p>
<div class="highlight highlight-source-julia"><pre>RobotOSData<span class="pl-k">.</span><span class="pl-c1">gen_module</span>(<span class="pl-c1">:ExtraMessages</span>, [<span class="pl-s"><span class="pl-pds">"</span>path/to/my_ros_pkg<span class="pl-pds">"</span></span>], <span class="pl-s"><span class="pl-pds">"</span>path/to/dest/dir<span class="pl-pds">"</span></span>,
    :(RobotOSData<span class="pl-k">.</span>StdMsgs), :(RobotOSData<span class="pl-k">.</span>CommonMsgs))</pre></div>
</article></div>