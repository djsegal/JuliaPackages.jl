<div id="readme" class="md" data-path="readme.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2 dir="auto"><a id="user-content-libr-aqueous-lithium-bromide-property-routines" class="anchor" aria-hidden="true" href="#libr-aqueous-lithium-bromide-property-routines"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LiBr (aqueous lithium bromide) Property Routines</h2>
<p dir="auto">The property routines described here are for the aqueous salt mixture LiBr/H2O. These routines were developed primarily as a part of the Sorption Systems Consortium at the University of Maryland.
The basic rotuines are provided in an external library named LiBrSSC.dll. The routines available in this library are listed in Table 1. The units of the properties must be as specified.</p>
<p dir="auto">Table 1. Summary of LiBrSSC Routines</p>
<table>
<thead>
<tr>
<th>Functions</th>
<th>Units</th>
<th>Comments</th>
</tr>
</thead>
<tbody>
<tr>
<td>Thermal conductivity</td>
<td>W/m-K</td>
<td>k = libr_k(x,T)</td>
</tr>
<tr>
<td>Dynamic viscosity</td>
<td>cP</td>
<td>μ = libr_μ(x,T)</td>
</tr>
<tr>
<td>Specific heat</td>
<td>J/g-K</td>
<td>cp = libr_cp(x,T,p) or cp_sat = libr_cp(x,T)</td>
</tr>
<tr>
<td>Enthalpy</td>
<td>J/g</td>
<td>h = libr_h(x,T,p) or h_sat = libr_h(x,T)</td>
</tr>
<tr>
<td>Chemical potential of water</td>
<td>J/g</td>
<td>μw = libr_uw(x,T, p)</td>
</tr>
<tr>
<td>Chemical potential of LiBr</td>
<td>J/g</td>
<td>μLiBr = libr_us(x,T, p)</td>
</tr>
<tr>
<td>Volume</td>
<td>m^3/kg</td>
<td>v = libr_v(x,T)</td>
</tr>
<tr>
<td>Entropy</td>
<td>J/g-K</td>
<td>s = libr_s(x,T,p) or s_sat = libr_s(x,T)</td>
</tr>
<tr>
<td>Saturation pressure</td>
<td>kPa</td>
<td>Psat = libr_p(x,T)</td>
</tr>
<tr>
<td>Saturation temperature</td>
<td>K</td>
<td>Tsat = libr_t(x,p)</td>
</tr>
<tr>
<td>Saturation mass fraction</td>
<td>-</td>
<td>Xsat = libr_x(T,p)</td>
</tr>
<tr>
<td>Crystallization temperature</td>
<td>°C</td>
<td>Tcryst = libr_tCryst(x)</td>
</tr>
<tr>
<td>Index of refraction</td>
<td>-</td>
<td>N = libr_refindex(x,T)</td>
</tr>
<tr>
<td>Partial mass Gibbs function</td>
<td>J/g</td>
<td>g,dgdx,mu_w,mu_s=libr_part_g(x, T, P )</td>
</tr>
<tr>
<td>Partial mass enthalpy</td>
<td>J/g</td>
<td>h,dhdx,h_w,h_s=libr_part_h(x, T, P )</td>
</tr>
<tr>
<td>Partial mass entropy</td>
<td>J/g-K</td>
<td>s,dsdx,s_w,s_s=libr_part_s(x, T, P )</td>
</tr>
<tr>
<td>Partial mass volume</td>
<td><math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="a7163dd024ba24b26c7eff410792b87e">$m^3/kg$</math-renderer></td>
<td>v,dvdx,v_w,v_s=libr_part_v(x, T, P )</td>
</tr>
<tr>
<td>Flashing process</td>
<td>-</td>
<td>q,T,x,hl,hv=libr_flash(x,h,p)</td>
</tr>
<tr>
<td>help function</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Temperature according Enthalpy</td>
<td>K</td>
<td>T=libr_xht(x,h,p)</td>
</tr>
<tr>
<td>Mass faction accroding Enthalpy</td>
<td>%</td>
<td>x=libr_htx(h,t,p)</td>
</tr>
<tr>
<td>Temperature according entropy</td>
<td>K</td>
<td>T=libr_xst(x,s,p)</td>
</tr>
<tr>
<td>Mass faction according entropy</td>
<td>%</td>
<td>x=libr_stx(s,t,p)</td>
</tr>
</tbody>
</table>
<p dir="auto">See details on units in procedure description
Input Units: Tc - K, X – mass fraction of LiBr %, P – kPa</p>
<h3 dir="auto">
<a id="user-content-transport-properties" class="anchor" aria-hidden="true" href="#transport-properties"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Transport Properties</h3>
<p dir="auto">The transport property correlations included were derived from an examination of available data. This was done as
part of the SSC efforts but was unpublished [1]. Details of the correlations are summarized here</p>
<h3 dir="auto">
<a id="user-content-viscosity" class="anchor" aria-hidden="true" href="#viscosity"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Viscosity</h3>
<p dir="auto"><math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="a7163dd024ba24b26c7eff410792b87e">$$lnμ=A_0+A_1X^2+\frac{B_0}{T}+\frac{B_1X^2}{T}+\frac{C_0}{T}+\frac{C_1X^2}{T}$$</math-renderer></p>
<p dir="auto">where the units are μ (cP), T (K), X (mass fraction LiBr) and the constants are</p>
<table>
<thead>
<tr>
<th>Coef0</th>
<th>Coef1</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ao = -2.3212641667148</td>
<td>A1 = 3.190587778753</td>
</tr>
<tr>
<td>Bo = -609.44957160372</td>
<td>B1 = 963.16370163469</td>
</tr>
<tr>
<td>Co = 372994.85578423</td>
<td>C1 = -35211.99698739</td>
</tr>
</tbody>
</table>
<p dir="auto">This equation yields a <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="a7163dd024ba24b26c7eff410792b87e">$R^2$</math-renderer> value of 0.984073 across all of the data sets used. Example calculation: T = 25°C (298.15
K), X = 50% <g-emoji class="g-emoji" alias="arrow_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png">➡</g-emoji> μ = 3.807 cP.</p>
<h3 dir="auto">
<a id="user-content-thermal-conductivity" class="anchor" aria-hidden="true" href="#thermal-conductivity"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Thermal Conductivity</h3>
<p dir="auto"><math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="a7163dd024ba24b26c7eff410792b87e">$$k=A_0+A_1X+B_0T+B_1TX+C_0T^2+C_1T^2X+D_0T^3+D_1T^3X$$</math-renderer></p>
<p dir="auto">where k = W/m-K, T = K &amp; X = mass fraction LiBr</p>
<table>
<thead>
<tr>
<th>Coef0</th>
<th>Coef1</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ao= -0.880453887702949</td>
<td>A1 = 0.883985046484968</td>
</tr>
<tr>
<td>Bo = 0.00898659269884302</td>
<td>B1 = -0.007666522227789178</td>
</tr>
<tr>
<td>Co = -1.55427759660091E-05</td>
<td>C1 = 1.38873506415764E-05</td>
</tr>
<tr>
<td>Do = 7.3203107999836E-09</td>
<td>D1 = -6.31953452062666E-09</td>
</tr>
</tbody>
</table>
<p dir="auto">Our “best fit” produced an R2 value of 0.9844 and the most well behaved curve over a broad range of the
independent parameters. There were equations that had higher R2 values but the one shown above had the best
combination of properties. Example calculation: T = 25°C (298.15 K), X = 50%  k = 0.444 W/m-K.</p>
<h3 dir="auto">
<a id="user-content-index-of-refraction" class="anchor" aria-hidden="true" href="#index-of-refraction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Index of Refraction</h3>
<p dir="auto">The index of refraction of aqueous lithium bromide can be calculated from the correlation of Bostick et al. [2]</p>
<p dir="auto"><math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="a7163dd024ba24b26c7eff410792b87e">$$N=N_1X^2+N_2X+N_3T+N_4$$</math-renderer></p>
<p dir="auto">where</p>
<table>
<thead>
<tr>
<th>i</th>
<th><math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="a7163dd024ba24b26c7eff410792b87e">$N_i$</math-renderer></th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>0.0000241</td>
</tr>
<tr>
<td>2</td>
<td>0.00108</td>
</tr>
<tr>
<td>3</td>
<td>-0.000106</td>
</tr>
<tr>
<td>4</td>
<td>1.3348</td>
</tr>
</tbody>
</table>
<p dir="auto">Units: T - °C, x – mass fraction LiBr in %</p>
<h3 dir="auto">
<a id="user-content-crystallization-temperature" class="anchor" aria-hidden="true" href="#crystallization-temperature"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Crystallization Temperature</h3>
<p dir="auto">The crystallization temperature is calculated from a curve fit to the data of Boryta [3].
<math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="a7163dd024ba24b26c7eff410792b87e">$$x=A_0+A_1T+A_2T^2$$</math-renderer></p>
<table>
<tbody>
<tr>
<td>i</td>
<td colspan="3">Ai</td>
</tr>
<tr>
<td></td>
<td>65.05 &lt; x &lt; 71.91</td>
<td>57.08 &lt; x &lt; 65.05</td>
<td>48.47 &lt; x &lt; 57.08</td>
</tr>
<tr>
<td>0</td>
<td>62.63716</td>
<td>56.95202</td>
<td>56.55952</td>
</tr>
<tr>
<td>1</td>
<td>0.04810823</td>
<td>0.05205944</td>
<td>0.2337275</td>
</tr>
<tr>
<td>2</td>
<td>0.00024301</td>
<td>0.00346278</td>
<td>0.00141297</td>
</tr>
</tbody>
</table>
<p dir="auto">Units: T - °C, x – mass fraction LiBr in %</p>
<h3 dir="auto">
<a id="user-content-thermodynamic-properties" class="anchor" aria-hidden="true" href="#thermodynamic-properties"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Thermodynamic Properties</h3>
<p dir="auto">The thermodynamic properties include volume, enthalpy, specific heat, entropy and chemical potential as well as the
saturation properties temperature and pressure. All of these properties are derived from a Gibbs function fitted to a
broad set of data for the mixture. The advantage of this approach is that any thermodynamic property of interest can
be easily derived from the Gibbs function. And a corollary is that all of the derived properties will be thermodynamically consistent (up to the precision of the calculation). The details of the Gibbs function are available
in the literature [4, 5]. It provides excellent fidelity with the available data over the full concentration range from
pure water up to crystallization and from 0 – 300°C.</p>
<h3 dir="auto">
<a id="user-content-enthalpy-of-aqueous-lithium-bromide" class="anchor" aria-hidden="true" href="#enthalpy-of-aqueous-lithium-bromide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Enthalpy of Aqueous Lithium Bromide</h3>
h = libr_h(T,x) or h = libr_h(T,x,P)
In general, we expect three independent properties to be required to specify state for a binary mixture such as
aqueous lithium bromide. However, because the pressure effect is usually small, it is often omitted from property
correlations for this mixture. The SSC routines retain and calculate pressure effects. However, to simplify routine
use where the pressure effects can be ignored, the SSC enthalpy routine has an overload feature which calculates
(and uses) the saturation pressure for cases where the user does not input a pressure value. Example calculation: T
= 25°C (298.15K), X = 50% <g-emoji class="g-emoji" alias="arrow_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png">➡</g-emoji> h = 52.92 J/g.
<h3 dir="auto">
<a id="user-content-entropy-of-aqueous-lithium-bromide" class="anchor" aria-hidden="true" href="#entropy-of-aqueous-lithium-bromide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Entropy of Aqueous Lithium Bromide</h3>
s = libr_s(x,T,p) or s = libr_s(x,T,p)
Example calculation: T = 25°C (298.15K), X = 50% <g-emoji class="g-emoji" alias="arrow_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png">➡</g-emoji> s = 0.1853 J/g-K.
<h3 dir="auto">
<a id="user-content-specific-heat-of-aqueous-lithium-bromide" class="anchor" aria-hidden="true" href="#specific-heat-of-aqueous-lithium-bromide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Specific Heat of Aqueous Lithium Bromide</h3>
cp = libr_cp(x,T) or cp = libr_cp(x,T,p)
Example calculation: T = 25°C (298.15K), X = 50% <g-emoji class="g-emoji" alias="arrow_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png">➡</g-emoji> cp = 2.151 J/g-K.
<h3 dir="auto">
<a id="user-content-specific-volume-of-aqueous-lithium-bromide" class="anchor" aria-hidden="true" href="#specific-volume-of-aqueous-lithium-bromide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Specific Volume of Aqueous Lithium Bromide</h3>
v = libr_v(x,T)
Example calculation: T = 25°C (298.15K), X = 50% <g-emoji class="g-emoji" alias="arrow_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png">➡</g-emoji> v = 0.0006523 m3/kg
<h3 dir="auto">
<a id="user-content-chemical-potential-in-aqueous-lithium-bromide" class="anchor" aria-hidden="true" href="#chemical-potential-in-aqueous-lithium-bromide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Chemical Potential in Aqueous Lithium Bromide</h3>
 g,dgdx,mu_w,mu_s=libr_part_g(x,T,p)
<p dir="auto">$$g_w=u_w=g-x(\frac{∂g}{∂x})<em>{p,T}$$
$$g_s=u_s=g+(100-x)\frac{∂g}{∂x}</em>{p,T}$$</p>
<p dir="auto">Example calculation: T = 25°C (298.15K), X = 50% LiBr, P = 0.8071 kPa <g-emoji class="g-emoji" alias="arrow_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png">➡</g-emoji> g = -2.337 J/g, dg/dx=3.785 J/g, gw = -
191.6 J/g, gs = 186.9 J/g.</p>
<p dir="auto">One of the aspects of partial properties is that you can sum them up to obtain the mixture property as
<math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="a7163dd024ba24b26c7eff410792b87e">$$g=\frac{(100-x)g_w+xg_s}{100}$$</math-renderer></p>
<h3 dir="auto">
<a id="user-content-partial-enthalpy-in-aqueous-lithium-bromide" class="anchor" aria-hidden="true" href="#partial-enthalpy-in-aqueous-lithium-bromide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Partial Enthalpy in Aqueous Lithium Bromide</h3>
 h,dhdx,h_w,h_s=libr_part_h(x,T,p)
<p dir="auto">$$h_w=h-x(\frac{∂h}{∂x})<em>{p,T}$$
$$h_s=h+(100-x)\frac{∂h}{∂x}</em>{p,T}$$</p>
<p dir="auto">Example calculation: T = 25°C (298.15K), X = 50% LiBr, P = 0.8071 kPa <g-emoji class="g-emoji" alias="arrow_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png">➡</g-emoji> h = 52.92 J/g, dh/dx=1.944 J/g, hw = -
44.25 J/g, hs = 150.1 J/g.</p>
<p dir="auto">One of the aspects of partial properties is that you can sum them up to obtain the mixture property as
<math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="a7163dd024ba24b26c7eff410792b87e">$$h=\frac{(100-x)h_w+xh_s}{100}$$</math-renderer></p>
<h3 dir="auto">
<a id="user-content-partial-entropy-in-aqueous-lithium-bromide" class="anchor" aria-hidden="true" href="#partial-entropy-in-aqueous-lithium-bromide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Partial Entropy in Aqueous Lithium Bromide</h3>
 s,dsdx,s_w,s_s=libr_part_s(x,T,p)
<p dir="auto">$$s_w=s-x(\frac{∂s}{∂x})<em>{p,T}$$
$$s_s=s+(100-x)\frac{∂s}{∂x}</em>{p,T}$$</p>
<p dir="auto">Example calculation: T = 25°C (298.15K), X = 50 % LiBr, P = 0.8071 kPa <g-emoji class="g-emoji" alias="arrow_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png">➡</g-emoji> s = 0.1853 J/g-K, ds/dx=-0.006176
J/g-K, hw = 0.4942 J/g-K, ss = -0.1235 J/g-K.</p>
<p dir="auto">One of the aspects of partial properties is that you can sum them up to obtain the mixture property as
<math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="a7163dd024ba24b26c7eff410792b87e">$$s=\frac{(100-x)s_w+xs_s}{100}$$</math-renderer></p>
<h3 dir="auto">
<a id="user-content-partial-volume-in-aqueous-lithium-bromide" class="anchor" aria-hidden="true" href="#partial-volume-in-aqueous-lithium-bromide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Partial Volume in Aqueous Lithium Bromide</h3>
 v,dvdx,v_w,v_s=libr_part_v(x,T)
<p dir="auto">$$v_w=v-x(\frac{∂v}{∂x})<em>{p,T}$$
$$v_s=v+(100-x)\frac{∂v}{∂x}</em>{p,T}$$</p>
<p dir="auto">Example calculation: T = 25°C (298.15K), X = 50% LiBr <g-emoji class="g-emoji" alias="arrow_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png">➡</g-emoji> v = 0.6523 cm3/g, dv/dx=-0.006976 cm3/g, vw = 1.001
cm3/g, vs = 0.3033 cm3/g.</p>
<p dir="auto">One of the aspects of partial properties is that you can sum them up to obtain the mixture property as
<math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="a7163dd024ba24b26c7eff410792b87e">$$v=\frac{(100-x)v_w+xv_s}{100}$$</math-renderer></p>
<h3 dir="auto">
<a id="user-content-saturation-properties-of-aqueous-lithium-bromide" class="anchor" aria-hidden="true" href="#saturation-properties-of-aqueous-lithium-bromide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Saturation Properties of Aqueous Lithium Bromide</h3>
<ul dir="auto">
<li>Psat = libr_p(x,T)</li>
<li>Tsat = libr_t(x,p)</li>
<li>Xsat = libr_x(T,p)</li>
</ul>
<p dir="auto">Example calculation: T = 25°C, X = 50% <g-emoji class="g-emoji" alias="arrow_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png">➡</g-emoji> P = 0.8052 kPa</p>
<h3 dir="auto">
<a id="user-content-flashing-of-aqueous-lithium-bromide" class="anchor" aria-hidden="true" href="#flashing-of-aqueous-lithium-bromide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Flashing of Aqueous Lithium bromide</h3>
q,T,x,hl,hv=LibrFlash(x,h,p)
This is a utility routine to automate the mass and energy balances involved in flashing through a valve or other
pressure restriction. It assumes an adiabatic process. Inputs are enthalpy (h), LiBr mass fraction and the pressure at
the outlet of the restriction. Outputs are the vapor quality (q), temperature (T), liquid mass fraction (x), liquid
enthalpy (hl) and vapor enthalpy (hv).
Example calculation: h = 74.54 J/g, P = 0.7 kPa, x_in = 50%  <g-emoji class="g-emoji" alias="arrow_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png">➡</g-emoji> q = 0.009845, T = 23.33°C, xl = 50.49%, hl = 50.38 J/g,
hv = 2504.34 J/g.
<p dir="auto">Note: The overall mass, LiBr mass and energy balances are all satisfied</p>
<h3 dir="auto">
<a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h3>
<ol dir="auto">
<li>SSC, Transport Property Data for Aqueous Lithium Bromide, in SSC
Unpublished Report1998.</li>
<li>Bostick, D.A., Klatt, L.N., Perez-Blanco, H., Fiber optics
refractometer for absorption machines, 1987.</li>
<li>Boryta, D.A., Solubility of Lithium Bromide in Water Between -50°C and
100°C (45 to 70% Lithium Bromide). J. Chem. Eng. Data,, 1970. 15(1): p.
142-144.</li>
<li>Yuan, Z. and K.E. Herold, Thermodynamic properties of aqueous lithium
bromide using a multiproperty free energy correlation. HVAC&amp;R Research,
2005 11(3): p. 377-393.</li>
<li>Yuan, Z. and K.E. Herold, Specific heat measurements on aqueous lithium
bromide. HVAC&amp;R Research, 2005. 11(3): p. 361-375.</li>
</ol>
</article></div>