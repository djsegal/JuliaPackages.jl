<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-gmodelfitviewer" class="anchor" aria-hidden="true" href="#gmodelfitviewer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GModelFitViewer</h1>
<p dir="auto">The <strong>GModelFitViewer.jl</strong> package allows to visualize 1D <a href="https://github.com/gcalderone/GModelFit.jl/blob/master/docs/src/misc.md"><strong>GModelFit.jl</strong></a> objects in a HTML page.  Specifically, it allows to display a plot of the best fit model (along with all its component) and of the empirical data, as well as the logs reported in the Julia REPL when <code>show</code>ing the objects.</p>
<p dir="auto">The most relevant functions are:</p>
<ul dir="auto">
<li><code>GModelFitViewer.serialize_html()</code>: writes an HTML page containing the above mentioned contents;</li>
<li><code>viewer()</code>: writes an HTML page and displays it using the default browser;</li>
</ul>
<p dir="auto">Both functions share a syntax which is similar to the <a href="https://gcalderone.github.io/GModelFit.jl/api.html#GModelFit.serialize" rel="nofollow"><code>GModelFit.serialize()</code></a> function.  The accepted arguments are:</p>
<ul dir="auto">
<li>a path and name for the HTML file (as a <code>String</code>);</li>
<li>a <code>ModelSnapshot</code> or a <code>Vector{ModelSnapshot}</code> object;</li>
<li>a <code>FitStats</code> object;</li>
<li>a <code>Measures</code> or a <code>Vector{Measures}</code> object;</li>
</ul>
<p dir="auto">If the filename is not provided a standard one will be used and stored in the <code>tempdir()</code> directory.</p>
<p dir="auto">Besides the above arguments, a number of optional keywords may be provided to customize the plot:</p>
<ul dir="auto">
<li><code>title</code>: plot title;</li>
<li><code>xlabel</code>: label for X axis;</li>
<li><code>ylabel</code>: label for Y axis;</li>
<li><code>xrange</code>: 2-element vector specifying the range for the X axis;</li>
<li><code>yrange</code>: 2-element vector specifying the range for the Y axis;</li>
<li><code>xscale</code>: numerical global scale factor for the X axis;</li>
<li><code>yscale</code>: numerical global scale factor for the Y axis;</li>
<li><code>xunit</code>: units for the X axis (as a string);</li>
<li><code>yunit</code>: units for the Y axis (as a string);</li>
<li><code>rebin</code>: an integer specifying the rebin factor along the X axis (X values are averaged, Y values are averaged using uncertainties as weights);</li>
<li><code>keep</code>: a <code>String</code>, a <code>Regex</code>, or a <code>Vector{String}</code>, indicating which components should be kept in the final file;</li>
<li><code>skip</code>: a <code>String</code>, a <code>Regex</code>, or a <code>Vector{String}</code>, indicating which components should be ignored when writing the final file;</li>
</ul>
<p dir="auto">The usage of <code>rebin</code>, <code>keep</code> and <code>skip</code> allows to produce files which are significantly smaller in size.</p>
<p dir="auto"><strong>IMPORTANT NOTE</strong>: the keywords name may be abbreviated as long as the name in unambiguous. E.g., you may use <code>xr</code> in place of <code>xrange</code>, <code>re</code> in place of <code>rebin</code>, etc.</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">Create a <strong>GModelFit.jl</strong> model, generate a mock dataset and fit:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GModelFit, GModelFitViewer
dom = Domain(0:0.01:5)
model = Model(dom, :bkg =&gt; GModelFit.OffsetSlope(1, 1, 0.1),
                   :l1 =&gt; GModelFit.Gaussian(1, 2, 0.2),
                   :l2 =&gt; GModelFit.Gaussian(1, 3, 0.4),
                   :main =&gt; SumReducer(:bkg, :l1, :l2))
data = GModelFit.mock(Measures, model)
best, fitstats = fit(model, data)"><pre><span class="pl-k">using</span> GModelFit, GModelFitViewer
dom <span class="pl-k">=</span> <span class="pl-c1">Domain</span>(<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0.01</span><span class="pl-k">:</span><span class="pl-c1">5</span>)
model <span class="pl-k">=</span> <span class="pl-c1">Model</span>(dom, <span class="pl-c1">:bkg</span> <span class="pl-k">=&gt;</span> GModelFit<span class="pl-k">.</span><span class="pl-c1">OffsetSlope</span>(<span class="pl-c1">1</span>, <span class="pl-c1">1</span>, <span class="pl-c1">0.1</span>),
                   <span class="pl-c1">:l1</span> <span class="pl-k">=&gt;</span> GModelFit<span class="pl-k">.</span><span class="pl-c1">Gaussian</span>(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">0.2</span>),
                   <span class="pl-c1">:l2</span> <span class="pl-k">=&gt;</span> GModelFit<span class="pl-k">.</span><span class="pl-c1">Gaussian</span>(<span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">0.4</span>),
                   <span class="pl-c1">:main</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">SumReducer</span>(<span class="pl-c1">:bkg</span>, <span class="pl-c1">:l1</span>, <span class="pl-c1">:l2</span>))
data <span class="pl-k">=</span> GModelFit<span class="pl-k">.</span><span class="pl-c1">mock</span>(Measures, model)
best, fitstats <span class="pl-k">=</span> <span class="pl-c1">fit</span>(model, data)</pre></div>
<p dir="auto">Generate and display an HTML page vith:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="viewer(best, fitstats, data);"><pre><span class="pl-c1">viewer</span>(best, fitstats, data);</pre></div>
<p dir="auto">You may customize the plot using the above mentioned keywords, e.g.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="viewer(best, fitstats, data, 
       title=&quot;My title&quot;, xr=[0.5, 4.5], rebin=2, keep=r&quot;l.&quot;)"><pre><span class="pl-c1">viewer</span>(best, fitstats, data, 
       title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>My title<span class="pl-pds">"</span></span>, xr<span class="pl-k">=</span>[<span class="pl-c1">0.5</span>, <span class="pl-c1">4.5</span>], rebin<span class="pl-k">=</span><span class="pl-c1">2</span>, keep<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">r"</span>l.<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">To save the HTML page in <code>myfile.html</code> (without opening it in the web browser):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="GModelFitViewer.serialize_html(&quot;myfile.html&quot;, best, fitstats, data)"><pre>GModelFitViewer<span class="pl-k">.</span><span class="pl-c1">serialize_html</span>(<span class="pl-s"><span class="pl-pds">"</span>myfile.html<span class="pl-pds">"</span></span>, best, fitstats, data)</pre></div>
</article></div>