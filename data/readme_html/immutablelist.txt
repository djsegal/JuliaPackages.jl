<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-immutablelist" class="anchor" aria-hidden="true" href="#immutablelist"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ImmutableList</h1>
<p><strong>A single linked immutable list for Julia</strong></p>
<p>This package provides a singly linked immutable list.
Along with common operations such as listHead and listRest
to get the head and the tail in constant time.</p>
<h2><a id="user-content-list" class="anchor" aria-hidden="true" href="#list"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>List</h2>
<p><code>List</code> is a single linked immutable list.</p>
<ul>
<li>Usage:</li>
</ul>
<div class="highlight highlight-source-julia"><pre>a <span class="pl-k">=</span> <span class="pl-c1">List</span><span class="pl-c1">{Int}</span>()    <span class="pl-c"><span class="pl-c">#</span> Create a list of the given type.</span>
b <span class="pl-k">=</span> <span class="pl-c1">list</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>)    <span class="pl-c"><span class="pl-c">#</span> Creates a list of 3 elements</span>
c <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">&lt;</span><span class="pl-k">|</span> b         <span class="pl-c"><span class="pl-c">#</span> Creates a new list C using the cons opertor &lt;| with b as the tail.</span></pre></div>
<ul>
<li>Utility functions:</li>
</ul>
<div class="highlight highlight-source-julia"><pre><span class="pl-s"><span class="pl-pds">"""</span> O(length(lst1)), O(1) if either list is empty <span class="pl-pds">"""</span></span>
listAppend

<span class="pl-s"><span class="pl-pds">"""</span> O(n) <span class="pl-pds">"""</span></span>
listLength

<span class="pl-s"><span class="pl-pds">"""</span> O(n) <span class="pl-pds">"""</span></span>
listMember

<span class="pl-s"><span class="pl-pds">"""</span> O(index) <span class="pl-pds">"""</span></span>
listGet

<span class="pl-s"><span class="pl-pds">"""</span> O(1) <span class="pl-pds">"""</span></span>
listRest

<span class="pl-s"><span class="pl-pds">"""</span> O(1) <span class="pl-pds">"""</span></span>
listHead

<span class="pl-s"><span class="pl-pds">"""</span> O(index) <span class="pl-pds">"""</span></span>
listDelete

<span class="pl-s"><span class="pl-pds">"""</span> O(1) <span class="pl-pds">"""</span></span>
listEmpty
</pre></div>
<p>Support for calling functions defined in the Julia core is also provided.
Such as eltype and length.</p>
</article></div>