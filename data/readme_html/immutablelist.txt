<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-immutablelist" class="anchor" aria-hidden="true" href="#immutablelist"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ImmutableList</h1>
<p><strong>A single linked immutable list for Julia</strong></p>
<p>This package provides a singly linked immutable list.
Along with common operations such as listHead and listRest
to get the head and the tail in constant time.</p>
<h2><a id="user-content-list" class="anchor" aria-hidden="true" href="#list"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>List</h2>
<p><code>List</code> is a single linked immutable list.</p>
<ul>
<li>Usage:</li>
</ul>
<div class="highlight highlight-source-julia"><pre>a <span class="pl-k">=</span> <span class="pl-c1">List</span><span class="pl-c1">{Int}</span>()    <span class="pl-c"><span class="pl-c">#</span> Create a list of the given type.</span>
b <span class="pl-k">=</span> <span class="pl-c1">list</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>)    <span class="pl-c"><span class="pl-c">#</span> Creates a list of 3 elements</span>
c <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">&lt;</span><span class="pl-k">|</span> b         <span class="pl-c"><span class="pl-c">#</span> Creates a new list C using the cons opertor &lt;| with b as the tail.</span></pre></div>
<ul>
<li>Utility functions:</li>
</ul>
<div class="highlight highlight-source-julia"><pre><span class="pl-s"><span class="pl-pds">"""</span> O(length(lst1)), O(1) if either list is empty <span class="pl-pds">"""</span></span>
listAppend

<span class="pl-s"><span class="pl-pds">"""</span> O(n) <span class="pl-pds">"""</span></span>
listLength

<span class="pl-s"><span class="pl-pds">"""</span> O(n) <span class="pl-pds">"""</span></span>
listMember

<span class="pl-s"><span class="pl-pds">"""</span> O(index) <span class="pl-pds">"""</span></span>
listGet

<span class="pl-s"><span class="pl-pds">"""</span> O(1) <span class="pl-pds">"""</span></span>
listRest

<span class="pl-s"><span class="pl-pds">"""</span> O(1) <span class="pl-pds">"""</span></span>
listHead

<span class="pl-s"><span class="pl-pds">"""</span> O(index) <span class="pl-pds">"""</span></span>
listDelete

<span class="pl-s"><span class="pl-pds">"""</span> O(1) <span class="pl-pds">"""</span></span>
listEmpty
</pre></div>
<p>Support for calling functions defined in the Julia core is also provided.
Such as eltype and length.</p>
</article></div>