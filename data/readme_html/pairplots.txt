<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content--pairplotsjl" class="anchor" aria-hidden="true" href="#-pairplotsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><a target="_blank" rel="noopener noreferrer" href="images/logo.png"><img src="images/logo.png" width="50/" style="max-width:100%;"></a> PairPlots.jl</h1>
<p>This package produces corner plots, otherwise known as pair plots or scatter plot matrices: grids of 1D and 2D histograms that allow you to visualize high dimensional data.</p>
<p>Documentation: <a href="https://juliahub.com/docs/PairPlots" rel="nofollow">Read on JuliaHub</a></p>
<p>The defaults in this package aim to reproduce the output of the well-known Python library <a href="https://corner.readthedocs.io/en/latest/index.html" rel="nofollow">corner.py</a> as closely as possible. If these are not to your tastes, this package is highly configurable (see examples below).</p>
<p>This package is curently experimental and under active development.  See also: <a href="https://github.com/JuliaPlots/StatsPlots.jl#corrplot-and-cornerplot">StatsPlots.cornerplot</a>, <a href="https://juliaearth.github.io/GeoStats.jl/stable/plotting.html#cornerplot" rel="nofollow">GeoStats.cornerplot</a>, and <a href="https://github.com/kilianbreathnach/CornerPlot.jl">CornerPlot.jl</a> for Gadfly.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>At the Julia REPL, type <code>]</code> followed by <code>add https://github.com/sefffal/PairPlots.jl.git</code>
You must also install Plots.</p>
<h2><a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Notes</h2>
<p>This pacakge is currently only tested using the GR plots backend, and furthermore, saving plots as PNG or PDF occaisonally produces artifacts.
I recommend you save your figures as SVG.</p>
<p>If you pass additional keyword arguments to customize the appearance of the plots, it is recommended to use their canonical form e.g. <code>seriestype</code> instead of <code>st</code>, <code>markersize</code> instead of <code>ms</code>. PairPlots attempts to do the "smart" thing when certain combinations of keywords are present, and the shorthands might interfere with this.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Plots, PairPlots

corner(table [, labels])
"><pre><span class="pl-k">using</span> Plots, PairPlots

<span class="pl-c1">corner</span>(table [, labels])</pre></div>
<p>This function has one required argument, a <a href="https://tables.juliadata.org/stable/" rel="nofollow">Tables.jl</a> compatible table consisting of one or more columns. This can simply be a named tuple of vectors, a <a href="https://dataframes.juliadata.org/stable/" rel="nofollow">DataFrame</a>, <a href="https://typedtables.juliadata.org/stable/" rel="nofollow">TypedTable</a>, result of an execute statement from <a href="https://juliadatabases.org/SQLite.jl/stable/" rel="nofollow">SQLite</a>, data loaded from <a href="https://arrow.juliadata.org/stable/manual/#Writing-arrow-data" rel="nofollow">Arrow</a>, etc.</p>
<p>The variable names are by default taken from the column names of the input table, but can also be supplied by a second vector of strings.</p>
<p>This package uses <a href="http://juliaplots.org/RecipesBase.jl/stable/" rel="nofollow">RecipesBase</a> rather than <a href="http://docs.juliaplots.org/latest/" rel="nofollow">Plots</a> directly, so you must also load Plots in order to see any output. The package is only tested with <a href="https://github.com/jheinen/GR.jl">GR</a>.</p>
<h3><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h3>
<p>Basics:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Plots, PairPlots
gr()

# Generate some data to visualize
N = 100_000
a = [2randn(N÷2) .+ 6; randn(N÷2)]
b = [3randn(N÷2); 2randn(N÷2)]
c = randn(N)
d = c .+ 0.6randn(N)

# Pass data in a format compatible with Tables.jl
# Here, simply a named tuple of vectors.
table = (;a, b, c, d)

corner(table)
"><pre><span class="pl-k">using</span> Plots, PairPlots
<span class="pl-c1">gr</span>()

<span class="pl-c"><span class="pl-c">#</span> Generate some data to visualize</span>
N <span class="pl-k">=</span> <span class="pl-c1">100_000</span>
a <span class="pl-k">=</span> [<span class="pl-c1">2</span><span class="pl-c1">randn</span>(N<span class="pl-k">÷</span><span class="pl-c1">2</span>) <span class="pl-k">.+</span> <span class="pl-c1">6</span>; <span class="pl-c1">randn</span>(N<span class="pl-k">÷</span><span class="pl-c1">2</span>)]
b <span class="pl-k">=</span> [<span class="pl-c1">3</span><span class="pl-c1">randn</span>(N<span class="pl-k">÷</span><span class="pl-c1">2</span>); <span class="pl-c1">2</span><span class="pl-c1">randn</span>(N<span class="pl-k">÷</span><span class="pl-c1">2</span>)]
c <span class="pl-k">=</span> <span class="pl-c1">randn</span>(N)
d <span class="pl-k">=</span> c <span class="pl-k">.+</span> <span class="pl-c1">0.6</span><span class="pl-c1">randn</span>(N)

<span class="pl-c"><span class="pl-c">#</span> Pass data in a format compatible with Tables.jl</span>
<span class="pl-c"><span class="pl-c">#</span> Here, simply a named tuple of vectors.</span>
table <span class="pl-k">=</span> (;a, b, c, d)

<span class="pl-c1">corner</span>(table)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/basic.png"><img src="images/basic.png" width="350/" style="max-width:100%;"></a></p>
<p>Single variable fallback:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="corner((;d))
"><pre><span class="pl-c1">corner</span>((;d))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/single-variable.png"><img src="images/single-variable.png" width="150/" style="max-width:100%;"></a></p>
<p>Appearance:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="theme(:dark) # See PlotThemes.jl included with Plots.
corner(
    table,
    hist2d_kwargs=(;color=:magma),
    hist_kwargs=(;color=:white,titlefontcolor=:white),
    scatter_kwargs=(;color=:white);
    percentiles_kwargs=(;color=:white),
)
"><pre><span class="pl-c1">theme</span>(<span class="pl-c1">:dark</span>) <span class="pl-c"><span class="pl-c">#</span> See PlotThemes.jl included with Plots.</span>
<span class="pl-c1">corner</span>(
    table,
    hist2d_kwargs<span class="pl-k">=</span>(;color<span class="pl-k">=</span><span class="pl-c1">:magma</span>),
    hist_kwargs<span class="pl-k">=</span>(;color<span class="pl-k">=</span><span class="pl-c1">:white</span>,titlefontcolor<span class="pl-k">=</span><span class="pl-c1">:white</span>),
    scatter_kwargs<span class="pl-k">=</span>(;color<span class="pl-k">=</span><span class="pl-c1">:white</span>);
    percentiles_kwargs<span class="pl-k">=</span>(;color<span class="pl-k">=</span><span class="pl-c1">:white</span>),
)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/themed.png"><img src="images/themed.png" width="350/" style="max-width:100%;"></a></p>
<p>Enlarging one subplot with <code>lens</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Plot a 1D histogram
corner(table, lens=:a)

# Plot a 2D histogram
corner(table, lens=(:b, :a))

# Plot a 2D histogram with customization
corner(
    table,
    lens=(:b, :a),
    lens_kwargs=(
        title=&quot;b - a heatmap&quot;,
        plotscatter=false,
        hist2d_kwargs=(;color=:plasma),
        contour_kwargs=(;color=:white)
    )
)
"><pre><span class="pl-c"><span class="pl-c">#</span> Plot a 1D histogram</span>
<span class="pl-c1">corner</span>(table, lens<span class="pl-k">=</span><span class="pl-c1">:a</span>)

<span class="pl-c"><span class="pl-c">#</span> Plot a 2D histogram</span>
<span class="pl-c1">corner</span>(table, lens<span class="pl-k">=</span>(<span class="pl-c1">:b</span>, <span class="pl-c1">:a</span>))

<span class="pl-c"><span class="pl-c">#</span> Plot a 2D histogram with customization</span>
<span class="pl-c1">corner</span>(
    table,
    lens<span class="pl-k">=</span>(<span class="pl-c1">:b</span>, <span class="pl-c1">:a</span>),
    lens_kwargs<span class="pl-k">=</span>(
        title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>b - a heatmap<span class="pl-pds">"</span></span>,
        plotscatter<span class="pl-k">=</span><span class="pl-c1">false</span>,
        hist2d_kwargs<span class="pl-k">=</span>(;color<span class="pl-k">=</span><span class="pl-c1">:plasma</span>),
        contour_kwargs<span class="pl-k">=</span>(;color<span class="pl-k">=</span><span class="pl-c1">:white</span>)
    )
)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/lens-gallery.png"><img src="images/lens-gallery.png" alt="" style="max-width:100%;"></a></p>
<p>Adding an extra unrelated subplot with <code>bonusplot</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="f(kw)=heatmap!(rand(10,10); kw...)
corner((;a,b,c,d,e=a), title=&quot;Corner Plot&quot;, bonusplot=f)
"><pre><span class="pl-en">f</span>(kw)<span class="pl-k">=</span><span class="pl-c1">heatmap!</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">10</span>,<span class="pl-c1">10</span>); kw<span class="pl-k">...</span>)
<span class="pl-c1">corner</span>((;a,b,c,d,e<span class="pl-k">=</span>a), title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Corner Plot<span class="pl-pds">"</span></span>, bonusplot<span class="pl-k">=</span>f)</pre></div>
<p>The syntax for this is a little tricky due to API limitations. the <code>bonusplot</code> argument accepts a
function that overplots your desired plot, and must accept a named tuple of keyword arguments to forward to the plotting function. This is necessary for the layout to work as expected.</p>
<p>Minimal look:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="a = randn(100000); b = randn(100000) .+ a; c = 4randn(100000) .+ a

corner((;a,b,c), hist_kwargs=(;title=&quot;&quot;), appearance=(;framestyle=:grid, ticks=[]), plotpercentiles=[])
"><pre>a <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">100000</span>); b <span class="pl-k">=</span> <span class="pl-c1">randn</span>(<span class="pl-c1">100000</span>) <span class="pl-k">.+</span> a; c <span class="pl-k">=</span> <span class="pl-c1">4</span><span class="pl-c1">randn</span>(<span class="pl-c1">100000</span>) <span class="pl-k">.+</span> a

<span class="pl-c1">corner</span>((;a,b,c), hist_kwargs<span class="pl-k">=</span>(;title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>), appearance<span class="pl-k">=</span>(;framestyle<span class="pl-k">=</span><span class="pl-c1">:grid</span>, ticks<span class="pl-k">=</span>[]), plotpercentiles<span class="pl-k">=</span>[])</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/minimal.png"><img src="images/minimal.png" width="350/" style="max-width:100%;"></a></p>
<p>3D wireframe and line plots:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="α=[randn(50000); 0.5randn(50000).+4]
β=2randn(100000)

corner(
    (;α,β),
    [raw&quot;\alpha&quot;, raw&quot;\beta&quot;],
    hist2d_kwargs=(;seriestype=:wireframe),
    plotscatter=false,
    dpi=200
)
"><pre>α<span class="pl-k">=</span>[<span class="pl-c1">randn</span>(<span class="pl-c1">50000</span>); <span class="pl-c1">0.5</span><span class="pl-c1">randn</span>(<span class="pl-c1">50000</span>)<span class="pl-k">.+</span><span class="pl-c1">4</span>]
β<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-c1">randn</span>(<span class="pl-c1">100000</span>)

<span class="pl-c1">corner</span>(
    (;α,β),
    [<span class="pl-s"><span class="pl-c1">raw</span><span class="pl-pds">"</span>\alpha<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-c1">raw</span><span class="pl-pds">"</span>\beta<span class="pl-pds">"</span></span>],
    hist2d_kwargs<span class="pl-k">=</span>(;seriestype<span class="pl-k">=</span><span class="pl-c1">:wireframe</span>),
    plotscatter<span class="pl-k">=</span><span class="pl-c1">false</span>,
    dpi<span class="pl-k">=</span><span class="pl-c1">200</span>
)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/3d-mesh-2.png"><img src="images/3d-mesh-2.png" width="300/" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="theme(:solarized);
 corner(
    (;a,b), filterscatter=false,
    hist2d_kwargs=(;seriestype=:wireframe,color=:white,nbins=35),
    hist_kwargs=(;color=:lightgrey,titlefontcolor=:white,seriestype=:line, linewidth=3),
    scatter_kwargs=(;color=:grey);
    percentiles_kwargs=(;color=:grey),
)
"><pre><span class="pl-c1">theme</span>(<span class="pl-c1">:solarized</span>);
 <span class="pl-c1">corner</span>(
    (;a,b), filterscatter<span class="pl-k">=</span><span class="pl-c1">false</span>,
    hist2d_kwargs<span class="pl-k">=</span>(;seriestype<span class="pl-k">=</span><span class="pl-c1">:wireframe</span>,color<span class="pl-k">=</span><span class="pl-c1">:white</span>,nbins<span class="pl-k">=</span><span class="pl-c1">35</span>),
    hist_kwargs<span class="pl-k">=</span>(;color<span class="pl-k">=</span><span class="pl-c1">:lightgrey</span>,titlefontcolor<span class="pl-k">=</span><span class="pl-c1">:white</span>,seriestype<span class="pl-k">=</span><span class="pl-c1">:line</span>, linewidth<span class="pl-k">=</span><span class="pl-c1">3</span>),
    scatter_kwargs<span class="pl-k">=</span>(;color<span class="pl-k">=</span><span class="pl-c1">:grey</span>);
    percentiles_kwargs<span class="pl-k">=</span>(;color<span class="pl-k">=</span><span class="pl-c1">:grey</span>),
)</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/3d-mesh.png"><img src="images/3d-mesh.png" width="300/" style="max-width:100%;"></a></p>
<h3><a id="user-content-full-api" class="anchor" aria-hidden="true" href="#full-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Full API</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="corner(table [, labels]; plotcontours, plotscatter, plotpercentiles, hist_kwargs, hist2d_kwargs, contour_kwargs, scatter_kwargs, percentiles_kwargs, appearance)
"><pre><span class="pl-c1">corner</span>(table [, labels]; plotcontours, plotscatter, plotpercentiles, hist_kwargs, hist2d_kwargs, contour_kwargs, scatter_kwargs, percentiles_kwargs, appearance)</pre></div>
<p>The <code>corner</code> function also accepts the following keyword arguments:</p>
<ul>
<li><code>plotcontours=true</code>: Overplot contours on each 2D histogram</li>
<li><code>plotscatter=true</code>: Plot individual data points under the histogram to reveal outliers. Disable to improve performance on large datasets.</li>
<li><code>plotpercentiles=[15,50,84]</code>: What percentiles should be used for the vertical lines in the 1D histogram. Pass an empty vector to hide.</li>
<li><code>histfunc</code>: a function to override the calculation of the 1D and 2D histograms. See below.</li>
<li><code>hist_kwargs=(;)</code>: plot keywords for the 1D histograms.</li>
<li><code>hist2d_kwargs=(;)</code>: plot keywords for the 2D histograms.</li>
<li><code>contour_kwargs=(;)</code>: plot keywords for the contours plotted over the 2D histograms.</li>
<li><code>scatter_kwargs=(;)</code>: plot keywords for the data points scattered under the 2D histograms.</li>
<li><code>percentiles_kwargs=(;)</code>: plot keywords for the vertical percentile lines on the 1D histograms.</li>
<li><code>appearance=(;)</code>: General keywords for all subplots.</li>
<li><code>titlefmt="\$%s = %.2f^{+%.2f}_{-%.2f}\$"</code>: Printf format string for titles along the 1D histograms</li>
</ul>
<p>Remaining keyword arguments are forwarded to the main plot that holds the all of the subplots. For example, passing <code>size=(1000,1000)</code> sets the size of the overall figure not each individual subplot.</p>
<h4><a id="user-content-mcmcchains" class="anchor" aria-hidden="true" href="#mcmcchains"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MCMCChains</h4>
<p><code>MCMCChains.MCMCChain</code> values can be passed directly to <code>corner</code>. In this case, the fields :iteration and :chain are filtered out automatically and all chains are concatenated.</p>
<h4><a id="user-content-histfunc" class="anchor" aria-hidden="true" href="#histfunc"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>histfunc</code></h4>
<p>If you wish to calculate the histograms yourself, you can provide a callback function with two methods: one to calculate the 1D histograms along the diagonal, and another to calculate the 2D histograms.</p>
<p>Example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="function myhist(a, nbins)
    ...
    return bin_centres, weights
end
function myhist(a,b,nbins)
    ...
    return bin_centres_x, bin_centres_y, weights
end

corner(data, histfunc=myhist)
"><pre><span class="pl-k">function</span> <span class="pl-en">myhist</span>(a, nbins)
    <span class="pl-k">...</span>
    <span class="pl-k">return</span> bin_centres, weights
<span class="pl-k">end</span>
<span class="pl-k">function</span> <span class="pl-en">myhist</span>(a,b,nbins)
    <span class="pl-k">...</span>
    <span class="pl-k">return</span> bin_centres_x, bin_centres_y, weights
<span class="pl-k">end</span>

<span class="pl-c1">corner</span>(data, histfunc<span class="pl-k">=</span>myhist)</pre></div>
<p>The methods must return the bin <strong>centres</strong> rather than edges, followed by the histogram weights. You must override both the 1D and 2D cases, or neither. If you don't want to change the behaviour, you can simply forward the arguments to <code>PairPlots.prepare_hist</code>, the default value.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="function myhist(a, nbins)
    ...
    return bin_centres, weights
end
myhist(a,b,nbins) = PairPlots.prepare_hist(a,b,nbins)
corner(data, histfunc=myhist)
"><pre><span class="pl-k">function</span> <span class="pl-en">myhist</span>(a, nbins)
    <span class="pl-k">...</span>
    <span class="pl-k">return</span> bin_centres, weights
<span class="pl-k">end</span>
<span class="pl-en">myhist</span>(a,b,nbins) <span class="pl-k">=</span> PairPlots<span class="pl-k">.</span><span class="pl-c1">prepare_hist</span>(a,b,nbins)
<span class="pl-c1">corner</span>(data, histfunc<span class="pl-k">=</span>myhist)</pre></div>
<h2><a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Credits</h2>
<p>This package is built on top of the great packages Plots, GR, RecipesBase, NamedTupleTools, and Tables. The overall inspiration and a few peices of code are taken directly from corner.py, whose authors IMO should be cited if you use this pacakge.</p>
<h2><a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TODO:</h2>
<ul>
<li>Support for colouring individual chains separately when using MCMCChains</li>
</ul>
</article></div>