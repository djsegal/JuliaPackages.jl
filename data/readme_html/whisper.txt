<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2 dir="auto"><a id="user-content-whisper" class="anchor" aria-hidden="true" href="#whisper"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Whisper</h2>
<p dir="auto"><a href="https://github.com/aviks/Whisper.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/aviks/Whisper.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto">Whisper.jl is a Julia package for automatic speech recognition, based on <a href="https://github.com/openai/whisper">OpenAI's Whisper</a> model. This package wraps the <a href="https://github.com/ggerganov/whisper.cpp">whisper.cpp</a> code, which is a C/C++ implementation of the model. It uses the model weights which were published by OpenAI. The weights are downloaded on demand.</p>
<h3 dir="auto"><a id="user-content-quick-start-guide" class="anchor" aria-hidden="true" href="#quick-start-guide"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick Start Guide</h3>
<p dir="auto">The <code>transcribe</code> function is the simplest way to run speech recognition on an
audio signal. It takes as input the model name, and a float32 array with the sound signal.
The signal is expected to be sampled at 16kHz.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Whisper, LibSndFile, FileIO, SampledSignals

s = load(&quot;/path/to/audio_file.ogg&quot;)  

# Whisper expects 16kHz sample rate and Float32 data
sout = SampleBuf(Float32, 16000, round(Int, length(s)*(16000/samplerate(s))), nchannels(s))  
write(SampleBufSink(sout), SampleBufSource(s))  # Resample

if nchannels(sout) == 1
    data  = sout.data
elseif nchannels(sout) == 2
    sd = sout.data
    data = [sd[i,1] + sd[i,2] for i in 1:size(sd)[1]] #convert stereo to mono
end

result = transcribe(&quot;base.en&quot;, data)"><pre><span class="pl-k">using</span> Whisper, LibSndFile, FileIO, SampledSignals

s <span class="pl-k">=</span> <span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>/path/to/audio_file.ogg<span class="pl-pds">"</span></span>)  

<span class="pl-c"><span class="pl-c">#</span> Whisper expects 16kHz sample rate and Float32 data</span>
sout <span class="pl-k">=</span> <span class="pl-c1">SampleBuf</span>(Float32, <span class="pl-c1">16000</span>, <span class="pl-c1">round</span>(Int, <span class="pl-c1">length</span>(s)<span class="pl-k">*</span>(<span class="pl-c1">16000</span><span class="pl-k">/</span><span class="pl-c1">samplerate</span>(s))), <span class="pl-c1">nchannels</span>(s))  
<span class="pl-c1">write</span>(<span class="pl-c1">SampleBufSink</span>(sout), <span class="pl-c1">SampleBufSource</span>(s))  <span class="pl-c"><span class="pl-c">#</span> Resample</span>

<span class="pl-k">if</span> <span class="pl-c1">nchannels</span>(sout) <span class="pl-k">==</span> <span class="pl-c1">1</span>
    data  <span class="pl-k">=</span> sout<span class="pl-k">.</span>data
<span class="pl-k">elseif</span> <span class="pl-c1">nchannels</span>(sout) <span class="pl-k">==</span> <span class="pl-c1">2</span>
    sd <span class="pl-k">=</span> sout<span class="pl-k">.</span>data
    data <span class="pl-k">=</span> [sd[i,<span class="pl-c1">1</span>] <span class="pl-k">+</span> sd[i,<span class="pl-c1">2</span>] <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">size</span>(sd)[<span class="pl-c1">1</span>]] <span class="pl-c"><span class="pl-c">#</span>convert stereo to mono</span>
<span class="pl-k">end</span>

result <span class="pl-k">=</span> <span class="pl-c1">transcribe</span>(<span class="pl-s"><span class="pl-pds">"</span>base.en<span class="pl-pds">"</span></span>, data)</pre></div>
<p dir="auto">For more control, the <a href="https://github.com/ggerganov/whisper.cpp/blob/master/whisper.h">whisper.cpp C interface</a> is available within the <a href="https://github.com/aviks/Whisper.jl/blob/main/src/LibWhisper.jl"><code>Whisper.LibWhisper</code> module</a>.</p>
<h3 dir="auto"><a id="user-content-models" class="anchor" aria-hidden="true" href="#models"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Models</h3>
<p dir="auto">The following models are available, and should be referenced by name. The models with the <code>.en</code> suffix are specialised for the english language.</p>
<table>
<thead>
<tr>
<th>Model</th>
<th>Disk</th>
<th>Mem</th>
</tr>
</thead>
<tbody>
<tr>
<td>tiny / tiny.en</td>
<td>75 MB</td>
<td>~125 MB</td>
</tr>
<tr>
<td>base / base.en</td>
<td>142 MB</td>
<td>~210 MB</td>
</tr>
<tr>
<td>small / small.en</td>
<td>466 MB</td>
<td>~600 MB</td>
</tr>
<tr>
<td>medium / medium.en</td>
<td>1.5 GB</td>
<td>~1.7 GB</td>
</tr>
<tr>
<td>large-v1 / large.en</td>
<td>2.9 GB</td>
<td>~3.3 GB</td>
</tr>
</tbody>
</table>
<h3 dir="auto"><a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TODO</h3>
<p dir="auto">The biggest missing functionality is a streaming interface.</p>
</article></div>