<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-convergenceplots" class="anchor" aria-hidden="true" href="#convergenceplots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ConvergencePlots</h1>
<p dir="auto">This is a Julia package that makes it easy to do live tracking of the convergence of your algorithm. All the plotting is done using <a href="https://github.com/JuliaPy/PyPlot.jl">PyPlot.jl</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">To install <code>ConvergencePlots.jl</code>, run the following Julia code.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
pkg&quot;add https://github.com/mohamed82008/ConvergencePlots.jl&quot;"><pre><span class="pl-k">using</span> Pkg
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add https://github.com/mohamed82008/ConvergencePlots.jl<span class="pl-pds">"</span></span></pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">First create an empty plot:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="plot = ConvergencePlot()"><pre>plot <span class="pl-k">=</span> <span class="pl-c1">ConvergencePlot</span>()</pre></div>
<p dir="auto">This will create an empty convergence plot that plots up to 100000 history points. Older points are overwritten. To specify how many history points to plot, use the constructor:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="plot = ConvergencePlot(n)"><pre>plot <span class="pl-k">=</span> <span class="pl-c1">ConvergencePlot</span>(n)</pre></div>
<p dir="auto">where <code>n</code> is the number of points.</p>
<p dir="auto">The keyword arguments you can pass to the <code>ConvergencePlot</code> constructor are:</p>
<ul dir="auto">
<li><code>names</code>: a <code>Vector{String}</code> that has all the names of the convergence metrics to be plotted. The default value of <code>names</code> is <code>["Residual"]</code>.</li>
<li><code>options</code>: a dictionary mapping each name in <code>names</code> to a <code>NamedTuple</code>. Each named tuple has the plotting options to pass to <code>PyPlot</code>, e.g. <code>(label = "KKT residual", ls = "--", marker = "+")</code>. If <code>label</code> is not passed, it defaults to the corresponding name in <code>names</code>. You can also pass a single <code>NamedTuple</code> of options without the <code>label</code> option, and it will be used for all the names.</li>
<li><code>show</code>: if <code>true</code> the empty figure will be displayed. This is <code>false</code> by default.</li>
</ul>
<p dir="auto">After creating an empty plot, you can add points to it as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="addpoint!(plot, Dict(&quot;Residual&quot; =&gt; 1.0))"><pre><span class="pl-c1">addpoint!</span>(plot, <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>Residual<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">1.0</span>))</pre></div>
<p dir="auto">where the second argument can contain one value for each name in <code>names</code>. If only a single name exists, you can also use:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="addpoint!(plot, 1.0)"><pre><span class="pl-c1">addpoint!</span>(plot, <span class="pl-c1">1.0</span>)</pre></div>
<p dir="auto">Adding a point will display the plot by default. To stop the plot from displaying, set the <code>show</code> keyword argument to <code>false</code>.</p>
<p dir="auto">To close the plot, call:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="closeplot!(plot)"><pre><span class="pl-c1">closeplot!</span>(plot)</pre></div>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ConvergencePlots

plot = ConvergencePlot(
    names = [&quot;KKT residual&quot;, &quot;|Δx|&quot;, &quot;|Δf|&quot;],
    options = Dict(
        &quot;KKT residual&quot; =&gt; (color = &quot;red&quot;,),
        &quot;|Δx|&quot; =&gt; (color = &quot;blue&quot;,),
        &quot;|Δf|&quot; =&gt; (color = &quot;black&quot;,),
    ),
)
kkt = 1 ./ (1:50)
Δx = 0.1 .* sqrt.(kkt)
Δf = 10 .* kkt .^ 2
for i in 1:50
    sleep(1e-4)
    addpoint!(
        plot,
        Dict(
            &quot;KKT residual&quot; =&gt; kkt[i],
            &quot;|Δx|&quot; =&gt; Δx[i],
            &quot;|Δf|&quot; =&gt; Δf[i],
        ),
    )
end"><pre><span class="pl-k">using</span> ConvergencePlots

plot <span class="pl-k">=</span> <span class="pl-c1">ConvergencePlot</span>(
    names <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>KKT residual<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>|Δx|<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>|Δf|<span class="pl-pds">"</span></span>],
    options <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(
        <span class="pl-s"><span class="pl-pds">"</span>KKT residual<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> (color <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>red<span class="pl-pds">"</span></span>,),
        <span class="pl-s"><span class="pl-pds">"</span>|Δx|<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> (color <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>blue<span class="pl-pds">"</span></span>,),
        <span class="pl-s"><span class="pl-pds">"</span>|Δf|<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> (color <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>black<span class="pl-pds">"</span></span>,),
    ),
)
kkt <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">./</span> (<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">50</span>)
Δx <span class="pl-k">=</span> <span class="pl-c1">0.1</span> <span class="pl-k">.*</span> <span class="pl-c1">sqrt</span>.(kkt)
Δf <span class="pl-k">=</span> <span class="pl-c1">10</span> <span class="pl-k">.*</span> kkt <span class="pl-k">.^</span> <span class="pl-c1">2</span>
<span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">50</span>
    <span class="pl-c1">sleep</span>(<span class="pl-c1">1e-4</span>)
    <span class="pl-c1">addpoint!</span>(
        plot,
        <span class="pl-c1">Dict</span>(
            <span class="pl-s"><span class="pl-pds">"</span>KKT residual<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> kkt[i],
            <span class="pl-s"><span class="pl-pds">"</span>|Δx|<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> Δx[i],
            <span class="pl-s"><span class="pl-pds">"</span>|Δf|<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> Δf[i],
        ),
    )
<span class="pl-k">end</span></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/19524993/90662813-30c90280-e28c-11ea-88c1-7e1370d117b4.png"><img src="https://user-images.githubusercontent.com/19524993/90662813-30c90280-e28c-11ea-88c1-7e1370d117b4.png" alt="Figure" style="max-width: 100%;"></a></p>
</article></div>