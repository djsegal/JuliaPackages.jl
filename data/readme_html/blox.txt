<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-blox" class="anchor" aria-hidden="true" href="#blox"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Blox</h1>
<p dir="auto">Block views without copies.  Create views from 0 to many AbstractArrays with default values, expanded lengths, and shifted positions.</p>
<p dir="auto">Example usage for vectors:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="
julia&gt; using Blox

julia&gt; x = collect(1:3); y = collect(4:5);

julia&gt; v = view(x, y)  # stacks them
5-element Blox.BlockVector{Int64}:
 1
 2
 3
 4
 5

julia&gt; v[2] = 999
999

julia&gt; x   # underlying vector is changed
3-element Array{Int64,1}:
   1
 999
   3

julia&gt; v[3:4]
2-element Array{Int64,1}:
 3
 4

julia&gt; v = view(x,y; def=-1, len=7)  # gives -1 for all indices with no array underlying
7-element Blox.BlockVector{Int64}:
   1
 999
   3
   4
   5
  -1
  -1

julia&gt; v = view(x,y; indices=[2,7])  # starts the arrays at position 2 and 8 respectively
8-element Blox.BlockVector{Int64}:
   0
   1
 999
   3
   0
   0
   4
   5

julia&gt; v = view(x,y; indices=[2,7], def=-999)
8-element Blox.BlockVector{Int64}:
 -999
    1
  999
    3
 -999
 -999
    4
    5"><pre class="notranslate"><code>
julia&gt; using Blox

julia&gt; x = collect(1:3); y = collect(4:5);

julia&gt; v = view(x, y)  # stacks them
5-element Blox.BlockVector{Int64}:
 1
 2
 3
 4
 5

julia&gt; v[2] = 999
999

julia&gt; x   # underlying vector is changed
3-element Array{Int64,1}:
   1
 999
   3

julia&gt; v[3:4]
2-element Array{Int64,1}:
 3
 4

julia&gt; v = view(x,y; def=-1, len=7)  # gives -1 for all indices with no array underlying
7-element Blox.BlockVector{Int64}:
   1
 999
   3
   4
   5
  -1
  -1

julia&gt; v = view(x,y; indices=[2,7])  # starts the arrays at position 2 and 8 respectively
8-element Blox.BlockVector{Int64}:
   0
   1
 999
   3
   0
   0
   4
   5

julia&gt; v = view(x,y; indices=[2,7], def=-999)
8-element Blox.BlockVector{Int64}:
 -999
    1
  999
    3
 -999
 -999
    4
    5
</code></pre></div>
</article></div>