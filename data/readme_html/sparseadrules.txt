<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-sparseadrules" class="anchor" aria-hidden="true" href="#sparseadrules"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SparseADRules</h1>
<p dir="auto"><a href="https://jieli-matrix.github.io/SparseADRules.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://jieli-matrix.github.io/SparseADRules.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/jieli-matrix/SparseADRules.jl/actions"><img src="https://github.com/jieli-matrix/SparseADRules.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/jieli-matrix/SparseADRules.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9aa32a33fc3596754b5cc46ef8e273e6d1723899c7f93cfb3fd18bb3ee4aba2d/68747470733a2f2f636f6465636f762e696f2f67682f6a69656c692d6d61747269782f537061727365414452756c65732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/jieli-matrix/SparseADRules.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="README_CN.md">中文版本</a></p>
<p dir="auto"><code>SparseADRules</code> is a part of the <a href="https://summer.iscas.ac.cn/#/?lang=en" rel="nofollow">Summer 2021 of Open Source Promotion Plan</a>. It implements the backward rules for sparse matrix operations on <strong>CPU</strong> using <a href="https://giggleliu.github.io/NiLang.jl/dev/" rel="nofollow"><code>NiLang</code></a> and ports these rules to <a href="https://github.com/JuliaDiff/ChainRules.jl"><code>ChainRules</code></a>.</p>
<h2 dir="auto"><a id="user-content-background" class="anchor" aria-hidden="true" href="#background"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Background</h2>
<p dir="auto">Sparse matrices are extensively used in scientific computing, however there is no automatic differentiation package in Julia yet to handle sparse matrix operations. This project utilizes the reversible embedded domain-specific language <code>NiLang.jl</code> to differentiate sparse matrix operations by writing the sparse matrix operations in a reversible style. The generated backward rules are ported to <code>ChainRules.jl</code> as an extension, so that one can access these features in an automatic differentiation package like <a href="https://github.com/FluxML/Zygote.jl"><code>Zygote</code></a>, <a href="https://github.com/FluxML/Flux.jl"><code>Flux</code></a> and <a href="https://github.com/JuliaDiff/Diffractor.jl"><code>Diffractor</code></a> directly.</p>
<h2 dir="auto"><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Install</h2>
<p dir="auto">To install, type ] in a julia (&gt;=1.6) REPL and then input</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add SparseADRules "><pre>pkg<span class="pl-k">&gt;</span> add SparseADRules </pre></div>
<h2 dir="auto"><a id="user-content-api-references" class="anchor" aria-hidden="true" href="#api-references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>API References</h2>
<h3 dir="auto"><a id="user-content-low-level-operators" class="anchor" aria-hidden="true" href="#low-level-operators"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Low-Level Operators</h3>
<table>
<thead>
<tr>
<th>API</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>function imul!(C::StridedVecOrMat, A::AbstractSparseMatrix{T}, B::DenseInputVecOrMat, α::Number, β::Number) where T</code></td>
<td>sparse matrix to dense matrix multiplication</td>
</tr>
<tr>
<td><code>function imul!(C::StridedVecOrMat, xA::Adjoint{T, &lt;:AbstractSparseMatrix}, B::DenseInputVecOrMat, α::Number, β::Number) where T</code></td>
<td>adjoint sparse matrix to dense matrix multiplication</td>
</tr>
<tr>
<td><code>function imul!(C::StridedVecOrMat, X::DenseMatrixUnion, A::AbstractSparseMatrix{T}, α::Number, β::Number) where T</code></td>
<td>dense matrix to sparse matrix multiplication</td>
</tr>
<tr>
<td><code>function imul!(C::StridedVecOrMat, X::Adjoint{T1, &lt;:DenseMatrixUnion}, A::AbstractSparseMatrix{T2}, α::Number, β::Number) where {T1, T2}</code></td>
<td>adjoint dense matrix to sparse matrix multiplication</td>
</tr>
<tr>
<td><code>function imul!(C::StridedVecOrMat, X::DenseMatrixUnion, xA::Adjoint{T, &lt;:AbstractSparseMatrix}, α::Number, β::Number) where T</code></td>
<td>dense matrix to sparse matrix multiplication</td>
</tr>
<tr>
<td><code>function idot(r, A::SparseMatrixCSC{T},B::SparseMatrixCSC{T}) where {T}</code></td>
<td>dot operation between sparsematrix and sparsematrix</td>
</tr>
<tr>
<td><code>function idot(r, x::AbstractVector, A::AbstractSparseMatrix{T1}, y::AbstractVector{T2}) where {T1, T2}</code></td>
<td>dot operation between sparsematrix and densevector</td>
</tr>
<tr>
<td><code>function idot(r, x::SparseVector, A::AbstractSparseMatrix{T1}, y::SparseVector{T2}) where {T1, T2}</code></td>
<td>dot operation between sparsematrix and sparsevector</td>
</tr>
</tbody>
</table>
<h3 dir="auto"><a id="user-content-high-level-operators" class="anchor" aria-hidden="true" href="#high-level-operators"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>High-Level Operators</h3>
<table>
<thead>
<tr>
<th>API</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>low_rank_svd(A::AbstractSparseMatrix{T}, l::Int, niter::Int = 2, M::Union{AbstractMatrix{T}, Nothing} = nothing) where T</code></td>
<td>Return the singular value decomposition of a sparse matrix <code>A</code> with estimated rank <code>l</code> such that <code>A ≈ U diag(S) Vt</code>. In case row vector <code>M</code> is given, then SVD is computed for the matrix <code>A - M</code>.</td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-a-simple-use-case" class="anchor" aria-hidden="true" href="#a-simple-use-case"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>A Simple Use Case</h2>
<p dir="auto">Here we present a minimal use case to illustrate how to use <code>SparseADRules</code> to speed up <code>Zygote</code>'s gradient computation. To access more examples, please navigate to the <code>examples</code> directory.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using SparseArrays, LinearAlgebra, Random, BenchmarkTools

julia&gt; A = sprand(1000, 1000, 0.1);

julia&gt; x = rand(1000);

julia&gt; using Zygote

julia&gt; @btime Zygote.gradient((A, x) -&gt; sum(A*x), $A, $x)
  15.065 ms (27 allocations: 8.42 MiB)

julia&gt; using SparseADRules

julia&gt; @btime Zygote.gradient((A, x) -&gt; sum(A*x), $A, $x)
  644.035 μs (32 allocations: 3.86 MiB)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SparseArrays, LinearAlgebra, Random, BenchmarkTools

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">sprand</span>(<span class="pl-c1">1000</span>, <span class="pl-c1">1000</span>, <span class="pl-c1">0.1</span>);

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">1000</span>);

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Zygote

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@btime</span> Zygote<span class="pl-k">.</span><span class="pl-c1">gradient</span>((A, x) <span class="pl-k">-&gt;</span> <span class="pl-c1">sum</span>(A<span class="pl-k">*</span>x), <span class="pl-k">$</span>A, <span class="pl-k">$</span>x)
  <span class="pl-c1">15.065</span> ms (<span class="pl-c1">27</span> allocations<span class="pl-k">:</span> <span class="pl-c1">8.42</span> MiB)

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SparseADRules

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@btime</span> Zygote<span class="pl-k">.</span><span class="pl-c1">gradient</span>((A, x) <span class="pl-k">-&gt;</span> <span class="pl-c1">sum</span>(A<span class="pl-k">*</span>x), <span class="pl-k">$</span>A, <span class="pl-k">$</span>x)
  <span class="pl-c1">644.035</span> μs (<span class="pl-c1">32</span> allocations<span class="pl-k">:</span> <span class="pl-c1">3.86</span> MiB)</pre></div>
<p dir="auto">You will see that using <code>SparseADRules</code> would not only speed up the computation process but also save much memory since our implementation does not convert a sparse matrix to a dense arrays in gradient computation.</p>
<h2 dir="auto"><a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contribute</h2>
<p dir="auto">Suggestions and Comments in the Issues are welcome.</p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">MIT License</p>
</article></div>