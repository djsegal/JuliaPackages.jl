<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-logcompose" class="anchor" aria-hidden="true" href="#logcompose"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LogCompose</h1>
<p><a href="https://travis-ci.org/tanmaykm/LogCompose.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/bc8cf2ef84c2c5176ec80e64e5f82714068aaac5/68747470733a2f2f7472617669732d63692e6f72672f74616e6d61796b6d2f4c6f67436f6d706f73652e6a6c2e706e67" alt="Build Status" data-canonical-src="https://travis-ci.org/tanmaykm/LogCompose.jl.png" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/tanmaykm/logroller-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/6e572cf109429cb82c0fda7f5ef9b2ce685daa2a/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f74616e6d61796b6d2f4c6f67436f6d706f73652e6a6c3f6272616e63683d6d6173746572267376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/tanmaykm/LogCompose.jl?branch=master&amp;svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/tanmaykm/LogCompose.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/08aeb19ddcc91e6ae6072105d1972d05b2d2f0b9/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f74616e6d61796b6d2f4c6f67436f6d706f73652e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/tanmaykm/LogCompose.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>Provides a way to specify hierarchical logging configuration in a file.</p>
<p>Configuration file is in the form of a TOML file. Configuration sections are named,
with each section specifying a logger type and parameters needed for its construction.
Sections inherit parameter values from preceeding sections and can override them as well.
Loggers can be constructed by providing the name of a section.</p>
<p><a href="example.toml">Here</a> is what a configuration that allows logging to several types of loggers may look like.</p>
<h2><a id="user-content-plugging-in-a-logger" class="anchor" aria-hidden="true" href="#plugging-in-a-logger"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Plugging in a Logger</h2>
<p>Support for a logger can be added by providing an implementation of <code>LogCompose.logcompose</code> for the target logger type.
The implementation needs to be of the following form:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> LogCompose<span class="pl-k">.</span><span class="pl-en">logcompose</span>(<span class="pl-k">::</span><span class="pl-c1">Type{MyLoggerType}</span>,
        config<span class="pl-k">::</span><span class="pl-c1">Dict{String,Any}</span>,           <span class="pl-c"><span class="pl-c">#</span> config: the entire logging configuration file</span>
        logger_config<span class="pl-k">::</span><span class="pl-c1">Dict{String,Any}</span>)    <span class="pl-c"><span class="pl-c">#</span> logger_config: configuration relevant for the</span>
                                            <span class="pl-c"><span class="pl-c">#</span>      section specified to `LogCompose.logger`</span>
                                            <span class="pl-c"><span class="pl-c">#</span>      with the hierarchy flattened out</span>
    <span class="pl-c"><span class="pl-c">#</span> provides support for MyLoggerType in LogCompose</span>
<span class="pl-k">end</span></pre></div>
<p>For complete examples, refer to any of the existing implementations listed below.</p>
<h2><a id="user-content-loggers-supported" class="anchor" aria-hidden="true" href="#loggers-supported"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Loggers Supported</h2>
<p>LogCompose has in-built support for the loggers provided in the stdlib logging package.
They are listed below with example configuration sections illustrating parameters they accept.</p>
<ul>
<li>Logging.SimpleLogger
<pre><code>[loggers.simple]
type = "Logging.SimpleLogger"
# min_level = "Debug"             # Debug, Info (default) or Error
stream = "simple.log"             # file to log to
</code></pre>
</li>
<li>Logging.ConsoleLogger
<pre><code>[loggers.console]
type = "Logging.ConsoleLogger"
# min_level = "Debug"             # Debug, Info (default) or Error
stream = "stdout"                 # stdout (default), stderr or a filepath
</code></pre>
</li>
<li>Logging.NullLogger
<pre><code>[loggers.null]
type = "Logging.NullLogger"
</code></pre>
</li>
</ul>
<p>There are external packages that provide support for a few other types of loggers as well:</p>
<ul>
<li>LoggingExtras: <a href="https://github.com/tanmaykm/LoggingExtrasCompose.jl">LoggingExtrasCompose.jl</a></li>
<li>LogRoller: <a href="https://github.com/tanmaykm/LogRollerCompose.jl">LogRollerCompose.jl</a></li>
<li>SyslogLogging: <a href="https://github.com/tanmaykm/SyslogLoggingCompose.jl">SyslogLoggingCompose.jl</a></li>
</ul>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<p>Here is an example configuration using multiple logger types, from different logging packages.</p>
<div class="highlight highlight-source-toml"><pre>[<span class="pl-en">file</span>]
<span class="pl-smi">type</span> = <span class="pl-s"><span class="pl-pds">"</span>LogRoller.RollingLogger<span class="pl-pds">"</span></span>
<span class="pl-smi">min_level</span> = <span class="pl-s"><span class="pl-pds">"</span>Info<span class="pl-pds">"</span></span>
<span class="pl-smi">nfiles</span> = <span class="pl-c1">5</span>

[<span class="pl-en">syslog</span>]
<span class="pl-smi">type</span> = <span class="pl-s"><span class="pl-pds">"</span>SyslogLogging.SyslogLogger<span class="pl-pds">"</span></span>
<span class="pl-smi">facility</span> = <span class="pl-s"><span class="pl-pds">"</span>user<span class="pl-pds">"</span></span>

[<span class="pl-en">file</span>.<span class="pl-en">testapp1</span>]
<span class="pl-smi">filename</span> = <span class="pl-s"><span class="pl-pds">"</span>/tmp/testapp1.log<span class="pl-pds">"</span></span>

[<span class="pl-en">file</span>.<span class="pl-en">testapp2</span>]
<span class="pl-smi">filename</span> = <span class="pl-s"><span class="pl-pds">"</span>/tmp/testapp2.log<span class="pl-pds">"</span></span>
<span class="pl-smi">min_level</span> = <span class="pl-s"><span class="pl-pds">"</span>Debug<span class="pl-pds">"</span></span>     <span class="pl-c"><span class="pl-c">#</span> overrides min_level to Debug for testapp2</span>
<span class="pl-smi">nfiles</span> = <span class="pl-c1">10</span>             <span class="pl-c"><span class="pl-c">#</span> overrides nfiles to 10 for testapp2</span>

[<span class="pl-en">syslog</span>.<span class="pl-en">testapp1</span>]
<span class="pl-smi">identity</span> = <span class="pl-s"><span class="pl-pds">"</span>testapp1<span class="pl-pds">"</span></span>
<span class="pl-smi">facility</span> = <span class="pl-s"><span class="pl-pds">"</span>daemon<span class="pl-pds">"</span></span>     <span class="pl-c"><span class="pl-c">#</span> facility set to daemon instead of default user</span>

[<span class="pl-en">syslog</span>.<span class="pl-en">testapp2</span>]
<span class="pl-smi">identity</span> = <span class="pl-s"><span class="pl-pds">"</span>testapp2<span class="pl-pds">"</span></span>

[<span class="pl-en">testapp1</span>]
<span class="pl-smi">type</span> = <span class="pl-s"><span class="pl-pds">"</span>LoggingExtras.TeeLogger<span class="pl-pds">"</span></span>
<span class="pl-smi">destinations</span> = [<span class="pl-s"><span class="pl-pds">"</span>file.testapp1<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>syslog.testapp1<span class="pl-pds">"</span></span>]

[<span class="pl-en">testapp2</span>]
<span class="pl-smi">type</span> = <span class="pl-s"><span class="pl-pds">"</span>LoggingExtras.TeeLogger<span class="pl-pds">"</span></span>
<span class="pl-smi">destinations</span> = [<span class="pl-s"><span class="pl-pds">"</span>file.testapp2<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>syslog.testapp2<span class="pl-pds">"</span></span>]</pre></div>
<p>And below is a snippet of Julia code that make use of this configuration:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> LogCompose, Logging

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> LogRoller, LogRollerCompose

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SyslogLogging, SyslogLoggingCompose

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> LoggingExtras, LoggingExtrasCompose

julia<span class="pl-k">&gt;</span> logger1 <span class="pl-k">=</span> LogCompose<span class="pl-k">.</span><span class="pl-c1">logger</span>(<span class="pl-s"><span class="pl-pds">"</span>testconfig.toml<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>testapp1<span class="pl-pds">"</span></span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">typeof</span>(logger1)
TeeLogger{Tuple{RollingLogger,SyslogLogger}}

julia<span class="pl-k">&gt;</span> logger2 <span class="pl-k">=</span> LogCompose<span class="pl-k">.</span><span class="pl-c1">logger</span>(<span class="pl-s"><span class="pl-pds">"</span>testconfig.toml<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>testapp2<span class="pl-pds">"</span></span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">typeof</span>(logger2)
TeeLogger{Tuple{RollingLogger,SyslogLogger}}

julia<span class="pl-k">&gt;</span> <span class="pl-c1">first</span>(logger1<span class="pl-k">.</span>loggers)<span class="pl-k">.</span>stream<span class="pl-k">.</span>filename
<span class="pl-s"><span class="pl-pds">"</span>/tmp/testapp1.log<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">first</span>(logger2<span class="pl-k">.</span>loggers)<span class="pl-k">.</span>stream<span class="pl-k">.</span>filename
<span class="pl-s"><span class="pl-pds">"</span>/tmp/testapp2.log<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">first</span>(logger2<span class="pl-k">.</span>loggers)<span class="pl-k">.</span>stream<span class="pl-k">.</span>nfiles
<span class="pl-c1">10</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">with_logger</span>(logger1) <span class="pl-k">do</span>
           <span class="pl-c1">@info</span>(<span class="pl-s"><span class="pl-pds">"</span>hello from app1<span class="pl-pds">"</span></span>)
       <span class="pl-k">end</span>

shell<span class="pl-k">&gt;</span> cat <span class="pl-k">/</span>tmp<span class="pl-k">/</span>testapp1<span class="pl-k">.</span>log
┌ Info<span class="pl-k">:</span> <span class="pl-c1">2020</span><span class="pl-k">-</span><span class="pl-c1">04</span><span class="pl-k">-</span><span class="pl-c1">02</span>T12<span class="pl-k">:</span><span class="pl-c1">03</span><span class="pl-k">:</span><span class="pl-c1">03.588</span><span class="pl-k">:</span> hello from app1
└ @ Main REPL[<span class="pl-c1">13</span>]<span class="pl-k">:</span><span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">with_logger</span>(logger2) <span class="pl-k">do</span>
           <span class="pl-c1">@info</span>(<span class="pl-s"><span class="pl-pds">"</span>hello from app2<span class="pl-pds">"</span></span>)
       <span class="pl-k">end</span>

shell<span class="pl-k">&gt;</span> cat <span class="pl-k">/</span>tmp<span class="pl-k">/</span>testapp2<span class="pl-k">.</span>log
┌ Info<span class="pl-k">:</span> <span class="pl-c1">2020</span><span class="pl-k">-</span><span class="pl-c1">04</span><span class="pl-k">-</span><span class="pl-c1">02</span>T12<span class="pl-k">:</span><span class="pl-c1">04</span><span class="pl-k">:</span><span class="pl-c1">13.156</span><span class="pl-k">:</span> hello from app2
└ @ Main REPL[<span class="pl-c1">15</span>]<span class="pl-k">:</span><span class="pl-c1">2</span>
</pre></div>
</article></div>