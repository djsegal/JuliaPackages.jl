<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-stanlogdensityproblems" class="anchor" aria-hidden="true" href="#stanlogdensityproblems"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>StanLogDensityProblems</h1>
<p dir="auto"><a href="https://sethaxen.github.io/StanLogDensityProblems.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://sethaxen.github.io/StanLogDensityProblems.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/sethaxen/StanLogDensityProblems.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/sethaxen/StanLogDensityProblems.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/sethaxen/StanLogDensityProblems.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4871059463c388f064946d05f691624a744ac178bdbd91dc05e7a24b4a4e341c/68747470733a2f2f636f6465636f762e696f2f67682f736574686178656e2f5374616e4c6f6744656e7369747950726f626c656d732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/sethaxen/StanLogDensityProblems.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width: 100%;"></a>
<a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width: 100%;"></a></p>
<p dir="auto">StanLogDensityProblems implements the <a href="https://www.tamaspapp.eu/LogDensityProblems.jl/" rel="nofollow">LogDensityProblems API</a> for <a href="https://mc-stan.org/" rel="nofollow">Stan</a> models using <a href="https://roualdes.github.io/bridgestan/" rel="nofollow">BridgeStan</a>.
For easily benchmarking inference algorithms, StanLogDensityProblems also integrates with <a href="https://github.com/sethaxen/PosteriorDB.jl">PosteriorDB</a>.</p>
<p dir="auto">For example, here we sample a Stan model from PosteriorDB using <a href="https://www.tamaspapp.eu/DynamicHMC.jl" rel="nofollow">DynamicHMC</a>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using DynamicHMC, PosteriorDB, Random, StanLogDensityProblems

julia&gt; pdb = PosteriorDB.database()
PosteriorDatabase(...)

julia&gt; post = PosteriorDB.posterior(pdb, &quot;dogs-dogs&quot;)
Posterior: dogs-dogs

julia&gt; prob = StanProblem(post, &quot;.&quot;)
StanProblem: dogs_model

julia&gt; rng = Random.default_rng();

julia&gt; result = mcmc_with_warmup(rng, prob, 1_000; reporter=NoProgressReport());

julia&gt; result.posterior_matrix
3×1000 Matrix{Float64}:
  1.27568    1.29648    1.32405   …   1.65451    1.3875     1.76917
 -0.327308  -0.305644  -0.303549     -0.273245  -0.387199  -0.333485
 -0.128237  -0.166094  -0.15898      -0.223369  -0.15062   -0.236186"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> DynamicHMC, PosteriorDB, Random, StanLogDensityProblems

julia<span class="pl-k">&gt;</span> pdb <span class="pl-k">=</span> PosteriorDB<span class="pl-k">.</span><span class="pl-c1">database</span>()
<span class="pl-c1">PosteriorDatabase</span>(<span class="pl-k">...</span>)

julia<span class="pl-k">&gt;</span> post <span class="pl-k">=</span> PosteriorDB<span class="pl-k">.</span><span class="pl-c1">posterior</span>(pdb, <span class="pl-s"><span class="pl-pds">"</span>dogs-dogs<span class="pl-pds">"</span></span>)
Posterior<span class="pl-k">:</span> dogs<span class="pl-k">-</span>dogs

julia<span class="pl-k">&gt;</span> prob <span class="pl-k">=</span> <span class="pl-c1">StanProblem</span>(post, <span class="pl-s"><span class="pl-pds">"</span>.<span class="pl-pds">"</span></span>)
StanProblem<span class="pl-k">:</span> dogs_model

julia<span class="pl-k">&gt;</span> rng <span class="pl-k">=</span> Random<span class="pl-k">.</span><span class="pl-c1">default_rng</span>();

julia<span class="pl-k">&gt;</span> result <span class="pl-k">=</span> <span class="pl-c1">mcmc_with_warmup</span>(rng, prob, <span class="pl-c1">1_000</span>; reporter<span class="pl-k">=</span><span class="pl-c1">NoProgressReport</span>());

julia<span class="pl-k">&gt;</span> result<span class="pl-k">.</span>posterior_matrix
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">1000</span> Matrix{Float64}<span class="pl-k">:</span>
  <span class="pl-c1">1.27568</span>    <span class="pl-c1">1.29648</span>    <span class="pl-c1">1.32405</span>   …   <span class="pl-c1">1.65451</span>    <span class="pl-c1">1.3875</span>     <span class="pl-c1">1.76917</span>
 <span class="pl-k">-</span><span class="pl-c1">0.327308</span>  <span class="pl-k">-</span><span class="pl-c1">0.305644</span>  <span class="pl-k">-</span><span class="pl-c1">0.303549</span>     <span class="pl-k">-</span><span class="pl-c1">0.273245</span>  <span class="pl-k">-</span><span class="pl-c1">0.387199</span>  <span class="pl-k">-</span><span class="pl-c1">0.333485</span>
 <span class="pl-k">-</span><span class="pl-c1">0.128237</span>  <span class="pl-k">-</span><span class="pl-c1">0.166094</span>  <span class="pl-k">-</span><span class="pl-c1">0.15898</span>      <span class="pl-k">-</span><span class="pl-c1">0.223369</span>  <span class="pl-k">-</span><span class="pl-c1">0.15062</span>   <span class="pl-k">-</span><span class="pl-c1">0.236186</span></pre></div>
</article></div>