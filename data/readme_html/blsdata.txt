<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-blsdata" class="anchor" aria-hidden="true" href="#blsdata"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>BlsData</h1>
<p>A third-party Julia library to pull data from
the <a href="https://www.bls.gov/data/" rel="nofollow">Bureau of Labor Statistics</a> (BLS).</p>
<table>
<thead>
<tr>
<th></th>
<th align="left">Does this thing work?</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Documentation</strong></td>
<td align="left">&lt;this page, for now&gt;</td>
</tr>
<tr>
<td><strong>Package Evaluator</strong></td>
<td align="left"><a href="http://pkg.julialang.org/?pkg=BlsData" rel="nofollow"><img src="https://camo.githubusercontent.com/91d30957d13fe757365a2901b8cbaa23dd9b313e/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f426c73446174615f302e352e737667" alt="" data-canonical-src="http://pkg.julialang.org/badges/BlsData_0.5.svg" style="max-width:100%;"></a>  <a href="http://pkg.julialang.org/?pkg=BlsData" rel="nofollow"><img src="https://camo.githubusercontent.com/b8694eb0b9f4a833a8b8f9ac633f7d91a0109d67/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f426c73446174615f302e362e737667" alt="" data-canonical-src="http://pkg.julialang.org/badges/BlsData_0.6.svg" style="max-width:100%;"></a></td>
</tr>
<tr>
<td><strong>Build Status</strong></td>
<td align="left"><a href="https://travis-ci.org/micahjsmith/BlsData.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0018de39577ba31ff7afcbabb01e81e1006b8031/68747470733a2f2f7472617669732d63692e6f72672f6d696361686a736d6974682f426c73446174612e6a6c2e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.org/micahjsmith/BlsData.jl.svg?branch=master" style="max-width:100%;"></a> <a href="https://ci.appveyor.com/project/micahjsmith/blsdata-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a87383ab542560774475992a1a1887423883f2c6/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6d6364327135726e6f3737796d78716a2f6272616e63682f6d61737465723f7376673d74727565" alt="" data-canonical-src="https://ci.appveyor.com/api/projects/status/mcd2q5rno77ymxqj/branch/master?svg=true" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Setup</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>BlsData<span class="pl-pds">"</span></span>)</pre></div>
<p><em>BlsData</em> uses BLS's <a href="https://www.bls.gov/developers" rel="nofollow">Public Data API</a>. This API limits the
number of requests that unauthenticated users can make each day. To increase these limits,
register a Public Data API account on the BLS website
<a href="https://data.bls.gov/registrationEngine/" rel="nofollow">here</a> to receive an API key.</p>
<p>Make the BLS Public Data API key that you just registered accessible to <em>BlsData</em> by storing
it in a file. Then, your API key will be automatically detected by the package.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">open</span>(<span class="pl-c1">joinpath</span>(<span class="pl-c1">homedir</span>(), <span class="pl-s"><span class="pl-pds">"</span>.blsdatarc<span class="pl-pds">"</span></span>), <span class="pl-s"><span class="pl-pds">"</span>w<span class="pl-pds">"</span></span>) <span class="pl-k">do</span> f
           <span class="pl-c1">write</span>(f, <span class="pl-s"><span class="pl-pds">"</span>0123456789abcdef0123456789abcdef<span class="pl-pds">"</span></span>)
       <span class="pl-k">end</span></pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>Download civilian labor force level data:</p>
<pre><code>using BlsData
b = Bls()
result = get_data(b, "LNS11000000")
</code></pre>
<p>Then, access the DataFrame using <code>result.data</code>.</p>
<h2><a id="user-content-functionality" class="anchor" aria-hidden="true" href="#functionality"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Functionality</h2>
<h3><a id="user-content-the-bls-type" class="anchor" aria-hidden="true" href="#the-bls-type"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>The <code>Bls</code> type</h3>
<p>The <code>Bls</code> type represents a connection to the BLS API.</p>
<p>Looks for a registration key in the file <code>~/.blsdatarc</code>, or omits the registration key
otherwise.</p>
<pre><code>b = Bls()
</code></pre>
<p>Specify a registration key directly.</p>
<pre><code>b = Bls(key="0123456789abcdef0123456789abcdef")
</code></pre>
<p>Get and set fields.</p>
<pre><code>get_api_url(b::Bls)                       # Get the base URL used to connect to the server
set_api_url!(b::Bls, url::AbstractString) # Set the base URL used to connect to the server
get_api_key(b::Bls)                       # Get the API key
get_api_version(b::Bls)                   # Get the API version (v1 or v2) used
requests_made(b::Bls)                     # Get the number of requests made today
requests_remaining(b::Bls)                # Get the number of requests remaining today
</code></pre>
<p>Note that the requests made/remaining are calculated based on the lifetime of this object
only and would not include those made in a distinct Julia session.</p>
<h3><a id="user-content-the-blsseries-type" class="anchor" aria-hidden="true" href="#the-blsseries-type"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>The <code>BlsSeries</code> type</h3>
<p>The <code>BlsSeries</code> type contains the data in a query response.</p>
<p>For a series <code>s</code>, access fields with</p>
<pre><code>s.id                                     # series ID
s.data                                   # DataFrame of data
s.catalog                                # catalog metadata
</code></pre>
<h3><a id="user-content-query-data" class="anchor" aria-hidden="true" href="#query-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Query data</h3>
<p>Request one or multiple series from the BLS API.</p>
<pre><code>get_data(b, series [; startyear, endyear, catalog])
</code></pre>
<ul>
<li><code>b</code>: A <code>Bls</code> connection</li>
<li><code>series</code>: A string, or array of strings, identifying the time series</li>
<li><code>startyear</code>: A four-digit year identifying the start of the data request. Defaults to
9 or 19 years before <code>endyear</code>, depending on the API version used.</li>
<li><code>endyear</code>: A four-digit year identifying the end of the data request. Defaults to
9 or 19 years after <code>endyear</code>, depending on the API version used; or, this year, if
neither <code>startyear</code> nor <code>endyear</code> is provided.</li>
<li><code>catalog</code>: Whether to return any available metadata about the series. Defaults to <code>false</code>.</li>
</ul>
<p>A <code>BlsSeries</code>, or an array of <code>BlsSeries</code>.</p>
<h2><a id="user-content-finding-data-series" class="anchor" aria-hidden="true" href="#finding-data-series"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Finding data series</h2>
<p>The BLS mnemonics are somewhat obscure. You can attempt to build them programmatically by
consulting <a href="https://www.bls.gov/help/hlpforma.htm" rel="nofollow">this page</a>.</p>
<h2><a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Notes</h2>
<p>The BLS API provides the following limits on requests:</p>
<table>
<thead>
<tr>
<th></th>
<th>v2 (registered)</th>
<th>v1 (unregistered)</th>
</tr>
</thead>
<tbody>
<tr>
<td>Daily query limit</td>
<td>500</td>
<td>25</td>
</tr>
<tr>
<td>Years per query limit</td>
<td>20</td>
<td>10</td>
</tr>
<tr>
<td>Series per query limit</td>
<td>50</td>
<td>25</td>
</tr>
</tbody>
</table>
<p><code>BlsData.jl</code> addresses these limits as follows:</p>
<ul>
<li>track daily query limit for reference</li>
<li>make multiple requests under the hood, and concatenate results, for date ranges longer
than limit</li>
<li>[NOT IMPLEMENTED] make multiple requests under the hood, and concatenate results, for
lists of series longer than limit</li>
</ul>
</article></div>