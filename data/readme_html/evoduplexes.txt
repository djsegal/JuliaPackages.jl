<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-evoduplexesjl" class="anchor" aria-hidden="true" href="#evoduplexesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>EvoDuplexes.jl</h1>
<p><a href="https://travis-ci.com/timbitz/EvoDuplexes.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/13a8abcabcbfccb854dab49293b7112a2ff96b5f384d6d381a776d34525ecbe8/68747470733a2f2f7472617669732d63692e636f6d2f74696d6269747a2f45766f4475706c657865732e6a6c2e7376673f746f6b656e3d52376d5a68654e47687352655137686e32676466266272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/timbitz/EvoDuplexes.jl.svg?token=R7mZheNGhsReQ7hn2gdf&amp;branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/timbitz/EvoDuplexes.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/914e32bed698c3241e3824257cc5158519b8e4b5e73e026c6cad56033d3622d9/68747470733a2f2f636f6465636f762e696f2f67682f74696d6269747a2f45766f4475706c657865732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/timbitz/EvoDuplexes.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="http://www.repostatus.org/#wip" rel="nofollow"><img src="https://camo.githubusercontent.com/695935dc7a39fbee68b14bede34c6e31924729ca136f3864d9b61e3e09c49786/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f7769702e737667" alt="Project Status: WIP â€“ Initial development is in progress, but there has not yet been a stable, usable release suitable for the public." data-canonical-src="http://www.repostatus.org/badges/latest/wip.svg" style="max-width:100%;"></a></p>
<p>RNA suffix array traversal through chromosomal multiple alignment files (MAF format) to fold and score (with both free-energy models and phylogenetic likelihood) all local and long-range RNA duplexes while allowing bulges and mismatches.</p>
<p>Full documentation is coming soon (<strong>Requires Julia v0.6.4</strong>), however comprehensive examples of API usage for EvoDuplexes package can be found in <code>test/runtests.jl</code>.</p>
<p>Executable can be run using <code>evo-duplex.jl</code> in /bin:</p>
<div class="highlight highlight-source-shell position-relative" data-snippet-clipboard-copy-content="$ julia evo-duplex.jl -h
usage: evo-duplex.jl --tree TREE [--cons-regions CONS-REGIONS]
                     --gene-regions GENE-REGIONS --maf MAF
                     [--model-load MODEL-LOAD]
                     [--model-data MODEL-DATA] [--model-train]
                     [-o OUTPUT] [--cons-branch CONS-BRANCH]
                     [--sig-ratio SIG-RATIO] [--output-all]
                     [--max-distance MAX-DISTANCE]
                     [--max-duplex-length MAX-DUPLEX-LENGTH]
                     [--max-bulges MAX-BULGES]
                     [--max-mismatches MAX-MISMATCHES]
                     [--max-deltag MAX-DELTAG] [-h]

optional arguments:
  --tree TREE           Phylogenetic tree with neutral branch lengths
                        (in newick format)
  --cons-regions CONS-REGIONS
                        BED file containing conserved regions
  --gene-regions GENE-REGIONS
                        BED file containing gene units to allow
                        long-range folding within
  --maf MAF             Directory with MAF files named by chromosome
                        (chr1.maf.gz...) (default: &quot;../maf&quot;)
  --model-load MODEL-LOAD
                        Load pre-trained IsolationForest models,
                        .evt.jls
  --model-data MODEL-DATA
                        Load training data from `.jlt` file, output
                        `.evt.jls` file
  --model-train         Train the IsolationForest models from scratch
                        using input regions, output `.evt.jls` file
  -o, --output OUTPUT   Output prefix (default: &quot;evoduplex&quot;)
  --cons-branch CONS-BRANCH
                        When conserved regions are given, use this
                        branch length multiplier (type: Float64,
                        default: 0.33)
  --sig-ratio SIG-RATIO
                        Output the top fraction of outliers (type:
                        Float64, default: 0.05)
  --output-all          Output all folds regardless of prediction
                        status
  --max-distance MAX-DISTANCE
                        Set a limit on the maximum distance between a
                        left/right arm of a duplex (type: Int64,
                        default: 2000)
  --max-duplex-length MAX-DUPLEX-LENGTH
                        Set the maximum duplex length that will be
                        accessible from the suffix array (type: Int64,
                        default: 50)
  --max-bulges MAX-BULGES
                        Set the maximum number of bulges to allow for
                        a duplex (type: Int64, default: 3)
  --max-mismatches MAX-MISMATCHES
                        Set the maximum number of mismatches to allow
                        for a duplex (type: Int64, default: 3)
  --max-deltag MAX-DELTAG
                        Set the maximum allowable deltaG value (type:
                        Float64, default: -8.0)
  -h, --help            show this help message and exit
"><pre>$ julia evo-duplex.jl -h
usage: evo-duplex.jl --tree TREE [--cons-regions CONS-REGIONS]
                     --gene-regions GENE-REGIONS --maf MAF
                     [--model-load MODEL-LOAD]
                     [--model-data MODEL-DATA] [--model-train]
                     [-o OUTPUT] [--cons-branch CONS-BRANCH]
                     [--sig-ratio SIG-RATIO] [--output-all]
                     [--max-distance MAX-DISTANCE]
                     [--max-duplex-length MAX-DUPLEX-LENGTH]
                     [--max-bulges MAX-BULGES]
                     [--max-mismatches MAX-MISMATCHES]
                     [--max-deltag MAX-DELTAG] [-h]

optional arguments:
  --tree TREE           Phylogenetic tree with neutral branch lengths
                        (in newick format)
  --cons-regions CONS-REGIONS
                        BED file containing conserved regions
  --gene-regions GENE-REGIONS
                        BED file containing gene units to allow
                        long-range folding within
  --maf MAF             Directory with MAF files named by chromosome
                        (chr1.maf.gz...) (default: <span class="pl-s"><span class="pl-pds">"</span>../maf<span class="pl-pds">"</span></span>)
  --model-load MODEL-LOAD
                        Load pre-trained IsolationForest models,
                        .evt.jls
  --model-data MODEL-DATA
                        Load training data from <span class="pl-s"><span class="pl-pds">`</span>.jlt<span class="pl-pds">`</span></span> file, output
                        <span class="pl-s"><span class="pl-pds">`</span>.evt.jls<span class="pl-pds">`</span></span> file
  --model-train         Train the IsolationForest models from scratch
                        using input regions, output <span class="pl-s"><span class="pl-pds">`</span>.evt.jls<span class="pl-pds">`</span></span> file
  -o, --output OUTPUT   Output prefix (default: <span class="pl-s"><span class="pl-pds">"</span>evoduplex<span class="pl-pds">"</span></span>)
  --cons-branch CONS-BRANCH
                        When conserved regions are given, use this
                        branch length multiplier (type: Float64,
                        default: 0.33)
  --sig-ratio SIG-RATIO
                        Output the top fraction of outliers (type:
                        Float64, default: 0.05)
  --output-all          Output all folds regardless of prediction
                        status
  --max-distance MAX-DISTANCE
                        Set a limit on the maximum distance between a
                        left/right arm of a duplex (type: Int64,
                        default: 2000)
  --max-duplex-length MAX-DUPLEX-LENGTH
                        Set the maximum duplex length that will be
                        accessible from the suffix array (type: Int64,
                        default: 50)
  --max-bulges MAX-BULGES
                        Set the maximum number of bulges to allow <span class="pl-k">for</span>
                        a duplex (type: Int64, default: 3)
  --max-mismatches MAX-MISMATCHES
                        Set the maximum number of mismatches to allow
                        <span class="pl-k">for</span> a duplex (type: Int64, default: 3)
  --max-deltag MAX-DELTAG
                        Set the maximum allowable deltaG value (type:
                        Float64, default: -8.0)
  -h, --help            show this <span class="pl-c1">help</span> message and <span class="pl-c1">exit</span></pre></div>
</article></div>