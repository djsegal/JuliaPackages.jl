<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-satellitetoolboxsgp4jl" class="anchor" aria-hidden="true" href="#satellitetoolboxsgp4jl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SatelliteToolboxSgp4.jl</h1>
<p dir="auto"><a href="https://github.com/JuliaSpace/SatelliteToolboxSgp4.jl/actions/workflows/ci.yml"><img src="https://github.com/JuliaSpace/SatelliteToolboxSgp4.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaSpace/SatelliteToolboxSgp4.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fbfeccebda73fa9299a8b33d53a9f3d5a3d8af93d8c3720699c851a2bf122014/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696153706163652f536174656c6c697465546f6f6c626f78536770342e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d34383055594458364835" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaSpace/SatelliteToolboxSgp4.jl/branch/main/graph/badge.svg?token=480UYDX6H5" style="max-width: 100%;"></a>
<a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package contains the implementation of the
<a href="https://en.wikipedia.org/wiki/Simplified_perturbations_models" rel="nofollow">SGP4/SDP4</a> orbit propagator
for the Julia language.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg
julia&gt; Pkg.install(&quot;SatelliteToolboxSgp4&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg
julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">install</span>(<span class="pl-s"><span class="pl-pds">"</span>SatelliteToolboxSgp4<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">First, we need to initialize the structure that contains the information to propagate the
orbit using the function <code>sgp4_init</code>. Usually, we pass a
<a href="https://github.com/JuliaSpace/SatelliteToolboxTle.jl">TLE</a> to initialize the SGP4
algorithm:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using SatelliteToolboxTle

julia&gt; tle = tle&quot;&quot;&quot;
       AMAZONIA 1
       1 47699U 21015A   23083.68657856 -.00000044  10000-8  43000-4 0  9990
       2 47699  98.4304 162.1097 0001247 136.2017 223.9283 14.40814394108652
       &quot;&quot;&quot;

julia&gt; sgp4d = sgp4_init(tle)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SatelliteToolboxTle

julia<span class="pl-k">&gt;</span> tle <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">tle</span>"""</span></span>
<span class="pl-s">       AMAZONIA 1</span>
<span class="pl-s">       1 47699U 21015A   23083.68657856 -.00000044  10000-8  43000-4 0  9990</span>
<span class="pl-s">       2 47699  98.4304 162.1097 0001247 136.2017 223.9283 14.40814394108652</span>
<span class="pl-s">       <span class="pl-pds">"""</span></span>

julia<span class="pl-k">&gt;</span> sgp4d <span class="pl-k">=</span> <span class="pl-c1">sgp4_init</span>(tle)</pre></div>
<p dir="auto"><code>sgp4_init</code> supports the keyword <code>sgp4c</code> to select the constants used to propagate the
orbit. It must be an object of type <code>Sgp4Constants</code>. The following constants are already
defined in this package:</p>
<ul dir="auto">
<li><code>sgp4c_wgs84</code>: (<strong>DEFAULT</strong>) Constants based on WGS84 using <code>Float64</code>.</li>
<li><code>sgp4c_wgs84_f32</code>: Constants based on WGS84 using <code>Float32</code>.</li>
<li><code>sgp4c_wgs72</code>: Constants based on WGS72 using <code>Float64</code>.</li>
<li><code>sgp4c_wgs72_f32</code>: Constants based on WGS72 using <code>Float32</code>.</li>
</ul>
<blockquote>
<p dir="auto"><span class="color-fg-accent"><svg class="octicon octicon-info mr-2" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path></svg>Note</span>
The propagator will use the same type of object <code>sgp4c</code> to propagate the orbit. Hence, if
one selects <code>sgp4c_wgs84_f32</code>, the SGP4 will compute everything considering <code>Float32</code>
numbers.</p>
</blockquote>
<p dir="auto">The SGP4 can also be initialized by passing the mean elements directly. For more
information, see the documentation of the function <code>sgp4_init</code>.</p>
<p dir="auto">Afterward, we can propagate the orbit using the function <code>sgp4!(sgp4d, t)</code> that propagates
the mean elements defined in <code>sgp4d</code> by <code>t</code> minutes. This function returns the position [km]
and velocity [km/s] vectors represented in the True Equator, Mean Equinox (TEME) reference
frame.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# Propagate the orbit for 10 minutes.
julia&gt; r_teme, v_teme = sgp4!(sgp4d, 10)
([-5300.1473032595195, 2356.780136349037, 4149.0611906521035], [4.464838382952148, -0.5106103512199875, 5.9760603775620815])"><pre><span class="pl-c"><span class="pl-c">#</span> Propagate the orbit for 10 minutes.</span>
julia<span class="pl-k">&gt;</span> r_teme, v_teme <span class="pl-k">=</span> <span class="pl-c1">sgp4!</span>(sgp4d, <span class="pl-c1">10</span>)
([<span class="pl-k">-</span><span class="pl-c1">5300.1473032595195</span>, <span class="pl-c1">2356.780136349037</span>, <span class="pl-c1">4149.0611906521035</span>], [<span class="pl-c1">4.464838382952148</span>, <span class="pl-k">-</span><span class="pl-c1">0.5106103512199875</span>, <span class="pl-c1">5.9760603775620815</span>])</pre></div>
<blockquote>
<p dir="auto"><span class="color-fg-attention"><svg class="octicon octicon-alert mr-2" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path></svg>Warning</span>
We do not use SI units here to keep consistency with the original SGP4/SDP4 algorithms.</p>
</blockquote>
<p dir="auto">The function <code>sgp4(t, args...)</code> creates the propagator and propagates the orbit defined in
<code>args...</code> by <code>t</code> minutes. It returns the same information as the function <code>sgp4!</code> and the
initialized propagator structure. <code>args...</code> must be the same arguments supported by <code>sgp4!</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; r_teme, v_teme, sgp4d = sgp4(10, tle)

julia&gt; r_teme
3-element StaticArraysCore.SVector{3, Float64} with indices SOneTo(3):
 -5300.1473032595195
  2356.780136349037
  4149.0611906521035

julia&gt; v_teme
3-element StaticArraysCore.SVector{3, Float64} with indices SOneTo(3):
  4.464838382952148
 -0.5106103512199875
  5.9760603775620815"><pre>julia<span class="pl-k">&gt;</span> r_teme, v_teme, sgp4d <span class="pl-k">=</span> <span class="pl-c1">sgp4</span>(<span class="pl-c1">10</span>, tle)

julia<span class="pl-k">&gt;</span> r_teme
<span class="pl-c1">3</span><span class="pl-k">-</span>element StaticArraysCore<span class="pl-k">.</span>SVector{<span class="pl-c1">3</span>, Float64} with indices <span class="pl-c1">SOneTo</span>(<span class="pl-c1">3</span>)<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">5300.1473032595195</span>
  <span class="pl-c1">2356.780136349037</span>
  <span class="pl-c1">4149.0611906521035</span>

julia<span class="pl-k">&gt;</span> v_teme
<span class="pl-c1">3</span><span class="pl-k">-</span>element StaticArraysCore<span class="pl-k">.</span>SVector{<span class="pl-c1">3</span>, Float64} with indices <span class="pl-c1">SOneTo</span>(<span class="pl-c1">3</span>)<span class="pl-k">:</span>
  <span class="pl-c1">4.464838382952148</span>
 <span class="pl-k">-</span><span class="pl-c1">0.5106103512199875</span>
  <span class="pl-c1">5.9760603775620815</span></pre></div>
<p dir="auto"><code>sgp4</code> also supports the same keywords arguments as <code>sgp4!</code>.</p>
<p dir="auto">We also have the function <code>sgp4_init!</code> that initializes a SGP4 propagator structure
in-place, avoiding unnecessary allocations in some cases. For more information, see the
function documentation.</p>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<p dir="auto">The code in this package was built using the following references:</p>
<ul dir="auto">
<li><strong>[1]</strong> Hoots, F. R., Roehrich, R. L (1980). <em>Models for Propagation of NORAD Elements
Set</em>. <strong>Spacetrack Report No. 3</strong>.</li>
<li><strong>[2]</strong> Vallado, D. A., Crawford, P., Hujsak, R., Kelso, T. S (2006). <em>Revisiting
Spacetrack Report #3: Rev1</em>. <strong>AIAA</strong>.</li>
<li><strong>[3]</strong> SGP4 Source code of <a href="https://github.com/cbassa/strf">STRF</a>, which the C code was
converted by Paul. S. Crawford and Andrew R. Brooks.</li>
</ul>
</article></div>