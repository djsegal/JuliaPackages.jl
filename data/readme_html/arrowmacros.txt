<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-arrowmacros" class="anchor" aria-hidden="true" href="#arrowmacros"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ArrowMacros</h1>
<p>A Julia package providing the macros <code>@↓</code>, <code>@↑</code>, <code>@⤓</code>, <code>@⤒</code>, and <code>@←</code>.</p>
<p><a href="https://github.com/antonuccig/ArrowMacros.jl/actions"><img src="https://github.com/antonuccig/ArrowMacros.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/antonuccig/ArrowMacros.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/25a9c7f43dabecee1a51427e0e09ff085f04deeb094765b7b208aba110a5186f/68747470733a2f2f636f6465636f762e696f2f67682f616e746f6e75636369672f4172726f774d6163726f732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/antonuccig/ArrowMacros.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using ArrowMacros
"><pre><span class="pl-k">using</span> ArrowMacros</pre></div>
<p><code>@↓</code> and <code>@↑</code> provide <a href="https://github.com/carlobaldassi/ExtractMacro.jl"><code>ExtractMacro</code></a>-like features with <a href="https://github.com/mauro3/UnPack.jl"><code>UnPack</code></a>-like syntax and speed:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="mutable struct A
  a
  b
end

s = A(1, -1)
@↓ a, b ← abs(b) + 1 = s
# (a, b) == (1, 2)

a += 1
@↑ s = a, b ← 2b - 1
# (s.a, s.b) == (2, 3)
"><pre><span class="pl-k">mutable struct</span> A
  a
  b
<span class="pl-k">end</span>

s <span class="pl-k">=</span> <span class="pl-c1">A</span>(<span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">1</span>)
@↓ a, b ← <span class="pl-c1">abs</span>(b) <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">=</span> s
<span class="pl-c"><span class="pl-c">#</span> (a, b) == (1, 2)</span>

a <span class="pl-k">+=</span> <span class="pl-c1">1</span>
@↑ s <span class="pl-k">=</span> a, b ← <span class="pl-c1">2</span>b <span class="pl-k">-</span> <span class="pl-c1">1</span>
<span class="pl-c"><span class="pl-c">#</span> (s.a, s.b) == (2, 3)</span></pre></div>
<p><code>@⤓</code> and <code>@⤒</code> work like <code>@↓</code> and <code>@↑</code>, but they search in the tree structure of the <code>struct</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="mutable struct B
  c
  d
end

s = A(1, B(2, [3, 4]))
@⤓ a, b ← c, c ← d[1] = s
# (a, b, c) == (1, 2, 3)

a += 1
@⤒ s = a, b ← 2b
# (s.a, s.b) == (2, 4)
"><pre><span class="pl-k">mutable struct</span> B
  c
  d
<span class="pl-k">end</span>

s <span class="pl-k">=</span> <span class="pl-c1">A</span>(<span class="pl-c1">1</span>, <span class="pl-c1">B</span>(<span class="pl-c1">2</span>, [<span class="pl-c1">3</span>, <span class="pl-c1">4</span>]))
@⤓ a, b ← c, c ← d[<span class="pl-c1">1</span>] <span class="pl-k">=</span> s
<span class="pl-c"><span class="pl-c">#</span> (a, b, c) == (1, 2, 3)</span>

a <span class="pl-k">+=</span> <span class="pl-c1">1</span>
@⤒ s <span class="pl-k">=</span> a, b ← <span class="pl-c1">2</span>b
<span class="pl-c"><span class="pl-c">#</span> (s.a, s.b) == (2, 4)</span></pre></div>
<p><code>@←</code> allows for a common syntax between in-place and standard functions:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="f(b) = b
@← a = f(1) # a = f(1)
# a == 1

a = [0, 0]
g(a, b) = a .= b
@← a = g(1) # g(a, 1)
# a == [1, 1]

h!(a, b) = a .= b
@← a = h(2) # h!(a, 2)
# a == [2, 2]
"><pre><span class="pl-en">f</span>(b) <span class="pl-k">=</span> b
@← a <span class="pl-k">=</span> <span class="pl-c1">f</span>(<span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">#</span> a = f(1)</span>
<span class="pl-c"><span class="pl-c">#</span> a == 1</span>

a <span class="pl-k">=</span> [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>]
<span class="pl-en">g</span>(a, b) <span class="pl-k">=</span> a <span class="pl-k">.=</span> b
@← a <span class="pl-k">=</span> <span class="pl-c1">g</span>(<span class="pl-c1">1</span>) <span class="pl-c"><span class="pl-c">#</span> g(a, 1)</span>
<span class="pl-c"><span class="pl-c">#</span> a == [1, 1]</span>

<span class="pl-en">h!</span>(a, b) <span class="pl-k">=</span> a <span class="pl-k">.=</span> b
@← a <span class="pl-k">=</span> <span class="pl-c1">h</span>(<span class="pl-c1">2</span>) <span class="pl-c"><span class="pl-c">#</span> h!(a, 2)</span>
<span class="pl-c"><span class="pl-c">#</span> a == [2, 2]</span></pre></div>
<h2><a id="user-content-timings" class="anchor" aria-hidden="true" href="#timings"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Timings</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using ExtractMacro
using UnPack
using BenchmarkTools
"><pre><span class="pl-k">using</span> ExtractMacro
<span class="pl-k">using</span> UnPack
<span class="pl-k">using</span> BenchmarkTools</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="s = A(1, [2, 3])
@btime @↓ a, b = s
@btime @extract s : a b
@btime @unpack a, b = s
"><pre>s <span class="pl-k">=</span> <span class="pl-c1">A</span>(<span class="pl-c1">1</span>, [<span class="pl-c1">2</span>, <span class="pl-c1">3</span>])
<span class="pl-c1">@btime</span> @↓ a, b <span class="pl-k">=</span> s
<span class="pl-c1">@btime</span> <span class="pl-c1">@extract</span> s <span class="pl-k">:</span> a b
<span class="pl-c1">@btime</span> <span class="pl-c1">@unpack</span> a, b <span class="pl-k">=</span> s</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt;
  37.429 ns (0 allocations: 0 bytes)
  60.720 ns (0 allocations: 0 bytes)
  37.525 ns (0 allocations: 0 bytes)
"><pre>julia<span class="pl-k">&gt;</span>
  <span class="pl-c1">37.429</span> ns (<span class="pl-c1">0</span> allocations<span class="pl-k">:</span> <span class="pl-c1">0</span> bytes)
  <span class="pl-c1">60.720</span> ns (<span class="pl-c1">0</span> allocations<span class="pl-k">:</span> <span class="pl-c1">0</span> bytes)
  <span class="pl-c1">37.525</span> ns (<span class="pl-c1">0</span> allocations<span class="pl-k">:</span> <span class="pl-c1">0</span> bytes)</pre></div>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p><code>ArrowMacros</code> is compatible with Julia <code>v1.0</code> and above, and it can be installed by running</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="]add ArrowMacros
"><pre>]add ArrowMacros</pre></div>
<h2><a id="user-content-whats-next" class="anchor" aria-hidden="true" href="#whats-next"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>What's next</h2>
<ol>
<li>Improve error messages.</li>
<li>Allow for <code>@← a .= f(b...)</code></li>
</ol>
</article></div>