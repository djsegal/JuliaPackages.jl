<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-julia-interface-to-linearfold" class="anchor" aria-hidden="true" href="#julia-interface-to-linearfold"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Julia interface to LinearFold</h1>
<p dir="auto">Unofficial Julia interface to the
<a href="https://github.com/LinearFold">LinearFold</a> suite of programs for RNA
secondary structure prediction. Please cite the applicable original
LinearFold, LinearPartition, LinearSampling, or LinearTurboFold
publications if you use this library.</p>
<p dir="auto">The LinearFold, LinearPartition, LinearSampling, and LinearTurboFold
programs are supported at the moment.  This library calls the binary
executables of these programs directly and parses their output.</p>
<p dir="auto">The name LinearFold derives from the <code>O(n)</code> running time (where <code>n</code> is
the sequence length) of calculating an approximate solution, compared
to the typical cubic <code>O(n^3)</code> running time for the exact solution.
This speedup is achieved by recasting the normal dynamic programming
algorithms to work on the sequence left-to-right and by using a beam
search approximation.  Most algorithms also have a linear or quadratic
time dependence on the beam size used.  Please refer to the LinearFold
publications for further details.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="] add LinearFold"><pre class="notranslate"><code>] add LinearFold
</code></pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using LinearFold, Unitful"><pre><span class="pl-k">using</span> LinearFold, Unitful</pre></div>
<h3 dir="auto"><a id="user-content-keyword-argument-description" class="anchor" aria-hidden="true" href="#keyword-argument-description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Keyword argument description</h3>
<ul dir="auto">
<li>
<p dir="auto"><code>model=:vienna</code>: energy model to be used. Valid options are
<code>:vienna</code> and <code>:contrafold</code>. Default is <code>:vienna</code>.</p>
</li>
<li>
<p dir="auto"><code>beamsize=100</code>: size used for beam search approximation. Larger
numbers trade longer computation time for more precise
answers. Default is <code>100</code>.</p>
</li>
<li>
<p dir="auto"><code>constraints</code>: structural constraints of the predicted structure.  A
string consisting of the characters '?', '.', '(', ')',
corresponding to positions that have unspecified base pairing,
unpaired, or base-pairing specified by matching parentheses.</p>
</li>
<li>
<p dir="auto"><code>is_sharpturn=false</code>: enable sharp turns in predictions. Default is
<code>false</code>.</p>
</li>
<li>
<p dir="auto"><code>verbose=false</code>: output extra information from the program runs to
stdout. Default is <code>false</code>.</p>
</li>
</ul>
<h3 dir="auto"><a id="user-content-minimum-free-energy-mfe-structure-of-an-rna-strand" class="anchor" aria-hidden="true" href="#minimum-free-energy-mfe-structure-of-an-rna-strand"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Minimum free energy (MFE) structure of an RNA strand</h3>
<p dir="auto">Uses the LinearFold program to predict the MFE and MFE structure.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# mfe(seq; model, beamsize, constraints, is_sharpturn, verbose)
mfe(&quot;GGGAAACCC&quot;)  # =&gt; (-1.2 kcal mol^-1, &quot;(((...)))&quot;)
mfe(&quot;GGGAAACCC&quot;; constraints=&quot;?(.????)?&quot;) # =&gt; (0.9 kcal mol^-1, &quot;((.....))&quot;)
mfe(&quot;GGGAAACCC&quot;; model=:contrafold)  # =&gt; (-0.09 kcal mol^-1, &quot;.........&quot;)"><pre><span class="pl-c"><span class="pl-c">#</span> mfe(seq; model, beamsize, constraints, is_sharpturn, verbose)</span>
<span class="pl-c1">mfe</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; (-1.2 kcal mol^-1, "(((...)))")</span>
<span class="pl-c1">mfe</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>; constraints<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>?(.????)?<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> =&gt; (0.9 kcal mol^-1, "((.....))")</span>
<span class="pl-c1">mfe</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>; model<span class="pl-k">=</span><span class="pl-c1">:contrafold</span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; (-0.09 kcal mol^-1, ".........")</span></pre></div>
<h3 dir="auto"><a id="user-content-base-pair-probabilities" class="anchor" aria-hidden="true" href="#base-pair-probabilities"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Base pair probabilities</h3>
<p dir="auto">Uses the LinearPartition program to calculate base pair probabilities.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# bpp(seq; model, beamsize, bpp_cutoff, is_sharpturn, verbose)
bpp(&quot;GGGAAACCC&quot;) # =&gt; (-1.62 kcal mol^-1, sparse(...))
bpp(&quot;GGGAAACCC&quot;; bpp_cutoff=0.1)"><pre><span class="pl-c"><span class="pl-c">#</span> bpp(seq; model, beamsize, bpp_cutoff, is_sharpturn, verbose)</span>
<span class="pl-c1">bpp</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> =&gt; (-1.62 kcal mol^-1, sparse(...))</span>
<span class="pl-c1">bpp</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>; bpp_cutoff<span class="pl-k">=</span><span class="pl-c1">0.1</span>)</pre></div>
<h3 dir="auto"><a id="user-content-pseudoknot-structure-prediction" class="anchor" aria-hidden="true" href="#pseudoknot-structure-prediction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Pseudoknot structure prediction</h3>
<p dir="auto">Uses the LinearPartition program to predict possibly pseudoknotted
secondary structures with a beam search approximation to the
ThreshKnot algorithm.</p>
<p dir="auto">Because the predicted structures can contain pseudoknots, the
structure is returned as a list of integers which indicate the
base-pairing partner of the current index.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# threshknot(seq; model, beamsize, threshold, is_sharpturn, verbose)
threshknot(&quot;GGGAAACCC&quot;)  # =&gt; (-1.62 kcal mol^-1, [9, 8, 7, 0, 0, 0, 3, 2, 1])
threshknot(&quot;GGGAAACCC&quot;; threshold=0.2)"><pre><span class="pl-c"><span class="pl-c">#</span> threshknot(seq; model, beamsize, threshold, is_sharpturn, verbose)</span>
<span class="pl-c1">threshknot</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; (-1.62 kcal mol^-1, [9, 8, 7, 0, 0, 0, 3, 2, 1])</span>
<span class="pl-c1">threshknot</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>; threshold<span class="pl-k">=</span><span class="pl-c1">0.2</span>)</pre></div>
<h3 dir="auto"><a id="user-content-sample-structures-from-boltzmann-ensemble" class="anchor" aria-hidden="true" href="#sample-structures-from-boltzmann-ensemble"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Sample structures from Boltzmann ensemble</h3>
<p dir="auto">Uses the LinearSampling program to return <code>num_samples</code> secondary
structures sampled according to their Boltzmann probability for an RNA
sequence.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# sample_structures(seq; beamsize, num_samples, is_nonsaving, is_sharpturn, verbose)
sample_structures(&quot;GGGAAACCC&quot;)  # =&gt; [ &quot;((....)).&quot;, ... ]
sample_structures(&quot;GGGAAACCC&quot;; num_samples=100)"><pre><span class="pl-c"><span class="pl-c">#</span> sample_structures(seq; beamsize, num_samples, is_nonsaving, is_sharpturn, verbose)</span>
<span class="pl-c1">sample_structures</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; [ "((....)).", ... ]</span>
<span class="pl-c1">sample_structures</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>; num_samples<span class="pl-k">=</span><span class="pl-c1">100</span>)</pre></div>
<h3 dir="auto"><a id="user-content-simultaneous-alignment-and-folding" class="anchor" aria-hidden="true" href="#simultaneous-alignment-and-folding"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Simultaneous alignment and folding</h3>
<p dir="auto">Uses the LinearTurboFold program to simultaneously align and fold
multiple RNA sequences.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# turbofold(sequences; beamsize_hmm, beamsize_cky, iterations,
#                      threshknot_min_helix_len,
#                      threshknot_iterations, threshknot_threshold,
#                      verbose)
turbofold([&quot;GGGAAACCC&quot;, &quot;GGCCAAAUGGCCA&quot;])"><pre><span class="pl-c"><span class="pl-c">#</span> turbofold(sequences; beamsize_hmm, beamsize_cky, iterations,</span>
<span class="pl-c"><span class="pl-c">#</span>                      threshknot_min_helix_len,</span>
<span class="pl-c"><span class="pl-c">#</span>                      threshknot_iterations, threshknot_threshold,</span>
<span class="pl-c"><span class="pl-c">#</span>                      verbose)</span>
<span class="pl-c1">turbofold</span>([<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>GGCCAAAUGGCCA<span class="pl-pds">"</span></span>])</pre></div>
<h3 dir="auto"><a id="user-content-maximum-expected-accuracy-mea-structure" class="anchor" aria-hidden="true" href="#maximum-expected-accuracy-mea-structure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Maximum expected accuracy (MEA) structure</h3>
<p dir="auto">Uses the LinearPartition program.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# mea(seq; model, beamsize, gamma, is_sharpturn, verbose)
mea(&quot;GGGAAACCC&quot;)  # =&gt; (-1.62 kcal mol^-1, &quot;(((...)))&quot;)
mea(&quot;GGGAAACCC&quot;; gamma=0.5)  # =&gt; (-1.62 kcal mol^-1, &quot;.(.....).&quot;)"><pre><span class="pl-c"><span class="pl-c">#</span> mea(seq; model, beamsize, gamma, is_sharpturn, verbose)</span>
<span class="pl-c1">mea</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; (-1.62 kcal mol^-1, "(((...)))")</span>
<span class="pl-c1">mea</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>; gamma<span class="pl-k">=</span><span class="pl-c1">0.5</span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; (-1.62 kcal mol^-1, ".(.....).")</span></pre></div>
<h3 dir="auto"><a id="user-content-zuker-suboptimal-structures" class="anchor" aria-hidden="true" href="#zuker-suboptimal-structures"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Zuker suboptimal structures</h3>
<p dir="auto">Uses the LinearFold program.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# zuker_subopt(seq; model, beamsize, delta, is_sharpturn, verbose)
zuker_subopt(&quot;GCGCGAAAAAACCCCCCC&quot;)  # =&gt; [ (2.9 kcal mol^-1, &quot;....(........)....&quot;), ... ]
zuker_subopt(&quot;GCGCGAAAAAACCCCCCC&quot;; delta=4.0u&quot;kcal/mol&quot;)"><pre><span class="pl-c"><span class="pl-c">#</span> zuker_subopt(seq; model, beamsize, delta, is_sharpturn, verbose)</span>
<span class="pl-c1">zuker_subopt</span>(<span class="pl-s"><span class="pl-pds">"</span>GCGCGAAAAAACCCCCCC<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; [ (2.9 kcal mol^-1, "....(........)...."), ... ]</span>
<span class="pl-c1">zuker_subopt</span>(<span class="pl-s"><span class="pl-pds">"</span>GCGCGAAAAAACCCCCCC<span class="pl-pds">"</span></span>; delta<span class="pl-k">=</span><span class="pl-c1">4.0</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>kcal/mol<span class="pl-pds">"</span></span>)</pre></div>
<h3 dir="auto"><a id="user-content-energy-of-a-sequence-structure-pair" class="anchor" aria-hidden="true" href="#energy-of-a-sequence-structure-pair"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Energy of a (sequence, structure) pair</h3>
<p dir="auto">Uses the eval mode of the LinearFold program.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# energy(seq, structure; model, is_sharpturn, verbose)
energy(&quot;GGGAAACCC&quot;, &quot;(((...)))&quot;)  # =&gt; -1.2 kcal mol^-1"><pre><span class="pl-c"><span class="pl-c">#</span> energy(seq, structure; model, is_sharpturn, verbose)</span>
<span class="pl-c1">energy</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>(((...)))<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; -1.2 kcal mol^-1</span></pre></div>
<h3 dir="auto"><a id="user-content-partition-function-only-no-base-pair-probabilities" class="anchor" aria-hidden="true" href="#partition-function-only-no-base-pair-probabilities"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Partition function only, no base pair probabilities</h3>
<p dir="auto">Uses the LinearPartition program.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# partfn(seq; model, beamsize, is_sharpturn, verbose)
partfn(&quot;GGGAAACCC&quot;)  # =&gt; -1.62 kcal mol^-1"><pre><span class="pl-c"><span class="pl-c">#</span> partfn(seq; model, beamsize, is_sharpturn, verbose)</span>
<span class="pl-c1">partfn</span>(<span class="pl-s"><span class="pl-pds">"</span>GGGAAACCC<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> =&gt; -1.62 kcal mol^-1</span></pre></div>
<h2 dir="auto"><a id="user-content-related-julia-packages" class="anchor" aria-hidden="true" href="#related-julia-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related Julia packages</h2>
<ul dir="auto">
<li><a href="https://github.com/marcom/ViennaRNA.jl">ViennaRNA.jl</a></li>
<li><a href="https://github.com/marcom/RNAstructure.jl">RNAstructure.jl</a></li>
<li><a href="https://github.com/marcom/PlotRNA.jl">PlotRNA.jl</a></li>
</ul>
</article></div>