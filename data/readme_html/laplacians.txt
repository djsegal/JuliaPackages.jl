<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-laplaciansjl" class="anchor" aria-hidden="true" href="#laplaciansjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Laplacians.jl</h1>
<p><a href="https://travis-ci.org/danspielman/Laplacians.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/84060f32099e33f4fd95bd529d2d99ee776efdcb/68747470733a2f2f7472617669732d63692e6f72672f64616e737069656c6d616e2f4c61706c616369616e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/danspielman/Laplacians.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/danspielman/Laplacians.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f674a3c612c7d09eb004a8c88bfed81421fef57b/68747470733a2f2f636f6465636f762e696f2f67682f64616e737069656c6d616e2f4c61706c616369616e732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/danspielman/Laplacians.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://danspielman.github.io/Laplacians.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></p>
<p><a href="http://pkg.julialang.org/detail/Laplacians" rel="nofollow"><img src="https://camo.githubusercontent.com/b2fa7316289ddb8013427872cb8aba087971a24a/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f4c61706c616369616e735f302e362e737667" alt="Laplacians" data-canonical-src="http://pkg.julialang.org/badges/Laplacians_0.6.svg" style="max-width:100%;"></a></p>
<p>Laplacians is a package containing graph algorithms, with an emphasis on tasks related to spectral and algebraic graph theory. It contains (and will contain more) code for solving systems of linear equations in graph Laplacians, low stretch spanning trees, sparsifiation, clustering, local clustering, and optimization on graphs.</p>
<p>All graphs are represented by sparse adjacency matrices. This is both for speed, and because our main concerns are algebraic tasks. It does not handle dynamic graphs. It would be very slow to implement dynamic graphs this way.</p>
<p>The documentation may be found by clicking on one of the "docs" links above.</p>
<h2><a id="user-content-current-development-version" class="anchor" aria-hidden="true" href="#current-development-version"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Current Development Version</h2>
<p>To get the current version of the master branch, run <code>pkg&gt; add Laplacians#master</code></p>
<h1><a id="user-content-version-111" class="anchor" aria-hidden="true" href="#version-111"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 1.1.1</h1>
<p>Change: minor bug fix for spectral graph drawing.</p>
<p>Verified compatibility with Julia 1.2.</p>
<h1><a id="user-content-version-110" class="anchor" aria-hidden="true" href="#version-110"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 1.1.0</h1>
<p>Changes:</p>
<ul>
<li>Updating to use Julia's new Registrator.</li>
<li>Added <code>harmonic_interp</code> to interpolate harmonic functions on graphs.  This is the fundamental routine used in Label Propagation / Semi-Supervised Learning on Graphs.</li>
<li>Added a function <code>read_graph</code> to replace <code>readIJ</code> and <code>readIJV</code>.  It is a little more robust.</li>
<li>Cleaned up <code>maxflow</code> so that it now returns a flow and cut as a matrix and set.</li>
<li>Made <code>pcg</code> a little more general.</li>
<li>Added <code>fiedler</code> for computing Fiedler vectors and values.  That is, the smallest nonzero eigenvalue of the Laplacian.</li>
<li>Fixed a bug in <code>thicken</code> that could cause it to loop forever, and cause <code>chimera</code> to do the same.</li>
<li>Changed the graph drawing code to use Plots instead of PyPlot.</li>
</ul>
<h1><a id="user-content-version-101" class="anchor" aria-hidden="true" href="#version-101"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 1.0.1</h1>
<p>Changes:</p>
<ul>
<li>Added <code>latin_square_graph</code> and <code>latin_square</code>.</li>
<li>Allow <code>plot_graph</code> to plot in 3D.</li>
<li>Fixed performance bug due to lazy matrix transpose.</li>
<li>Changed more function names to agree with Julia naming conventions.</li>
<li>Update documentation and examples.</li>
</ul>
<h1><a id="user-content-version-100" class="anchor" aria-hidden="true" href="#version-100"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 1.0.0</h1>
<p>This version works with Julia version 1.0.0.</p>
<h1><a id="user-content-verson-031" class="anchor" aria-hidden="true" href="#verson-031"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Verson 0.3.1</h1>
<p>Changes:</p>
<ul>
<li>
<p>The major change in this version is to the chimera and wted_chimera graph generators.  They are now faster, and incorporate two-lifts and thickening.  The old versions, using the pseudorandom generator from Julia V0.6 and Versions 0.2 of Laplacians, may be accessed by using the flag <code>ver=Laplacians.V06</code>, as in</p>
<div class="highlight highlight-source-julia"><pre>a <span class="pl-k">=</span> <span class="pl-c1">chimera</span>(<span class="pl-c1">2000</span>, <span class="pl-c1">1</span>, ver<span class="pl-k">=</span>Laplacians<span class="pl-k">.</span>V06)</pre></div>
<p>There do seem to be differences in the very low order bits of graphs generated by wted_chimera with the V06 option and those generated in Julia V0.6.  Not sure why.</p>
<p>The old generator is obtained by using the <code>RandomV06</code> package for Julia.</p>
</li>
<li>
<p>Changed the names of many functions to bring closer to the Julia standard naming scheme.  New names are empty_graph, path_graph, ring_graph, complete_graph, generalized_ring, rand_gen_ring, product_graph, join_graphs, two_lift ...  Set deprecation warnings for the old names.</p>
</li>
<li>
<p>Moved <code>lex.jl</code> to the directory <code>buggy</code>, as on further testing we found bugs in it.</p>
</li>
<li>
<p>dropped wGrid3, as it produced a 4d grid so probably wasn't being used anyway.  Dropped wGrid2 also.</p>
</li>
</ul>
<h2><a id="user-content-version-030-july-18-or-so-2017" class="anchor" aria-hidden="true" href="#version-030-july-18-or-so-2017"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 0.3.0, July 18 (or so), 2017</h2>
<p>This is the first version that is compatible with Julia 0.7.  Other changes:</p>
<ul>
<li>Dropped support for samplingSDDM and samplingLap solvers.</li>
<li>The behavior of rand in Julia 0.7 is different, and this has changed the behavior of chimera.  So, the chimera graphs generated in Version 0.3.0 and beyond will be different from those before.</li>
</ul>
<h2><a id="user-content-version-022-december-28-2017" class="anchor" aria-hidden="true" href="#version-022-december-28-2017"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 0.2.2, December 28, 2017</h2>
<p>Fixed two bugs: one in shortestPaths, and one that prevented passing some parameters to approxchol_sddm.  Improved the documentation for solving linear equations.</p>
<h2><a id="user-content-version-021-september-18-2017" class="anchor" aria-hidden="true" href="#version-021-september-18-2017"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 0.2.1, September 18, 2017</h2>
<p>Fixed a bug in <code>approxchol_sddm</code> that caused it to be slow.</p>
<h2><a id="user-content-version-020-july-17-2017" class="anchor" aria-hidden="true" href="#version-020-july-17-2017"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 0.2.0, July 17, 2017</h2>
<p>This version is compatible with Julia 0.6.  It will not work with
Julia 0.5.X.</p>
<p>Changes:</p>
<ul>
<li>Added <code>approxchol_sddm</code>, a wrapper of <code>approxchol_lap</code> that solves
SDDM systems.</li>
</ul>
<h2><a id="user-content-version-014-june-6-2017" class="anchor" aria-hidden="true" href="#version-014-june-6-2017"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 0.1.4, June 6, 2017</h2>
<p>This is the current version.  It is what you retrieve when you run <code>Pkg.add("Laplacians")</code>.</p>
<p>Changes:</p>
<ul>
<li>Added <code>sparsify</code>, an implementation of sparsification by effective resistance sampling, following Spielman and Srivastava.</li>
<li>Added <code>approxQual</code> and <code>conditionNumber</code> for checking how well one graph approximates another.</li>
<li>Fixed a bug in the solution of Laplacian systems in disconnected graphs.</li>
</ul>
<h2><a id="user-content-version-013-june-2-2017" class="anchor" aria-hidden="true" href="#version-013-june-2-2017"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 0.1.3, June 2, 2017</h2>
<p>Major Changes:</p>
<ul>
<li>Changed the name of the approximate Cholesky solver from <code>edgeElimLap</code> to <code>approxchol_lap</code>.  Made improvements in this solver.</li>
<li>Improved PCG so that it can now detect stagnation.  Made options to do this even better when using it with a good preconditioner, like <code>approxchol_lap</code>.</li>
<li>Added in code for comparing the running times of solvers.  The difficulty here is that we need to stop them if they run too long.  Added code to do this with threads inside Julia, and with <code>gtimeout</code> when calling Matlab to use icc, CMG, or LAMG.</li>
</ul>
<h2><a id="user-content-version-012-april-2-2017" class="anchor" aria-hidden="true" href="#version-012-april-2-2017"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 0.1.2, April 2, 2017</h2>
<p>Major Changes:</p>
<ul>
<li>added <code>edgeElimLap</code> - a fast Laplacian solver.</li>
<li>fixed a bug in the unweighted version of <code>akpw</code>.</li>
</ul>
<h2><a id="user-content-version-011-december-26-2016" class="anchor" aria-hidden="true" href="#version-011-december-26-2016"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 0.1.1, December 26, 2016</h2>
<p>Changelist:</p>
<ul>
<li>All of the linear equation solvers now have the same interface, and the Laplacian solvers work for disconnected graphs.</li>
<li>Some support for calling solvers from Matlab has been added.</li>
<li>Documentation is now through Documenter.jl.</li>
</ul>
<h2><a id="user-content-version-003--010-november-20-2016" class="anchor" aria-hidden="true" href="#version-003--010-november-20-2016"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 0.0.3 / 0.1.0, November 20, 2016</h2>
<p>Versions 0.0.3 and 0.1.0 are the same.
These versions works with Julia 0.5.</p>
<p>Warning: the behavior of chimera and wtedChimera differs between Julia 0.4 and Julia 0.5 because randperm acts differently in these.</p>
<h2><a id="user-content-version-002-november-19-2016" class="anchor" aria-hidden="true" href="#version-002-november-19-2016"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Version 0.0.2, November 19, 2016</h2>
<p>This is the version that works with Julia 0.4.
It was captured right before the upgrade to Julia 0.5</p>
<h1><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Acknowledgements</h1>
<p>The development of this package has been supported in part by the
National Science Foundation Award CCF-1562041  and by the Office of Naval
Research Award N00014-16-1-2374.</p>
</article></div>