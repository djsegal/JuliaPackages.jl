<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-niftijl" class="anchor" aria-hidden="true" href="#niftijl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>NIfTI.jl</h1>
<p dir="auto"><a href="https://travis-ci.org/JuliaIO/NIfTI.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/920efd3aec64333643a3f23328ec7aca0c8cf3abaa55c19309af94713172dbf0/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961494f2f4e496654492e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaIO/NIfTI.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">To read a NIfTI file:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using NIfTI
ni = niread(&quot;my.nii&quot;)
ni = niread(&quot;my.nii.gz&quot;) # gzipped NIfTI files are detected automatically"><pre><span class="pl-k">using</span> NIfTI
ni <span class="pl-k">=</span> <span class="pl-c1">niread</span>(<span class="pl-s"><span class="pl-pds">"</span>my.nii<span class="pl-pds">"</span></span>)
ni <span class="pl-k">=</span> <span class="pl-c1">niread</span>(<span class="pl-s"><span class="pl-pds">"</span>my.nii.gz<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> gzipped NIfTI files are detected automatically</span></pre></div>
<p dir="auto">The header is in <code>nii.header</code>; NIfTI extensions are in <code>nii.extensions</code>; the raw
volume is in <code>nii.raw</code>.</p>
<p dir="auto">To mmap the NIfTI file:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="ni = niread(&quot;my.nii&quot;, mmap=true)"><pre>ni <span class="pl-k">=</span> <span class="pl-c1">niread</span>(<span class="pl-s"><span class="pl-pds">"</span>my.nii<span class="pl-pds">"</span></span>, mmap<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<p dir="auto">To get the TR and voxel size:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="vsize = voxel_size(ni.header)    # In mm
tr = time_step(ni.header)        # In ms"><pre>vsize <span class="pl-k">=</span> <span class="pl-c1">voxel_size</span>(ni<span class="pl-k">.</span>header)    <span class="pl-c"><span class="pl-c">#</span> In mm</span>
tr <span class="pl-k">=</span> <span class="pl-c1">time_step</span>(ni<span class="pl-k">.</span>header)        <span class="pl-c"><span class="pl-c">#</span> In ms</span></pre></div>
<p dir="auto">To get the value of the volume along a given dimension:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="d = vox(ni, x, y, z, t)       # Scaled by slope and intercept given in header, zero-based indexes
d = ni[x, y, z, t]            # Scaled by slope and intercept given in header, one-based indexes
d = ni.raw[x, y, z, t]        # Unscaled, one-based indexes"><pre>d <span class="pl-k">=</span> <span class="pl-c1">vox</span>(ni, x, y, z, t)       <span class="pl-c"><span class="pl-c">#</span> Scaled by slope and intercept given in header, zero-based indexes</span>
d <span class="pl-k">=</span> ni[x, y, z, t]            <span class="pl-c"><span class="pl-c">#</span> Scaled by slope and intercept given in header, one-based indexes</span>
d <span class="pl-k">=</span> ni<span class="pl-k">.</span>raw[x, y, z, t]        <span class="pl-c"><span class="pl-c">#</span> Unscaled, one-based indexes</span></pre></div>
<p dir="auto">Colons works everywhere, even with <code>vox</code></p>
<p dir="auto">To write a volume:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="niwrite(&quot;my.nii&quot;, ni)"><pre><span class="pl-c1">niwrite</span>(<span class="pl-s"><span class="pl-pds">"</span>my.nii<span class="pl-pds">"</span></span>, ni)</pre></div>
<p dir="auto">It is also possible to construct a new volume from scratch; see the
<code>NIVolume</code> constructor in the source for documentation.</p>
</article></div>