<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-summationbypartsoperators" class="anchor" aria-hidden="true" href="#summationbypartsoperators"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SummationByPartsOperators</h1>
<p><a href="https://travis-ci.org/ranocha/SummationByPartsOperators.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2075d173af4c2f04f6eb1f03869b1e8efe58c752/68747470733a2f2f7472617669732d63692e6f72672f72616e6f6368612f53756d6d6174696f6e427950617274734f70657261746f72732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ranocha/SummationByPartsOperators.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/ranocha/SummationByPartsOperators-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a6c9768bbf0469c4e8c8a2d26e853b51064ea77b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f693173616f6f646571726570696f646c3f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/i1saoodeqrepiodl?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/ranocha/SummationByPartsOperators.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/bc6a29eccf049ee853edf2cd511c0bb47329f736/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f72616e6f6368612f53756d6d6174696f6e427950617274734f70657261746f72732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/ranocha/SummationByPartsOperators.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/ranocha/SummationByPartsOperators.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/309808aa84f600693e16e5b893658e476d4fefbb/687474703a2f2f636f6465636f762e696f2f6769746875622f72616e6f6368612f53756d6d6174696f6e427950617274734f70657261746f72732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/ranocha/SummationByPartsOperators.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/6767ad100dfb50cc09a9c438af66c8bee6030365/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f532f53756d6d6174696f6e427950617274734f70657261746f72732e737667" alt="PkgEval" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/S/SummationByPartsOperators.svg" style="max-width:100%;"></a></p>
<p>A library of classical summation-by-parts (SBP) operators used in finite difference
methods to get provably stable semidiscretisations, paying special attention to
boundary conditions.</p>
<h2><a id="user-content-basic-operators" class="anchor" aria-hidden="true" href="#basic-operators"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic Operators</h2>
<p>The following derivative operators are implemented as "lazy operators", i.e. no matrix is formed explicitly.</p>
<h3><a id="user-content-periodic-domains" class="anchor" aria-hidden="true" href="#periodic-domains"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Periodic Domains</h3>
<ul>
<li>
<p><code>periodic_derivative_operator(derivative_order, accuracy_order, xmin, xmax, N)</code></p>
<p>These are classical central finite difference operators using <code>N</code> nodes on the
interval <code>[xmin, xmax]</code>.</p>
</li>
<li>
<p><code>periodic_derivative_operator(Holoborodko2008(), derivative_order, accuracy_order, xmin, xmax, N)</code></p>
<p>These are central finite difference operators using <code>N</code> nodes on the
interval <code>[xmin, xmax]</code> and the coefficients of <a href="http://www.holoborodko.com/pavel/numerical-methods/numerical-derivative/smooth-low-noise-differentiators/" rel="nofollow">Pavel Holoborodko</a>.</p>
</li>
<li>
<p><code>fourier_derivative_operator(xmin, xmax, N)</code></p>
<p>Fourier derivative operators are implemented using the fast Fourier transform of <a href="https://github.com/JuliaMath/FFTW.jl">FFTW.jl</a>.</p>
</li>
</ul>
<h3><a id="user-content-finitenonperiodic-domains" class="anchor" aria-hidden="true" href="#finitenonperiodic-domains"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Finite/Nonperiodic Domains</h3>
<ul>
<li>
<p><code>derivative_operator(source_of_coefficients, derivative_order, accuracy_order, xmin, xmax, N)</code></p>
<p>Finite difference SBP operators for first and second derivatives can be obained by using <code>MattssonNordström2004()</code> as <code>source_of_coefficients</code>.
Other sources of coefficients are implemented as well. To obtain a full list for all operators, use <code>subtypes(SourceOfCoefficients)</code>.</p>
</li>
<li>
<p><code>legendre_derivative_operator(xmin, xmax, N)</code></p>
<p>Use Lobatto Legendre polynomial collocation schemes on <code>N</code>, i.e.
polynomials of degree <code>N-1</code>, implemented via <a href="https://github.com/ranocha/PolynomialBases.jl">PolynomialBases.jl</a>.</p>
</li>
</ul>
<h3><a id="user-content-dissipation-operators" class="anchor" aria-hidden="true" href="#dissipation-operators"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Dissipation Operators</h3>
<p>Additionally, some artificial dissipation/viscosity operators are implemented. The most basic usage is <code>Di = dissipation_operator(D)</code>,
where <code>D</code> can be a (periodic, Fourier, Legendre, SBP FD) derivative
operator. Use <code>?dissipation_operator</code> for more details.</p>
<h3><a id="user-content-conversion-to-other-forms" class="anchor" aria-hidden="true" href="#conversion-to-other-forms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Conversion to Other Forms</h3>
<p>Sometimes, it can be convenient to obtain an explicit (sparse, banded) matrix form of the operators. Therefore, some conversion functions are supplied, e.g.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SummationByPartsOperators

julia<span class="pl-k">&gt;</span> D <span class="pl-k">=</span> <span class="pl-c1">derivative_operator</span>(MattssonNordströ<span class="pl-c1">m2004</span>(), <span class="pl-c1">1</span>, <span class="pl-c1">2</span>, <span class="pl-c1">0.</span>, <span class="pl-c1">1.</span>, <span class="pl-c1">5</span>)
SBP <span class="pl-c1">1</span>st derivative operator of order <span class="pl-c1">2</span> {T<span class="pl-k">=</span>Float64, Parallel<span class="pl-k">=</span>Val{<span class="pl-c1">:serial</span>}}
on a grid <span class="pl-k">in</span> [<span class="pl-c1">0.0</span>, <span class="pl-c1">1.0</span>] <span class="pl-k">using</span> <span class="pl-c1">5</span> nodes
and coefficients given <span class="pl-k">in</span>
  Mattsson, Nordström (<span class="pl-c1">2004</span>)
  Summation by parts operators <span class="pl-k">for</span> finite difference approximations of second
    derivaties.
  Journal of Computational Physics <span class="pl-c1">199</span>, pp<span class="pl-c1">.503</span><span class="pl-k">-</span><span class="pl-c1">540.</span>


julia<span class="pl-k">&gt;</span> <span class="pl-c1">Matrix</span>(D)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> Array{Float64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">4.0</span>   <span class="pl-c1">4.0</span>   <span class="pl-c1">0.0</span>   <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>
 <span class="pl-k">-</span><span class="pl-c1">2.0</span>   <span class="pl-c1">0.0</span>   <span class="pl-c1">2.0</span>   <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>
  <span class="pl-c1">0.0</span>  <span class="pl-k">-</span><span class="pl-c1">2.0</span>   <span class="pl-c1">0.0</span>   <span class="pl-c1">2.0</span>  <span class="pl-c1">0.0</span>
  <span class="pl-c1">0.0</span>   <span class="pl-c1">0.0</span>  <span class="pl-k">-</span><span class="pl-c1">2.0</span>   <span class="pl-c1">0.0</span>  <span class="pl-c1">2.0</span>
  <span class="pl-c1">0.0</span>   <span class="pl-c1">0.0</span>   <span class="pl-c1">0.0</span>  <span class="pl-k">-</span><span class="pl-c1">4.0</span>  <span class="pl-c1">4.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SparseArrays

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sparse</span>(D)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> SparseMatrixCSC{Float64,Int64} with <span class="pl-c1">10</span> stored entries<span class="pl-k">:</span>
  [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]  <span class="pl-k">=</span>  <span class="pl-k">-</span><span class="pl-c1">4.0</span>
  [<span class="pl-c1">2</span>, <span class="pl-c1">1</span>]  <span class="pl-k">=</span>  <span class="pl-k">-</span><span class="pl-c1">2.0</span>
  [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>]  <span class="pl-k">=</span>  <span class="pl-c1">4.0</span>
  [<span class="pl-c1">3</span>, <span class="pl-c1">2</span>]  <span class="pl-k">=</span>  <span class="pl-k">-</span><span class="pl-c1">2.0</span>
  [<span class="pl-c1">2</span>, <span class="pl-c1">3</span>]  <span class="pl-k">=</span>  <span class="pl-c1">2.0</span>
  [<span class="pl-c1">4</span>, <span class="pl-c1">3</span>]  <span class="pl-k">=</span>  <span class="pl-k">-</span><span class="pl-c1">2.0</span>
  [<span class="pl-c1">3</span>, <span class="pl-c1">4</span>]  <span class="pl-k">=</span>  <span class="pl-c1">2.0</span>
  [<span class="pl-c1">5</span>, <span class="pl-c1">4</span>]  <span class="pl-k">=</span>  <span class="pl-k">-</span><span class="pl-c1">4.0</span>
  [<span class="pl-c1">4</span>, <span class="pl-c1">5</span>]  <span class="pl-k">=</span>  <span class="pl-c1">2.0</span>
  [<span class="pl-c1">5</span>, <span class="pl-c1">5</span>]  <span class="pl-k">=</span>  <span class="pl-c1">4.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> BandedMatrices

julia<span class="pl-k">&gt;</span> <span class="pl-c1">BandedMatrix</span>(D)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> BandedMatrix{Float64,Array{Float64,<span class="pl-c1">2</span>},Base<span class="pl-k">.</span>OneTo{Int64}}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">4.0</span>   <span class="pl-c1">4.0</span>    <span class="pl-k">⋅</span>     <span class="pl-k">⋅</span>    <span class="pl-k">⋅</span>
 <span class="pl-k">-</span><span class="pl-c1">2.0</span>   <span class="pl-c1">0.0</span>   <span class="pl-c1">2.0</span>    <span class="pl-k">⋅</span>    <span class="pl-k">⋅</span>
   <span class="pl-k">⋅</span>   <span class="pl-k">-</span><span class="pl-c1">2.0</span>   <span class="pl-c1">0.0</span>   <span class="pl-c1">2.0</span>   <span class="pl-k">⋅</span>
   <span class="pl-k">⋅</span>     <span class="pl-k">⋅</span>   <span class="pl-k">-</span><span class="pl-c1">2.0</span>   <span class="pl-c1">0.0</span>  <span class="pl-c1">2.0</span>
   <span class="pl-k">⋅</span>     <span class="pl-k">⋅</span>     <span class="pl-k">⋅</span>   <span class="pl-k">-</span><span class="pl-c1">4.0</span>  <span class="pl-c1">4.0</span></pre></div>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<p>Examples can e found in the directory <a href="https://github.com/ranocha/SummationByPartsOperators.jl/tree/master/notebooks"><code>notebooks</code></a>. In particular, examples of complete discretisations of
<a href="https://github.com/ranocha/SummationByPartsOperators.jl/blob/master/notebooks/Advection_equation.ipynb">the linear advection equation</a>,
<a href="https://github.com/ranocha/SummationByPartsOperators.jl/blob/master/notebooks/Heat_equation.ipynb">the heat equation</a>,
and the <a href="https://github.com/ranocha/SummationByPartsOperators.jl/blob/master/notebooks/Wave_equation.ipynb">wave equation</a> are supplied.
Further examples are supplied as <a href="https://github.com/ranocha/SummationByPartsOperators.jl/tree/master/test">tests</a>.</p>
</article></div>