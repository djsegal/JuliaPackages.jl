<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-preconditioners" class="anchor" aria-hidden="true" href="#preconditioners"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Preconditioners</h1>
<p><a href="https://travis-ci.org/mohamed82008/Preconditioners.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4d232e360eaf047914598b00627104ade21d3b23fb6658bf7228c29f20df2647/68747470733a2f2f7472617669732d63692e6f72672f6d6f68616d656438323030382f507265636f6e646974696f6e6572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/mohamed82008/Preconditioners.jl.svg?branch=master" style="max-width:100%;"></a> <a href="http://codecov.io/github/mohamed82008/Preconditioners.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/1cdc2d76c3f7a828182b7db2f737867c9db352c6b991d672965676039e642792/687474703a2f2f636f6465636f762e696f2f6769746875622f6d6f68616d656438323030382f507265636f6e646974696f6e6572732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/mohamed82008/Preconditioners.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="
A = sprand(1000, 1000, 0.01)
A = A + A' + 30I

# Diagonal preconditioner
p = DiagonalPreconditioner(A)

# Incomplete Cholesky preconditioner with cut-off level 2
p = CholeskyPreconditioner(A, 2)

# Algebraic multigrid preconditioner (AMG)
# Ruge-Stuben variant
p = AMGPreconditioner{RugeStuben}(A)
# Smoothed aggregation
p = AMGPreconditioner{SmoothedAggregation}(A)

# Solve the system of equations
b = A*ones(1000)
x = cg(A, b, Pl=p)

A = sprand(1000, 1000, 0.01)
A = A + A' + 30I
# Updates the preconditioner with the new matrix A
UpdatePreconditioner!(p, A)

"><pre>A <span class="pl-k">=</span> <span class="pl-c1">sprand</span>(<span class="pl-c1">1000</span>, <span class="pl-c1">1000</span>, <span class="pl-c1">0.01</span>)
A <span class="pl-k">=</span> A <span class="pl-k">+</span> A<span class="pl-k">'</span> <span class="pl-k">+</span> <span class="pl-c1">30</span>I

<span class="pl-c"><span class="pl-c">#</span> Diagonal preconditioner</span>
p <span class="pl-k">=</span> <span class="pl-c1">DiagonalPreconditioner</span>(A)

<span class="pl-c"><span class="pl-c">#</span> Incomplete Cholesky preconditioner with cut-off level 2</span>
p <span class="pl-k">=</span> <span class="pl-c1">CholeskyPreconditioner</span>(A, <span class="pl-c1">2</span>)

<span class="pl-c"><span class="pl-c">#</span> Algebraic multigrid preconditioner (AMG)</span>
<span class="pl-c"><span class="pl-c">#</span> Ruge-Stuben variant</span>
p <span class="pl-k">=</span> <span class="pl-c1">AMGPreconditioner</span><span class="pl-c1">{RugeStuben}</span>(A)
<span class="pl-c"><span class="pl-c">#</span> Smoothed aggregation</span>
p <span class="pl-k">=</span> <span class="pl-c1">AMGPreconditioner</span><span class="pl-c1">{SmoothedAggregation}</span>(A)

<span class="pl-c"><span class="pl-c">#</span> Solve the system of equations</span>
b <span class="pl-k">=</span> A<span class="pl-k">*</span><span class="pl-c1">ones</span>(<span class="pl-c1">1000</span>)
x <span class="pl-k">=</span> <span class="pl-c1">cg</span>(A, b, Pl<span class="pl-k">=</span>p)

A <span class="pl-k">=</span> <span class="pl-c1">sprand</span>(<span class="pl-c1">1000</span>, <span class="pl-c1">1000</span>, <span class="pl-c1">0.01</span>)
A <span class="pl-k">=</span> A <span class="pl-k">+</span> A<span class="pl-k">'</span> <span class="pl-k">+</span> <span class="pl-c1">30</span>I
<span class="pl-c"><span class="pl-c">#</span> Updates the preconditioner with the new matrix A</span>
<span class="pl-c1">UpdatePreconditioner!</span>(p, A)
</pre></div>
<h2><a id="user-content-advanced-amg-preconditioners" class="anchor" aria-hidden="true" href="#advanced-amg-preconditioners"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Advanced AMG preconditioners</h2>
<p>More advanced AMG preconditioners are also possible by building the <code>MultiLevel</code> struct that <code>AMGPreconditioner</code> wraps yourself using the package <a href="https://github.com/JuliaLinearAlgebra/AlgebraicMultigrid.jl">AMG.jl</a>.</p>
</article></div>