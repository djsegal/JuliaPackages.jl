<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-preconditioners" class="anchor" aria-hidden="true" href="#preconditioners"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Preconditioners</h1>
<p dir="auto"><a href="https://travis-ci.org/JuliaLinearAlgebra/Preconditioners.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c69d492b1e4456e4f774f6a7a19d39f336b128f1ff87bc72cc12e11b83a83932/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614c696e656172416c67656272612f507265636f6e646974696f6e6572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaLinearAlgebra/Preconditioners.jl.svg?branch=master" style="max-width: 100%;"></a> <a href="http://codecov.io/github/JuliaLinearAlgebra/Preconditioners.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/2a5c623f70191972625c9c82a5598ec1a20e4217ffc1ff98f02705f1f739ef9d/687474703a2f2f636f6465636f762e696f2f6769746875622f4a756c69614c696e656172416c67656272612f507265636f6e646974696f6e6572732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/JuliaLinearAlgebra/Preconditioners.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
A = sprand(1000, 1000, 0.01)
A = A + A' + 30I

# Diagonal preconditioner
p = DiagonalPreconditioner(A)

# Incomplete Cholesky preconditioner with cut-off level 2
p = CholeskyPreconditioner(A, 2)

# Algebraic multigrid preconditioner (AMG)
# Ruge-Stuben variant
p = AMGPreconditioner{RugeStuben}(A)
# Smoothed aggregation
p = AMGPreconditioner{SmoothedAggregation}(A)

# Solve the system of equations
b = A*ones(1000)
x = cg(A, b, Pl=p)

A = sprand(1000, 1000, 0.01)
A = A + A' + 30I
# Updates the preconditioner with the new matrix A
UpdatePreconditioner!(p, A)
"><pre>A <span class="pl-k">=</span> <span class="pl-c1">sprand</span>(<span class="pl-c1">1000</span>, <span class="pl-c1">1000</span>, <span class="pl-c1">0.01</span>)
A <span class="pl-k">=</span> A <span class="pl-k">+</span> A<span class="pl-k">'</span> <span class="pl-k">+</span> <span class="pl-c1">30</span>I

<span class="pl-c"><span class="pl-c">#</span> Diagonal preconditioner</span>
p <span class="pl-k">=</span> <span class="pl-c1">DiagonalPreconditioner</span>(A)

<span class="pl-c"><span class="pl-c">#</span> Incomplete Cholesky preconditioner with cut-off level 2</span>
p <span class="pl-k">=</span> <span class="pl-c1">CholeskyPreconditioner</span>(A, <span class="pl-c1">2</span>)

<span class="pl-c"><span class="pl-c">#</span> Algebraic multigrid preconditioner (AMG)</span>
<span class="pl-c"><span class="pl-c">#</span> Ruge-Stuben variant</span>
p <span class="pl-k">=</span> <span class="pl-c1">AMGPreconditioner</span><span class="pl-c1">{RugeStuben}</span>(A)
<span class="pl-c"><span class="pl-c">#</span> Smoothed aggregation</span>
p <span class="pl-k">=</span> <span class="pl-c1">AMGPreconditioner</span><span class="pl-c1">{SmoothedAggregation}</span>(A)

<span class="pl-c"><span class="pl-c">#</span> Solve the system of equations</span>
b <span class="pl-k">=</span> A<span class="pl-k">*</span><span class="pl-c1">ones</span>(<span class="pl-c1">1000</span>)
x <span class="pl-k">=</span> <span class="pl-c1">cg</span>(A, b, Pl<span class="pl-k">=</span>p)

A <span class="pl-k">=</span> <span class="pl-c1">sprand</span>(<span class="pl-c1">1000</span>, <span class="pl-c1">1000</span>, <span class="pl-c1">0.01</span>)
A <span class="pl-k">=</span> A <span class="pl-k">+</span> A<span class="pl-k">'</span> <span class="pl-k">+</span> <span class="pl-c1">30</span>I
<span class="pl-c"><span class="pl-c">#</span> Updates the preconditioner with the new matrix A</span>
<span class="pl-c1">UpdatePreconditioner!</span>(p, A)
</pre></div>
<h2 dir="auto"><a id="user-content-advanced-amg-preconditioners" class="anchor" aria-hidden="true" href="#advanced-amg-preconditioners"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Advanced AMG preconditioners</h2>
<p dir="auto">More advanced AMG preconditioners are also possible by building the <code>MultiLevel</code> struct that <code>AMGPreconditioner</code> wraps yourself using the package <a href="https://github.com/JuliaLinearAlgebra/AlgebraicMultigrid.jl">AMG.jl</a>.</p>
<h2 dir="auto"><a id="user-content-citing-preconditionersjl" class="anchor" aria-hidden="true" href="#citing-preconditionersjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citing Preconditioners.jl</h2>
<p dir="auto">If you use Preconditioners for your own research, please consider citing the following publication: Mohamed Tarek. Preconditioners.jl: A Flexible and Extensible Framework for Preconditioning in Iterative Solvers. 2023. doi: 10.13140/RG.2.2.26655.02721.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@article{MohamedTarekPreconditionersjl,
  doi = {10.13140/RG.2.2.26655.02721},
  url = {https://rgdoi.net/10.13140/RG.2.2.26655.02721},
  author = {Tarek,  Mohamed},
  language = {en},
  title = {Preconditioners.jl: A Flexible and Extensible Framework for Preconditioning in Iterative Solvers},
  year = {2023}
}"><pre class="notranslate"><code>@article{MohamedTarekPreconditionersjl,
  doi = {10.13140/RG.2.2.26655.02721},
  url = {https://rgdoi.net/10.13140/RG.2.2.26655.02721},
  author = {Tarek,  Mohamed},
  language = {en},
  title = {Preconditioners.jl: A Flexible and Extensible Framework for Preconditioning in Iterative Solvers},
  year = {2023}
}
</code></pre></div>
</article></div>