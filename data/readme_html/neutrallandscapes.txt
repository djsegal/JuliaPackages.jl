<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-neutral-landscapes" class="anchor" aria-hidden="true" href="#neutral-landscapes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Neutral Landscapes</h1>
<p dir="auto">This packages allows the generation of neutral landscapes in <em>Julia</em>. It is a port of the <a href="https://github.com/tretherington/nlmpy"><code>NLMPy</code> package</a>, which is described in greater detail at:</p>
<p dir="auto">Etherington, T.R., Holland, E.P. &amp; O’Sullivan, D. (2015) NLMpy: a python software package for the creation of neutral landscape models within a general numerical framework. <em>Methods in Ecology and Evolution</em>, <strong>6</strong>, 164–168.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/29606aa3f3cc0e3773e0446cf4c93cae53b3044014a93fff44e184860019b8d0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c"><img src="https://camo.githubusercontent.com/29606aa3f3cc0e3773e0446cf4c93cae53b3044014a93fff44e184860019b8d0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c" alt="GitHub last commit" data-canonical-src="https://img.shields.io/github/last-commit/EcoJulia/NeutralLandscapes.jl" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/bf4be1d2b24a7cc84e038e2a4cb145b6ef6518bb4686219da98f960fdc3627b2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c"><img src="https://camo.githubusercontent.com/bf4be1d2b24a7cc84e038e2a4cb145b6ef6518bb4686219da98f960fdc3627b2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c" alt="GitHub latest release" data-canonical-src="https://img.shields.io/github/v/release/EcoJulia/NeutralLandscapes.jl" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/a341677bf10de5ed17bcbad5402fe8552d123cc8866317be4650ab7a0de5a203/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c"><img src="https://camo.githubusercontent.com/a341677bf10de5ed17bcbad5402fe8552d123cc8866317be4650ab7a0de5a203/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d646174652f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c" alt="GitHub release date" data-canonical-src="https://img.shields.io/github/release-date/EcoJulia/NeutralLandscapes.jl" style="max-width: 100%;"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/1633a88d0dff848d183b7d2582030e4e60d5b2c385c9236bf24ce53760f308a0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c"><img src="https://camo.githubusercontent.com/1633a88d0dff848d183b7d2582030e4e60d5b2c385c9236bf24ce53760f308a0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c" alt="GitHub license" data-canonical-src="https://img.shields.io/github/license/EcoJulia/NeutralLandscapes.jl" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/134fa1aa439fc248456a480ec6975cf4127d5ba86d32b6d61c3ef989faeaab59/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c"><img src="https://camo.githubusercontent.com/134fa1aa439fc248456a480ec6975cf4127d5ba86d32b6d61c3ef989faeaab59/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c" alt="GitHub contributors" data-canonical-src="https://img.shields.io/github/contributors/EcoJulia/NeutralLandscapes.jl" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/710d658696165429c4b6f89928bc323df5dcf6113fdab5655628b0265cdc8f74/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f67682f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c3f746f6b656e3d31564e50544e324d5656"><img src="https://camo.githubusercontent.com/710d658696165429c4b6f89928bc323df5dcf6113fdab5655628b0265cdc8f74/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f67682f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c3f746f6b656e3d31564e50544e324d5656" alt="Codecov" data-canonical-src="https://img.shields.io/codecov/c/gh/EcoJulia/NeutralLandscapes.jl?token=1VNPTN2MVV" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/fd973dd8068abbec9f904cf0cac4d14d704a921a49f0807f4e813a306f65fde9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c"><img src="https://camo.githubusercontent.com/fd973dd8068abbec9f904cf0cac4d14d704a921a49f0807f4e813a306f65fde9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c" alt="GitHub issues" data-canonical-src="https://img.shields.io/github/issues/EcoJulia/NeutralLandscapes.jl" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/fd151f27f191d4bf3ee1b8b15a52d04b28f269c866a429f3cc10c8370afbd53a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c"><img src="https://camo.githubusercontent.com/fd151f27f191d4bf3ee1b8b15a52d04b28f269c866a429f3cc10c8370afbd53a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f45636f4a756c69612f4e65757472616c4c616e647363617065732e6a6c" alt="GitHub pull requests" data-canonical-src="https://img.shields.io/github/issues-pr/EcoJulia/NeutralLandscapes.jl" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://ecojulia.github.io/NeutralLandscapes.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c6db3943d4e0f7ea50b96f1e5e65d13121f51404562f3e6e52601e431fa5b54a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d616e75616c2d737461626c652d677265656e" alt="Doc stable" data-canonical-src="https://img.shields.io/badge/manual-stable-green" style="max-width: 100%;"></a>
<a href="https://ecojulia.github.io/NeutralLandscapes.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/14254eeb65451bf7ffaaefe14cde4f7f9f5efad53cf3a3f896f3c38810e63cf0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d616e75616c2d6c61746573742d626c7565" alt="Doc dev" data-canonical-src="https://img.shields.io/badge/manual-latest-blue" style="max-width: 100%;"></a></p>
<p dir="auto">All landscapes are generated using an overload of the <code>rand</code> (or <code>rand!</code>) method, taking as arguments a <code>NeutralLandscapeGenerator</code>, as well as a dimension and a Boolean mask if required. The additional functions <code>classify</code> and <code>blend</code> are used to respectively discretize the network, or merge the result of different neutral generators.</p>
<p dir="auto">The code below reproduces figure 1 of Etherington et al. (2015):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using NeutralLandscapes, Plots
siz = 50, 50

# Random NLM
Fig1a = rand(NoGradient(), siz)
# Planar gradient NLM
Fig1b = rand(PlanarGradient(), siz)
# Edge gradient NLM
Fig1c = rand(EdgeGradient(), siz)
# Mask example
Fig1d = falses(siz)
Fig1d[10:25, 10:25] .= true
# Distance gradient NLM
Fig1e = rand(DistanceGradient(findall(vec(Fig1d))), siz)
# Midpoint displacement NLM
Fig1f = rand(MidpointDisplacement(0.75), siz)
# Random rectangular cluster NLM
Fig1g = rand(RectangularCluster(4, 8), siz)
# Random element nearest-neighbor NLM
Fig1h = rand(NearestNeighborElement(200), siz)
# Random cluster nearest-neighbor NLM
Fig1i = rand(NearestNeighborCluster(0.4), siz)
# Blended NLM
Fig1j = blend([Fig1f, Fig1c])
# Patch blended NLM
Fig1k = blend(Fig1h, Fig1e, 1.5)
# Classifiend random cluster nearest-neighbor NLM
Fig1l = classify(Fig1i, ones(4))
# Percolation NLM
Fig1m = classify(Fig1a, [1-0.5, 0.5])
# Binary random rectangular cluster NLM
Fig1n = classify(Fig1g, [1-0.75, 0.75])
# Classified midpoint displacement NLM
Fig1o = classify(Fig1f, ones(3))
# Classified midpoind displacement NLM, with limited classification
Fig1p = classify(Fig1f, ones(3), Fig1d)
# Masked planar gradient NLM
Fig1q = rand(PlanarGradient(90), siz, mask = Fig1n .== 2) #TODO mask as keyword + should mask be matrix or vec or both? (Fig1e)
# Hierarchical NLM
Fig1r = ifelse.(Fig1o .== 2, Fig1m .+ 2, Fig1o)
# Rotated NLM
Fig1s = rotr90(Fig1l)
# Transposed NLM
Fig1t = Fig1o'

class = cgrad(:Set3_4, 4, categorical = true)
c2, c3, c4 = class[1:2], class[1:3], class[1:4]

gr(color = :fire, ticks = false, framestyle = :box, colorbar = false)
plot(
    heatmap(Fig1a),         heatmap(Fig1b),         heatmap(Fig1c),         heatmap(Fig1d, c = c2), heatmap(Fig1e),
    heatmap(Fig1f),         heatmap(Fig1g),         heatmap(Fig1h),         heatmap(Fig1i),         heatmap(Fig1j), 
    heatmap(Fig1k),         heatmap(Fig1l, c = c4), heatmap(Fig1m, c = c2), heatmap(Fig1n, c = c2), heatmap(Fig1o, c = c3),
    heatmap(Fig1p, c = c4), heatmap(Fig1q),         heatmap(Fig1r, c = c4), heatmap(Fig1s, c = c4), heatmap(Fig1t, c = c3),
    layout = (4,5), size = (1600, 1270)
)"><pre><span class="pl-k">using</span> NeutralLandscapes, Plots
siz <span class="pl-k">=</span> <span class="pl-c1">50</span>, <span class="pl-c1">50</span>

<span class="pl-c"><span class="pl-c">#</span> Random NLM</span>
Fig1a <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">NoGradient</span>(), siz)
<span class="pl-c"><span class="pl-c">#</span> Planar gradient NLM</span>
Fig1b <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">PlanarGradient</span>(), siz)
<span class="pl-c"><span class="pl-c">#</span> Edge gradient NLM</span>
Fig1c <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">EdgeGradient</span>(), siz)
<span class="pl-c"><span class="pl-c">#</span> Mask example</span>
Fig1d <span class="pl-k">=</span> <span class="pl-c1">falses</span>(siz)
Fig1d[<span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">25</span>, <span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-c1">25</span>] <span class="pl-k">.=</span> <span class="pl-c1">true</span>
<span class="pl-c"><span class="pl-c">#</span> Distance gradient NLM</span>
Fig1e <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">DistanceGradient</span>(<span class="pl-c1">findall</span>(<span class="pl-c1">vec</span>(Fig1d))), siz)
<span class="pl-c"><span class="pl-c">#</span> Midpoint displacement NLM</span>
Fig1f <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">MidpointDisplacement</span>(<span class="pl-c1">0.75</span>), siz)
<span class="pl-c"><span class="pl-c">#</span> Random rectangular cluster NLM</span>
Fig1g <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">RectangularCluster</span>(<span class="pl-c1">4</span>, <span class="pl-c1">8</span>), siz)
<span class="pl-c"><span class="pl-c">#</span> Random element nearest-neighbor NLM</span>
Fig1h <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">NearestNeighborElement</span>(<span class="pl-c1">200</span>), siz)
<span class="pl-c"><span class="pl-c">#</span> Random cluster nearest-neighbor NLM</span>
Fig1i <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">NearestNeighborCluster</span>(<span class="pl-c1">0.4</span>), siz)
<span class="pl-c"><span class="pl-c">#</span> Blended NLM</span>
Fig1j <span class="pl-k">=</span> <span class="pl-c1">blend</span>([Fig1f, Fig1c])
<span class="pl-c"><span class="pl-c">#</span> Patch blended NLM</span>
Fig1k <span class="pl-k">=</span> <span class="pl-c1">blend</span>(Fig1h, Fig1e, <span class="pl-c1">1.5</span>)
<span class="pl-c"><span class="pl-c">#</span> Classifiend random cluster nearest-neighbor NLM</span>
Fig1l <span class="pl-k">=</span> <span class="pl-c1">classify</span>(Fig1i, <span class="pl-c1">ones</span>(<span class="pl-c1">4</span>))
<span class="pl-c"><span class="pl-c">#</span> Percolation NLM</span>
Fig1m <span class="pl-k">=</span> <span class="pl-c1">classify</span>(Fig1a, [<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">0.5</span>, <span class="pl-c1">0.5</span>])
<span class="pl-c"><span class="pl-c">#</span> Binary random rectangular cluster NLM</span>
Fig1n <span class="pl-k">=</span> <span class="pl-c1">classify</span>(Fig1g, [<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">0.75</span>, <span class="pl-c1">0.75</span>])
<span class="pl-c"><span class="pl-c">#</span> Classified midpoint displacement NLM</span>
Fig1o <span class="pl-k">=</span> <span class="pl-c1">classify</span>(Fig1f, <span class="pl-c1">ones</span>(<span class="pl-c1">3</span>))
<span class="pl-c"><span class="pl-c">#</span> Classified midpoind displacement NLM, with limited classification</span>
Fig1p <span class="pl-k">=</span> <span class="pl-c1">classify</span>(Fig1f, <span class="pl-c1">ones</span>(<span class="pl-c1">3</span>), Fig1d)
<span class="pl-c"><span class="pl-c">#</span> Masked planar gradient NLM</span>
Fig1q <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">PlanarGradient</span>(<span class="pl-c1">90</span>), siz, mask <span class="pl-k">=</span> Fig1n <span class="pl-k">.==</span> <span class="pl-c1">2</span>) <span class="pl-c"><span class="pl-c">#</span>TODO mask as keyword + should mask be matrix or vec or both? (Fig1e)</span>
<span class="pl-c"><span class="pl-c">#</span> Hierarchical NLM</span>
Fig1r <span class="pl-k">=</span> <span class="pl-c1">ifelse</span>.(Fig1o <span class="pl-k">.==</span> <span class="pl-c1">2</span>, Fig1m <span class="pl-k">.+</span> <span class="pl-c1">2</span>, Fig1o)
<span class="pl-c"><span class="pl-c">#</span> Rotated NLM</span>
Fig1s <span class="pl-k">=</span> <span class="pl-c1">rotr90</span>(Fig1l)
<span class="pl-c"><span class="pl-c">#</span> Transposed NLM</span>
Fig1t <span class="pl-k">=</span> Fig1o<span class="pl-k">'</span>

class <span class="pl-k">=</span> <span class="pl-c1">cgrad</span>(<span class="pl-c1">:Set3_4</span>, <span class="pl-c1">4</span>, categorical <span class="pl-k">=</span> <span class="pl-c1">true</span>)
c2, c3, c4 <span class="pl-k">=</span> class[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>], class[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>], class[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">4</span>]

<span class="pl-c1">gr</span>(color <span class="pl-k">=</span> <span class="pl-c1">:fire</span>, ticks <span class="pl-k">=</span> <span class="pl-c1">false</span>, framestyle <span class="pl-k">=</span> <span class="pl-c1">:box</span>, colorbar <span class="pl-k">=</span> <span class="pl-c1">false</span>)
<span class="pl-c1">plot</span>(
    <span class="pl-c1">heatmap</span>(Fig1a),         <span class="pl-c1">heatmap</span>(Fig1b),         <span class="pl-c1">heatmap</span>(Fig1c),         <span class="pl-c1">heatmap</span>(Fig1d, c <span class="pl-k">=</span> c2), <span class="pl-c1">heatmap</span>(Fig1e),
    <span class="pl-c1">heatmap</span>(Fig1f),         <span class="pl-c1">heatmap</span>(Fig1g),         <span class="pl-c1">heatmap</span>(Fig1h),         <span class="pl-c1">heatmap</span>(Fig1i),         <span class="pl-c1">heatmap</span>(Fig1j), 
    <span class="pl-c1">heatmap</span>(Fig1k),         <span class="pl-c1">heatmap</span>(Fig1l, c <span class="pl-k">=</span> c4), <span class="pl-c1">heatmap</span>(Fig1m, c <span class="pl-k">=</span> c2), <span class="pl-c1">heatmap</span>(Fig1n, c <span class="pl-k">=</span> c2), <span class="pl-c1">heatmap</span>(Fig1o, c <span class="pl-k">=</span> c3),
    <span class="pl-c1">heatmap</span>(Fig1p, c <span class="pl-k">=</span> c4), <span class="pl-c1">heatmap</span>(Fig1q),         <span class="pl-c1">heatmap</span>(Fig1r, c <span class="pl-k">=</span> c4), <span class="pl-c1">heatmap</span>(Fig1s, c <span class="pl-k">=</span> c4), <span class="pl-c1">heatmap</span>(Fig1t, c <span class="pl-k">=</span> c3),
    layout <span class="pl-k">=</span> (<span class="pl-c1">4</span>,<span class="pl-c1">5</span>), size <span class="pl-k">=</span> (<span class="pl-c1">1600</span>, <span class="pl-c1">1270</span>)
)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/8429802/109293089-998ccb00-782b-11eb-864f-b25522e7b746.png"><img src="https://user-images.githubusercontent.com/8429802/109293089-998ccb00-782b-11eb-864f-b25522e7b746.png" alt="Fig1" style="max-width: 100%;"></a></p>
</article></div>