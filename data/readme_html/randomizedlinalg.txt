<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-randomizedlinalgjl" class="anchor" aria-hidden="true" href="#randomizedlinalgjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>RandomizedLinAlg.jl</h1>
<p><a href="https://travis-ci.org/haampie/RandomizedLinAlg.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d3cf12501dc2ac1bd84d8825cb34479bec6919c5/68747470733a2f2f7472617669732d63692e6f72672f6861616d7069652f52616e646f6d697a65644c696e416c672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/haampie/RandomizedLinAlg.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/haampie/RandomizedLinAlg.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/b06577517a1041982a9d6004efb66024a6261467/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6861616d7069652f52616e646f6d697a65644c696e416c672e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/haampie/RandomizedLinAlg.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>RandomizedLinAlg.jl is a <a href="https://julialang.org/" rel="nofollow">Julia</a> package that provides randomized algorithms for numerical linear algebra as advocated in [1].</p>
<p>This package was split off from <a href="https://github.com/JuliaMath/IterativeSolvers.jl">IterativeSolvers.jl</a> as randomized algorithms were not considered well-established and potentially unstable.</p>
<p>See the <a href="https://haampie.github.io/RandomizedLinAlg.jl/latest/" rel="nofollow"><strong>manual</strong></a> for the available methods.</p>
<p>[1]: Halko, Nathan, Per-Gunnar Martinsson, and Joel A. Tropp. "Finding structure with randomness: Probabilistic algorithms for constructing approximate matrix decompositions." SIAM review 53.2 (2011): 217-288.</p>
</article></div>