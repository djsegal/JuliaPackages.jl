<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-randomizedlinalgjl" class="anchor" aria-hidden="true" href="#randomizedlinalgjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>RandomizedLinAlg.jl</h1>
<p><a href="https://travis-ci.org/haampie/RandomizedLinAlg.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d3cf12501dc2ac1bd84d8825cb34479bec6919c5/68747470733a2f2f7472617669732d63692e6f72672f6861616d7069652f52616e646f6d697a65644c696e416c672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/haampie/RandomizedLinAlg.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/haampie/RandomizedLinAlg.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/b06577517a1041982a9d6004efb66024a6261467/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6861616d7069652f52616e646f6d697a65644c696e416c672e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/haampie/RandomizedLinAlg.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>RandomizedLinAlg.jl is a <a href="https://julialang.org/" rel="nofollow">Julia</a> package that provides randomized algorithms for numerical linear algebra as advocated in [1].</p>
<p>This package was split off from <a href="https://github.com/JuliaMath/IterativeSolvers.jl">IterativeSolvers.jl</a> as randomized algorithms were not considered well-established and potentially unstable.</p>
<p>See the <a href="https://haampie.github.io/RandomizedLinAlg.jl/latest/" rel="nofollow"><strong>manual</strong></a> for the available methods.</p>
<p>[1]: Halko, Nathan, Per-Gunnar Martinsson, and Joel A. Tropp. "Finding structure with randomness: Probabilistic algorithms for constructing approximate matrix decompositions." SIAM review 53.2 (2011): 217-288.</p>
</article></div>