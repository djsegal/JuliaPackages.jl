<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-evotrees" class="anchor" aria-hidden="true" href="#evotrees"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>EvoTrees</h1>
<p><a href="https://travis-ci.org/Evovest/EvoTrees.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/dedaac456624dd31adfddd7af73c4606afe9cee2/68747470733a2f2f7472617669732d63692e6f72672f45766f766573742f45766f54726565732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Evovest/EvoTrees.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>A Julia implementation of boosted trees.
Efficient histogram based algorithm with support for conventional and extended loss (notably multi-target objectives such as max likelihood methods).</p>
<p><a href="https://github.com/Evovest/EvoTrees">R binding available</a></p>
<p>Currently supports:</p>
<ul>
<li>linear</li>
<li>logistic</li>
<li>Poisson</li>
<li>L1 (mae regression)</li>
<li>Quantile</li>
<li>multiclassification (softmax)</li>
<li>Gaussian (max likelihood)</li>
</ul>
<p>Input features is expected to be <code>Matrix{Float64}</code>. User friendly format conversion to be done.
Next priority: GPU support.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>Latest:</p>
<pre lang="julia-repl"><code>julia&gt; Pkg.add("https://github.com/Evovest/EvoTrees.jl")
</code></pre>
<p>Official Repo:</p>
<pre lang="julia-repl"><code>julia&gt; Pkg.add("EvoTrees")
</code></pre>
<h2><a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Performance</h2>
<p><a href="https://github.com/Evovest/EvoTrees.jl/blob/master/blog/benchmarks.jl">Benchmark</a> for 100 iterations on randomly generated data:</p>
<table>
<thead>
<tr>
<th>Dimensions / Algo</th>
<th align="center">XGBoost Exact</th>
<th align="center">XGBoost Hist</th>
<th align="center">EvoTrees</th>
</tr>
</thead>
<tbody>
<tr>
<td>10K x 100</td>
<td align="center">1.18s</td>
<td align="center">2.15s</td>
<td align="center">0.52s</td>
</tr>
<tr>
<td>100K x 100</td>
<td align="center">9.39s</td>
<td align="center">4.25s</td>
<td align="center">2.02s</td>
</tr>
<tr>
<td>1M X 100</td>
<td align="center">146.5s</td>
<td align="center">20.2s</td>
<td align="center">21.5</td>
</tr>
</tbody>
</table>
<h2><a id="user-content-parameters" class="anchor" aria-hidden="true" href="#parameters"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Parameters</h2>
<ul>
<li>loss: {:linear, :logistic, :poisson, :L1, :quantile, :softmax, :gaussian}</li>
<li>nrounds: 10L</li>
<li>λ: 0.0</li>
<li>γ: 0.0</li>
<li>η: 0.1</li>
<li>max_depth: integer, default 5L</li>
<li>min_weight: float &gt;= 0 default=1.0,</li>
<li>rowsample: float [0,1] default=1.0</li>
<li>colsample: float [0,1] default=1.0</li>
<li>nbins: Int, number of bins into which features will be quantilized default=64</li>
<li>α: float [0,1], set the quantile or bias in L1 default=0.5</li>
<li>metric: {:mse, :rmse, :mae, :logloss, :quantile},  default=:none</li>
</ul>
<h2><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Getting started</h2>
<p>Minimal example to fit a noisy sinus wave.</p>
<p><a target="_blank" rel="noopener noreferrer" href="regression_sinus.png"><img src="regression_sinus.png" alt="" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> EvoTrees
<span class="pl-k">using</span> EvoTrees<span class="pl-k">:</span> sigmoid, logit

<span class="pl-c"><span class="pl-c">#</span> prepare a dataset</span>
features <span class="pl-k">=</span> <span class="pl-c1">rand</span>(<span class="pl-c1">10000</span>) <span class="pl-k">.*</span> <span class="pl-c1">20</span> <span class="pl-k">.-</span> <span class="pl-c1">10</span>
X <span class="pl-k">=</span> <span class="pl-c1">reshape</span>(features, (<span class="pl-c1">size</span>(features)[<span class="pl-c1">1</span>], <span class="pl-c1">1</span>))
Y <span class="pl-k">=</span> <span class="pl-c1">sin</span>.(features) <span class="pl-k">.*</span> <span class="pl-c1">0.5</span> <span class="pl-k">.+</span> <span class="pl-c1">0.5</span>
Y <span class="pl-k">=</span> <span class="pl-c1">logit</span>(Y) <span class="pl-k">+</span> <span class="pl-c1">randn</span>(<span class="pl-c1">size</span>(Y))
Y <span class="pl-k">=</span> <span class="pl-c1">sigmoid</span>(Y)
𝑖 <span class="pl-k">=</span> <span class="pl-c1">collect</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">size</span>(X,<span class="pl-c1">1</span>))

<span class="pl-c"><span class="pl-c">#</span> train-eval split</span>
𝑖_sample <span class="pl-k">=</span> <span class="pl-c1">sample</span>(𝑖, <span class="pl-c1">size</span>(𝑖, <span class="pl-c1">1</span>), replace <span class="pl-k">=</span> <span class="pl-c1">false</span>)
train_size <span class="pl-k">=</span> <span class="pl-c1">0.8</span>
𝑖_train <span class="pl-k">=</span> 𝑖_sample[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">floor</span>(Int, train_size <span class="pl-k">*</span> <span class="pl-c1">size</span>(𝑖, <span class="pl-c1">1</span>))]
𝑖_eval <span class="pl-k">=</span> 𝑖_sample[<span class="pl-c1">floor</span>(Int, train_size <span class="pl-k">*</span> <span class="pl-c1">size</span>(𝑖, <span class="pl-c1">1</span>))<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">end</span>]

X_train, X_eval <span class="pl-k">=</span> X[𝑖_train, :], X[𝑖_eval, :]
Y_train, Y_eval <span class="pl-k">=</span> Y[𝑖_train], Y[𝑖_eval]

params1 <span class="pl-k">=</span> <span class="pl-c1">EvoTreeRegressor</span>(
    loss<span class="pl-k">=</span><span class="pl-c1">:linear</span>, metric<span class="pl-k">=</span><span class="pl-c1">:mse</span>,
    nrounds<span class="pl-k">=</span><span class="pl-c1">100</span>, nbins <span class="pl-k">=</span> <span class="pl-c1">100</span>,
    λ <span class="pl-k">=</span> <span class="pl-c1">0.5</span>, γ<span class="pl-k">=</span><span class="pl-c1">0.1</span>, η<span class="pl-k">=</span><span class="pl-c1">0.1</span>,
    max_depth <span class="pl-k">=</span> <span class="pl-c1">6</span>, min_weight <span class="pl-k">=</span> <span class="pl-c1">1.0</span>,
    rowsample<span class="pl-k">=</span><span class="pl-c1">0.5</span>, colsample<span class="pl-k">=</span><span class="pl-c1">1.0</span>)
model <span class="pl-k">=</span> <span class="pl-c1">fit_evotree</span>(params1, X_train, Y_train, X_eval <span class="pl-k">=</span> X_eval, Y_eval <span class="pl-k">=</span> Y_eval, print_every_n <span class="pl-k">=</span> <span class="pl-c1">25</span>)
pred_eval_linear <span class="pl-k">=</span> <span class="pl-c1">predict</span>(model, X_eval)

<span class="pl-c"><span class="pl-c">#</span> logistic / cross-entropy</span>
params1 <span class="pl-k">=</span> <span class="pl-c1">EvoTreeRegressor</span>(
    loss<span class="pl-k">=</span><span class="pl-c1">:logistic</span>, metric <span class="pl-k">=</span> <span class="pl-c1">:logloss</span>,
    nrounds<span class="pl-k">=</span><span class="pl-c1">100</span>, nbins <span class="pl-k">=</span> <span class="pl-c1">100</span>,
    λ <span class="pl-k">=</span> <span class="pl-c1">0.5</span>, γ<span class="pl-k">=</span><span class="pl-c1">0.1</span>, η<span class="pl-k">=</span><span class="pl-c1">0.1</span>,
    max_depth <span class="pl-k">=</span> <span class="pl-c1">6</span>, min_weight <span class="pl-k">=</span> <span class="pl-c1">1.0</span>,
    rowsample<span class="pl-k">=</span><span class="pl-c1">0.5</span>, colsample<span class="pl-k">=</span><span class="pl-c1">1.0</span>)
model <span class="pl-k">=</span> <span class="pl-c1">fit_evotree</span>(params1, X_train, Y_train, X_eval <span class="pl-k">=</span> X_eval, Y_eval <span class="pl-k">=</span> Y_eval, print_every_n <span class="pl-k">=</span> <span class="pl-c1">25</span>)
pred_eval_logistic <span class="pl-k">=</span> <span class="pl-c1">predict</span>(model, X_eval)

<span class="pl-c"><span class="pl-c">#</span> Poisson</span>
params1 <span class="pl-k">=</span> <span class="pl-c1">EvoTreeCount</span>(
    loss<span class="pl-k">=</span><span class="pl-c1">:poisson</span>, metric <span class="pl-k">=</span> <span class="pl-c1">:poisson</span>,
    nrounds<span class="pl-k">=</span><span class="pl-c1">100</span>, nbins <span class="pl-k">=</span> <span class="pl-c1">100</span>,
    λ <span class="pl-k">=</span> <span class="pl-c1">0.5</span>, γ<span class="pl-k">=</span><span class="pl-c1">0.1</span>, η<span class="pl-k">=</span><span class="pl-c1">0.1</span>,
    max_depth <span class="pl-k">=</span> <span class="pl-c1">6</span>, min_weight <span class="pl-k">=</span> <span class="pl-c1">1.0</span>,
    rowsample<span class="pl-k">=</span><span class="pl-c1">0.5</span>, colsample<span class="pl-k">=</span><span class="pl-c1">1.0</span>)
model <span class="pl-k">=</span> <span class="pl-c1">fit_evotree</span>(params1, X_train, Y_train, X_eval <span class="pl-k">=</span> X_eval, Y_eval <span class="pl-k">=</span> Y_eval, print_every_n <span class="pl-k">=</span> <span class="pl-c1">25</span>)
<span class="pl-c1">@time</span> pred_eval_poisson <span class="pl-k">=</span> <span class="pl-c1">predict</span>(model, X_eval)

<span class="pl-c"><span class="pl-c">#</span> L1</span>
params1 <span class="pl-k">=</span> <span class="pl-c1">EvoTreeRegressor</span>(
    loss<span class="pl-k">=</span><span class="pl-c1">:L1</span>, α<span class="pl-k">=</span><span class="pl-c1">0.5</span>, metric <span class="pl-k">=</span> <span class="pl-c1">:mae</span>,
    nrounds<span class="pl-k">=</span><span class="pl-c1">100</span>, nbins<span class="pl-k">=</span><span class="pl-c1">100</span>,
    λ <span class="pl-k">=</span> <span class="pl-c1">0.5</span>, γ<span class="pl-k">=</span><span class="pl-c1">0.0</span>, η<span class="pl-k">=</span><span class="pl-c1">0.1</span>,
    max_depth <span class="pl-k">=</span> <span class="pl-c1">6</span>, min_weight <span class="pl-k">=</span> <span class="pl-c1">1.0</span>,
    rowsample<span class="pl-k">=</span><span class="pl-c1">0.5</span>, colsample<span class="pl-k">=</span><span class="pl-c1">1.0</span>)
model <span class="pl-k">=</span> <span class="pl-c1">fit_evotree</span>(params1, X_train, Y_train, X_eval <span class="pl-k">=</span> X_eval, Y_eval <span class="pl-k">=</span> Y_eval, print_every_n <span class="pl-k">=</span> <span class="pl-c1">25</span>)
pred_eval_L1 <span class="pl-k">=</span> <span class="pl-c1">predict</span>(model, X_eval)</pre></div>
<h2><a id="user-content-quantile-regression" class="anchor" aria-hidden="true" href="#quantile-regression"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quantile Regression</h2>
<p><a target="_blank" rel="noopener noreferrer" href="quantiles_sinus.png"><img src="quantiles_sinus.png" alt="" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> q50</span>
params1 <span class="pl-k">=</span> <span class="pl-c1">EvoTreeRegressor</span>(
    loss<span class="pl-k">=</span><span class="pl-c1">:quantile</span>, α<span class="pl-k">=</span><span class="pl-c1">0.5</span>, metric <span class="pl-k">=</span> <span class="pl-c1">:quantile</span>,
    nrounds<span class="pl-k">=</span><span class="pl-c1">200</span>, nbins <span class="pl-k">=</span> <span class="pl-c1">100</span>,
    λ <span class="pl-k">=</span> <span class="pl-c1">0.1</span>, γ<span class="pl-k">=</span><span class="pl-c1">0.0</span>, η<span class="pl-k">=</span><span class="pl-c1">0.05</span>,
    max_depth <span class="pl-k">=</span> <span class="pl-c1">6</span>, min_weight <span class="pl-k">=</span> <span class="pl-c1">1.0</span>,
    rowsample<span class="pl-k">=</span><span class="pl-c1">0.5</span>, colsample<span class="pl-k">=</span><span class="pl-c1">1.0</span>)
model <span class="pl-k">=</span> <span class="pl-c1">fit_evotree</span>(params1, X_train, Y_train, X_eval <span class="pl-k">=</span> X_eval, Y_eval <span class="pl-k">=</span> Y_eval, print_every_n <span class="pl-k">=</span> <span class="pl-c1">25</span>)
pred_train_q50 <span class="pl-k">=</span> <span class="pl-c1">predict</span>(model, X_train)

<span class="pl-c"><span class="pl-c">#</span> q20</span>
params1 <span class="pl-k">=</span> <span class="pl-c1">EvoTreeRegressor</span>(
    loss<span class="pl-k">=</span><span class="pl-c1">:quantile</span>, α<span class="pl-k">=</span><span class="pl-c1">0.2</span>, metric <span class="pl-k">=</span> <span class="pl-c1">:quantile</span>,
    nrounds<span class="pl-k">=</span><span class="pl-c1">200</span>, nbins <span class="pl-k">=</span> <span class="pl-c1">100</span>,
    λ <span class="pl-k">=</span> <span class="pl-c1">0.1</span>, γ<span class="pl-k">=</span><span class="pl-c1">0.0</span>, η<span class="pl-k">=</span><span class="pl-c1">0.05</span>,
    max_depth <span class="pl-k">=</span> <span class="pl-c1">6</span>, min_weight <span class="pl-k">=</span> <span class="pl-c1">1.0</span>,
    rowsample<span class="pl-k">=</span><span class="pl-c1">0.5</span>, colsample<span class="pl-k">=</span><span class="pl-c1">1.0</span>)
model <span class="pl-k">=</span> <span class="pl-c1">fit_evotree</span>(params1, X_train, Y_train, X_eval <span class="pl-k">=</span> X_eval, Y_eval <span class="pl-k">=</span> Y_eval, print_every_n <span class="pl-k">=</span> <span class="pl-c1">25</span>)
pred_train_q20 <span class="pl-k">=</span> <span class="pl-c1">predict</span>(model, X_train)

<span class="pl-c"><span class="pl-c">#</span> q80</span>
params1 <span class="pl-k">=</span> <span class="pl-c1">EvoTreeRegressor</span>(
    loss<span class="pl-k">=</span><span class="pl-c1">:quantile</span>, α<span class="pl-k">=</span><span class="pl-c1">0.8</span>,
    nrounds<span class="pl-k">=</span><span class="pl-c1">200</span>, nbins <span class="pl-k">=</span> <span class="pl-c1">100</span>,
    λ <span class="pl-k">=</span> <span class="pl-c1">0.1</span>, γ<span class="pl-k">=</span><span class="pl-c1">0.0</span>, η<span class="pl-k">=</span><span class="pl-c1">0.05</span>,
    max_depth <span class="pl-k">=</span> <span class="pl-c1">6</span>, min_weight <span class="pl-k">=</span> <span class="pl-c1">1.0</span>,
    rowsample<span class="pl-k">=</span><span class="pl-c1">0.5</span>, colsample<span class="pl-k">=</span><span class="pl-c1">1.0</span>)
model <span class="pl-k">=</span> <span class="pl-c1">fit_evotree</span>(params1, X_train, Y_train, X_eval <span class="pl-k">=</span> X_eval, Y_eval <span class="pl-k">=</span> Y_eval, print_every_n <span class="pl-k">=</span> <span class="pl-c1">25</span>)
pred_train_q80 <span class="pl-k">=</span> <span class="pl-c1">predict</span>(model, X_train)</pre></div>
<h2><a id="user-content-gaussian-max-likelihood" class="anchor" aria-hidden="true" href="#gaussian-max-likelihood"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Gaussian Max Likelihood</h2>
<p><a target="_blank" rel="noopener noreferrer" href="gaussian_likelihood.png"><img src="gaussian_likelihood.png" alt="" style="max-width:100%;"></a></p>
<div class="highlight highlight-source-julia"><pre>params1 <span class="pl-k">=</span> <span class="pl-c1">EvoTreeGaussian</span>(
    loss<span class="pl-k">=</span><span class="pl-c1">:gaussian</span>, metric<span class="pl-k">=</span><span class="pl-c1">:gaussian</span>,
    nrounds<span class="pl-k">=</span><span class="pl-c1">100</span>, nbins<span class="pl-k">=</span><span class="pl-c1">100</span>,
    λ <span class="pl-k">=</span> <span class="pl-c1">0.0</span>, γ<span class="pl-k">=</span><span class="pl-c1">0.0</span>, η<span class="pl-k">=</span><span class="pl-c1">0.1</span>,
    max_depth <span class="pl-k">=</span> <span class="pl-c1">6</span>, min_weight <span class="pl-k">=</span> <span class="pl-c1">1.0</span>,
    rowsample<span class="pl-k">=</span><span class="pl-c1">0.5</span>, colsample<span class="pl-k">=</span><span class="pl-c1">1.0</span>, seed<span class="pl-k">=</span><span class="pl-c1">123</span>)</pre></div>
<h2><a id="user-content-feature-importance" class="anchor" aria-hidden="true" href="#feature-importance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Feature importance</h2>
<p>Returns the normalized gain by feature.</p>
<div class="highlight highlight-source-julia"><pre>features_gain <span class="pl-k">=</span> <span class="pl-c1">importance</span>(model, var_names)</pre></div>
</article></div>