<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-evotrees-" class="anchor" aria-hidden="true" href="#evotrees-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>EvoTrees <a href="https://evovest.github.io/EvoTrees.jl/dev/" rel="nofollow"><img src="figures/hex-evotrees-2.png" align="right" height="160" style="max-width: 100%;"></a></h1>
<table>
<thead>
<tr>
<th align="center">Documentation</th>
<th align="center">CI Status</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://evovest.github.io/EvoTrees.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://evovest.github.io/EvoTrees.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/Evovest/EvoTrees.jl/actions?query=workflow%3ACI+branch%3Amain"><img src="https://github.com/Evovest/EvoTrees.jl/workflows/CI/badge.svg" alt="" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">A Julia implementation of boosted trees with CPU and GPU support.
Efficient histogram based algorithms with support for multiple loss functions (notably multi-target objectives such as max likelihood methods).</p>
<p dir="auto"><a href="https://github.com/Evovest/EvoTrees">R binding available</a>.</p>
<p dir="auto">Input features are expected to be <code>Matrix{Float64/Float32}</code> when using the internal API. Tables/DataFrames format can be handled through <a href="https://github.com/alan-turing-institute/MLJ.jl">MLJ</a>. See the docs for further details.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Latest:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; Pkg.add(url=&quot;https://github.com/Evovest/EvoTrees.jl&quot;)"><pre lang="julia-repl" class="notranslate"><code>julia&gt; Pkg.add(url="https://github.com/Evovest/EvoTrees.jl")
</code></pre></div>
<p dir="auto">From General Registry:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; Pkg.add(&quot;EvoTrees&quot;)"><pre lang="julia-repl" class="notranslate"><code>julia&gt; Pkg.add("EvoTrees")
</code></pre></div>
<h2 dir="auto"><a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Performance</h2>
<p dir="auto">Data consists of randomly generated float32. Training is performed on 200 iterations. Code to reproduce is <a href="https://github.com/Evovest/EvoTrees.jl/blob/main/experiments/benchmarks-regressor.jl">here</a>.</p>
<p dir="auto">EvoTrees: v0.14.0
XGBoost: v2.0.2</p>
<p dir="auto">CPU: 12 threads on AMD Ryzen 5900X
GPU: NVIDIA RTX A4000</p>
<h3 dir="auto"><a id="user-content-training" class="anchor" aria-hidden="true" href="#training"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Training:</h3>
<table>
<thead>
<tr>
<th>Dimensions   / Algo</th>
<th align="center">XGBoost Hist</th>
<th align="center">EvoTrees</th>
<th align="center">EvoTrees GPU</th>
</tr>
</thead>
<tbody>
<tr>
<td>100K x 100</td>
<td align="center">1.29s</td>
<td align="center">1.05s</td>
<td align="center">2.96s</td>
</tr>
<tr>
<td>500K x 100</td>
<td align="center">6.73s</td>
<td align="center">3.15s</td>
<td align="center">3.83s</td>
</tr>
<tr>
<td>1M x 100</td>
<td align="center">13.27s</td>
<td align="center">6.01s</td>
<td align="center">4.94s</td>
</tr>
<tr>
<td>5M x 100</td>
<td align="center">65.1s</td>
<td align="center">34.1s</td>
<td align="center">14.1s</td>
</tr>
<tr>
<td>10M x 100</td>
<td align="center">142s</td>
<td align="center">71.8s</td>
<td align="center">25.1s</td>
</tr>
</tbody>
</table>
<h3 dir="auto"><a id="user-content-inference" class="anchor" aria-hidden="true" href="#inference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Inference:</h3>
<table>
<thead>
<tr>
<th>Dimensions   / Algo</th>
<th align="center">XGBoost Hist</th>
<th align="center">EvoTrees</th>
<th align="center">EvoTrees GPU</th>
</tr>
</thead>
<tbody>
<tr>
<td>100K x 100</td>
<td align="center">0.107s</td>
<td align="center">0.027s</td>
<td align="center">0.008s</td>
</tr>
<tr>
<td>500K x 100</td>
<td align="center">0.550s</td>
<td align="center">0.209s</td>
<td align="center">0.031s</td>
</tr>
<tr>
<td>1M x 100</td>
<td align="center">1.10s</td>
<td align="center">0.410s</td>
<td align="center">0.074s</td>
</tr>
<tr>
<td>5M x 100</td>
<td align="center">5.44s</td>
<td align="center">2.14s</td>
<td align="center">0.302s</td>
</tr>
<tr>
<td>10M x 100</td>
<td align="center">10.5s</td>
<td align="center">4.35s</td>
<td align="center">0.591s</td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-mlj-integration" class="anchor" aria-hidden="true" href="#mlj-integration"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MLJ Integration</h2>
<p dir="auto">See <a href="https://github.com/alan-turing-institute/MLJ.jl">official project page</a> for more info.</p>
<h2 dir="auto"><a id="user-content-quick-start-with-internal-api" class="anchor" aria-hidden="true" href="#quick-start-with-internal-api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick start with internal API</h2>
<p dir="auto">A model configuration must first be defined, using one of the model constructor:</p>
<ul dir="auto">
<li><code>EvoTreeRegressor</code></li>
<li><code>EvoTreeClassifier</code></li>
<li><code>EvoTreeCount</code></li>
<li><code>EvoTreeMLE</code></li>
</ul>
<p dir="auto">Model training is performed using <code>fit_evotree</code>. This function supports additional arguments to allowing to track out of sample metric and perform early stopping. Look at the docs for more details on available hyper-parameters for each of the above constructors and other options for training.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using EvoTrees

config = EvoTreeRegressor(
    loss=:linear, 
    nrounds=100, 
    max_depth=6, 
    nbins=32,
    eta=0.1,
    lambda=0.1, 
    gamma=0.1, 
    min_weight=1.0,
    rowsample=0.5, 
    colsample=0.8)

m = fit_evotree(config; x_train, y_train)
preds = m(x_train)"><pre><span class="pl-k">using</span> EvoTrees

config <span class="pl-k">=</span> <span class="pl-c1">EvoTreeRegressor</span>(
    loss<span class="pl-k">=</span><span class="pl-c1">:linear</span>, 
    nrounds<span class="pl-k">=</span><span class="pl-c1">100</span>, 
    max_depth<span class="pl-k">=</span><span class="pl-c1">6</span>, 
    nbins<span class="pl-k">=</span><span class="pl-c1">32</span>,
    eta<span class="pl-k">=</span><span class="pl-c1">0.1</span>,
    lambda<span class="pl-k">=</span><span class="pl-c1">0.1</span>, 
    gamma<span class="pl-k">=</span><span class="pl-c1">0.1</span>, 
    min_weight<span class="pl-k">=</span><span class="pl-c1">1.0</span>,
    rowsample<span class="pl-k">=</span><span class="pl-c1">0.5</span>, 
    colsample<span class="pl-k">=</span><span class="pl-c1">0.8</span>)

m <span class="pl-k">=</span> <span class="pl-c1">fit_evotree</span>(config; x_train, y_train)
preds <span class="pl-k">=</span> <span class="pl-c1">m</span>(x_train)</pre></div>
<h2 dir="auto"><a id="user-content-feature-importance" class="anchor" aria-hidden="true" href="#feature-importance"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Feature importance</h2>
<p dir="auto">Returns the normalized gain by feature.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="features_gain = importance(m)"><pre>features_gain <span class="pl-k">=</span> <span class="pl-c1">importance</span>(m)</pre></div>
<h2 dir="auto"><a id="user-content-plot" class="anchor" aria-hidden="true" href="#plot"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Plot</h2>
<p dir="auto">Plot a given tree of the model:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="plot(m, 2)"><pre><span class="pl-c1">plot</span>(m, <span class="pl-c1">2</span>)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="figures/plot_tree.png"><img src="figures/plot_tree.png" alt="" style="max-width: 100%;"></a></p>
<p dir="auto">Note that 1st tree is used to set the bias so the first real tree is #2.</p>
<h2 dir="auto"><a id="user-content-saveload" class="anchor" aria-hidden="true" href="#saveload"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Save/Load</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="EvoTrees.save(m, &quot;data/model.bson&quot;)
m = EvoTrees.load(&quot;data/model.bson&quot;);"><pre>EvoTrees<span class="pl-k">.</span><span class="pl-c1">save</span>(m, <span class="pl-s"><span class="pl-pds">"</span>data/model.bson<span class="pl-pds">"</span></span>)
m <span class="pl-k">=</span> EvoTrees<span class="pl-k">.</span><span class="pl-c1">load</span>(<span class="pl-s"><span class="pl-pds">"</span>data/model.bson<span class="pl-pds">"</span></span>);</pre></div>
<p dir="auto">A GPU model should be converted into a CPU one before saving: <code>m_cpu = convert(EvoTree, m_gpu)</code>.</p>
</article></div>