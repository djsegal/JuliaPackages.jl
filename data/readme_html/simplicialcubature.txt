<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-simplicialcubature" class="anchor" aria-hidden="true" href="#simplicialcubature"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SimplicialCubature</h1>
<p dir="auto"><a href="https://github.com/stla/SimplicialCubature.jl/actions/workflows/test.yml?query=branch%3Amain"><img src="https://github.com/stla/SimplicialCubature.jl/actions/workflows/test.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/stla/SimplicialCubature.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/58a63eac44bfc377c8e63c229cebcf83dc33edcf5fecad2b44c77a3c9300bfc7/68747470733a2f2f636f6465636f762e696f2f67682f73746c612f53696d706c696369616c43756261747572652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/stla/SimplicialCubature.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://stla.github.io/SimplicialCubature.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package is a port of the R package <strong>SimplicalCubature</strong>,
written by John P. Nolan, and which contains R translations of
some Matlab and Fortran code written by Alan Genz.</p>
<hr>
<p dir="auto">A simplex is a triangle in dimension 2, a tetrahedron in dimension 3.
This package provides two main functions: <code>integrateOnSimplex</code>, to integrate
an arbitrary function on a simplex, and <code>integratePolynomialOnSimplex</code>, to
get the exact value of the integral of a multivariate polynomial on a
simplex.</p>
<p dir="auto">A <code>n</code>-dimensional simplex must be given by <code>n+1</code> vectors of length <code>n</code>,
which represent the simplex vertices. For example, the 3-dimensional
unit simplex is encoded as follows:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="S = [[0, 0, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1]]"><pre>S <span class="pl-k">=</span> [[<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>], [<span class="pl-c1">1</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>], [<span class="pl-c1">0</span>, <span class="pl-c1">1</span>, <span class="pl-c1">0</span>], [<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>]]</pre></div>
<p dir="auto">Or you can get it by running <code>CanonicalSimplex(3)</code>.</p>
<p dir="auto">Suppose you want to integrate the function
<math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="eb8de6858087e0f3488aaa67c0549be9">$$f(x, y ,z) = x + yz$$</math-renderer>
on the unit simplex. To use <code>integrateOnSimplex</code>, you have to define <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="eb8de6858087e0f3488aaa67c0549be9">$f$</math-renderer>
as a function of a 3-dimensional vector:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function f(x)
  return x[1] + x[2]*x[3]
end

using SimplicialCubature
I = integrateOnSimplex(f, S)"><pre><span class="pl-k">function</span> <span class="pl-en">f</span>(x)
  <span class="pl-k">return</span> x[<span class="pl-c1">1</span>] <span class="pl-k">+</span> x[<span class="pl-c1">2</span>]<span class="pl-k">*</span>x[<span class="pl-c1">3</span>]
<span class="pl-k">end</span>

<span class="pl-k">using</span> SimplicialCubature
I <span class="pl-k">=</span> <span class="pl-c1">integrateOnSimplex</span>(f, S)</pre></div>
<p dir="auto">Then the value of the integral is given in <code>I.integral</code>.</p>
<p dir="auto">Since the function <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="eb8de6858087e0f3488aaa67c0549be9">$f$</math-renderer> of this example is polynomial, you can use
<code>integratePolynomialOnSimplex</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using SimplicialCubature
using TypedPolynomials

@polyvar x y z
P = x + y*z
integratePolynomialOnSimplex(P, S)"><pre><span class="pl-k">using</span> SimplicialCubature
<span class="pl-k">using</span> TypedPolynomials

<span class="pl-c1">@polyvar</span> x y z
P <span class="pl-k">=</span> x <span class="pl-k">+</span> y<span class="pl-k">*</span>z
<span class="pl-c1">integratePolynomialOnSimplex</span>(P, S)</pre></div>
<p dir="auto">Be careful if your polynomial does not involve one of the variables.
For example if <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="eb8de6858087e0f3488aaa67c0549be9">$P(x, y, z) = x + y$</math-renderer>, you have to encode as a polynomial
depending on <code>z</code>: type <code>P = x + y + 0*z</code>.</p>
<h2 dir="auto">
<a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ul dir="auto">
<li>
<p dir="auto">A. Genz and R. Cools.
<em>An adaptive numerical cubature algorithm for simplices.</em>
ACM Trans. Math. Software 29, 297-308 (2003).</p>
</li>
<li>
<p dir="auto">Jean B. Lasserre.
<em>Simple formula for the integration of polynomials on a simplex.</em>
BIT Numerical Mathematics 61, 523-533 (2021).</p>
</li>
</ul>
</article></div>