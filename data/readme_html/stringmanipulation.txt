<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-stringmanipulationjl" class="anchor" aria-hidden="true" href="#stringmanipulationjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>StringManipulation.jl</h1>
<p dir="auto"><a href="https://github.com/ronisbr/StringManipulation.jl/actions/workflows/ci.yml"><img src="https://github.com/ronisbr/StringManipulation.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/ronisbr/StringManipulation.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/aaa1723861619ffbd31304216fc8bce72a70b48122252e4ab4b304cd92306b6a/68747470733a2f2f636f6465636f762e696f2f67682f726f6e697362722f537472696e674d616e6970756c6174696f6e2e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d58454c525742324b4f4f" alt="codecov" data-canonical-src="https://codecov.io/gh/ronisbr/StringManipulation.jl/branch/main/graph/badge.svg?token=XELRWB2KOO" style="max-width: 100%;"></a></p>
<p dir="auto">This package has the purpose to provide several functions to manipulate strings
with ANSI escape sequences.</p>
<h2 dir="auto"><a id="user-content-alignment" class="anchor" aria-hidden="true" href="#alignment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Alignment</h2>
<p dir="auto">The function <code>align_string</code> can be used to align the string in a field with a
specific size to the left, center, or right.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; align_string(
       &quot;A string with emojis ðŸ˜ƒðŸ˜ƒ and \e[4mdecoration\e[0m to be aligned&quot;,
       80,
       :c
       ) |&gt; print
             A string with emojis ðŸ˜ƒðŸ˜ƒ and decoration to be aligned

julia&gt; align_string(
       &quot;A string with emojis ðŸ˜ƒðŸ˜ƒ and \e[4mdecoration\e[0m to be aligned&quot;,
       80,
       :r
       ) |&gt; print
                          A string with emojis ðŸ˜ƒðŸ˜ƒ and decoration to be aligned"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">align_string</span>(
       <span class="pl-s"><span class="pl-pds">"</span>A string with emojis ðŸ˜ƒðŸ˜ƒ and <span class="pl-cce">\e</span>[4mdecoration<span class="pl-cce">\e</span>[0m to be aligned<span class="pl-pds">"</span></span>,
       <span class="pl-c1">80</span>,
       <span class="pl-c1">:c</span>
       ) <span class="pl-k">|&gt;</span> print
             A string with emojis ðŸ˜ƒðŸ˜ƒ and decoration to be aligned

julia<span class="pl-k">&gt;</span> <span class="pl-c1">align_string</span>(
       <span class="pl-s"><span class="pl-pds">"</span>A string with emojis ðŸ˜ƒðŸ˜ƒ and <span class="pl-cce">\e</span>[4mdecoration<span class="pl-cce">\e</span>[0m to be aligned<span class="pl-pds">"</span></span>,
       <span class="pl-c1">80</span>,
       <span class="pl-c1">:r</span>
       ) <span class="pl-k">|&gt;</span> print
                          A string with emojis ðŸ˜ƒðŸ˜ƒ and decoration to be aligned</pre></div>
<p dir="auto">If the string has multiple lines, then all can be aligned at once using the
function <code>align_string_per_line</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; str = &quot;&quot;&quot;
       We have \e[38;5;231;48;5;243mhere\e[0m ðŸ˜…ðŸ˜ƒ the first line
       We now have the ðŸ˜Š \e[38;5;231;48;5;243msecond\e[0m ðŸ˜ƒ line&quot;&quot;&quot;;

julia&gt; align_string_per_line(str, 80, :r) |&gt; print
                                                We have here ðŸ˜…ðŸ˜ƒ the first line
                                               We now have the ðŸ˜Š second ðŸ˜ƒ line"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">       We have <span class="pl-cce">\e</span>[38;5;231;48;5;243mhere<span class="pl-cce">\e</span>[0m ðŸ˜…ðŸ˜ƒ the first line</span>
<span class="pl-s">       We now have the ðŸ˜Š <span class="pl-cce">\e</span>[38;5;231;48;5;243msecond<span class="pl-cce">\e</span>[0m ðŸ˜ƒ line<span class="pl-pds">"""</span></span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">align_string_per_line</span>(str, <span class="pl-c1">80</span>, <span class="pl-c1">:r</span>) <span class="pl-k">|&gt;</span> print
                                                We have here ðŸ˜…ðŸ˜ƒ the first line
                                               We now have the ðŸ˜Š second ðŸ˜ƒ line</pre></div>
<h2 dir="auto"><a id="user-content-cropping" class="anchor" aria-hidden="true" href="#cropping"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Cropping</h2>
<h3 dir="auto"><a id="user-content-fit-string-in-a-field" class="anchor" aria-hidden="true" href="#fit-string-in-a-field"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Fit string in a field</h3>
<p dir="auto">The function <code>fit_string_in_field</code> crop the string so that it has a number of
printable characters that fits in a field.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; str = &quot;Test ðŸ˜… \e[38;5;231;48;5;243mTest ðŸ˜… \e[38;5;201;48;5;243mTest\e[0m&quot;;

julia&gt; fit_string_in_field(str, 9)
&quot;Test ðŸ˜… â€¦\e[38;5;231;48;5;243m\e[38;5;201;48;5;243m\e[0m&quot;"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243mTest ðŸ˜… <span class="pl-cce">\e</span>[38;5;201;48;5;243mTest<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">fit_string_in_field</span>(str, <span class="pl-c1">9</span>)
<span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… â€¦<span class="pl-cce">\e</span>[38;5;231;48;5;243m<span class="pl-cce">\e</span>[38;5;201;48;5;243m<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">The function <code>fit_string_in_field</code> has many options. For more information,
please, see the built-in help (type <code>textview</code>  in REPL).</p>
<h3 dir="auto"><a id="user-content-left-cropping" class="anchor" aria-hidden="true" href="#left-cropping"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Left cropping</h3>
<p dir="auto">The function <code>left_crop</code> can be used to crop a field of specific width to the
left of the string. In this case, the function return the ANSI escape sequence
(non-printable string) in the cropped field, and the cropped string.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; str = &quot;Test ðŸ˜… \e[38;5;231;48;5;243mTest ðŸ˜… \e[38;5;201;48;5;243mTest\e[0m&quot;;

julia&gt; left_crop(str, 9)
(&quot;\e[38;5;231;48;5;243m&quot;, &quot;est ðŸ˜… \e[38;5;201;48;5;243mTest\e[0m&quot;)"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243mTest ðŸ˜… <span class="pl-cce">\e</span>[38;5;201;48;5;243mTest<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">left_crop</span>(str, <span class="pl-c1">9</span>)
(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\e</span>[38;5;231;48;5;243m<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>est ðŸ˜… <span class="pl-cce">\e</span>[38;5;201;48;5;243mTest<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span>)</pre></div>
<h3 dir="auto"><a id="user-content-right-cropping" class="anchor" aria-hidden="true" href="#right-cropping"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Right cropping</h3>
<p dir="auto">The function <code>right_crop</code> can be used to crop a field of specific width to the
right of the string. In this case, the function return the cropped string, and
the ANSI escape sequence (non-printable string) in the cropped field.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; str = &quot;Test ðŸ˜… \e[38;5;231;48;5;243mTest ðŸ˜… \e[38;5;201;48;5;243mTest\e[0m&quot;;

julia&gt; right_crop(str, 5)
(&quot;Test ðŸ˜… \e[38;5;231;48;5;243mTest ðŸ˜…&quot;, &quot;\e[38;5;201;48;5;243m\e[0m&quot;)"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243mTest ðŸ˜… <span class="pl-cce">\e</span>[38;5;201;48;5;243mTest<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">right_crop</span>(str, <span class="pl-c1">5</span>)
(<span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243mTest ðŸ˜…<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\e</span>[38;5;201;48;5;243m<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">If the keyword <code>keep_escape_seq</code> is set to <code>false</code>, then the ANSI escape
sequence in the cropped field will not be computed. This can lead to a
substantial increase in the performance for very long string.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; right_crop(str, 5; keep_escape_seq = false)
(&quot;Test ðŸ˜… \e[38;5;231;48;5;243mTest ðŸ˜…&quot;, &quot;&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">right_crop</span>(str, <span class="pl-c1">5</span>; keep_escape_seq <span class="pl-k">=</span> <span class="pl-c1">false</span>)
(<span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243mTest ðŸ˜…<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-decorations" class="anchor" aria-hidden="true" href="#decorations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Decorations</h2>
<p dir="auto">This package contains some functions to work with ANSI escape sequences that
decorate the text.</p>
<h3 dir="auto"><a id="user-content-get-decorations" class="anchor" aria-hidden="true" href="#get-decorations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Get decorations</h3>
<p dir="auto">All the decorations in a string can be retrieved using <code>get_decorations</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
julia&gt; str = &quot;Test ðŸ˜… \e[38;5;231;48;5;243mTest ðŸ˜… \e[38;5;201;48;5;243mTest\e[0m&quot;;

julia&gt; get_decorations(str)
&quot;\e[38;5;231;48;5;243m\e[38;5;201;48;5;243m\e[0m&quot;"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243mTest ðŸ˜… <span class="pl-cce">\e</span>[38;5;201;48;5;243mTest<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">get_decorations</span>(str)
<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\e</span>[38;5;231;48;5;243m<span class="pl-cce">\e</span>[38;5;201;48;5;243m<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span></pre></div>
<h3 dir="auto"><a id="user-content-remove-the-decorations" class="anchor" aria-hidden="true" href="#remove-the-decorations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Remove the decorations</h3>
<p dir="auto">It is possible to remove all the decorations in a string using the functions
<code>remove_decorations</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; str = &quot;Test ðŸ˜… \e[38;5;231;48;5;243mTest ðŸ˜… \e[38;5;201;48;5;243mTest\e[0m&quot;;

julia&gt; remove_decorations(str)
&quot;Test ðŸ˜… Test ðŸ˜… Test&quot;"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243mTest ðŸ˜… <span class="pl-cce">\e</span>[38;5;201;48;5;243mTest<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">remove_decorations</span>(str)
<span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… Test ðŸ˜… Test<span class="pl-pds">"</span></span></pre></div>
<h3 dir="auto"><a id="user-content-get-and-remove-decorations" class="anchor" aria-hidden="true" href="#get-and-remove-decorations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Get and remove decorations</h3>
<p dir="auto">If someone wants to get all the decorations in a string, and the undecorated
string, the function <code>get_and_remove_decorations</code> can be used to improve the
performance:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; str = &quot;Test ðŸ˜… \e[38;5;231;48;5;243mTest ðŸ˜… \e[38;5;201;48;5;243mTest\e[0m&quot;;

julia&gt; get_and_remove_decorations(str)
(&quot;\e[38;5;231;48;5;243m\e[38;5;201;48;5;243m\e[0m&quot;, &quot;Test ðŸ˜… Test ðŸ˜… Test&quot;)"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243mTest ðŸ˜… <span class="pl-cce">\e</span>[38;5;201;48;5;243mTest<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">get_and_remove_decorations</span>(str)
(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\e</span>[38;5;231;48;5;243m<span class="pl-cce">\e</span>[38;5;201;48;5;243m<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… Test ðŸ˜… Test<span class="pl-pds">"</span></span>)</pre></div>
<h3 dir="auto"><a id="user-content-parsing-decorations" class="anchor" aria-hidden="true" href="#parsing-decorations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Parsing decorations</h3>
<p dir="auto">The ANSI escape sequences that decorates the text can be parsed using the
function <code>parse_decoration</code>. The result is an object of type <code>Decoration</code> with
the combined decoration created by the ANSI escape sequence.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; parse_decoration(&quot;\e[38;5;201;48;5;243;4;27m&quot;) |&gt; dump
Decoration
  foreground: String &quot;38;5;201&quot;
  background: String &quot;48;5;243&quot;
  bold: StringManipulation.DecorationState StringManipulation.unchanged
  underline: StringManipulation.DecorationState StringManipulation.active
  reset: Bool false
  reversed: StringManipulation.DecorationState StringManipulation.inactive"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse_decoration</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\e</span>[38;5;201;48;5;243;4;27m<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> dump
Decoration
  foreground<span class="pl-k">:</span> String <span class="pl-s"><span class="pl-pds">"</span>38;5;201<span class="pl-pds">"</span></span>
  background<span class="pl-k">:</span> String <span class="pl-s"><span class="pl-pds">"</span>48;5;243<span class="pl-pds">"</span></span>
  bold<span class="pl-k">:</span> StringManipulation<span class="pl-k">.</span>DecorationState StringManipulation<span class="pl-k">.</span>unchanged
  underline<span class="pl-k">:</span> StringManipulation<span class="pl-k">.</span>DecorationState StringManipulation<span class="pl-k">.</span>active
  reset<span class="pl-k">:</span> Bool <span class="pl-c1">false</span>
  reversed<span class="pl-k">:</span> StringManipulation<span class="pl-k">.</span>DecorationState StringManipulation<span class="pl-k">.</span>inactive</pre></div>
<h3 dir="auto"><a id="user-content-updating-decorations" class="anchor" aria-hidden="true" href="#updating-decorations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Updating decorations</h3>
<p dir="auto">A decoration (object of type <code>Decoration</code>) can be updated given another ANSI
escape sequence using <code>update_decoration</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; decoration = parse_decoration(&quot;\e[38;5;201;48;5;243;4;27m&quot;);

julia&gt; update_decoration(decoration, &quot;\e[33;1m&quot;) |&gt; dump
Decoration
  foreground: String &quot;33&quot;
  background: String &quot;48;5;243&quot;
  bold: StringManipulation.DecorationState StringManipulation.active
  underline: StringManipulation.DecorationState StringManipulation.active
  reset: Bool false
  reversed: StringManipulation.DecorationState StringManipulation.inactive"><pre>julia<span class="pl-k">&gt;</span> decoration <span class="pl-k">=</span> <span class="pl-c1">parse_decoration</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\e</span>[38;5;201;48;5;243;4;27m<span class="pl-pds">"</span></span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">update_decoration</span>(decoration, <span class="pl-s"><span class="pl-pds">"</span><span class="pl-cce">\e</span>[33;1m<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> dump
Decoration
  foreground<span class="pl-k">:</span> String <span class="pl-s"><span class="pl-pds">"</span>33<span class="pl-pds">"</span></span>
  background<span class="pl-k">:</span> String <span class="pl-s"><span class="pl-pds">"</span>48;5;243<span class="pl-pds">"</span></span>
  bold<span class="pl-k">:</span> StringManipulation<span class="pl-k">.</span>DecorationState StringManipulation<span class="pl-k">.</span>active
  underline<span class="pl-k">:</span> StringManipulation<span class="pl-k">.</span>DecorationState StringManipulation<span class="pl-k">.</span>active
  reset<span class="pl-k">:</span> Bool <span class="pl-c1">false</span>
  reversed<span class="pl-k">:</span> StringManipulation<span class="pl-k">.</span>DecorationState StringManipulation<span class="pl-k">.</span>inactive</pre></div>
<h2 dir="auto"><a id="user-content-highlight-search-matches" class="anchor" aria-hidden="true" href="#highlight-search-matches"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Highlight search matches</h2>
<p dir="auto">The function <code>highlight_search</code> can be used to highlight search matches, given
by a <code>Regex</code>, in a string.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; str = &quot;&quot;&quot;
  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque tempor
  risus vel diam ultrices volutpat. Nullam id tortor ut dolor rutrum cursus
  aliquam sed lorem. Donec interdum, risus eu scelerisque posuere, purus magna
  auctor purus, in faucibus nisi quam ac erat. Nulla facilisi. Aenean et augue
  augue. Donec ut sem posuere, venenatis est quis, ultrices elit. Vivamus elit
  sapien, ullamcorper quis dui ut, suscipit varius nibh. Duis varius arcu id
  ipsum egestas aliquam. Pellentesque eget sem ornare turpis fringilla fringilla
  id ac turpis.
  &quot;&quot;&quot;;

julia&gt; highlight_search(str, r&quot;ing&quot;; active_match = 2) |&gt; println"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque tempor</span>
<span class="pl-s">  risus vel diam ultrices volutpat. Nullam id tortor ut dolor rutrum cursus</span>
<span class="pl-s">  aliquam sed lorem. Donec interdum, risus eu scelerisque posuere, purus magna</span>
<span class="pl-s">  auctor purus, in faucibus nisi quam ac erat. Nulla facilisi. Aenean et augue</span>
<span class="pl-s">  augue. Donec ut sem posuere, venenatis est quis, ultrices elit. Vivamus elit</span>
<span class="pl-s">  sapien, ullamcorper quis dui ut, suscipit varius nibh. Duis varius arcu id</span>
<span class="pl-s">  ipsum egestas aliquam. Pellentesque eget sem ornare turpis fringilla fringilla</span>
<span class="pl-s">  id ac turpis.</span>
<span class="pl-s">  <span class="pl-pds">"""</span></span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">highlight_search</span>(str, <span class="pl-sr"><span class="pl-pds">r"</span>ing<span class="pl-pds">"</span></span>; active_match <span class="pl-k">=</span> <span class="pl-c1">2</span>) <span class="pl-k">|&gt;</span> println</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./assets/highlight_search.png"><img src="./assets/highlight_search.png" alt="Highlight search" title="Highlight search" style="max-width: 100%;"></a></p>
<p dir="auto">The function <code>highlight_search</code> has many options. For more information, please,
see the built-in help (type <code>?highlight_search</code>  in REPL).</p>
<h2 dir="auto"><a id="user-content-printable-text-width" class="anchor" aria-hidden="true" href="#printable-text-width"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Printable text width</h2>
<p dir="auto">The printable text width of a string can be computed using the function
<code>printable_textwidth</code>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; str = &quot;Test ðŸ˜… \e[38;5;231;48;5;243mTest ðŸ˜… \e[38;5;201;48;5;243mTest\e[0m&quot;;

julia&gt; printable_textwidth(str)
20"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243mTest ðŸ˜… <span class="pl-cce">\e</span>[38;5;201;48;5;243mTest<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">printable_textwidth</span>(str)
<span class="pl-c1">20</span></pre></div>
<p dir="auto">If the string has multiple lines, then the function
<code>printable_textwidth_per_line</code> can be used to compute the printable text width
of each one of them:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; str = &quot;&quot;&quot;
       Test ðŸ˜… \e[38;5;231;48;5;243mTest ðŸ˜… \e[38;5;201;48;5;243mTest\e[0m
       Test ðŸ˜… \e[38;5;231;48;5;243mTest ðŸ˜… \e[38;5;201;48;5;243mTest Test\e[0m
       Test ðŸ˜… \e[38;5;231;48;5;243mTest ðŸ˜… \e[38;5;201;48;5;243mTest Test Test\e[0m&quot;&quot;&quot;;

julia&gt; printable_textwidth_per_line(str)
3-element Vector{Int64}:
 20
 25
 30"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">       Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243mTest ðŸ˜… <span class="pl-cce">\e</span>[38;5;201;48;5;243mTest<span class="pl-cce">\e</span>[0m</span>
<span class="pl-s">       Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243mTest ðŸ˜… <span class="pl-cce">\e</span>[38;5;201;48;5;243mTest Test<span class="pl-cce">\e</span>[0m</span>
<span class="pl-s">       Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243mTest ðŸ˜… <span class="pl-cce">\e</span>[38;5;201;48;5;243mTest Test Test<span class="pl-cce">\e</span>[0m<span class="pl-pds">"""</span></span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">printable_textwidth_per_line</span>(str)
<span class="pl-c1">3</span><span class="pl-k">-</span>element Vector{Int64}<span class="pl-k">:</span>
 <span class="pl-c1">20</span>
 <span class="pl-c1">25</span>
 <span class="pl-c1">30</span></pre></div>
<h2 dir="auto"><a id="user-content-splitting" class="anchor" aria-hidden="true" href="#splitting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Splitting</h2>
<p dir="auto">The function <code>split_string</code> can be used to split a string given a desired size
(printable characters width).</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; str = &quot;Test ðŸ˜… \e[38;5;231;48;5;243mTest ðŸ˜… \e[38;5;201;48;5;243mTest\e[0m&quot;;

julia&gt; split_string(str, 8)
(&quot;Test ðŸ˜… \e[38;5;231;48;5;243m&quot;, &quot;Test ðŸ˜… \e[38;5;201;48;5;243mTest\e[0m&quot;)"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243mTest ðŸ˜… <span class="pl-cce">\e</span>[38;5;201;48;5;243mTest<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">split_string</span>(str, <span class="pl-c1">8</span>)
(<span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;231;48;5;243m<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Test ðŸ˜… <span class="pl-cce">\e</span>[38;5;201;48;5;243mTest<span class="pl-cce">\e</span>[0m<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-text-view" class="anchor" aria-hidden="true" href="#text-view"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Text view</h2>
<p dir="auto">The function <code>textview</code> can be used to create a view of a text.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
julia&gt; str = &quot;&quot;&quot;
         Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque tempor
         risus vel diam ultrices volutpat. Nullam id tortor ut dolor rutrum cursus
         aliquam sed lorem. Donec interdum, risus eu scelerisque posuere, purus magna
         auctor purus, in faucibus nisi quam ac erat. Nulla facilisi. Aenean et augue
         augue. Donec ut sem posuere, venenatis est quis, ultrices elit. Vivamus elit
         sapien, ullamcorper quis dui ut, suscipit varius nibh. Duis varius arcu id
         ipsum egestas aliquam. Pellentesque eget sem ornare turpis fringilla fringilla
         id ac turpis.
         &quot;&quot;&quot;;

julia&gt; textview(str, (1, 3, 10, 50))[1] |&gt; println
um dolor sit amet, consectetur adipiscing
 diam ultrices volutpat. Nullam id tortor
ed lorem. Donec interdum, risus eu sceler"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">         Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque tempor</span>
<span class="pl-s">         risus vel diam ultrices volutpat. Nullam id tortor ut dolor rutrum cursus</span>
<span class="pl-s">         aliquam sed lorem. Donec interdum, risus eu scelerisque posuere, purus magna</span>
<span class="pl-s">         auctor purus, in faucibus nisi quam ac erat. Nulla facilisi. Aenean et augue</span>
<span class="pl-s">         augue. Donec ut sem posuere, venenatis est quis, ultrices elit. Vivamus elit</span>
<span class="pl-s">         sapien, ullamcorper quis dui ut, suscipit varius nibh. Duis varius arcu id</span>
<span class="pl-s">         ipsum egestas aliquam. Pellentesque eget sem ornare turpis fringilla fringilla</span>
<span class="pl-s">         id ac turpis.</span>
<span class="pl-s">         <span class="pl-pds">"""</span></span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">textview</span>(str, (<span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">10</span>, <span class="pl-c1">50</span>))[<span class="pl-c1">1</span>] <span class="pl-k">|&gt;</span> println
um dolor sit amet, consectetur adipiscing
 diam ultrices volutpat. Nullam id tortor
ed lorem. Donec interdum, risus eu sceler</pre></div>
<p dir="auto">Notice that it correctly considers all the ANSI escape sequences that decorate
the text, yielding to a view that matches all the characteristics of the
original text (foreground color, background color, underline, etc.).</p>
<p dir="auto">The function <code>textview</code> has many options. For more information, please, see the
built-in help (type <code>?textview</code>  in REPL).</p>
</article></div>