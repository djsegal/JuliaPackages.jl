<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-tropicalgemm" class="anchor" aria-hidden="true" href="#tropicalgemm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TropicalGEMM</h1>
<p><a href="https://github.com/TensorBFS/TropicalGEMM.jl/actions"><img src="https://github.com/TensorBFS/TropicalGEMM.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a></p>
<p><a href="https://codecov.io/gh/TensorBFS/TropicalGEMM.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0d04fb54514ed3140d3a612e2880abe657a2f8de5c112368b1682b9896bd6e39/68747470733a2f2f636f6465636f762e696f2f67682f54656e736f724246532f54726f706963616c47454d4d2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d3846365048355139504c" alt="codecov" data-canonical-src="https://codecov.io/gh/TensorBFS/TropicalGEMM.jl/branch/master/graph/badge.svg?token=8F6PH5Q9PL" style="max-width:100%;"></a></p>
<h2><a id="user-content-see-the-discussion-here" class="anchor" aria-hidden="true" href="#see-the-discussion-here"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>See the discussion here</h2>
<p><a href="https://github.com/JuliaSIMD/LoopVectorization.jl/issues/201">https://github.com/JuliaSIMD/LoopVectorization.jl/issues/201</a></p>
<h2><a id="user-content-get-started" class="anchor" aria-hidden="true" href="#get-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Get started</h2>
<p>Open a Julia REPL and type <code>]</code> to enter the <code>pkg&gt;</code> mode, and then install related packages with</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="pkg&gt; add TropicalNumbers, Octavian, TropicalGEMM, BenchmarkTools
"><pre>pkg<span class="pl-k">&gt;</span> add TropicalNumbers, Octavian, TropicalGEMM, BenchmarkTools</pre></div>
<p>In a julia REPL, you can try a minimum working example</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using TropicalNumbers, Octavian, TropicalGEMM, BenchmarkTools

julia&gt; a = Tropical.(randn(1000, 1000))

julia&gt; @benchmark Octavian.matmul_serial($a, $a)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> TropicalNumbers, Octavian, TropicalGEMM, BenchmarkTools

julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">Tropical</span>.(<span class="pl-c1">randn</span>(<span class="pl-c1">1000</span>, <span class="pl-c1">1000</span>))

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@benchmark</span> Octavian<span class="pl-k">.</span><span class="pl-c1">matmul_serial</span>(<span class="pl-k">$</span>a, <span class="pl-k">$</span>a)</pre></div>
<h2><a id="user-content-benchmarks" class="anchor" aria-hidden="true" href="#benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Benchmarks</h2>
<p>Matrix size <code>n x n</code>, CPU Intel(R) Core(TM) i5-10400 CPU @ 2.90GHz.
The benchmark and plotting scripts could be found in the benchmarks folder.</p>
<p><a target="_blank" rel="noopener noreferrer" href="benchmarks/benchmark-float64.png"><img src="benchmarks/benchmark-float64.png" alt="Float64" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="benchmarks/benchmark-float32.png"><img src="benchmarks/benchmark-float32.png" alt="Float32" style="max-width:100%;"></a></p>
</article></div>