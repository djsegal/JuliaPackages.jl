<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-parquet" class="anchor" aria-hidden="true" href="#parquet"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Parquet</h1>
<p><a href="https://travis-ci.org/JuliaIO/Parquet.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/d67947b01ed7dea768d96ce89578457a1a3f0631/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961494f2f506172717565742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaIO/Parquet.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/tanmaykm/parquet-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/285ffcb47aae150ddac34ce4922c7624a3542fd1/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7672716730317732736a336d666b33642f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/vrqg01w2sj3mfk3d/branch/master?svg=true" style="max-width:100%;"></a></p>
<p>Load a <a href="https://en.wikipedia.org/wiki/Apache_Parquet" rel="nofollow">parquet file</a>. Only metadata is read initially, data is loaded in chunks on demand. (Note: <a href="https://github.com/queryverse/ParquetFiles.jl">ParquetFiles.jl</a> also provides load support for Parquet files under the FileIO.jl package.)</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Parquet

julia<span class="pl-k">&gt;</span> parfile <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>customer.impala.parquet<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> p <span class="pl-k">=</span> <span class="pl-c1">ParFile</span>(parfile)
Parquet file<span class="pl-k">:</span> <span class="pl-k">/</span>home<span class="pl-k">/</span>tan<span class="pl-k">/</span>Work<span class="pl-k">/</span>julia<span class="pl-k">/</span>packages<span class="pl-k">/</span>Parquet<span class="pl-k">/</span>test<span class="pl-k">/</span>parquet<span class="pl-k">-</span>compatibility<span class="pl-k">/</span>parquet<span class="pl-k">-</span>testdata<span class="pl-k">/</span>impala<span class="pl-k">/</span><span class="pl-c1">1.1.1</span><span class="pl-k">-</span>SNAPPY<span class="pl-k">/</span>customer<span class="pl-k">.</span>impala<span class="pl-k">.</span>parquet
    version<span class="pl-k">:</span> <span class="pl-c1">1</span>
    nrows<span class="pl-k">:</span> <span class="pl-c1">150000</span>
    created by<span class="pl-k">:</span> impala version <span class="pl-c1">1.2</span><span class="pl-k">-</span>INTERNAL (build a462ec42e550c75fccbff98c720f37f3ee9d55a3)
    cached<span class="pl-k">:</span> <span class="pl-c1">0</span> column chunks</pre></div>
<p>Examine the schema.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">nrows</span>(p)
<span class="pl-c1">150000</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">ncols</span>(p)
<span class="pl-c1">8</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">colnames</span>(p)
<span class="pl-c1">8</span><span class="pl-k">-</span>element Array{AbstractString,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>c_acctbal<span class="pl-pds">"</span></span>   
 <span class="pl-s"><span class="pl-pds">"</span>c_mktsegment<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>c_nationkey<span class="pl-pds">"</span></span> 
 <span class="pl-s"><span class="pl-pds">"</span>c_name<span class="pl-pds">"</span></span>      
 <span class="pl-s"><span class="pl-pds">"</span>c_address<span class="pl-pds">"</span></span>   
 <span class="pl-s"><span class="pl-pds">"</span>c_custkey<span class="pl-pds">"</span></span>   
 <span class="pl-s"><span class="pl-pds">"</span>c_phone<span class="pl-pds">"</span></span>     
 <span class="pl-s"><span class="pl-pds">"</span>c_comment<span class="pl-pds">"</span></span>   

julia<span class="pl-k">&gt;</span> <span class="pl-c1">schema</span>(p)
Schema<span class="pl-k">:</span>
    schema {
      optional INT64 c_custkey
      optional BYTE_ARRAY c_name
      optional BYTE_ARRAY c_address
      optional INT32 c_nationkey
      optional BYTE_ARRAY c_phone
      optional DOUBLE c_acctbal
      optional BYTE_ARRAY c_mktsegment
      optional BYTE_ARRAY c_comment
    }</pre></div>
<p>Can convert the parquet schema to different forms:</p>
<p>(For Julia 1.0 or later, use stdout instead of STDOUT)</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">schema</span>(<span class="pl-c1">JuliaConverter</span>(STDOUT), p, <span class="pl-c1">:Customer</span>)
type Customer
    <span class="pl-en">Customer</span>() <span class="pl-k">=</span> <span class="pl-c1">new</span>()
    c_custkey<span class="pl-k">::</span><span class="pl-c1">Int64</span>
    c_name<span class="pl-k">::</span><span class="pl-c1">Vector{UInt8}</span>
    c_address<span class="pl-k">::</span><span class="pl-c1">Vector{UInt8}</span>
    c_nationkey<span class="pl-k">::</span><span class="pl-c1">Int32</span>
    c_phone<span class="pl-k">::</span><span class="pl-c1">Vector{UInt8}</span>
    c_acctbal<span class="pl-k">::</span><span class="pl-c1">Float64</span>
    c_mktsegment<span class="pl-k">::</span><span class="pl-c1">Vector{UInt8}</span>
    c_comment<span class="pl-k">::</span><span class="pl-c1">Vector{UInt8}</span>
<span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">schema</span>(<span class="pl-c1">ThriftConverter</span>(STDOUT), p, <span class="pl-c1">:Customer</span>)
<span class="pl-k">struct</span> Customer {
     optional i64 c_custkey
     optional binary c_name
     optional binary c_address
     optional i32 c_nationkey
     optional binary c_phone
     optional double c_acctbal
     optional binary c_mktsegment
     optional binary c_comment
}

julia<span class="pl-k">&gt;</span> <span class="pl-c1">schema</span>(<span class="pl-c1">ProtoConverter</span>(STDOUT), p, <span class="pl-c1">:Customer</span>)
message Customer {
    optional sint64 c_custkey;
    optional bytes c_name;
    optional bytes c_address;
    optional sint32 c_nationkey;
    optional bytes c_phone;
    optional double c_acctbal;
    optional bytes c_mktsegment;
    optional bytes c_comment;
}</pre></div>
<p>Can inject the type dynamically to a module to have further methods working directly on the Julia type.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">schema</span>(<span class="pl-c1">JuliaConverter</span>(Main), p, <span class="pl-c1">:Customer</span>)

julia<span class="pl-k">&gt;</span> Base<span class="pl-k">.</span><span class="pl-en">show</span>(io<span class="pl-k">::</span><span class="pl-c1">IO</span>, cust<span class="pl-k">::</span><span class="pl-c1">Customer</span>) <span class="pl-k">=</span> <span class="pl-c1">println</span>(io, <span class="pl-c1">String</span>(<span class="pl-c1">copy</span>(cust<span class="pl-k">.</span>c_name)), <span class="pl-s"><span class="pl-pds">"</span> Phone#:<span class="pl-pds">"</span></span>, <span class="pl-c1">String</span>(<span class="pl-c1">copy</span>(cust<span class="pl-k">.</span>c_phone)))</pre></div>
<p>Create cursor to iterate over records. In parallel mode, multiple remote cursors can be created and iterated on in parallel.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> rc <span class="pl-k">=</span> <span class="pl-c1">RecCursor</span>(p, <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>, <span class="pl-c1">colnames</span>(p), <span class="pl-c1">JuliaBuilder</span>(p, Customer))
Record Cursor on <span class="pl-k">/</span>home<span class="pl-k">/</span>tan<span class="pl-k">/</span>Work<span class="pl-k">/</span>julia<span class="pl-k">/</span>packages<span class="pl-k">/</span>Parquet<span class="pl-k">/</span>test<span class="pl-k">/</span>parquet<span class="pl-k">-</span>compatibility<span class="pl-k">/</span>parquet<span class="pl-k">-</span>testdata<span class="pl-k">/</span>impala<span class="pl-k">/</span><span class="pl-c1">1.1.1</span><span class="pl-k">-</span>SNAPPY<span class="pl-k">/</span>customer<span class="pl-k">.</span>impala<span class="pl-k">.</span>parquet
    rows<span class="pl-k">:</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>
    cols<span class="pl-k">:</span> c_acctbal<span class="pl-k">.</span>c_mktsegment<span class="pl-k">.</span>c_nationkey<span class="pl-k">.</span>c_name<span class="pl-k">.</span>c_address<span class="pl-k">.</span>c_custkey<span class="pl-k">.</span>c_phone<span class="pl-k">.</span>c_comment


julia<span class="pl-k">&gt;</span> i <span class="pl-k">=</span> <span class="pl-c1">start</span>(rc);

julia<span class="pl-k">&gt;</span> <span class="pl-k">while</span> <span class="pl-k">!</span><span class="pl-c1">done</span>(rc, i)
        v,i <span class="pl-k">=</span> <span class="pl-c1">next</span>(rc, i)
        <span class="pl-c1">show</span>(v)
       <span class="pl-k">end</span>
Customer<span class="pl-c"><span class="pl-c">#</span>000000033 Phone#:27-375-391-1280</span>
Customer<span class="pl-c"><span class="pl-c">#</span>000000065 Phone#:33-733-623-5267</span>
Customer<span class="pl-c"><span class="pl-c">#</span>000000001 Phone#:25-989-741-2988</span>
Customer<span class="pl-c"><span class="pl-c">#</span>000000642 Phone#:32-925-597-9911</span>
Customer<span class="pl-c"><span class="pl-c">#</span>000000161 Phone#:17-805-718-2449</span>
</pre></div>
</article></div>