<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-entitycomponentsystemjl-" class="anchor" aria-hidden="true" href="#entitycomponentsystemjl-"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>EntityComponentSystem.jl <g-emoji class="g-emoji" alias="bento" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f371.png">üç±</g-emoji></h1>
<p>An entity component system written for Julia for video games and other simulations.</p>
<div class="highlight highlight-text-shell-session"><pre><span class="pl-c1">add EntityComponentSystem</span></pre></div>
<p>Documentation is <a href="https://richardanaya.github.io/EntityComponentSystem.jl/build/index.html" rel="nofollow">here</a></p>
<h2><a id="user-content-simple-example" class="anchor" aria-hidden="true" href="#simple-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Simple Example</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> EntityComponentSystem

<span class="pl-k">mutable struct</span> Position <span class="pl-k">&lt;:</span> <span class="pl-c1">ECSComponent</span>
  x<span class="pl-k">::</span><span class="pl-c1">Float32</span>
  y<span class="pl-k">::</span><span class="pl-c1">Float32</span>
<span class="pl-k">end</span>

<span class="pl-k">mutable struct</span> Velocity <span class="pl-k">&lt;:</span> <span class="pl-c1">ECSComponent</span>
  x<span class="pl-k">::</span><span class="pl-c1">Float32</span>
  y<span class="pl-k">::</span><span class="pl-c1">Float32</span>
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Create a world for entities</span>
world <span class="pl-k">=</span> <span class="pl-c1">World</span>()

<span class="pl-c"><span class="pl-c">#</span> Register memory storage for components</span>
<span class="pl-c1">register!</span>(world,Position)
<span class="pl-c1">register!</span>(world,Velocity)

<span class="pl-c"><span class="pl-c">#</span> Create entities</span>
player <span class="pl-k">=</span> <span class="pl-c1">createentity!</span>(world)
<span class="pl-c1">addcomponent!</span>(world,player,<span class="pl-c1">Position</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>))
<span class="pl-c1">addcomponent!</span>(world,player,<span class="pl-c1">Velocity</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>))

FPS <span class="pl-k">=</span> <span class="pl-c1">60.0</span>

<span class="pl-k">function</span> <span class="pl-en">runphysics!</span>()
  <span class="pl-k">while</span> <span class="pl-c1">true</span>
    <span class="pl-k">global</span> world
    <span class="pl-c"><span class="pl-c">#</span> Run systems on entities with specific sets of components</span>
    <span class="pl-c1">runsystem!</span>(world,[Position,Velocity]) <span class="pl-k">do</span> entity,components
        <span class="pl-c"><span class="pl-c">#</span> Components are given in order they are requested</span>
        pos,vel <span class="pl-k">=</span> components
        <span class="pl-c"><span class="pl-c">#</span> Modify components</span>
        pos<span class="pl-k">.</span>x <span class="pl-k">+=</span> vel<span class="pl-k">.</span>x
        pos<span class="pl-k">.</span>y <span class="pl-k">+=</span> vel<span class="pl-k">.</span>y
    <span class="pl-k">end</span>
    <span class="pl-c1">sleep</span>(<span class="pl-c1">1.0</span><span class="pl-k">/</span>FPS)
  <span class="pl-k">end</span>
<span class="pl-k">end</span>

<span class="pl-c1">@async</span> <span class="pl-c1">runphysics!</span>()</pre></div>
</article></div>