<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-nefarious" class="anchor" aria-hidden="true" href="#nefarious"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Nefarious</h1>
<p>Package demonstrating why <code>julia --project</code> in a directory you don't trust can be dangerous, which is why Julia doesn't do <code>julia --project</code> automatically, instead requiring you to explicitly add the flag, which constitutes a conscious indication that you trust the project you are in.</p>
<p>Try it out (if you dare!):</p>
<div class="highlight highlight-source-shell"><pre>$ <span class="pl-c1">cd</span> Nefarious
$ julia -q --project
julia<span class="pl-k">&gt;</span> using JSON
Haha, gotcha<span class="pl-k">!</span></pre></div>
<p>The same attack could easily be expanded to all common package names by just replicating what has been done here for JSON.
If you start a <code>julia</code> process in this directory with <code>--project</code> you cannot safely load any packages.
If you have a <code>~/.julia/config/startup.jl</code> file and it loads any packages, then just starting <code>julia --project</code> in this directory could execute arbitrary code.</p>
</article></div>