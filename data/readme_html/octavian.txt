<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-octavian" class="anchor" aria-hidden="true" href="#octavian"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Octavian</h1>
<p><a href="https://JuliaLinearAlgebra.github.io/Octavian.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Documentation (stable)" title="Documentation (stable)" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://JuliaLinearAlgebra.github.io/Octavian.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Documentation (dev)" title="Documentation (dev)" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/JuliaLinearAlgebra/Octavian.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaLinearAlgebra/Octavian.jl/workflows/CI/badge.svg" alt="Continuous Integration" title="Continuous Integration" style="max-width:100%;"></a>
<a href="https://github.com/JuliaLinearAlgebra/Octavian.jl/actions?query=workflow%3A%22CI+%28Julia+nightly%29%22"><img src="https://github.com/JuliaLinearAlgebra/Octavian.jl/workflows/CI%20(Julia%20nightly)/badge.svg" alt="Continuous Integration (Julia nightly)" title="Continuous Integration (Julia nightly)" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/JuliaLinearAlgebra/Octavian.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c954810cf603fd4ec5c37cfe7af97b0369e285dbe80a040d84e86b9f2d24f68d/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614c696e656172416c67656272612f4f6374617669616e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Code Coverage" title="Code Coverage" data-canonical-src="https://codecov.io/gh/JuliaLinearAlgebra/Octavian.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>Octavian.jl
is a multi-threaded BLAS-like library that provides pure Julia
matrix multiplication on the CPU, built on top of
<a href="https://github.com/chriselrod/LoopVectorization.jl">LoopVectorization.jl</a>.</p>
<p>Please see the
<a href="https://JuliaLinearAlgebra.github.io/Octavian.jl/stable" rel="nofollow">Octavian documentation</a>.</p>
<h2><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Related Packages</h2>
<table>
<thead>
<tr>
<th>Julia Package</th>
<th>CPU</th>
<th>GPU</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/MasonProtter/Gaius.jl">Gaius.jl</a></td>
<td>Yes</td>
<td>No</td>
</tr>
<tr>
<td><a href="https://github.com/JuliaGPU/GemmKernels.jl">GemmKernels.jl</a></td>
<td>No</td>
<td>Yes</td>
</tr>
<tr>
<td><a href="https://github.com/JuliaLinearAlgebra/Octavian.jl">Octavian.jl</a></td>
<td>Yes</td>
<td>No</td>
</tr>
<tr>
<td><a href="https://github.com/mcabbott/Tullio.jl">Tullio.jl</a></td>
<td>Yes</td>
<td>Yes</td>
</tr>
</tbody>
</table>
<p>In general:</p>
<ul>
<li>Octavian has the fastest CPU performance.</li>
<li>GemmKernels has the fastest GPU performance.</li>
<li>Tullio is the most flexible.</li>
</ul>
</article></div>