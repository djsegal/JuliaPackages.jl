<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://github.com/tk3369/LoggingFacilities.jl/actions?query=workflow%3ACI"><img src="https://github.com/tk3369/LoggingFacilities.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="http://codecov.io/github/tk3369/LoggingFacilities.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/3cd5d951927fb035293b54da1261561d115b1da0f216a995e65c0598a93d9b56/687474703a2f2f636f6465636f762e696f2f6769746875622f746b333336392f4c6f6767696e67466163696c69746965732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/tk3369/LoggingFacilities.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/dbe64375489abd67ddc3acd21a4c7019a237210c8dc81f446ead282c6be6d9c2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374617475732d6578706572696d656e74616c2d726564"><img src="https://camo.githubusercontent.com/dbe64375489abd67ddc3acd21a4c7019a237210c8dc81f446ead282c6be6d9c2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374617475732d6578706572696d656e74616c2d726564" alt="Project Status" data-canonical-src="https://img.shields.io/badge/status-experimental-red" style="max-width:100%;"></a></p>
<h1><a id="user-content-loggingfacilities" class="anchor" aria-hidden="true" href="#loggingfacilities"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LoggingFacilities</h1>
<p>This package provides an easy way to build transformer loggers as defined in
<a href="https://github.com/oxinabox/LoggingExtras.jl">LoggingExtras.jl</a>.</p>
<h2><a id="user-content-design" class="anchor" aria-hidden="true" href="#design"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Design</h2>
<p>A standard log record consists of the following components:</p>
<ul>
<li><code>level</code>: the logging level like Error, Warn, Info, and Debug</li>
<li><code>messasge</code>: a string</li>
<li><code>kwargs</code>: key-value pairs (where key is a Symbol)</li>
</ul>
<p>In practice, the log output may need to be enhanced with additional information.
Further, it is conceivable that the data in these fields may need to be moved
around within the record.  For examples:</p>
<ol>
<li>Prepend current timestamp to <code>message</code> or add it to <code>kwargs</code></li>
<li>Format the log as a single line by moving all <code>kwargs</code> into <code>message</code></li>
<li>Format the complete log record as a JSON string in <code>message</code> field</li>
<li>etc.</li>
</ol>
<h2><a id="user-content-common-transformer-loggers" class="anchor" aria-hidden="true" href="#common-transformer-loggers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Common Transformer Loggers</h2>
<p>A few commonly used transformer loggers are provided as part of this package.
They can be accessed as follows.</p>
<h3><a id="user-content-onelinetransformerlogger" class="anchor" aria-hidden="true" href="#onelinetransformerlogger"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>OneLineTransformerLogger</h3>
<p>Migrate all kwargs fields by appending them to the message string.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; with_logger(OneLineTransformerLogger(current_logger())) do
           name = &quot;Pluto&quot;
           planet = false
           @info &quot;hello world&quot; name planet
       end
[ Info: hello world name=Pluto planet=false
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">with_logger</span>(<span class="pl-c1">OneLineTransformerLogger</span>(<span class="pl-c1">current_logger</span>())) <span class="pl-k">do</span>
           name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Pluto<span class="pl-pds">"</span></span>
           planet <span class="pl-k">=</span> <span class="pl-c1">false</span>
           <span class="pl-c1">@info</span> <span class="pl-s"><span class="pl-pds">"</span>hello world<span class="pl-pds">"</span></span> name planet
       <span class="pl-k">end</span>
[ Info<span class="pl-k">:</span> hello world name<span class="pl-k">=</span>Pluto planet<span class="pl-k">=</span><span class="pl-c1">false</span></pre></div>
<h3><a id="user-content-timestamptransformerlogger" class="anchor" aria-hidden="true" href="#timestamptransformerlogger"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TimestampTransformerLogger</h3>
<p>Add a timestamp at the beginnging or the end of the message string.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; with_logger(TimestampTransformerLogger(current_logger(), BeginningMessageLocation();
                                              format = &quot;yyyy-mm-dd HH:MM:SSz&quot;)) do
           @info &quot;hello&quot;
       end

[ Info: 2020-07-04 21:00:58-07:00 hello
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">with_logger</span>(<span class="pl-c1">TimestampTransformerLogger</span>(<span class="pl-c1">current_logger</span>(), <span class="pl-c1">BeginningMessageLocation</span>();
                                              format <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>yyyy-mm-dd HH:MM:SSz<span class="pl-pds">"</span></span>)) <span class="pl-k">do</span>
           <span class="pl-c1">@info</span> <span class="pl-s"><span class="pl-pds">"</span>hello<span class="pl-pds">"</span></span>
       <span class="pl-k">end</span>

[ Info<span class="pl-k">:</span> <span class="pl-c1">2020</span><span class="pl-k">-</span><span class="pl-c1">07</span><span class="pl-k">-</span><span class="pl-c1">04</span> <span class="pl-c1">21</span><span class="pl-k">:</span><span class="pl-c1">00</span><span class="pl-k">:</span><span class="pl-c1">58</span><span class="pl-k">-</span><span class="pl-c1">07</span><span class="pl-k">:</span><span class="pl-c1">00</span> hello</pre></div>
<h3><a id="user-content-jsontransformerlogger" class="anchor" aria-hidden="true" href="#jsontransformerlogger"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>JSONTransformerLogger</h3>
<p>The JSONTransformerLogger is a little special in that it is expected to be used with
the <code>MessageOnlyLogger</code> sink (so that we can e.g. skip adding the log level as a prefix).</p>
<p>The <code>level</code> and <code>message</code> data are automatically
included within the JSON string, for which their labels are customizable. See doc string
for details.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; with_logger(JSONTransformerLogger(MessageOnlyLogger(); indent = 2)) do
           name = &quot;Pluto&quot;
           planet = false
           @info &quot;hello world&quot; name planet
       end
{
  &quot;message&quot;: &quot;hello world&quot;,
  &quot;level&quot;: &quot;Info&quot;,
  &quot;name&quot;: &quot;Pluto&quot;,
  &quot;planet&quot;: false
}
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">with_logger</span>(<span class="pl-c1">JSONTransformerLogger</span>(<span class="pl-c1">MessageOnlyLogger</span>(); indent <span class="pl-k">=</span> <span class="pl-c1">2</span>)) <span class="pl-k">do</span>
           name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Pluto<span class="pl-pds">"</span></span>
           planet <span class="pl-k">=</span> <span class="pl-c1">false</span>
           <span class="pl-c1">@info</span> <span class="pl-s"><span class="pl-pds">"</span>hello world<span class="pl-pds">"</span></span> name planet
       <span class="pl-k">end</span>
{
  <span class="pl-s"><span class="pl-pds">"</span>message<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>hello world<span class="pl-pds">"</span></span>,
  <span class="pl-s"><span class="pl-pds">"</span>level<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>Info<span class="pl-pds">"</span></span>,
  <span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span>: <span class="pl-s"><span class="pl-pds">"</span>Pluto<span class="pl-pds">"</span></span>,
  <span class="pl-s"><span class="pl-pds">"</span>planet<span class="pl-pds">"</span></span>: <span class="pl-c1">false</span>
}</pre></div>
<h3><a id="user-content-colormessagetransformerlogger" class="anchor" aria-hidden="true" href="#colormessagetransformerlogger"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ColorMessageTransformerLogger</h3>
<p>Color the message string based upon the log level.  Try it! :-)</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; preferred_colors = Dict(
           Logging.Debug =&gt; ColorSpec(:grey, false),
           Logging.Info  =&gt; ColorSpec(:cyan, true),
           Logging.Warn  =&gt; ColorSpec(:yellow, true),
           Logging.Error =&gt; ColorSpec(:red, true),
       );

julia&gt; clogger = ColorMessageTransformerLogger(current_logger(), preferred_colors);
"><pre>julia<span class="pl-k">&gt;</span> preferred_colors <span class="pl-k">=</span> <span class="pl-c1">Dict</span>(
           Logging<span class="pl-k">.</span>Debug <span class="pl-k">=&gt;</span> <span class="pl-c1">ColorSpec</span>(<span class="pl-c1">:grey</span>, <span class="pl-c1">false</span>),
           Logging<span class="pl-k">.</span>Info  <span class="pl-k">=&gt;</span> <span class="pl-c1">ColorSpec</span>(<span class="pl-c1">:cyan</span>, <span class="pl-c1">true</span>),
           Logging<span class="pl-k">.</span>Warn  <span class="pl-k">=&gt;</span> <span class="pl-c1">ColorSpec</span>(<span class="pl-c1">:yellow</span>, <span class="pl-c1">true</span>),
           Logging<span class="pl-k">.</span>Error <span class="pl-k">=&gt;</span> <span class="pl-c1">ColorSpec</span>(<span class="pl-c1">:red</span>, <span class="pl-c1">true</span>),
       );

julia<span class="pl-k">&gt;</span> clogger <span class="pl-k">=</span> <span class="pl-c1">ColorMessageTransformerLogger</span>(<span class="pl-c1">current_logger</span>(), preferred_colors);</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="images/colorful.png"><img src="images/colorful.png" alt="ColorMessageTransformerLogger usage" style="max-width:100%;"></a></p>
<h3><a id="user-content-fixedmessagewidthtransformerlogger" class="anchor" aria-hidden="true" href="#fixedmessagewidthtransformerlogger"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FixedMessageWidthTransformerLogger</h3>
<p>Fix the width of the message string by padding spaces at the end. If the message string is longer
than the specified width, then it is truncated.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; logger = compose(
           current_logger(),
           logger -&gt; FixedMessageWidthTransformerLogger(logger, 40),
           OneLineTransformerLogger,
       );

julia&gt; with_logger(logger) do
           for i in 1:4
               x = round(rand(), digits = 10)
               y = round(rand(), digits = 10)
               @info &quot;Iteration #$i&quot; x y
           end
       end
[ Info: Iteration #1                             x=0.9901128795 y=0.7439288248
[ Info: Iteration #2                             x=0.7326098234 y=0.9881316083
[ Info: Iteration #3                             x=0.1050601631 y=0.2100138712
[ Info: Iteration #4                             x=0.2812764292 y=0.0242226631
"><pre>julia<span class="pl-k">&gt;</span> logger <span class="pl-k">=</span> <span class="pl-c1">compose</span>(
           <span class="pl-c1">current_logger</span>(),
           logger <span class="pl-k">-&gt;</span> <span class="pl-c1">FixedMessageWidthTransformerLogger</span>(logger, <span class="pl-c1">40</span>),
           OneLineTransformerLogger,
       );

julia<span class="pl-k">&gt;</span> <span class="pl-c1">with_logger</span>(logger) <span class="pl-k">do</span>
           <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">4</span>
               x <span class="pl-k">=</span> <span class="pl-c1">round</span>(<span class="pl-c1">rand</span>(), digits <span class="pl-k">=</span> <span class="pl-c1">10</span>)
               y <span class="pl-k">=</span> <span class="pl-c1">round</span>(<span class="pl-c1">rand</span>(), digits <span class="pl-k">=</span> <span class="pl-c1">10</span>)
               <span class="pl-c1">@info</span> <span class="pl-s"><span class="pl-pds">"</span>Iteration #<span class="pl-v">$i</span><span class="pl-pds">"</span></span> x y
           <span class="pl-k">end</span>
       <span class="pl-k">end</span>
[ Info<span class="pl-k">:</span> Iteration <span class="pl-c"><span class="pl-c">#</span>1                             x=0.9901128795 y=0.7439288248</span>
[ Info<span class="pl-k">:</span> Iteration <span class="pl-c"><span class="pl-c">#</span>2                             x=0.7326098234 y=0.9881316083</span>
[ Info<span class="pl-k">:</span> Iteration <span class="pl-c"><span class="pl-c">#</span>3                             x=0.1050601631 y=0.2100138712</span>
[ Info<span class="pl-k">:</span> Iteration <span class="pl-c"><span class="pl-c">#</span>4                             x=0.2812764292 y=0.0242226631</span></pre></div>
<h2><a id="user-content-creating-your-own-transformer-logger" class="anchor" aria-hidden="true" href="#creating-your-own-transformer-logger"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Creating your own transformer logger...</h2>
<p>This is the whole reason why this package exists! :-)</p>
<p>There are 4 main operations in a transformer:</p>
<ol>
<li>Inject - add data to the log record at either <code>message</code> or <code>kwargs</code> location.</li>
<li>Migrate - move data between <code>level</code>, <code>message</code>, or <code>kwargs</code>.</li>
<li>Mutate - mutate data in <code>level</code>, <code>message</code>, or <code>kwargs</code></li>
<li>Remove - empty out <code>message</code> or remove all elements in <code>kwargs</code>.</li>
</ol>
<p>Examples:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Inject a timestamp to the beginning of the message
logger = TransformerLogger(current_logger()) do log
             inject(log, BeginningMessageLocation(), () -&gt; now())
         end

# Inject a timestamp to the kwargs location
logger = TransformerLogger(current_logger()) do log
             inject(log, KwargsLocation(), () -&gt; (:timestamp =&gt; now(),))
         end

# Migrate all kwargs to the message string
logger = TransformerLogger(current_logger()) do log
             migrate(log, KwargsProperty(), MessageProperty())
         end

# Multiple operations (using Pipe.jl)
logger = TransformerLogger(current_logger()) do log
             @pipe log |&gt;
                   migrate(_log_, KwargsProperty(), MessageProperty())
                   inject(_, BeginningMessageLocation(), () -&gt; now())
         end
"><pre><span class="pl-c"><span class="pl-c">#</span> Inject a timestamp to the beginning of the message</span>
logger <span class="pl-k">=</span> <span class="pl-c1">TransformerLogger</span>(<span class="pl-c1">current_logger</span>()) <span class="pl-k">do</span> log
             <span class="pl-c1">inject</span>(log, <span class="pl-c1">BeginningMessageLocation</span>(), () <span class="pl-k">-&gt;</span> <span class="pl-c1">now</span>())
         <span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Inject a timestamp to the kwargs location</span>
logger <span class="pl-k">=</span> <span class="pl-c1">TransformerLogger</span>(<span class="pl-c1">current_logger</span>()) <span class="pl-k">do</span> log
             <span class="pl-c1">inject</span>(log, <span class="pl-c1">KwargsLocation</span>(), () <span class="pl-k">-&gt;</span> (<span class="pl-c1">:timestamp</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">now</span>(),))
         <span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Migrate all kwargs to the message string</span>
logger <span class="pl-k">=</span> <span class="pl-c1">TransformerLogger</span>(<span class="pl-c1">current_logger</span>()) <span class="pl-k">do</span> log
             <span class="pl-c1">migrate</span>(log, <span class="pl-c1">KwargsProperty</span>(), <span class="pl-c1">MessageProperty</span>())
         <span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Multiple operations (using Pipe.jl)</span>
logger <span class="pl-k">=</span> <span class="pl-c1">TransformerLogger</span>(<span class="pl-c1">current_logger</span>()) <span class="pl-k">do</span> log
             <span class="pl-c1">@pipe</span> log <span class="pl-k">|&gt;</span>
                   <span class="pl-c1">migrate</span>(_log_, <span class="pl-c1">KwargsProperty</span>(), <span class="pl-c1">MessageProperty</span>())
                   <span class="pl-c1">inject</span>(_, <span class="pl-c1">BeginningMessageLocation</span>(), () <span class="pl-k">-&gt;</span> <span class="pl-c1">now</span>())
         <span class="pl-k">end</span></pre></div>
<h2><a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Credits</h2>
<p>This package was originally conceived as part of <a href="https://www.youtube.com/watch?v=89xlkSUh_dA" rel="nofollow">this coding live stream</a>. Special credit to <a href="https://github.com/christopher-dG">Chris de Graff</a> for joining
the live stream and helping out.</p>
<p>It has been redesigned significantly since v0.2.0.</p>
</article></div>