<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-unitfulbuckinghampi" class="anchor" aria-hidden="true" href="#unitfulbuckinghampi"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>UnitfulBuckinghamPi</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/rmsrosa/UnitfulBuckinghamPi.jl/workflows/CI/badge.svg"><img src="https://github.com/rmsrosa/UnitfulBuckinghamPi.jl/workflows/CI/badge.svg" alt="Main Tests Workflow Status" style="max-width: 100%;"></a> <a href="https://codecov.io/gh/rmsrosa/UnitfulBuckinghamPi.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/327d9ae721bdfac6f5262441c5828bf286ff9562737107195955ed8f28865ee4/68747470733a2f2f636f6465636f762e696f2f67682f726d73726f73612f556e697466756c4275636b696e6768616d50692e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/rmsrosa/UnitfulBuckinghamPi.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a> <a href="https://opensource.org/licenses/MIT" rel="nofollow"><img src="https://camo.githubusercontent.com/78f47a09877ba9d28da1887a93e5c3bc2efb309c1e910eb21135becd2998238a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" alt="License: MIT" data-canonical-src="https://img.shields.io/badge/License-MIT-yellow.svg" style="max-width: 100%;"></a> <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/fe3183c0663952329a8b8c8cad78b3ff898cd69bad9f0c5dc987222138e39b46/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f726d73726f73612f556e697466756c43757272656e636965732e6a6c"><img src="https://camo.githubusercontent.com/fe3183c0663952329a8b8c8cad78b3ff898cd69bad9f0c5dc987222138e39b46/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f726d73726f73612f556e697466756c43757272656e636965732e6a6c" alt="GitHub repo size" data-canonical-src="https://img.shields.io/github/repo-size/rmsrosa/UnitfulCurrencies.jl" style="max-width: 100%;"></a> <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/42c0373df6a0ab2e26098242307a512273a289eb8581e06fc9acad60121e157a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e6765"><img src="https://camo.githubusercontent.com/42c0373df6a0ab2e26098242307a512273a289eb8581e06fc9acad60121e157a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e6765" alt="Lifecycle Experimental" data-canonical-src="https://img.shields.io/badge/lifecycle-experimental-orange" style="max-width: 100%;"></a> <a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" alt="Code Style: Blue" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package is for solving for the adimensional Pi groups (or Œ† groups) in a given list of parameters, according to the <a href="https://en.wikipedia.org/wiki/Buckingham_%CF%80_theorem" rel="nofollow">Buckingham-Pi Theorem</a>.</p>
<p dir="auto">We use the package <a href="https://github.com/PainterQubits/Unitful.jl">Unitful.jl</a> in order to facilitate the construction of the parameters and to easily handle the dimensions associated with each parameter.</p>
<p dir="auto">This package is inspired by a similar package written in python: <a href="https://github.com/ian-r-rose/buckinghampy">ian-r-rose/buckinghampy</a>.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">Let us consider a couple of examples.</p>
<h3 dir="auto"><a id="user-content-simple-pendulum" class="anchor" aria-hidden="true" href="#simple-pendulum"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Simple pendulum</h3>
<p dir="auto">We start with the period of a simple pendulum.</p>
<p dir="auto">The parameters taken for consideration are the <em>length</em> of the rod, the <em>mass</em> of the bob, the <em>acceleration of gravity</em>, the <em>angle</em> of the rod with respect to the downwards vertical direction, and the <em>period</em> of the swinging pendulum.</p>
<p dir="auto">We define these parameters as <code>Unitful.FreeUnits</code>. Except for the acceleration of gravity, which is a constant and is given as a <code>Unitful.Quantity</code> value, and for the period, for which we do not associate any unit, only a dimension, just for fun.</p>
<p dir="auto">To tell <code>UnitfulBuckinghamPi</code> that these are the parameters to consider, we use the macro <code>@setparameters</code>. Then, we find the adimensional Œ† groups with the function <code>pi_groups()</code>, which returns the groups as a vector. It can either be a vector of strings, with <code>pi_groups(:String)</code>, or of expressions, with <code>pi_groups(:Expr)</code>, which is the default.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Unitful

julia&gt; using UnitfulBuckinghamPi

julia&gt; ‚Ñì = u&quot;m&quot;
m

julia&gt; g = 9.8u&quot;m/s^2&quot;
9.8 m s‚Åª¬≤

julia&gt; m = u&quot;g&quot;
g

julia&gt; T = u&quot;ùêì&quot;
ùêì

julia&gt; Œ∏ = u&quot;NoDims&quot;
NoDims

julia&gt; @setparameters ‚Ñì g m T Œ∏
[ Info: Parameter(s) registered:
[ Info:  ‚Ñì = m
[ Info:  g = 9.8 m s‚Åª¬≤
[ Info:  m = g
[ Info:  T = ùêì
[ Info:  Œ∏ = NoDims

julia&gt; Œ†_str = pi_groups(:String)
2-element Vector{String}:
 &quot;‚Ñì^(-1//2)*g^(1//2)*T^(1//1)&quot;
 &quot;Œ∏^(1//1)&quot;

julia&gt; Œ† = pi_groups(:Expr)
2-element Vector{Expr}:
 :(‚Ñì ^ (-1 // 2) * g ^ (1 // 2) * T ^ (1 // 1))
 :(Œ∏ ^ (1 // 1)) "><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Unitful

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> UnitfulBuckinghamPi

julia<span class="pl-k">&gt;</span> ‚Ñì <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>
m

julia<span class="pl-k">&gt;</span> g <span class="pl-k">=</span> <span class="pl-c1">9.8</span><span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m/s^2<span class="pl-pds">"</span></span>
<span class="pl-c1">9.8</span> m s‚Åª¬≤

julia<span class="pl-k">&gt;</span> m <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>g<span class="pl-pds">"</span></span>
g

julia<span class="pl-k">&gt;</span> T <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>ùêì<span class="pl-pds">"</span></span>
ùêì

julia<span class="pl-k">&gt;</span> Œ∏ <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>NoDims<span class="pl-pds">"</span></span>
NoDims

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@setparameters</span> ‚Ñì g m T Œ∏
[ Info<span class="pl-k">:</span> <span class="pl-c1">Parameter</span>(s) registered<span class="pl-k">:</span>
[ Info<span class="pl-k">:</span>  ‚Ñì <span class="pl-k">=</span> m
[ Info<span class="pl-k">:</span>  g <span class="pl-k">=</span> <span class="pl-c1">9.8</span> m s‚Åª¬≤
[ Info<span class="pl-k">:</span>  m <span class="pl-k">=</span> g
[ Info<span class="pl-k">:</span>  T <span class="pl-k">=</span> ùêì
[ Info<span class="pl-k">:</span>  Œ∏ <span class="pl-k">=</span> NoDims

julia<span class="pl-k">&gt;</span> Œ†_str <span class="pl-k">=</span> <span class="pl-c1">pi_groups</span>(<span class="pl-c1">:String</span>)
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{String}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>‚Ñì^(-1//2)*g^(1//2)*T^(1//1)<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds">"</span>Œ∏^(1//1)<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> Œ† <span class="pl-k">=</span> <span class="pl-c1">pi_groups</span>(<span class="pl-c1">:Expr</span>)
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Expr}<span class="pl-k">:</span>
 :(‚Ñì <span class="pl-k">^</span> (<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> g <span class="pl-k">^</span> (<span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> T <span class="pl-k">^</span> (<span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">1</span>))
 :(Œ∏ <span class="pl-k">^</span> (<span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">1</span>)) </pre></div>
<p dir="auto">There are two adimensional groups, <code>Œ†[1]</code> and <code>Œ†[2]</code>.</p>
<p dir="auto">One can use <a href="https://github.com/korsbo/Latexify.jl">korsbo/Latexify.jl</a> to display the groups in Latex format, simply with</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Latexify

julia&gt; latexify(Œ†_str[1])
L&quot;$g^{\frac{1}{2}} \cdot \ell^{\frac{-1}{2}} \cdot T^{\frac{1}{1}}$&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Latexify

julia<span class="pl-k">&gt;</span> <span class="pl-c1">latexify</span>(Œ†_str[<span class="pl-c1">1</span>])
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span>$g^{<span class="pl-cce">\f</span>rac{1}{2}} <span class="pl-cce">\c</span>dot <span class="pl-cce">\e</span>ll^{<span class="pl-cce">\f</span>rac{-1}{2}} <span class="pl-cce">\c</span>dot T^{<span class="pl-cce">\f</span>rac{1}{1}}$<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">This produces <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="0246aed946e95130fbef84121f5160a8">$g^{\frac{1}{2}} \cdot \ell^{\frac{-1}{2}} \cdot T^{\frac{1}{1}}$</math-renderer>.</p>
<p dir="auto">With the parameters above, one cannot evaluate the adimensional group since that would amount to multiplying Unitful.FreeUnits or Unitful.Quantities like the Unitful.Dimensions parameter <code>T</code>. That i not allowed by <code>Unitful.jl</code>. One can solve that, however, by substituting <code>T</code> with a unit. Then, we can either parse each element in the vector of strings returned by <code>pi_groups_str()</code> and evaluate that or we can use <code>pi_groups()</code> to obtain directly the corresponding expressions and evaluate the expressions.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; œÑ = u&quot;s&quot;
s

julia&gt; @setparameters ‚Ñì g m œÑ Œ∏
[ Info: Parameter(s) registered:
[ Info:  ‚Ñì = m
[ Info:  g = 9.8 m s‚Åª¬≤
[ Info:  m = g
[ Info:  œÑ = s
[ Info:  Œ∏ = NoDims

julia&gt; Œ† = pi_groups()
2-element Vector{Expr}:
 :(‚Ñì ^ (-1 // 2) * g ^ (1 // 2) * œÑ ^ (1 // 1))
 :(Œ∏ ^ (1 // 1))

julia&gt; eval(Œ†[1])
3.1304951684997055

julia&gt; eval(Œ†[2])
NoDims"><pre>julia<span class="pl-k">&gt;</span> œÑ <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>s<span class="pl-pds">"</span></span>
s

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@setparameters</span> ‚Ñì g m œÑ Œ∏
[ Info<span class="pl-k">:</span> <span class="pl-c1">Parameter</span>(s) registered<span class="pl-k">:</span>
[ Info<span class="pl-k">:</span>  ‚Ñì <span class="pl-k">=</span> m
[ Info<span class="pl-k">:</span>  g <span class="pl-k">=</span> <span class="pl-c1">9.8</span> m s‚Åª¬≤
[ Info<span class="pl-k">:</span>  m <span class="pl-k">=</span> g
[ Info<span class="pl-k">:</span>  œÑ <span class="pl-k">=</span> s
[ Info<span class="pl-k">:</span>  Œ∏ <span class="pl-k">=</span> NoDims

julia<span class="pl-k">&gt;</span> Œ† <span class="pl-k">=</span> <span class="pl-c1">pi_groups</span>()
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Expr}<span class="pl-k">:</span>
 :(‚Ñì <span class="pl-k">^</span> (<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> g <span class="pl-k">^</span> (<span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> œÑ <span class="pl-k">^</span> (<span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">1</span>))
 :(Œ∏ <span class="pl-k">^</span> (<span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">1</span>))

julia<span class="pl-k">&gt;</span> <span class="pl-c1">eval</span>(Œ†[<span class="pl-c1">1</span>])
<span class="pl-c1">3.1304951684997055</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">eval</span>(Œ†[<span class="pl-c1">2</span>])
NoDims</pre></div>
<p dir="auto">As expected, both are adimensional.</p>
<p dir="auto">Adimensional groups are not unique. Even if you find a single group, any power of it is also adimensional. If there is more than one adimensional group, then you can linearly combine them to find many others. They are associated to the span of the null space of a "parameter-to-dimension" matrix. The solver here will just pick one combination from the basis obtained for the null space.</p>
<p dir="auto">Finally, one can add parameters to a given set of registered parameters and solve for the new set.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; v = u&quot;m/s&quot;
m s‚Åª¬π

julia&gt; @addparameters v
[ Info: Parameter(s) registered:
[ Info:  ‚Ñì = m
[ Info:  g = 9.8 m s‚Åª¬≤
[ Info:  m = g
[ Info:  œÑ = s
[ Info:  Œ∏ = NoDims
[ Info:  v = m s‚Åª¬π

julia&gt; pi_groups()
3-element Vector{Expr}:
 :(‚Ñì ^ (-1 // 2) * g ^ (1 // 2) * œÑ ^ (1 // 1))
 :(Œ∏ ^ (1 // 1))
 :(‚Ñì ^ (-1 // 2) * g ^ (-1 // 2) * v ^ (1 // 1))"><pre>julia<span class="pl-k">&gt;</span> v <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m/s<span class="pl-pds">"</span></span>
m s‚Åª¬π

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@addparameters</span> v
[ Info<span class="pl-k">:</span> <span class="pl-c1">Parameter</span>(s) registered<span class="pl-k">:</span>
[ Info<span class="pl-k">:</span>  ‚Ñì <span class="pl-k">=</span> m
[ Info<span class="pl-k">:</span>  g <span class="pl-k">=</span> <span class="pl-c1">9.8</span> m s‚Åª¬≤
[ Info<span class="pl-k">:</span>  m <span class="pl-k">=</span> g
[ Info<span class="pl-k">:</span>  œÑ <span class="pl-k">=</span> s
[ Info<span class="pl-k">:</span>  Œ∏ <span class="pl-k">=</span> NoDims
[ Info<span class="pl-k">:</span>  v <span class="pl-k">=</span> m s‚Åª¬π

julia<span class="pl-k">&gt;</span> <span class="pl-c1">pi_groups</span>()
<span class="pl-c1">3</span><span class="pl-k">-</span>element Vector{Expr}<span class="pl-k">:</span>
 :(‚Ñì <span class="pl-k">^</span> (<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> g <span class="pl-k">^</span> (<span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> œÑ <span class="pl-k">^</span> (<span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">1</span>))
 :(Œ∏ <span class="pl-k">^</span> (<span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">1</span>))
 :(‚Ñì <span class="pl-k">^</span> (<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> g <span class="pl-k">^</span> (<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> v <span class="pl-k">^</span> (<span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">1</span>))</pre></div>
<p dir="auto">With <a href="https://github.com/korsbo/Latexify.jl">korsbo/Latexify.jl</a>, these yield</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; latexify.(pi_groups())
3-element Vector{LaTeXStrings.LaTeXString}:
 L&quot;$g^{\frac{1}{2}} \cdot \ell^{\frac{-1}{2}} \cdot \tau^{\frac{1}{1}}$&quot;
 L&quot;$\theta^{\frac{1}{1}}$&quot;
 L&quot;$g^{\frac{-1}{2}} \cdot \ell^{\frac{-1}{2}} \cdot v^{\frac{1}{1}}$&quot;"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">latexify</span>.(<span class="pl-c1">pi_groups</span>())
<span class="pl-c1">3</span><span class="pl-k">-</span>element Vector{LaTeXStrings<span class="pl-k">.</span>LaTeXString}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span>$g^{<span class="pl-cce">\f</span>rac{1}{2}} <span class="pl-cce">\c</span>dot <span class="pl-cce">\e</span>ll^{<span class="pl-cce">\f</span>rac{-1}{2}} <span class="pl-cce">\c</span>dot <span class="pl-cce">\t</span>au^{<span class="pl-cce">\f</span>rac{1}{1}}$<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span>$<span class="pl-cce">\t</span>heta^{<span class="pl-cce">\f</span>rac{1}{1}}$<span class="pl-pds">"</span></span>
 <span class="pl-s"><span class="pl-pds"><span class="pl-c1">L</span>"</span>$g^{<span class="pl-cce">\f</span>rac{-1}{2}} <span class="pl-cce">\c</span>dot <span class="pl-cce">\e</span>ll^{<span class="pl-cce">\f</span>rac{-1}{2}} <span class="pl-cce">\c</span>dot v^{<span class="pl-cce">\f</span>rac{1}{1}}$<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">which look like</p>
<ul dir="auto">
<li><math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="0246aed946e95130fbef84121f5160a8">$g^{\frac{1}{2}} \cdot \ell^{\frac{-1}{2}} \cdot \tau^{\frac{1}{1}}$</math-renderer></li>
<li><math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="0246aed946e95130fbef84121f5160a8">$\theta^{\frac{1}{1}}$</math-renderer></li>
<li><math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="0246aed946e95130fbef84121f5160a8">$g^{\frac{-1}{2}} \cdot \ell^{\frac{-1}{2}} \cdot v^{\frac{1}{1}}$</math-renderer></li>
</ul>
<h3 dir="auto">
<a id="user-content-reynolds-number" class="anchor" aria-hidden="true" href="#reynolds-number"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reynolds number</h3>
<p dir="auto">Another classical example of adimensional group is the Reynolds number.</p>
<p dir="auto">What could characterize how complicate a fluid flow is? We should certainly consider the parameters characterizing the fluid, such as <em>density</em> and <em>viscosity</em>. Then, there is the <em>velocity</em> the fluid moves. Less obvious is the <em>lenght scale</em> we consider, which we can consider as a length scale associated with the injection of energy into the system, such as the width of an obstacle, the distance between the walls of channel, the distance between the bars of a grids, and so on.</p>
<p dir="auto">With these parameters, the only possible adimensional group is the Reynolds number (or powers of it).</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; œÅ = u&quot;g/m^3&quot;
g m‚Åª¬≥

julia&gt; Œº = u&quot;g/m/s&quot;
g m‚Åª¬π s‚Åª¬π

julia&gt; u = u&quot;m/s&quot;
m s‚Åª¬π

julia&gt; ‚Ñì = u&quot;m&quot;
m

julia&gt; @setparameters œÅ Œº u ‚Ñì
[ Info: Parameter(s) registered:
[ Info:  œÅ = g m‚Åª¬≥
[ Info:  Œº = g m‚Åª¬π s‚Åª¬π
[ Info:  u = m s‚Åª¬π
[ Info:  ‚Ñì = m

julia&gt; pi_groups()
1-element Vector{String}:
 &quot;œÅ^(1//1)*Œº^(-1//1)*u^(1//1)*‚Ñì^(1//1)&quot;"><pre>julia<span class="pl-k">&gt;</span> œÅ <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>g/m^3<span class="pl-pds">"</span></span>
g m‚Åª¬≥

julia<span class="pl-k">&gt;</span> Œº <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>g/m/s<span class="pl-pds">"</span></span>
g m‚Åª¬π s‚Åª¬π

julia<span class="pl-k">&gt;</span> u <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m/s<span class="pl-pds">"</span></span>
m s‚Åª¬π

julia<span class="pl-k">&gt;</span> ‚Ñì <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">u</span>"</span>m<span class="pl-pds">"</span></span>
m

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@setparameters</span> œÅ Œº u ‚Ñì
[ Info<span class="pl-k">:</span> <span class="pl-c1">Parameter</span>(s) registered<span class="pl-k">:</span>
[ Info<span class="pl-k">:</span>  œÅ <span class="pl-k">=</span> g m‚Åª¬≥
[ Info<span class="pl-k">:</span>  Œº <span class="pl-k">=</span> g m‚Åª¬π s‚Åª¬π
[ Info<span class="pl-k">:</span>  u <span class="pl-k">=</span> m s‚Åª¬π
[ Info<span class="pl-k">:</span>  ‚Ñì <span class="pl-k">=</span> m

julia<span class="pl-k">&gt;</span> <span class="pl-c1">pi_groups</span>()
<span class="pl-c1">1</span><span class="pl-k">-</span>element Vector{String}<span class="pl-k">:</span>
 <span class="pl-s"><span class="pl-pds">"</span>œÅ^(1//1)*Œº^(-1//1)*u^(1//1)*‚Ñì^(1//1)<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">Again, we can use <a href="https://github.com/korsbo/Latexify.jl">korsbo/Latexify.jl</a> to display the adimensional group in Latex format:</p>
<p dir="auto"><math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="0246aed946e95130fbef84121f5160a8">$\rho^{\frac{1}{1}} \cdot \mu^{\frac{-1}{1}} \cdot u^{\frac{1}{1}} \cdot \ell^{\frac{1}{1}}$</math-renderer></p>
<p dir="auto">One can recognize this as the Reynolds number</p>
<p dir="auto"><math-renderer class="js-display-math" style="display: block" data-static-url="https://github.githubassets.com/static" data-run-id="0246aed946e95130fbef84121f5160a8">$$
\mathrm{Re} = \frac{\rho u \ell}
{\mu}
$$</math-renderer></p>
<h2 dir="auto">
<a id="user-content-the-internals" class="anchor" aria-hidden="true" href="#the-internals"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>The internals</h2>
<p dir="auto">The <a href="https://en.wikipedia.org/wiki/Buckingham_%CF%80_theorem" rel="nofollow">Buckingham-Pi Theorem</a> relies on the <a href="https://en.wikipedia.org/wiki/Rank%E2%80%93nullity_theorem" rel="nofollow">Rank-nulity Theorem</a>. A "parameter-to-dimension" matrix is composed, in which the columns correpond to the parameters and the rows to the collection of dimensions involved in the parameters. Each element in row i and column j corresponds to the power of the dimension i in the parameter j.</p>
<p dir="auto">The number of adimensional groups is the dimension of the kernel of the matrix. And the adimensional groups are obtained from a basis of the null space.</p>
<p dir="auto">When the powers are integers or rational numbers, which is usually the case, it is desirable to keep the type of these parameters when composing the matrix and when finding the null space and the associated adimensional Œ† groups.</p>
<p dir="auto">While <a href="https://github.com/ian-r-rose/buckinghampy">ian-r-rose/buckinghampy</a> uses <a href="https://www.sympy.org/en/index.html" rel="nofollow">SymPy</a> for symbolic manipulation of the powers of the parameters, to retain these types, we simply rely on the strong type system of the Julia language.</p>
<p dir="auto">The <code>LinearALgebra.nullspace</code>, however, uses the <code>LinearAlgebra.svd</code> factorization, which does not preserve the <code>Rational</code> type. The first version of our packaged used instead the ability of the <code>LU</code> decomposition in the <a href="https://docs.julialang.org/en/v1/stdlib/LinearAlgebra/" rel="nofollow">LinearAlgebra</a> standard package to retain the <code>Rational</code> eltype of the matrices. However <code>LinearAlgebra.lu</code> factorization implements only partial pivoting and fails with singular matrices.</p>
<p dir="auto">For this reason, we implemented our own LU factorization algorithm <a href="src/UnitfulBuckinghamPi.jl#L166">UnitfulBuckinghamPi.lu_pq()</a>, with full pivoting. Then, we find the null space from the U factor of the decomposition and by properly taking into account the column permutations used in the pivoting process.</p>
<h2 dir="auto">
<a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">This package is licensed under the <a href="https://opensource.org/licenses/MIT" rel="nofollow">MIT license</a> (see file <a href="LICENSE">LICENSE</a> in the root directory of the project).</p>
</article></div>