<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-neo4j-bolt-driver-for-julia" class="anchor" aria-hidden="true" href="#neo4j-bolt-driver-for-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Neo4j Bolt Driver for Julia</h1>
<p>Neo4jBolt.jl is a Julia port of the official <a href="https://github.com/neo4j/neo4j-python-driver/tree/1.7">Neo4j Driver (1.7)</a>. It supports Neo4j 3.0 and above using the fast binary Bolt protocal. The Bolt driver is designed to be much faster than the HTTP REST based driver.</p>
<h2><a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Todo</h2>
<p>Encrypted SSL connections and cluster routing have not yet been implemented in this version.</p>
<h2><a id="user-content-getting-started-with-neo4j" class="anchor" aria-hidden="true" href="#getting-started-with-neo4j"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Getting Started with Neo4j</h2>
<ul>
<li><a href="https://neo4j.com/docs/operations-manual/current/introduction/" rel="nofollow">Introduction (The Neo4j Operations Manual v3.5)</a></li>
<li><a href="https://neo4j.com/docs/operations-manual/current/installation/" rel="nofollow">Installation (The Neo4j Operations Manual v3.5)</a></li>
</ul>
<h2><a id="user-content-quick-examples" class="anchor" aria-hidden="true" href="#quick-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick Examples</h2>
<p>Here are a few usage examples. For a more extensive collection of examples see the integration tests in the test/integration directory of this repository.</p>
<h3><a id="user-content-run-cypher-statement" class="anchor" aria-hidden="true" href="#run-cypher-statement"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Run Cypher Statement</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Neo4jBolt  
      
driver <span class="pl-k">=</span> <span class="pl-c1">Neo4jBoltDriver</span>(<span class="pl-s"><span class="pl-pds">"</span>bolt://localhost:7687<span class="pl-pds">"</span></span>, auth<span class="pl-k">=</span>(<span class="pl-s"><span class="pl-pds">"</span>neo4j<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span>))

<span class="pl-c1">session</span>(driver) <span class="pl-k">do</span> sess
    result <span class="pl-k">=</span> <span class="pl-c1">run</span>(sess, <span class="pl-s"><span class="pl-pds">"</span>UNWIND(RANGE(1, 10)) AS z RETURN z<span class="pl-pds">"</span></span>)
    <span class="pl-k">for</span> record <span class="pl-k">in</span> result
        <span class="pl-c1">println</span>(record[<span class="pl-s"><span class="pl-pds">"</span>z<span class="pl-pds">"</span></span>])
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<h3><a id="user-content-run-simple-transaction" class="anchor" aria-hidden="true" href="#run-simple-transaction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Run Simple Transaction</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Neo4jBolt  
      
driver <span class="pl-k">=</span> <span class="pl-c1">Neo4jBoltDriver</span>(<span class="pl-s"><span class="pl-pds">"</span>bolt://localhost:7687<span class="pl-pds">"</span></span>, auth<span class="pl-k">=</span>(<span class="pl-s"><span class="pl-pds">"</span>neo4j<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span>))

<span class="pl-c1">session</span>(driver) <span class="pl-k">do</span> sess
    <span class="pl-c1">begin_transaction</span>(sess) <span class="pl-k">do</span> tx
        result <span class="pl-k">=</span> <span class="pl-c1">run</span>(tx, <span class="pl-s"><span class="pl-pds">"</span>CREATE (a:Person {name:'Alice'}) RETURN a<span class="pl-pds">"</span></span>)
        v <span class="pl-k">=</span> <span class="pl-c1">value</span>(<span class="pl-c1">single</span>(result))
        <span class="pl-c1">println</span>(v<span class="pl-k">.</span>labels <span class="pl-k">==</span> <span class="pl-c1">Set</span>([<span class="pl-s"><span class="pl-pds">"</span>Person<span class="pl-pds">"</span></span>]))
        <span class="pl-c1">println</span>(v<span class="pl-k">.</span>properties <span class="pl-k">==</span> <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-s"><span class="pl-pds">"</span>Alice<span class="pl-pds">"</span></span>))
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<h3><a id="user-content-unit-of-work-transactions" class="anchor" aria-hidden="true" href="#unit-of-work-transactions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Unit of Work transactions</h3>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Neo4jBolt  
      
driver <span class="pl-k">=</span> <span class="pl-c1">Neo4jBoltDriver</span>(<span class="pl-s"><span class="pl-pds">"</span>bolt://localhost:7687<span class="pl-pds">"</span></span>, auth<span class="pl-k">=</span>(<span class="pl-s"><span class="pl-pds">"</span>neo4j<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>password<span class="pl-pds">"</span></span>))
        
<span class="pl-k">function</span> <span class="pl-en">add_friend</span>(tx, args, kwargs)
    <span class="pl-c1">run</span>(tx, <span class="pl-s"><span class="pl-pds">"</span>MERGE (a:Person {name: <span class="pl-cce">\$</span>name}) <span class="pl-pds">"</span></span> <span class="pl-k">*</span>
            <span class="pl-s"><span class="pl-pds">"</span>MERGE (a)-[:KNOWS]-&gt;(friend:Person {name: <span class="pl-cce">\$</span>friend_name})<span class="pl-pds">"</span></span>, name<span class="pl-k">=</span>args[<span class="pl-c1">1</span>], friend_name<span class="pl-k">=</span>args[<span class="pl-c1">2</span>])
<span class="pl-k">end</span>

<span class="pl-k">function</span> <span class="pl-en">print_friends</span>(tx, args, kwargs)
    <span class="pl-k">for</span> record <span class="pl-k">in</span> <span class="pl-c1">run</span>(tx, <span class="pl-s"><span class="pl-pds">"</span>MATCH (a:Person)-[:KNOWS]-&gt;(friend) WHERE a.name = <span class="pl-cce">\$</span>name <span class="pl-pds">"</span></span> <span class="pl-k">*</span>
                          <span class="pl-s"><span class="pl-pds">"</span>RETURN friend.name ORDER BY friend.name<span class="pl-pds">"</span></span>, name<span class="pl-k">=</span>args[<span class="pl-c1">1</span>])
        <span class="pl-c1">println</span>(record[<span class="pl-s"><span class="pl-pds">"</span>friend.name<span class="pl-pds">"</span></span>])
    <span class="pl-k">end</span>
<span class="pl-k">end</span>        
        
<span class="pl-c1">session</span>(driver) <span class="pl-k">do</span> sess
    <span class="pl-c1">write_transaction</span>(sess, add_friend, <span class="pl-s"><span class="pl-pds">"</span>Arthur<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Guinevere<span class="pl-pds">"</span></span>)
    <span class="pl-c1">write_transaction</span>(sess, add_friend, <span class="pl-s"><span class="pl-pds">"</span>Arthur<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Lancelot<span class="pl-pds">"</span></span>)
    <span class="pl-c1">write_transaction</span>(sess, add_friend, <span class="pl-s"><span class="pl-pds">"</span>Arthur<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Merlin<span class="pl-pds">"</span></span>)
    <span class="pl-c1">read_transaction</span>(sess, print_friends, <span class="pl-s"><span class="pl-pds">"</span>Arthur<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
<h2><a id="user-content-implementation-details" class="anchor" aria-hidden="true" href="#implementation-details"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Implementation Details</h2>
<h3><a id="user-content-dates-and-times" class="anchor" aria-hidden="true" href="#dates-and-times"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Dates and Times</h3>
<p>By default Neo4j Date, Time and Duration types are returned as Julia Date, Time, DateTime, ZonedDateTime or Dates.CompoundPeriod types where appropriate. However, Julia Dates and Neo4j Dates are slightly incompatible. Specifically, Julia DateTimes do not support nanosecond time. Julia Times do not support TimeZones. Also Julia's TimeZone system is not entirely compatible with Neo4j's. As a workaround to these incompatibilities, you can choose to use the provided DateWrapper, TimeWrapper, DateTimeWrapper and DurationWrapper types instead. These wrap Neo4j's native representations in Julia struct types. To return these wrapper types from a query set <code>use_julia_dates=false</code> as a keyword argument to the <code>run</code> method.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Here a ZonedDateTime is returned but the nanosecods are truncated</span>

<span class="pl-c1">session</span>(tc<span class="pl-k">.</span>driver) <span class="pl-k">do</span> sess
      result <span class="pl-k">=</span> <span class="pl-c1">run</span>(sess,<span class="pl-s"><span class="pl-pds">"</span>RETURN datetime('1976-06-13T12:34:56.789012345[Europe/London]')<span class="pl-pds">"</span></span>)
      v <span class="pl-k">=</span> <span class="pl-c1">value</span>(<span class="pl-c1">single</span>(result))
      <span class="pl-c1">@test</span> <span class="pl-c1">isa</span>(v, ZonedDateTime)
      <span class="pl-c1">@test</span> v <span class="pl-k">==</span> <span class="pl-c1">ZonedDateTime</span>(<span class="pl-c1">DateTime</span>(<span class="pl-c1">1976</span>, <span class="pl-c1">6</span>, <span class="pl-c1">13</span>, <span class="pl-c1">12</span>, <span class="pl-c1">34</span>, <span class="pl-c1">56</span>, <span class="pl-c1">789</span>), <span class="pl-s"><span class="pl-pds"><span class="pl-c1">tz</span>"</span>Europe/London<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span>

<span class="pl-c"><span class="pl-c">#</span> Here a DateTimeWrapper is returned and nanosecods are not truncated</span>

<span class="pl-c1">session</span>(tc<span class="pl-k">.</span>driver) <span class="pl-k">do</span> sess
      result <span class="pl-k">=</span> <span class="pl-c1">run</span>(sess, <span class="pl-s"><span class="pl-pds">"</span>RETURN datetime('1976-06-13T12:34:56.789012345[Europe/London]')<span class="pl-pds">"</span></span>, use_julia_dates<span class="pl-k">=</span><span class="pl-c1">false</span>)
      v <span class="pl-k">=</span> <span class="pl-c1">value</span>(<span class="pl-c1">single</span>(result))
      <span class="pl-c1">@test</span> <span class="pl-c1">isa</span>(v, DateTimeWrapper)
      <span class="pl-c1">@test</span> v <span class="pl-k">==</span> <span class="pl-c1">DateTimeWrapper</span>(<span class="pl-c1">1976</span>, <span class="pl-c1">6</span>, <span class="pl-c1">13</span>, <span class="pl-c1">12</span>, <span class="pl-c1">34</span>, <span class="pl-c1">56</span>, <span class="pl-c1">789012345</span>, timezone<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Europe/London<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
</article></div>