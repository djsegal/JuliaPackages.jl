<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2><a id="user-content-decimalsjl-arbitrary-precision-decimal-floating-point-arithmetics-in-julia" class="anchor" aria-hidden="true" href="#decimalsjl-arbitrary-precision-decimal-floating-point-arithmetics-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Decimals.jl: Arbitrary precision decimal floating point arithmetics in Julia</h2>
<p><a href="https://travis-ci.org/JuliaMath/Decimals.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1d7c7b73f580d0c6d5385bb89c0b97639c53bdb1/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614d6174682f446563696d616c732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaMath/Decimals.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaMath/Decimals.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/d03f787c58017867c09b61f663fa01a439ec00c5/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c69614d6174682f446563696d616c732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaMath/Decimals.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>The <code>Decimals</code> package provides basic data type and functions for arbitrary precision <a href="https://en.wikipedia.org/wiki/Decimal_floating_point" rel="nofollow">decimal floating point</a> arithmetic in Julia. It supports addition, subtraction, negation, multiplication, division, and equality operations.</p>
<p>Why is this needed?  The following code in Julia gives an answer</p>
<pre><code>julia&gt; 0.1 + 0.2
0.30000000000000004
</code></pre>
<p>In words, the binary floating point arithmetics implemented in computers has finite resolution - not all real numbers (even within the limits) can be expressed exactly. While many scientific and engineering fields can handle this behavior, it is not acceptable in fields like finance, where it's important to be able to trust that $0.30 is actually 30 cents, rather than 30.000000000000004 cents.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Decimals<span class="pl-pds">"</span></span>)</pre></div>
<p>or just <code>Ctrl</code>+<code>]</code> and</p>
<div class="highlight highlight-source-julia"><pre>(v1<span class="pl-c1">.2</span>) pkg<span class="pl-k">&gt;</span> add Decimals</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Decimals</pre></div>
<h3><a id="user-content-creating-the-decimal-object" class="anchor" aria-hidden="true" href="#creating-the-decimal-object"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Creating the <code>Decimal</code> object</h3>
<p>You can parse <code>Decimal</code> objects from strings:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse</span>(Decimal, <span class="pl-s"><span class="pl-pds">"</span>0.2<span class="pl-pds">"</span></span>)
<span class="pl-c1">Decimal</span>(<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">parse</span>(Decimal, <span class="pl-s"><span class="pl-pds">"</span>-2.5e6<span class="pl-pds">"</span></span>)
<span class="pl-c1">Decimal</span>(<span class="pl-c1">1</span>,<span class="pl-c1">25</span>,<span class="pl-c1">5</span>)</pre></div>
<p>You can also construct <code>Decimal</code> objects from real numbers in Julia:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Decimal</span>(<span class="pl-c1">0.1</span>)
<span class="pl-c1">Decimal</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">Decimal</span>(<span class="pl-k">-</span><span class="pl-c1">1003</span>)
<span class="pl-c1">Decimal</span>(<span class="pl-c1">1</span>, <span class="pl-c1">1003</span>, <span class="pl-c1">0</span>)</pre></div>
<p>Or can create <code>Decimal</code> objects from either strings or numbers using <code>decimal</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">decimal</span>(<span class="pl-s"><span class="pl-pds">"</span>0.2<span class="pl-pds">"</span></span>)
<span class="pl-c1">Decimal</span>(<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">decimal</span>(<span class="pl-c1">0.1</span>)
<span class="pl-c1">Decimal</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">decimal</span>(<span class="pl-s"><span class="pl-pds">"</span>-2.5e6<span class="pl-pds">"</span></span>)
<span class="pl-c1">Decimal</span>(<span class="pl-c1">1</span>,<span class="pl-c1">25</span>,<span class="pl-c1">5</span>)</pre></div>
<p>To convert back to a string or a number (float in this case):</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">decimal</span>(<span class="pl-s"><span class="pl-pds">"</span>0.2<span class="pl-pds">"</span></span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(x)
<span class="pl-s"><span class="pl-pds">"</span>0.2<span class="pl-pds">"</span></span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">number</span>(x)
<span class="pl-c1">0.2</span></pre></div>
<p>It is also possible to call the Decimal constructor directly, by specifying the sign (<code>s</code>), coefficient (<code>c</code>), and exponent (<code>q</code>):</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">Decimal</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-k">-</span><span class="pl-c1">2</span>)</pre></div>
<p>The numerical value of a Decimal is given by <code>(-1)^s * c * 10^q</code>.  <code>s</code> must be 0 (positive) or 1 (negative);  <code>c</code> must be non-negative; <code>c</code> and <code>q</code> must be integers.</p>
<h3><a id="user-content-operations" class="anchor" aria-hidden="true" href="#operations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Operations</h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> x, y <span class="pl-k">=</span> <span class="pl-c1">decimal</span>(<span class="pl-s"><span class="pl-pds">"</span>0.2<span class="pl-pds">"</span></span>), <span class="pl-c1">decimal</span>(<span class="pl-s"><span class="pl-pds">"</span>0.1<span class="pl-pds">"</span></span>);</pre></div>
<h4><a id="user-content-addition" class="anchor" aria-hidden="true" href="#addition"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Addition</h4>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(x <span class="pl-k">+</span> y)
<span class="pl-s"><span class="pl-pds">"</span>0.3<span class="pl-pds">"</span></span></pre></div>
<h4><a id="user-content-subtraction" class="anchor" aria-hidden="true" href="#subtraction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Subtraction</h4>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(x <span class="pl-k">-</span> y)
<span class="pl-s"><span class="pl-pds">"</span>0.1<span class="pl-pds">"</span></span></pre></div>
<h4><a id="user-content-negation" class="anchor" aria-hidden="true" href="#negation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Negation</h4>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-k">-</span>x)
<span class="pl-s"><span class="pl-pds">"</span>-0.2<span class="pl-pds">"</span></span></pre></div>
<h4><a id="user-content-multiplication" class="anchor" aria-hidden="true" href="#multiplication"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Multiplication</h4>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(x <span class="pl-k">*</span> y)
<span class="pl-s"><span class="pl-pds">"</span>0.02<span class="pl-pds">"</span></span></pre></div>
<h4><a id="user-content-division" class="anchor" aria-hidden="true" href="#division"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Division</h4>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(x <span class="pl-k">/</span> y)
<span class="pl-s"><span class="pl-pds">"</span>2<span class="pl-pds">"</span></span></pre></div>
<h4><a id="user-content-inversion" class="anchor" aria-hidden="true" href="#inversion"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Inversion</h4>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(<span class="pl-c1">inv</span>(x))
<span class="pl-s"><span class="pl-pds">"</span>5<span class="pl-pds">"</span></span></pre></div>
<h4><a id="user-content-broadcasting" class="anchor" aria-hidden="true" href="#broadcasting"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Broadcasting</h4>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> [x y] <span class="pl-k">.*</span> <span class="pl-c1">2</span>
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{Decimal,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Decimal</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)
 <span class="pl-c1">Decimal</span>(<span class="pl-c1">0</span>,<span class="pl-c1">5</span>,<span class="pl-k">-</span><span class="pl-c1">2</span>)</pre></div>
<h4><a id="user-content-equals--and-isequal" class="anchor" aria-hidden="true" href="#equals--and-isequal"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Equals (<code>==</code> and <code>isequal</code>)</h4>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> x <span class="pl-k">==</span> <span class="pl-c1">decimal</span>(<span class="pl-s"><span class="pl-pds">"</span>0.2<span class="pl-pds">"</span></span>)
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> x <span class="pl-k">!=</span> <span class="pl-c1">decimal</span>(<span class="pl-s"><span class="pl-pds">"</span>0.1<span class="pl-pds">"</span></span>)
<span class="pl-c1">true</span></pre></div>
<h4><a id="user-content-inequality" class="anchor" aria-hidden="true" href="#inequality"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Inequality</h4>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> x <span class="pl-k">&gt;=</span> y
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">isless</span>(x, y)
<span class="pl-c1">false</span></pre></div>
<h4><a id="user-content--returns-true-for-decimal-vs-number-comparisons" class="anchor" aria-hidden="true" href="#-returns-true-for-decimal-vs-number-comparisons"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>==</code> returns true for Decimal vs. Number comparisons</h4>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> x <span class="pl-k">==</span> <span class="pl-c1">0.2</span>
<span class="pl-c1">true</span></pre></div>
<h4><a id="user-content-rounding" class="anchor" aria-hidden="true" href="#rounding"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Rounding</h4>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">round</span>(<span class="pl-c1">decimal</span>(<span class="pl-c1">3.1415</span>), digits<span class="pl-k">=</span><span class="pl-c1">2</span>)
<span class="pl-c1">Decimal</span>(<span class="pl-c1">0</span>,<span class="pl-c1">314</span>,<span class="pl-k">-</span><span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">string</span>(ans)
<span class="pl-s"><span class="pl-pds">"</span>3.14<span class="pl-pds">"</span></span></pre></div>
<h2><a id="user-content-comparison-with-other-packages" class="anchor" aria-hidden="true" href="#comparison-with-other-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Comparison with other packages</h2>
<p>Unlike another Julia package called <a href="https://github.com/JuliaMath/DecFP.jl"><code>DecFP</code></a>, which aims at implementing the <a href="https://en.wikipedia.org/wiki/IEEE_754-2008_revision" rel="nofollow">IEEE 754-2008 standard</a> introducing 32, 64, and 64-bit precisions (<a href="https://en.wikipedia.org/wiki/Decimal32_floating-point_format" rel="nofollow">decimal32</a>, <a href="https://en.wikipedia.org/wiki/Decimal64_floating-point_format" rel="nofollow">decimal64</a> and <a href="https://en.wikipedia.org/wiki/Decimal128_floating-point_format" rel="nofollow">decimal128</a>, respectively), this package allows arbitrary precision. Note, however, that in comparision with <code>DecFP</code>, which is is essentially a wrapper for a specialized <a href="https://software.intel.com/en-us/articles/intel-decimal-floating-point-math-library" rel="nofollow">Intel® Decimal Floating-Point Math Library</a>, the present package is more computationally demanding. If more computational efficiency is demanded, functions from <a href="http://www.bytereef.org/mpdecimal/index.html" rel="nofollow"><code>libmpdec</code></a> library can be called directly.</p>
<p>The closest equivalent (and inspiration) for the present package in Python is the standard built-in <a href="https://docs.python.org/3.7/library/decimal.html" rel="nofollow"><code>decimal</code></a> package, which is based on <a href="http://speleotrove.com/decimal/decarith.html" rel="nofollow">General Decimal Arithmetic Specification by IBM</a>. Since version 3.3 of Python, it is actually <a href="http://www.bytereef.org/mpdecimal/index.html" rel="nofollow"><code>libmpdec</code></a>/<a href="https://www.bytereef.org/mpdecimal/doc/cdecimal/index.html" rel="nofollow"><code>cdecimal</code></a> that is under the hood.</p>
<h2><a id="user-content-further-reading" class="anchor" aria-hidden="true" href="#further-reading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Further reading</h2>
<ol>
<li>What Every Programmer Should Know About Floating-Point Arithmetic!?!
or Why don’t my numbers add up? <a href="http://floating-point-gui.de/" rel="nofollow">floating-point-gui.de</a>.</li>
<li>Decimal Floating Point <a href="https://en.wikipedia.org/wiki/Decimal_floating_point" rel="nofollow">https://en.wikipedia.org/wiki/Decimal_floating_point</a></li>
<li>IEEE 754-2008 revision <a href="https://en.wikipedia.org/wiki/IEEE_754-2008_revision" rel="nofollow">https://en.wikipedia.org/wiki/IEEE_754-2008_revision</a></li>
<li>754-2008 - IEEE Standard for Floating-Point Arithmetic <a href="https://ieeexplore.ieee.org/document/4610935" rel="nofollow">https://ieeexplore.ieee.org/document/4610935</a> Superseeded by 754-2019 - IEEE Standard for Floating-Point Arithmetic <a href="https://ieeexplore.ieee.org/document/8766229" rel="nofollow">https://ieeexplore.ieee.org/document/8766229</a></li>
<li>Intel® Decimal Floating-Point Math Library <a href="https://software.intel.com/en-us/blogs/2008/03/06/intel-decimal-floating-point-math-library/" rel="nofollow">https://software.intel.com/en-us/blogs/2008/03/06/intel-decimal-floating-point-math-library/</a></li>
<li>General Decimal Arithmetic Specification, IBM, Version 1.70 – 7 Apr 2009 <a href="http://speleotrove.com/decimal/decarith.html" rel="nofollow">http://speleotrove.com/decimal/decarith.html</a></li>
<li><code>mpdecimal</code>, <code>libmpdec</code> - C/C++ library <a href="http://www.bytereef.org/mpdecimal/index.html" rel="nofollow">http://www.bytereef.org/mpdecimal/index.html</a></li>
<li><code>decimal</code> - Decimal fixed point and floating point arithmetic, module for Python <a href="https://docs.python.org/2/library/decimal.html" rel="nofollow">https://docs.python.org/2/library/decimal.html</a></li>
</ol>
</article></div>