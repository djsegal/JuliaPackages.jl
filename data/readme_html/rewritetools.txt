<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-rewritetools" class="anchor" aria-hidden="true" href="#rewritetools"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>RewriteTools</h1>
<p dir="auto"><a href="https://github.com/willow-ahrens/RewriteTools.jl/actions/workflows/ci.yml?query=branch%3Amain"><img src="https://github.com/willow-ahrens/RewriteTools.jl/actions/workflows/ci.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/willow-ahrens/RewriteTools.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e57f0813ca406a2f6c65c3a15b2b8b3973ac982d1571ed378f7405cd55eccbbb/68747470733a2f2f636f6465636f762e696f2f67682f77696c6c6f772d616872656e732f52657772697465546f6f6c732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/willow-ahrens/RewriteTools.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">RewriteTools.jl is a utility for term rewriting. RewriteTools.jl is a
fork of <a href="https://github.com/JuliaSymbolics/SymbolicUtils.jl">SymbolicUtils.jl</a>
version 1.17, preserving and simplifying only the functionality related to term
rewriting. The semantics of rewriter objects is different, and new ``expanders'' have been added which enable program enumeration. RewriteTools.jl is intended for use with custom ASTs that have syntax
which implements
<a href="https://github.com/willow-ahrens/SyntaxInterface.jl">SyntaxInterface.jl</a>.</p>
<h2 dir="auto"><a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Overview</h2>
<p dir="auto">Functions are documented with docstrings; we give a few examples here.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using RewriteTools

julia&gt; r = @slots a b c @rule (a * b) + (a * c) =&gt; term(*, a, term(+, b, c))

julia&gt; r(term(+, term(*, 1, 2), term(*, 1, 3)))
1 * (2 + 3)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> RewriteTools

julia<span class="pl-k">&gt;</span> r <span class="pl-k">=</span> <span class="pl-c1">@slots</span> a b c <span class="pl-c1">@rule</span> (a <span class="pl-k">*</span> b) <span class="pl-k">+</span> (a <span class="pl-k">*</span> c) <span class="pl-k">=&gt;</span> <span class="pl-c1">term</span>(<span class="pl-k">*</span>, a, <span class="pl-c1">term</span>(<span class="pl-k">+</span>, b, c))

julia<span class="pl-k">&gt;</span> <span class="pl-c1">r</span>(<span class="pl-c1">term</span>(<span class="pl-k">+</span>, <span class="pl-c1">term</span>(<span class="pl-k">*</span>, <span class="pl-c1">1</span>, <span class="pl-c1">2</span>), <span class="pl-c1">term</span>(<span class="pl-k">*</span>, <span class="pl-c1">1</span>, <span class="pl-c1">3</span>)))
<span class="pl-c1">1</span> <span class="pl-k">*</span> (<span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">3</span>)</pre></div>
</article></div>