<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-protostructs" class="anchor" aria-hidden="true" href="#protostructs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ProtoStructs</h1>
<p dir="auto"><a href="https://travis-ci.com/beastyblacksmith/ProtoStructs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0a42058c2b01b8e0b78c960fc0dec8f9a4e2caa78c31ed77fd5737e2a4d82318/68747470733a2f2f7472617669732d63692e636f6d2f626561737479626c61636b736d6974682f50726f746f537472756374732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/beastyblacksmith/ProtoStructs.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/beastyblacksmith/ProtoStructs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/07b706aff4da484220cc2516f2b252b54356df139eda773efd5b10f5128cc9cf/68747470733a2f2f636f6465636f762e696f2f67682f626561737479626c61636b736d6974682f50726f746f537472756374732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/beastyblacksmith/ProtoStructs.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">You are developing a new datastructure and are tired of restarting everytime you change your mind?
<code>ProtoStructs</code> lets you have <code>structs</code> which behave like they would have been redifined.</p>
<p dir="auto">Here is how you do</p>
<p dir="auto">Like:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ProtoStructs

@proto struct DevType
    a::Int = 1
    b::Float64 = 2.0
    c
end
a = DevType(a=1, b=2.0, c=&quot;3&quot;)
b = DevType(c=:boo)
c = DevType(2, 4.0, nothing)"><pre><span class="pl-k">using</span> ProtoStructs

<span class="pl-c1">@proto</span> <span class="pl-k">struct</span> DevType
    a<span class="pl-k">::</span><span class="pl-c1">Int</span> <span class="pl-k">=</span> <span class="pl-c1">1</span>
    b<span class="pl-k">::</span><span class="pl-c1">Float64</span> <span class="pl-k">=</span> <span class="pl-c1">2.0</span>
    c
<span class="pl-k">end</span>
a <span class="pl-k">=</span> <span class="pl-c1">DevType</span>(a<span class="pl-k">=</span><span class="pl-c1">1</span>, b<span class="pl-k">=</span><span class="pl-c1">2.0</span>, c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>3<span class="pl-pds">"</span></span>)
b <span class="pl-k">=</span> <span class="pl-c1">DevType</span>(c<span class="pl-k">=</span><span class="pl-c1">:boo</span>)
c <span class="pl-k">=</span> <span class="pl-c1">DevType</span>(<span class="pl-c1">2</span>, <span class="pl-c1">4.0</span>, <span class="pl-c1">nothing</span>)</pre></div>
<p dir="auto">Redefine at will, but please remove the <code>@proto</code> macro after developing.</p>
<hr>
<p dir="auto">There is also <a href="https://github.com/FedericoStra/RedefStructs.jl">Redef</a></p>
</article></div>