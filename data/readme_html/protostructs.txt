<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-protostructs" class="anchor" aria-hidden="true" href="#protostructs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ProtoStructs</h1>
<p><a href="https://travis-ci.com/beastyblacksmith/ProtoStructs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8737872fd34ef00944775ce07925837d85b634ca/68747470733a2f2f7472617669732d63692e636f6d2f626561737479626c61636b736d6974682f50726f746f537472756374732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/beastyblacksmith/ProtoStructs.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/beastyblacksmith/ProtoStructs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/c2126e14dee5c9b80286ad1bc69c6c5c69f0c0c9/68747470733a2f2f636f6465636f762e696f2f67682f626561737479626c61636b736d6974682f50726f746f537472756374732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/beastyblacksmith/ProtoStructs.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>You are developing a new datastructure and are tired of restarting everytime you change your mind?
<code>ProtoStructs</code> lets you have <code>structs</code> which can have any fields at construction.</p>
<p>Like:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> ProtoStructs

<span class="pl-c1">@proto</span> DevType
a <span class="pl-k">=</span> <span class="pl-c1">DevType</span>(a<span class="pl-k">=</span><span class="pl-c1">1</span>, b<span class="pl-k">=</span><span class="pl-c1">2.0</span>, c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>3<span class="pl-pds">"</span></span>)
b <span class="pl-k">=</span> <span class="pl-c1">DevType</span>(d<span class="pl-k">=</span><span class="pl-c1">complex</span>(<span class="pl-c1">1</span>), e<span class="pl-k">=</span><span class="pl-c1">true</span>)</pre></div>
<p>It is actually just a typed <code>NamedTuple</code>.</p>
</article></div>