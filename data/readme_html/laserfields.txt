<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-laserfields" class="anchor" aria-hidden="true" href="#laserfields"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LaserFields</h1>
<p dir="auto"><a href="https://jfeist.github.io/LaserFields.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://jfeist.github.io/LaserFields.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/jfeist/LaserFields.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/jfeist/LaserFields.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/jfeist/LaserFields.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ebe74a2167816f17fe6c61e1dde921a6c27c4059deccb81f24ab3107ff4d39b9/68747470733a2f2f636f6465636f762e696f2f67682f6a66656973742f4c617365724669656c64732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/jfeist/LaserFields.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><code>LaserFields.jl</code> is a library to describe the time-dependent electric fields of
a laser pulse. It implements the same pulse shapes and most of the features of
the <a href="https://github.com/jfeist/laserfields">laserfields library</a> written in
Fortran. Please see the documentation of that library for the parameter
meanings, conventions used, etc. In particular, the "main" constructor
<code>LaserField(; kwargs...)</code> accepts the same parameters as the Fortran library
parameter files as keyword arguments, and returns an instance of a subtype of
the abstract base type <code>LaserField</code> depending on the parameters. E.g., to create
a Gaussian pulse with a duration (defined as the FWHM of the intensity) of 6 fs,
a wavelength of 800 nm, a peak intensity of 1e14 W/cm^2, and with the peak at
time t=7fs, one should call</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="lf = LaserField(form=&quot;gaussianI&quot;, is_vecpot=true, lambda_nm=800,
                intensity_Wcm2=1e16, duration_as=6000, peak_time_as=7000)"><pre>lf <span class="pl-k">=</span> <span class="pl-c1">LaserField</span>(form<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>gaussianI<span class="pl-pds">"</span></span>, is_vecpot<span class="pl-k">=</span><span class="pl-c1">true</span>, lambda_nm<span class="pl-k">=</span><span class="pl-c1">800</span>,
                intensity_Wcm2<span class="pl-k">=</span><span class="pl-c1">1e16</span>, duration_as<span class="pl-k">=</span><span class="pl-c1">6000</span>, peak_time_as<span class="pl-k">=</span><span class="pl-c1">7000</span>)</pre></div>
<p dir="auto">Given a <code>LaserField</code> instance <code>lf</code>, the functions <code>E_field(lf,t)</code>,
<code>E_fourier(lf,ω)</code>, <code>A_field(lf,t)</code>, and <code>A_fourier(lf,ω)</code> can be used to obtain,
respectively, the electric field as a function of time, its Fourier transform
(implemented for most pulse shapes), the vector potential as a function of time,
and its Fourier transform. Calling the instance as a function, <code>lf(t)</code> returns
the electric field, i.e., is equivalent to <code>E_field(lf,t)</code>. The notebooks in the
<code>examples</code> folder show some ways to use the library, including how to define a
set of fields through a YAML configuration file.</p>
<p dir="auto">The "effective" duration of the pulse for n-photon processes can be obtained as
<code>lf.Teff(n_photon)</code>, which is the integral over the pulse intensity envelope to
the n-th power (i.e., electric field envelope to the (2n)th power) over the
pulse, see, e.g., <a href="https://doi.org/10.1103/PhysRevA.77.043420" rel="nofollow">https://doi.org/10.1103/PhysRevA.77.043420</a> (Eq. 14).</p>
</article></div>