<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-textparse" class="anchor" aria-hidden="true" href="#textparse"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TextParse</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/queryverse/TextParse.jl/workflows/Run%20CI%20on%20master/badge.svg"><img src="https://github.com/queryverse/TextParse.jl/workflows/Run%20CI%20on%20master/badge.svg" alt="" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/queryverse/TextParse.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5a05f4e9f3ef0a54f2703b3a84251050fcd4bc6f/68747470733a2f2f636f6465636f762e696f2f67682f717565727976657273652f5465787450617273652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/queryverse/TextParse.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>TextParse uses Julia's generated functions to generate efficient specialized parsers for text files. Right now, there is a good set of features for reading CSV files (see <a href="https://www.queryverse.org/TextParse.jl/stable/" rel="nofollow">the documentation</a>). Parsing packages can use TextParse as a framework for implementing parsers for other formats.</p>
<h2><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Related packages</h2>
<ul>
<li><a href="https://github.com/JuliaData/CSV.jl">CSV.jl</a> - Package for reading CSV files into <a href="https://github.com/JuliaData/Tables.jl">Tables</a> API. It loads the data into a <code>DataFrame</code>. TextParse tries to be minimal and returns a tuple of vectors as the output of <code>csvread</code> and adds useful features such as parsing string columns as PooledArrays.</li>
<li><a href="https://github.com/queryverse/CSVFiles.jl">CSVFiles.jl</a> - Package for reading CSV via the <a href="https://github.com/JuliaIO/FileIO.jl">FileIO.jl</a> API into any <a href="https://github.com/queryverse/IterableTables.jl">IterableTables.jl</a> sink. The package uses <a href="https://github.com/queryverse/TextParse.jl">TextParse.jl</a> for parsing.</li>
</ul>
<p><a href="https://www.queryverse.org/TextParse.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://www.queryverse.org/TextParse.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
</article></div>