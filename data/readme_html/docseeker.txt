<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-docseeker" class="anchor" aria-hidden="true" href="#docseeker"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DocSeeker</h1>
<p><a href="https://travis-ci.org/JunoLab/DocSeeker.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0d7eb29e59ce60750cfeefe305b90950706f3ecdfb132cfc08e528833ece20fd/68747470733a2f2f7472617669732d63692e6f72672f4a756e6f4c61622f446f635365656b65722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JunoLab/DocSeeker.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>DocSeeker.jl provides utilities for handling documentation in local (so far) packages.</p>
<h3><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h3>
<p>The main entry point is <code>searchdocs(needle::AbstractString)</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="searchdocs(&quot;sin&quot;)
"><pre><span class="pl-c1">searchdocs</span>(<span class="pl-s"><span class="pl-pds">"</span>sin<span class="pl-pds">"</span></span>)</pre></div>
<p>will return a vector of tuples of scores and their corresponding match. Scores are numbers
between 0 and 1, and represent the quality of a given match. Matches are <code>DocObj</code>, which
accumulate lots of metadata about a binding (e.g. name, type, location etc.).</p>
<p><code>searchdocs</code> takes three keyword arguments:</p>
<ul>
<li><code>loaded::Bool = true</code> will search only packages in the current session, while <code>loaded = false</code> will search in <em>all</em> locally installed packages (actually only those in <code>Pkg.installed()</code>). Requires a call to <code>DocSeeker.createdocsdb()</code> beforehand.</li>
<li><code>mod::Module = Main</code> will filter out bindings that can't be reached from the given module -- by default every loaded package will be searched.</li>
<li><code>maxreturns::Int = DocSeeker.MAX_RETURN_SIZE = 20</code> will specify the maximum number of the results</li>
<li><code>exportedonly::Bool = false</code> will search all names a module has, while <code>exportedonly = true</code> only takes exported names into consideration.</li>
<li><code>name_only::Bool = false</code> will respect equalities between <code>needle</code> and both a binding's name and its doc text, while <code>name_only = true</code> only respects a equality to a binding's name.</li>
</ul>
<p>Re-generation of the cache that powers the search in all installed packages can be triggered
via <code>DocSeeker.createdocsdb()</code> (async, so no worries about killing you julia session). For now,
there is <em>no</em> automatic re-generation, though that'll be implemented soon.</p>
</article></div>