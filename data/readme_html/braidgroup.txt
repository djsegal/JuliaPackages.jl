<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-braidgroup" class="anchor" aria-hidden="true" href="#braidgroup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>BraidGroup</h1>
<p dir="auto"><a href="https://github.com/abraunst/BraidGroup.jl/actions/workflows/ci.yml?query=branch%3Amain"><img src="https://github.com/abraunst/BraidGroup.jl/actions/workflows/ci.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="nicebraid.svg"><img src="nicebraid.svg" alt="Compressed Braid" style="max-width: 100%;"></a></p>
<p dir="auto">This small package implements Artin's <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="11f42be7055389a9af30774cc7ab2893">$B_\infty$</math-renderer> Braid group and some tools.</p>
<p dir="auto">In particular, it implements:</p>
<ul dir="auto">
<li>Standard group operations, including <code>*</code>, <code>inv</code>, <code>^</code> and <code>one</code>
</li>
<li>Artin's free simplification <code>freesimplify!</code>
</li>
<li>
<a href="https://www.lmno.cnrs.fr/archives/dehornoy/Papers/Dfo.pdf" rel="nofollow">Dehornoy</a> reduction <code>reduced</code>, allowing to implement Braid equivalence <code>==</code>.</li>
<li>Nice <code>Braid</code> visualizations using <code>Compose</code>
</li>
<li>Braid minimization (Alg 2.2) in <a href="https://eprint.iacr.org/2018/491.pdf" rel="nofollow">Kotov et al</a>
</li>
<li>Compressed braid visualization, with parallel strand crossings. This is not the default, invoque with <code>composed(braid, compressed=true)</code>. This has been used to produce the braid above.</li>
</ul>
<p dir="auto">It is similar in scope to <a href="https://github.com/jwvictor/Braids.jl">Braids.jl</a> from which it draws some inspiration. At difference with it, this package:</p>
<ul dir="auto">
<li>Represents the <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="11f42be7055389a9af30774cc7ab2893">$B_\infty$</math-renderer> group rather than <math-renderer class="js-inline-math" style="display: inline" data-static-url="https://github.githubassets.com/static" data-run-id="11f42be7055389a9af30774cc7ab2893">$B_n$</math-renderer>
</li>
<li>Internally represent braids as product of generators, whereas <code>Braids</code> stores powers of generators.</li>
<li>Implements both <code>MIME"text/html"</code> and <code>MIME"text/plain"</code> output</li>
<li>Operations are done in-place as much as possible: in particular, <code>reduced!</code> is almost non-allocating, and each H iteration is linear in the length of the braid.</li>
<li>On the negative side, the interesting matrix representation included in <code>Braids.jl</code> is not implemented.</li>
</ul>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; b = prod(braid(rand(1:5))^rand(-2:2) for i=1:40)"><pre>julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">prod</span>(<span class="pl-c1">braid</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>))<span class="pl-k">^</span><span class="pl-c1">rand</span>(<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">2</span>) <span class="pl-k">for</span> i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">40</span>)</pre></div>
<p dir="auto">displays in <code>MIME"text/html"</code> (e.g. in a notebook) as:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="braid.png"><img src="braid.png" alt="Example Braid" style="max-width: 100%;"></a></p>
<p dir="auto">and in plain text as:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="σ₂⁻²σ₅⁻²σ₄²σ₅⁻¹σ₂⁻²σ₁⁵σ₄σ₂⁻²σ₃⁻⁴σ₂⁻²σ₅σ₁⁻¹σ₃²σ₄²σ₃⁻⁵σ₁⁻²σ₄²σ₁⁻²σ₂⁻²"><pre>σ₂⁻²σ₅⁻²σ₄²σ₅⁻¹σ₂⁻²σ₁⁵σ₄σ₂⁻²σ₃⁻⁴σ₂⁻²σ₅σ₁⁻¹σ₃²σ₄²σ₃⁻⁵σ₁⁻²σ₄²σ₁⁻²σ₂⁻²</pre></div>
<p dir="auto">Note that in notebooks you can choose which <code>MIME</code> type to display.
It can be reduced to the unique simplified equivalent braid</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; reduced(b)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">reduced</span>(b)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="reducedbraid.png"><img src="reducedbraid.png" alt="Reduced Braid" style="max-width: 100%;"></a></p>
</article></div>