<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-measurementsjl" class="anchor" aria-hidden="true" href="#measurementsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Measurements.jl</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Code Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://juliaphysics.github.io/Measurements.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://github.com/JuliaPhysics/Measurements.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaPhysics/Measurements.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a></td>
<td align="center"><a href="https://coveralls.io/github/JuliaPhysics/Measurements.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/9cb559a90021b7d865a3c8f4bb3599d1349def9f01057d70a4226002a418d545/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c6961506879736963732f4d6561737572656d656e74732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://coveralls.io/repos/github/JuliaPhysics/Measurements.jl/badge.svg?branch=master" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="center"><a href="https://juliaphysics.github.io/Measurements.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></td>
<td align="center"></td>
<td align="center"><a href="https://codecov.io/gh/JuliaPhysics/Measurements.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fcf5e2cfd9535c11e70cf49db7dc28a5d67330d87d091e02795abdb1cd8ceb1f/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961506879736963732f4d6561737572656d656e74732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaPhysics/Measurements.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Introduction</h2>
<h3><a id="user-content-what-is-this-package-useful-for" class="anchor" aria-hidden="true" href="#what-is-this-package-useful-for"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>What Is This Package Useful For?</h3>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/error_bars_2x.png"><img src="docs/src/error_bars_2x.png" alt="image" style="max-width:100%;"></a></p>
<p><em>Image credit: "<a href="https://xkcd.com/2110/" rel="nofollow">xkcd: Error Bars</a>" (<a href="https://creativecommons.org/licenses/by-nc/2.5/" rel="nofollow">CC-BY-NC
2.5</a>)</em></p>
<p><a href="https://github.com/JuliaPhysics/Measurements.jl">Measurements.jl</a> relieves you
from the hassle of propagating
<a href="https://en.wikipedia.org/wiki/Measurement_uncertainty" rel="nofollow">uncertainties</a> coming
from physical measurements, when performing mathematical operations involving
them.  The <a href="https://en.wikipedia.org/wiki/Propagation_of_uncertainty" rel="nofollow">linear error propagation
theory</a> is employed to
propagate the errors.</p>
<p>This library is written in <a href="http://julialang.org/" rel="nofollow">Julia</a>, a modern high-level,
high-performance dynamic programming language designed for technical computing.</p>
<p>When used in the <a href="https://docs.julialang.org/en/v1/stdlib/REPL/" rel="nofollow">Julia interactive
session</a>, it can serve also as an
easy-to-use calculator.</p>
<h3><a id="user-content-features-list" class="anchor" aria-hidden="true" href="#features-list"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features List</h3>
<ul>
<li>Support for most mathematical operations available in Julia standard library
and special functions
from <a href="https://github.com/JuliaMath/SpecialFunctions.jl"><code>SpecialFunctions.jl</code></a>
package, involving real and complex numbers.  All existing functions that
accept <code>AbstractFloat</code> (and <code>Complex{AbstractFloat}</code> as well) arguments and
internally use already supported functions can in turn perform calculations
involving numbers with uncertainties without being redefined.  This greatly
enhances the power of <code>Measurements.jl</code> without effort for the users</li>
<li>Functional correlation between variables is correctly handled, so <code>x-x ≈ zero(x)</code>, <code>x/x ≈ one(x)</code>, <code>tan(x) ≈ sin(x)/cos(x)</code>, <code>cis(x) ≈ exp(im*x)</code>,
etc...</li>
<li>Support for
<a href="https://docs.julialang.org/en/v1/manual/integers-and-floating-point-numbers/#Arbitrary-Precision-Arithmetic-1" rel="nofollow">arbitrary precision</a>
(also called multiple precision) numbers with uncertainties.  This is useful
for measurements with very low relative error</li>
<li>Define arrays of measurements and perform calculations with them.  Some linear
algebra functions work out-of-the-box</li>
<li>Propagate uncertainty for any function of real arguments (including functions
based on
<a href="https://docs.julialang.org/en/v1/manual/calling-c-and-fortran-code/" rel="nofollow">C/Fortran calls</a>),
using <code>@uncertain</code>
<a href="https://docs.julialang.org/en/v1/manual/metaprogramming/" rel="nofollow">macro</a></li>
<li>Function to get the derivative and the gradient of an expression with respect
to one or more independent measurements</li>
<li>Functions to calculate
<a href="https://en.wikipedia.org/wiki/Standard_score" rel="nofollow">standard score</a> and
<a href="https://en.wikipedia.org/wiki/Weighted_arithmetic_mean" rel="nofollow">weighted mean</a></li>
<li>Parse strings to create measurement objects</li>
<li>Easy way to attach the uncertainty to a number using the <code>±</code> sign as infix
operator.  This syntactic sugar makes the code more readable and visually
appealing</li>
<li>Extensible in combination with external packages: you can propagate errors of
measurements with their physical units, perform numerical integration
with <a href="https://github.com/JuliaMath/QuadGK.jl"><code>QuadGK.jl</code></a>, numerical and
automatic differentiation, and much more.</li>
<li>Integration with <a href="https://github.com/JuliaPlots/Plots.jl"><code>Plots.jl</code></a>.</li>
</ul>
<p>The method used to handle functional correlation is described in this paper:</p>
<ul>
<li>M. Giordano, 2016, "Uncertainty propagation with functionally correlated
quantities", <a href="http://arxiv.org/abs/1610.08716" rel="nofollow">arXiv:1610.08716</a>
(Bibcode:
<a href="http://adsabs.harvard.edu/abs/2016arXiv161008716G" rel="nofollow"><code>2016arXiv161008716G</code></a>)</li>
</ul>
<p>A current limitation of the package is that it is not yet possible to define
quantities related by a correlation matrix.</p>
<p>If you use use this package for your research, please cite it.</p>
<h3><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h3>
<p>The complete manual of <code>Measurements.jl</code> is available at
<a href="https://juliaphysics.github.io/Measurements.jl/stable/" rel="nofollow">https://juliaphysics.github.io/Measurements.jl/stable/</a>.  There, people
interested in the details of the package, in order integrate the package in
their workflow, can can find a technical appendix explaining how the package
internally works.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>The latest version of <code>Measurements.jl</code> is available for Julia v1.0 and later
releases, and can be installed with <a href="https://julialang.github.io/Pkg.jl/stable/" rel="nofollow">Julia built-in package
manager</a>.  In a Julia session, after
entering the package manager mode with <code>]</code>, run the command</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="pkg&gt; update
pkg&gt; add Measurements
"><pre>pkg<span class="pl-k">&gt;</span> update
pkg<span class="pl-k">&gt;</span> add Measurements</pre></div>
<p>Older versions of this package are also available for Julia 0.4-0.7.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>After installing the package, you can start using it with</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Measurements
"><pre><span class="pl-k">using</span> Measurements</pre></div>
<p>The module defines a new <code>Measurement</code> data type.  <code>Measurement</code> objects can be
created with the two following constructors:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="measurement(value, uncertainty)
value ± uncertainty
"><pre><span class="pl-c1">measurement</span>(value, uncertainty)
value ± uncertainty</pre></div>
<p>where</p>
<ul>
<li><code>value</code> is the nominal value of the measurement</li>
<li><code>uncertainty</code> is its uncertainty, assumed to be a
<a href="https://en.wikipedia.org/wiki/Standard_deviation" rel="nofollow">standard deviation</a>.</li>
</ul>
<p>They are both subtype of <code>AbstractFloat</code>.  Some keyboard layouts provide an easy
way to type the <code>±</code> sign, if your does not, remember you can insert it in Julia
REPL with <code>\pm</code> followed by <code>TAB</code> key.  You can provide <code>value</code> and
<code>uncertainty</code> of any subtype of <code>Real</code> that can be converted to <code>AbstractFloat</code>.
Thus, <code>measurement(42, 33//12)</code> and <code>pi ± 0.1</code> are valid.</p>
<p><code>measurement(value)</code> creates a <code>Measurement</code> object with zero uncertainty, like
mathematical constants.  See below for further examples.</p>
<p>Every time you use one of the constructors above, you define a <em>new independent</em>
measurement.  Instead, when you perform mathematical operations involving
<code>Measurement</code> objects you create a quantity that is not independent, but rather
depends on really independent measurements.</p>
<p>Most mathematical operations are instructed, by
<a href="https://en.wikipedia.org/wiki/Operator_overloading" rel="nofollow">operator overloading</a>, to
accept <code>Measurement</code> type, and uncertainty is calculated exactly using analityc
expressions of functions’ derivatives.</p>
<p>In addition, it is possible to create a <code>Complex</code> measurement with
<code>complex(measurement(a, b), measurement(c, d))</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="measurement(string)
"><pre><span class="pl-c1">measurement</span>(string)</pre></div>
<p><code>measurement</code> function has also a method that enables you to create a
<code>Measurement</code> object from a string.</p>
<p>This module extends many methods defined in Julia’s mathematical standard
library, and some methods from widespread third-party packages as well.  This is
the case for most special functions
in <a href="https://github.com/JuliaMath/SpecialFunctions.jl"><code>SpecialFunctions.jl</code></a>
package, and the <code>quadgk</code> integration routine
from <a href="https://github.com/JuliaMath/QuadGK.jl"><code>QuadGK.jl</code></a> package.  See the
full manual for details.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Measurements

julia&gt; a = measurement(4.5, 0.1)
4.5 ± 0.1

julia&gt; b = 3.8 ± 0.4
3.8 ± 0.4

julia&gt; 2a + b
12.8 ± 0.4472135954999579

julia&gt; x = 8.4 ± 0.7

julia&gt; x - x
0.0 ± 0.0

julia&gt; x/x
1.0 ± 0.0

julia&gt; x*x*x - x^3
0.0 ± 0.0

julia&gt; sin(x)/cos(x) - tan(x)
-2.220446049250313e-16 ± 0.0 # They are equal within numerical accuracy
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Measurements

julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">measurement</span>(<span class="pl-c1">4.5</span>, <span class="pl-c1">0.1</span>)
<span class="pl-c1">4.5</span> ± <span class="pl-c1">0.1</span>

julia<span class="pl-k">&gt;</span> b <span class="pl-k">=</span> <span class="pl-c1">3.8</span> ± <span class="pl-c1">0.4</span>
<span class="pl-c1">3.8</span> ± <span class="pl-c1">0.4</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">2</span>a <span class="pl-k">+</span> b
<span class="pl-c1">12.8</span> ± <span class="pl-c1">0.4472135954999579</span>

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">8.4</span> ± <span class="pl-c1">0.7</span>

julia<span class="pl-k">&gt;</span> x <span class="pl-k">-</span> x
<span class="pl-c1">0.0</span> ± <span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> x<span class="pl-k">/</span>x
<span class="pl-c1">1.0</span> ± <span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> x<span class="pl-k">*</span>x<span class="pl-k">*</span>x <span class="pl-k">-</span> x<span class="pl-k">^</span><span class="pl-c1">3</span>
<span class="pl-c1">0.0</span> ± <span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sin</span>(x)<span class="pl-k">/</span><span class="pl-c1">cos</span>(x) <span class="pl-k">-</span> <span class="pl-c1">tan</span>(x)
<span class="pl-k">-</span><span class="pl-c1">2.220446049250313e-16</span> ± <span class="pl-c1">0.0</span> <span class="pl-c"><span class="pl-c">#</span> They are equal within numerical accuracy</span></pre></div>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p>The <code>Measurements.jl</code> package is licensed under the MIT "Expat" License.  The
original author is Mosè Giordano.</p>
<p>Please, cite the paper Giordano 2016 (<a href="http://arxiv.org/abs/1610.08716" rel="nofollow">http://arxiv.org/abs/1610.08716</a>) if you
employ this package in your research work.  For your convience, a BibTeX entry
is provided in the <a href="CITATION.bib"><code>CITATION.bib</code></a> file.</p>
</article></div>