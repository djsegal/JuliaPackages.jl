<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-fretboardsjl" class="anchor" aria-hidden="true" href="#fretboardsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Fretboards.jl</h1>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667"><img src="https://camo.githubusercontent.com/0058ce9713cb93a553c2f23207afbb49b1b852a70a4a24de20e2e816c58b299e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667" alt="lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-experimental-orange.svg" style="max-width: 100%;"></a>
<a href="https://github.com/tpapp/Fretboards.jl/actions?query=workflow%3ACI"><img src="https://github.com/tpapp/Fretboards.jl/workflows/CI/badge.svg" alt="build" style="max-width: 100%;"></a>
<a href="http://codecov.io/github/tpapp/Fretboards.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/178d3f05008c6c114db75b5a6ec519011777bb45aa63f8800026f771c127682c/687474703a2f2f636f6465636f762e696f2f6769746875622f74706170702f46726574626f617264732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/tpapp/Fretboards.jl/coverage.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">Julia package for visualizing chords on the guitar fretboard.</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<p dir="auto">Visualizing an <em>Esus4</em> chord.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Fretboards, Crayons, ANSIColoredPrinters
using Fretboards.Intervals

fb = Fretboard(STANDARD_TUNING, 12);
let root = pitch&quot;E&quot;
    for (mark, semitones, color) in [(&quot;1&quot;, 0, :red),
                                     (&quot;4&quot;, P4, :yellow),
                                     (&quot;5&quot;, P5, :green)]
        annotate_matches!(x -&gt; x.pitch ≂ root + semitones,
                          Annotation(mark, Crayon(foreground = color)), fb)
    end
end"><pre><span class="pl-k">using</span> Fretboards, Crayons, ANSIColoredPrinters
<span class="pl-k">using</span> Fretboards<span class="pl-k">.</span>Intervals

fb <span class="pl-k">=</span> <span class="pl-c1">Fretboard</span>(STANDARD_TUNING, <span class="pl-c1">12</span>);
<span class="pl-k">let</span> root <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">pitch</span>"</span>E<span class="pl-pds">"</span></span>
    <span class="pl-k">for</span> (mark, semitones, color) <span class="pl-k">in</span> [(<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span>, <span class="pl-c1">0</span>, <span class="pl-c1">:red</span>),
                                     (<span class="pl-s"><span class="pl-pds">"</span>4<span class="pl-pds">"</span></span>, P4, <span class="pl-c1">:yellow</span>),
                                     (<span class="pl-s"><span class="pl-pds">"</span>5<span class="pl-pds">"</span></span>, P5, <span class="pl-c1">:green</span>)]
        <span class="pl-c1">annotate_matches!</span>(x <span class="pl-k">-&gt;</span> x<span class="pl-k">.</span>pitch ≂ root <span class="pl-k">+</span> semitones,
                          <span class="pl-c1">Annotation</span>(mark, <span class="pl-c1">Crayon</span>(foreground <span class="pl-k">=</span> color)), fb)
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="example.svg"><img src="example.svg" alt="" style="max-width: 100%;"></a></p>
</article></div>