<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-this-package-is-not-maintained" class="anchor" aria-hidden="true" href="#this-package-is-not-maintained"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>THIS PACKAGE IS NOT MAINTAINED</h1>
<p dir="auto">Similar functionality has been implemented in <a href="https://github.com/JuliaDebug/Infiltrator.jl">Infiltrator.jl</a>. Please use that package instead of Exfiltrator.jl.</p>
<h1 dir="auto"><a id="user-content-exfiltrator" class="anchor" aria-hidden="true" href="#exfiltrator"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Exfiltrator</h1>
<p dir="auto"><a href="https://travis-ci.com/antoine-levitt/Exfiltrator.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/381e0744f2fbb3883f6eb444c3ce269f7d38cfb613e9da3aef45868bbe1161a6/68747470733a2f2f7472617669732d63692e636f6d2f616e746f696e652d6c65766974742f457866696c747261746f722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/antoine-levitt/Exfiltrator.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">Exfiltrator is the reverse of <a href="https://github.com/JuliaDebug/Infiltrator.jl">Infiltrator.jl</a>. It allows you to "exfiltrate" local variables from a function into the global scope.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Exfiltrator

julia&gt; function f(x)
           @exfiltrate
       end
f (generic function with 1 method)

julia&gt; f(2)

julia&gt; x
2"><pre><span class="pl-k">using</span> Exfiltrator

julia<span class="pl-k">&gt;</span> <span class="pl-k">function</span> <span class="pl-en">f</span>(x)
           <span class="pl-c1">@exfiltrate</span>
       <span class="pl-k">end</span>
f (generic <span class="pl-k">function</span> with <span class="pl-c1">1</span> method)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">f</span>(<span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> x
<span class="pl-c1">2</span></pre></div>
<p dir="auto">Also supported are <code>@exfiltrate VAR</code>, which exfiltrates the local variables to the global variable <code>VAR</code> as a named tuple, <code>@exfiltrate VAR x</code>, which exfiltrates only <code>x</code>, and the <code>@exfiltrate_push! ARR</code> and <code>@exfiltrate_push! ARR x</code> which push the exfiltrated variables to a global array.</p>
<p dir="auto">You can avoid typing <code>using Exfiltrator</code> by <code>using</code> it at the REPL and then using <code>Main.@exfiltrate</code> in your code.</p>
</article></div>