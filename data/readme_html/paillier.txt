<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><strong>Paillier.jl</strong> is a <a href="http://julialang.org/" rel="nofollow">Julia</a> package implementing the basics of
the <em>Paillier</em> partially homomorphic cryptosystem.</p>
<p><a href="https://travis-ci.org/hardbyte/Paillier.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ebcfb5214c42968d0b6a8ac2d21664f4e4f8ee5f/68747470733a2f2f7472617669732d63692e6f72672f68617264627974652f5061696c6c6965722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/hardbyte/Paillier.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://hardbyte.github.io/Paillier.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<p>The homomorphic properties of the paillier crypto system are:</p>
<ul>
<li>Encrypted numbers can be multiplied by a non encrypted scalar.</li>
<li>Encrypted numbers can be added together.</li>
</ul>
<h1><a id="user-content-warning---here-be-dragons" class="anchor" aria-hidden="true" href="#warning---here-be-dragons"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Warning - Here be dragons.</h1>
<p>This is rough! Don't use for anything serious yet! Not reviewed by a cryptographer.</p>
<p>Constant time functions have not been used, so this could be susceptible to timing
side channel attacks.</p>
<p>We don't obfuscate the results of encrypted math operations by default. This is an
optimization copied from <code>python-paillier</code>, however after any homomorphic operation -
before sharing an <code>EncryptedNumber</code> or <code>EncryptedArray</code> you must call <code>obfuscate()</code>
to secure the ciphertext. Ideally this will occur behind the scenes at serialization
time, but this library does not help with serialization (yet).</p>
<p>Based off the <a href="https://github.com/snipsco/paillier-libraries-benchmarks/tree/master/julia-sketch">sketch</a>
written by <a href="https://github.com/mortendahl">Morten Dahl</a> at <a href="https://snips.ai" rel="nofollow">Snips</a>, and the
<a href="https://github.com/data61/python-paillier">python-paillier</a> library written by
<a href="https://data61.csiro.au" rel="nofollow">CSIRO's Data61</a> as part of N1 Analytics.</p>
</article></div>