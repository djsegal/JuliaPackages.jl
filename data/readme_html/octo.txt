<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-octojl" class="anchor" aria-hidden="true" href="#octojl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Octo.jl</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Documentation</strong></th>
<th align="center"><strong>Build Status</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://wookay.github.io/docs/Octo.jl/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a></td>
<td align="center"><a href="https://github.com/wookay/Octo.jl/actions"><img src="https://github.com/wookay/Octo.jl/workflows/CI/badge.svg" alt="" style="max-width:100%;"></a>  <a href="https://codecov.io/gh/wookay/Octo.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/badf8ebaecc598a08f766af85c5b0cfaf951e30411c469bcc9fb08c94cf81a66/68747470733a2f2f636f6465636f762e696f2f67682f776f6f6b61792f4f63746f2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/wookay/Octo.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p><code>Octo.jl</code> is an SQL Query DSL in <a href="https://julialang.org" rel="nofollow">Julia</a>.
It also comes with a very useful tool called <a href="https://github.com/wookay/Octo.jl#repo">Repo</a>.
You could <code>Repo.get</code>, <code>Repo.insert!</code> <code>Repo.update!</code> <code>Repo.delete!</code> for many database drivers without hand-written SQL.</p>
<p>It's influenced by <a href="https://github.com/elixir-ecto/ecto">Ecto</a>.</p>
<ul>
<li><g-emoji class="g-emoji" alias="coffee" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png">☕️</g-emoji>   You can <a href="https://wookay.github.io/donate/" rel="nofollow">make a donation</a> to support this project.</li>
</ul>
<h2><a id="user-content-sql-query-dsl" class="anchor" aria-hidden="true" href="#sql-query-dsl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SQL Query DSL</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Octo.Adapters.SQL

julia&gt; struct User
       end

julia&gt; Schema.model(User, table_name=&quot;users&quot;)
| primary_key   | table_name   |
| ------------- | ------------ |
| id            | users        |

julia&gt; u = from(User)
FromItem users

julia&gt; [SELECT * FROM u]
SELECT * FROM users

julia&gt; [SELECT (u.name, u.salary) FROM u]
SELECT name, salary FROM users

julia&gt; [SELECT * FROM u WHERE u.id == 2]
SELECT * FROM users WHERE id = 2

julia&gt; to_sql([SELECT * FROM u WHERE u.id == 2])
&quot;SELECT * FROM users WHERE id = 2&quot;
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Octo<span class="pl-k">.</span>Adapters<span class="pl-k">.</span>SQL

julia<span class="pl-k">&gt;</span> <span class="pl-k">struct</span> User
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> Schema<span class="pl-k">.</span><span class="pl-c1">model</span>(User, table_name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>users<span class="pl-pds">"</span></span>)
<span class="pl-k">|</span> primary_key   <span class="pl-k">|</span> table_name   <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">-------------</span> <span class="pl-k">|</span> <span class="pl-k">------------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> id            <span class="pl-k">|</span> users        <span class="pl-k">|</span>

julia<span class="pl-k">&gt;</span> u <span class="pl-k">=</span> <span class="pl-c1">from</span>(User)
FromItem users

julia<span class="pl-k">&gt;</span> [SELECT <span class="pl-k">*</span> FROM u]
SELECT <span class="pl-k">*</span> FROM users

julia<span class="pl-k">&gt;</span> [SELECT (u<span class="pl-k">.</span>name, u<span class="pl-k">.</span>salary) FROM u]
SELECT name, salary FROM users

julia<span class="pl-k">&gt;</span> [SELECT <span class="pl-k">*</span> FROM u WHERE u<span class="pl-k">.</span>id <span class="pl-k">==</span> <span class="pl-c1">2</span>]
SELECT <span class="pl-k">*</span> FROM users WHERE id <span class="pl-k">=</span> <span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">to_sql</span>([SELECT <span class="pl-k">*</span> FROM u WHERE u<span class="pl-k">.</span>id <span class="pl-k">==</span> <span class="pl-c1">2</span>])
<span class="pl-s"><span class="pl-pds">"</span>SELECT * FROM users WHERE id = 2<span class="pl-pds">"</span></span></pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9a6272123e188d5871ce0a05311e7c4e383991fd4b9343d43a1f7c39cd09f230/68747470733a2f2f776f6f6b61792e6769746875622e696f2f646f63732f4f63746f2e6a6c2f6173736574732f6f63746f2f737472756374757265642e737667"><img src="https://camo.githubusercontent.com/9a6272123e188d5871ce0a05311e7c4e383991fd4b9343d43a1f7c39cd09f230/68747470733a2f2f776f6f6b61792e6769746875622e696f2f646f63732f4f63746f2e6a6c2f6173736574732f6f63746f2f737472756374757265642e737667" alt="structured.svg" data-canonical-src="https://wookay.github.io/docs/Octo.jl/assets/octo/structured.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-repo" class="anchor" aria-hidden="true" href="#repo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Repo</h2>
<p>Current supported database drivers:</p>
<ul>
<li>PostgreSQL(via <a href="https://github.com/invenia/LibPQ.jl">LibPQ.jl</a>)</li>
<li>SQLite(via <a href="https://github.com/JuliaDatabases/SQLite.jl">SQLite.jl</a></li>
<li>MySQL(via <a href="https://github.com/JuliaDatabases/MySQL.jl">MySQL.jl</a>)</li>
</ul>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Octo.Adapters.PostgreSQL

julia&gt; Repo.debug_sql()
LogLevelDebugSQL::RepoLogLevel = -1

julia&gt; Repo.connect(
           adapter = Octo.Adapters.PostgreSQL,
           dbname = &quot;postgresqltest&quot;,
           user = &quot;postgres&quot;,
       )
Octo.Repo.Connection(false, &quot;postgresqltest&quot;, Main.PostgreSQLLoader, PostgreSQL connection (CONNECTION_OK) with parameters:
  user = postgres
  passfile = /Users/wookyoung/.pgpass
  dbname = postgresqltest
  port = 5432
  client_encoding = UTF8
  options = -c DateStyle=ISO,YMD -c IntervalStyle=iso_8601 -c TimeZone=UTC
  application_name = LibPQ.jl
  sslmode = prefer
  sslcompression = 0
  gssencmode = disable
  target_session_attrs = any)

julia&gt; struct Employee
       end

julia&gt; Schema.model(Employee, table_name=&quot;Employee&quot;, primary_key=&quot;ID&quot;)
| primary_key   | table_name   |
| ------------- | ------------ |
| ID            | Employee     |

julia&gt; Repo.execute([DROP TABLE IF EXISTS Employee])
[ Info: DROP TABLE IF EXISTS Employee

julia&gt; Repo.execute(Raw(&quot;&quot;&quot;
           CREATE TABLE Employee (
               ID SERIAL,
               Name VARCHAR(255),
               Salary FLOAT(8),
               PRIMARY KEY (ID)
           )&quot;&quot;&quot;))
┌ Info: CREATE TABLE Employee (
│     ID SERIAL,
│     Name VARCHAR(255),
│     Salary FLOAT(8),
│     PRIMARY KEY (ID)
└ )

julia&gt; Repo.insert!(Employee, [
           (Name=&quot;Jeremy&quot;,  Salary=10000.50),
           (Name=&quot;Cloris&quot;,  Salary=20000.50),
           (Name=&quot;John&quot;,    Salary=30000.50),
           (Name=&quot;Hyunden&quot;, Salary=40000.50),
           (Name=&quot;Justin&quot;,  Salary=50000.50),
           (Name=&quot;Tom&quot;,     Salary=60000.50),
       ])
[ Info: INSERT INTO Employee (Name, Salary) VALUES ($1, $2) RETURNING ID    (Name = &quot;Jeremy&quot;, Salary = 10000.5), (Name = &quot;Cloris&quot;, Salary = 20000.5), (Name = &quot;John&quot;, Salary = 30000.5), (Name = &quot;Hyunden&quot;, Salary = 40000.5), (Name = &quot;Justin&quot;, Salary = 50000.5), (Name = &quot;Tom&quot;, Salary = 60000.5)
|   id |   num_affected_rows |
| ---- | ------------------- |
|    6 |                   6 |

julia&gt; Repo.get(Employee, 2)
[ Info: SELECT * FROM Employee WHERE ID = 2
|   id | name     |    salary |
| ---- | -------- | --------- |
|    2 | Cloris   |   20000.5 |
1 row.

julia&gt; Repo.get(Employee, 2:5)
[ Info: SELECT * FROM Employee WHERE ID BETWEEN 2 AND 5
|   id | name      |    salary |
| ---- | --------- | --------- |
|    2 | Cloris    |   20000.5 |
|    3 | John      |   30000.5 |
|    4 | Hyunden   |   40000.5 |
|    5 | Justin    |   50000.5 |
4 rows.

julia&gt; Repo.get(Employee, (Name=&quot;Jeremy&quot;,))
[ Info: SELECT * FROM Employee WHERE Name = 'Jeremy'
|   id | name     |    salary |
| ---- | -------- | --------- |
|    1 | Jeremy   |   10000.5 |
1 row.

julia&gt; Repo.query(Employee)
[ Info: SELECT * FROM Employee
|   id | name      |    salary |
| ---- | --------- | --------- |
|    1 | Jeremy    |   10000.5 |
|    2 | Cloris    |   20000.5 |
|    3 | John      |   30000.5 |
|    4 | Hyunden   |   40000.5 |
|    5 | Justin    |   50000.5 |
|    6 | Tom       |   60000.5 |
6 rows.

julia&gt; Repo.insert!(Employee, (Name=&quot;Jessica&quot;, Salary=70000.50))
[ Info: INSERT INTO Employee (Name, Salary) VALUES ($1, $2) RETURNING ID    (Name = &quot;Jessica&quot;, Salary = 70000.5)
|   id |   num_affected_rows |
| ---- | ------------------- |
|    7 |                   1 |

julia&gt; Repo.update!(Employee, (ID=2, Salary=85000))
[ Info: UPDATE Employee SET Salary = $1 WHERE ID = 2    85000
|   num_affected_rows |
| ------------------- |
|                   1 |

julia&gt; Repo.delete!(Employee, (ID=3,))
[ Info: DELETE FROM Employee WHERE ID = 3
|   num_affected_rows |
| ------------------- |
|                   1 |

julia&gt; Repo.delete!(Employee, 3:5)
[ Info: DELETE FROM Employee WHERE ID BETWEEN 3 AND 5
|   num_affected_rows |
| ------------------- |
|                   2 |

julia&gt; em = from(Employee)
FromItem Employee

julia&gt; Repo.query(em)
[ Info: SELECT * FROM Employee
|   id | name      |    salary |
| ---- | --------- | --------- |
|    1 | Jeremy    |   10000.5 |
|    6 | Tom       |   60000.5 |
|    7 | Jessica   |   70000.5 |
|    2 | Cloris    |   85000.0 |
4 rows.

julia&gt; Repo.query([SELECT * FROM em WHERE em.Name == &quot;Cloris&quot;])
[ Info: SELECT * FROM Employee WHERE Name = 'Cloris'
|   id | name     |    salary |
| ---- | -------- | --------- |
|    2 | Cloris   |   85000.0 |
1 row.

julia&gt; Repo.query(em, (Name=&quot;Cloris&quot;,))
[ Info: SELECT * FROM Employee WHERE Name = 'Cloris'
|   id | name     |    salary |
| ---- | -------- | --------- |
|    2 | Cloris   |   85000.0 |
1 row.

julia&gt; ❓ = Octo.PlaceHolder
PlaceHolder

julia&gt; Repo.query([SELECT * FROM em WHERE em.Name == ❓], [&quot;Cloris&quot;])
[ Info: SELECT * FROM Employee WHERE Name = $1    &quot;Cloris&quot;
|   id | name     |    salary |
| ---- | -------- | --------- |
|    2 | Cloris   |   85000.0 |
1 row.
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Octo<span class="pl-k">.</span>Adapters<span class="pl-k">.</span>PostgreSQL

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">debug_sql</span>()
LogLevelDebugSQL<span class="pl-k">::</span><span class="pl-c1">RepoLogLevel</span> <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">connect</span>(
           adapter <span class="pl-k">=</span> Octo<span class="pl-k">.</span>Adapters<span class="pl-k">.</span>PostgreSQL,
           dbname <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>postgresqltest<span class="pl-pds">"</span></span>,
           user <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>postgres<span class="pl-pds">"</span></span>,
       )
Octo<span class="pl-k">.</span>Repo<span class="pl-k">.</span><span class="pl-c1">Connection</span>(<span class="pl-c1">false</span>, <span class="pl-s"><span class="pl-pds">"</span>postgresqltest<span class="pl-pds">"</span></span>, Main<span class="pl-k">.</span>PostgreSQLLoader, PostgreSQL connection (CONNECTION_OK) with parameters<span class="pl-k">:</span>
  user <span class="pl-k">=</span> postgres
  passfile <span class="pl-k">=</span> <span class="pl-k">/</span>Users<span class="pl-k">/</span>wookyoung<span class="pl-k">/</span><span class="pl-k">.</span>pgpass
  dbname <span class="pl-k">=</span> postgresqltest
  port <span class="pl-k">=</span> <span class="pl-c1">5432</span>
  client_encoding <span class="pl-k">=</span> UTF8
  options <span class="pl-k">=</span> <span class="pl-k">-</span>c DateStyle<span class="pl-k">=</span>ISO,YMD <span class="pl-k">-</span>c IntervalStyle<span class="pl-k">=</span>iso_8601 <span class="pl-k">-</span>c TimeZone<span class="pl-k">=</span>UTC
  application_name <span class="pl-k">=</span> LibPQ<span class="pl-k">.</span>jl
  sslmode <span class="pl-k">=</span> prefer
  sslcompression <span class="pl-k">=</span> <span class="pl-c1">0</span>
  gssencmode <span class="pl-k">=</span> disable
  target_session_attrs <span class="pl-k">=</span> any)

julia<span class="pl-k">&gt;</span> <span class="pl-k">struct</span> Employee
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> Schema<span class="pl-k">.</span><span class="pl-c1">model</span>(Employee, table_name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Employee<span class="pl-pds">"</span></span>, primary_key<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>ID<span class="pl-pds">"</span></span>)
<span class="pl-k">|</span> primary_key   <span class="pl-k">|</span> table_name   <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">-------------</span> <span class="pl-k">|</span> <span class="pl-k">------------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> ID            <span class="pl-k">|</span> Employee     <span class="pl-k">|</span>

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">execute</span>([DROP TABLE IF EXISTS Employee])
[ Info<span class="pl-k">:</span> DROP TABLE IF EXISTS Employee

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">execute</span>(<span class="pl-c1">Raw</span>(<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">           CREATE TABLE Employee (</span>
<span class="pl-s">               ID SERIAL,</span>
<span class="pl-s">               Name VARCHAR(255),</span>
<span class="pl-s">               Salary FLOAT(8),</span>
<span class="pl-s">               PRIMARY KEY (ID)</span>
<span class="pl-s">           )<span class="pl-pds">"""</span></span>))
┌ Info<span class="pl-k">:</span> CREATE TABLE Employee (
│     ID SERIAL,
│     Name <span class="pl-c1">VARCHAR</span>(<span class="pl-c1">255</span>),
│     Salary <span class="pl-c1">FLOAT</span>(<span class="pl-c1">8</span>),
│     PRIMARY KEY (ID)
└ )

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">insert!</span>(Employee, [
           (Name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Jeremy<span class="pl-pds">"</span></span>,  Salary<span class="pl-k">=</span><span class="pl-c1">10000.50</span>),
           (Name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Cloris<span class="pl-pds">"</span></span>,  Salary<span class="pl-k">=</span><span class="pl-c1">20000.50</span>),
           (Name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>John<span class="pl-pds">"</span></span>,    Salary<span class="pl-k">=</span><span class="pl-c1">30000.50</span>),
           (Name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Hyunden<span class="pl-pds">"</span></span>, Salary<span class="pl-k">=</span><span class="pl-c1">40000.50</span>),
           (Name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Justin<span class="pl-pds">"</span></span>,  Salary<span class="pl-k">=</span><span class="pl-c1">50000.50</span>),
           (Name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Tom<span class="pl-pds">"</span></span>,     Salary<span class="pl-k">=</span><span class="pl-c1">60000.50</span>),
       ])
[ Info<span class="pl-k">:</span> INSERT INTO Employee (Name, Salary) VALUES (<span class="pl-k">$</span>1, <span class="pl-k">$</span>2) RETURNING ID    (Name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Jeremy<span class="pl-pds">"</span></span>, Salary <span class="pl-k">=</span> <span class="pl-c1">10000.5</span>), (Name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Cloris<span class="pl-pds">"</span></span>, Salary <span class="pl-k">=</span> <span class="pl-c1">20000.5</span>), (Name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>John<span class="pl-pds">"</span></span>, Salary <span class="pl-k">=</span> <span class="pl-c1">30000.5</span>), (Name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Hyunden<span class="pl-pds">"</span></span>, Salary <span class="pl-k">=</span> <span class="pl-c1">40000.5</span>), (Name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Justin<span class="pl-pds">"</span></span>, Salary <span class="pl-k">=</span> <span class="pl-c1">50000.5</span>), (Name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Tom<span class="pl-pds">"</span></span>, Salary <span class="pl-k">=</span> <span class="pl-c1">60000.5</span>)
<span class="pl-k">|</span>   id <span class="pl-k">|</span>   num_affected_rows <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">----</span> <span class="pl-k">|</span> <span class="pl-k">-------------------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">6</span> <span class="pl-k">|</span>                   <span class="pl-c1">6</span> <span class="pl-k">|</span>

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">get</span>(Employee, <span class="pl-c1">2</span>)
[ Info<span class="pl-k">:</span> SELECT <span class="pl-k">*</span> FROM Employee WHERE ID <span class="pl-k">=</span> <span class="pl-c1">2</span>
<span class="pl-k">|</span>   id <span class="pl-k">|</span> name     <span class="pl-k">|</span>    salary <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">----</span> <span class="pl-k">|</span> <span class="pl-k">--------</span> <span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">2</span> <span class="pl-k">|</span> Cloris   <span class="pl-k">|</span>   <span class="pl-c1">20000.5</span> <span class="pl-k">|</span>
<span class="pl-c1">1</span> row.

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">get</span>(Employee, <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">5</span>)
[ Info<span class="pl-k">:</span> SELECT <span class="pl-k">*</span> FROM Employee WHERE ID BETWEEN <span class="pl-c1">2</span> AND <span class="pl-c1">5</span>
<span class="pl-k">|</span>   id <span class="pl-k">|</span> name      <span class="pl-k">|</span>    salary <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">----</span> <span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">2</span> <span class="pl-k">|</span> Cloris    <span class="pl-k">|</span>   <span class="pl-c1">20000.5</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">3</span> <span class="pl-k">|</span> John      <span class="pl-k">|</span>   <span class="pl-c1">30000.5</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">4</span> <span class="pl-k">|</span> Hyunden   <span class="pl-k">|</span>   <span class="pl-c1">40000.5</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">5</span> <span class="pl-k">|</span> Justin    <span class="pl-k">|</span>   <span class="pl-c1">50000.5</span> <span class="pl-k">|</span>
<span class="pl-c1">4</span> rows.

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">get</span>(Employee, (Name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Jeremy<span class="pl-pds">"</span></span>,))
[ Info<span class="pl-k">:</span> SELECT <span class="pl-k">*</span> FROM Employee WHERE Name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">'</span>Jeremy<span class="pl-pds">'</span></span>
<span class="pl-k">|</span>   id <span class="pl-k">|</span> name     <span class="pl-k">|</span>    salary <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">----</span> <span class="pl-k">|</span> <span class="pl-k">--------</span> <span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">1</span> <span class="pl-k">|</span> Jeremy   <span class="pl-k">|</span>   <span class="pl-c1">10000.5</span> <span class="pl-k">|</span>
<span class="pl-c1">1</span> row.

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">query</span>(Employee)
[ Info<span class="pl-k">:</span> SELECT <span class="pl-k">*</span> FROM Employee
<span class="pl-k">|</span>   id <span class="pl-k">|</span> name      <span class="pl-k">|</span>    salary <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">----</span> <span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">1</span> <span class="pl-k">|</span> Jeremy    <span class="pl-k">|</span>   <span class="pl-c1">10000.5</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">2</span> <span class="pl-k">|</span> Cloris    <span class="pl-k">|</span>   <span class="pl-c1">20000.5</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">3</span> <span class="pl-k">|</span> John      <span class="pl-k">|</span>   <span class="pl-c1">30000.5</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">4</span> <span class="pl-k">|</span> Hyunden   <span class="pl-k">|</span>   <span class="pl-c1">40000.5</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">5</span> <span class="pl-k">|</span> Justin    <span class="pl-k">|</span>   <span class="pl-c1">50000.5</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">6</span> <span class="pl-k">|</span> Tom       <span class="pl-k">|</span>   <span class="pl-c1">60000.5</span> <span class="pl-k">|</span>
<span class="pl-c1">6</span> rows.

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">insert!</span>(Employee, (Name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Jessica<span class="pl-pds">"</span></span>, Salary<span class="pl-k">=</span><span class="pl-c1">70000.50</span>))
[ Info<span class="pl-k">:</span> INSERT INTO Employee (Name, Salary) VALUES (<span class="pl-k">$</span>1, <span class="pl-k">$</span>2) RETURNING ID    (Name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Jessica<span class="pl-pds">"</span></span>, Salary <span class="pl-k">=</span> <span class="pl-c1">70000.5</span>)
<span class="pl-k">|</span>   id <span class="pl-k">|</span>   num_affected_rows <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">----</span> <span class="pl-k">|</span> <span class="pl-k">-------------------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">7</span> <span class="pl-k">|</span>                   <span class="pl-c1">1</span> <span class="pl-k">|</span>

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">update!</span>(Employee, (ID<span class="pl-k">=</span><span class="pl-c1">2</span>, Salary<span class="pl-k">=</span><span class="pl-c1">85000</span>))
[ Info<span class="pl-k">:</span> UPDATE Employee SET Salary <span class="pl-k">=</span> <span class="pl-k">$</span>1 WHERE ID <span class="pl-k">=</span> <span class="pl-c1">2</span>    <span class="pl-c1">85000</span>
<span class="pl-k">|</span>   num_affected_rows <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">-------------------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>                   <span class="pl-c1">1</span> <span class="pl-k">|</span>

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">delete!</span>(Employee, (ID<span class="pl-k">=</span><span class="pl-c1">3</span>,))
[ Info<span class="pl-k">:</span> DELETE FROM Employee WHERE ID <span class="pl-k">=</span> <span class="pl-c1">3</span>
<span class="pl-k">|</span>   num_affected_rows <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">-------------------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>                   <span class="pl-c1">1</span> <span class="pl-k">|</span>

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">delete!</span>(Employee, <span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">5</span>)
[ Info<span class="pl-k">:</span> DELETE FROM Employee WHERE ID BETWEEN <span class="pl-c1">3</span> AND <span class="pl-c1">5</span>
<span class="pl-k">|</span>   num_affected_rows <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">-------------------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>                   <span class="pl-c1">2</span> <span class="pl-k">|</span>

julia<span class="pl-k">&gt;</span> em <span class="pl-k">=</span> <span class="pl-c1">from</span>(Employee)
FromItem Employee

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">query</span>(em)
[ Info<span class="pl-k">:</span> SELECT <span class="pl-k">*</span> FROM Employee
<span class="pl-k">|</span>   id <span class="pl-k">|</span> name      <span class="pl-k">|</span>    salary <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">----</span> <span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">1</span> <span class="pl-k">|</span> Jeremy    <span class="pl-k">|</span>   <span class="pl-c1">10000.5</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">6</span> <span class="pl-k">|</span> Tom       <span class="pl-k">|</span>   <span class="pl-c1">60000.5</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">7</span> <span class="pl-k">|</span> Jessica   <span class="pl-k">|</span>   <span class="pl-c1">70000.5</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">2</span> <span class="pl-k">|</span> Cloris    <span class="pl-k">|</span>   <span class="pl-c1">85000.0</span> <span class="pl-k">|</span>
<span class="pl-c1">4</span> rows.

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">query</span>([SELECT <span class="pl-k">*</span> FROM em WHERE em<span class="pl-k">.</span>Name <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">"</span>Cloris<span class="pl-pds">"</span></span>])
[ Info<span class="pl-k">:</span> SELECT <span class="pl-k">*</span> FROM Employee WHERE Name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">'</span>Cloris<span class="pl-pds">'</span></span>
<span class="pl-k">|</span>   id <span class="pl-k">|</span> name     <span class="pl-k">|</span>    salary <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">----</span> <span class="pl-k">|</span> <span class="pl-k">--------</span> <span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">2</span> <span class="pl-k">|</span> Cloris   <span class="pl-k">|</span>   <span class="pl-c1">85000.0</span> <span class="pl-k">|</span>
<span class="pl-c1">1</span> row.

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">query</span>(em, (Name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Cloris<span class="pl-pds">"</span></span>,))
[ Info<span class="pl-k">:</span> SELECT <span class="pl-k">*</span> FROM Employee WHERE Name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">'</span>Cloris<span class="pl-pds">'</span></span>
<span class="pl-k">|</span>   id <span class="pl-k">|</span> name     <span class="pl-k">|</span>    salary <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">----</span> <span class="pl-k">|</span> <span class="pl-k">--------</span> <span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">2</span> <span class="pl-k">|</span> Cloris   <span class="pl-k">|</span>   <span class="pl-c1">85000.0</span> <span class="pl-k">|</span>
<span class="pl-c1">1</span> row.

julia<span class="pl-k">&gt;</span> ❓ <span class="pl-k">=</span> Octo<span class="pl-k">.</span>PlaceHolder
PlaceHolder

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">query</span>([SELECT <span class="pl-k">*</span> FROM em WHERE em<span class="pl-k">.</span>Name <span class="pl-k">==</span> ❓], [<span class="pl-s"><span class="pl-pds">"</span>Cloris<span class="pl-pds">"</span></span>])
[ Info<span class="pl-k">:</span> SELECT <span class="pl-k">*</span> FROM Employee WHERE Name <span class="pl-k">=</span> <span class="pl-k">$</span>1    <span class="pl-s"><span class="pl-pds">"</span>Cloris<span class="pl-pds">"</span></span>
<span class="pl-k">|</span>   id <span class="pl-k">|</span> name     <span class="pl-k">|</span>    salary <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">----</span> <span class="pl-k">|</span> <span class="pl-k">--------</span> <span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">2</span> <span class="pl-k">|</span> Cloris   <span class="pl-k">|</span>   <span class="pl-c1">85000.0</span> <span class="pl-k">|</span>
<span class="pl-c1">1</span> row.</pre></div>
<h3><a id="user-content-subqueries" class="anchor" aria-hidden="true" href="#subqueries"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Subqueries</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; sub = from([SELECT * FROM em WHERE em.Salary &gt; 30000], :sub)
SubQuery (SELECT * FROM Employee WHERE Salary &gt; 30000) AS sub

julia&gt; Repo.query(sub)
[ Info: SELECT * FROM Employee WHERE Salary &gt; 30000
|   id | name      |    salary |
| ---- | --------- | --------- |
|    6 | Tom       |   60000.5 |
|    7 | Jessica   |   70000.5 |
|    2 | Cloris    |   85000.0 |
3 rows.

julia&gt; Repo.query([SELECT sub.Name FROM sub])
[ Info: SELECT sub.Name FROM (SELECT * FROM Employee WHERE Salary &gt; 30000) AS sub
| name      |
| --------- |
| Tom       |
| Jessica   |
| Cloris    |
3 rows.
"><pre>julia<span class="pl-k">&gt;</span> sub <span class="pl-k">=</span> <span class="pl-c1">from</span>([SELECT <span class="pl-k">*</span> FROM em WHERE em<span class="pl-k">.</span>Salary <span class="pl-k">&gt;</span> <span class="pl-c1">30000</span>], <span class="pl-c1">:sub</span>)
SubQuery (SELECT <span class="pl-k">*</span> FROM Employee WHERE Salary <span class="pl-k">&gt;</span> <span class="pl-c1">30000</span>) AS sub

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">query</span>(sub)
[ Info<span class="pl-k">:</span> SELECT <span class="pl-k">*</span> FROM Employee WHERE Salary <span class="pl-k">&gt;</span> <span class="pl-c1">30000</span>
<span class="pl-k">|</span>   id <span class="pl-k">|</span> name      <span class="pl-k">|</span>    salary <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">----</span> <span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">6</span> <span class="pl-k">|</span> Tom       <span class="pl-k">|</span>   <span class="pl-c1">60000.5</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">7</span> <span class="pl-k">|</span> Jessica   <span class="pl-k">|</span>   <span class="pl-c1">70000.5</span> <span class="pl-k">|</span>
<span class="pl-k">|</span>    <span class="pl-c1">2</span> <span class="pl-k">|</span> Cloris    <span class="pl-k">|</span>   <span class="pl-c1">85000.0</span> <span class="pl-k">|</span>
<span class="pl-c1">3</span> rows.

julia<span class="pl-k">&gt;</span> Repo<span class="pl-k">.</span><span class="pl-c1">query</span>([SELECT sub<span class="pl-k">.</span>Name FROM sub])
[ Info<span class="pl-k">:</span> SELECT sub<span class="pl-k">.</span>Name FROM (SELECT <span class="pl-k">*</span> FROM Employee WHERE Salary <span class="pl-k">&gt;</span> <span class="pl-c1">30000</span>) AS sub
<span class="pl-k">|</span> name      <span class="pl-k">|</span>
<span class="pl-k">|</span> <span class="pl-k">---------</span> <span class="pl-k">|</span>
<span class="pl-k">|</span> Tom       <span class="pl-k">|</span>
<span class="pl-k">|</span> Jessica   <span class="pl-k">|</span>
<span class="pl-k">|</span> Cloris    <span class="pl-k">|</span>
<span class="pl-c1">3</span> rows.</pre></div>
<h2><a id="user-content-colored-sql-statements" class="anchor" aria-hidden="true" href="#colored-sql-statements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Colored SQL statements</h2>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/653a3882c1f63a56e76f2343634f20b3ceabe052350fd07105b0ce3d45a252af/68747470733a2f2f7261772e6769746875622e636f6d2f776f6f6b61792f4f63746f2e6a6c2f6d61737465722f646f63732f696d616765732f636f6c6f7265645f73716c5f73746174656d656e74732e706e67"><img src="https://camo.githubusercontent.com/653a3882c1f63a56e76f2343634f20b3ceabe052350fd07105b0ce3d45a252af/68747470733a2f2f7261772e6769746875622e636f6d2f776f6f6b61792f4f63746f2e6a6c2f6d61737465722f646f63732f696d616765732f636f6c6f7265645f73716c5f73746174656d656e74732e706e67" alt="colored_sql_statements.png" data-canonical-src="https://raw.github.com/wookay/Octo.jl/master/docs/images/colored_sql_statements.png" style="max-width:100%;"></a></p>
<h2><a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Requirements</h2>
<p>You need <a href="https://julialang.org/downloads/" rel="nofollow">Julia</a>.</p>
<p><code>julia&gt;</code> type <code>]</code> key</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(v1.0) pkg&gt; add Octo
"><pre>(v1.<span class="pl-c1">0</span>) pkg<span class="pl-k">&gt;</span> add Octo</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(v1.0) pkg&gt; add LibPQ   # for PostgreSQL (depends on LibPQ.jl 1.4, 1.6)
(v1.0) pkg&gt; add SQLite  # for SQLite     (depends on SQLite.jl 1.1)
(v1.0) pkg&gt; add MySQL   # for MySQL      (depends on MySQL.jl 1.0, 1.1)
"><pre>(v1.<span class="pl-c1">0</span>) pkg<span class="pl-k">&gt;</span> add LibPQ   <span class="pl-c"><span class="pl-c">#</span> for PostgreSQL (depends on LibPQ.jl 1.4, 1.6)</span>
(v1.<span class="pl-c1">0</span>) pkg<span class="pl-k">&gt;</span> add SQLite  <span class="pl-c"><span class="pl-c">#</span> for SQLite     (depends on SQLite.jl 1.1)</span>
(v1.<span class="pl-c1">0</span>) pkg<span class="pl-k">&gt;</span> add MySQL   <span class="pl-c"><span class="pl-c">#</span> for MySQL      (depends on MySQL.jl 1.0, 1.1)</span></pre></div>
</article></div>