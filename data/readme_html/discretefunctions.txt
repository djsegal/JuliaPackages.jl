<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-discretefunctions" class="anchor" aria-hidden="true" href="#discretefunctions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DiscreteFunctions</h1>
<p dir="auto"><a href="https://travis-ci.com/scheinerman/DiscreteFunctions.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/41d81e120317db440d4a9b632502c7db81791fc741a819416764810b17cd2c2a/68747470733a2f2f7472617669732d63692e636f6d2f73636865696e65726d616e2f446973637265746546756e6374696f6e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/scheinerman/DiscreteFunctions.jl.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">This module defines the <code>DiscreteFunction</code> type which represents a
function defined on the set <code>{1,2,...,n}</code> (<code>n</code> must be positive).</p>
<h2 dir="auto"><a id="user-content-basic-constructor" class="anchor" aria-hidden="true" href="#basic-constructor"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Basic Constructor</h2>
<p dir="auto">A <code>DiscreteFunction</code> is created by providing a list of values either by
passing an array of <code>Int</code> values or as a list of <code>Int</code> arguments.
For example, to define a function <code>f</code> with <code>f(1)==2</code>, <code>f(2)==3</code>,
<code>f(3)==1</code>, and <code>f(4)==4</code> we do this:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using DiscreteFunctions

julia&gt; f = DiscreteFunction([2,3,1,4]);

julia&gt; g = DiscreteFunction(2,3,1,4);

julia&gt; f==g
true"><pre class="notranslate"><code>julia&gt; using DiscreteFunctions

julia&gt; f = DiscreteFunction([2,3,1,4]);

julia&gt; g = DiscreteFunction(2,3,1,4);

julia&gt; f==g
true
</code></pre></div>
<p dir="auto">Function evaluation may use either <code>f(x)</code> or <code>f[x]</code>. It is possible
to change the value of <code>f</code> at <code>x</code> using the latter.</p>
<h4 dir="auto"><a id="user-content-conversion-of-a-permutation-to-a-discretefunction" class="anchor" aria-hidden="true" href="#conversion-of-a-permutation-to-a-discretefunction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Conversion of a <code>Permutation</code> to a <code>DiscreteFunction</code></h4>
<p dir="auto">If <code>p</code> is a <code>Permutation</code> then <code>DiscreteFunction(p)</code> creates a
<code>DiscreteFunction</code> based on <code>p</code>.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using Permutations

julia&gt; p = RandomPermutation(6)
(1,6)(2,5,3,4)

julia&gt; DiscreteFunction(p)
DiscreteFunction on [6]
   1   2   3   4   5   6
   6   5   4   2   3   1"><pre class="notranslate"><code>julia&gt; using Permutations

julia&gt; p = RandomPermutation(6)
(1,6)(2,5,3,4)

julia&gt; DiscreteFunction(p)
DiscreteFunction on [6]
   1   2   3   4   5   6
   6   5   4   2   3   1
</code></pre></div>
<p dir="auto">Conversely, if <code>f</code> is a <code>DiscreteFunction</code> that is invertible, it can be
converted to a <code>Permutation</code> by <code>Permutation(f)</code>.</p>
<h4 dir="auto"><a id="user-content-conversion-of-a-matrix-to-a-discretefunction" class="anchor" aria-hidden="true" href="#conversion-of-a-matrix-to-a-discretefunction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Conversion of a <code>Matrix</code> to a <code>DiscreteFunction</code></h4>
<p dir="auto">Let <code>A</code> be a square matrix with exactly one nonzero element in each row.
Then <code>DiscreteFunction(A)</code> creates a <code>DiscreteFunction</code> <code>f</code> such that
<code>f[i]==j</code> exactly when <code>A[i,j] != 0</code>.</p>
<p dir="auto">This is the inverse of the <code>Matrix</code> function (see below). That is,
if <code>A==Matrix(f)</code> then <code>f==DiscreteFunction(A)</code>.</p>
<h2 dir="auto"><a id="user-content-special-constructors" class="anchor" aria-hidden="true" href="#special-constructors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Special Constructors</h2>
<ul dir="auto">
<li><code>IdentityFunction(n)</code> creates the identity function on the set <code>{1,2,...,n}</code>.</li>
<li><code>RandomFunction(n)</code> creates a random function on the set <code>{1,2,...,n}</code>.</li>
</ul>
<h2 dir="auto"><a id="user-content-operations-and-methods" class="anchor" aria-hidden="true" href="#operations-and-methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Operations and Methods</h2>
<p dir="auto">The composition of functions <code>f</code> and <code>g</code> is computed with <code>f*g</code>.
Exponentiation signals repeated composition,
i.e., <code>f^4</code> is the same as <code>f*f*f*f</code>.</p>
<p dir="auto">We can test if <code>f</code> is invertible using <code>has_inv(f)</code> and <code>inv(f)</code> returns the
inverse function (or throws an error if no inverse exists). This can also
be computed as <code>f^-1</code> and, in general, if <code>f</code> is invertible it can be raised
to negative exponents. The function <code>is_permutation</code> is a synonym for <code>has_inv</code>.</p>
<h4 dir="auto"><a id="user-content-other-methods" class="anchor" aria-hidden="true" href="#other-methods"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Other methods</h4>
<ul dir="auto">
<li><code>length(f)</code> returns the number of elements in <code>f</code>'s domain.</li>
<li><code>fixed_points(f)</code> returns a list of the fixed points in the function.</li>
<li><code>cycles(f)</code> returns a list of the cycles in the function.</li>
<li><code>image(f)</code> returns a <code>Set</code> containing the output values of <code>f</code>.</li>
<li><code>sources(f)</code> returns a list of all inputs to <code>f</code> that are not outputs of <code>f</code>.</li>
<li><code>Matrix(f)</code> returns a square, zero-one matrix with a one in position <code>i,j</code>
exactly when <code>f(i)==j</code>.</li>
<li><code>eigvals(f)</code> returns the eigenvalues of <code>Matrix(f)</code>.</li>
</ul>
<h4 dir="auto"><a id="user-content-expensive-operations" class="anchor" aria-hidden="true" href="#expensive-operations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Expensive operations</h4>
<ul dir="auto">
<li><code>all_functions(n)</code> returns an iterator for all functions defined on <code>1:n</code>.
Note that there are <code>n^n</code> such functions so this grows quickly.</li>
<li><code>sqrt(g)</code> returns a <code>DiscreteFunction</code> <code>f</code> such that <code>f*f==g</code> or throws an
error if no such function exists.  Found using integer linear programming.</li>
<li><code>all_sqrts(g)</code> returns a list of all square roots of <code>g</code>. Very slow.</li>
</ul>
<h2 dir="auto"><a id="user-content-extras" class="anchor" aria-hidden="true" href="#extras"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Extras</h2>
<p dir="auto">This is some additional code that is not automatically loaded by <code>using DiscreteFunctions</code>.
Use <code>include</code> on the appropriate file in the <code>src</code> directory.</p>
<h3 dir="auto"><a id="user-content-srctree_functionjl" class="anchor" aria-hidden="true" href="#srctree_functionjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>src/tree_function.jl</code></h3>
<p dir="auto">This file defines <code>tree2function(G::SimpleGraph)</code>. It assumes that <code>G</code> is a
tree with vertex set <code>1:n</code> and returns a <code>DiscreteFunction</code> defined by
pointing all edges to the root, <code>1</code>.</p>
<h3 dir="auto"><a id="user-content-srcdraw_functionjl" class="anchor" aria-hidden="true" href="#srcdraw_functionjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>src/draw_function.jl</code></h3>
<p dir="auto">This file defines <code>draw(f)</code> to give a picture of <code>f</code>.</p>
</article></div>