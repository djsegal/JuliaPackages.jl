<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text">
<h1 dir="auto"><a id="user-content-arrow" class="anchor" aria-hidden="true" href="#arrow"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Arrow</h1>
<p dir="auto"><a href="https://arrow.juliadata.org/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/14a2a1ed6db52b5c4a42d9619b9ef8bc1fd823b5d44418005622207eab59e84f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c7565266c6f676f3d6a756c6961" alt="docs" data-canonical-src="https://img.shields.io/badge/docs-latest-blue&amp;logo=julia" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaData/Arrow.jl/actions?query=workflow%3ACI"><img src="https://github.com/JuliaData/Arrow.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaData/Arrow.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b5c1ff3ae61ec4b17162c1b9f65d03158e461083fe6953dcc9a03d55ccbbeee7/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961446174612f4172726f772e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaData/Arrow.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://juliahub.com/ui/Packages/Arrow/QnF3w?t=2" rel="nofollow"><img src="https://camo.githubusercontent.com/8309854fb2062a6c234a9042907666f4f8fa5e8aa41f8872c722290d3cea93bb/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4172726f772f646570732e737667" alt="deps" data-canonical-src="https://juliahub.com/docs/Arrow/deps.svg" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/Arrow/QnF3w" rel="nofollow"><img src="https://camo.githubusercontent.com/f5a0f08b853c9a8acfe6b1f8d740b04800716ecbe6790e8072892cac34e76d20/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4172726f772f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/Arrow/version.svg" style="max-width: 100%;"></a>
<a href="https://juliahub.com/ui/Packages/Arrow/QnF3w" rel="nofollow"><img src="https://camo.githubusercontent.com/d849471f33b9a66adff1ddc0f3d875a0496bb8d7db73d1227fd88679b8db6e41/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4172726f772f706b676576616c2e737667" alt="pkgeval" data-canonical-src="https://juliahub.com/docs/Arrow/pkgeval.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This is a pure Julia implementation of the <a href="https://arrow.apache.org" rel="nofollow">Apache Arrow</a> data standard.  This package provides Julia <code>AbstractVector</code> objects for
referencing data that conforms to the Arrow standard.  This allows users to seamlessly interface Arrow formatted data with a great deal of existing Julia code.</p>
<p dir="auto">Please see this <a href="https://arrow.apache.org/docs/format/Columnar.html#physical-memory-layout" rel="nofollow">document</a> for a description of the Arrow memory layout.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The package can be installed by typing in the following in a Julia REPL:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg; Pkg.add(&quot;Arrow&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Arrow<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">or to use the official-apache code that follows the official apache release process, you can do:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg; Pkg.add(url=&quot;https://github.com/apache/arrow&quot;, subdir=&quot;julia/Arrow.jl&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/apache/arrow<span class="pl-pds">"</span></span>, subdir<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>julia/Arrow.jl<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-local-development" class="anchor" aria-hidden="true" href="#local-development"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Local Development</h2>
<p dir="auto">When developing on Arrow.jl it is recommended that you run the following to ensure that any
changes to ArrowTypes.jl are immediately available to Arrow.jl without requiring a release:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia --project -e 'using Pkg; Pkg.develop(path=&quot;src/ArrowTypes&quot;)'"><pre>julia --project -e <span class="pl-s"><span class="pl-pds">'</span>using Pkg; Pkg.develop(path="src/ArrowTypes")<span class="pl-pds">'</span></span></pre></div>
<h2 dir="auto"><a id="user-content-format-support" class="anchor" aria-hidden="true" href="#format-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Format Support</h2>
<p dir="auto">This implementation supports the 1.0 version of the specification, including support for:</p>
<ul dir="auto">
<li>All primitive data types</li>
<li>All nested data types</li>
<li>Dictionary encodings and messages</li>
<li>Extension types</li>
<li>Streaming, file, record batch, and replacement and isdelta dictionary messages</li>
</ul>
<p dir="auto">It currently doesn't include support for:</p>
<ul dir="auto">
<li>Tensors or sparse tensors</li>
<li>Flight RPC</li>
<li>C data interface</li>
</ul>
<p dir="auto">Third-party data formats:</p>
<ul dir="auto">
<li>CSV, parquet and avro support via the existing <a href="https://github.com/JuliaData/CSV.jl">CSV.jl</a>, <a href="https://github.com/JuliaIO/Parquet.jl">Parquet.jl</a> and <a href="https://github.com/JuliaData/Avro.jl">Avro.jl</a> packages</li>
<li>Other Tables.jl-compatible packages automatically supported (<a href="https://github.com/JuliaData/DataFrames.jl">DataFrames.jl</a>, <a href="https://github.com/JuliaData/JSONTables.jl">JSONTables.jl</a>, <a href="https://github.com/JuliaData/JuliaDB.jl">JuliaDB.jl</a>, <a href="https://github.com/JuliaDatabases/SQLite.jl">SQLite.jl</a>, <a href="https://github.com/JuliaDatabases/MySQL.jl">MySQL.jl</a>, <a href="https://github.com/JuliaDatabases/JDBC.jl">JDBC.jl</a>, <a href="https://github.com/JuliaDatabases/ODBC.jl">ODBC.jl</a>, <a href="https://github.com/felipenoris/XLSX.jl">XLSX.jl</a>, etc.)</li>
<li>No current Julia packages support ORC</li>
</ul>
<p dir="auto">See the <a href="https://arrow.juliadata.org/dev/" rel="nofollow">full documentation</a> for details on reading and writing arrow data.</p>
</article></div>