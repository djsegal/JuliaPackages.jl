<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-physicalconstantsjl" class="anchor" aria-hidden="true" href="#physicalconstantsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PhysicalConstants.jl</h1>
<table>
<thead>
<tr>
<th align="center"><strong>Build Status</strong></th>
<th align="center"><strong>Code Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://travis-ci.org/JuliaPhysics/PhysicalConstants.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8180460ea5052ee09df4d86ffe907c9aa2742583/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961506879736963732f506879736963616c436f6e7374616e74732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaPhysics/PhysicalConstants.jl.svg?branch=master" style="max-width:100%;"></a></td>
<td align="center"><a href="https://coveralls.io/github/JuliaPhysics/PhysicalConstants.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/c08c47f518461ae72c2f506849b075cda7e935e0/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c6961506879736963732f506879736963616c436f6e7374616e74732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://coveralls.io/repos/github/JuliaPhysics/PhysicalConstants.jl/badge.svg?branch=master" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="center"><a href="https://ci.appveyor.com/project/giordano/constants-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9335291889e0b77e63ab182897dbd9b244714102/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6374326e7832743338686f6b327679303f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/ct2nx2t38hok2vy0?svg=true" style="max-width:100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/JuliaPhysics/PhysicalConstants.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ba57b4218874bb7e91c545cb6ab411e478e90fcb/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961506879736963732f506879736963616c436f6e7374616e74732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="" data-canonical-src="https://codecov.io/gh/JuliaPhysics/PhysicalConstants.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Introduction</h2>
<p><code>PhysicalConstants.jl</code> provides common physical constants.  They are defined as
instances of the new <code>Constant</code> type, which is subtype of <code>AbstractQuantity</code>
(from <a href="https://github.com/ajkeller34/Unitful.jl"><code>Unitful.jl</code></a> package) and can
also be turned into <code>Measurement</code> objects (from
<a href="https://github.com/JuliaPhysics/Measurements.jl"><code>Measurements.jl</code></a> package) at
request.</p>
<p>Constants are grouped into different submodules, so that the user can choose
different datasets as needed.  Currently, 2014 and 2018 editions of
<a href="https://physics.nist.gov/cuu/Constants/" rel="nofollow">CODATA</a> recommended values of the
fundamental physical constants are provided.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>The latest version of <code>PhysicalConstants.jl</code> is available for Julia 1.0 and
later versions, and can be installed with <a href="https://julialang.github.io/Pkg.jl/stable/" rel="nofollow">Julia built-in package
manager</a>.  After entering the
package manager mode by pressing <code>]</code>, run the command</p>
<div class="highlight highlight-source-julia"><pre>pkg<span class="pl-k">&gt;</span> add PhysicalConstants</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<p>You can load the package as usual with <code>using PhysicalConstants</code> but this module
does not provide anything useful for the end-users.  You most probably want to
directly load the submodule with the dataset you are interested in.  For
example, for CODATA 2018 load <code>PhysicalConstants.CODATA2018</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> PhysicalConstants<span class="pl-k">.</span>CODATA2018

julia<span class="pl-k">&gt;</span> SpeedOfLightInVacuum
Speed of light <span class="pl-k">in</span> vacuum (c_0)
Value                         <span class="pl-k">=</span> <span class="pl-c1">2.99792458e8</span> m s<span class="pl-k">^-</span><span class="pl-c1">1</span>
Standard uncertainty          <span class="pl-k">=</span> (exact)
Relative standard uncertainty <span class="pl-k">=</span> (exact)
Reference                     <span class="pl-k">=</span> CODATA <span class="pl-c1">2018</span>

julia<span class="pl-k">&gt;</span> NewtonianConstantOfGravitation
Newtonian constant of gravitation (G)
Value                         <span class="pl-k">=</span> <span class="pl-c1">6.6743e-11</span> m<span class="pl-k">^</span><span class="pl-c1">3</span> kg<span class="pl-k">^-</span><span class="pl-c1">1</span> s<span class="pl-k">^-</span><span class="pl-c1">2</span>
Standard uncertainty          <span class="pl-k">=</span> <span class="pl-c1">1.5e-15</span> m<span class="pl-k">^</span><span class="pl-c1">3</span> kg<span class="pl-k">^-</span><span class="pl-c1">1</span> s<span class="pl-k">^-</span><span class="pl-c1">2</span>
Relative standard uncertainty <span class="pl-k">=</span> <span class="pl-c1">2.2e-5</span>
Reference                     <span class="pl-k">=</span> CODATA <span class="pl-c1">2018</span></pre></div>
<p><code>SpeedOfLightInVacuum</code> and <code>NewtonianConstantOfGravitation</code> are two of the
<code>Constant</code>s defined in the <code>PhysicalConstants.CODATA2018</code> module, the full list
of available constants is given below.</p>
<p><code>Constant</code>s can be readily used in mathematical operations, using by default
their <code>Float64</code> value:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> PhysicalConstants<span class="pl-k">.</span>CODATA2018<span class="pl-k">:</span> c_0, ε_0, μ_0

julia<span class="pl-k">&gt;</span> <span class="pl-c1">2</span> <span class="pl-k">*</span> ε_0
<span class="pl-c1">1.77083756256e-11</span> F m<span class="pl-k">^-</span><span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> ε_0 <span class="pl-k">-</span> <span class="pl-c1">1</span> <span class="pl-k">/</span> (μ_0 <span class="pl-k">*</span> c_0 <span class="pl-k">^</span> <span class="pl-c1">2</span>)
<span class="pl-k">-</span><span class="pl-c1">3.8450973786644646e-25</span> A<span class="pl-k">^</span><span class="pl-c1">2</span> s<span class="pl-k">^</span><span class="pl-c1">4</span> kg<span class="pl-k">^-</span><span class="pl-c1">1</span> m<span class="pl-k">^-</span><span class="pl-c1">3</span></pre></div>
<p>If you want to use a different precision for the value of the constant, use the
function <code>float(float_type, constant)</code>, for example:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">float</span>(Float32, ε_0)
<span class="pl-c1">8.854188</span>f<span class="pl-k">-</span><span class="pl-c1">12</span> F m<span class="pl-k">^-</span><span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">float</span>(BigFloat, ε_0)
<span class="pl-c1">8.854187812799999999999999999999999999999999999999999999999999999999999999999973e-12</span> F m<span class="pl-k">^-</span><span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">big</span>(ε_0)
<span class="pl-c1">8.854187812799999999999999999999999999999999999999999999999999999999999999999973e-12</span> F m<span class="pl-k">^-</span><span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">big</span>(ε_0) <span class="pl-k">-</span> <span class="pl-c1">inv</span>(<span class="pl-c1">big</span>(μ_0) <span class="pl-k">*</span> <span class="pl-c1">big</span>(c_0)<span class="pl-k">^</span><span class="pl-c1">2</span>)
<span class="pl-k">-</span><span class="pl-c1">3.849883307464075736533920296598236938395867709081184624499315166190408485179288e-25</span> A<span class="pl-k">^</span><span class="pl-c1">2</span> s<span class="pl-k">^</span><span class="pl-c1">4</span> kg<span class="pl-k">^-</span><span class="pl-c1">1</span> m<span class="pl-k">^-</span><span class="pl-c1">3</span></pre></div>
<p>Note that <code>big(constant)</code> is an alias for <code>float(BigFloat, constant)</code>.</p>
<p>If in addition to units you also want the standard uncertainty associated with
the constant, use <code>measurement(x)</code>:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Measurements

julia<span class="pl-k">&gt;</span> <span class="pl-k">import</span> PhysicalConstants<span class="pl-k">.</span>CODATA2018<span class="pl-k">:</span> h, ħ

julia<span class="pl-k">&gt;</span> <span class="pl-c1">measurement</span>(ħ)
<span class="pl-c1">1.0545718176461565e-34</span> ± <span class="pl-c1">0.0</span> J s

julia<span class="pl-k">&gt;</span> <span class="pl-c1">measurement</span>(Float32, ħ)
<span class="pl-c1">1.0545718e-34</span> ± <span class="pl-c1">0.0</span> J s

julia<span class="pl-k">&gt;</span> <span class="pl-c1">measurement</span>(BigFloat, ħ)
<span class="pl-c1">1.054571817646156391262428003302280744722826330020413122421923470598435912734741e-34</span> ± <span class="pl-c1">0.0</span> J s

julia<span class="pl-k">&gt;</span> <span class="pl-c1">measurement</span>(BigFloat, ħ) <span class="pl-k">/</span> (<span class="pl-c1">measurement</span>(BigFloat, h) <span class="pl-k">/</span> (<span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">big</span>(pi)))
<span class="pl-c1">1.0</span> ± <span class="pl-c1">0.0</span></pre></div>
<h2><a id="user-content-list-of-set-of-constants" class="anchor" aria-hidden="true" href="#list-of-set-of-constants"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>List of Set of Constants</h2>
<p><em>Note</em>: each dataset listed below exports by default only the full long names of
the constants.  Short aliases are provided for convenience, but they are not
exported, to avoid polluting the main namespace with dozens of short-named
variables.  Users can to import the short names of the variables they use most
frequently, as shown in the examples above.</p>

<h3><a id="user-content-codata2014" class="anchor" aria-hidden="true" href="#codata2014"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>CODATA2014</code></h3>
<table>
<thead>
<tr>
<th>Long name</th>
<th>Short</th>
<th>Value</th>
<th>Unit</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>AtomicMassConstant</code></td>
<td><code>m_u</code></td>
<td>1.66053904e-27</td>
<td><code>kg</code></td>
</tr>
<tr>
<td><code>AvogadroConstant</code></td>
<td><code>N_A</code></td>
<td>6.022140857e23</td>
<td><code>mol^-1</code></td>
</tr>
<tr>
<td><code>BohrMagneton</code></td>
<td><code>μ_B</code></td>
<td>9.274009994e-24</td>
<td><code>J T^-1</code></td>
</tr>
<tr>
<td><code>BohrRadius</code></td>
<td><code>a_0</code></td>
<td>5.2917721067e-11</td>
<td><code>m</code></td>
</tr>
<tr>
<td><code>BoltzmannConstant</code></td>
<td><code>k_B</code></td>
<td>1.38064852e-23</td>
<td><code>J K^-1</code></td>
</tr>
<tr>
<td><code>CharacteristicImpedanceOfVacuum</code></td>
<td><code>Z_0</code></td>
<td>376.73031346177066</td>
<td><code>Ω</code></td>
</tr>
<tr>
<td><code>ElectricConstant</code></td>
<td><code>ε_0</code></td>
<td>8.854187817620389e-12</td>
<td><code>F m^-1</code></td>
</tr>
<tr>
<td><code>ElectronMass</code></td>
<td><code>m_e</code></td>
<td>9.10938356e-31</td>
<td><code>kg</code></td>
</tr>
<tr>
<td><code>ElementaryCharge</code></td>
<td><code>e</code></td>
<td>1.6021766208e-19</td>
<td><code>C</code></td>
</tr>
<tr>
<td><code>FineStructureConstant</code></td>
<td><code>α</code></td>
<td>0.0072973525664</td>
<td></td>
</tr>
<tr>
<td><code>MagneticConstant</code></td>
<td><code>μ_0</code></td>
<td>1.2566370614359173e-6</td>
<td><code>N A^-2</code></td>
</tr>
<tr>
<td><code>MolarGasConstant</code></td>
<td><code>R</code></td>
<td>8.3144598</td>
<td><code>J K^-1 mol^-1</code></td>
</tr>
<tr>
<td><code>NeutronMass</code></td>
<td><code>m_n</code></td>
<td>1.674927471e-27</td>
<td><code>kg</code></td>
</tr>
<tr>
<td><code>NewtonianConstantOfGravitation</code></td>
<td><code>G</code></td>
<td>6.67408e-11</td>
<td><code>m^3 kg^-1 s^-2</code></td>
</tr>
<tr>
<td><code>PlanckConstant</code></td>
<td><code>h</code></td>
<td>6.62607004e-34</td>
<td><code>J s</code></td>
</tr>
<tr>
<td><code>PlanckConstantOver2pi</code></td>
<td><code>ħ</code></td>
<td>1.0545718001391127e-34</td>
<td><code>J s</code></td>
</tr>
<tr>
<td><code>ProtonMass</code></td>
<td><code>m_p</code></td>
<td>1.672621898e-27</td>
<td><code>kg</code></td>
</tr>
<tr>
<td><code>RydbergConstant</code></td>
<td><code>R_∞</code></td>
<td>1.0973731568508e7</td>
<td><code>m^-1</code></td>
</tr>
<tr>
<td><code>SpeedOfLightInVacuum</code></td>
<td><code>c_0</code></td>
<td>2.99792458e8</td>
<td><code>m s^-1</code></td>
</tr>
<tr>
<td><code>StandardAccelerationOfGravitation</code></td>
<td><code>g_n</code></td>
<td>9.80665</td>
<td><code>m s^-2</code></td>
</tr>
<tr>
<td><code>StandardAtmosphere</code></td>
<td><code>atm</code></td>
<td>101325.0</td>
<td><code>Pa</code></td>
</tr>
<tr>
<td><code>StefanBoltzmannConstant</code></td>
<td><code>σ</code></td>
<td>5.670367e-8</td>
<td><code>W K^-4 m^-2</code></td>
</tr>
<tr>
<td><code>ThomsonCrossSection</code></td>
<td><code>σ_e</code></td>
<td>6.6524587158e-29</td>
<td><code>m^2</code></td>
</tr>
<tr>
<td><code>WienWavelengthDisplacementLawConstant</code></td>
<td><code>b</code></td>
<td>0.0028977729</td>
<td><code>K m</code></td>
</tr>
</tbody>
</table>
<h3><a id="user-content-codata2018" class="anchor" aria-hidden="true" href="#codata2018"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>CODATA2018</code></h3>
<table>
<thead>
<tr>
<th>Long name</th>
<th>Short</th>
<th>Value</th>
<th>Unit</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>AtomicMassConstant</code></td>
<td><code>m_u</code></td>
<td>1.6605390666e-27</td>
<td><code>kg</code></td>
</tr>
<tr>
<td><code>AvogadroConstant</code></td>
<td><code>N_A</code></td>
<td>6.02214076e23</td>
<td><code>mol^-1</code></td>
</tr>
<tr>
<td><code>BohrMagneton</code></td>
<td><code>μ_B</code></td>
<td>9.2740100783e-24</td>
<td><code>J T^-1</code></td>
</tr>
<tr>
<td><code>BohrRadius</code></td>
<td><code>a_0</code></td>
<td>5.29177210903e-11</td>
<td><code>m</code></td>
</tr>
<tr>
<td><code>BoltzmannConstant</code></td>
<td><code>k_B</code></td>
<td>1.380649e-23</td>
<td><code>J K^-1</code></td>
</tr>
<tr>
<td><code>ElectronMass</code></td>
<td><code>m_e</code></td>
<td>9.1093837015e-31</td>
<td><code>kg</code></td>
</tr>
<tr>
<td><code>ElementaryCharge</code></td>
<td><code>e</code></td>
<td>1.602176634e-19</td>
<td><code>C</code></td>
</tr>
<tr>
<td><code>FineStructureConstant</code></td>
<td><code>α</code></td>
<td>0.0072973525693</td>
<td></td>
</tr>
<tr>
<td><code>MolarGasConstant</code></td>
<td><code>R</code></td>
<td>8.31446261815324</td>
<td><code>J K^-1 mol^-1</code></td>
</tr>
<tr>
<td><code>NeutronMass</code></td>
<td><code>m_n</code></td>
<td>1.67492749804e-27</td>
<td><code>kg</code></td>
</tr>
<tr>
<td><code>NewtonianConstantOfGravitation</code></td>
<td><code>G</code></td>
<td>6.6743e-11</td>
<td><code>m^3 kg^-1 s^-2</code></td>
</tr>
<tr>
<td><code>PlanckConstant</code></td>
<td><code>h</code></td>
<td>6.62607015e-34</td>
<td><code>J s</code></td>
</tr>
<tr>
<td><code>ProtonMass</code></td>
<td><code>m_p</code></td>
<td>1.67262192369e-27</td>
<td><code>kg</code></td>
</tr>
<tr>
<td><code>ReducedPlanckConstant</code></td>
<td><code>ħ</code></td>
<td>1.0545718176461565e-34</td>
<td><code>J s</code></td>
</tr>
<tr>
<td><code>RydbergConstant</code></td>
<td><code>R_∞</code></td>
<td>1.097373156816e7</td>
<td><code>m^-1</code></td>
</tr>
<tr>
<td><code>SpeedOfLightInVacuum</code></td>
<td><code>c_0</code></td>
<td>2.99792458e8</td>
<td><code>m s^-1</code></td>
</tr>
<tr>
<td><code>StandardAccelerationOfGravitation</code></td>
<td><code>g_n</code></td>
<td>9.80665</td>
<td><code>m s^-2</code></td>
</tr>
<tr>
<td><code>StandardAtmosphere</code></td>
<td><code>atm</code></td>
<td>101325.0</td>
<td><code>Pa</code></td>
</tr>
<tr>
<td><code>StefanBoltzmannConstant</code></td>
<td><code>σ</code></td>
<td>5.6703744191844294e-8</td>
<td><code>W K^-4 m^-2</code></td>
</tr>
<tr>
<td><code>ThomsonCrossSection</code></td>
<td><code>σ_e</code></td>
<td>6.6524587321e-29</td>
<td><code>m^2</code></td>
</tr>
<tr>
<td><code>VacuumElectricPermittivity</code></td>
<td><code>ε_0</code></td>
<td>8.8541878128e-12</td>
<td><code>F m^-1</code></td>
</tr>
<tr>
<td><code>VacuumMagneticPermeability</code></td>
<td><code>μ_0</code></td>
<td>1.25663706212e-6</td>
<td><code>N A^-2</code></td>
</tr>
<tr>
<td><code>WienFrequencyDisplacementLawConstant</code></td>
<td><code>b′</code></td>
<td>5.878925757646825e10</td>
<td><code>Hz K^-1</code></td>
</tr>
<tr>
<td><code>WienWavelengthDisplacementLawConstant</code></td>
<td><code>b</code></td>
<td>0.0028977719551851727</td>
<td><code>K m</code></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>License</h2>
<p>The <code>PhysicalConstants.jl</code> package is licensed under the MIT "Expat" License.
The original author is <a href="https://github.com/giordano/">Mosè Giordano</a>.</p>
</article></div>