<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-toeplitzmatricesjl" class="anchor" aria-hidden="true" href="#toeplitzmatricesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ToeplitzMatrices.jl</h1>
<p dir="auto"><a href="https://github.com/JuliaLinearAlgebra/ToeplitzMatrices.jl/actions/workflows/CI.yml?query=branch%3Amaster"><img src="https://github.com/JuliaLinearAlgebra/ToeplitzMatrices.jl/workflows/CI/badge.svg?branch=master" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaLinearAlgebra/ToeplitzMatrices.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6b97b05a2a8175c3051ef09223ce4a693662a9feedc8b4229631b0f6ff3fafa9/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614c696e656172416c67656272612f546f65706c69747a4d617472696365732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaLinearAlgebra/ToeplitzMatrices.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/JuliaLinearAlgebra/ToeplitzMatrices.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/20f28e9eb6f0676b4b83ca4f763276bdb87959bb54f4d2b5bb77f98dc2ba01a3/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c69614c696e656172416c67656272612f546f65706c69747a4d617472696365732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage" data-canonical-src="https://coveralls.io/repos/github/JuliaLinearAlgebra/ToeplitzMatrices.jl/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<p dir="auto">Fast matrix multiplication and division
for Toeplitz, Hankel and circulant matrices in Julia</p>
<h2 dir="auto"><a id="user-content-note" class="anchor" aria-hidden="true" href="#note"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Note</h2>
<p dir="auto">Multiplication of large matrices and <code>sqrt</code>, <code>inv</code>, <code>LinearAlgebra.eigvals</code>,
<code>LinearAlgebra.ldiv!</code>, and <code>LinearAlgebra.pinv</code> for circulant matrices
are computed with FFTs.
To be able to use these methods, you have to install and load a package that implements
the <a href="https://github.com/JuliaMath/AbstractFFTs.jl">AbstractFFTs.jl</a> interface such
as <a href="https://github.com/JuliaMath/FFTW.jl">FFTW.jl</a>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using FFTW"><pre><span class="pl-k">using</span> FFTW</pre></div>
<p dir="auto">If you perform multiple calculations with FFTs, it can be more efficient to
initialize the required arrays and plan the FFT only once. You can precompute
the FFT factorization with <code>LinearAlgebra.factorize</code> and then use the factorization
for the FFT-based computations.</p>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<h3 dir="auto"><a id="user-content-toeplitz" class="anchor" aria-hidden="true" href="#toeplitz"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Toeplitz</h3>
<p dir="auto">A Toeplitz matrix has constant diagonals. It can be constructed using</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Toeplitz(vc,vr)
Toeplitz{T}(vc,vr)"><pre><span class="pl-c1">Toeplitz</span>(vc,vr)
<span class="pl-c1">Toeplitz</span><span class="pl-c1">{T}</span>(vc,vr)</pre></div>
<p dir="auto">where <code>vc</code> are the entries in the first column and <code>vr</code> are the entries in the first row, where <code>vc[1]</code> must equal <code>vr[1]</code>. For example.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Toeplitz(1:3, [1.,4.,5.])"><pre><span class="pl-c1">Toeplitz</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, [<span class="pl-c1">1.</span>,<span class="pl-c1">4.</span>,<span class="pl-c1">5.</span>])</pre></div>
<p dir="auto">is a sparse representation of the matrix</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="[ 1.0  4.0  5.0
  2.0  1.0  4.0
  3.0  2.0  1.0 ]"><pre>[ <span class="pl-c1">1.0</span>  <span class="pl-c1">4.0</span>  <span class="pl-c1">5.0</span>
  <span class="pl-c1">2.0</span>  <span class="pl-c1">1.0</span>  <span class="pl-c1">4.0</span>
  <span class="pl-c1">3.0</span>  <span class="pl-c1">2.0</span>  <span class="pl-c1">1.0</span> ]</pre></div>
<h3 dir="auto"><a id="user-content-special-toeplitz" class="anchor" aria-hidden="true" href="#special-toeplitz"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Special toeplitz</h3>
<p dir="auto"><code>SymmetricToeplitz</code>, <code>Circulant</code>, <code>UpperTriangularToeplitz</code> and <code>LowerTriangularToeplitz</code> only store one vector. By convention, <code>Circulant</code> stores the first column rather than the first row. They are constructed using <code>TYPE(v)</code> where <code>TYPE</code>âˆˆ{<code>SymmetricToeplitz</code>, <code>Circulant</code>, <code>UpperTriangularToeplitz</code>, <code>LowerTriangularToeplitz</code>}.</p>
<h3 dir="auto"><a id="user-content-hankel" class="anchor" aria-hidden="true" href="#hankel"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Hankel</h3>
<p dir="auto">A Hankel matrix has constant anti-diagonals, for example,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="[ 1  2  3
  2  3  4 ]"><pre>[ <span class="pl-c1">1</span>  <span class="pl-c1">2</span>  <span class="pl-c1">3</span>
  <span class="pl-c1">2</span>  <span class="pl-c1">3</span>  <span class="pl-c1">4</span> ]</pre></div>
<p dir="auto">There are a few ways to construct the above <code>Hankel{Int}</code>:</p>
<ul dir="auto">
<li><code>Hankel([1,2,3,4], (2,3)) # Hankel(v, (h,w))</code></li>
<li><code>Hankel([1,2,3,4], 2,3) # Hankel(v, h, w)</code></li>
<li><code>Hankel([1,2], [2,3,4]) # Hankel(vc, vr)</code></li>
</ul>
<p dir="auto">Note that the width is usually useless, since ideally, <code>w=length(v)-h+1</code>. It exists for infinite Hankel matrices. Its existence also means that <code>v</code> could be longer than necessary. <code>Hankel(v)</code>, where the size is not given, returns <code>Hankel(v, (l+1)Ã·2, (l+1)Ã·2)</code> where <code>l=length(v)</code>.</p>
<p dir="auto">The <code>reverse</code> can transform between Hankel and Toeplitz. It is used to achieve fast Hankel algorithms.</p>
<h2 dir="auto"><a id="user-content-implemented-interface" class="anchor" aria-hidden="true" href="#implemented-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Implemented interface</h2>
<h3 dir="auto"><a id="user-content-operations" class="anchor" aria-hidden="true" href="#operations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Operations</h3>
<ul dir="auto">
<li>âœ“ implemented</li>
<li>âœ— error</li>
<li>_ fall back to <code>Matrix</code></li>
</ul>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">Toeplitz</th>
<th align="center">Symmetric~</th>
<th align="center">Circulant</th>
<th align="center">UpperTriangular~</th>
<th align="center">LowerTriangular~</th>
<th align="center">Hankel</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">getindex</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">.vc</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">.vr</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">size</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">copy</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">similar</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">zero</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">real</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">imag</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">fill!</td>
<td align="center">âœ“</td>
<td align="center">âœ—</td>
<td align="center">âœ—</td>
<td align="center">âœ—</td>
<td align="center">âœ—</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">conj</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">transpose</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">adjoint</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">tril!</td>
<td align="center">âœ“</td>
<td align="center">âœ—</td>
<td align="center">âœ—</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ—</td>
</tr>
<tr>
<td align="center">triu!</td>
<td align="center">âœ“</td>
<td align="center">âœ—</td>
<td align="center">âœ—</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ—</td>
</tr>
<tr>
<td align="center">tril</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ—</td>
</tr>
<tr>
<td align="center">triu</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ—</td>
</tr>
<tr>
<td align="center">+</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">-</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">scalar<br>mult</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">==</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">issymmetric</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">istriu</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">istril</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">iszero</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">isone</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">copyto!</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">reverse</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">broadcast</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">broadcast!</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody>
</table>
<p dir="auto">Note that scalar multiplication, <code>conj</code>, <code>+</code> and <code>-</code> could be removed once <code>broadcast</code> is implemented.</p>
<p dir="auto"><code>reverse(Hankel)</code> returns a <code>Toeplitz</code>, while <code>reverse(AbstractToeplitz)</code> returns a <code>Hankel</code>.</p>
<h3 dir="auto"><a id="user-content-linearalgebra" class="anchor" aria-hidden="true" href="#linearalgebra"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>LinearAlgebra</h3>
<h3 dir="auto"><a id="user-content-constructors-and-conversions" class="anchor" aria-hidden="true" href="#constructors-and-conversions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Constructors and conversions</h3>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">Toeplitz</th>
<th align="center">Symmetric~</th>
<th align="center">Circulant</th>
<th align="center">UpperTriangular~</th>
<th align="center">LowerTriangular~</th>
<th align="center">Hankel</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">from AbstractVector</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">from AbstractMatrix</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">from AbstractToeplitz</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ—</td>
</tr>
<tr>
<td align="center">to supertype</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
<tr>
<td align="center">to Toeplitz</td>
<td align="center">-</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ—</td>
</tr>
<tr>
<td align="center">to another eltype</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
<td align="center">âœ“</td>
</tr>
</tbody>
</table>
<p dir="auto">When constructing <code>Toeplitz</code> from a matrix, the first row and the first column will be considered as <code>vr</code> and <code>vc</code>. Note that <code>vr</code> and <code>vc</code> are copied in construction to avoid the cases where they share memory. If you don't want copying, construct using vectors directly.</p>
<p dir="auto">When constructing <code>SymmetricToeplitz</code> or <code>Circulant</code> from <code>AbstractMatrix</code>, a second argument shall specify whether the first row or the first column is used. For example, for <code>A = [1 2; 3 4]</code>,</p>
<ul dir="auto">
<li><code>SymmetricToeplitz(A,:L)</code> gives <code>[1 3; 3 1]</code>, while</li>
<li><code>SymmetricToeplitz(A,:U)</code> gives <code>[1 2; 2 1]</code>.</li>
</ul>
<p dir="auto">For backward compatibility and consistency with <code>LinearAlgebra.Symmetric</code>,</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="SymmetricToeplitz(A) = SymmetricToeplitz(A, :U)
Circulant(A) = Circulant(A, :L)"><pre><span class="pl-en">SymmetricToeplitz</span>(A) <span class="pl-k">=</span> <span class="pl-c1">SymmetricToeplitz</span>(A, <span class="pl-c1">:U</span>)
<span class="pl-en">Circulant</span>(A) <span class="pl-k">=</span> <span class="pl-c1">Circulant</span>(A, <span class="pl-c1">:L</span>)</pre></div>
<p dir="auto"><code>Hankel</code> constructor also accepts the second argument, <code>:L</code> denoting the first column and the last row while <code>:U</code> denoting the first row and the last column.</p>
<p dir="auto"><code>Symmetric</code>, <code>UpperTriangular</code> and <code>LowerTriangular</code> from <code>LinearAlgebra</code> are also overloaded for convenience.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Symmetric(T::Toeplitz) = SymmetricToeplitz(T)
UpperTriangular(T::Toeplitz) = UpperTriangularToeplitz(T)
LowerTriangular(T::Toeplitz) = LowerTriangularToeplitz(T)"><pre><span class="pl-en">Symmetric</span>(T<span class="pl-k">::</span><span class="pl-c1">Toeplitz</span>) <span class="pl-k">=</span> <span class="pl-c1">SymmetricToeplitz</span>(T)
<span class="pl-en">UpperTriangular</span>(T<span class="pl-k">::</span><span class="pl-c1">Toeplitz</span>) <span class="pl-k">=</span> <span class="pl-c1">UpperTriangularToeplitz</span>(T)
<span class="pl-en">LowerTriangular</span>(T<span class="pl-k">::</span><span class="pl-c1">Toeplitz</span>) <span class="pl-k">=</span> <span class="pl-c1">LowerTriangularToeplitz</span>(T)</pre></div>
<h3 dir="auto"><a id="user-content-triangulartoeplitz-obsolete" class="anchor" aria-hidden="true" href="#triangulartoeplitz-obsolete"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TriangularToeplitz (obsolete)</h3>
<p dir="auto"><code>TriangularToeplitz</code> is reserved for backward compatibility.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="TriangularToeplitz = Union{UpperTriangularToeplitz,LowerTriangularToeplitz}"><pre>TriangularToeplitz <span class="pl-k">=</span> Union{UpperTriangularToeplitz,LowerTriangularToeplitz}</pre></div>
<p dir="auto">The old interface is implemented by</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="getproperty(UpperTriangularToeplitz,:uplo) = :U
getproperty(LowerTriangularToeplitz,:uplo) = :L"><pre><span class="pl-en">getproperty</span>(UpperTriangularToeplitz,<span class="pl-c1">:uplo</span>) <span class="pl-k">=</span> <span class="pl-c1">:U</span>
<span class="pl-en">getproperty</span>(LowerTriangularToeplitz,<span class="pl-c1">:uplo</span>) <span class="pl-k">=</span> <span class="pl-c1">:L</span></pre></div>
<p dir="auto">This type is <strong>obsolete</strong> and will not be updated for features. Despite that, backward compatibility should be maintained. Codes that were using <code>TriangularToeplitz</code> should still work.</p>
<h2 dir="auto"><a id="user-content-unexported-interface" class="anchor" aria-hidden="true" href="#unexported-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Unexported interface</h2>
<p dir="auto">Methods in this section are not exported.</p>
<p dir="auto"><code>_vr(A::AbstractMatrix)</code> returns the first row as a vector.
<code>_vc(A::AbstractMatrix)</code> returns the first column as a vector.
<code>_vr</code> and <code>_vc</code> are implemented for <code>AbstractToeplitz</code> as well. They are used to merge similar codes for <code>AbstractMatrix</code> and <code>AbstractToeplitz</code>.</p>
<p dir="auto"><code>_circulate(v::AbstractVector)</code> converts between the <code>vr</code> and <code>vc</code> of a <code>Circulant</code>.</p>
<p dir="auto"><code>isconcrete(A::Union{AbstractToeplitz,Hankel})</code> decides whether the stored vector(s) are concrete. It calls <code>Base.isconcretetype</code>.</p>
</article></div>