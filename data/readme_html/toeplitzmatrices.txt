<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-toeplitzmatricesjl" class="anchor" aria-hidden="true" href="#toeplitzmatricesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ToeplitzMatrices.jl</h1>
<p><a href="https://github.com/JuliaMatrices/ToeplitzMatrices.jl/actions/workflows/CI.yml?query=branch%3Amaster"><img src="https://github.com/JuliaMatrices/ToeplitzMatrices.jl/workflows/CI/badge.svg?branch=master" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/JuliaMatrices/ToeplitzMatrices.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/775e743bd033d6bd318f112c5573359abe65d3af55cb9068e88f4e8cb7c84ea0/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69614d617472696365732f546f65706c69747a4d617472696365732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaMatrices/ToeplitzMatrices.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/JuliaMatrices/ToeplitzMatrices.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ea0cd0af3ec1ee3b531a2890b69b799fc2d2f1f8c0af6dd04e5b2b9f114484c5/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c69614d617472696365732f546f65706c69747a4d617472696365732e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage" data-canonical-src="https://coveralls.io/repos/github/JuliaMatrices/ToeplitzMatrices.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>Fast matrix multiplication and division
for Toeplitz, Hankel and circulant matrices in Julia</p>
<h1><a id="user-content-note" class="anchor" aria-hidden="true" href="#note"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Note</h1>
<p>Multiplication of large matrices and <code>sqrt</code>, <code>inv</code>, <code>LinearAlgebra.eigvals</code>,
<code>LinearAlgebra.ldiv!</code>, and <code>LinearAlgebra.pinv</code> for circulant matrices
are computed with FFTs.
To be able to use these methods, you have to install and load a package that implements
the <a href="https://github.com/JuliaMath/AbstractFFTs.jl">AbstractFFTs.jl</a> interface such
as <a href="https://github.com/JuliaMath/FFTW.jl">FFTW.jl</a>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using FFTW
"><pre><span class="pl-k">using</span> FFTW</pre></div>
<p>If you perform multiple calculations with FFTs, it can be more efficient to
initialize the required arrays and plan the FFT only once. You can precompute
the FFT factorization with <code>LinearAlgebra.factorize</code> and then use the factorization
for the FFT-based computations.</p>
<h1><a id="user-content-supported-matrices" class="anchor" aria-hidden="true" href="#supported-matrices"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Supported matrices</h1>
<h2><a id="user-content-toeplitz" class="anchor" aria-hidden="true" href="#toeplitz"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Toeplitz</h2>
<p>A Toeplitz matrix has constant diagonals. It can be constructed using</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Toeplitz(vc,vr)
"><pre><span class="pl-c1">Toeplitz</span>(vc,vr)</pre></div>
<p>where <code>vc</code> are the entries in the first column and <code>vr</code> are the entries in the first row, where <code>vc[1]</code> must equal <code>vr[1]</code>. For example.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Toeplitz(1:3, [1.,4.,5.])
"><pre><span class="pl-c1">Toeplitz</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>, [<span class="pl-c1">1.</span>,<span class="pl-c1">4.</span>,<span class="pl-c1">5.</span>])</pre></div>
<p>is a sparse representation of the matrix</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="[ 1.0  4.0  5.0
  2.0  1.0  4.0
  3.0  2.0  1.0 ]
"><pre>[ <span class="pl-c1">1.0</span>  <span class="pl-c1">4.0</span>  <span class="pl-c1">5.0</span>
  <span class="pl-c1">2.0</span>  <span class="pl-c1">1.0</span>  <span class="pl-c1">4.0</span>
  <span class="pl-c1">3.0</span>  <span class="pl-c1">2.0</span>  <span class="pl-c1">1.0</span> ]</pre></div>
<h2><a id="user-content-symmetrictoeplitz" class="anchor" aria-hidden="true" href="#symmetrictoeplitz"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SymmetricToeplitz</h2>
<p>A symmetric Toeplitz matrix is a symmetric matrix with constant diagonals. It can be constructed with</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="SymmetricToeplitz(vc)
"><pre><span class="pl-c1">SymmetricToeplitz</span>(vc)</pre></div>
<p>where <code>vc</code> are the entries of the first column. For example,</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="SymmetricToeplitz([1.0, 2.0, 3.0])
"><pre><span class="pl-c1">SymmetricToeplitz</span>([<span class="pl-c1">1.0</span>, <span class="pl-c1">2.0</span>, <span class="pl-c1">3.0</span>])</pre></div>
<p>is a sparse representation of the matrix</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="[ 1.0  2.0  3.0
  2.0  1.0  2.0
  3.0  2.0  1.0 ]
"><pre>[ <span class="pl-c1">1.0</span>  <span class="pl-c1">2.0</span>  <span class="pl-c1">3.0</span>
  <span class="pl-c1">2.0</span>  <span class="pl-c1">1.0</span>  <span class="pl-c1">2.0</span>
  <span class="pl-c1">3.0</span>  <span class="pl-c1">2.0</span>  <span class="pl-c1">1.0</span> ]</pre></div>
<h2><a id="user-content-triangulartoeplitz" class="anchor" aria-hidden="true" href="#triangulartoeplitz"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TriangularToeplitz</h2>
<p>A triangular Toeplitz matrix can be constructed using</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="TriangularToeplitz(ve,uplo)
"><pre><span class="pl-c1">TriangularToeplitz</span>(ve,uplo)</pre></div>
<p>where uplo is either <code>:L</code> or <code>:U</code> and <code>ve</code> are the rows or columns, respectively.  For example,</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="TriangularToeplitz([1.,2.,3.],:L)
"><pre><span class="pl-c1">TriangularToeplitz</span>([<span class="pl-c1">1.</span>,<span class="pl-c1">2.</span>,<span class="pl-c1">3.</span>],<span class="pl-c1">:L</span>)</pre></div>
<p>is a sparse representation of the matrix</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="[ 1.0  0.0  0.0
  2.0  1.0  0.0
  3.0  2.0  1.0 ]
"><pre>[ <span class="pl-c1">1.0</span>  <span class="pl-c1">0.0</span>  <span class="pl-c1">0.0</span>
  <span class="pl-c1">2.0</span>  <span class="pl-c1">1.0</span>  <span class="pl-c1">0.0</span>
  <span class="pl-c1">3.0</span>  <span class="pl-c1">2.0</span>  <span class="pl-c1">1.0</span> ]</pre></div>
<h2><a id="user-content-hankel" class="anchor" aria-hidden="true" href="#hankel"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Hankel</h2>
<p>A Hankel matrix has constant anti-diagonals.  It can be constructed using</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Hankel(vc,vr)
"><pre><span class="pl-c1">Hankel</span>(vc,vr)</pre></div>
<p>where <code>vc</code> are the entries in the first column and <code>vr</code> are the entries in the last row, where <code>vc[end]</code> must equal <code>vr[1]</code>.  For example.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Hankel([1.,2.,3.], 3:5)
"><pre><span class="pl-c1">Hankel</span>([<span class="pl-c1">1.</span>,<span class="pl-c1">2.</span>,<span class="pl-c1">3.</span>], <span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">5</span>)</pre></div>
<p>is a sparse representation of the matrix</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="[  1.0  2.0  3.0
   2.0  3.0  4.0
   3.0  4.0  5.0 ]
"><pre>[  <span class="pl-c1">1.0</span>  <span class="pl-c1">2.0</span>  <span class="pl-c1">3.0</span>
   <span class="pl-c1">2.0</span>  <span class="pl-c1">3.0</span>  <span class="pl-c1">4.0</span>
   <span class="pl-c1">3.0</span>  <span class="pl-c1">4.0</span>  <span class="pl-c1">5.0</span> ]</pre></div>
<h2><a id="user-content-circulant" class="anchor" aria-hidden="true" href="#circulant"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Circulant</h2>
<p>A circulant matrix is a special case of a Toeplitz matrix with periodic end conditions.
It can be constructed using</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Circulant(vc)
"><pre><span class="pl-c1">Circulant</span>(vc)</pre></div>
<p>where <code>vc</code> is a vector with the entries for the first column.
For example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="Circulant([1.0, 2.0, 3.0])
"><pre><span class="pl-c1">Circulant</span>([<span class="pl-c1">1.0</span>, <span class="pl-c1">2.0</span>, <span class="pl-c1">3.0</span>])</pre></div>
<p>is a sparse representation of the matrix</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="[  1.0  3.0  2.0
   2.0  1.0  3.0
   3.0  2.0  1.0 ]
"><pre>[  <span class="pl-c1">1.0</span>  <span class="pl-c1">3.0</span>  <span class="pl-c1">2.0</span>
   <span class="pl-c1">2.0</span>  <span class="pl-c1">1.0</span>  <span class="pl-c1">3.0</span>
   <span class="pl-c1">3.0</span>  <span class="pl-c1">2.0</span>  <span class="pl-c1">1.0</span> ]</pre></div>
</article></div>