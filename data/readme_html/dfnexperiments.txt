<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-dfnexperiments" class="anchor" aria-hidden="true" href="#dfnexperiments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DFNExperiments</h1>
<p dir="auto">Tighter integration between PyBaMM for model spec generation and simulation and NeuralPDE.jl for PINN training.</p>
<p dir="auto">Requires specific branches of both PyBaMM and NeuralPDE.jl:</p>
<p dir="auto">PyBaMM branch:
<a href="https://github.com/zoemcc/PyBaMM/tree/issue-1129-julia">https://github.com/zoemcc/PyBaMM/tree/issue-1129-julia</a></p>
<p dir="auto">NeuralPDE branch:
<a href="https://github.com/zoemcc/NeuralPDE.jl/tree/hyperparam">https://github.com/zoemcc/NeuralPDE.jl/tree/hyperparam</a></p>
<p dir="auto">To get PyBaMM to work I used Anaconda python3 on python version 3.7, with a specific conda env just for this project.  The scripts in the install folder are designed to help with this process.</p>
<p dir="auto">Git clone the above branches, install Anaconda and then set the following environment variables before you run the install script
(where the actual paths you used to install the various things are used instead of the placeholder strings):</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="export PYBAMM_LOCATION=&quot;/path/to/pybamm_repo&quot;
export DFNEXPERIMENTS_LOCATION=&quot;/path/to/this_repo&quot;
export NEURALPDE_LOCATION=&quot;/path/to/neuralpde_repo&quot;
export ANACONDA_LOCATION=&quot;/path/to/anaconda3&quot;"><pre><span class="pl-k">export</span> PYBAMM_LOCATION=<span class="pl-s"><span class="pl-pds">"</span>/path/to/pybamm_repo<span class="pl-pds">"</span></span>
<span class="pl-k">export</span> DFNEXPERIMENTS_LOCATION=<span class="pl-s"><span class="pl-pds">"</span>/path/to/this_repo<span class="pl-pds">"</span></span>
<span class="pl-k">export</span> NEURALPDE_LOCATION=<span class="pl-s"><span class="pl-pds">"</span>/path/to/neuralpde_repo<span class="pl-pds">"</span></span>
<span class="pl-k">export</span> ANACONDA_LOCATION=<span class="pl-s"><span class="pl-pds">"</span>/path/to/anaconda3<span class="pl-pds">"</span></span></pre></div>
<p dir="auto">use the following command to create and activate the conda python env:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="conda create -n pybamm_dev python=3.7"><pre>conda create -n pybamm_dev python=3.7</pre></div>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="conda activate pybamm_dev"><pre>conda activate pybamm_dev</pre></div>
<p dir="auto">and then run:</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="bash $DFNEXPERIMENTS_LOCATION/install/install_script.sh"><pre>bash <span class="pl-smi">$DFNEXPERIMENTS_LOCATION</span>/install/install_script.sh</pre></div>
<p dir="auto">and hopefully everything should get setup.
The steps are basically :</p>
<ul dir="auto">
<li>create conda env with the right python version</li>
<li>activate that python env</li>
<li>install the right pybamm version to that python env</li>
<li>and then in a julia environment:</li>
<li>set NeuralPDE to develop with the right version</li>
<li>set the PYTHON environment variable to the new python env</li>
<li>build PyCall in julia using the right python that has the right pybamm installed</li>
</ul>
</article></div>