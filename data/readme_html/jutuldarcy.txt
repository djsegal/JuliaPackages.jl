<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://zenodo.org/badge/latestdoi/477727603" rel="nofollow"><img src="https://camo.githubusercontent.com/a4c223fdb9ce33e61c282dbbca943d428ffc75d8ce28de0c074691cc8bd9d055/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3437373732373630332e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/477727603.svg" style="max-width: 100%;"></a>
<a href="https://sintefmath.github.io/JutulDarcy.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/sintefmath/JutulDarcy.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/sintefmath/JutulDarcy.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://sintefmath.github.io/JutulDarcy.jl/dev/" rel="nofollow"><img src="docs/src/assets/logo_wide.png" alt="Jutul Darcy logo" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-reservoir-simulation-in-julia" class="anchor" aria-hidden="true" href="#reservoir-simulation-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reservoir simulation in Julia</h1>
<p dir="auto">JutulDarcy.jl: Darcy-scale and subsurface flow (CO2 sequestration, gas/H2 storage, oil/gas fields) using <a href="https://github.com/sintefmath/Jutul.jl">Jutul.jl</a> developed by the <a href="https://www.sintef.no/en/digital/departments-new/applied-mathematics/computational-geoscience/" rel="nofollow">Computational Geosciences group</a> at <a href="https://www.sintef.no/en/digital/" rel="nofollow">SINTEF Digital</a>.</p>
<h2 dir="auto"><a id="user-content-key-features" class="anchor" aria-hidden="true" href="#key-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Key features</h2>
<ul dir="auto">
<li>Written in pure Julia, with automatic differentiation and dynamic sparsity detection</li>
<li>Support for sensitivities with respect to any model parameters using the adjoint method</li>
<li>High performance assembly and linear solvers, with support for two-stage CPR BILU(0)-CPR Krylov solvers</li>
<li>Equation-of-state compositional, immiscible and black oil flow is supported and validated against existing simulators</li>
<li>Unstructured grids and complex cases input from <a href="https://www.mrst.no" rel="nofollow">the Matlab Reservoir Simulation Toolbox (MRST)</a> using the <code>jutul</code> module.</li>
<li>Support for general multisegment wells with rigorous mass balance, complex well limits and time-dependent controls</li>
<li>3D visualization of grids and wells in <a href="https://github.com/sintefmath/JutulViz.jl">JutulViz.jl</a></li>
<li>Interactive plotting of well curves</li>
</ul>
<p dir="auto">The compositional simulator has been matched against commercial offerings, AD-GPRS and MRST. The blackoil simulator has been validated on the standard SPE benchmarks (SPE1, SPE9, ...).</p>
<h2 dir="auto"><a id="user-content-example-run-times-on-benchmarks" class="anchor" aria-hidden="true" href="#example-run-times-on-benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example run times on benchmarks</h2>
<table>
<thead>
<tr>
<th>Name</th>
<th>Cells</th>
<th>Report steps</th>
<th>Preconditioner</th>
<th>Time [s]</th>
</tr>
</thead>
<tbody>
<tr>
<td>SPE1CASE2</td>
<td>300</td>
<td>120</td>
<td>block-ILU(0)</td>
<td>0.30</td>
</tr>
<tr>
<td>SPE9</td>
<td>9000</td>
<td>35</td>
<td>block-ILU(0)</td>
<td>3.41</td>
</tr>
<tr>
<td>Egg</td>
<td>18553</td>
<td>123</td>
<td>CPR-block-ILU(0)</td>
<td>8.60</td>
</tr>
</tbody>
</table>
<p dir="auto">Simulated with <code>julia -O2</code>, no threads.</p>
<h2 dir="auto"><a id="user-content-a-few-of-the-packages-used-by-jutul-and-jutuldarcy" class="anchor" aria-hidden="true" href="#a-few-of-the-packages-used-by-jutul-and-jutuldarcy"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>A few of the packages used by Jutul and JutulDarcy</h2>
<p dir="auto">Jutul builds upon many of the excellent packages in the Julia ecosystem. Here are a few of them, and what they are used for:</p>
<ul dir="auto">
<li><a href="https://github.com/JuliaDiff/ForwardDiff.jl">ForwardDiff.jl</a> implements the Dual number class used throughout the code</li>
<li><a href="https://github.com/PALEOtoolkit/SparsityTracing.jl/">SparsityTracing.jl</a> provides sparsity detection inside Jutul</li>
<li><a href="https://github.com/JuliaSmoothOptimizers/Krylov.jl">Krylov.jl</a> provides the iterative linear solvers</li>
<li><a href="https://github.com/mcovalt/ILUZero.jl/blob/master/src/ILUZero.jl">ILUZero.jl</a> for ILU(0) preconditioners</li>
<li><a href="https://github.com/JuliaLinearAlgebra/AlgebraicMultigrid.jl">AlgebraicMultigrid.jl</a> for AMG preconditioners</li>
<li><a href="https://github.com/mcabbott/Tullio.jl">Tullio.jl</a> for automatically optimized loops and <a href="">Polyester.jl</a> for lightweight threads</li>
<li><a href="https://github.com/KristofferC/TimerOutputs.jl">TimerOutputs.jl</a> and <a href="https://github.com/timholy/ProgressMeter.jl">ProgressMeter.jl</a> gives nice output to terminal</li>
<li><a href="https://makie.juliaplots.org/" rel="nofollow">Makie.jl</a> is used for the visualization features found in <a href="https://github.com/sintefmath/JutulViz.jl">JutulViz.jl</a></li>
<li><a href="https://github.com/moyner/MultiComponentFlash.jl">MultiComponentFlash.jl</a> provides many of the compositional features</li>
</ul>
<p dir="auto">...and many more, both directly in the Project.toml file and indirectly!</p>
<h2 dir="auto"><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Getting started</h2>
<p dir="auto">Install <a href="https://julialang.org/" rel="nofollow">Julia</a> and add the package to your environment of choice:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;Jutul&quot;)
Pkg.add(&quot;JutulDarcy&quot;)
Pkg.add(&quot;CairoMakie&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Jutul<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>JutulDarcy<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CairoMakie<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">You can then run any of the examples in the <code>examples</code> directory by including them.</p>
<h1 dir="auto"><a id="user-content-additional-examples-and-further-reading" class="anchor" aria-hidden="true" href="#additional-examples-and-further-reading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Additional examples and further reading</h1>
<p dir="auto">The <a href="https://sintefmath.github.io/JutulDarcy.jl/dev/" rel="nofollow">documentation</a> is still work in progress, but contains a fair bit of useful information. In addition, see the <a href="examples/">examples</a> folder for more information. Some functionality is also demonstrated in the <a href="https://github.com/sintefmath/JutulDarcy.jl/tree/main/test">tests</a>. There are also examples in <a href="https://github.com/sintefmath/JutulExamples.jl">JutulExamples</a> that may occasionally be a bit out of date.</p>
<p dir="auto"><em>Internals and undocumented functions are subject to change at this time. However, the main interface for the reservoir simulator itself seen in the examples should be fairly stable.</em></p>
</article></div>