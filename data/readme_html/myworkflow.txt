<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-myworkflow" class="anchor" aria-hidden="true" href="#myworkflow"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>MyWorkflow</h1>
<p><a href="https://github.com/terasakisatoshi/MyWorkflow.jl/actions"><img src="https://github.com/terasakisatoshi/MyWorkflow.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width:100%;"></a>
<a href="https://terasakisatoshi.github.io/MyWorkflow.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://terasakisatoshi.github.io/MyWorkflow.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<ul>
<li>An example of workflow using Docker and GitHub Actions</li>
</ul>
<h1><a id="user-content-have-a-try-myworkflowjl" class="anchor" aria-hidden="true" href="#have-a-try-myworkflowjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Have a try MyWorkflow.jl</h1>
<ul>
<li>
<p>MyWorkflow.jl master (nightly) <a href="https://mybinder.org/v2/gh/terasakisatoshi/MyWorkflow.jl/master" rel="nofollow"><img src="https://camo.githubusercontent.com/581c077bdbc6ca6899c86d0acc6145ae85e9d80e6f805a1071793dbe48917982/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667" alt="Binder" data-canonical-src="https://mybinder.org/badge_logo.svg" style="max-width:100%;"></a> Julia v1.6.1</p>
</li>
<li>
<p>MyWorkflow.jl v0.23.0 (stable) <a href="https://mybinder.org/v2/gh/terasakisatoshi/MyWorkflow.jl/v0.23.0" rel="nofollow"><img src="https://camo.githubusercontent.com/581c077bdbc6ca6899c86d0acc6145ae85e9d80e6f805a1071793dbe48917982/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667" alt="Binder" data-canonical-src="https://mybinder.org/badge_logo.svg" style="max-width:100%;"></a> Julia v1.6.1</p>
</li>
</ul>
<h1><a id="user-content-feature" class="anchor" aria-hidden="true" href="#feature"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Feature</h1>
<ul>
<li>This repository gives us some useful techniques such as:
<ol>
<li>how to utilize Docker Docker Compose with your Julia workflow.</li>
<li>how to customize Julia's system image via PackageCompiler.jl to reduce an overhead of package's loading time e.g. Plots.jl etc...</li>
<li>how to share our work on the Internet. Check our repository on Binder from <a href="https://mybinder.org/v2/gh/terasakisatoshi/MyWorkflow.jl/master" rel="nofollow"><img src="https://camo.githubusercontent.com/581c077bdbc6ca6899c86d0acc6145ae85e9d80e6f805a1071793dbe48917982/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667" alt="Binder" data-canonical-src="https://mybinder.org/badge_logo.svg" style="max-width:100%;"></a></li>
<li>how to use GitHub actions as a CI functionality.</li>
<li>how to communicate between a Docker container and Juno/Atom</li>
</ol>
</li>
</ul>
<h1><a id="user-content-directory-structure" class="anchor" aria-hidden="true" href="#directory-structure"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Directory Structure</h1>
<div class="highlight highlight-text-shell-session position-relative" data-snippet-clipboard-copy-content="$ tree .
.
├── Dockerfile
├── LICENSE
├── Makefile
├── Project.toml
├── README.md
├── binder
│   └── Dockerfile
├── docker-compose.yml
├── docs
│   ├── Project.toml
│   ├── make.jl
│   └── src
│       ├── assets
│       │   ├── lab.png
│       │   ├── open_notebook_on_jupyterlab.png
│       │   ├── port9999.png
│       │   └── theorem.css
│       ├── example.md
│       ├── figures
│       ├── index.md
│       ├── math.md
│       ├── myworkflow.md
│       └── weavesample.jmd
├── gitpod
│   └── Dockerfile
├── jupytext.toml
├── playground
│   ├── notebook
│   │   ├── Chisq.md
│   │   ├── Harris.md
│   │   ├── Rotation3D.md
│   │   ├── apply_PCA_to_MNIST.md
│   │   ├── box_and_ball_system.md
│   │   ├── clang.md
│   │   ├── convex_hull.md
│   │   ├── coordinate_system.md
│   │   ├── curve.md
│   │   ├── example.md
│   │   ├── fitting.md
│   │   ├── free_fall.md
│   │   ├── gradient_descent.md
│   │   ├── histogram_eq.md
│   │   ├── hop_step_jump.md
│   │   ├── image_filtering.md
│   │   ├── interact_sample.md
│   │   ├── iris.md
│   │   ├── jsxgraph_julia.md
│   │   ├── jsxgraph_with_rawJS.md
│   │   ├── jsxgraph_with_webio_jsexpr.md
│   │   ├── lazysets.md
│   │   ├── linear_regression.md
│   │   ├── n-Soliton.md
│   │   ├── ode.md
│   │   ├── plots_fill_example.md
│   │   ├── plots_sample.md
│   │   ├── pluto
│   │   │   └── sample.jl
│   │   ├── point_on_circle.md
│   │   ├── pyjulia.md
│   │   ├── pyplot.md
│   │   ├── rcall.md
│   │   ├── reuleaux_triangle.md
│   │   ├── seaborn.md
│   │   ├── simple_harmonic_motion.md
│   │   ├── tangent_space.md
│   │   ├── tangent_vector.md
│   │   └── wav_example.md
│   └── test
│       └── runtests.jl
├── requirements.txt
├── src
│   └── MyWorkflow.jl
└── test
    └── runtests.jl
"><pre>$ <span class="pl-s1">tree <span class="pl-c1">.</span></span>
<span class="pl-c1">.</span>
<span class="pl-c1">├── Dockerfile</span>
<span class="pl-c1">├── LICENSE</span>
<span class="pl-c1">├── Makefile</span>
<span class="pl-c1">├── Project.toml</span>
<span class="pl-c1">├── README.md</span>
<span class="pl-c1">├── binder</span>
<span class="pl-c1">│   └── Dockerfile</span>
<span class="pl-c1">├── docker-compose.yml</span>
<span class="pl-c1">├── docs</span>
<span class="pl-c1">│   ├── Project.toml</span>
<span class="pl-c1">│   ├── make.jl</span>
<span class="pl-c1">│   └── src</span>
<span class="pl-c1">│       ├── assets</span>
<span class="pl-c1">│       │   ├── lab.png</span>
<span class="pl-c1">│       │   ├── open_notebook_on_jupyterlab.png</span>
<span class="pl-c1">│       │   ├── port9999.png</span>
<span class="pl-c1">│       │   └── theorem.css</span>
<span class="pl-c1">│       ├── example.md</span>
<span class="pl-c1">│       ├── figures</span>
<span class="pl-c1">│       ├── index.md</span>
<span class="pl-c1">│       ├── math.md</span>
<span class="pl-c1">│       ├── myworkflow.md</span>
<span class="pl-c1">│       └── weavesample.jmd</span>
<span class="pl-c1">├── gitpod</span>
<span class="pl-c1">│   └── Dockerfile</span>
<span class="pl-c1">├── jupytext.toml</span>
<span class="pl-c1">├── playground</span>
<span class="pl-c1">│   ├── notebook</span>
<span class="pl-c1">│   │   ├── Chisq.md</span>
<span class="pl-c1">│   │   ├── Harris.md</span>
<span class="pl-c1">│   │   ├── Rotation3D.md</span>
<span class="pl-c1">│   │   ├── apply_PCA_to_MNIST.md</span>
<span class="pl-c1">│   │   ├── box_and_ball_system.md</span>
<span class="pl-c1">│   │   ├── clang.md</span>
<span class="pl-c1">│   │   ├── convex_hull.md</span>
<span class="pl-c1">│   │   ├── coordinate_system.md</span>
<span class="pl-c1">│   │   ├── curve.md</span>
<span class="pl-c1">│   │   ├── example.md</span>
<span class="pl-c1">│   │   ├── fitting.md</span>
<span class="pl-c1">│   │   ├── free_fall.md</span>
<span class="pl-c1">│   │   ├── gradient_descent.md</span>
<span class="pl-c1">│   │   ├── histogram_eq.md</span>
<span class="pl-c1">│   │   ├── hop_step_jump.md</span>
<span class="pl-c1">│   │   ├── image_filtering.md</span>
<span class="pl-c1">│   │   ├── interact_sample.md</span>
<span class="pl-c1">│   │   ├── iris.md</span>
<span class="pl-c1">│   │   ├── jsxgraph_julia.md</span>
<span class="pl-c1">│   │   ├── jsxgraph_with_rawJS.md</span>
<span class="pl-c1">│   │   ├── jsxgraph_with_webio_jsexpr.md</span>
<span class="pl-c1">│   │   ├── lazysets.md</span>
<span class="pl-c1">│   │   ├── linear_regression.md</span>
<span class="pl-c1">│   │   ├── n-Soliton.md</span>
<span class="pl-c1">│   │   ├── ode.md</span>
<span class="pl-c1">│   │   ├── plots_fill_example.md</span>
<span class="pl-c1">│   │   ├── plots_sample.md</span>
<span class="pl-c1">│   │   ├── pluto</span>
<span class="pl-c1">│   │   │   └── sample.jl</span>
<span class="pl-c1">│   │   ├── point_on_circle.md</span>
<span class="pl-c1">│   │   ├── pyjulia.md</span>
<span class="pl-c1">│   │   ├── pyplot.md</span>
<span class="pl-c1">│   │   ├── rcall.md</span>
<span class="pl-c1">│   │   ├── reuleaux_triangle.md</span>
<span class="pl-c1">│   │   ├── seaborn.md</span>
<span class="pl-c1">│   │   ├── simple_harmonic_motion.md</span>
<span class="pl-c1">│   │   ├── tangent_space.md</span>
<span class="pl-c1">│   │   ├── tangent_vector.md</span>
<span class="pl-c1">│   │   └── wav_example.md</span>
<span class="pl-c1">│   └── test</span>
<span class="pl-c1">│       └── runtests.jl</span>
<span class="pl-c1">├── requirements.txt</span>
<span class="pl-c1">├── src</span>
<span class="pl-c1">│   └── MyWorkflow.jl</span>
<span class="pl-c1">└── test</span>
<span class="pl-c1">    └── runtests.jl</span></pre></div>
<h1><a id="user-content-how-to-use" class="anchor" aria-hidden="true" href="#how-to-use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>How to use</h1>
<h2><a id="user-content-prepare-environment" class="anchor" aria-hidden="true" href="#prepare-environment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Prepare Environment</h2>
<ul>
<li>
<p>Install Docker and Docker Compose. see the following link to learn more with your operating system:</p>
<ul>
<li><a href="https://docs.docker.com/docker-for-windows/install/" rel="nofollow">Install Docker Desktop on Windows</a></li>
<li><a href="https://docs.docker.com/docker-for-mac/install/" rel="nofollow">Install Docker Desktop on Mac</a></li>
<li><a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/" rel="nofollow">Get Docker Engine - Community for Ubuntu</a></li>
</ul>
</li>
<li>
<p>To test out you've installed docker, just try:</p>
</li>
</ul>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ docker run --rm -it julia
# some staff happens ...
"><pre><code>$ docker run --rm -it julia
# some staff happens ...
</code></pre></div>
<ul>
<li>It will initialize a fresh Julia environment even if you do not have a Julia on your (host) machine.</li>
</ul>
<h2><a id="user-content-buiding-docker-image" class="anchor" aria-hidden="true" href="#buiding-docker-image"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Buiding Docker image</h2>
<ul>
<li>O.K. Let's build a Docker image for our purpose. Just run:</li>
</ul>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ make build
"><pre><code>$ make build
</code></pre></div>
<p>which is exactly equivalent to the following procedure:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="$ rm -f Manifest.toml
$ docker build -t myworkflojl .
$ docker-compose build
$ docker-compose run --rm julia julia --project=/work -e 'using Pkg; Pkg.instantiate()'
"><pre><code>$ rm -f Manifest.toml
$ docker build -t myworkflojl .
$ docker-compose build
$ docker-compose run --rm julia julia --project=/work -e 'using Pkg; Pkg.instantiate()'
</code></pre></div>
<h3><a id="user-content-tips-for-windows-users" class="anchor" aria-hidden="true" href="#tips-for-windows-users"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Tips for Windows Users</h3>
<ul>
<li>You can install <code>make</code> command via <a href="https://github.com/microsoft/winget-cli">winget</a>.</li>
</ul>
<div class="highlight highlight-source-postscript position-relative" data-snippet-clipboard-copy-content="PS&gt; # open powershell NOT `cmd.exe`
PS&gt; winget install &quot;Make for Windows&quot; # install `make` command
PS&gt; make
"><pre><span class="pl-smi">PS</span>&gt; <span class="pl-smi">#</span> <span class="pl-smi">open</span> <span class="pl-smi">powershell</span> <span class="pl-smi">NOT</span> <span class="pl-smi">`cmd.exe`</span>
<span class="pl-smi">PS</span>&gt; <span class="pl-smi">winget</span> <span class="pl-smi">install</span> <span class="pl-smi">"Make</span> <span class="pl-k">for</span> <span class="pl-smi">Windows"</span> <span class="pl-smi">#</span> <span class="pl-smi">install</span> <span class="pl-smi">`make`</span> <span class="pl-smi">command</span>
<span class="pl-smi">PS</span>&gt; <span class="pl-smi">make</span></pre></div>
<ul>
<li>Or try the following procedure:</li>
</ul>
<div class="highlight highlight-source-postscript position-relative" data-snippet-clipboard-copy-content="PS&gt; Remove-Item -Path Manifest.toml -ErrorAction Ignore
PS&gt; docker build -t myworkflowjl .
PS&gt; docker-compose build
PS&gt; docker-compose run --rm julia julia --project=/work -e 'using Pkg; Pkg.instantiate()'
"><pre><span class="pl-smi">PS</span>&gt; <span class="pl-smi">Remove-Item</span> <span class="pl-smi">-Path</span> <span class="pl-smi">Manifest.toml</span> <span class="pl-smi">-ErrorAction</span> <span class="pl-smi">Ignore</span>
<span class="pl-smi">PS</span>&gt; <span class="pl-smi">docker</span> <span class="pl-smi">build</span> <span class="pl-smi">-t</span> <span class="pl-smi">myworkflowjl</span> <span class="pl-smi">.</span>
<span class="pl-smi">PS</span>&gt; <span class="pl-smi">docker-compose</span> <span class="pl-smi">build</span>
<span class="pl-smi">PS</span>&gt; <span class="pl-smi">docker-compose</span> <span class="pl-k">run</span> <span class="pl-smi">--rm</span> <span class="pl-smi">julia</span> <span class="pl-smi">julia</span> <span class="pl-smi">--project=</span><span class="pl-c1">/work</span> <span class="pl-smi">-e</span> <span class="pl-smi">'using</span> <span class="pl-smi">Pkg;</span> <span class="pl-smi">Pkg.instantiate</span><span class="pl-s"><span class="pl-pds">(</span><span class="pl-pds">)</span></span><span class="pl-smi">'</span></pre></div>
<h2><a id="user-content-pull-docker-image-optional" class="anchor" aria-hidden="true" href="#pull-docker-image-optional"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Pull Docker image (Optional)</h2>
<ul>
<li>Running <code>make build</code> may take much time to build our Docker image. Please use <code>make pull</code> instead.</li>
</ul>
<div class="highlight highlight-text-shell-session position-relative" data-snippet-clipboard-copy-content="$ make pull
"><pre>$ <span class="pl-s1">make pull</span></pre></div>
<p>which is almost equivalent to:</p>
<div class="highlight highlight-text-shell-session position-relative" data-snippet-clipboard-copy-content="$ rm -f Manifest.toml
$ docker pull myworkflowjl
$ docker-compose run --rm julia julia --project=/work -e 'using Pkg; Pkg.instantiate()'
"><pre>$ <span class="pl-s1">rm -f Manifest.toml</span>
$ <span class="pl-s1">docker pull myworkflowjl</span>
$ <span class="pl-s1">docker-compose run --rm julia julia --project=/work -e <span class="pl-s"><span class="pl-pds">'</span>using Pkg; Pkg.instantiate()<span class="pl-pds">'</span></span></span></pre></div>
<h2><a id="user-content-running-jupyter-notebookjupyterlab" class="anchor" aria-hidden="true" href="#running-jupyter-notebookjupyterlab"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Running Jupyter Notebook/JupyterLab</h2>
<div class="highlight highlight-text-shell-session position-relative" data-snippet-clipboard-copy-content="$ docker-compose up jupyter
myjupyter  |     To access the notebook, open this file in a browser:
myjupyter  |         file:///root/.local/share/jupyter/runtime/nbserver-1-open.html
myjupyter  |     Or copy and paste one of these URLs:
myjupyter  |         http://4a27c4a06b0f:8888/?token=xxxxxxxxxxxxxxxxxxxxxxx
myjupyter  |      or http://127.0.0.1:8888/?token=xxxxxxxxxxxxxxxxxxxxxxx
"><pre>$ <span class="pl-s1">docker-compose up jupyter</span>
<span class="pl-c1">myjupyter  |     To access the notebook, open this file in a browser:</span>
<span class="pl-c1">myjupyter  |         file:///root/.local/share/jupyter/runtime/nbserver-1-open.html</span>
<span class="pl-c1">myjupyter  |     Or copy and paste one of these URLs:</span>
<span class="pl-c1">myjupyter  |         http://4a27c4a06b0f:8888/?token=xxxxxxxxxxxxxxxxxxxxxxx</span>
<span class="pl-c1">myjupyter  |      or http://127.0.0.1:8888/?token=xxxxxxxxxxxxxxxxxxxxxxx</span></pre></div>
<p>Then open your web browser and access to <code>http://127.0.0.1:8888/?token=xxxxxxxxxxxxxxxxxxxxxxx</code>.</p>
<p>You can also initialize JupyterLab as you like via</p>
<div class="highlight highlight-text-shell-session position-relative" data-snippet-clipboard-copy-content="$ docker-compose up lab
"><pre>$ <span class="pl-s1">docker-compose up lab</span></pre></div>
<ul>
<li>You'll see a JupyterLab screen its theme is Monokai++ (This choice comes from my preference.) :D .</li>
</ul>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/lab.png"><img src="docs/src/assets/lab.png" alt="img" style="max-width:100%;"></a></p>
<ul>
<li>If you like to open <code>experiments/notebook/&lt;ournotebook&gt;.jl</code>, right click the file to select and <code>Open with</code> -&gt; <code>Notebook</code>. You're good to go.</li>
</ul>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/open_notebook_on_jupyterlab.png"><img src="docs/src/assets/open_notebook_on_jupyterlab.png" alt="img" style="max-width:100%;"></a></p>
<ul>
<li>
<p>Note that since we adopt <code>jupytext</code> technology, we do not have to commit/push <code>*.ipynb</code> file. Namely, we can manage Jupyter Notebook as a normal source code.</p>
</li>
<li>
<p>Enjoy your Jupyter life.</p>
</li>
</ul>
<h2><a id="user-content-running-pluto" class="anchor" aria-hidden="true" href="#running-pluto"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Running Pluto</h2>
<p><a href="https://github.com/fonsp/Pluto.jl">Pluto.jl</a> is a lightweight reactive notebooks for Julia. Just run the following command:</p>
<h3><a id="user-content-using-docker-compose" class="anchor" aria-hidden="true" href="#using-docker-compose"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>using Docker Compose</h3>
<div class="highlight highlight-text-shell-session position-relative" data-snippet-clipboard-copy-content="$ docker-compose up pluto
"><pre>$ <span class="pl-s1">docker-compose up pluto</span></pre></div>
<p>Then, go to <code>localhost:9999</code></p>
<h3><a id="user-content-from-jupyter-notebooklab" class="anchor" aria-hidden="true" href="#from-jupyter-notebooklab"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>From Jupyter Notebook/Lab</h3>
<ul>
<li>Run <code>docker-compose up jupyter</code> and then click <code>New</code> button on the top right of your browser. Then select <code>Pluto Notebook</code>.</li>
</ul>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/16760547/98430578-c472d800-20f1-11eb-9dd7-fbcd7e7a086b.png"><img src="https://user-images.githubusercontent.com/16760547/98430578-c472d800-20f1-11eb-9dd7-fbcd7e7a086b.png" alt="image" style="max-width:100%;"></a></p>
<h2><a id="user-content-connect-to-docker-container-with-junoatom-for-linux-or-mac-users-only" class="anchor" aria-hidden="true" href="#connect-to-docker-container-with-junoatom-for-linux-or-mac-users-only"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Connect to docker container with Juno/Atom (For Linux or Mac users only)</h2>
<ul>
<li>We we will assume you've installed Juno.</li>
<li>Go to <code>Open Settings</code> -&gt; <code>Julia Client</code> -&gt; <code>Julia Options</code> -&gt; <code>Port for Communicating with the Julia process</code> and set value from <code>random</code> to <code>9999</code>.</li>
</ul>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/port9999.png"><img src="docs/src/assets/port9999.png" alt="imgs" style="max-width:100%;"></a></p>
<ul>
<li>To connect to Docker container, open your Atom editor and open command palette(via <code>Cmd+shift+p</code> or <code>Ctrl+shift+p</code>). Then select <code>Julia Client Connect External Process</code>. Finally again open command palette and select <code>Julia Client: New Terminal</code>. You'll see a terminal at the bottom of the Atom edetor's screen. After that, simply run <code>make atom</code> or</li>
</ul>
<div class="highlight highlight-text-shell-session position-relative" data-snippet-clipboard-copy-content="# For Mac user
$  docker run --rm -it --network=host -v ${PWD}:/work -w /work myworkflowjl julia -J/sysimages/atom.so --project=@. -L .atom/init_mac.jl
"><pre># <span class="pl-s1">For Mac user</span>
$  <span class="pl-s1">docker run --rm -it --network=host -v <span class="pl-smi">${PWD}</span>:/work -w /work myworkflowjl julia -J/sysimages/atom.so --project=@. -L .atom/init_mac.jl</span></pre></div>
<div class="highlight highlight-text-shell-session position-relative" data-snippet-clipboard-copy-content="# For Linux user
$ docker run --rm -it --network=host -v ${PWD}:/work -w /work myworkflowjl julia -J/sysimages/atom.so --project=@. -L .atom/init_linux.jl
"><pre># <span class="pl-s1">For Linux user</span>
$ <span class="pl-s1">docker run --rm -it --network=host -v <span class="pl-smi">${PWD}</span>:/work -w /work myworkflowjl julia -J/sysimages/atom.so --project=@. -L .atom/init_linux.jl</span></pre></div>
<p>It will show Julia's REPL inside of the terminal. <code>pwd()</code> should output <code>"/work"</code>, otherwise (e.g. <code>~/work/MyWorkflow.jl</code>)  you're something wrong (opening your Julia session on your host).</p>
<div class="highlight highlight-text-shell-session position-relative" data-snippet-clipboard-copy-content="julia&gt; pwd()
&quot;/work&quot;
"><pre><span class="pl-c1">julia&gt; pwd()</span>
<span class="pl-c1">"/work"</span></pre></div>
<ul>
<li>Since our Docker image adopts <code>sysimage</code> which include precompile statements related to <code>Atom</code> or <code>Plots.jl</code> generated by <code>PackageCompiler.jl</code>. You'll find the speed of <code>using Plots; plot(sin)</code> is much extremely faster than that of runs on Julia session on your host.</li>
</ul>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="# our sysimage
julia&gt; @time begin using Plots; plot(sin) end
  0.022140 seconds (38.23 k allocations: 1.731 MiB) # &lt;- Fast
"><pre><code># our sysimage
julia&gt; @time begin using Plots; plot(sin) end
  0.022140 seconds (38.23 k allocations: 1.731 MiB) # &lt;- Fast
</code></pre></div>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="# normal Julia
julia&gt; @time begin using Plots; plot(sin) end
 14.006315 seconds (42.16 M allocations: 2.131 GiB, 3.86% gc time) #&lt;- So slow ...
"><pre><code># normal Julia
julia&gt; @time begin using Plots; plot(sin) end
 14.006315 seconds (42.16 M allocations: 2.131 GiB, 3.86% gc time) #&lt;- So slow ...
</code></pre></div>
<ul>
<li>You can reproduce the <code>sysimage</code> by yourself to reduce the latency of loading time of heavy packages. See This issue <a href="https://github.com/JuliaLang/PackageCompiler.jl/issues/352">https://github.com/JuliaLang/PackageCompiler.jl/issues/352</a>.</li>
</ul>
<h2><a id="user-content-create-docstest" class="anchor" aria-hidden="true" href="#create-docstest"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Create docs/test</h2>
<p>By running <code>make web</code>, you can create documentation files for our packages MyWorkflow.jl, namely:</p>
<div class="highlight highlight-text-shell-session position-relative" data-snippet-clipboard-copy-content="$ make web

julia --project=docs -e '\
    using Pkg;\
    Pkg.develop(PackageSpec(path=pwd()));\
    Pkg.instantiate();\
    include(&quot;docs/make.jl&quot;);\
    '
Path `~/work/MyWorkflow.jl` exists and looks like the correct package. Using existing path.
  Resolving package versions...
No Changes to `~/work/MyWorkflow.jl/docs/Project.toml`
No Changes to `~/work/MyWorkflow.jl/docs/Manifest.toml`
┌ Info: Weaving chunk 1 from line 25
└   progress = 0.0
┌ Info: Weaved all chunks
└   progress = 1
[ Info: Weaved to /Users/terasaki/work/MyWorkflow.jl/docs/src/weavesample.md
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
[ Info: ExpandTemplates: expanding markdown templates.
[ Info: CrossReferences: building cross-references.
[ Info: CheckDocument: running document checks.
[ Info: Populate: populating indices.
[ Info: RenderDocument: rendering document.
[ Info: HTMLWriter: rendering HTML pages.
┌ Warning: Documenter could not auto-detect the building environment Skipping deployment.
└ @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/deployconfig.jl:75
python3 -m http.server --bind 0.0.0.0 --directory docs/build
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
"><pre>$ <span class="pl-s1">make web</span>

<span class="pl-c1">julia --project=docs -e '\</span>
<span class="pl-c1">    using Pkg;\</span>
<span class="pl-c1">    Pkg.develop(PackageSpec(path=pwd()));\</span>
<span class="pl-c1">    Pkg.instantiate();\</span>
<span class="pl-c1">    include("docs/make.jl");\</span>
<span class="pl-c1">    '</span>
<span class="pl-c1">Path `~/work/MyWorkflow.jl` exists and looks like the correct package. Using existing path.</span>
<span class="pl-c1">  Resolving package versions...</span>
<span class="pl-c1">No Changes to `~/work/MyWorkflow.jl/docs/Project.toml`</span>
<span class="pl-c1">No Changes to `~/work/MyWorkflow.jl/docs/Manifest.toml`</span>
<span class="pl-c1">┌ Info: Weaving chunk 1 from line 25</span>
<span class="pl-c1">└   progress = 0.0</span>
<span class="pl-c1">┌ Info: Weaved all chunks</span>
<span class="pl-c1">└   progress = 1</span>
<span class="pl-c1">[ Info: Weaved to /Users/terasaki/work/MyWorkflow.jl/docs/src/weavesample.md</span>
<span class="pl-c1">[ Info: SetupBuildDirectory: setting up build directory.</span>
<span class="pl-c1">[ Info: Doctest: running doctests.</span>
<span class="pl-c1">[ Info: ExpandTemplates: expanding markdown templates.</span>
<span class="pl-c1">[ Info: CrossReferences: building cross-references.</span>
<span class="pl-c1">[ Info: CheckDocument: running document checks.</span>
<span class="pl-c1">[ Info: Populate: populating indices.</span>
<span class="pl-c1">[ Info: RenderDocument: rendering document.</span>
<span class="pl-c1">[ Info: HTMLWriter: rendering HTML pages.</span>
<span class="pl-c1">┌ Warning: Documenter could not auto-detect the building environment Skipping deployment.</span>
<span class="pl-c1">└ @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/deployconfig.jl:75</span>
<span class="pl-c1">python3 -m http.server --bind 0.0.0.0 --directory docs/build</span>
<span class="pl-c1">Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...</span></pre></div>
<ul>
<li>It is good idea to run using <code>doctest</code>:</li>
</ul>
<div class="highlight highlight-text-shell-session position-relative" data-snippet-clipboard-copy-content="$ julia --project=@.
julia&gt; 
julia&gt; using MyWorkflow, Documenter; DocMeta.setdocmeta!(MyWorkflow, :DocTestSetup, :(using MyWorkflow); recursive=true) ;doctest(MyWorkflow)

[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
[ Info: Skipped ExpandTemplates step (doctest only).
[ Info: Skipped CrossReferences step (doctest only).
[ Info: Skipped CheckDocument step (doctest only).
[ Info: Skipped Populate step (doctest only).
[ Info: Skipped RenderDocument step (doctest only).
Test Summary:        | Pass  Total
Doctests: MyWorkflow |    1      1
Test.DefaultTestSet(&quot;Doctests: MyWorkflow&quot;, Any[], 1, false)
"><pre>$ <span class="pl-s1">julia --project=@.</span>
<span class="pl-c1">julia&gt; </span>
<span class="pl-c1">julia&gt; using MyWorkflow, Documenter; DocMeta.setdocmeta!(MyWorkflow, :DocTestSetup, :(using MyWorkflow); recursive=true) ;doctest(MyWorkflow)</span>

<span class="pl-c1">[ Info: SetupBuildDirectory: setting up build directory.</span>
<span class="pl-c1">[ Info: Doctest: running doctests.</span>
<span class="pl-c1">[ Info: Skipped ExpandTemplates step (doctest only).</span>
<span class="pl-c1">[ Info: Skipped CrossReferences step (doctest only).</span>
<span class="pl-c1">[ Info: Skipped CheckDocument step (doctest only).</span>
<span class="pl-c1">[ Info: Skipped Populate step (doctest only).</span>
<span class="pl-c1">[ Info: Skipped RenderDocument step (doctest only).</span>
<span class="pl-c1">Test Summary:        | Pass  Total</span>
<span class="pl-c1">Doctests: MyWorkflow |    1      1</span>
<span class="pl-c1">Test.DefaultTestSet("Doctests: MyWorkflow", Any[], 1, false)</span></pre></div>
</article></div>