<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-stanmcmcchains" class="anchor" aria-hidden="true" href="#stanmcmcchains"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>StanMCMCChains</h1>
<p><a href="https://travis-ci.org/StanJulia/StanMCMCChains.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fe345a7f094e5acef91718d751c59b131b4bf46f76acf37d0660a6fb37fcac8b/68747470733a2f2f7472617669732d63692e6f72672f5374616e4a756c69612f5374616e4d434d43436861696e732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/StanJulia/StanMCMCChains.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://coveralls.io/github/StanJulia/StanMCMCChains.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/290c647f5e82975a7cbdfacec63b05e76d5736fce505af33a6ee9f9441a3545f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f5374616e4a756c69612f5374616e4d434d43436861696e732e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/StanJulia/StanMCMCChains.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/StanJulia/StanMCMCChains.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/ba99835677d1a0d36bbd807cbec5e58062617674524444cc1d60a028df63c811/687474703a2f2f636f6465636f762e696f2f6769746875622f5374616e4a756c69612f5374616e4d434d43436861696e732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/StanJulia/StanMCMCChains.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Introduction</h2>
<p>This package converts the output produced by CmdStan.jl to a TuringLang/Chains object suitable for further processing by the <a href="https://github.com/TuringLang/MCMCChains.jl">MCMCChains</a> package.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>In the definition of the Stanmodel, request the output_format=:mcmcchains:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="  stanmodel = Stanmodel(num_samples=1200, thin=2, name=&quot;bernoulli&quot;, 
    model=bernoullimodel, output_format=:mcmcchains);
"><pre><code>  stanmodel = Stanmodel(num_samples=1200, thin=2, name="bernoulli", 
    model=bernoullimodel, output_format=:mcmcchains);
</code></pre></div>
<p>The subsequent call to stan() will now return a MCMCChains.Chains object in chains as in the included Bernoulli example:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="... (snipped)

  rc, chains, cnames = stan(stanmodel, observeddata, ProjDir, diagnostics=false,
    CmdStanDir=CMDSTAN_HOME);
    
... (snipped)

"><pre><code>... (snipped)

  rc, chains, cnames = stan(stanmodel, observeddata, ProjDir, diagnostics=false,
    CmdStanDir=CMDSTAN_HOME);
    
... (snipped)

</code></pre></div>
<p>It is also possible to do this conversion after the call to stan():</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="  stanmodel = Stanmodel(num_samples=1200, thin=2, name=&quot;bernoulli&quot;, 
    model=bernoullimodel);

  rc, sims, cnames = stan(stanmodel, observeddata, ProjDir, diagnostics=false,
    CmdStanDir=CMDSTAN_HOME);
  
  chains = convert_a3d(sims, cnames, Val(:mcmcchains))

"><pre><code>  stanmodel = Stanmodel(num_samples=1200, thin=2, name="bernoulli", 
    model=bernoullimodel);

  rc, sims, cnames = stan(stanmodel, observeddata, ProjDir, diagnostics=false,
    CmdStanDir=CMDSTAN_HOME);
  
  chains = convert_a3d(sims, cnames, Val(:mcmcchains))

</code></pre></div>
<p>The bernoulli example also demonstrated how a Chains object can be saved and restored.</p>
<h2><a id="user-content-further-examples" class="anchor" aria-hidden="true" href="#further-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Further examples</h2>
<p>Several more examples will be contained in <a href="https://github.com/StanJulia/StanMCMCChainsExamples.jl">StanMCMCChainsExamples.jl</a>.</p>
</article></div>