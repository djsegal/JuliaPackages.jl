<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-schedulingjl" class="anchor" aria-hidden="true" href="#schedulingjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Scheduling.jl</h1>
<p><a href="https://travis-ci.com/bprzybylski/Scheduling.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4d203625ab34aef9899a1ef3527efaa455b2cace/68747470733a2f2f7472617669732d63692e636f6d2f6270727a7962796c736b692f5363686564756c696e672e6a6c2e7376673f746f6b656e3d674665337077624a5374514e7a514b5046796773266272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/bprzybylski/Scheduling.jl.svg?token=gFe3pwbJStQNzQKPFygs&amp;branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/bprzybylski/scheduling-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9849ea3fa8825521d0dd915605cbf8c401633e53/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6164656937336f31336b36776839336a3f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/adei73o13k6wh93j?svg=true" style="max-width:100%;"></a>
<a href="https://bprzybylski.github.io/Scheduling.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://bprzybylski.github.io/Scheduling.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<p><code>Scheduling.jl</code> is a pure Julia package that can be seen as a framework for scheduling research. It is maintained by Sascha Hunold (TU Wien) and Bartlomiej Przybylski (AMU Poznan).</p>
<h2><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h2>
<p>At the moment the package provides a limited amount of functionalities.</p>
<h3><a id="user-content-scheduling" class="anchor" aria-hidden="true" href="#scheduling"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Scheduling</h3>
<p><code>Scheduling</code> is a main module of the package. It provides:</p>
<ul>
<li>a set of structures for representing:
<ul>
<li>fixed processing times jobs,</li>
<li>parallel machines,</li>
<li>schedules,</li>
</ul>
</li>
<li>functions for plotting a schedule and exporting it as a TeX file,</li>
<li>functions for saving a schedule into an HDF5 binary file and loading it back from such a file.</li>
</ul>
<h3><a id="user-content-schedulingobjectives" class="anchor" aria-hidden="true" href="#schedulingobjectives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Scheduling.Objectives</h3>
<p>The <code>Scheduling.Objectives</code> module provides a number of objective functions that can be used to estimate the quality of a schedule.</p>
<h3><a id="user-content-schedulingalgorithms" class="anchor" aria-hidden="true" href="#schedulingalgorithms"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Scheduling.Algorithms</h3>
<p>This module provides a set of implementations of the scheduling algorithms. These algorithms may be used to transform a set of jobs and machines into a schedule based on exact, heuristic or approximation approach. The list of algorithms include the standard list algorithms like LPT, SPT, WLPT and WSPT.</p>
<p>Moreover a few algorithms for the $\text{P}||\text{C}_\text{max}$ problem are implemented:</p>
<ul>
<li>an exact algorithm based on the Integer Program,</li>
<li>an approximation algorithm by Hochbaum &amp; Shmoys,</li>
<li>an on-line MR algorithm for the same problem by Fleischer &amp; Wahl.</li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>To use <code>Scheduling</code> we require Julia 1.0 or higher. Please see
<a href="http://julialang.org/downloads/" rel="nofollow">http://julialang.org/downloads</a> for instructions on how to obtain Julia for your system. In order to install the <code>Scheduling</code> package, simply type:</p>
<pre lang="julia-repl"><code>julia&gt; using Pkg; Pkg.add("Scheduling")
</code></pre>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick start</h2>
<p>The following example shows how to use some of the functionalities provided by the <code>Scheduling.jl</code> package</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Scheduling <span class="pl-c"><span class="pl-c">#</span> We need the basic structures</span>
<span class="pl-k">using</span> Scheduling<span class="pl-k">.</span>Algorithms <span class="pl-c"><span class="pl-c">#</span> We will use some predefined algorithms</span>
<span class="pl-k">using</span> Scheduling<span class="pl-k">.</span>Objectives <span class="pl-c"><span class="pl-c">#</span> We will estimate the quality of the resulting schedules</span>

<span class="pl-c"><span class="pl-c">#</span> Generate a set of jobs with processing times from an array</span>
J <span class="pl-k">=</span> <span class="pl-c1">Jobs</span>([<span class="pl-c1">27</span>, <span class="pl-c1">19</span>, <span class="pl-c1">19</span>, <span class="pl-c1">4</span>, <span class="pl-c1">48</span>, <span class="pl-c1">38</span>, <span class="pl-c1">29</span>, <span class="pl-c1">21</span>, <span class="pl-c1">9</span>, <span class="pl-c1">22</span>, <span class="pl-c1">11</span>, <span class="pl-c1">27</span>, <span class="pl-c1">36</span>, <span class="pl-c1">34</span>, <span class="pl-c1">21</span>, <span class="pl-c1">7</span>, <span class="pl-c1">7</span>, <span class="pl-c1">28</span>])
<span class="pl-c"><span class="pl-c">#</span> Generate a set of 4 identical machines</span>
M <span class="pl-k">=</span> <span class="pl-c1">Machines</span>(<span class="pl-c1">4</span>)

<span class="pl-c"><span class="pl-c">#</span> Generate an optimal schedule using IP</span>
OPT <span class="pl-k">=</span> Algorithms<span class="pl-k">.</span><span class="pl-c1">P__Cmax_IP</span>(J, M)
<span class="pl-c"><span class="pl-c">#</span> As all the numbers are rational and we expect the length</span>
<span class="pl-c"><span class="pl-c">#</span> of the schedule to have integer time, we need to convert</span>
<span class="pl-c"><span class="pl-c">#</span> the Cmax value</span>
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Optimal schedule:     Cmax = <span class="pl-v">$(<span class="pl-c1">Int</span>(<span class="pl-c1">cmax</span>(OPT)))</span><span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Generate a schedule using LPT list rule</span>
LPT <span class="pl-k">=</span> Algorithms<span class="pl-k">.</span><span class="pl-c1">lpt</span>(J, M)
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>LPT schedule:         Cmax = <span class="pl-v">$(<span class="pl-c1">Int</span>(<span class="pl-c1">cmax</span>(LPT)))</span><span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Generate a schedule using SPT list rule</span>
SPT <span class="pl-k">=</span> Algorithms<span class="pl-k">.</span><span class="pl-c1">spt</span>(J, M)
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>SPT schedule:         Cmax = <span class="pl-v">$(<span class="pl-c1">Int</span>(<span class="pl-c1">cmax</span>(SPT)))</span><span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Generate a schedule using the Hochbaum-Shmoys algorithm</span>
HS <span class="pl-k">=</span> Algorithms<span class="pl-k">.</span><span class="pl-c1">P__Cmax_HS</span>(J, M, eps <span class="pl-k">=</span> <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span>)
<span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>HS schedule:          Cmax = <span class="pl-v">$(<span class="pl-c1">Int</span>(<span class="pl-c1">cmax</span>(HS)))</span><span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Plot the optimal schedule</span>
Scheduling<span class="pl-k">.</span><span class="pl-c1">plot</span>(OPT)</pre></div>
<p>The output will be:</p>
<pre><code>Optimal schedule:     Cmax = 102
LPT schedule:         Cmax = 104
SPT schedule:         Cmax = 125
HS schedule:          Cmax = 124
</code></pre>
<p>and then the optimal plot will be generated by the <code>PyPlot</code> package.</p>
<p>Please note that the functions copy the input vectors before they execute the algorithm. If you want to prevent that, you may call respective functions ending with <code>!</code>, e.g. <code>P__Cmax_HS!</code>.</p>
</article></div>