<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mljtestinterfacejl" class="anchor" aria-hidden="true" href="#mljtestinterfacejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MLJTestInterface.jl</h1>
<p dir="auto">Package for testing an implementation of the
<a href="https://alan-turing-institute.github.io/MLJ.jl/dev/" rel="nofollow">MLJ</a> model interface.</p>
<p dir="auto"><a href="https://github.com/bcgov/repomountie/blob/master/doc/lifecycle-badges.md"><img src="https://camo.githubusercontent.com/efb39371ed834c15976d5a75e03476a9474ac8bbd77768d9887d95e4a9f3cd0b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6966656379636c652d4578706572696d656e74616c2d333339393939" alt="Lifecycle:Experimental" data-canonical-src="https://img.shields.io/badge/Lifecycle-Experimental-339999" style="max-width: 100%;"></a> <a href="https://github.com/JuliaAI/MLJTestInterface.jl/actions"><img src="https://github.com/JuliaAI/MLJTestInterface.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a> <a href="https://codecov.io/github/JuliaAI/MLJTestInterface.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/77911da32cadd4b3f5a270facd1ac7b5fa3123723c9c46eda4be045936c3c371/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696141492f4d4c4a54657374496e746572666163652e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaAI/MLJTestInterface.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;MLJTestInterface&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>MLJTestInterface<span class="pl-pds">"</span></span>)</pre></div>
<h1 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h1>
<p dir="auto">To test that a collection of model types, <code>models</code>, satisfy the <a href="https://alan-turing-institute.github.io/MLJ.jl/dev/adding_models_for_general_use/" rel="nofollow">MLJ model interface
requirements</a>,
use the <code>MLJTestInterface.test</code> function:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="MLJTestInterface.test(models, data...; mod=Main, level=2, throw=false, verbosity=1) 
    -&gt; failures, summary"><pre>MLJTestInterface<span class="pl-k">.</span><span class="pl-c1">test</span>(models, data<span class="pl-k">...</span>; mod<span class="pl-k">=</span>Main, level<span class="pl-k">=</span><span class="pl-c1">2</span>, throw<span class="pl-k">=</span><span class="pl-c1">false</span>, verbosity<span class="pl-k">=</span><span class="pl-c1">1</span>) 
    <span class="pl-k">-&gt;</span> failures, summary</pre></div>
<p dir="auto">Here <code>data</code> is training data acceptable to all the specified <code>models</code>, as would appear in
a call <code>MLJModelInterface.fit(model_instance, verbosity, data...)</code>.</p>
<p dir="auto">For detailed documentation, run <code>using MLJTestInterface; @doc MLJTestInterface.test</code>.</p>
<h1 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h1>
<p dir="auto">The following tests the model interface implemented by the <code>DecisionTreeClassifier</code> model
implemented in the package MLJDecisionTreeInterface.jl.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import MLJDecisionTreeInterface
import MLJTestInterface
using Test
X, y = MLJTestInterface.make_multiclass()
failures, summary = MLJTestInterface.test(
    [MLJDecisionTreeInterface.DecisionTreeClassifier, ],
    X, y,
    verbosity=0, # set to 2 when debugging
    throw=false, # set to `true` when debugging
    mod=@__MODULE__,
)
@test isempty(failures)"><pre><span class="pl-k">import</span> MLJDecisionTreeInterface
<span class="pl-k">import</span> MLJTestInterface
<span class="pl-k">using</span> Test
X, y <span class="pl-k">=</span> MLJTestInterface<span class="pl-k">.</span><span class="pl-c1">make_multiclass</span>()
failures, summary <span class="pl-k">=</span> MLJTestInterface<span class="pl-k">.</span><span class="pl-c1">test</span>(
    [MLJDecisionTreeInterface<span class="pl-k">.</span>DecisionTreeClassifier, ],
    X, y,
    verbosity<span class="pl-k">=</span><span class="pl-c1">0</span>, <span class="pl-c"><span class="pl-c">#</span> set to 2 when debugging</span>
    throw<span class="pl-k">=</span><span class="pl-c1">false</span>, <span class="pl-c"><span class="pl-c">#</span> set to `true` when debugging</span>
    mod<span class="pl-k">=</span><span class="pl-c1">@__MODULE__</span>,
)
<span class="pl-c1">@test</span> <span class="pl-c1">isempty</span>(failures)</pre></div>
<h1 dir="auto"><a id="user-content-datasets" class="anchor" aria-hidden="true" href="#datasets"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Datasets</h1>
<p dir="auto">The following commands generate small datasets of the form <code>(X, y)</code> suitable for interface
tests:</p>
<ul dir="auto">
<li>
<p dir="auto"><code>MLJTestInterface.make_binary</code></p>
</li>
<li>
<p dir="auto"><code>MLJTestInterface.make_multiclass</code></p>
</li>
<li>
<p dir="auto"><code>MLJTestInterface.make_regression</code></p>
</li>
<li>
<p dir="auto"><code>MLJTestInterface.make_count</code></p>
</li>
</ul>
</article></div>