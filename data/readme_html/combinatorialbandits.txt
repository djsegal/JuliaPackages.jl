<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-combinatorialbandits" class="anchor" aria-hidden="true" href="#combinatorialbandits"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>CombinatorialBandits</h1>
<p><a href="http://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/31267b3e96ca20997396b88f7c44233710fcc637/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="Project Status: Active – The project has reached a stable, usable state and is being actively developed." data-canonical-src="http://www.repostatus.org/badges/latest/active.svg" style="max-width:100%;"></a>
<a href="http://opensource.org/licenses/MIT" rel="nofollow"><img src="https://camo.githubusercontent.com/d4d7e802861ee34f2db3a98f8558278fb2a7a106/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c6174" alt="The MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat" style="max-width:100%;"></a>
<a href="https://travis-ci.org/dourouc05/CombinatorialBandits.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/07ee383e7bb13d140aa54e341dc8d29971446674/68747470733a2f2f7472617669732d63692e6f72672f646f75726f756330352f436f6d62696e61746f7269616c42616e646974732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dourouc05/CombinatorialBandits.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/dourouc05/CombinatorialBandits.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/7ce22e250b4c5e47b29f007cdad581029447f787/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f646f75726f756330352f436f6d62696e61746f7269616c42616e646974732e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/dourouc05/CombinatorialBandits.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/dourouc05/CombinatorialBandits.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/5e444b61239e9cd863b8cad7b96471e9da2faf7b/687474703a2f2f636f6465636f762e696f2f6769746875622f646f75726f756330352f436f6d62696e61746f7269616c42616e646974732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/dourouc05/CombinatorialBandits.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package implements several algorithms to deal with combinatorial multi-armed bandit (CMAB), including the first polynomial-time optimum-regret algorithm AESCB (<a href="https://arxiv.org/abs/2002.07258" rel="nofollow">described in our paper</a>).</p>
<p>See also <a href="https://github.com/rawls238/Bandits.jl">Bandits.jl</a>, focusing on multi-armed bandits (i.e. not combinatorial).</p>
<p>To install:</p>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CombinatorialBandits<span class="pl-pds">"</span></span>)</pre></div>
<p>Example usage:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> CombinatorialBandits, Distributions

n <span class="pl-k">=</span> <span class="pl-c1">20</span>
m <span class="pl-k">=</span> <span class="pl-c1">8</span>
ε <span class="pl-k">=</span> <span class="pl-c1">0.1</span>
distr <span class="pl-k">=</span> Distribution[<span class="pl-c1">Bernoulli</span>(<span class="pl-c1">.5</span> <span class="pl-k">+</span> ((i <span class="pl-k">%</span> <span class="pl-c1">3</span> <span class="pl-k">==</span> <span class="pl-c1">0</span>) ? ε : <span class="pl-k">-</span>ε)) <span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>n]

i <span class="pl-k">=</span> <span class="pl-c1">MSet</span>(distr, <span class="pl-c1">8</span>, <span class="pl-c1">MSetAlgosSolver</span>())
<span class="pl-c1">@time</span> <span class="pl-c1">simulate</span>(i, <span class="pl-c1">ThompsonSampling</span>(), <span class="pl-c1">200</span>)
<span class="pl-c1">@time</span> <span class="pl-c1">simulate</span>(i, <span class="pl-c1">LLR</span>(), <span class="pl-c1">200</span>)
<span class="pl-c1">@time</span> <span class="pl-c1">simulate</span>(i, <span class="pl-c1">CUCB</span>(), <span class="pl-c1">200</span>)
<span class="pl-c1">@time</span> <span class="pl-c1">simulate</span>(i, <span class="pl-c1">ESCB2</span>(<span class="pl-c1">ESCB2Budgeted</span>(<span class="pl-c1">.1</span>, <span class="pl-c1">true</span>)), <span class="pl-c1">200</span>)</pre></div>
<h2><a id="user-content-citing" class="anchor" aria-hidden="true" href="#citing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Citing</h2>
<p>If you use this package in your research, please cite this preprint:</p>
<pre><code>@misc{cuvelier2020,
    title={Statistically Efficient, Polynomial-Time Algorithms for Combinatorial Semi Bandits},
    author={Thibaut Cuvelier and Richard Combes and Eric Gourdin},
    year={2020},
    eprint={2002.07258},
    archivePrefix={arXiv},
    primaryClass={stat.ML}
}
</code></pre>
</article></div>