<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-speedmapping" class="anchor" aria-hidden="true" href="#speedmapping"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SpeedMapping</h1>
<p dir="auto"><a href="https://github.com/NicolasL-S/SpeedMapping.jl/actions"><img src="https://github.com/NicolasL-S/SpeedMapping.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/NicolasL-S/SpeedMapping.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ae2fd2b09d8e32a1b5736c46911f6876c8ad44da6ca1127ace10bf84b75d7a76/68747470733a2f2f636f6465636f762e696f2f67682f4e69636f6c61734c2d532f53706565644d617070696e672e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d554b7a42624433576551" alt="codecov" data-canonical-src="https://codecov.io/gh/NicolasL-S/SpeedMapping.jl/branch/main/graph/badge.svg?token=UKzBbD3WeQ" style="max-width: 100%;"></a></p>
<p dir="auto">SpeedMapping accelerates the convergence of a mapping to a fixed point by the Alternating cyclic extrapolation algorithm. Since gradient descent is an example of such mapping, it can also perform multivariate optimization based on the gradient function. Typical uses are</p>
<p dir="auto">Accelerating a fixed-point mapping</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using SpeedMapping, LinearAlgebra
julia&gt; function power_iteration!(x_out, x_in)
           mul!(x_out, [1 2;2 3], x_in)
           x_out ./= maximum(abs.(x_out))
      end;
julia&gt; dominant_eigenvector = speedmapping(ones(2); m! = power_iteration!).minimizer
2-element Vector{Float64}:
 0.6180339887498947
 1.0"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SpeedMapping, LinearAlgebra
julia<span class="pl-k">&gt;</span> <span class="pl-k">function</span> <span class="pl-en">power_iteration!</span>(x_out, x_in)
           <span class="pl-c1">mul!</span>(x_out, [<span class="pl-c1">1</span> <span class="pl-c1">2</span>;<span class="pl-c1">2</span> <span class="pl-c1">3</span>], x_in)
           x_out <span class="pl-k">./=</span> <span class="pl-c1">maximum</span>(<span class="pl-c1">abs</span>.(x_out))
      <span class="pl-k">end</span>;
julia<span class="pl-k">&gt;</span> dominant_eigenvector <span class="pl-k">=</span> <span class="pl-c1">speedmapping</span>(<span class="pl-c1">ones</span>(<span class="pl-c1">2</span>); m! <span class="pl-k">=</span> power_iteration!)<span class="pl-k">.</span>minimizer
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Float64}<span class="pl-k">:</span>
 <span class="pl-c1">0.6180339887498947</span>
 <span class="pl-c1">1.0</span></pre></div>
<p dir="auto">Optimizing a function</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using SpeedMapping
julia&gt; rosenbrock(x) =  (1 - x[1])^2 + 100(x[2] - x[1]^2)^2;
julia&gt; solution = speedmapping(zeros(2); f = rosenbrock).minimizer
2-element Vector{Float64}:
 1.0000000000001315
 0.9999999999999812"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SpeedMapping
julia<span class="pl-k">&gt;</span> <span class="pl-en">rosenbrock</span>(x) <span class="pl-k">=</span>  (<span class="pl-c1">1</span> <span class="pl-k">-</span> x[<span class="pl-c1">1</span>])<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">100</span>(x[<span class="pl-c1">2</span>] <span class="pl-k">-</span> x[<span class="pl-c1">1</span>]<span class="pl-k">^</span><span class="pl-c1">2</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>;
julia<span class="pl-k">&gt;</span> solution <span class="pl-k">=</span> <span class="pl-c1">speedmapping</span>(<span class="pl-c1">zeros</span>(<span class="pl-c1">2</span>); f <span class="pl-k">=</span> rosenbrock)<span class="pl-k">.</span>minimizer
<span class="pl-c1">2</span><span class="pl-k">-</span>element Vector{Float64}<span class="pl-k">:</span>
 <span class="pl-c1">1.0000000000001315</span>
 <span class="pl-c1">0.9999999999999812</span></pre></div>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<p dir="auto"><a href="https://NicolasL-S.github.io/SpeedMapping.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></p>
<h3 dir="auto"><a id="user-content-the-alternating-cyclic-extrapolation-algorithm" class="anchor" aria-hidden="true" href="#the-alternating-cyclic-extrapolation-algorithm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>The Alternating cyclic extrapolation algorithm</h3>
<p dir="auto">Let <em>F</em> : ℝⁿ → ℝⁿ denote a mapping which admits continuous, bounded partial derivatives. A  <em>p</em>-order cyclic extrapolation may be expressed as</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/NicolasL-S/SpeedMapping.jl/blob/main/Extra.svg"><img src="https://github.com/NicolasL-S/SpeedMapping.jl/raw/main/Extra.svg" style="max-width: 100%;"></a></p>
where
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/NicolasL-S/SpeedMapping.jl/blob/main/explanation.svg"><img src="https://github.com/NicolasL-S/SpeedMapping.jl/raw/main/explanation.svg" style="max-width: 100%;"></a></p>
<p dir="auto">The extrapolation step size is σ⁽ᴾ⁾ and Δᴾ follows Aitken's notation. The algorithm alternates between <em>p</em> = 3 and <em>p</em> = 2. For gradient descent acceleration, σ⁽ᴾ⁾ is used to adjust the learning rate dynamically.</p>
<p dir="auto">Reference:
N. Lepage-Saucier, <em>Alternating cyclic extrapolation methods for optimization algorithms</em>, arXiv:2104.04974 (2021). <a href="https://arxiv.org/abs/2104.04974" rel="nofollow">https://arxiv.org/abs/2104.04974</a></p>
</article></div>