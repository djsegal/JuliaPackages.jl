<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://senresearch.github.io/MetabolomicsWorkbenchAPI.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/senresearch/MetabolomicsWorkbenchAPI.jl/actions/workflows/ci.yml"><img src="https://github.com/senresearch/MetabolomicsWorkbenchAPI.jl/actions/workflows/ci.yml/badge.svg?branch=main" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/senresearch/MetabolomicsWorkbenchAPI.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0853a917e9db16e7e632c0cfa9787f26377a66b362f3a7f8233cc960b676fe70/68747470733a2f2f636f6465636f762e696f2f67682f73656e72657365617263682f4d657461626f6c6f6d696373576f726b62656e63684150492e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/senresearch/MetabolomicsWorkbenchAPI.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-metabolomicsworkbenchapijl" class="anchor" aria-hidden="true" href="#metabolomicsworkbenchapijl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MetabolomicsWorkbenchAPI.jl</h1>
<p dir="auto">The <a href="https://www.metabolomicsworkbench.org/" rel="nofollow">Metabolomics Workbench</a> operates as an international repository for metabolomics data and metadata while delivering analysis tools and access to metabolite standards, protocols, and more. The Metabolomics Workbench was developed by the Metabolomics Common Fund's National Metabolomics Data Repository(NMDR) to support the development of next-generation technologies, increase the inventory and availability of high-quality reference standards, and facilitate data sharing and collaboration.</p>
<p dir="auto">MetabolomicsWorkbenchAPI.jl is a Julia package to work with Metabolomics Workbench REST service. The official MW REST API documentation can be downloaded <a href="https://www.metabolomicsworkbench.org/tools/MWRestAPIv1.0.pdf" rel="nofollow">here</a>. Several request examples of REST urls are presented in the <a href="https://www.metabolomicsworkbench.org/tools/mw_rest.php" rel="nofollow">Metabolomics WorkBench REST service web page</a> that includes an interactive "REST url" creator.
The current  MetabolomicsWorkbenchAPI.jl version provides only access to the database but not to the analysis functions.</p>
<h2 dir="auto"><a id="user-content-check-connection" class="anchor" aria-hidden="true" href="#check-connection"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Check connection</h2>
<p dir="auto">To check if the website is responding properly:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; check_mw()
MetabolomicsWorkbench.org is alive.
200"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">check_mw</span>()
MetabolomicsWorkbench<span class="pl-k">.</span>org is alive.
<span class="pl-c1">200</span></pre></div>
<h2 dir="auto"><a id="user-content-get-metabolites-properties" class="anchor" aria-hidden="true" href="#get-metabolites-properties"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Get Metabolites Properties</h2>
<p dir="auto">To get properties for a list of metabolites names.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; vNames = [&quot;LPC(16:0p)&quot;, &quot;PC(18:0p/18:1(9Z))&quot;, &quot;CE(18:0)&quot;, &quot;PC(O-32:1)&quot;, &quot;TG(O-52:2)&quot;];
julia&gt; fetch_properties(vNames)
5×6 DataFrame
 Row │ exactmass  formula     main_class              refmet_name         sub_class     super_class
     │ String?    String?     String                  String                String        String
─────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────
   1 │ 479.3376   C24H50NO6P  Glycerophosphocholines  LPC P-16:0            O-LPC         Glycerophospholipids
   2 │ missing    missing     Glycerophosphocholines  PC  P-18:0/18:1(9Z)*  PC            Glycerophospholipids
   3 │ 652.6158   C45H80O2    Sterol esters           CE 18:0               Chol. esters  Sterol Lipids
   4 │ 717.5672   C40H80NO7P  Glycerophosphocholines  PC O-32:1             O-PC          Glycerophospholipids
   5 │ missing    missing     Triradylglycerols       TG  O-52:2*           O-TAG         Glycerolipids"><pre>julia<span class="pl-k">&gt;</span> vNames <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>LPC(16:0p)<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>PC(18:0p/18:1(9Z))<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>CE(18:0)<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>PC(O-32:1)<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>TG(O-52:2)<span class="pl-pds">"</span></span>];
julia<span class="pl-k">&gt;</span> <span class="pl-c1">fetch_properties</span>(vNames)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">6</span> DataFrame
 Row │ exactmass  formula     main_class              refmet_name         sub_class     super_class
     │ String?    String?     String                  String                String        String
─────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────
   <span class="pl-c1">1</span> │ <span class="pl-c1">479.3376</span>   C24H50NO6P  Glycerophosphocholines  LPC P<span class="pl-k">-</span><span class="pl-c1">16</span><span class="pl-k">:</span><span class="pl-c1">0</span>            O<span class="pl-k">-</span>LPC         Glycerophospholipids
   <span class="pl-c1">2</span> │ <span class="pl-c1">missing</span>    <span class="pl-c1">missing</span>     Glycerophosphocholines  PC  P<span class="pl-k">-</span><span class="pl-c1">18</span><span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">/</span><span class="pl-c1">18</span><span class="pl-k">:</span><span class="pl-c1">1</span>(<span class="pl-c1">9</span>Z)<span class="pl-k">*</span>  PC            Glycerophospholipids
   <span class="pl-c1">3</span> │ <span class="pl-c1">652.6158</span>   C45H80O2    Sterol esters           CE <span class="pl-c1">18</span><span class="pl-k">:</span><span class="pl-c1">0</span>               Chol. esters  Sterol Lipids
   <span class="pl-c1">4</span> │ <span class="pl-c1">717.5672</span>   C40H80NO7P  Glycerophosphocholines  PC O<span class="pl-k">-</span><span class="pl-c1">32</span><span class="pl-k">:</span><span class="pl-c1">1</span>             O<span class="pl-k">-</span>PC          Glycerophospholipids
   <span class="pl-c1">5</span> │ <span class="pl-c1">missing</span>    <span class="pl-c1">missing</span>     Triradylglycerols       TG  O<span class="pl-k">-</span><span class="pl-c1">52</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>           O<span class="pl-k">-</span>TAG         Glycerolipids</pre></div>
<h2 dir="auto"><a id="user-content-get-metabolites-data" class="anchor" aria-hidden="true" href="#get-metabolites-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Get metabolites Data</h2>
<p dir="auto">To get metabolites data for a study.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; df = fetch_data(&quot;ST001710&quot;);
julia&gt; df[1:5,1:3]
5×3 DataFrame
 Row │ Metabolite           1022385746  1022385747 
     │ String               String      String     
─────┼─────────────────────────────────────────────
   1 │ CE(16:0) + CE(18:1)  0.1062      -1.9080
   2 │ CE(18:0)             0.2580      0.2774
   3 │ CE(18:2)             1.0654      0.1419
   4 │ CE(20:4)             0.7983      -0.3442
   5 │ Cer(d18:1/23:0)      1.2658      0.9246"><pre>julia<span class="pl-k">&gt;</span> df <span class="pl-k">=</span> <span class="pl-c1">fetch_data</span>(<span class="pl-s"><span class="pl-pds">"</span>ST001710<span class="pl-pds">"</span></span>);
julia<span class="pl-k">&gt;</span> df[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>,<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>]
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">3</span> DataFrame
 Row │ Metabolite           <span class="pl-c1">1022385746</span>  <span class="pl-c1">1022385747</span> 
     │ String               String      String     
─────┼─────────────────────────────────────────────
   <span class="pl-c1">1</span> │ <span class="pl-c1">CE</span>(<span class="pl-c1">16</span><span class="pl-k">:</span><span class="pl-c1">0</span>) <span class="pl-k">+</span> <span class="pl-c1">CE</span>(<span class="pl-c1">18</span><span class="pl-k">:</span><span class="pl-c1">1</span>)  <span class="pl-c1">0.1062</span>      <span class="pl-k">-</span><span class="pl-c1">1.9080</span>
   <span class="pl-c1">2</span> │ <span class="pl-c1">CE</span>(<span class="pl-c1">18</span><span class="pl-k">:</span><span class="pl-c1">0</span>)             <span class="pl-c1">0.2580</span>      <span class="pl-c1">0.2774</span>
   <span class="pl-c1">3</span> │ <span class="pl-c1">CE</span>(<span class="pl-c1">18</span><span class="pl-k">:</span><span class="pl-c1">2</span>)             <span class="pl-c1">1.0654</span>      <span class="pl-c1">0.1419</span>
   <span class="pl-c1">4</span> │ <span class="pl-c1">CE</span>(<span class="pl-c1">20</span><span class="pl-k">:</span><span class="pl-c1">4</span>)             <span class="pl-c1">0.7983</span>      <span class="pl-k">-</span><span class="pl-c1">0.3442</span>
   <span class="pl-c1">5</span> │ <span class="pl-c1">Cer</span>(d18<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">23</span><span class="pl-k">:</span><span class="pl-c1">0</span>)      <span class="pl-c1">1.2658</span>      <span class="pl-c1">0.9246</span></pre></div>
<h2 dir="auto"><a id="user-content-get-metabolites" class="anchor" aria-hidden="true" href="#get-metabolites"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Get metabolites</h2>
<p dir="auto">To get the list of metabolites for a study.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; df = fetch_metabolites(&quot;ST000001&quot;);
julia&gt; select(df, Not([&quot;inchi_key&quot;, &quot;other_id_type&quot;]))[1:5,:]
5×7 DataFrame
 Row │ Metabolite               moverz_quant  ri      ri_type  pubchem_id  kegg_id  other_id 
     │ String                   String        String  String   String      String   String   
─────┼───────────────────────────────────────────────────────────────────────────────────────
   1 │ 1,2,4-benzenetriol       239           522741  Fiehn    10787       C02814   205673
   2 │ 1-monostearin            399           959625  Fiehn    107036      D01947   202835
   3 │ 2-hydroxyvaleric acid    131           310750  Fiehn    98009                218773
   4 │ 3-phosphoglycerate       299           611619  Fiehn    724         C00597   217821
   5 │ 5-hydroxynorvaline NIST  142           494838  Fiehn    95562                200384"><pre>julia<span class="pl-k">&gt;</span> df <span class="pl-k">=</span> <span class="pl-c1">fetch_metabolites</span>(<span class="pl-s"><span class="pl-pds">"</span>ST000001<span class="pl-pds">"</span></span>);
julia<span class="pl-k">&gt;</span> <span class="pl-c1">select</span>(df, <span class="pl-c1">Not</span>([<span class="pl-s"><span class="pl-pds">"</span>inchi_key<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>other_id_type<span class="pl-pds">"</span></span>]))[<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>,:]
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">7</span> DataFrame
 Row │ Metabolite               moverz_quant  ri      ri_type  pubchem_id  kegg_id  other_id 
     │ String                   String        String  String   String      String   String   
─────┼───────────────────────────────────────────────────────────────────────────────────────
   <span class="pl-c1">1</span> │ <span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span><span class="pl-k">-</span>benzenetriol       <span class="pl-c1">239</span>           <span class="pl-c1">522741</span>  Fiehn    <span class="pl-c1">10787</span>       C02814   <span class="pl-c1">205673</span>
   <span class="pl-c1">2</span> │ <span class="pl-c1">1</span><span class="pl-k">-</span>monostearin            <span class="pl-c1">399</span>           <span class="pl-c1">959625</span>  Fiehn    <span class="pl-c1">107036</span>      D01947   <span class="pl-c1">202835</span>
   <span class="pl-c1">3</span> │ <span class="pl-c1">2</span><span class="pl-k">-</span>hydroxyvaleric acid    <span class="pl-c1">131</span>           <span class="pl-c1">310750</span>  Fiehn    <span class="pl-c1">98009</span>                <span class="pl-c1">218773</span>
   <span class="pl-c1">4</span> │ <span class="pl-c1">3</span><span class="pl-k">-</span>phosphoglycerate       <span class="pl-c1">299</span>           <span class="pl-c1">611619</span>  Fiehn    <span class="pl-c1">724</span>         C00597   <span class="pl-c1">217821</span>
   <span class="pl-c1">5</span> │ <span class="pl-c1">5</span><span class="pl-k">-</span>hydroxynorvaline NIST  <span class="pl-c1">142</span>           <span class="pl-c1">494838</span>  Fiehn    <span class="pl-c1">95562</span>                <span class="pl-c1">200384</span></pre></div>
<h2 dir="auto"><a id="user-content-get-samples-variables" class="anchor" aria-hidden="true" href="#get-samples-variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Get Samples variables</h2>
<p dir="auto">To get samples and experimental variables for a study.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; df = fetch_samples(&quot;ST000001&quot;);
julia&gt; first(df, 3)
3×3 DataFrame
 Row │ Sample ID    Arabidopsis Genotype  Plant Wounding Treatment 
     │ String       String                String
─────┼─────────────────────────────────────────────────────────────
   1 │ LabF_115873  Wassilewskija (Ws)    Control - Non-Wounded
   2 │ LabF_115878  Wassilewskija (Ws)    Control - Non-Wounded
   3 │ LabF_115883  Wassilewskija (Ws)    Control - Non-Wounded
"><pre>julia<span class="pl-k">&gt;</span> df <span class="pl-k">=</span> <span class="pl-c1">fetch_samples</span>(<span class="pl-s"><span class="pl-pds">"</span>ST000001<span class="pl-pds">"</span></span>);
julia<span class="pl-k">&gt;</span> <span class="pl-c1">first</span>(df, <span class="pl-c1">3</span>)
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> DataFrame
 Row │ Sample ID    Arabidopsis Genotype  Plant Wounding Treatment 
     │ String       String                String
─────┼─────────────────────────────────────────────────────────────
   <span class="pl-c1">1</span> │ LabF_115873  Wassilewskija (Ws)    Control <span class="pl-k">-</span> Non<span class="pl-k">-</span>Wounded
   <span class="pl-c1">2</span> │ LabF_115878  Wassilewskija (Ws)    Control <span class="pl-k">-</span> Non<span class="pl-k">-</span>Wounded
   <span class="pl-c1">3</span> │ LabF_115883  Wassilewskija (Ws)    Control <span class="pl-k">-</span> Non<span class="pl-k">-</span>Wounded
</pre></div>
</article></div>