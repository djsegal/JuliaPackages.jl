<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-ripserjl" class="anchor" aria-hidden="true" href="#ripserjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Ripser.jl</h1>
<p><a href="https://travis-ci.org/mtsch/Ripser.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f8c5aa2031610ecad1aaf964c95edd796dfd8cdb/68747470733a2f2f7472617669732d63692e6f72672f6d747363682f5269707365722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/mtsch/Ripser.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/mtsch/ripser-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9c1beac1e5e9088b9c49e72968faed258869a271/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6c65346662726b356873676e663361783f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/le4fbrk5hsgnf3ax?svg=true" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/mtsch/Ripser.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4eacaf3a45f538abd14a0ba670b8da1015a40fe4/68747470733a2f2f636f6465636f762e696f2f67682f6d747363682f5269707365722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/mtsch/Ripser.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>


<p>Simple wrapper to <a href="https://github.com/Ripser/ripser">Ripser</a> in Julia with almost no
features and minimal dependencies.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>
<p>This package is unregistered. To install, run it with:</p>
<pre><code>(v1.0) pkg&gt; add https://github.com/mtsch/Ripser.jl#master
(v1.0) pkg&gt; test Ripser
</code></pre>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<pre><code>ripser(dists; modulus = 2, dim_max = 1, threshold = Inf, cocycles = false)
</code></pre>
<p>Run Ripser on a dists, and a square (sparse) matrix of <code>T&lt;:AbstractFloat</code>.</p>
<ul>
<li><code>dists</code>: the distance matrix. Matrix can be sparse.</li>
<li><code>dim_max</code>: compute persistent homology up to this dimension.</li>
<li><code>threshold</code>: compute Rips complexes up to this diameter.</li>
<li><code>modulus</code>: compute homology with coefficients in the prime field Z/<em>p</em>Z,
where <em>p</em> is the value given.</li>
<li><code>cocycles</code>: return representative cocycles.</li>
</ul>
<p>Returns a <code>Vector{Vector{Tuple{T, T}}}</code> and if <code>cocycles</code> is set to <code>true</code>, a
<code>Vector{Vector{Tuple{Vector{Int64},Int64}}}</code>.</p>
<p>The first part of the result contains a persistence diagram per each dimension (and is of
length <code>dim_max + 1</code>). Each persistence diagram is a vector of tuples, where a tuple is the
persistence pair <code>(birth, death)</code>. A single cocycle is represented as a vector of <code>(simplex, value)</code> pairs. They are only included if the <code>value</code> is nonzero. Each persistence pair gets
a corresponding cocycle.</p>
<p>Note that representative cocycles for the zeroth dimension are not computed.</p>
</article></div>