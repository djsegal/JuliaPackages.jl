<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-glfwjl" class="anchor" aria-hidden="true" href="#glfwjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GLFW.jl</h1>
<p dir="auto"><a href="https://github.com/JuliaGL/GLFW.jl/actions/workflows/ci.yml"><img src="https://github.com/JuliaGL/GLFW.jl/actions/workflows/ci.yml/badge.svg?branch=master" alt="CI" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://julialang.org" rel="nofollow">Julia</a> interface to <a href="https://www.glfw.org" rel="nofollow">GLFW 3</a>, a multi-platform library for creating windows with <a href="https://wikipedia.org/wiki/OpenGL" rel="nofollow">OpenGL</a> or OpenGL ES contexts and receiving many kinds of input. GLFW has native support for Windows, OS X and many Unix-like systems using the X Window System, such as Linux and FreeBSD.</p>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GLFW

# Create a window and its OpenGL context
window = GLFW.CreateWindow(640, 480, &quot;GLFW.jl&quot;)

# Make the window's context current
GLFW.MakeContextCurrent(window)

# Loop until the user closes the window
while !GLFW.WindowShouldClose(window)

	# Render here

	# Swap front and back buffers
	GLFW.SwapBuffers(window)

	# Poll for and process events
	GLFW.PollEvents()
end

GLFW.DestroyWindow(window)"><pre><span class="pl-k">using</span> GLFW

<span class="pl-c"><span class="pl-c">#</span> Create a window and its OpenGL context</span>
window <span class="pl-k">=</span> GLFW<span class="pl-k">.</span><span class="pl-c1">CreateWindow</span>(<span class="pl-c1">640</span>, <span class="pl-c1">480</span>, <span class="pl-s"><span class="pl-pds">"</span>GLFW.jl<span class="pl-pds">"</span></span>)

<span class="pl-c"><span class="pl-c">#</span> Make the window's context current</span>
GLFW<span class="pl-k">.</span><span class="pl-c1">MakeContextCurrent</span>(window)

<span class="pl-c"><span class="pl-c">#</span> Loop until the user closes the window</span>
<span class="pl-k">while</span> <span class="pl-k">!</span>GLFW<span class="pl-k">.</span><span class="pl-c1">WindowShouldClose</span>(window)

	<span class="pl-c"><span class="pl-c">#</span> Render here</span>

	<span class="pl-c"><span class="pl-c">#</span> Swap front and back buffers</span>
	GLFW<span class="pl-k">.</span><span class="pl-c1">SwapBuffers</span>(window)

	<span class="pl-c"><span class="pl-c">#</span> Poll for and process events</span>
	GLFW<span class="pl-k">.</span><span class="pl-c1">PollEvents</span>()
<span class="pl-k">end</span>

GLFW<span class="pl-k">.</span><span class="pl-c1">DestroyWindow</span>(window)</pre></div>
<h2 dir="auto"><a id="user-content-interface" class="anchor" aria-hidden="true" href="#interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Interface</h2>
<p dir="auto">Read the <a href="https://www.glfw.org/docs/latest/" rel="nofollow">GLFW documentation</a> for detailed instructions on how to use the library. The Julia interface is almost identical to the underlying C interface, with a few notable differences:</p>
<ul dir="auto">
<li>Clipboard (<code>glfwGetClipboard</code>, <code>glfwSetClipboard</code>) and time (<code>glfwGetTime</code>, <code>glfwSetTime</code>) functions have been omitted because Julia's standard library already supports similar functionality.</li>
<li><code>glfwInit</code> and <code>glfwTerminate</code> are called automatically using the <code>__init__</code> and <code>atexit</code> functions. While it is okay to still call them explicitly, it is redundant and not required.</li>
</ul>
<h2 dir="auto"><a id="user-content-footnotes" class="anchor" aria-hidden="true" href="#footnotes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Footnotes</h2>
<ul dir="auto">
<li>Special thanks to <a href="https://github.com/afterwise">@afterwise</a> for writing an early implementation of GLFW 3 support.</li>
</ul>
</article></div>