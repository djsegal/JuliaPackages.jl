<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-yaoplots" class="anchor" aria-hidden="true" href="#yaoplots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>YaoPlots</h1>
<p><a href="https://travis-ci.com/QuantumBFS/YaoPlots.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e8871c5749d11172c33b401501dec0f3cdfbfaaedb9689321bc47c7038847e70/68747470733a2f2f7472617669732d63692e636f6d2f5175616e74756d4246532f59616f506c6f74732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/QuantumBFS/YaoPlots.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/QuantumBFS/YaoPlots.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/390cba83dba5eeaff2f439cc782d34d3a46cedb04a18af18dd43524e4d363b9e/68747470733a2f2f636f6465636f762e696f2f67682f5175616e74756d4246532f59616f506c6f74732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/QuantumBFS/YaoPlots.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-example-1-visualize-a-qbir-define-in-yao" class="anchor" aria-hidden="true" href="#example-1-visualize-a-qbir-define-in-yao"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example 1: Visualize a QBIR define in Yao</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using YaoExtensions, YaoPlots
using Compose

# show a qft circuit
plot(qft_circuit(5))
"><pre><span class="pl-k">using</span> YaoExtensions, YaoPlots
<span class="pl-k">using</span> Compose

<span class="pl-c"><span class="pl-c">#</span> show a qft circuit</span>
<span class="pl-c1">plot</span>(<span class="pl-c1">qft_circuit</span>(<span class="pl-c1">5</span>))</pre></div>
<p>If you are using a Pluto/Jupyter notebook, Atom/VSCode editor, you should see the following image in your plotting panel.</p>
<p><a target="_blank" rel="noopener noreferrer" href="examples/qft.png"><img src="examples/qft.png" alt="qft" style="max-width:100%;"></a></p>
<p>Otherwise, you might be interested to learn <a href="https://giovineitalia.github.io/Compose.jl/latest/tutorial/" rel="nofollow">how to save it as an image</a>.</p>
<p>See more <a href="examples/circuits.jl">examples</a>.</p>
<h2><a id="user-content-example-2-visualize-zx-diagrams-in-zxcalculus" class="anchor" aria-hidden="true" href="#example-2-visualize-zx-diagrams-in-zxcalculus"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example 2: Visualize ZX-diagrams in ZXCalculus</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using ZXCalculus, YaoPlots
using Compose

function generate_example()
    zxd = ZXDiagram(4)
    push_gate!(zxd, Val{:Z}(), 1, 3//2)
    push_gate!(zxd, Val{:H}(), 1)
    push_gate!(zxd, Val{:Z}(), 1, 1//2)
    push_gate!(zxd, Val{:H}(), 4)
    push_gate!(zxd, Val{:CZ}(), 4, 1)
    push_gate!(zxd, Val{:CNOT}(), 1, 4)
    push_gate!(zxd, Val{:H}(), 1)
    push_gate!(zxd, Val{:H}(), 4)
    push_gate!(zxd, Val{:Z}(), 1, 1//4)
    push_gate!(zxd, Val{:Z}(), 4, 3//2)
    push_gate!(zxd, Val{:X}(), 4, 1//1)
    push_gate!(zxd, Val{:H}(), 1)
    push_gate!(zxd, Val{:Z}(), 4, 1//2)
    push_gate!(zxd, Val{:X}(), 4, 1//1)
    push_gate!(zxd, Val{:Z}(), 2, 1//2)
    push_gate!(zxd, Val{:CNOT}(), 3, 2)
    push_gate!(zxd, Val{:H}(), 2)
    push_gate!(zxd, Val{:CNOT}(), 3, 2)
    push_gate!(zxd, Val{:Z}(), 2, 1//4)
    push_gate!(zxd, Val{:Z}(), 3, 1//2)
    push_gate!(zxd, Val{:H}(), 2)
    push_gate!(zxd, Val{:H}(), 3)
    push_gate!(zxd, Val{:Z}(), 3, 1//2)
    push_gate!(zxd, Val{:CNOT}(), 3, 2)

    return zxd
end

zxd = generate_example() # define a example
plot(zxd) # draw a ZX-diagram
plot(ZXGraph(zxd)) # draw a graph-like ZX-diagram
"><pre><span class="pl-k">using</span> ZXCalculus, YaoPlots
<span class="pl-k">using</span> Compose

<span class="pl-k">function</span> <span class="pl-en">generate_example</span>()
    zxd <span class="pl-k">=</span> <span class="pl-c1">ZXDiagram</span>(<span class="pl-c1">4</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:Z}</span>(), <span class="pl-c1">1</span>, <span class="pl-c1">3</span><span class="pl-k">//</span><span class="pl-c1">2</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:H}</span>(), <span class="pl-c1">1</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:Z}</span>(), <span class="pl-c1">1</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">2</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:H}</span>(), <span class="pl-c1">4</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:CZ}</span>(), <span class="pl-c1">4</span>, <span class="pl-c1">1</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:CNOT}</span>(), <span class="pl-c1">1</span>, <span class="pl-c1">4</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:H}</span>(), <span class="pl-c1">1</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:H}</span>(), <span class="pl-c1">4</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:Z}</span>(), <span class="pl-c1">1</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">4</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:Z}</span>(), <span class="pl-c1">4</span>, <span class="pl-c1">3</span><span class="pl-k">//</span><span class="pl-c1">2</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:X}</span>(), <span class="pl-c1">4</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:H}</span>(), <span class="pl-c1">1</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:Z}</span>(), <span class="pl-c1">4</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">2</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:X}</span>(), <span class="pl-c1">4</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:Z}</span>(), <span class="pl-c1">2</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">2</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:CNOT}</span>(), <span class="pl-c1">3</span>, <span class="pl-c1">2</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:H}</span>(), <span class="pl-c1">2</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:CNOT}</span>(), <span class="pl-c1">3</span>, <span class="pl-c1">2</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:Z}</span>(), <span class="pl-c1">2</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">4</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:Z}</span>(), <span class="pl-c1">3</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">2</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:H}</span>(), <span class="pl-c1">2</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:H}</span>(), <span class="pl-c1">3</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:Z}</span>(), <span class="pl-c1">3</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">2</span>)
    <span class="pl-c1">push_gate!</span>(zxd, <span class="pl-c1">Val</span><span class="pl-c1">{:CNOT}</span>(), <span class="pl-c1">3</span>, <span class="pl-c1">2</span>)

    <span class="pl-k">return</span> zxd
<span class="pl-k">end</span>

zxd <span class="pl-k">=</span> <span class="pl-c1">generate_example</span>() <span class="pl-c"><span class="pl-c">#</span> define a example</span>
<span class="pl-c1">plot</span>(zxd) <span class="pl-c"><span class="pl-c">#</span> draw a ZX-diagram</span>
<span class="pl-c1">plot</span>(<span class="pl-c1">ZXGraph</span>(zxd)) <span class="pl-c"><span class="pl-c">#</span> draw a graph-like ZX-diagram</span></pre></div>
<p>If you are using a Pluto/Jupyter notebook, Atom/VSCode editor, you should see the following images in your plotting panel.</p>
<p><a target="_blank" rel="noopener noreferrer" href="examples/demo_zxd.svg"><img src="examples/demo_zxd.svg" alt="zxd" style="max-width:100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="examples/demo_zxg.svg"><img src="examples/demo_zxg.svg" alt="zxg" style="max-width:100%;"></a></p>
</article></div>