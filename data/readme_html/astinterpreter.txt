<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-astinterpreter" class="anchor" aria-hidden="true" href="#astinterpreter"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ASTInterpreter</h1>
<p><a href="https://travis-ci.org/Keno/ASTInterpreter.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e906d0e0042b2f2af8721252ee37a13baad1665e/68747470733a2f2f7472617669732d63692e6f72672f4b656e6f2f415354496e7465727072657465722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Keno/ASTInterpreter.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>The AST Interpreter component of Gallium (i.e. does not include any breakpoint,
stuff, etc.). This is a development prototype and comes with it's own debug
prompt for that purpose.</p>
<p>Usage:</p>
<pre><code>using ASTInterpreter

function foo(n)
    x = n+1
    ((BigInt[1 1; 1 0])^x)[2,1]
end

interp = enter(foo, Environment(Dict(:n =&gt; 20),Dict{Symbol,Any}()))
ASTInterpreter.RunDebugREPL(interp)
</code></pre>
<p>Basic Commands:</p>
<ul>
<li><code>n</code> steps to the next line</li>
<li><code>s</code> steps into the next call</li>
<li><code>finish</code> runs to the end of the function</li>
<li><code>bt</code> shows a simple backtrace</li>
<li><code>`stuff</code> runs <code>stuff</code> in the current frame's context</li>
<li><code>fr v</code> will show all variables in the current frame</li>
<li><code>f n</code> where <code>n</code> is an integer, will go to the <code>n</code>-th frame.</li>
</ul>
<p>Advanced commands:</p>
<ul>
<li><code>nc</code> steps to the next call</li>
<li><code>ns</code> steps to the next statement</li>
<li><code>se</code> does one expression step</li>
<li><code>si</code> does the same but steps into a call if a call is the next expression</li>
<li><code>sg</code> steps into a generated function</li>
<li><code>shadow</code> shows the internal representation of the expression tree (for debugger debugging only)</li>
<li><code>loc</code> shows the column data for the current top frame, in the same format
as JuliaParsers's testshell.</li>
</ul>
<p>This is a prototype, do not expect it to be correct or usable.</p>
<h1><a id="user-content-experimental-mode" class="anchor" aria-hidden="true" href="#experimental-mode"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Experimental mode</h1>
<p>There is an experimental UI mode accessible by setting <code>ASTInterpreter.fancy_mode = true</code>, which attempts to provide a better interface but is not currently not capable of handling all julia code. Use at your own peril.</p>
<h4><a id="user-content-current-dependencies" class="anchor" aria-hidden="true" href="#current-dependencies"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Current Dependencies</h4>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/JuliaLang/Reactive.jl.git<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/JuliaLang/JuliaParser.jl.git<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/Keno/TerminalUI.jl.git<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/Keno/VT100.jl.git<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/Keno/AbstractTrees.jl.git<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/Keno/LineNumbers.jl.git<span class="pl-pds">"</span></span>)
Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/Keno/ASTInterpreter.jl.git<span class="pl-pds">"</span></span>)</pre></div>
</article></div>