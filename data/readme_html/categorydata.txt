<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-categorydata" class="anchor" aria-hidden="true" href="#categorydata"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CategoryData</h1>
<p dir="auto"><a href="https://github.com/Jutho/TensorKit.jl">TensorKit.jl</a> extension for low rank unitary fusion categories, using <a href="https://github.com/JCBridgeman/smallRankUnitaryFusionData">smallRankUnitaryFusionData</a></p>
<p dir="auto"><a href="https://github.com/lkdvos/CategoryData.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/lkdvos/CategoryData.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/lkdvos/CategoryData.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b1f29e1d6772add8a4d923e58a96cf7237fbdb907a6c31bf4ad0dbaab6bbe68d/68747470733a2f2f636f6465636f762e696f2f67682f6c6b64766f732f43617465676f7279446174612e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/lkdvos/CategoryData.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">This package provides TensorKit's sectortypes for all objects of multiplicity-free (braided) fusion categories up to rank 6. The full list, along with the naming convention can be found in the <a href="http://www.thphys.nuim.ie/AnyonWiki/index.php/List_of_small_multiplicity-free_fusion_rings" rel="nofollow">Anyon Wiki</a>.</p>
<p dir="auto">The fusion categories adhere to a hierarchical structure of exported abstract types:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="PreModularFusionCategory{R,N,I,D₁,D₂} &lt;: UnitaryFusionCategory{R,N,I,D₁} &lt;: FusionRing{R,N,I}"><pre>PreModularFusionCategory{R,N,I,D₁,D₂} <span class="pl-k">&lt;:</span> <span class="pl-c1">UnitaryFusionCategory{R,N,I,D₁}</span> <span class="pl-k">&lt;:</span> <span class="pl-c1">FusionRing{R,N,I}</span></pre></div>
<p dir="auto">which indicate implementations of fusion rules (<code>Nsymbol</code>), associators (<code>Fsymbol</code>) and braidings (<code>Rsymbol</code>). The naming is such that <code>R</code> indicates the rank, <code>N</code> the amount of non-self-dual objects, <code>I</code> the fusion ring index, such that equal values imply the same objects and fusion rules. <code>D₁</code> is the category index, enumerating different solutions for <code>Fsymbol</code> of the pentagon equation, while <code>D₂</code> enumerates different solutions of <code>Rsymbol</code> the hexagon equation.</p>
<p dir="auto">Objects in these categories are identified with integers ranging from <code>1</code> to <code>R</code>, where the unit is always <code>1</code>. These can then be used as any other <code>Sector</code> for constructing <code>TensorMap</code>s.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using TensorKit, CategoryData
𝒞 = PreModularFusionCategory{2,0,2,0,0}     # Fibonacci category
𝒪 = Object{𝒞}
@show collect(values(𝒪))                    # 1 -&gt; I, 2 -&gt; τ

t = TensorMap(rand, ComplexF64, Vect[𝒪](1 =&gt; 2, 2 =&gt; 2) ← Vect[𝒪](1 =&gt;2, 2 =&gt; 2))"><pre><span class="pl-k">using</span> TensorKit, CategoryData
𝒞 <span class="pl-k">=</span> PreModularFusionCategory{<span class="pl-c1">2</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>}     <span class="pl-c"><span class="pl-c">#</span> Fibonacci category</span>
𝒪 <span class="pl-k">=</span> Object{𝒞}
<span class="pl-c1">@show</span> <span class="pl-c1">collect</span>(<span class="pl-c1">values</span>(𝒪))                    <span class="pl-c"><span class="pl-c">#</span> 1 -&gt; I, 2 -&gt; τ</span>

t <span class="pl-k">=</span> <span class="pl-c1">TensorMap</span>(rand, ComplexF64, Vect[𝒪](<span class="pl-c1">1</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>, <span class="pl-c1">2</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>) ← Vect[𝒪](<span class="pl-c1">1</span> <span class="pl-k">=&gt;</span><span class="pl-c1">2</span>, <span class="pl-c1">2</span> <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>))</pre></div>
</article></div>