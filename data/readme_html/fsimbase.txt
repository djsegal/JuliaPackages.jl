<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-fsimbase" class="anchor" aria-hidden="true" href="#fsimbase"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>FSimBase</h1>
<p dir="auto"><a href="https://github.com/JinraeKim/FSimBase.jl">FSimBase.jl</a> is
the lightweight base library for numerical simulation supporting nested dynamical systems and macro-based data logger,
compatible with <a href="https://github.com/SciML/DifferentialEquations.jl">DifferentialEquations.jl</a>.</p>
<h2 dir="auto"><a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Notes</h2>
<ul dir="auto">
<li><a href="https://github.com/JinraeKim/FSimBase.jl">FSimBase.jl</a> <strong>works alone</strong>!
For more functionality, see <a href="https://github.com/JinraeKim/FlightSims.jl">FlightSims.jl</a>.</li>
<li>In <a href="https://github.com/JinraeKim/FSimBase.jl">FSimBase.jl</a>,
you must specify <a href="https://diffeq.sciml.ai/stable/solvers/discrete_solve/#DiscreteProblems" rel="nofollow">the differential equation problem</a> and <a href="https://diffeq.sciml.ai/stable/#Solver-Algorithms" rel="nofollow">the differential equation solver</a>.
Only <code>ODEProblem</code> and <code>DiscreteProblem</code> are tested.</li>
</ul>
<h2 dir="auto"><a id="user-content-apis" class="anchor" aria-hidden="true" href="#apis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>APIs</h2>
<p dir="auto">Main APIs are provided in <code>src/APIs</code>.</p>
<h3 dir="auto"><a id="user-content-make-an-environment" class="anchor" aria-hidden="true" href="#make-an-environment"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Make an environment</h3>
<ul dir="auto">
<li><code>AbstractEnv</code>: an abstract type for user-defined and predefined environments.
In general, environments is a sub-type of <code>AbstractEnv</code>.
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="struct LinearSystemEnv &lt;: AbstractEnv
    A
    B
end"><pre><span class="pl-k">struct</span> LinearSystemEnv <span class="pl-k">&lt;:</span> <span class="pl-c1">AbstractEnv</span>
    A
    B
<span class="pl-k">end</span></pre></div>
</li>
<li><code>State(env::AbstractEnv)</code>: return a function that produces structured states.
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function State(env::LinearSystemEnv)
    @unpack B = env
    n = size(B)[1]
    return function (x)
        @assert length(x) == n
        x
    end
end"><pre><span class="pl-k">function</span> <span class="pl-en">State</span>(env<span class="pl-k">::</span><span class="pl-c1">LinearSystemEnv</span>)
    <span class="pl-c1">@unpack</span> B <span class="pl-k">=</span> env
    n <span class="pl-k">=</span> <span class="pl-c1">size</span>(B)[<span class="pl-c1">1</span>]
    <span class="pl-k">return</span> <span class="pl-k">function</span> (x)
        <span class="pl-c1">@assert</span> <span class="pl-c1">length</span>(x) <span class="pl-k">==</span> n
        x
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
</li>
<li><code>Dynamics!(env::AbstractEnv)</code>: return a function that maps in-place dynamics,
compatible with <a href="https://github.com/SciML/DifferentialEquations.jl">DifferentialEquations.jl</a>.
User can extend these methods or simply define other methods.
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="function Dynamics!(env::LinearSystemEnv)
    @unpack A, B = env
    @Loggable function dynamics!(dx, x, p, t; u)  # data would not be saved without @Loggable. Follow this form!
        @log state = x  # syntax sugar; macro-based logging
        @log input = u
        dx .= A*x + B*u
    end
end"><pre><span class="pl-k">function</span> <span class="pl-en">Dynamics!</span>(env<span class="pl-k">::</span><span class="pl-c1">LinearSystemEnv</span>)
    <span class="pl-c1">@unpack</span> A, B <span class="pl-k">=</span> env
    <span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">dynamics!</span>(dx, x, p, t; u)  <span class="pl-c"><span class="pl-c">#</span> data would not be saved without @Loggable. Follow this form!</span>
        <span class="pl-c1">@log</span> state <span class="pl-k">=</span> x  <span class="pl-c"><span class="pl-c">#</span> syntax sugar; macro-based logging</span>
        <span class="pl-c1">@log</span> input <span class="pl-k">=</span> u
        dx <span class="pl-k">.=</span> A<span class="pl-k">*</span>x <span class="pl-k">+</span> B<span class="pl-k">*</span>u
    <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
</li>
<li>(Optional) <code>Params(env::AbstractEnv)</code>: returns structured parameters of given environment <code>env</code>.</li>
</ul>
<h3 dir="auto"><a id="user-content-simulation-logging-and-data-saving--loading" class="anchor" aria-hidden="true" href="#simulation-logging-and-data-saving--loading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Simulation, logging, and data saving &amp; loading</h3>
<p dir="auto"><strong>Simulator</strong></p>
<ul dir="auto">
<li><code>Simulator(state0, dyn, p; Problem, solver)</code> is a simulator struct that will be simulated by <code>solve</code> (non-interactive) or <code>step!</code> and <code>step_until!</code> (interactive).
<code>Problem = :ODE</code> and <code>Problem = :Discrete</code> imply <a href="https://diffeq.sciml.ai/stable/types/ode_types/" rel="nofollow"><code>ODEProblem</code></a> and <a href="https://diffeq.sciml.ai/stable/types/discrete_types/#Discrete-Problems" rel="nofollow"><code>DiscreteProblem</code></a>, respectively.
For more details, see <code>src/APIs/simulation.jl</code>.</li>
</ul>
<p dir="auto"><strong>Non-interactive interface (e.g., compatible with callbacks from DifferentialEquations.jl)</strong></p>
<ul dir="auto">
<li><code>solve(simulation::Simulator)</code> will solve (O)DE and provide <code>df::DataFrame</code>.
<ul dir="auto">
<li>For now, only <a href="https://diffeq.sciml.ai/stable/basics/problem/#In-place-vs-Out-of-Place-Function-Definition-Forms" rel="nofollow"><strong>in-place</strong> method (iip)</a> is supported.</li>
</ul>
</li>
</ul>
<p dir="auto"><strong>Interactive interface (you should be aware of how to use <a href="https://diffeq.sciml.ai/stable/basics/integrator/#integrator" rel="nofollow"><code>integrator</code> interface in DifferentialEquations.jl</a>)</strong></p>
<ul dir="auto">
<li><code>reinit!(simulator::Simulator)</code> will reinitialise <code>simulator::Simulator</code>.</li>
<li><code>step!(simulator::Simulator, Î”t; stop_at_tdt=true)</code> will step the <code>simulator::Simulator</code> as <code>Î”t</code>.</li>
<li><code>step_until!(simulator::Simulator, tf)</code> will step the <code>simulator::Simulator</code> until <code>tf</code>.</li>
<li><code>push!(simulator::Simulator, df::DataFrame)</code> will push a datum from <code>simulator</code> to <code>df</code>.</li>
</ul>
<p dir="auto"><strong>Utilities</strong></p>
<ul dir="auto">
<li><code>apply_inputs(func; kwargs...)</code>
<ul dir="auto">
<li>By using this, user can easily apply external inputs into environments. It is borrowed from <a href="https://jonniedie.github.io/ComponentArrays.jl/stable/examples/adaptive_control/" rel="nofollow">an MRAC example of ComponentArrays.jl</a> and extended to be compatible with <a href="https://github.com/JinraeKim/SimulationLogger.jl">SimulationLogger.jl</a>.</li>
<li>(Limitations) for now, dynamical equations wrapped by <code>apply_inputs</code> will automatically generate logging function (even without <code>@Loggable</code>). In this case, all data will be an array of empty <code>NamedTuple</code>.</li>
</ul>
</li>
<li>Macros for logging data: <code>@Loggable</code>, <code>@log</code>, <code>@onlylog</code>, <code>@nested_log</code>, <code>@nested_onlylog</code>.
<ul dir="auto">
<li>For more details, see <a href="https://github.com/JinraeKim/SimulationLogger.jl">SimulationLogger.jl</a>.</li>
</ul>
</li>
</ul>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<h3 dir="auto"><a id="user-content-custom-environments-discrete-problems-etc" class="anchor" aria-hidden="true" href="#custom-environments-discrete-problems-etc"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Custom environments, discrete problems, etc.</h3>
<p dir="auto">See directory <code>./test</code>.</p>
<h3 dir="auto"><a id="user-content-tl-dr-minimal-example" class="anchor" aria-hidden="true" href="#tl-dr-minimal-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>(TL; DR) Minimal example</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using FSimBase
using DifferentialEquations
using ComponentArrays
using Test
using LinearAlgebra
using DataFrames


function main()
    state0 = [1.0, 2.0]
    p = 1
    tf = 1.0
    Î”t = 0.01
    @Loggable function dynamics!(dx, x, p, t)
        @log t
        @log x
        dx .= -p.*x
    end
    simulator = Simulator(
                          state0, dynamics!, p;
                          Problem=ODEProblem,
                          solver=Tsit5(),
                          tf=tf,
                         )
    # solve approach (automatically reinitialised)
    @time _df = solve(simulator; savestep=Î”t)
    # interactive simulation
    ## step!
    reinit!(simulator)
    step!(simulator, Î”t)
    @test simulator.integrator.t â‰ˆ Î”t
    ## step_until! (callback-like)
    ts_weird = 0:Î”t:tf+Î”t
    df_ = DataFrame()
    reinit!(simulator)
    @time for t in ts_weird
        flag = step_until!(simulator, t)  # flag == false if step is inappropriate
        if simulator.integrator.u[1] &lt; 5e-1
            break
        else
            push!(simulator, df_, flag)  # push data only when flag == true
        end
    end
    println(df_[end-5:end, :])
    ## step_until!
    df = DataFrame()
    reinit!(simulator)
    @time for t in ts_weird
        step_until!(simulator, t)
        push!(simulator, df)  # flag=true is default
        # safer way:
        # flag = step_until!(simulator, t)
        # push!(simulator, df, flag)
        # or, equivalently,
        # push!(simulator, df, step_until!(simulator, t))  # compact form
    end
    println(df[end-5:end, :])
    @test norm(_df.sol[end].x - df.sol[end].x) &lt; 1e-6
    @test simulator.integrator.t â‰ˆ tf
end

@testset &quot;minimal&quot; begin
    main()
end"><pre><span class="pl-k">using</span> FSimBase
<span class="pl-k">using</span> DifferentialEquations
<span class="pl-k">using</span> ComponentArrays
<span class="pl-k">using</span> Test
<span class="pl-k">using</span> LinearAlgebra
<span class="pl-k">using</span> DataFrames


<span class="pl-k">function</span> <span class="pl-en">main</span>()
    state0 <span class="pl-k">=</span> [<span class="pl-c1">1.0</span>, <span class="pl-c1">2.0</span>]
    p <span class="pl-k">=</span> <span class="pl-c1">1</span>
    tf <span class="pl-k">=</span> <span class="pl-c1">1.0</span>
    Î”t <span class="pl-k">=</span> <span class="pl-c1">0.01</span>
    <span class="pl-c1">@Loggable</span> <span class="pl-k">function</span> <span class="pl-en">dynamics!</span>(dx, x, p, t)
        <span class="pl-c1">@log</span> t
        <span class="pl-c1">@log</span> x
        dx <span class="pl-k">.=</span> <span class="pl-k">-</span>p<span class="pl-k">.*</span>x
    <span class="pl-k">end</span>
    simulator <span class="pl-k">=</span> <span class="pl-c1">Simulator</span>(
                          state0, dynamics!, p;
                          Problem<span class="pl-k">=</span>ODEProblem,
                          solver<span class="pl-k">=</span><span class="pl-c1">Tsit5</span>(),
                          tf<span class="pl-k">=</span>tf,
                         )
    <span class="pl-c"><span class="pl-c">#</span> solve approach (automatically reinitialised)</span>
    <span class="pl-c1">@time</span> _df <span class="pl-k">=</span> <span class="pl-c1">solve</span>(simulator; savestep<span class="pl-k">=</span>Î”t)
    <span class="pl-c"><span class="pl-c">#</span> interactive simulation</span>
    <span class="pl-c"><span class="pl-c">#</span># step!</span>
    <span class="pl-c1">reinit!</span>(simulator)
    <span class="pl-c1">step!</span>(simulator, Î”t)
    <span class="pl-c1">@test</span> simulator<span class="pl-k">.</span>integrator<span class="pl-k">.</span>t <span class="pl-k">â‰ˆ</span> Î”t
    <span class="pl-c"><span class="pl-c">#</span># step_until! (callback-like)</span>
    ts_weird <span class="pl-k">=</span> <span class="pl-c1">0</span><span class="pl-k">:</span>Î”t<span class="pl-k">:</span>tf<span class="pl-k">+</span>Î”t
    df_ <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>()
    <span class="pl-c1">reinit!</span>(simulator)
    <span class="pl-c1">@time</span> <span class="pl-k">for</span> t <span class="pl-k">in</span> ts_weird
        flag <span class="pl-k">=</span> <span class="pl-c1">step_until!</span>(simulator, t)  <span class="pl-c"><span class="pl-c">#</span> flag == false if step is inappropriate</span>
        <span class="pl-k">if</span> simulator<span class="pl-k">.</span>integrator<span class="pl-k">.</span>u[<span class="pl-c1">1</span>] <span class="pl-k">&lt;</span> <span class="pl-c1">5e-1</span>
            <span class="pl-k">break</span>
        <span class="pl-k">else</span>
            <span class="pl-c1">push!</span>(simulator, df_, flag)  <span class="pl-c"><span class="pl-c">#</span> push data only when flag == true</span>
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
    <span class="pl-c1">println</span>(df_[<span class="pl-c1">end</span><span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">end</span>, :])
    <span class="pl-c"><span class="pl-c">#</span># step_until!</span>
    df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>()
    <span class="pl-c1">reinit!</span>(simulator)
    <span class="pl-c1">@time</span> <span class="pl-k">for</span> t <span class="pl-k">in</span> ts_weird
        <span class="pl-c1">step_until!</span>(simulator, t)
        <span class="pl-c1">push!</span>(simulator, df)  <span class="pl-c"><span class="pl-c">#</span> flag=true is default</span>
        <span class="pl-c"><span class="pl-c">#</span> safer way:</span>
        <span class="pl-c"><span class="pl-c">#</span> flag = step_until!(simulator, t)</span>
        <span class="pl-c"><span class="pl-c">#</span> push!(simulator, df, flag)</span>
        <span class="pl-c"><span class="pl-c">#</span> or, equivalently,</span>
        <span class="pl-c"><span class="pl-c">#</span> push!(simulator, df, step_until!(simulator, t))  # compact form</span>
    <span class="pl-k">end</span>
    <span class="pl-c1">println</span>(df[<span class="pl-c1">end</span><span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">end</span>, :])
    <span class="pl-c1">@test</span> <span class="pl-c1">norm</span>(_df<span class="pl-k">.</span>sol[<span class="pl-c1">end</span>]<span class="pl-k">.</span>x <span class="pl-k">-</span> df<span class="pl-k">.</span>sol[<span class="pl-c1">end</span>]<span class="pl-k">.</span>x) <span class="pl-k">&lt;</span> <span class="pl-c1">1e-6</span>
    <span class="pl-c1">@test</span> simulator<span class="pl-k">.</span>integrator<span class="pl-k">.</span>t <span class="pl-k">â‰ˆ</span> tf
<span class="pl-k">end</span>

<span class="pl-c1">@testset</span> <span class="pl-s"><span class="pl-pds">"</span>minimal<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
    <span class="pl-c1">main</span>()
<span class="pl-k">end</span></pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="./figures/custom_example.png"><img src="./figures/custom_example.png" alt="ex_screenshot" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Related packages</h2>
<h3 dir="auto"><a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Dependencies</h3>
<ul dir="auto">
<li><a href="https://github.com/JinraeKim/SimulationLogger.jl">SimulationLogger.jl</a>: A convenient logging tools compatible with <a href="https://github.com/SciML/DifferentialEquations.jl">DifferentialEquations.jl</a>.</li>
</ul>
</article></div>