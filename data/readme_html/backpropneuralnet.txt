<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a href="https://travis-ci.org/compressed/BackpropNeuralNet.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a6b70faaa6af0b2ef6ff7ab6488749bb25e44278/68747470733a2f2f7472617669732d63692e6f72672f636f6d707265737365642f4261636b70726f704e657572616c4e65742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/compressed/BackpropNeuralNet.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/r/compressed/BackpropNeuralNet.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/00cfadf854a15b46dde61a92be8a0f404c3e5c64/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f636f6d707265737365642f4261636b70726f704e657572616c4e65742e6a6c2e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/coveralls/compressed/BackpropNeuralNet.jl.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=BackpropNeuralNet" rel="nofollow"><img src="https://camo.githubusercontent.com/32056aab977f8095f7e095783d43b4293d235467/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f4261636b70726f704e657572616c4e65745f302e342e737667" alt="BackpropNeuralNet" data-canonical-src="http://pkg.julialang.org/badges/BackpropNeuralNet_0.4.svg" style="max-width:100%;"></a>
<a href="http://pkg.julialang.org/?pkg=BackpropNeuralNet" rel="nofollow"><img src="https://camo.githubusercontent.com/362b0cfc360ba88efe0746027949a8909d380905/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f4261636b70726f704e657572616c4e65745f302e352e737667" alt="BackpropNeuralNet" data-canonical-src="http://pkg.julialang.org/badges/BackpropNeuralNet_0.5.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-install" class="anchor" aria-hidden="true" href="#install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Install</h1>
<h2><a id="user-content-stable" class="anchor" aria-hidden="true" href="#stable"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Stable</h2>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>BackpropNeuralNet<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-source" class="anchor" aria-hidden="true" href="#source"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Source</h2>
<div class="highlight highlight-source-julia"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">clone</span>(<span class="pl-s"><span class="pl-pds">"</span>https://github.com/compressed/BackpropNeuralNet.jl.git<span class="pl-pds">"</span></span>)</pre></div>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h1>
<p>To initialize a network of 2 inputs, 1 hidden layer with 3 neurons, and 2 outputs:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> BackpropNeuralNet

net <span class="pl-k">=</span> <span class="pl-c1">init_network</span>([<span class="pl-c1">2</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>])

<span class="pl-c"><span class="pl-c">#</span> To train the network use the form `train(network, input, output)`:</span>
<span class="pl-c1">train</span>(net, [<span class="pl-c1">0.15</span>, <span class="pl-c1">0.7</span>],[<span class="pl-c1">0.1</span>, <span class="pl-c1">0.9</span>])

<span class="pl-c"><span class="pl-c">#</span> To evaluate an input use the form `net_eval(network, inputs)`</span>
<span class="pl-c1">net_eval</span>(net, [<span class="pl-c1">0.15</span>, <span class="pl-c1">0.7</span>])</pre></div>
<h1><a id="user-content-history" class="anchor" aria-hidden="true" href="#history"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>History</h1>
<p>This is a Julia implementation of a neural network based on Sergio Fierens <a href="https://github.com/SergioFierens/ai4r">ruby version</a>.</p>
</article></div>