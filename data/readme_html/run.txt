<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-run" class="anchor" aria-hidden="true" href="#run"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Run</h1>
<p><a href="https://tkf.github.io/Run.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://tkf.github.io/Run.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/tkf/Run.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6fdff50b3aea539b52aabcfdc868316791d71b1f13aa8eb36cae15127bc9f8c0/68747470733a2f2f7472617669732d63692e636f6d2f746b662f52756e2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/tkf/Run.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/tkf/Run.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a66df8e682c985b051eff9d81d8652ba4450845203cb9023164236855de56f80/68747470733a2f2f636f6465636f762e696f2f67682f746b662f52756e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/tkf/Run.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/tkf/Run.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/b402343870186a27ffd059d148eaf07f96b2bf843fa394227451294b032e9da0/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f746b662f52756e2e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/tkf/Run.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://github.com/tkf/Run.jl"><img src="https://camo.githubusercontent.com/e7c09a5b9498171ef38c87f75a3886b7c9a82820bc057a93351e564820108e0a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f746b662f52756e2e6a6c2e7376673f7374796c653d736f6369616c266c6f676f3d676974687562" alt="GitHub last commit" data-canonical-src="https://img.shields.io/github/last-commit/tkf/Run.jl.svg?style=social&amp;logo=github" style="max-width:100%;"></a></p>
<p>Run.jl provides functions to run tests or build documentation in an
isolated environment.  See more in the
<a href="https://tkf.github.io/Run.jl/dev" rel="nofollow">documentation</a>.</p>
<h2><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Features</h2>
<ul>
<li>Simpler CI setup (<code>.travis.yml</code>, <code>.gitlab-ci.yml</code>, etc.)</li>
<li>Isolated and activatable sub-environments for Julia &lt; 1.2.</li>
<li>Reproducible runs not only for test but also for any sub-projects
(docs, benchmarks, etc.)</li>
<li>Finer Julia options (e.g., <code>Run.test(fast=true)</code> to run tests faster
by minimizing JIT compilation.)</li>
</ul>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<h3><a id="user-content-githubworkflowyml" class="anchor" aria-hidden="true" href="#githubworkflowyml"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>.github/workflow/*.yml</code></h3>
<p>Here is an example for using Run.jl with GitHub Actions.  Create a
file, e.g., <code>.github/workflow/test.yml</code>, with:</p>
<div class="highlight highlight-source-yaml position-relative" data-snippet-clipboard-copy-content="name: Run tests

on:
  push:
    branches:
      - master
    tags: '*'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        julia-version: ['1']
      fail-fast: false
    name: Test Julia ${{ matrix.julia-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup julia
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
      - run: julia -e 'using Pkg; pkg&quot;add Run@0.1&quot;'
      - run: julia -e 'using Run; Run.prepare_test()'
      - run: julia -e 'using Run; Run.test()'
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: ./lcov.info
          flags: unittests
          name: codecov-umbrella
"><pre><span class="pl-ent">name</span>: <span class="pl-s">Run tests</span>

<span class="pl-ent">on</span>:
  <span class="pl-ent">push</span>:
    <span class="pl-ent">branches</span>:
      - <span class="pl-s">master</span>
    <span class="pl-ent">tags</span>: <span class="pl-s"><span class="pl-pds">'</span>*<span class="pl-pds">'</span></span>
  <span class="pl-ent">pull_request</span>:

<span class="pl-ent">jobs</span>:
  <span class="pl-ent">test</span>:
    <span class="pl-ent">runs-on</span>: <span class="pl-s">ubuntu-latest</span>
    <span class="pl-ent">strategy</span>:
      <span class="pl-ent">matrix</span>:
        <span class="pl-ent">julia-version</span>: <span class="pl-s">['1']</span>
      <span class="pl-ent">fail-fast</span>: <span class="pl-c1">false</span>
    <span class="pl-ent">name</span>: <span class="pl-s">Test Julia ${{ matrix.julia-version }}</span>
    <span class="pl-ent">steps</span>:
      - <span class="pl-ent">uses</span>: <span class="pl-s">actions/checkout@v2</span>
      - <span class="pl-ent">name</span>: <span class="pl-s">Setup julia</span>
        <span class="pl-ent">uses</span>: <span class="pl-s">julia-actions/setup-julia@v1</span>
        <span class="pl-ent">with</span>:
          <span class="pl-ent">version</span>: <span class="pl-s">${{ matrix.julia-version }}</span>
      - <span class="pl-ent">run</span>: <span class="pl-s">julia -e 'using Pkg; pkg"add Run@0.1"'</span>
      - <span class="pl-ent">run</span>: <span class="pl-s">julia -e 'using Run; Run.prepare_test()'</span>
      - <span class="pl-ent">run</span>: <span class="pl-s">julia -e 'using Run; Run.test()'</span>
      - <span class="pl-ent">uses</span>: <span class="pl-s">julia-actions/julia-processcoverage@v1</span>
      - <span class="pl-ent">uses</span>: <span class="pl-s">codecov/codecov-action@v1</span>
        <span class="pl-ent">with</span>:
          <span class="pl-ent">file</span>: <span class="pl-s">./lcov.info</span>
          <span class="pl-ent">flags</span>: <span class="pl-s">unittests</span>
          <span class="pl-ent">name</span>: <span class="pl-s">codecov-umbrella</span></pre></div>
<h3><a id="user-content-travisyml" class="anchor" aria-hidden="true" href="#travisyml"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>.travis.yml</code></h3>
<p>To use <code>Run.test</code> to run tests in Travis CI, add the following snippet
in <code>.travis.yml</code>.</p>
<div class="highlight highlight-source-yaml position-relative" data-snippet-clipboard-copy-content="before_install:
  - unset JULIA_PROJECT
  - julia -e 'using Pkg; pkg&quot;add Run@0.1&quot;'
install:
  - julia -e 'using Run; Run.prepare_test()'
script:
  - julia -e 'using Run; Run.test()'
after_success:
  - julia -e 'using Run; Run.after_success_test()'
jobs:
  include:
    - stage: Documentation
      install:
        - julia -e 'using Run; Run.prepare_docs()'
      script:
        - julia -e 'using Run; Run.docs()'
      after_success: skip
"><pre><span class="pl-ent">before_install</span>:
  - <span class="pl-s">unset JULIA_PROJECT</span>
  - <span class="pl-s">julia -e 'using Pkg; pkg"add Run@0.1"'</span>
<span class="pl-ent">install</span>:
  - <span class="pl-s">julia -e 'using Run; Run.prepare_test()'</span>
<span class="pl-ent">script</span>:
  - <span class="pl-s">julia -e 'using Run; Run.test()'</span>
<span class="pl-ent">after_success</span>:
  - <span class="pl-s">julia -e 'using Run; Run.after_success_test()'</span>
<span class="pl-ent">jobs</span>:
  <span class="pl-ent">include</span>:
    - <span class="pl-ent">stage</span>: <span class="pl-s">Documentation</span>
      <span class="pl-ent">install</span>:
        - <span class="pl-s">julia -e 'using Run; Run.prepare_docs()'</span>
      <span class="pl-ent">script</span>:
        - <span class="pl-s">julia -e 'using Run; Run.docs()'</span>
      <span class="pl-ent">after_success</span>: <span class="pl-s">skip</span></pre></div>
<p>Side notes:</p>
<ul>
<li><code>Run.prepare_test()</code> and <code>Run.prepare_docs()</code> are not required but
it is a good idea to separate installation and test.</li>
<li>The test log can be minimized by passing <code>prepare=false</code> to <code>Run.test</code>.</li>
</ul>
<h3><a id="user-content-gitlab-ciyml" class="anchor" aria-hidden="true" href="#gitlab-ciyml"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>.gitlab-ci.yml</code></h3>
<div class="highlight highlight-source-yaml position-relative" data-snippet-clipboard-copy-content=".template:
  image: julia
  before_script:
    - julia -e 'using Pkg; pkg&quot;add Run@0.1&quot;'

test:
  extends: .template
  script:
    - julia -e 'using Run; Run.test()'

pages:
  extends: .template
  stage: deploy
  script:
    - julia -e 'using Run; Run.docs()'
    - mv docs/build public
  artifacts:
    paths:
      - public
  only:
    - master
"><pre><span class="pl-ent">.template</span>:
  <span class="pl-ent">image</span>: <span class="pl-s">julia</span>
  <span class="pl-ent">before_script</span>:
    - <span class="pl-s">julia -e 'using Pkg; pkg"add Run@0.1"'</span>

<span class="pl-ent">test</span>:
  <span class="pl-ent">extends</span>: <span class="pl-s">.template</span>
  <span class="pl-ent">script</span>:
    - <span class="pl-s">julia -e 'using Run; Run.test()'</span>

<span class="pl-ent">pages</span>:
  <span class="pl-ent">extends</span>: <span class="pl-s">.template</span>
  <span class="pl-ent">stage</span>: <span class="pl-s">deploy</span>
  <span class="pl-ent">script</span>:
    - <span class="pl-s">julia -e 'using Run; Run.docs()'</span>
    - <span class="pl-s">mv docs/build public</span>
  <span class="pl-ent">artifacts</span>:
    <span class="pl-ent">paths</span>:
      - <span class="pl-s">public</span>
  <span class="pl-ent">only</span>:
    - <span class="pl-s">master</span></pre></div>
</article></div>