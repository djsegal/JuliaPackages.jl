<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-functionaltables" class="anchor" aria-hidden="true" href="#functionaltables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>FunctionalTables</h1>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ea6e0ff99602c3563e3dd684abf60b30edceaeef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667"><img src="https://camo.githubusercontent.com/ea6e0ff99602c3563e3dd684abf60b30edceaeef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667" alt="Lifecycle" data-canonical-src="https://img.shields.io/badge/lifecycle-experimental-orange.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.org/tpapp/FunctionalTables.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/fe10cb07862ee8855cc1dff3c23b99aaa6aae331/68747470733a2f2f7472617669732d63692e6f72672f74706170702f46756e6374696f6e616c5461626c65732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/tpapp/FunctionalTables.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="http://codecov.io/github/tpapp/FunctionalTables.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/05bb91b3611fe05850fbb9db5cf37cb01eec2d19/687474703a2f2f636f6465636f762e696f2f6769746875622f74706170702f46756e6374696f6e616c5461626c65732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/tpapp/FunctionalTables.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Julia package for working with (potentially large) columns of data.</p>
<h1><a id="user-content-design" class="anchor" aria-hidden="true" href="#design"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Design</h1>
<p>A <em>table</em> is a collection of <em>columns</em>, indexed by <code>Symbol</code>s.</p>
<p>Columns are <em>immutable</em>, which allows compression and type narrowing when applicable. Columns do not support random access, just <code>iterate</code>.</p>
<p>Columns are created by collecting elements into <em>sinks</em>, which are then finalized. While being collected into, sinks can change representation, eg decide whether to use RLE or other compression schemes, <code>mmap</code> to disk for large data, etc --- these can be configured and ideally ignored by the user.</p>
<p><code>NamedTuple</code>s are used pervasively throughout the interface.</p>
<h1><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Status</h1>
<p>Heavily experimental, API changes radically without warnings or deprecations. This primarily an experiment, the package will be registered if it works out.</p>
</article></div>