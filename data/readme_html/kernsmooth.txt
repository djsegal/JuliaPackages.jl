<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-kernsmooth" class="anchor" aria-hidden="true" href="#kernsmooth"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>KernSmooth</h1>
<p><a href="https://travis-ci.org/lendle/KernSmooth.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1046eb653fc9280c713dfc63f453e34109f5efd1/68747470733a2f2f7472617669732d63692e6f72672f6c656e646c652f4b65726e536d6f6f74682e6a6c2e706e67" alt="Build Status" data-canonical-src="https://travis-ci.org/lendle/KernSmooth.jl.png" style="max-width:100%;"></a></p>
<p><a href="https://github.com/IainNZ/PackageEvaluator.jl"><img src="https://camo.githubusercontent.com/c118adb830e59fb8ec40b02db9ca8032148bea8e/687474703a2f2f6961696e6e7a2e6769746875622e696f2f7061636b616765732e6a756c69616c616e672e6f72672f6261646765732f4b65726e536d6f6f74685f302e332e737667" alt="PackageEvaluator" data-canonical-src="http://iainnz.github.io/packages.julialang.org/badges/KernSmooth_0.3.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-about" class="anchor" aria-hidden="true" href="#about"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>About</h2>
<p>KernSmooth.jl is the a partial port of the R package <a href="http://cran.r-project.org/web/packages/KernSmooth/index.html" rel="nofollow">KernSmooth</a>, (v2.23-10.)
The R package carries an unlimited license.</p>
<p>Currently the <code>locpoly</code> and <code>dpill</code> functions are ported.
<code>locpoly</code> uses local polynomials to estimate pdf of a single variable or a regression function for two variables, or their derivatives.
<code>dpill</code> provides a method to select a bandwidth for local linear regression.</p>
<p>Other functionality provided by the R package but not ported to KernSmooth.jl pertains to univariate and bivariate kernel density estimation.
Univariate and bivariate kernel density estimation is provided by the <code>kde</code> function in <a href="https://github.com/JuliaStats/StatsBase.jl/">StatsBase.jl</a>.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h2>
<h3><a id="user-content-locpoly---estimate-regression-or-density-functions-or-their-derivatives-using-local-polynomials" class="anchor" aria-hidden="true" href="#locpoly---estimate-regression-or-density-functions-or-their-derivatives-using-local-polynomials"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>locpoly</code> - Estimate regression or density functions or their derivatives using local polynomials</h3>
<p>The method signatures:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c1">locpoly</span>(x<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span>, y<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span>, bandwidth<span class="pl-k">::</span><span class="pl-c1">Union(Float64, Vector{Float64})</span>;
    drv<span class="pl-k">::</span><span class="pl-c1">Int</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>,
    degree<span class="pl-k">::</span><span class="pl-c1">Int</span><span class="pl-k">=</span>drv<span class="pl-k">+</span><span class="pl-c1">1</span>,
    kernel<span class="pl-k">::</span><span class="pl-c1">Symbol</span> <span class="pl-k">=</span> <span class="pl-c1">:normal</span>,
    gridsize<span class="pl-k">::</span><span class="pl-c1">Int</span> <span class="pl-k">=</span> <span class="pl-c1">401</span>,
    bwdisc<span class="pl-k">::</span><span class="pl-c1">Int</span> <span class="pl-k">=</span> <span class="pl-c1">25</span>,
    range_x<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span><span class="pl-k">=</span>Float64[],
    binned<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">false</span>,
    truncate<span class="pl-k">::</span><span class="pl-c1">Bool</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>)

<span class="pl-c1">locpoly</span>(x<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span>, bandwidth<span class="pl-k">::</span><span class="pl-c1">Union(Float64, Vector{Float64})</span>; args<span class="pl-k">...</span>)</pre></div>
<ul>
<li><code>x</code> - vector of x data</li>
<li><code>y</code> - vector of y data. For density estimation (of <code>x</code>), <code>y</code> should be omitted or be an empty <code>Vector{T}</code></li>
<li><code>bandwidth</code> - should be a scalar or vector of length <code>gridsize</code></li>
<li>Other arguments are optional. For their descriptions, see the <a href="https://stat.ethz.ch/R-manual/R-devel/library/KernSmooth/html/locpoly.html" rel="nofollow">R documentation</a></li>
</ul>
<p>A <code>(Vector{Float64}, Vector{Float64})</code> is returned.  The first vector is the sorted set of points at which an estimate was computed. The estimates are in the second vector.</p>
<h3><a id="user-content-dpill---direct-plug-in-method-to-select-a-bandwidth-for-local-linear-gaussian-kernel-regression" class="anchor" aria-hidden="true" href="#dpill---direct-plug-in-method-to-select-a-bandwidth-for-local-linear-gaussian-kernel-regression"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>dpill</code> - Direct plug-in method to select a bandwidth for local linear Gaussian kernel regression</h3>
<p>The method signature</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">function</span> <span class="pl-en">dpill</span>(x<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span>, y<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span>;
               blockmax<span class="pl-k">::</span><span class="pl-c1">Int</span> <span class="pl-k">=</span> <span class="pl-c1">5</span>,
               divisor<span class="pl-k">::</span><span class="pl-c1">Int</span> <span class="pl-k">=</span> <span class="pl-c1">20</span>,
               trim<span class="pl-k">::</span><span class="pl-c1">Float64</span> <span class="pl-k">=</span> <span class="pl-c1">0.01</span>,
               proptrun<span class="pl-k">::</span><span class="pl-c1">Float64</span> <span class="pl-k">=</span> <span class="pl-c1">0.05</span>,
               gridsize<span class="pl-k">::</span><span class="pl-c1">Int</span> <span class="pl-k">=</span> <span class="pl-c1">401</span>,
               range_x<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span> <span class="pl-k">=</span> Float64[],
               truncate <span class="pl-k">=</span> <span class="pl-c1">true</span>)</pre></div>
<ul>
<li><code>x</code> - vector of x data</li>
<li><code>y</code> - vector of y data.</li>
<li>Other arguments are optional. For their descriptions, see the <a href="https://stat.ethz.ch/R-manual/R-devel/library/KernSmooth/html/dpill.html" rel="nofollow">R documentation</a></li>
</ul>
<h2><a id="user-content-regression-example" class="anchor" aria-hidden="true" href="#regression-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Regression example</h2>
<p>Estimate regression using different bandwidths, including the bandwidth selected by <code>dpill</code>.</p>
<div class="highlight highlight-source-julia"><pre>xgrid2, yhat0_5 <span class="pl-k">=</span> <span class="pl-c1">locpoly</span>(x, y, <span class="pl-c1">0.5</span>)
yhat1_0 <span class="pl-k">=</span> <span class="pl-c1">locpoly</span>(x, y, <span class="pl-c1">1.0</span>)[<span class="pl-c1">2</span>]
yhat2_0 <span class="pl-k">=</span> <span class="pl-c1">locpoly</span>(x, y, <span class="pl-c1">2.0</span>)[<span class="pl-c1">2</span>]
h <span class="pl-k">=</span> <span class="pl-c1">dpill</span>(x, y)
yhath <span class="pl-k">=</span> <span class="pl-c1">locpoly</span>(x, y, h)[<span class="pl-c1">2</span>]</pre></div>

<p>A plot of the estimates and true regression:</p>
<p><a target="_blank" rel="noopener noreferrer" href="examples/scatter.png"><img src="examples/scatter.png" alt="&quot;Scatter plot&quot;" style="max-width:100%;"></a></p>
<p>The full code for the example is <a href="http://nbviewer.ipython.org/gist/lendle/9314892" rel="nofollow">here</a>.</p>
</article></div>