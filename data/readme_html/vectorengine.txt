<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-vectorenginejl" class="anchor" aria-hidden="true" href="#vectorenginejl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>VectorEngine.jl</h1>
<p dir="auto">A first version of Julia enabled for the NEC SX-Aurora TSUBASA Vector Engine (VE).</p>
<p dir="auto">It builds on a pre-release of julia-1.8 with additional patches and requires
modified versions of GPUCompiler.jl and LLVM.jl.</p>
<p dir="auto">The LLVM compiler used is a branch of <a href="https://github.com/sx-aurora-dev/llvm-project">https://github.com/sx-aurora-dev/llvm-project</a>
which was patched with a few Julia specific things. It is a pre-14.0.0 version, therefore
the patches in LLVM.jl, which (for julia-1.8) relies on LLVM 13.0.0.</p>
<p dir="auto">LLVM-VE uses the RegionVectorizer (RV) for vectorization and has LoopVectorizer disabled.</p>
<h2 dir="auto"><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h2>
<p dir="auto">Support for offloading kernels to the VE device eg. by using the <code>@veda</code> macro.</p>
<p dir="auto">Using device side VEArrays.</p>
<p dir="auto">Guided vectorization with the <code>@vectorize</code> macro.</p>
<h2 dir="auto"><a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Limitations</h2>
<p dir="auto">Many.
Only rudimentary runtime on device side.</p>
<h2 dir="auto"><a id="user-content-building" class="anchor" aria-hidden="true" href="#building"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Building</h2>
<p dir="auto">The build process is a bit rough and needs a few manual interventions. Should get smoother
once nearing the latest GPUCompiler version and julia-1.9, which requires LLVM-14.0.0.</p>
<p dir="auto">Start with cloning the VectorEngine.jl project:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="git clone git@github.com:sx-aurora-dev/VectorEngine.jl.git
cd VectorEngine.jl"><pre class="notranslate"><code>git clone git@github.com:sx-aurora-dev/VectorEngine.jl.git
cd VectorEngine.jl
</code></pre></div>
<p dir="auto">Now clone the matching Julia branch inside the VectorEngine.jl directory. The location is,
of course, a matter of taste, I prefer to keep them together while developing.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="git clone -b ef/ve-llvm14-release-1.8 git@github.com:efocht/julia.git
mkdir builds
cd julia
make O=`pwd`/../builds/julia-ve configure
cd .."><pre class="notranslate"><code>git clone -b ef/ve-llvm14-release-1.8 git@github.com:efocht/julia.git
mkdir builds
cd julia
make O=`pwd`/../builds/julia-ve configure
cd ..
</code></pre></div>
<p dir="auto">Create a <code>Make.user</code> file in the build directory:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="cat &lt;&lt;EOF &gt;builds/julia-ve/Make.user
USE_BINARYBUILDER_LLVM=0
FORCE_ASSERTIONS=1
LLVM_ASSERTIONS=1
#override JULIA_BUILD_MODE=debug
LLVM_DEBUG=2
DEPS_GIT=llvm
override LLVM_VER = 14.0.0
override LLVM_BRANCH=hpce/release_2.2.0_julia
override LLVM_SHA1=hpce/release_2.2.0_julia
override LLVM_GIT_URL=https://github.com/sx-aurora-dev/llvm-project
#override LLVM_TARGETS=host;WebAssembly;NVPTX;AMDGPU;BPF;VE
override LLVM_TARGETS=host;VE
EOF"><pre class="notranslate"><code>cat &lt;&lt;EOF &gt;builds/julia-ve/Make.user
USE_BINARYBUILDER_LLVM=0
FORCE_ASSERTIONS=1
LLVM_ASSERTIONS=1
#override JULIA_BUILD_MODE=debug
LLVM_DEBUG=2
DEPS_GIT=llvm
override LLVM_VER = 14.0.0
override LLVM_BRANCH=hpce/release_2.2.0_julia
override LLVM_SHA1=hpce/release_2.2.0_julia
override LLVM_GIT_URL=https://github.com/sx-aurora-dev/llvm-project
#override LLVM_TARGETS=host;WebAssembly;NVPTX;AMDGPU;BPF;VE
override LLVM_TARGETS=host;VE
EOF
</code></pre></div>
<p dir="auto">Only the architecture targets <code>host</code> (x86_64) and <code>VE</code> are enabled because the others were
stripped from the llvm-ve repository. This will change once we can use the upstream (mainline)
LLVM. VE is an official architecture there, but the upstream VE part still lacks some pieces of
vectorization support.</p>
<p dir="auto">Now build julia-ve:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="cd builds/julia-ve
make -j 12"><pre class="notranslate"><code>cd builds/julia-ve
make -j 12
</code></pre></div>
<h3 dir="auto"><a id="user-content-prepare-gpucompilerjl-and-llvmjl" class="anchor" aria-hidden="true" href="#prepare-gpucompilerjl-and-llvmjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Prepare GPUCompiler.jl and LLVM.jl</h3>
<p dir="auto">Since this is work in progress, I check out these packages locally, such that I can tweak them,
if needed. Certainly these steps can be shortened, but I'm documenting what I use and works for me.</p>
<p dir="auto">Clone the LLVM.jl and GPUCompiler.jl packages. We need a certain branch for this when doing
<code>pkg&gt; develop</code>, and cloning with "develop" does not support specifying a branch.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="mkdir dev
cd dev
git clone -b ef/ve-llvm14-rebase-v4.9.1 https://github.com/efocht/LLVM.jl.git LLVM
git clone -b ef/ve-rebase-v0.14.1 https://github.com/efocht/GPUCompiler.jl.git GPUCompiler
cd .."><pre class="notranslate"><code>mkdir dev
cd dev
git clone -b ef/ve-llvm14-rebase-v4.9.1 https://github.com/efocht/LLVM.jl.git LLVM
git clone -b ef/ve-rebase-v0.14.1 https://github.com/efocht/GPUCompiler.jl.git GPUCompiler
cd ..
</code></pre></div>
<p dir="auto">I had to remove and then add the explicitly checked out repositories:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="builds/julia-ve/usr/bin/julia --project=.

# press ] to enter package mode
pkg&gt; rm GPUCompiler
pkg&gt; rm LLVM

pkg&gt; dev --local JLLWrappers
pkg&gt; dev dev/LLVM
pkg&gt; dev dev/GPUCompiler
pkg&gt; add Preferences
pkg&gt; Ctrl-d"><pre class="notranslate"><code>builds/julia-ve/usr/bin/julia --project=.

# press ] to enter package mode
pkg&gt; rm GPUCompiler
pkg&gt; rm LLVM

pkg&gt; dev --local JLLWrappers
pkg&gt; dev dev/LLVM
pkg&gt; dev dev/GPUCompiler
pkg&gt; add Preferences
pkg&gt; Ctrl-d
</code></pre></div>
<p dir="auto">The package Preferences is added in order to support loading the LocalPreferences.toml which we
create in the next step.</p>
<p dir="auto">Rebuild libLLVMExtra-14.so with assertion support. Julia will continue complaining about it, though,
because it always complains if assertions are enabled, but doesn't actually check for them.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="cd dev/LLVM
../../builds/julia-ve/usr/bin/julia --project=deps
# press ] to enter package mode
pkg&gt; add Scratch
pkg&gt; Ctrl-d

# rebuild the library with &quot;our&quot; LLVM
env LLVM_DIR=../../builds/julia-ve/usr \
  ../../builds/julia-ve/usr/bin/julia --project=deps deps/build_local.jl ../../builds/julia-ve/usr/lib/cmake/llvm"><pre class="notranslate"><code>cd dev/LLVM
../../builds/julia-ve/usr/bin/julia --project=deps
# press ] to enter package mode
pkg&gt; add Scratch
pkg&gt; Ctrl-d

# rebuild the library with "our" LLVM
env LLVM_DIR=../../builds/julia-ve/usr \
  ../../builds/julia-ve/usr/bin/julia --project=deps deps/build_local.jl ../../builds/julia-ve/usr/lib/cmake/llvm
</code></pre></div>
<p dir="auto">Now copy the LocalPreferences.toml file into the VectorEngine.jl/ directory.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="cp LocalPreferences.toml ../..
cd ../.."><pre class="notranslate"><code>cp LocalPreferences.toml ../..
cd ../..
</code></pre></div>
<h2 dir="auto"><a id="user-content-run-tests" class="anchor" aria-hidden="true" href="#run-tests"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Run tests</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="builds/julia-ve/usr/bin/julia --project=. test/runtests.jl"><pre class="notranslate"><code>builds/julia-ve/usr/bin/julia --project=. test/runtests.jl
</code></pre></div>
<p dir="auto">The output should end with something like:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Test Summary: | Pass  Total     Time
VectorEngine  |  103    103  1m10.8s"><pre class="notranslate"><code>Test Summary: | Pass  Total     Time
VectorEngine  |  103    103  1m10.8s
</code></pre></div>
</article></div>