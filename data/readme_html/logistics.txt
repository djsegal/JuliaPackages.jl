<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-logisticsjl" class="anchor" aria-hidden="true" href="#logisticsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Logistics.jl</h1>
<p dir="auto"><a href="https://Mikumikunisiteageru.github.io/Logistics.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://Mikumikunisiteageru.github.io/Logistics.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/Mikumikunisiteageru/Logistics.jl/actions/workflows/CI.yml"><img src="https://github.com/Mikumikunisiteageru/Logistics.jl/actions/workflows/CI.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/Mikumikunisiteageru/Logistics.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/82bfa26f79fb802f4becd0beef0cc8cf16e476b3e49ddc038cd3d56897a5a666/68747470733a2f2f636f6465636f762e696f2f67682f4d696b756d696b756e697369746561676572752f4c6f676973746963732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/Mikumikunisiteageru/Logistics.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaTesting/Aqua.jl"><img src="https://camo.githubusercontent.com/e608d77380b4ff8adb32f31cbee4c79ea1cb5a3c7557c512c51e88785dde8e61/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417175616a6c2d2546302539462538432541322d617175612e737667" alt="Aqua.jl Quality Assurance" data-canonical-src="https://img.shields.io/badge/Aquajl-%F0%9F%8C%A2-aqua.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Logistics.jl defines the data type <code>Logistic</code> which represents real numbers in <code>[0, 1]</code> (e.g. probabilities) with more numerically stable arithmetic operations.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<p dir="auto">The followings are some simple examples illustrating the usage of this package. Please see <a href="https://Mikumikunisiteageru.github.io/Logistics.jl/" rel="nofollow">the documentation</a> for more details of Logistics.jl.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Logistics

julia&gt; x = Logistic(0)
Logistic{Float64}(0.0) ≈ 0.5

julia&gt; y = logisticate(0.2)
Logistic{Float64}(-1.3862943611198906) ≈ 0.2

julia&gt; x + y
Logistic{Float64}(0.8472978603872037) ≈ 0.7

julia&gt; x - y
Logistic{Float64}(-0.8472978603872037) ≈ 0.3

julia&gt; x * y
Logistic{Float64}(-2.197224577336219) ≈ 0.10000000000000002

julia&gt; y / x
Logistic{Float64}(-0.40546510810816444) ≈ 0.4

julia&gt; x ^ 2
Logistic{Float64}(-1.0986122886681098) ≈ 0.25

julia&gt; mx = x ^ 10000
Logistic{Float64}(-6931.471805599453) ≈ 0.0

julia&gt; my = y ^ 4307
Logistic{Float64}(-6931.84908885367) ≈ 0.0

julia&gt; mx + my
Logistic{Float64}(-6930.949611751832) ≈ 0.0

julia&gt; mx - my
Logistic{Float64}(-6932.629282338215) ≈ 0.0

julia&gt; mx * my
Logistic{Float64}(-13863.320894453122) ≈ 0.0

julia&gt; mx \ my
Logistic{Float64}(0.7801934845449816) ≈ 0.6857218127893691

julia&gt; sqrt(mx)
Logistic{Float64}(-3465.7359027997263) ≈ 0.0

julia&gt; cbrt(mx)
Logistic{Float64}(-2310.490601866484) ≈ 0.0

julia&gt; log(y)
-1.6094379124341003

julia&gt; logit(y)
-1.3862943611198906"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Logistics

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">Logistic</span>(<span class="pl-c1">0</span>)
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-c1">0.0</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.5</span>

julia<span class="pl-k">&gt;</span> y <span class="pl-k">=</span> <span class="pl-c1">logisticate</span>(<span class="pl-c1">0.2</span>)
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-k">-</span><span class="pl-c1">1.3862943611198906</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.2</span>

julia<span class="pl-k">&gt;</span> x <span class="pl-k">+</span> y
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-c1">0.8472978603872037</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.7</span>

julia<span class="pl-k">&gt;</span> x <span class="pl-k">-</span> y
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-k">-</span><span class="pl-c1">0.8472978603872037</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.3</span>

julia<span class="pl-k">&gt;</span> x <span class="pl-k">*</span> y
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-k">-</span><span class="pl-c1">2.197224577336219</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.10000000000000002</span>

julia<span class="pl-k">&gt;</span> y <span class="pl-k">/</span> x
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-k">-</span><span class="pl-c1">0.40546510810816444</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.4</span>

julia<span class="pl-k">&gt;</span> x <span class="pl-k">^</span> <span class="pl-c1">2</span>
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-k">-</span><span class="pl-c1">1.0986122886681098</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.25</span>

julia<span class="pl-k">&gt;</span> mx <span class="pl-k">=</span> x <span class="pl-k">^</span> <span class="pl-c1">10000</span>
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-k">-</span><span class="pl-c1">6931.471805599453</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> my <span class="pl-k">=</span> y <span class="pl-k">^</span> <span class="pl-c1">4307</span>
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-k">-</span><span class="pl-c1">6931.84908885367</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> mx <span class="pl-k">+</span> my
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-k">-</span><span class="pl-c1">6930.949611751832</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> mx <span class="pl-k">-</span> my
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-k">-</span><span class="pl-c1">6932.629282338215</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> mx <span class="pl-k">*</span> my
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-k">-</span><span class="pl-c1">13863.320894453122</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> mx <span class="pl-k">\</span> my
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-c1">0.7801934845449816</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.6857218127893691</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">sqrt</span>(mx)
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-k">-</span><span class="pl-c1">3465.7359027997263</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">cbrt</span>(mx)
<span class="pl-c1">Logistic</span><span class="pl-c1">{Float64}</span>(<span class="pl-k">-</span><span class="pl-c1">2310.490601866484</span>) <span class="pl-k">≈</span> <span class="pl-c1">0.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">log</span>(y)
<span class="pl-k">-</span><span class="pl-c1">1.6094379124341003</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">logit</span>(y)
<span class="pl-k">-</span><span class="pl-c1">1.3862943611198906</span></pre></div>
</article></div>