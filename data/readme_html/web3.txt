<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-web3jl" class="anchor" aria-hidden="true" href="#web3jl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Web3.jl</h1>
<p>A module for Ethereum connectivity.</p>
<p>Parse ABI files, encode/decode ABI data, and make Ethereum <a href="https://github.com/ethereum/wiki/wiki/JSON-RPC">JSON-RPC</a> calls.</p>
<h2><a id="user-content-structs" class="anchor" aria-hidden="true" href="#structs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Structs</h2>
<ul>
<li>Web3Connection(url): a JSON-RPC connection to an Ethereum node</li>
<li>Contract(functions, events): A contract's function and event declarations</li>
<li>FunctionCall(decl, inputs): A call to a function</li>
<li>FunctionResult(decl, outputs): The outputs of a function call</li>
<li>Event(decl, parameters): A logged event</li>
</ul>
<h2><a id="user-content-variables" class="anchor" aria-hidden="true" href="#variables"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Variables</h2>
<ul>
<li>contracts: a dictionary of contract-address =&gt; Contract structures</li>
</ul>
<h2><a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Functions</h2>
<ul>
<li>readABI(con::Web3Connection, contractname::String, stream::IO): Read an ABI file for a contract</li>
<li>encodefunctioncall(io::IO, f::ABIFunction, inputs::Array): Encode a call to a function</li>
<li>encodefunctioncall(io::IOBuffer, f::ABIFunction, inputs::Array): Encode a call to a function, returns buffer data</li>
<li>encodefunctionresult(io::IO, f::ABIFunction, outputs::Array): Encode the results of a function</li>
<li>encodefunctionresult(io::IOBuffer, f::ABIFunction, outputs::Array): Encode the results of a function, returns buffer data</li>
<li>encodeevent(io::IO, e::ABIEvent, inputs::Array): Encode an event</li>
<li>encodeevent(io::IOBuffer, e::ABIEvent, inputs::Array): Encode an event, returns buffer data</li>
<li>decodefunctioncall(io::IO, con::Contract): Decode a function call</li>
<li>decodefunctionresult(io::IO, con::Contract): Decode a function call result</li>
<li>decodeevent(io::IO, con::Contract): Decode an event in a transaction log</li>
</ul>
<h2><a id="user-content-api-calls" class="anchor" aria-hidden="true" href="#api-calls"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>API Calls</h2>
<p>These aren't all filled in yet but see the package source for a simple way to add more...</p>
<ul>
<li>clientversion(con::Web3Connection): returns the client version</li>
<li>eth: eth API
<ul>
<li>eth.gettransactioncount(con::Web3Connection, addr, context): Get transaction count for a given address and context ("latest", "earliest", "pending", or a block number)</li>
<li>eth.gettransactionbyhash(con::Web3connection, hash): Get a transaction</li>
</ul>
</li>
<li>util: util API
<ul>
<li>util.sha3(con::Web3Connection, str::String): get the keccak hash of a string</li>
<li>util.keccak(con::Web3Connection, str::String): get the keccak hash of a string</li>
</ul>
</li>
</ul>
</article></div>