<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-statisticaltraitsjl" class="anchor" aria-hidden="true" href="#statisticaltraitsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>StatisticalTraits.jl</h1>
<table>
<thead>
<tr>
<th align="center">Linux</th>
<th align="center">Coverage</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://github.com/JuliaAI/StatisticalTraits.jl/actions"><img src="https://github.com/JuliaAI/StatisticalTraits.jl/workflows/CI/badge.svg" alt="Build status" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/JuliaAI/StatisticalTraits.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/9643a1e08fddf12a306592891ff0ac4bf094b22cbf0cc45fba4f3c1d642ee52a/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696141492f537461746973746963616c5472616974732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d726836486e79494b6331" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaAI/StatisticalTraits.jl/branch/master/graph/badge.svg?token=rh6HnyIKc1" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">A light-weight package defining fall-back implementations for a
collection of traits possessed by statistical objects. Here a "trait"
is a function with a single argument that is a julia type, which might
encode type metadata for inspection, or for use in function
dispatch.</p>
<p dir="auto">Here are two examples, which might apply to both statistical
model types and loss function types:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="target_scitype(::Type) = Unknown
prediction_type(::Type) = :unknown # also :probablistic, :deterministic, :interval"><pre><span class="pl-en">target_scitype</span>(<span class="pl-k">::</span><span class="pl-c1">Type</span>) <span class="pl-k">=</span> Unknown
<span class="pl-en">prediction_type</span>(<span class="pl-k">::</span><span class="pl-c1">Type</span>) <span class="pl-k">=</span> <span class="pl-c1">:unknown</span> <span class="pl-c"><span class="pl-c">#</span> also :probablistic, :deterministic, :interval</span></pre></div>
<p dir="auto">Here <code>Unknown</code> is a type defined in the light-weight package
<a href="https://github.com/JuliaAI/ScientificTypesBase.jl">ScientificTypesBase.jl</a>,
the only dependency of StatsTraits.jl.</p>
<p dir="auto">Refer to <a href="src/StatisticalTraits.jl">source code</a> for a complete list.</p>
<p dir="auto">The traits defined here are overloaded by assorted model types and
measure types in the
<a href="https://github.com/alan-turing-institute/MLJ.jl">MLJ</a> universe
(examples of measures are loss functions and scoring rules). However,
this small package might be of independent interest.</p>
<p dir="auto">A planned StatisticalMeasures.jl package, to contain measures
currently in
<a href="https://github.com/JuliaAI/MLJBase.jl">MLJBase.jl</a>,
will have this package as a dependency, allowing it to be independent
of the MLJ packages.</p>
</article></div>