<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-chemicalidentifiersjl" class="anchor" aria-hidden="true" href="#chemicalidentifiersjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ChemicalIdentifiers.jl</h1>
<p dir="auto"><a href="https://github.com/longemen3000/ChemicalIdentifiers.jl/actions"><img src="https://github.com/longemen3000/ChemicalIdentifiers.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a></p>
<p dir="auto">A chemical identifiers search package, using the databases present at CalebBell/chemicals.</p>
<h2 dir="auto"><a id="user-content-instalation" class="anchor" aria-hidden="true" href="#instalation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Instalation:</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;ChemicalIdentifiers.jl&quot;)"><pre class="notranslate"><code>using Pkg
Pkg.add("ChemicalIdentifiers.jl")
</code></pre></div>
<p dir="auto">The databases are downloaded, parsed, processed and stored as Apache Arrow files at the first package usage, so the first usage may take some time.</p>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">This package exports <code>search_chemical</code>, that, given a search string, performs a search on a database of over 70000 compounds, returning a Named Tuple with the identifiers of the substance in question.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt;using ChemicalIdentifiers
julia&gt; res = search_chemical(&quot;water&quot;)
(pubchemid = 962, CAS = (7732, 18, 5), formula = &quot;H2O&quot;, MW = 18.01528, smiles = &quot;O&quot;, InChI = &quot;H2O/h1H2&quot;, InChI_key = &quot;XLYOFNOQVPJJNP-UHFFFAOYSA-N&quot;, iupac_name = &quot;oxidane&quot;, common_name = &quot;water&quot;)

#worst case scenario, not found on the present databases
julia&gt; @btime search_chemical(&quot;dimethylpyruvic acid22&quot;,nothing)
  273.700 μs (264 allocations: 15.05 KiB)   
missing

#common compound found in the short database
julia&gt; @btime search_chemical(&quot;methane&quot;,nothing)
  7.075 μs (57 allocations: 2.97 KiB)       
(pubchemid = 297, CAS = (74, 82, 8), formula = &quot;CH4&quot;, MW = 16.04246, smiles = &quot;C&quot;, InChI = &quot;CH4/h1H4&quot;, InChI_key = &quot;VNWKTOKETHGBQD-UHFFFAOYSA-N&quot;, iupac_name = &quot;methane&quot;, common_name = &quot;methane&quot;)"><pre class="notranslate"><code>julia&gt;using ChemicalIdentifiers
julia&gt; res = search_chemical("water")
(pubchemid = 962, CAS = (7732, 18, 5), formula = "H2O", MW = 18.01528, smiles = "O", InChI = "H2O/h1H2", InChI_key = "XLYOFNOQVPJJNP-UHFFFAOYSA-N", iupac_name = "oxidane", common_name = "water")

#worst case scenario, not found on the present databases
julia&gt; @btime search_chemical("dimethylpyruvic acid22",nothing)
  273.700 μs (264 allocations: 15.05 KiB)   
missing

#common compound found in the short database
julia&gt; @btime search_chemical("methane",nothing)
  7.075 μs (57 allocations: 2.97 KiB)       
(pubchemid = 297, CAS = (74, 82, 8), formula = "CH4", MW = 16.04246, smiles = "C", InChI = "CH4/h1H4", InChI_key = "VNWKTOKETHGBQD-UHFFFAOYSA-N", iupac_name = "methane", common_name = "methane")
</code></pre></div>
<p dir="auto">A query is usually a string and its type is detected automatically when possible. the supported query types are:</p>
<ul dir="auto">
<li><strong>PubChemID</strong>: by using any ``&lt;:Integer`(or a string containing an Integer)</li>
</ul>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; search_chemical(8003)
(pubchemid = 8003, CAS = (109, 66, 0), formula = &quot;C5H12&quot;, MW = 72.14878, smiles = 
&quot;CCCCC&quot;, InChI = &quot;C5H12/c1-3-5-4-2/h3-5H2,1-2H3&quot;, InChI_key = &quot;OFBQJSOFQDEBGM-UHFFFAOYSA-N&quot;, iupac_name = &quot;pentane&quot;, common_name = &quot;pentane&quot;)"><pre class="notranslate"><code>julia&gt; search_chemical(8003)
(pubchemid = 8003, CAS = (109, 66, 0), formula = "C5H12", MW = 72.14878, smiles = 
"CCCCC", InChI = "C5H12/c1-3-5-4-2/h3-5H2,1-2H3", InChI_key = "OFBQJSOFQDEBGM-UHFFFAOYSA-N", iupac_name = "pentane", common_name = "pentane")
</code></pre></div>
<ul dir="auto">
<li><strong>CAS registry number</strong>:by using a Tuple of integers or a string with the digits separated by <code>-</code> :</li>
</ul>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; search_chemical((67,56,1))        
(pubchemid = 887, CAS = (67, 56, 1), formula = &quot;CH4O&quot;, MW = 32.04186, smiles = &quot;CO&quot;, InChI = &quot;CH4O/c1-2/h2H,1H3&quot;, InChI_key = &quot;OKKJLVBELUTLKV-UHFFFAOYSA-N&quot;, iupac_name = &quot;methanol&quot;, common_name = &quot;methanol&quot;)

 search_chemical((67,56,1),nothing) == search_chemical(&quot;67-56-1&quot;,nothing) #true  "><pre class="notranslate"><code>julia&gt; search_chemical((67,56,1))        
(pubchemid = 887, CAS = (67, 56, 1), formula = "CH4O", MW = 32.04186, smiles = "CO", InChI = "CH4O/c1-2/h2H,1H3", InChI_key = "OKKJLVBELUTLKV-UHFFFAOYSA-N", iupac_name = "methanol", common_name = "methanol")

 search_chemical((67,56,1),nothing) == search_chemical("67-56-1",nothing) #true  
</code></pre></div>
<ul dir="auto">
<li><strong>SMILES</strong>: by using a string starting with <code>SMILES=</code> :</li>
</ul>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; search_chemical(&quot;SMILES=N&quot;)       
(pubchemid = 222, CAS = (7664, 41, 7), formula = &quot;H3N&quot;, MW = 17.03052, smiles = &quot;N&quot;, InChI = &quot;H3N/h1H3&quot;, InChI_key = &quot;QGZKDVFQNNGYKY-UHFFFAOYSA-N&quot;, iupac_name = &quot;azane&quot;, common_name = &quot;ammonia&quot;)"><pre class="notranslate"><code>julia&gt; search_chemical("SMILES=N")       
(pubchemid = 222, CAS = (7664, 41, 7), formula = "H3N", MW = 17.03052, smiles = "N", InChI = "H3N/h1H3", InChI_key = "QGZKDVFQNNGYKY-UHFFFAOYSA-N", iupac_name = "azane", common_name = "ammonia")
</code></pre></div>
<ul dir="auto">
<li><strong>InChI</strong> : by using a string starting with <code>InChI=1/</code> or <code>InChI=1S/</code> :</li>
</ul>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; search_chemical(&quot;InChI=1/C2H4/c1-2/h1-2H2&quot;)     
(pubchemid = 6325, CAS = (74, 85, 1), formula = &quot;C2H4&quot;, MW = 28.05316, smiles = &quot;C=C&quot;, InChI = &quot;C2H4/c1-2/h1-2H2&quot;, InChI_key = &quot;VGGSQFUCUMXWEO-UHFFFAOYSA-N&quot;, iupac_name = &quot;ethene&quot;, common_name = &quot;ethene&quot;) "><pre class="notranslate"><code>julia&gt; search_chemical("InChI=1/C2H4/c1-2/h1-2H2")     
(pubchemid = 6325, CAS = (74, 85, 1), formula = "C2H4", MW = 28.05316, smiles = "C=C", InChI = "C2H4/c1-2/h1-2H2", InChI_key = "VGGSQFUCUMXWEO-UHFFFAOYSA-N", iupac_name = "ethene", common_name = "ethene") 
</code></pre></div>
<ul dir="auto">
<li><strong>InChI key</strong> : by using a string with the pattern <code>XXXXXXXXXXXXXX-YYYYYYYYFV-P</code>:</li>
</ul>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; search_chemical(&quot;IMROMDMJAWUWLK-UHFFFAOYSA-N&quot;)
(pubchemid = 11199, CAS = (9002, 89, 5), 
formula = &quot;C2H4O&quot;, MW = 44.05256, smiles 
= &quot;C=CO&quot;, InChI = &quot;C2H4O/c1-2-3/h2-3H,1H2&quot;, InChI_key = &quot;IMROMDMJAWUWLK-UHFFFAOYSA-N&quot;, iupac_name = &quot;ethenol&quot;, common_name 
= &quot;ethenol&quot;)"><pre class="notranslate"><code>julia&gt; search_chemical("IMROMDMJAWUWLK-UHFFFAOYSA-N")
(pubchemid = 11199, CAS = (9002, 89, 5), 
formula = "C2H4O", MW = 44.05256, smiles 
= "C=CO", InChI = "C2H4O/c1-2-3/h2-3H,1H2", InChI_key = "IMROMDMJAWUWLK-UHFFFAOYSA-N", iupac_name = "ethenol", common_name 
= "ethenol")
</code></pre></div>
<p dir="auto">Searches by CAS and PubChemID are a little bit faster thanks to being encoded as native numeric types, other properties are stored as strings.</p>
<p dir="auto">The package stores each query in <code>ChemicalIdentifiers.SEARCH_CACHE</code> as a <code>Dict{String,Any}</code>, so subsequent queries on the same (or similar) strings, dont pay the cost of searching in the database.</p>
<p dir="auto">If you don't want to store the query, you could use <code>search_chemical(query,nothing)</code>, or, if you want your own cache to be used, pass your own cache via <code>search_chemical(query,mycache)</code>.</p>
<h2 dir="auto"><a id="user-content-custom-databases" class="anchor" aria-hidden="true" href="#custom-databases"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Custom Databases</h2>
<p dir="auto">If you want to add your own databases, you could use the (unexported) data utilities to do so. lets say we also want to add the inorganic database located at <a href="https://github.com/CalebBell/chemicals/blob/master/chemicals/Identifiers/Inorganic%20db.tsv">https://github.com/CalebBell/chemicals/blob/master/chemicals/Identifiers/Inorganic%20db.tsv</a>. we could do:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using ChemicalIdentifiers
inorganic_url = &quot;https://github.com/CalebBell/chemicals/blob/master/chemicals/Identifiers/Inorganic%20db.tsv&quot;
ChemicalIdentifiers.load_data!(:inorganic,url = inorganic_url)
ChemicalIdentifiers.load_db!(:inorganic)"><pre class="notranslate"><code>using ChemicalIdentifiers
inorganic_url = "https://github.com/CalebBell/chemicals/blob/master/chemicals/Identifiers/Inorganic%20db.tsv"
ChemicalIdentifiers.load_data!(:inorganic,url = inorganic_url)
ChemicalIdentifiers.load_db!(:inorganic)
</code></pre></div>
<p dir="auto">or if you already have a local database:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using ChemicalIdentifiers
filepath = &quot;path/to/my/db.tsv&quot;
ChemicalIdentifiers.load_data!(:custom,file = filepath)
ChemicalIdentifiers.load_db!(:custom)"><pre class="notranslate"><code>using ChemicalIdentifiers
filepath = "path/to/my/db.tsv"
ChemicalIdentifiers.load_data!(:custom,file = filepath)
ChemicalIdentifiers.load_db!(:custom)
</code></pre></div>
<p dir="auto"><code>ChemicalIdentifiers.load_data!</code> will generate a named tuple of file paths (stored in <code>ChemicalIdentifiers.DATA_INFO</code>), and <code>ChemicalIdentifiers.load_db!</code> will use that data to generate the corresponding Apache Arrow files and store those in a <a href="https://github.com/JuliaPackaging/Scratch.jl">scratch</a> space (<code>ChemicalIdentifiers.download_cache</code>). This download cache can be cleaned (in case a download goes wrong) with <code>ChemicalIdentifiers.clear_download_cache!()</code></p>
<p dir="auto">The raw databases are then stored in <code>ChemicalIdentifiers.DATA_DB</code>. if the data was already processed, then the arrow files are read directly, saving significant loading time.</p>
<p dir="auto">In case of adding user databases, those are searched first, so there is a possibility of collision.</p>
</article></div>