<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-mendeliht" class="anchor" aria-hidden="true" href="#mendeliht"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MendelIHT</h1>
<p dir="auto"><strong>Iterative hard thresholding -</strong> <em>a multiple regression approach to analyze data from a Genome Wide Association Studies (GWAS)</em></p>
<table>
<thead>
<tr>
<th><strong>Documentation</strong></th>
<th><strong>Build Status</strong></th>
<th><strong>Code Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://OpenMendel.github.io/MendelIHT.jl/latest" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a> <a href="https://OpenMendel.github.io/MendelIHT.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></td>
<td><a href="https://github.com/OpenMendel/MendelIHT.jl/actions"><img src="https://github.com/OpenMendel/MendelIHT.jl/workflows/CI/badge.svg" alt="build Actions Status" style="max-width: 100%;"></a> <a href="https://github.com/OpenMendel/MendelIHT.jl/actions/workflows/JuliaNightly.yml"><img src="https://github.com/openmendel/mendeliht.jl/workflows/JuliaNightly/badge.svg" alt="CI (Julia nightly)" style="max-width: 100%;"></a></td>
<td><a href="https://codecov.io/gh/OpenMendel/MendelIHT.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0f6215708cd1a666c76bf9652004e619ed0b09df1207578b31299a434132aa2d/68747470733a2f2f636f6465636f762e696f2f67682f4f70656e4d656e64656c2f4d656e64656c4948542e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d59795071694670494d31" alt="codecov" data-canonical-src="https://codecov.io/gh/OpenMendel/MendelIHT.jl/branch/master/graph/badge.svg?token=YyPqiFpIM1" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Download and install <a href="https://julialang.org/downloads/" rel="nofollow">Julia</a>. Within Julia, copy and paste the following:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Pkg
pkg&quot;add MendelIHT&quot;"><pre class="notranslate"><code>using Pkg
pkg"add MendelIHT"
</code></pre></div>
<p dir="auto">This package supports Julia <code>v1.6</code>+ for Mac, Linux, and window machines.</p>
<h2 dir="auto"><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Documentation</h2>
<ul dir="auto">
<li><a href="https://OpenMendel.github.io/MendelIHT.jl/latest/" rel="nofollow"><strong>Latest</strong></a></li>
<li><a href="https://OpenMendel.github.io/MendelIHT.jl/stable/" rel="nofollow"><strong>Stable</strong></a></li>
</ul>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick start</h2>
<p dir="auto">Sparse linear regression:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using MendelIHT, Random

# simulate data
n = 200    # sample size
p = 1000   # number of covariates
k = 10     # number of causal variables
x = randn(n, p) # simulate x
β = zeros(p) # simulate beta
β[1:k] .= randn(k)
shuffle!(β)
true_position = findall(!iszero, β)
y = x * β + randn(n) # simulate y

# run IHT
possible_k = collect(0:20)
mses = cv_iht(y, x, path=possible_k) # cross validate k = 0, 1, 2, ..., 20
result = fit_iht(y, x, k=possible_k[argmin(mses)]) # run IHT on best k
[result.beta[true_position] β[true_position]] # compare true vs estimated beta

10×2 Matrix{Float64}:
  0.41449    0.343562
 -0.248449  -0.222586
  0.0       -0.12781
 -0.89703   -0.927769
 -1.18703   -1.15052
  0.0       -0.0746511
  2.48838    2.4621
  0.0       -0.0712048
 -1.5504    -1.59528
 -1.01247   -1.05913"><pre><span class="pl-k">using</span> MendelIHT, Random

<span class="pl-c"><span class="pl-c">#</span> simulate data</span>
n <span class="pl-k">=</span> <span class="pl-c1">200</span>    <span class="pl-c"><span class="pl-c">#</span> sample size</span>
p <span class="pl-k">=</span> <span class="pl-c1">1000</span>   <span class="pl-c"><span class="pl-c">#</span> number of covariates</span>
k <span class="pl-k">=</span> <span class="pl-c1">10</span>     <span class="pl-c"><span class="pl-c">#</span> number of causal variables</span>
x <span class="pl-k">=</span> <span class="pl-c1">randn</span>(n, p) <span class="pl-c"><span class="pl-c">#</span> simulate x</span>
β <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(p) <span class="pl-c"><span class="pl-c">#</span> simulate beta</span>
β[<span class="pl-c1">1</span><span class="pl-k">:</span>k] <span class="pl-k">.=</span> <span class="pl-c1">randn</span>(k)
<span class="pl-c1">shuffle!</span>(β)
true_position <span class="pl-k">=</span> <span class="pl-c1">findall</span>(<span class="pl-k">!</span>iszero, β)
y <span class="pl-k">=</span> x <span class="pl-k">*</span> β <span class="pl-k">+</span> <span class="pl-c1">randn</span>(n) <span class="pl-c"><span class="pl-c">#</span> simulate y</span>

<span class="pl-c"><span class="pl-c">#</span> run IHT</span>
possible_k <span class="pl-k">=</span> <span class="pl-c1">collect</span>(<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">20</span>)
mses <span class="pl-k">=</span> <span class="pl-c1">cv_iht</span>(y, x, path<span class="pl-k">=</span>possible_k) <span class="pl-c"><span class="pl-c">#</span> cross validate k = 0, 1, 2, ..., 20</span>
result <span class="pl-k">=</span> <span class="pl-c1">fit_iht</span>(y, x, k<span class="pl-k">=</span>possible_k[<span class="pl-c1">argmin</span>(mses)]) <span class="pl-c"><span class="pl-c">#</span> run IHT on best k</span>
[result<span class="pl-k">.</span>beta[true_position] β[true_position]] <span class="pl-c"><span class="pl-c">#</span> compare true vs estimated beta</span>

<span class="pl-c1">10</span><span class="pl-k">×</span><span class="pl-c1">2</span> Matrix{Float64}<span class="pl-k">:</span>
  <span class="pl-c1">0.41449</span>    <span class="pl-c1">0.343562</span>
 <span class="pl-k">-</span><span class="pl-c1">0.248449</span>  <span class="pl-k">-</span><span class="pl-c1">0.222586</span>
  <span class="pl-c1">0.0</span>       <span class="pl-k">-</span><span class="pl-c1">0.12781</span>
 <span class="pl-k">-</span><span class="pl-c1">0.89703</span>   <span class="pl-k">-</span><span class="pl-c1">0.927769</span>
 <span class="pl-k">-</span><span class="pl-c1">1.18703</span>   <span class="pl-k">-</span><span class="pl-c1">1.15052</span>
  <span class="pl-c1">0.0</span>       <span class="pl-k">-</span><span class="pl-c1">0.0746511</span>
  <span class="pl-c1">2.48838</span>    <span class="pl-c1">2.4621</span>
  <span class="pl-c1">0.0</span>       <span class="pl-k">-</span><span class="pl-c1">0.0712048</span>
 <span class="pl-k">-</span><span class="pl-c1">1.5504</span>    <span class="pl-k">-</span><span class="pl-c1">1.59528</span>
 <span class="pl-k">-</span><span class="pl-c1">1.01247</span>   <span class="pl-k">-</span><span class="pl-c1">1.05913</span></pre></div>
<p dir="auto">Sparse logistic regression:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using MendelIHT, Random, GLM

# simulate data
n = 200    # sample size
p = 1000   # number of covariates
k = 10     # number of causal variables
x = randn(n, p) # simulate x
β = zeros(p) # simulate beta
β[1:k] .= randn(k)
shuffle!(β)
true_position = findall(!iszero, β)
μ = GLM.linkinv.(LogitLink(), x * β)
y = [rand(Bernoulli(μi)) for μi in μ] |&gt; Vector{Float64}

# run IHT
possible_k = collect(0:20)
mses = cv_iht(y, x, d=Bernoulli(), l=LogitLink(), path=possible_k)
result = fit_iht(y, x, k=possible_k[argmin(mses)], d=Bernoulli(), l=LogitLink())
[result.beta[true_position] β[true_position]]

10×2 Matrix{Float64}:
  0.0       0.315486
  1.27218   1.06696
  0.0       0.0819433
  0.0       0.381772
 -1.16612  -1.1422
  0.0      -0.260436
  0.0      -0.540831
 -2.23738  -2.37168
  0.0       0.43792
  1.50502   1.60719"><pre><span class="pl-k">using</span> MendelIHT, Random, GLM

<span class="pl-c"><span class="pl-c">#</span> simulate data</span>
n <span class="pl-k">=</span> <span class="pl-c1">200</span>    <span class="pl-c"><span class="pl-c">#</span> sample size</span>
p <span class="pl-k">=</span> <span class="pl-c1">1000</span>   <span class="pl-c"><span class="pl-c">#</span> number of covariates</span>
k <span class="pl-k">=</span> <span class="pl-c1">10</span>     <span class="pl-c"><span class="pl-c">#</span> number of causal variables</span>
x <span class="pl-k">=</span> <span class="pl-c1">randn</span>(n, p) <span class="pl-c"><span class="pl-c">#</span> simulate x</span>
β <span class="pl-k">=</span> <span class="pl-c1">zeros</span>(p) <span class="pl-c"><span class="pl-c">#</span> simulate beta</span>
β[<span class="pl-c1">1</span><span class="pl-k">:</span>k] <span class="pl-k">.=</span> <span class="pl-c1">randn</span>(k)
<span class="pl-c1">shuffle!</span>(β)
true_position <span class="pl-k">=</span> <span class="pl-c1">findall</span>(<span class="pl-k">!</span>iszero, β)
μ <span class="pl-k">=</span> GLM<span class="pl-k">.</span><span class="pl-c1">linkinv</span>.(<span class="pl-c1">LogitLink</span>(), x <span class="pl-k">*</span> β)
y <span class="pl-k">=</span> [<span class="pl-c1">rand</span>(<span class="pl-c1">Bernoulli</span>(μi)) <span class="pl-k">for</span> μi <span class="pl-k">in</span> μ] <span class="pl-k">|&gt;</span> Vector{Float64}

<span class="pl-c"><span class="pl-c">#</span> run IHT</span>
possible_k <span class="pl-k">=</span> <span class="pl-c1">collect</span>(<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">20</span>)
mses <span class="pl-k">=</span> <span class="pl-c1">cv_iht</span>(y, x, d<span class="pl-k">=</span><span class="pl-c1">Bernoulli</span>(), l<span class="pl-k">=</span><span class="pl-c1">LogitLink</span>(), path<span class="pl-k">=</span>possible_k)
result <span class="pl-k">=</span> <span class="pl-c1">fit_iht</span>(y, x, k<span class="pl-k">=</span>possible_k[<span class="pl-c1">argmin</span>(mses)], d<span class="pl-k">=</span><span class="pl-c1">Bernoulli</span>(), l<span class="pl-k">=</span><span class="pl-c1">LogitLink</span>())
[result<span class="pl-k">.</span>beta[true_position] β[true_position]]

<span class="pl-c1">10</span><span class="pl-k">×</span><span class="pl-c1">2</span> Matrix{Float64}<span class="pl-k">:</span>
  <span class="pl-c1">0.0</span>       <span class="pl-c1">0.315486</span>
  <span class="pl-c1">1.27218</span>   <span class="pl-c1">1.06696</span>
  <span class="pl-c1">0.0</span>       <span class="pl-c1">0.0819433</span>
  <span class="pl-c1">0.0</span>       <span class="pl-c1">0.381772</span>
 <span class="pl-k">-</span><span class="pl-c1">1.16612</span>  <span class="pl-k">-</span><span class="pl-c1">1.1422</span>
  <span class="pl-c1">0.0</span>      <span class="pl-k">-</span><span class="pl-c1">0.260436</span>
  <span class="pl-c1">0.0</span>      <span class="pl-k">-</span><span class="pl-c1">0.540831</span>
 <span class="pl-k">-</span><span class="pl-c1">2.23738</span>  <span class="pl-k">-</span><span class="pl-c1">2.37168</span>
  <span class="pl-c1">0.0</span>       <span class="pl-c1">0.43792</span>
  <span class="pl-c1">1.50502</span>   <span class="pl-c1">1.60719</span></pre></div>
<h2 dir="auto"><a id="user-content-gwas-quick-start" class="anchor" aria-hidden="true" href="#gwas-quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>GWAS Quick Start</h2>
<p dir="auto">The following uses data under the <code>data</code> directory. PLINK files are stored in <code>normal.bed</code>, <code>normal.bim</code>, <code>normal.fam</code>.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="# load package
using MendelIHT
dir = normpath(MendelIHT.datadir()) * &quot;/&quot;

# select k SNPs in PLINK file, Gaussian phenotypes
result = iht(dir * &quot;normal&quot;, 9, Normal) # run IHT with k = 9
result = iht(dir * &quot;normal&quot;, 10, Normal, covariates=dir*&quot;covariates.txt&quot;) # separately include covariates, k = 10
result = iht(dir * &quot;normal&quot;, 10, Normal, covariates=dir*&quot;covariates.txt&quot;, phenotypes=dir*&quot;phenotypes.txt&quot;) # phenotypes are stored separately

# run cross validation to determine best k
mses = cross_validate(dir * &quot;normal&quot;, Normal, path=1:20) # test k = 1, 2, ..., 20
mses = cross_validate(dir * &quot;normal&quot;, Normal, path=[1, 5, 10, 15, 20]) # test k = 1, 5, 10, 15, 20
mses = cross_validate(dir * &quot;normal&quot;, Normal, path=1:20, covariates=dir*&quot;covariates.txt&quot;) # separately include covariates
mses = cross_validate(dir * &quot;normal&quot;, Normal, path=1:20, covariates=dir*&quot;covariates.txt&quot;, phenotypes=dir*&quot;phenotypes.txt&quot;) # if phenotypes are in separate file

# Multivariate IHT for multiple quantitative phenotypes
result = iht(dir * &quot;multivariate&quot;, 10, MvNormal, phenotypes=[6, 7]) # phenotypes stored in 6th and 7th column of .fam file
result = iht(dir * &quot;multivariate&quot;, 10, MvNormal, phenotypes=dir*&quot;multivariate.phen&quot;) # phenotypes stored separate file

# other distributions for single trait analysis (no test data available)
result = iht(&quot;datafile&quot;, 10, Bernoulli) # logistic regression with k = 10
result = iht(&quot;datafile&quot;, 10, Poisson) # Poisson regression with k = 10
result = iht(&quot;datafile&quot;, 10, NegativeBinomial, est_r=:Newton) # Negative Binomial regression + nuisnace parameter estimation"><pre><span class="pl-c"><span class="pl-c">#</span> load package</span>
<span class="pl-k">using</span> MendelIHT
dir <span class="pl-k">=</span> <span class="pl-c1">normpath</span>(MendelIHT<span class="pl-k">.</span><span class="pl-c1">datadir</span>()) <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>/<span class="pl-pds">"</span></span>

<span class="pl-c"><span class="pl-c">#</span> select k SNPs in PLINK file, Gaussian phenotypes</span>
result <span class="pl-k">=</span> <span class="pl-c1">iht</span>(dir <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>normal<span class="pl-pds">"</span></span>, <span class="pl-c1">9</span>, Normal) <span class="pl-c"><span class="pl-c">#</span> run IHT with k = 9</span>
result <span class="pl-k">=</span> <span class="pl-c1">iht</span>(dir <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>normal<span class="pl-pds">"</span></span>, <span class="pl-c1">10</span>, Normal, covariates<span class="pl-k">=</span>dir<span class="pl-k">*</span><span class="pl-s"><span class="pl-pds">"</span>covariates.txt<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> separately include covariates, k = 10</span>
result <span class="pl-k">=</span> <span class="pl-c1">iht</span>(dir <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>normal<span class="pl-pds">"</span></span>, <span class="pl-c1">10</span>, Normal, covariates<span class="pl-k">=</span>dir<span class="pl-k">*</span><span class="pl-s"><span class="pl-pds">"</span>covariates.txt<span class="pl-pds">"</span></span>, phenotypes<span class="pl-k">=</span>dir<span class="pl-k">*</span><span class="pl-s"><span class="pl-pds">"</span>phenotypes.txt<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> phenotypes are stored separately</span>

<span class="pl-c"><span class="pl-c">#</span> run cross validation to determine best k</span>
mses <span class="pl-k">=</span> <span class="pl-c1">cross_validate</span>(dir <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>normal<span class="pl-pds">"</span></span>, Normal, path<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">20</span>) <span class="pl-c"><span class="pl-c">#</span> test k = 1, 2, ..., 20</span>
mses <span class="pl-k">=</span> <span class="pl-c1">cross_validate</span>(dir <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>normal<span class="pl-pds">"</span></span>, Normal, path<span class="pl-k">=</span>[<span class="pl-c1">1</span>, <span class="pl-c1">5</span>, <span class="pl-c1">10</span>, <span class="pl-c1">15</span>, <span class="pl-c1">20</span>]) <span class="pl-c"><span class="pl-c">#</span> test k = 1, 5, 10, 15, 20</span>
mses <span class="pl-k">=</span> <span class="pl-c1">cross_validate</span>(dir <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>normal<span class="pl-pds">"</span></span>, Normal, path<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">20</span>, covariates<span class="pl-k">=</span>dir<span class="pl-k">*</span><span class="pl-s"><span class="pl-pds">"</span>covariates.txt<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> separately include covariates</span>
mses <span class="pl-k">=</span> <span class="pl-c1">cross_validate</span>(dir <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>normal<span class="pl-pds">"</span></span>, Normal, path<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">20</span>, covariates<span class="pl-k">=</span>dir<span class="pl-k">*</span><span class="pl-s"><span class="pl-pds">"</span>covariates.txt<span class="pl-pds">"</span></span>, phenotypes<span class="pl-k">=</span>dir<span class="pl-k">*</span><span class="pl-s"><span class="pl-pds">"</span>phenotypes.txt<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> if phenotypes are in separate file</span>

<span class="pl-c"><span class="pl-c">#</span> Multivariate IHT for multiple quantitative phenotypes</span>
result <span class="pl-k">=</span> <span class="pl-c1">iht</span>(dir <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>multivariate<span class="pl-pds">"</span></span>, <span class="pl-c1">10</span>, MvNormal, phenotypes<span class="pl-k">=</span>[<span class="pl-c1">6</span>, <span class="pl-c1">7</span>]) <span class="pl-c"><span class="pl-c">#</span> phenotypes stored in 6th and 7th column of .fam file</span>
result <span class="pl-k">=</span> <span class="pl-c1">iht</span>(dir <span class="pl-k">*</span> <span class="pl-s"><span class="pl-pds">"</span>multivariate<span class="pl-pds">"</span></span>, <span class="pl-c1">10</span>, MvNormal, phenotypes<span class="pl-k">=</span>dir<span class="pl-k">*</span><span class="pl-s"><span class="pl-pds">"</span>multivariate.phen<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> phenotypes stored separate file</span>

<span class="pl-c"><span class="pl-c">#</span> other distributions for single trait analysis (no test data available)</span>
result <span class="pl-k">=</span> <span class="pl-c1">iht</span>(<span class="pl-s"><span class="pl-pds">"</span>datafile<span class="pl-pds">"</span></span>, <span class="pl-c1">10</span>, Bernoulli) <span class="pl-c"><span class="pl-c">#</span> logistic regression with k = 10</span>
result <span class="pl-k">=</span> <span class="pl-c1">iht</span>(<span class="pl-s"><span class="pl-pds">"</span>datafile<span class="pl-pds">"</span></span>, <span class="pl-c1">10</span>, Poisson) <span class="pl-c"><span class="pl-c">#</span> Poisson regression with k = 10</span>
result <span class="pl-k">=</span> <span class="pl-c1">iht</span>(<span class="pl-s"><span class="pl-pds">"</span>datafile<span class="pl-pds">"</span></span>, <span class="pl-c1">10</span>, NegativeBinomial, est_r<span class="pl-k">=</span><span class="pl-c1">:Newton</span>) <span class="pl-c"><span class="pl-c">#</span> Negative Binomial regression + nuisnace parameter estimation</span></pre></div>
<p dir="auto">Please see our latest <a href="https://OpenMendel.github.io/MendelIHT.jl/latest/" rel="nofollow">documentation</a> for more detail.</p>
<h2 dir="auto"><a id="user-content-citation-and-reproducibility" class="anchor" aria-hidden="true" href="#citation-and-reproducibility"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Citation and Reproducibility:</h2>
<p dir="auto"><strong>For univariate analysis, please cite:</strong></p>
<p dir="auto"><em>Chu BB, Keys KL, German CA, Zhou H, Zhou JJ, Sobel EM, Sinsheimer JS, Lange K. Iterative hard thresholding in genome-wide association studies: Generalized linear models, prior weights, and double sparsity. Gigascience. 2020 Jun 1;9(6):giaa044. doi: 10.1093/gigascience/giaa044. PMID: 32491161; PMCID: <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7268817/" rel="nofollow">PMC7268817</a>.</em></p>
<p dir="auto">In the <code>figures</code> subfolder, one can find all the code to reproduce the figures and tables in our paper.</p>
<p dir="auto"><strong>For multivariate analysis, please cite:</strong></p>
<p dir="auto"><em>Chu BB, Ko S, Zhou JJ, Jensen A, Zhou H, Sinsheimer JS, Lange K. Multivariate genome-wide association analysis by iterative hard thresholding. Bioinformatics. 2023 Apr;39(4):<a href="https://academic.oup.com/bioinformatics/article/39/4/btad193/7126408" rel="nofollow">btad193</a></em></p>
<p dir="auto">In the <code>manuscript</code> subfolder, one can find all the code to reproduce the figures and tables in our paper.</p>
<h3 dir="auto"><a id="user-content-bug-fixes-and-user-support" class="anchor" aria-hidden="true" href="#bug-fixes-and-user-support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bug fixes and user support</h3>
<p dir="auto">If you encounter a bug or need user support, please open a new issue on Github. Please provide as much detail as possible for bug reports, ideally a sequence of reproducible code that lead to the error.</p>
<p dir="auto">PRs and feature requests are welcomed!</p>
<h2 dir="auto"><a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgments</h2>
<p dir="auto">This project has been supported by the National Institutes of Health under awards R01GM053275, R01HG006139, R25GM103774, and 1R25HG011845.</p>
</article></div>