<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-spot" class="anchor" aria-hidden="true" href="#spot"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Spot</h1>
<p><a href="https://travis-ci.org/sisl/Spot.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8c55e9489b6db599dab84fefc758855b763afb2552fc8021a5d6e709a032d25d/68747470733a2f2f7472617669732d63692e6f72672f7369736c2f53706f742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/sisl/Spot.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/sisl/Spot.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/5cc7e6993531bc88c72c1f1a083262862c75beba6d336ca0bee3282cf8e06248/68747470733a2f2f636f6465636f762e696f2f67682f7369736c2f53706f742e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="CodeCov" data-canonical-src="https://codecov.io/gh/sisl/Spot.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/sisl/Spot.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/1dad3673d4ad5702254f8bb9eedef9a191b05243478f4f7694ef422725080041/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7369736c2f53706f742e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coveralls" data-canonical-src="https://coveralls.io/repos/github/sisl/Spot.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p>This package provides Julia bindings to the <a href="https://spot.lrde.epita.fr/index.html" rel="nofollow">Spot</a> library for LTL and automata manipulation. It relies on <a href="https://github.com/JuliaInterop/Cxx.jl">Cxx.jl</a> to interface julia with the Spot c++ library.</p>
<p>If you wish to use <code>PyCall</code> instead and interact with the spot python bindings you should checkout the branch <code>pycall</code> (linux only).</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>For the rendering, Spot requires <a href="https://graphviz.gitlab.io/" rel="nofollow">GraphViz</a> and <a href="https://dot2tex.readthedocs.io/en/latest/index.html" rel="nofollow">dot2tex</a> to be installed. In addition, the precompile binaries require <code>gcc</code> 7 or 8 (not needed for Mac).</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg; Pkg.add(&quot;Spot.jl&quot;)
"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>Spot.jl<span class="pl-pds">"</span></span>)</pre></div>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<h3><a id="user-content-ltl-manipulation" class="anchor" aria-hidden="true" href="#ltl-manipulation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LTL Manipulation</h3>
<p>Construct LTL formula using a non standard string literal:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="f = ltl&quot;FG a -&gt; FG b&quot;
"><pre>f <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds"><span class="pl-c1">ltl</span>"</span>FG a -&gt; FG b<span class="pl-pds">"</span></span></pre></div>
<p>The formula will be automatically parsed by Spot.</p>
<h3><a id="user-content-ltl-to-automata-translation" class="anchor" aria-hidden="true" href="#ltl-to-automata-translation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LTL to Automata Translation</h3>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Spot

ltl = &quot;FG A&quot;
translator = LTLTranslator(deterministic=true)

a = translate(translator, ltl)

"><pre><span class="pl-k">using</span> Spot

ltl <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>FG A<span class="pl-pds">"</span></span>
translator <span class="pl-k">=</span> <span class="pl-c1">LTLTranslator</span>(deterministic<span class="pl-k">=</span><span class="pl-c1">true</span>)

a <span class="pl-k">=</span> <span class="pl-c1">translate</span>(translator, ltl)
</pre></div>
<h3><a id="user-content-tutorial" class="anchor" aria-hidden="true" href="#tutorial"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Tutorial</h3>
<p>A basic tutorial is available in <a href="https://github.com/sisl/Spot.jl/blob/master/docs/spot_basic_tutorial.ipynb">docs/spot_basic_tutorial.ipynb</a></p>
<h3><a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Notes</h3>
<p>Right now, the wrapping of all the c++ functions present in <code>libspot</code> is not automatic.
Every function can be called using the Cxx interface.
If you need to wrap a function that has not been wrapped yet, feel free to submit a Pull Request.</p>
<h2><a id="user-content-acknowledgement" class="anchor" aria-hidden="true" href="#acknowledgement"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Acknowledgement</h2>
<p>Thanks to Alexandre Duretz-Lutz for all the help provided.</p>
</article></div>