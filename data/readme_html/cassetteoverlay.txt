<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-cassetteoverlayjl" class="anchor" aria-hidden="true" href="#cassetteoverlayjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CassetteOverlay.jl</h1>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using CassetteOverlay, Test

julia&gt; @MethodTable SinTable;

julia&gt; @overlay SinTable sin(x::Union{Float32,Float64}) = cos(x);

julia&gt; pass = @overlaypass SinTable;

# run with the overlayed method
julia&gt; @test pass(42) do a
           sin(a) * cos(a)
       end == cos(42)^2
Test Passed

# invalidate the overlayed method and make it return `cos∘sin`
julia&gt; @overlay SinTable sin(x::Union{Float32,Float64}) = cos(x) * @nonoverlay sin(x);

julia&gt; @test pass(42) do a
           sin(a) * cos(a)
       end == cos(42)^2 * sin(42)
Test Passed"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> CassetteOverlay, Test

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@MethodTable</span> SinTable;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@overlay</span> SinTable <span class="pl-en">sin</span>(x<span class="pl-k">::</span><span class="pl-c1">Union{Float32,Float64}</span>) <span class="pl-k">=</span> <span class="pl-c1">cos</span>(x);

julia<span class="pl-k">&gt;</span> pass <span class="pl-k">=</span> <span class="pl-c1">@overlaypass</span> SinTable;

<span class="pl-c"><span class="pl-c">#</span> run with the overlayed method</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">@test</span> <span class="pl-c1">pass</span>(<span class="pl-c1">42</span>) <span class="pl-k">do</span> a
           <span class="pl-c1">sin</span>(a) <span class="pl-k">*</span> <span class="pl-c1">cos</span>(a)
       <span class="pl-k">end</span> <span class="pl-k">==</span> <span class="pl-c1">cos</span>(<span class="pl-c1">42</span>)<span class="pl-k">^</span><span class="pl-c1">2</span>
Test Passed

<span class="pl-c"><span class="pl-c">#</span> invalidate the overlayed method and make it return `cos∘sin`</span>
julia<span class="pl-k">&gt;</span> <span class="pl-c1">@overlay</span> SinTable <span class="pl-en">sin</span>(x<span class="pl-k">::</span><span class="pl-c1">Union{Float32,Float64}</span>) <span class="pl-k">=</span> <span class="pl-c1">cos</span>(x) <span class="pl-k">*</span> <span class="pl-c1">@nonoverlay</span> <span class="pl-c1">sin</span>(x);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">@test</span> <span class="pl-c1">pass</span>(<span class="pl-c1">42</span>) <span class="pl-k">do</span> a
           <span class="pl-c1">sin</span>(a) <span class="pl-k">*</span> <span class="pl-c1">cos</span>(a)
       <span class="pl-k">end</span> <span class="pl-k">==</span> <span class="pl-c1">cos</span>(<span class="pl-c1">42</span>)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">sin</span>(<span class="pl-c1">42</span>)
Test Passed</pre></div>
</article></div>