<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a href="https://travis-ci.org/mauriciogtec/AdaptiveRejectionSampling.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7e026750865e8525ce3fb8f6cdc9eaa124e9b4d3/68747470733a2f2f7472617669732d63692e6f72672f6d6175726963696f677465632f416461707469766552656a656374696f6e53616d706c696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/mauriciogtec/AdaptiveRejectionSampling.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/mauriciogtec/AdaptiveRejectionSampling.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a99513075328c3c2203eae5947d5eb90c9fe694a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d6175726963696f677465632f416461707469766552656a656374696f6e53616d706c696e672e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/mauriciogtec/AdaptiveRejectionSampling.jl/badge.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/mauriciogtec/AdaptiveRejectionSampling.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f49db08c1e3404e7a52349e2258395df043e85ae/68747470733a2f2f636f6465636f762e696f2f67682f6d6175726963696f677465632f416461707469766552656a656374696f6e53616d706c696e672e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/mauriciogtec/AdaptiveRejectionSampling.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p><a href="https://opensource.org/licenses/mit-license.php" rel="nofollow"><img src="https://camo.githubusercontent.com/3b6539ac63635dcdd5579173803e560aadb0c094/68747470733a2f2f6261646765732e66726170736f66742e636f6d2f6f732f6d69742f6d69742e706e673f763d313033" alt="MIT Licence" data-canonical-src="https://badges.frapsoft.com/os/mit/mit.png?v=103" style="max-width:100%;"></a></p>
<h1><a id="user-content-adaptiverejectionsampling" class="anchor" aria-hidden="true" href="#adaptiverejectionsampling"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>AdaptiveRejectionSampling</h1>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> AdaptiveRejectionSampling
<span class="pl-k">using</span> Plots</pre></div>
<h2><a id="user-content-sampling-from-a-shifted-normal-distribution" class="anchor" aria-hidden="true" href="#sampling-from-a-shifted-normal-distribution"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Sampling from a shifted normal distribution</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Define function to be sampled</span>
μ, σ <span class="pl-k">=</span> <span class="pl-c1">1.0</span>, <span class="pl-c1">2.0</span>
<span class="pl-en">f</span>(x) <span class="pl-k">=</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span><span class="pl-c1">0.5</span>(x <span class="pl-k">-</span> μ)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">/</span> σ<span class="pl-k">^</span><span class="pl-c1">2</span>) <span class="pl-k">/</span> <span class="pl-c1">sqrt</span>(<span class="pl-c1">2</span>pi <span class="pl-k">*</span> σ<span class="pl-k">^</span><span class="pl-c1">2</span>) 
support <span class="pl-k">=</span> (<span class="pl-k">-</span><span class="pl-c1">Inf</span>, <span class="pl-c1">Inf</span>)

<span class="pl-c"><span class="pl-c">#</span> Build the sampler and simulate 10,000 samples</span>
sampler <span class="pl-k">=</span> <span class="pl-c1">RejectionSampler</span>(f, support, max_segments <span class="pl-k">=</span> <span class="pl-c1">5</span>)
<span class="pl-c1">@time</span> sim <span class="pl-k">=</span> <span class="pl-c1">run_sampler!</span>(sampler, <span class="pl-c1">10000</span>);</pre></div>
<pre><code>  0.010434 seconds (192.15 k allocations: 3.173 MiB)
</code></pre>
<p>Let's verify the result</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Plot the results and compare to target distribution</span>
x <span class="pl-k">=</span> <span class="pl-c1">range</span>(<span class="pl-k">-</span><span class="pl-c1">10.0</span>, <span class="pl-c1">10.0</span>, length<span class="pl-k">=</span><span class="pl-c1">100</span>)
envelop <span class="pl-k">=</span> [<span class="pl-c1">eval_envelop</span>(sampler<span class="pl-k">.</span>envelop, xi) <span class="pl-k">for</span> xi <span class="pl-k">in</span> x]
target <span class="pl-k">=</span> [<span class="pl-c1">f</span>(xi) <span class="pl-k">for</span> xi <span class="pl-k">in</span> x]

<span class="pl-c1">histogram</span>(sim, normalize <span class="pl-k">=</span> <span class="pl-c1">true</span>, label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Histogram<span class="pl-pds">"</span></span>)
<span class="pl-c1">plot!</span>(x, [target envelop], width <span class="pl-k">=</span> <span class="pl-c1">2</span>, label <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>Normal(μ, σ)<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>Envelop<span class="pl-pds">"</span></span>])</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="img/example1.png"><img src="img/example1.png" alt="" style="max-width:100%;"></a></p>
<h2><a id="user-content-lets-try-a-gamma" class="anchor" aria-hidden="true" href="#lets-try-a-gamma"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Let's try a Gamma</h2>
<div class="highlight highlight-source-julia"><pre>α, β <span class="pl-k">=</span> <span class="pl-c1">5.0</span>, <span class="pl-c1">2.0</span>
<span class="pl-en">f</span>(x) <span class="pl-k">=</span> β<span class="pl-k">^</span>α <span class="pl-k">*</span> x<span class="pl-k">^</span>(α<span class="pl-k">-</span><span class="pl-c1">1</span>) <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>β<span class="pl-k">*</span>x) <span class="pl-k">/</span> <span class="pl-c1">gamma</span>(α)
support <span class="pl-k">=</span> (<span class="pl-c1">0.0</span>, <span class="pl-c1">Inf</span>)

<span class="pl-c"><span class="pl-c">#</span> Build the sampler and simulate 10,000 samples</span>
sampler <span class="pl-k">=</span> <span class="pl-c1">RejectionSampler</span>(f, support)
<span class="pl-c1">@time</span> sim <span class="pl-k">=</span> <span class="pl-c1">run_sampler!</span>(sampler, <span class="pl-c1">10000</span>) 

<span class="pl-c"><span class="pl-c">#</span> Plot the results and compare to target distribution</span>
x <span class="pl-k">=</span> <span class="pl-c1">range</span>(<span class="pl-c1">0.0</span>, <span class="pl-c1">5.0</span>, length<span class="pl-k">=</span><span class="pl-c1">100</span>)
envelop <span class="pl-k">=</span> [<span class="pl-c1">eval_envelop</span>(sampler<span class="pl-k">.</span>envelop, xi) <span class="pl-k">for</span> xi <span class="pl-k">in</span> x]
target <span class="pl-k">=</span> [<span class="pl-c1">f</span>(xi) <span class="pl-k">for</span> xi <span class="pl-k">in</span> x]

<span class="pl-c1">histogram</span>(sim, normalize <span class="pl-k">=</span> <span class="pl-c1">true</span>, label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Histogram<span class="pl-pds">"</span></span>)
<span class="pl-c1">plot!</span>(x, [target envelop], width <span class="pl-k">=</span> <span class="pl-c1">2</span>, label <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>Gamma(α, β)<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>Envelop<span class="pl-pds">"</span></span>])</pre></div>
<pre><code>  0.007299 seconds (182.00 k allocations: 3.027 MiB)
</code></pre>
<p><a target="_blank" rel="noopener noreferrer" href="img/example2.png"><img src="img/example2.png" alt="" style="max-width:100%;"></a></p>
<h2><a id="user-content-truncated-distributions-and-unknown-normalisation-constant" class="anchor" aria-hidden="true" href="#truncated-distributions-and-unknown-normalisation-constant"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Truncated distributions and unknown normalisation constant</h2>
<p>We don't to provide an exact density--it will sample up to proportionality--and we can do truncated distributions</p>
<div class="highlight highlight-source-julia"><pre>α, β <span class="pl-k">=</span> <span class="pl-c1">5.0</span>, <span class="pl-c1">2.0</span>
<span class="pl-en">f</span>(x) <span class="pl-k">=</span> β<span class="pl-k">^</span>α <span class="pl-k">*</span> x<span class="pl-k">^</span>(α<span class="pl-k">-</span><span class="pl-c1">1</span>) <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>β<span class="pl-k">*</span>x) <span class="pl-k">/</span> <span class="pl-c1">gamma</span>(α)
support <span class="pl-k">=</span> (<span class="pl-c1">1.0</span>, <span class="pl-c1">3.5</span>)

<span class="pl-c"><span class="pl-c">#</span> Build the sampler and simulate 10,000 samples</span>
sampler <span class="pl-k">=</span> <span class="pl-c1">RejectionSampler</span>(f, support)
<span class="pl-c1">@time</span> sim <span class="pl-k">=</span> <span class="pl-c1">run_sampler!</span>(sampler, <span class="pl-c1">10000</span>) 

<span class="pl-c"><span class="pl-c">#</span> Plot the results and compare to target distribution</span>
x <span class="pl-k">=</span> <span class="pl-c1">range</span>(<span class="pl-c1">0.01</span>, <span class="pl-c1">8.0</span>, length<span class="pl-k">=</span><span class="pl-c1">100</span>)
envelop <span class="pl-k">=</span> [<span class="pl-c1">eval_envelop</span>(sampler<span class="pl-k">.</span>envelop, xi) <span class="pl-k">for</span> xi <span class="pl-k">in</span> x]
target <span class="pl-k">=</span> [<span class="pl-c1">f</span>(xi) <span class="pl-k">for</span> xi <span class="pl-k">in</span> x]

<span class="pl-c1">histogram</span>(sim, normalize <span class="pl-k">=</span> <span class="pl-c1">true</span>, label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>histogram<span class="pl-pds">"</span></span>)
<span class="pl-c1">plot!</span>(x, [target envelop], width <span class="pl-k">=</span> <span class="pl-c1">2</span>, label <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>target density<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>envelop<span class="pl-pds">"</span></span>])</pre></div>
<pre><code>  0.007766 seconds (181.82 k allocations: 3.024 MiB)
</code></pre>
<p><a target="_blank" rel="noopener noreferrer" href="img/example3.png"><img src="img/example3.png" alt="" style="max-width:100%;"></a></p>
<h2><a id="user-content-elastic-net-distribution" class="anchor" aria-hidden="true" href="#elastic-net-distribution"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Elastic Net distribution</h2>
<p>The following example arises from elastic net regression and smoothing problems. In these cases, the integration constants are not available analytically.</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Define function to be sampled</span>
<span class="pl-k">function</span> <span class="pl-en">f</span>(x, μ, λ<span class="pl-c1">1</span>, λ<span class="pl-c1">2</span>)
      δ <span class="pl-k">=</span> x <span class="pl-k">-</span> μ
      nl <span class="pl-k">=</span> λ<span class="pl-c1">1</span> <span class="pl-k">*</span> <span class="pl-c1">abs</span>(δ) <span class="pl-k">+</span> λ<span class="pl-c1">2</span> <span class="pl-k">*</span> δ<span class="pl-k">^</span><span class="pl-c1">2</span>
      <span class="pl-k">return</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span>nl)
<span class="pl-k">end</span>
support <span class="pl-k">=</span> (<span class="pl-k">-</span><span class="pl-c1">Inf</span>, <span class="pl-c1">Inf</span>)

<span class="pl-c"><span class="pl-c">#</span> Build the sampler and simulate 10,000 samples</span>
μ, λ<span class="pl-c1">1</span>, λ<span class="pl-c1">2</span> <span class="pl-k">=</span> <span class="pl-c1">0.0</span>, <span class="pl-c1">2.0</span>, <span class="pl-c1">1.0</span>
sampler <span class="pl-k">=</span> <span class="pl-c1">RejectionSampler</span>(x <span class="pl-k">-&gt;</span> <span class="pl-c1">f</span>(x, μ, λ<span class="pl-c1">1</span>, λ<span class="pl-c1">2</span>), support, max_segments <span class="pl-k">=</span> <span class="pl-c1">5</span>)
<span class="pl-c1">@time</span> sim <span class="pl-k">=</span> <span class="pl-c1">run_sampler!</span>(sampler, <span class="pl-c1">10000</span>);

<span class="pl-c"><span class="pl-c">#</span> Plot the results and compare to target distribution</span>
x <span class="pl-k">=</span> <span class="pl-c1">range</span>(<span class="pl-k">-</span><span class="pl-c1">2.3</span>, <span class="pl-c1">2.3</span>, length<span class="pl-k">=</span><span class="pl-c1">100</span>)
envelop <span class="pl-k">=</span> [<span class="pl-c1">eval_envelop</span>(sampler<span class="pl-k">.</span>envelop, xi) <span class="pl-k">for</span> xi <span class="pl-k">in</span> x]
target <span class="pl-k">=</span> [<span class="pl-c1">f</span>(xi, μ, λ<span class="pl-c1">1</span>, λ<span class="pl-c1">2</span>) <span class="pl-k">for</span> xi <span class="pl-k">in</span> x]

<span class="pl-c1">histogram</span>(sim, normalize <span class="pl-k">=</span> <span class="pl-c1">true</span>, label <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>histogram<span class="pl-pds">"</span></span>)
<span class="pl-c1">plot!</span>(x, [target envelop], width <span class="pl-k">=</span> <span class="pl-c1">2</span>, label <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>target density<span class="pl-pds">"</span></span> <span class="pl-s"><span class="pl-pds">"</span>envelop<span class="pl-pds">"</span></span>])</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="img/example4.png"><img src="img/example4.png" alt="" style="max-width:100%;"></a></p>
</article></div>