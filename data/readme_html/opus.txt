<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-opus" class="anchor" aria-hidden="true" href="#opus"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Opus</h1>
<p><a href="https://travis-ci.org/staticfloat/Opus.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4631663ab83ddbbc9ad415bcccd7f0db2217222d/68747470733a2f2f7472617669732d63692e6f72672f737461746963666c6f61742f4f7075732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/staticfloat/Opus.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>Basic bindings to <code>libopus</code> to encode/decode <a href="https://www.opus-codec.org/" rel="nofollow">Opus</a> streams.  Opus is a low-latency yet high-quality audio codec with an impressive set of features and very simple API. Note that a common surprise with Opus is that it supports a very limited set of samplerates.  Do yourself a favor and just resample any audio (with, for example, a <a href="http://dspjl.readthedocs.io/en/latest/filters.html#resample" rel="nofollow">polyphase resampler from <code>DSP.jl</code></a>) you have to 48 KHz before encoding.</p>
<p>Basic usage is to use <code>load()</code> and <code>save()</code> to read/write Opus streams to/from file paths, IO streams, etc., but the real fun to be had is in an <a href="https://github.com/JuliaLang/IJulia.jl">IJulia</a> notebook with <code>OpusArrays</code>. These thin wrapper objects contain a <code>show()</code> implementation allowing you to output raw audio as Opus to a reasonably modern browser.  To try it out, put the following in an IJulia notebook:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Opus

<span class="pl-c"><span class="pl-c">#</span> Create a seconds worth of 440Hz</span>
t <span class="pl-k">=</span> <span class="pl-c1">linspace</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">48000</span>)
audio <span class="pl-k">=</span> <span class="pl-c1">sin</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>Ï€<span class="pl-k">*</span><span class="pl-c1">440</span><span class="pl-k">*</span>t)

z <span class="pl-k">=</span> <span class="pl-c1">OpusArray</span>(audio)</pre></div>
</article></div>