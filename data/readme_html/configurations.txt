<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-configurations" class="anchor" aria-hidden="true" href="#configurations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Configurations</h1>
<p dir="auto"><a href="https://github.com/Roger-luo/Configurations.jl/actions"><img src="https://github.com/Roger-luo/Configurations.jl/workflows/CI/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="codecov-url"><img src="https://camo.githubusercontent.com/cfd1649b494a7866462147433c638234f2b432fdd15df3d46680fc9d21f7bc1a/68747470733a2f2f636f6465636f762e696f2f67682f526f6765722d6c756f2f436f6e66696775726174696f6e732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d55363034425147525631" alt="codecov" data-canonical-src="https://codecov.io/gh/Roger-luo/Configurations.jl/branch/master/graph/badge.svg?token=U604BQGRV1" style="max-width: 100%;"></a>
<a href="https://Roger-luo.github.io/Configurations.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://Roger-luo.github.io/Configurations.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaTesting/Aqua.jl"><img src="https://raw.githubusercontent.com/JuliaTesting/Aqua.jl/master/badge.svg" alt="Aqua QA" style="max-width: 100%;"></a>
<a href="https://pkgs.genieframework.com?packages=Configurations" rel="nofollow"><img src="https://camo.githubusercontent.com/925896e715282253d1443986e42cbd3b6e76133c848c27bfae6d73e79a708151/68747470733a2f2f736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f706b67732e67656e69656672616d65776f726b2e636f6d2f6170692f76312f62616467652f436f6e66696775726174696f6e73" alt="Downloads" data-canonical-src="https://shields.io/endpoint?url=https://pkgs.genieframework.com/api/v1/badge/Configurations" style="max-width: 100%;"></a></p>
<p dir="auto">Configurations &amp; Options made easy.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">
Configurations is a  
    <a href="https://julialang.org" rel="nofollow">
        <img src="https://raw.githubusercontent.com/JuliaLang/julia-logo-graphics/master/images/julia.ico" width="16em" style="max-width: 100%;">
        Julia Language
    </a>
      package. To install Configurations,
    please <a href="https://docs.julialang.org/en/v1/manual/getting-started/" rel="nofollow">open
    Julia's interactive session (known as REPL)</a> and press <kbd>]</kbd> key in the REPL to use the package mode, then type the following command
</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add Configurations"><pre>pkg<span class="pl-k">&gt;</span> add Configurations</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto"><em>There are more detailed guide in the <a href="https://Roger-luo.github.io/Configurations.jl/stable" rel="nofollow">documentation</a>.</em></p>
<p dir="auto">This package provides a macro <code>@option</code> to let you define <code>struct</code>s to represent options/configurations, and serialize between
different option/configuration file formats such as <code>TOML</code>.</p>
<p dir="auto">You can easily create hierarchical struct types:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Configurations

julia&gt; &quot;Option A&quot;
       @option &quot;option_a&quot; struct OptionA
           name::String
           int::Int = 1
       end

julia&gt; &quot;Option B&quot;
       @option &quot;option_b&quot; struct OptionB
           opt::OptionA = OptionA(;name = &quot;Sam&quot;)
           float::Float64 = 0.3
       end"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Configurations

julia<span class="pl-k">&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Option A<span class="pl-pds">"</span></span>
       <span class="pl-c1">@option</span> <span class="pl-s"><span class="pl-pds">"</span>option_a<span class="pl-pds">"</span></span> <span class="pl-k">struct</span> OptionA
           name<span class="pl-k">::</span><span class="pl-c1">String</span>
           int<span class="pl-k">::</span><span class="pl-c1">Int</span> <span class="pl-k">=</span> <span class="pl-c1">1</span>
       <span class="pl-k">end</span>

julia<span class="pl-k">&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Option B<span class="pl-pds">"</span></span>
       <span class="pl-c1">@option</span> <span class="pl-s"><span class="pl-pds">"</span>option_b<span class="pl-pds">"</span></span> <span class="pl-k">struct</span> OptionB
           opt<span class="pl-k">::</span><span class="pl-c1">OptionA</span> <span class="pl-k">=</span> <span class="pl-c1">OptionA</span>(;name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Sam<span class="pl-pds">"</span></span>)
           float<span class="pl-k">::</span><span class="pl-c1">Float64</span> <span class="pl-k">=</span> <span class="pl-c1">0.3</span>
       <span class="pl-k">end</span></pre></div>
<p dir="auto">and then convert from a <code>Dict</code> to your option type via <a href="@ref"><code>from_dict</code></a>:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; d = Dict{String, Any}(
           &quot;opt&quot; =&gt; Dict{String, Any}(
               &quot;name&quot; =&gt; &quot;Roger&quot;,
               &quot;int&quot; =&gt; 2,
           ),
           &quot;float&quot; =&gt; 0.33
       );

julia&gt; option = from_dict(OptionB, d)
OptionB(;
    opt = OptionA(;
        name = &quot;Roger&quot;,
        int = 2,
    ),
    float = 0.33,
)"><pre>julia<span class="pl-k">&gt;</span> d <span class="pl-k">=</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>(
           <span class="pl-s"><span class="pl-pds">"</span>opt<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">Dict</span><span class="pl-c1">{String, Any}</span>(
               <span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>Roger<span class="pl-pds">"</span></span>,
               <span class="pl-s"><span class="pl-pds">"</span>int<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>,
           ),
           <span class="pl-s"><span class="pl-pds">"</span>float<span class="pl-pds">"</span></span> <span class="pl-k">=&gt;</span> <span class="pl-c1">0.33</span>
       );

julia<span class="pl-k">&gt;</span> option <span class="pl-k">=</span> <span class="pl-c1">from_dict</span>(OptionB, d)
<span class="pl-c1">OptionB</span>(;
    opt <span class="pl-k">=</span> <span class="pl-c1">OptionA</span>(;
        name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Roger<span class="pl-pds">"</span></span>,
        int <span class="pl-k">=</span> <span class="pl-c1">2</span>,
    ),
    float <span class="pl-k">=</span> <span class="pl-c1">0.33</span>,
)</pre></div>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">MIT License</p>
</article></div>