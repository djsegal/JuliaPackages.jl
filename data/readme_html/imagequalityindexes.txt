<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-imagequalityindexes" class="anchor" aria-hidden="true" href="#imagequalityindexes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ImageQualityIndexes</h1>
<p><a href="https://github.com/JuliaImages/ImageQualityIndexes.jl/actions"><img src="https://github.com/JuliaImages/ImageQualityIndexes.jl/workflows/Unit%20test/badge.svg" alt="" style="max-width:100%;"></a>
<a href="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/report.html" rel="nofollow"><img src="https://camo.githubusercontent.com/97742486154af25209fee4b32637b22a50d295b0/68747470733a2f2f6a756c696163692e6769746875622e696f2f4e616e6f736f6c646965725265706f7274732f706b676576616c5f6261646765732f492f496d6167655175616c697479496e64657865732e737667" alt="" data-canonical-src="https://juliaci.github.io/NanosoldierReports/pkgeval_badges/I/ImageQualityIndexes.svg" style="max-width:100%;"></a>
<a href="https://codecov.io/github/JuliaImages/ImageQualityIndexes.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/4986d91aa65268f6470c9250577d439f40d68a5d/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c6961496d616765732f496d6167655175616c697479496e64657865732e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://codecov.io/github/JuliaImages/ImageQualityIndexes.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>ImageQualityIndexes provides the basic image quality assessment methods. Check the reasoning behind the code design <a href="https://nextjournal.com/johnnychen94/the-principles-of-imagesjl-part-i" rel="nofollow">here</a> if you're interested in.</p>
<h2><a id="user-content-supported-indexes" class="anchor" aria-hidden="true" href="#supported-indexes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Supported indexes</h2>
<h3><a id="user-content-full-reference-indexes" class="anchor" aria-hidden="true" href="#full-reference-indexes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Full reference indexes</h3>
<ul>
<li><code>PSNR</code>/<code>assess_psnr</code> -- Peak signal-to-noise ratio</li>
<li><code>SSIM</code>/<code>assess_ssim</code> -- Structural similarity</li>
</ul>
<h3><a id="user-content-no-reference-indexes" class="anchor" aria-hidden="true" href="#no-reference-indexes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>No-reference indexes</h3>
<ul>
<li><code>HASLER_AND_SUSSTRUNK_M3</code>/<code>hasler_and_susstrunk_m3</code> -- Colorfulness</li>
</ul>
<h2><a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Basic usage</h2>
<p>The root type is <code>ImageQualityIndex</code>, each concrete index is supposed to be one of <code>FullReferenceIQI</code>, <code>ReducedReferenceIQI</code> and <code>NoReferenceIQI</code>.</p>
<p>There are three ways to assess the image quality:</p>
<ul>
<li>use the general protocol, e.g., <code>assess(PSNR(), x, ref)</code>. This reads as "<strong>assess</strong> the image quality of <strong>x</strong> using method <strong>PSNR</strong> with information <strong>ref</strong>"</li>
<li>each index instance is itself a function, e.g., <code>PSNR()(x, ref)</code></li>
<li>for well-known indexes, there are also convenient name for it for benchmark purpose.</li>
</ul>
<p>For detailed usage of particular index, please check the docstring (e.g., <code>?PSNR</code>)</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Images, TestImages
<span class="pl-k">using</span> ImageQualityIndexes

img <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>lena_gray_256<span class="pl-pds">"</span></span>) <span class="pl-k">.|</span><span class="pl-k">&gt;</span> float64
noisy_img <span class="pl-k">=</span> img <span class="pl-k">.+</span> <span class="pl-c1">0.1</span> <span class="pl-k">.*</span> <span class="pl-c1">randn</span>(<span class="pl-c1">size</span>(img))
<span class="pl-c1">assess_ssim</span>(noisy_img, img) <span class="pl-c"><span class="pl-c">#</span> 0.3577</span>
<span class="pl-c1">assess_psnr</span>(noisy_img, img) <span class="pl-c"><span class="pl-c">#</span> 19.9941</span>

kernel <span class="pl-k">=</span> <span class="pl-c1">ones</span>(<span class="pl-c1">3</span>, <span class="pl-c1">3</span>)<span class="pl-k">./</span><span class="pl-c1">9</span> <span class="pl-c"><span class="pl-c">#</span> mean filter</span>
denoised_img <span class="pl-k">=</span> <span class="pl-c1">imfilter</span>(noisy_img, kernel)
<span class="pl-c1">assess_ssim</span>(denoised_img, img) <span class="pl-c"><span class="pl-c">#</span> 0.6529</span>
<span class="pl-c1">assess_psnr</span>(denoised_img, img) <span class="pl-c"><span class="pl-c">#</span> 26.0350</span>

img <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>lena_color_256<span class="pl-pds">"</span></span>);
<span class="pl-c1">colorfulness</span>(img) <span class="pl-c"><span class="pl-c">#</span> 64.1495</span>
</pre></div>

</article></div>