<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://github.com/FixedEffects/GroupedArrays.jl/actions"><img src="https://github.com/FixedEffects/GroupedArrays.jl/workflows/CI/badge.svg" alt="Build status" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">The package is registered in the <a href="https://github.com/JuliaRegistries/General"><code>General</code></a> registry and so can be installed at the REPL with</p>
<p dir="auto"><code>] add GroupedArrays</code>.</p>
<h2 dir="auto"><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Introduction</h2>
<p dir="auto">GroupedArray is an AbstractArray that contains positive integers or missing values.</p>
<ul dir="auto">
<li><code>GroupedArray(x::AbstractArray)</code> returns a <code>GroupedArray</code> of the same length as the original array, where each distinct value is encoded as a distinct integer.</li>
<li><code>GroupedArray(xs...::AbstractArray)</code> returns a <code>GroupedArray</code> where each distinct combination of values is encoded as a distinct integer</li>
<li>By default (with <code>coalesce = false</code>), <code>GroupedArray</code> encodes <code>missing</code> values as a distinct <code>missing</code> category. With <code>coalesce = true</code>, missing values are treated similarly to other values.</li>
</ul>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GroupedArrays
p = repeat([&quot;a&quot;, &quot;b&quot;, missing], outer = 2)
GroupedArray(p)
# 6-element GroupedArray{Int64, 1}:
#  1
#  2
#   missing
#  1
#  2
#   missing
p = repeat([&quot;a&quot;, &quot;b&quot;, missing], outer = 2)
GroupedArray(p; coalesce = true)
# 6-element GroupedArray{Int64, 1}:
#  1
#  2
#  3
#  1
#  2
#  3
p1 = repeat([&quot;a&quot;, &quot;b&quot;], outer = 3)
p2 = repeat([&quot;d&quot;, &quot;e&quot;], inner = 3)
GroupedArray(p1, p2)
# 6-element GroupedArray{Int64, 1}:
#  1
#  2
#  1
#  3
#  4
#  3"><pre><span class="pl-k">using</span> GroupedArrays
p <span class="pl-k">=</span> <span class="pl-c1">repeat</span>([<span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>, <span class="pl-c1">missing</span>], outer <span class="pl-k">=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">GroupedArray</span>(p)
<span class="pl-c"><span class="pl-c">#</span> 6-element GroupedArray{Int64, 1}:</span>
<span class="pl-c"><span class="pl-c">#</span>  1</span>
<span class="pl-c"><span class="pl-c">#</span>  2</span>
<span class="pl-c"><span class="pl-c">#</span>   missing</span>
<span class="pl-c"><span class="pl-c">#</span>  1</span>
<span class="pl-c"><span class="pl-c">#</span>  2</span>
<span class="pl-c"><span class="pl-c">#</span>   missing</span>
p <span class="pl-k">=</span> <span class="pl-c1">repeat</span>([<span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>, <span class="pl-c1">missing</span>], outer <span class="pl-k">=</span> <span class="pl-c1">2</span>)
<span class="pl-c1">GroupedArray</span>(p; coalesce <span class="pl-k">=</span> <span class="pl-c1">true</span>)
<span class="pl-c"><span class="pl-c">#</span> 6-element GroupedArray{Int64, 1}:</span>
<span class="pl-c"><span class="pl-c">#</span>  1</span>
<span class="pl-c"><span class="pl-c">#</span>  2</span>
<span class="pl-c"><span class="pl-c">#</span>  3</span>
<span class="pl-c"><span class="pl-c">#</span>  1</span>
<span class="pl-c"><span class="pl-c">#</span>  2</span>
<span class="pl-c"><span class="pl-c">#</span>  3</span>
p1 <span class="pl-k">=</span> <span class="pl-c1">repeat</span>([<span class="pl-s"><span class="pl-pds">"</span>a<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>b<span class="pl-pds">"</span></span>], outer <span class="pl-k">=</span> <span class="pl-c1">3</span>)
p2 <span class="pl-k">=</span> <span class="pl-c1">repeat</span>([<span class="pl-s"><span class="pl-pds">"</span>d<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>e<span class="pl-pds">"</span></span>], inner <span class="pl-k">=</span> <span class="pl-c1">3</span>)
<span class="pl-c1">GroupedArray</span>(p1, p2)
<span class="pl-c"><span class="pl-c">#</span> 6-element GroupedArray{Int64, 1}:</span>
<span class="pl-c"><span class="pl-c">#</span>  1</span>
<span class="pl-c"><span class="pl-c">#</span>  2</span>
<span class="pl-c"><span class="pl-c">#</span>  1</span>
<span class="pl-c"><span class="pl-c">#</span>  3</span>
<span class="pl-c"><span class="pl-c">#</span>  4</span>
<span class="pl-c"><span class="pl-c">#</span>  3</span></pre></div>
<h2 dir="auto"><a id="user-content-relation-to-other-packages" class="anchor" aria-hidden="true" href="#relation-to-other-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Relation to other packages</h2>
<ul dir="auto">
<li><code>GroupedArray</code> is similar to <code>PooledArray</code>, except that the pool is simply the set of integers from 1 to n where n is the number of groups(<code>missing</code> is encoded as 0). This allows for faster lookup in setups where the group value is not meaningful.</li>
<li>The algorithm to group multiple vectors is taken from <a href="https://github.com/JuliaData/DataFrames.jl">DataFrames.jl</a></li>
</ul>
</article></div>