<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p><a href="https://coveralls.io/github/lucianolorenti/StructDatabaseMapping.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ad49e4e0c789a48dafad6ad498bb22075ad168d0/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6c756369616e6f6c6f72656e74692f53747275637444617461626173654d617070696e672e6a6c2f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/lucianolorenti/StructDatabaseMapping.jl/badge.svg" style="max-width:100%;"></a>  <a href="https://lucianolorenti.github.io/StructDatabaseMapping.jl/dev/index.html" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h1>
<div class="highlight highlight-source-julia"><pre>] add StructDatabaseMapping</pre></div>
<h1><a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Compatibility</h1>
<ul>
<li><a href="https://github.com/JuliaDatabases/SQLite.jl">SQLite</a></li>
<li><a href="https://github.com/invenia/LibPQ.jl">PostgreSQL</a></li>
<li><a href="https://github.com/JuliaDatabases/Redis.jl">Redis</a></li>
<li>Possibly every relational DB that supports the DBInterface</li>
</ul>
<h1><a id="user-content-simple-example" class="anchor" aria-hidden="true" href="#simple-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Simple example</h1>
<p><a href="https://lucianolorenti.github.io/StructDatabaseMapping.jl/dev/example.html" rel="nofollow">For a better example see the docs</a></p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> StructDatabaseMapping
<span class="pl-k">using</span> Dates
<span class="pl-k">using</span> SQLite
<span class="pl-k">using</span> Test

<span class="pl-k">mutable struct</span> Author <span class="pl-k">&lt;:</span> <span class="pl-c1">Model</span>
    id<span class="pl-k">::</span><span class="pl-c1">DBId{Integer}</span>
    name<span class="pl-k">::</span><span class="pl-c1">String</span>
    age<span class="pl-k">::</span><span class="pl-c1">Integer</span>
    date<span class="pl-k">::</span><span class="pl-c1">DateTime</span>
<span class="pl-k">end</span>
<span class="pl-k">function</span> <span class="pl-en">Author</span>(;id<span class="pl-k">::</span><span class="pl-c1">Union{Integer, Nothing}</span> <span class="pl-k">=</span> <span class="pl-c1">nothing</span>,
                name<span class="pl-k">::</span><span class="pl-c1">String</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>,
                age<span class="pl-k">::</span><span class="pl-c1">Integer</span><span class="pl-k">=</span><span class="pl-c1">0</span>,
                date<span class="pl-k">::</span><span class="pl-c1">DateTime</span><span class="pl-k">=</span><span class="pl-c1">now</span>())
    <span class="pl-k">return</span> <span class="pl-c1">Author</span>(id, name, age, date)
<span class="pl-k">end</span>
<span class="pl-k">mutable struct</span> Book <span class="pl-k">&lt;:</span> <span class="pl-c1">Model</span>
    id<span class="pl-k">::</span><span class="pl-c1">DBId{String}</span>
    author<span class="pl-k">::</span><span class="pl-c1">ForeignKey{Author}</span>
    data<span class="pl-k">::</span><span class="pl-c1">Dict{String, Integer}</span>
<span class="pl-k">end</span>
<span class="pl-k">function</span> <span class="pl-en">Book</span>(;id<span class="pl-k">::</span><span class="pl-c1">Union{String, Nothing}</span><span class="pl-k">=</span><span class="pl-c1">nothing</span>,
               author<span class="pl-k">::</span><span class="pl-c1">Foreign{Author}</span><span class="pl-k">=</span><span class="pl-c1">Author</span>(),
               data<span class="pl-k">::</span><span class="pl-c1">Dict{String, Integer}</span><span class="pl-k">=</span><span class="pl-c1">Dict</span>())
    <span class="pl-k">return</span> <span class="pl-c1">Book</span>(id, author, data)
<span class="pl-k">end</span>

DB_FILE <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>test_db<span class="pl-pds">"</span></span>
<span class="pl-k">using</span> SQLite
creator <span class="pl-k">=</span> ()<span class="pl-k">-&gt;</span>SQLite<span class="pl-k">.</span><span class="pl-c1">DB</span>(DB_FILE)
mapper <span class="pl-k">=</span> <span class="pl-c1">DBMapper</span>(creator)

<span class="pl-c1">register!</span>(mapper, Author)
<span class="pl-c1">register!</span>(mapper, Book)

<span class="pl-c1">configure_relation</span>(mapper, Book, <span class="pl-c1">:author</span>, on_delete<span class="pl-k">=</span><span class="pl-c1">Cascade</span>())
<span class="pl-c1">create_table</span>(mapper, Author)
<span class="pl-c1">create_table</span>(mapper, Book)
author <span class="pl-k">=</span> <span class="pl-c1">Author</span>(name<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>pirulo<span class="pl-pds">"</span></span>, age<span class="pl-k">=</span><span class="pl-c1">50</span>)
<span class="pl-c1">insert!</span>(mapper, author)</pre></div>
</article></div>