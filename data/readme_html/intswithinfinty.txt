<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2><a id="user-content-intswithinfinityjl" class="anchor" aria-hidden="true" href="#intswithinfinityjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>IntsWithInfinity.jl</h2>
<h4><a id="user-content-machine-integers-augmented-with-positive-and-negative-infinities" class="anchor" aria-hidden="true" href="#machine-integers-augmented-with-positive-and-negative-infinities"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Machine Integers augmented with positive and negative Infinities</h4>
<pre><code>         least magnitudes             |      greatest magnitudes
:-------------------------------------|:--------------------------------------
 typemin( InfInt16 ) == -Infinity16     | typemax( InfInt16 ) == +Infinity16  
 &amp;nbsp;intmin( InfInt16 )&amp;nbsp; == typemin(Int16)  | &amp;nbsp;intmax( InfInt16 )&amp;nbsp; == typemax(Int16)  
</code></pre>
<div class="highlight highlight-source-forth"><pre>PosInf + PosInf == PosInf - NegInf ==  PosInf
PosInf - PosInf == PosInf + NegInf ==  Unbound
PosInf + NegInf == PosInf - PosInf ==  Unbound
PosInf - NegInf == PosInf + PosInf ==  PosInf

NegInf + PosInf == NegInf - NegInf ==  Unbound
NegInf - PosInf == NegInf + NegInf ==  NegInf
NegInf + NegInf == NegInf - PosInf ==  NegInf
NegInf - NegInf == NegInf + PosInf ==  Unbound

PosInf * PosInf == PosInf / NegInf ==  PosInf
PosInf / PosInf == PosInf * NegInf ==  Unbound
PosInf * NegInf == PosInf / PosInf ==  Unbound
PosInf / NegInf == PosInf * PosInf ==  PosInf

NegInf * PosInf == NegInf / NegInf ==  Unbound
NegInf / PosInf == NegInf * NegInf ==  NegInf
NegInf * NegInf == NegInf / PosInf ==  NegInf
NegInf / NegInf == NegInf * PosInf ==  Unbound

PosInf + Int    == PosInf - Int    == Int + PosInf    ==  PosInf
NegInf + Int    == NegInf - Int    == Int - PosInf    ==  NegInf
PosInf * Int    == PosInf / Int    == Int * PosInf    ==  PosInf
NegInf * Int    == NegInf / Int    == Int * NegInf    ==  NegInf

Int / PosInf    == Int / NegInf    == Zero * Zero     ==  Zero
Zero * PosInf   == Zero * NegInf   == Zero / Zero     ==  Zero

op(x, Unbound)  == op(Unboud, x)   == Unbound</pre></div>
<div class="highlight highlight-source-julia"><pre>immutable InfInt32{I}
    val<span class="pl-k">::</span><span class="pl-c1">Int32</span>
<span class="pl-k">end</span>

typealias Zero32    InfInt32{ <span class="pl-c1">0</span>}
typealias NonZero32 InfInt32{ <span class="pl-c1">1</span>}
typealias PosInf32  InfInt32{<span class="pl-k">+</span><span class="pl-c1">2</span>}
typealias NegInf32  InfInt32{<span class="pl-k">-</span><span class="pl-c1">2</span>}
typealias Unbound32 InfInt32{ <span class="pl-c1">3</span>}
</pre></div>
</article></div>