<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-zchop" class="anchor" aria-hidden="true" href="#zchop"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ZChop</h1>
<p><em>Replace small numbers with zero</em></p>
<p>Linux, OSX: <a href="https://travis-ci.org/jlapeyre/ZChop.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b1f5f7e49f4935bd7fb8f4f1293333adc8bf6797/68747470733a2f2f7472617669732d63692e6f72672f6a6c6170657972652f5a43686f702e6a6c2e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/jlapeyre/ZChop.jl.svg" style="max-width:100%;"></a>
 
Windows: <a href="https://ci.appveyor.com/project/jlapeyre/zchop-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b8d4ff15a5e2cece696e610111aa504ce355d2fa/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f6a6c6170657972652f5a43686f702e6a6c3f6272616e63683d6d6173746572267376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/jlapeyre/ZChop.jl?branch=master&amp;svg=true" style="max-width:100%;"></a>
     
<a href="https://coveralls.io/github/jlapeyre/ZChop.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/55270842f8a5cdacbc497081481b1d77d96426b1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a6c6170657972652f5a43686f702e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/jlapeyre/ZChop.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/jlapeyre/ZChop.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/db3398b94c50d2f5b419f8bcc05bc90ce9c26a63/687474703a2f2f636f6465636f762e696f2f6769746875622f6a6c6170657972652f5a43686f702e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/jlapeyre/ZChop.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p><code>zchop(x)</code> replaces numbers in <code>x</code> that are close to zero with zero.</p>
<p><code>zchop(x)</code> returns 0 if abs(x) is smaller than 1e-14, and x otherwise.</p>
<p><code>zchop(x,eps)</code> uses eps rather than 1e-14</p>
<p><code>zchop!(a,eps)</code> works inplace on Array a.</p>
<p>The following examples use out-of-date syntax. See
this <a href="https://github.com/jlapeyre/ZChop.jl/blob/master/Notebooks/ZChop.ipynb">Jupyter notebook</a>
for up-to-date examples.</p>
<p>Examples:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> res <span class="pl-k">=</span> <span class="pl-c1">ifft</span>(<span class="pl-c1">fft</span>([<span class="pl-c1">2</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]))
<span class="pl-c1">7</span><span class="pl-k">-</span>element Array{Complex{Float64},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
          <span class="pl-c1">2.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
          <span class="pl-c1">1.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
          <span class="pl-c1">1.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
   <span class="pl-c1">7.8904e-17</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
  <span class="pl-c1">4.79786e-17</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
 <span class="pl-k">-</span><span class="pl-c1">1.26883e-16</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
 <span class="pl-k">-</span><span class="pl-c1">6.34413e-17</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">zchop</span>(res)
<span class="pl-c1">7</span><span class="pl-k">-</span>element Array{Complex{Float64},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-c1">2.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
 <span class="pl-c1">1.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
 <span class="pl-c1">1.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
 <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
 <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
 <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
 <span class="pl-c1">0.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span></pre></div>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> res <span class="pl-k">=</span> <span class="pl-c1">exp</span>(<span class="pl-c1">linspace</span>(<span class="pl-c1">1</span>,<span class="pl-c1">4</span>,<span class="pl-c1">4</span>) <span class="pl-k">*</span> pi <span class="pl-k">*</span> im)
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{Complex{Float64},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">1.0</span><span class="pl-k">+</span><span class="pl-c1">1.22465e-16im</span>
  <span class="pl-c1">1.0</span><span class="pl-k">-</span><span class="pl-c1">2.44929e-16im</span>
 <span class="pl-k">-</span><span class="pl-c1">1.0</span><span class="pl-k">+</span><span class="pl-c1">3.67394e-16im</span>
  <span class="pl-c1">1.0</span><span class="pl-k">-</span><span class="pl-c1">4.89859e-16im</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">zchop</span>(res)
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{Complex{Float64},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">1.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
  <span class="pl-c1">1.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
 <span class="pl-k">-</span><span class="pl-c1">1.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span>
  <span class="pl-c1">1.0</span><span class="pl-k">+</span><span class="pl-c1">0.0im</span></pre></div>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> <span class="pl-c1">sparse</span>([ [<span class="pl-c1">1.0</span>,<span class="pl-c1">1e-16</span>]  [<span class="pl-c1">1e-16</span>, <span class="pl-c1">1.0</span>]])
<span class="pl-c1">2</span>x2 sparse matrix with <span class="pl-c1">4</span> Float64 entries<span class="pl-k">:</span>
        [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]  <span class="pl-k">=</span>  <span class="pl-c1">1.0</span>
        [<span class="pl-c1">2</span>, <span class="pl-c1">1</span>]  <span class="pl-k">=</span>  <span class="pl-c1">1.0e-16</span>
        [<span class="pl-c1">1</span>, <span class="pl-c1">2</span>]  <span class="pl-k">=</span>  <span class="pl-c1">1.0e-16</span>
        [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>]  <span class="pl-k">=</span>  <span class="pl-c1">1.0</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">zchop</span>(a)
<span class="pl-c1">2</span>x2 sparse matrix with <span class="pl-c1">2</span> Float64 entries<span class="pl-k">:</span>
        [<span class="pl-c1">1</span>, <span class="pl-c1">1</span>]  <span class="pl-k">=</span>  <span class="pl-c1">1.0</span>
        [<span class="pl-c1">2</span>, <span class="pl-c1">2</span>]  <span class="pl-k">=</span>  <span class="pl-c1">1.0</span></pre></div>
<h3><a id="user-content-details" class="anchor" aria-hidden="true" href="#details"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Details</h3>
<p>The type of the numbers is preserved.  For instance, complex numbers
with imaginary part near zero are not replaced with real numbers.</p>
<p>zchop works on complex and rational numbers, arrays, and some other structures.
The idea is for zchop to descend into structures, chopping numbers, and acting as the
the identity on anything that can't be sensibly compared to eps.</p>
<h3><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> a <span class="pl-k">=</span> Any[ [<span class="pl-c1">1e-15</span>, <span class="pl-s"><span class="pl-pds">"</span>dog<span class="pl-pds">"</span></span>, (<span class="pl-c1">BigFloat</span>(<span class="pl-c1">10.0</span>))<span class="pl-k">^-</span><span class="pl-c1">15</span>, <span class="pl-c1">complex</span>(<span class="pl-c1">1e-15</span>,<span class="pl-c1">1</span>), <span class="pl-c1">1</span> <span class="pl-k">//</span> <span class="pl-c1">10</span><span class="pl-k">^</span><span class="pl-c1">15</span>],
         [[<span class="pl-c1">2</span>,<span class="pl-c1">3</span>] [<span class="pl-c1">4</span>,<span class="pl-c1">1e-15</span>]] ];

julia<span class="pl-k">&gt;</span> <span class="pl-c1">zchop</span>(a)
<span class="pl-c1">2</span><span class="pl-k">-</span>element Array{Any,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 {<span class="pl-c1">0.0</span>,<span class="pl-s"><span class="pl-pds">"</span>dog<span class="pl-pds">"</span></span>,<span class="pl-c1">0e+00</span> with <span class="pl-c1">256</span> bits of precision,<span class="pl-c1">0.0</span> <span class="pl-k">+</span> <span class="pl-c1">1.0im</span>,<span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>}
 <span class="pl-c1">2</span>x2 Array{Float64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">2.0</span>  <span class="pl-c1">4.0</span>
 <span class="pl-c1">3.0</span>  <span class="pl-c1">0.0</span></pre></div>
</article></div>