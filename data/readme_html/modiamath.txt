<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-modiamath" class="anchor" aria-hidden="true" href="#modiamath"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ModiaMath</h1>
<p><a href="https://travis-ci.org/ModiaSim/ModiaMath.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/7538498b969df264de6931b1249a7a861028b2a8/68747470733a2f2f7472617669732d63692e6f72672f4d6f64696153696d2f4d6f6469614d6174682e6a6c2e7376673f6272616e63683d6d6173746572" alt="Travis" data-canonical-src="https://travis-ci.org/ModiaSim/ModiaMath.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/MartinOtter/modiamath-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/88922622680935ee97bada9b319a34b4c679bf9c/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f4d6f64696153696d2f4d6f6469614d6174682e6a6c3f7376673d74727565" alt="AppVoyer" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/ModiaSim/ModiaMath.jl?svg=true" style="max-width:100%;"></a>
<a href="http://codecov.io/github/ModiaSim/ModiaMath.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/a3105a4ac0bf7ac3e177d723171fa767dd651437/687474703a2f2f636f6465636f762e696f2f6769746875622f4d6f64696153696d2f4d6f6469614d6174682e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/ModiaSim/ModiaMath.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://modiasim.github.io/ModiaMath.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://modiasim.github.io/ModiaMath.jl/latest/" rel="nofollow"><img src="https://camo.githubusercontent.com/57bae07ecd50a99519ad0516d91f4ec8f0f48e12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="Latest" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/ModiaSim/ModiaMath.jl/blob/master/LICENSE.md"><img src="https://camo.githubusercontent.com/f8dc8b0dba0c01c69878a1b06bf2167d2bf9a5dd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="The MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square" style="max-width:100%;"></a></p>
<p>ModiaMath provides a simulation engine and other mathematical utilities for packages
<a href="https://github.com/ModiaSim/Modia.jl">Modia</a> and <a href="https://github.com/ModiaSim/Modia3D.jl">Modia3D</a>
that are used to model physical systems such as electrical circuits, robots, or vehicles.
The recommended way is to use ModiaMath via Modia or Modia3D.
However, ModiaMath is self-contained and can be also used without Modia/Modia3D.</p>
<p>The central part of ModiaMath is a simulation engine to solve
<em>implicit index one Differential Algebraic Equations (DAEs)</em>
with and without <em>time and state events</em>. The theory is partially described in
<a href="http://www.ep.liu.se/ecp/132/064/ecp17132565.pdf" rel="nofollow">(Otter/Elmqvist, 2017)</a>.
In particular it is shown, that a large class of DAEs can be transformed <em>automatically</em> to this
form (including multibody systems with kinematic loops). As integrator currently
IDA of the <a href="https://computation.llnl.gov/projects/sundials" rel="nofollow">Sundials integrator suite</a>
is used (via the Julia <a href="https://github.com/JuliaDiffEq/Sundials.jl">Sundials interface package</a>).
It is planned to adapt ModiaMath to Julia package
<a href="https://github.com/JuliaDiffEq/DifferentialEquations.jl">DifferentialEquations</a>
and use IDA and other appropriate integrators via this package in the future.</p>
<p>Additionally, ModiaMath provides functions to perform
<a href="https://modiasim.github.io/ModiaMath.jl/latest/lib/Result.html" rel="nofollow">plotting in a convenient way</a>,
to generate and use
<a href="https://modiasim.github.io/ModiaMath.jl/latest/lib/Frames.html" rel="nofollow">rotation matrices and quaternions</a> for kinematic transformations in 3D, and to provide an infrastructure for DAE variables as needed by Modia3D.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p>The package is registered in METADATA.jl and can be installed
in the following way (Julia &gt;= 1.0 is required):</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> ]add ModiaMath</pre></div>
<p>ModiaMath uses <a href="https://github.com/JuliaPy/PyPlot.jl">PyPlot</a> for plotting.
If <code>PyPlot</code> is not available in your current Julia environment
an information message is printed and all <code>ModiaMath.plot(..)</code> calls are ignored.
In order that plot windows are displayed, you need to add <code>PyPlot</code> to your current environment
via <code>]add PyPlot</code>. Often this automatic installation fails and it is recommended to follow
instead the instructions
<a href="https://github.com/ModiaSim/ModiaMath.jl/wiki/Installing-PyPlot-in-a-robust-way">Installing PyPlot in a robust way</a>.</p>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<ul>
<li><a href="https://modiasim.github.io/ModiaMath.jl/stable/" rel="nofollow"><strong>STABLE</strong></a> — <em>documentation of the last released version.</em></li>
<li><a href="https://modiasim.github.io/ModiaMath.jl/latest/" rel="nofollow"><strong>LATEST</strong></a> — <em>in-development version of the documentation.</em></li>
</ul>
<h2><a id="user-content-use" class="anchor" aria-hidden="true" href="#use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Use</h2>
<h3><a id="user-content-to-define-a-model" class="anchor" aria-hidden="true" href="#to-define-a-model"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>To define a model</h3>
<p>(note, it is simpler and less error prone to define a model with Modia or Modia3D):</p>
<div class="highlight highlight-source-julia"><pre>  <span class="pl-k">using</span> ModiaMath
  <span class="pl-k">using</span> StaticArrays

  <span class="pl-c1">@component</span> <span class="pl-c1">Pendulum</span>(;L<span class="pl-k">=</span><span class="pl-c1">1.0</span>, m<span class="pl-k">=</span><span class="pl-c1">1.0</span>, d<span class="pl-k">=</span><span class="pl-c1">0.1</span>, g<span class="pl-k">=</span><span class="pl-c1">9.81</span>) <span class="pl-k">begin</span>
     phi <span class="pl-k">=</span> <span class="pl-c1">RealScalar</span>(start<span class="pl-k">=</span>pi<span class="pl-k">/</span><span class="pl-c1">2</span>, unit<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>rad<span class="pl-pds">"</span></span>    , fixed<span class="pl-k">=</span><span class="pl-c1">true</span>,               numericType<span class="pl-k">=</span>ModiaMath<span class="pl-k">.</span>XD_EXP)
     w   <span class="pl-k">=</span> <span class="pl-c1">RealScalar</span>(start<span class="pl-k">=</span><span class="pl-c1">0.0</span> , unit<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>rad/s<span class="pl-pds">"</span></span>  , fixed<span class="pl-k">=</span><span class="pl-c1">true</span>, integral<span class="pl-k">=</span>phi, numericType<span class="pl-k">=</span>ModiaMath<span class="pl-k">.</span>XD_EXP)
     a   <span class="pl-k">=</span> <span class="pl-c1">RealScalar</span>(            unit<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>rad/s^2<span class="pl-pds">"</span></span>,             integral<span class="pl-k">=</span>w  , numericType<span class="pl-k">=</span>ModiaMath<span class="pl-k">.</span>DER_XD_EXP)
     r   <span class="pl-k">=</span> <span class="pl-c1">RealSVector</span><span class="pl-c1">{2}</span>(        unit<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>m<span class="pl-pds">"</span></span>      ,                           numericType<span class="pl-k">=</span>ModiaMath<span class="pl-k">.</span>WC)
  <span class="pl-k">end</span>;

  <span class="pl-k">function</span> ModiaMath<span class="pl-k">.</span><span class="pl-en">computeVariables!</span>(p<span class="pl-k">::</span><span class="pl-c1">Pendulum</span>, sim<span class="pl-k">::</span><span class="pl-c1">ModiaMath.SimulationState</span>)
     L <span class="pl-k">=</span> p<span class="pl-k">.</span>L; m <span class="pl-k">=</span> p<span class="pl-k">.</span>m; d <span class="pl-k">=</span> p<span class="pl-k">.</span>d; g <span class="pl-k">=</span> p<span class="pl-k">.</span>g; phi <span class="pl-k">=</span> p<span class="pl-k">.</span>phi<span class="pl-k">.</span>value; w <span class="pl-k">=</span> p<span class="pl-k">.</span>w<span class="pl-k">.</span>value

     p<span class="pl-k">.</span>a<span class="pl-k">.</span>value <span class="pl-k">=</span> (<span class="pl-k">-</span>m<span class="pl-k">*</span>g<span class="pl-k">*</span>L<span class="pl-k">*</span><span class="pl-c1">sin</span>(phi) <span class="pl-k">-</span> d<span class="pl-k">*</span>w) <span class="pl-k">/</span> (m<span class="pl-k">*</span>L<span class="pl-k">^</span><span class="pl-c1">2</span>)

     <span class="pl-k">if</span> ModiaMath<span class="pl-k">.</span><span class="pl-c1">isStoreResult</span>(sim)
        p<span class="pl-k">.</span>r<span class="pl-k">.</span>value <span class="pl-k">=</span> <span class="pl-c1">@SVector</span> [L<span class="pl-k">*</span><span class="pl-c1">sin</span>(phi), <span class="pl-k">-</span>L<span class="pl-k">*</span><span class="pl-c1">cos</span>(phi)]
     <span class="pl-k">end</span>
  <span class="pl-k">end</span>;

  simulationModel <span class="pl-k">=</span> ModiaMath<span class="pl-k">.</span><span class="pl-c1">SimulationModel</span>(<span class="pl-c1">Pendulum</span>(L<span class="pl-k">=</span><span class="pl-c1">0.8</span>, m<span class="pl-k">=</span><span class="pl-c1">0.5</span>, d<span class="pl-k">=</span><span class="pl-c1">0.2</span>), stopTime<span class="pl-k">=</span><span class="pl-c1">5.0</span>);
</pre></div>
<h3><a id="user-content-to-simulate-a-model-and-plot-results" class="anchor" aria-hidden="true" href="#to-simulate-a-model-and-plot-results"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>To simulate a model and plot results:</h3>
<div class="highlight highlight-source-julia"><pre>  result <span class="pl-k">=</span> ModiaMath<span class="pl-k">.</span><span class="pl-c1">simulate!</span>(simulationModel; log<span class="pl-k">=</span><span class="pl-c1">true</span>);
  ModiaMath<span class="pl-k">.</span><span class="pl-c1">plot</span>(result, [(<span class="pl-c1">:phi</span>, <span class="pl-c1">:w</span>) <span class="pl-c1">:a</span>])</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8a26b73033658355c0c35bf4f4502dca271701ff/68747470733a2f2f4d6f64696153696d2e6769746875622e696f2f4d6f6469614d6174682e6a6c2f7265736f75726365732f696d616765732f70656e64756c756d506c6f742e737667"><img src="https://camo.githubusercontent.com/8a26b73033658355c0c35bf4f4502dca271701ff/68747470733a2f2f4d6f64696153696d2e6769746875622e696f2f4d6f6469614d6174682e6a6c2f7265736f75726365732f696d616765732f70656e64756c756d506c6f742e737667" alt="PendulumPlot" data-canonical-src="https://ModiaSim.github.io/ModiaMath.jl/resources/images/pendulumPlot.svg" style="max-width:100%;"></a></p>
<h3><a id="user-content-to-run-examples-and-tests" class="anchor" aria-hidden="true" href="#to-run-examples-and-tests"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>To run examples and tests</h3>
<div class="highlight highlight-source-julia"><pre>  <span class="pl-c"><span class="pl-c">#</span> run examples</span>
  <span class="pl-k">import</span> ModiaMath
  <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(ModiaMath<span class="pl-k">.</span>path)</span>/examples/Simulate_Pendulum.jl<span class="pl-pds">"</span></span>)         <span class="pl-c"><span class="pl-c">#</span> ODE as index-0 DAE</span>
  <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(ModiaMath<span class="pl-k">.</span>path)</span>/examples/Simulate_FreeBodyRotation.jl<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> index-1 DAE</span>
  <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(ModiaMath<span class="pl-k">.</span>path)</span>/examples/withoutMacros_withoutVariables/Simulate_PendulumDAE.jl<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> index-3 DAE</span>
  <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(ModiaMath<span class="pl-k">.</span>path)</span>/examples/withoutMacros_withoutVariables/Simulate_SimpleStateEvents.jl<span class="pl-pds">"</span></span>)
  <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(ModiaMath<span class="pl-k">.</span>path)</span>/examples/withoutMacros_withoutVariables/Simulate_BouncingBall.jl<span class="pl-pds">"</span></span>)
  <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(ModiaMath<span class="pl-k">.</span>path)</span>/examples/withoutMacros_withoutVariables/Simulate_IdealClutch.jl<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> Dirac impulses</span>

  <span class="pl-c"><span class="pl-c">#</span> run all tests</span>
  <span class="pl-c1">include</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$(ModiaMath<span class="pl-k">.</span>path)</span>/test/runtests.jl<span class="pl-pds">"</span></span>)
</pre></div>
<h2><a id="user-content-status" class="anchor" aria-hidden="true" href="#status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Status</h2>
<p>The ModiaMath version number is 0.5.2, for details see the
<a href="https://modiasim.github.io/ModiaMath.jl/latest/#Release-Notes-1" rel="nofollow">release notes</a>,
and functionality and robustness is planned to be improved for the 1.0 version,
see <a href="https://ModiaSim.github.io/ModiaMath.jl/latest/man/Plans.html" rel="nofollow">Plans for ModiaMath version 1.0</a>.</p>
<h2><a id="user-content-issues-and-contributions" class="anchor" aria-hidden="true" href="#issues-and-contributions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Issues and Contributions</h2>
<p>Contributions are welcome, as are feature requests and suggestions.
Please open an <a href="https://github.com/ModiaSim/ModiaMath.jl/issues">issue</a> in this case and also if you encounter problems.</p>
<h2><a id="user-content-main-developer" class="anchor" aria-hidden="true" href="#main-developer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Main Developer</h2>
<p><a href="https://rmc.dlr.de/sr/en/staff/martin.otter/" rel="nofollow">Martin Otter</a>,
<a href="https://www.dlr.de/sr/en" rel="nofollow">DLR - Institute of System Dynamics and Control</a></p>
<p>License: MIT (expat)</p>
</article></div>