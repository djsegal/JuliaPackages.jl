<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-crrao" class="anchor" aria-hidden="true" href="#crrao"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CRRao</h1>
<p dir="auto"><a href="https://xKDR.github.io/CRRao.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://xKDR.github.io/CRRao.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/xKDR/CRRao.jl/actions/workflows/ci.yml/badge.svg"><img src="https://github.com/xKDR/CRRao.jl/actions/workflows/ci.yml/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/xKDR/CRRao.jl/actions/workflows/documentation.yml/badge.svg"><img src="https://github.com/xKDR/CRRao.jl/actions/workflows/documentation.yml/badge.svg" alt="Build Status" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/xKDR/CRRao.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/371483f3912a23dc7605ca3eed1cea16634129288a9d95462bc14397152557fb/68747470733a2f2f636f6465636f762e696f2f67682f784b44522f435252616f2e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/xKDR/CRRao.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://github.com/xKDR/CRRao.jl/milestones"><img src="https://camo.githubusercontent.com/29f3e4f7b81697eb19a3133f1b5e495d9ada7b2a437b21c5b1cc71798450b974/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d6d696c6573746f6e65732d627269676874677265656e" alt="Milestones" data-canonical-src="https://img.shields.io/badge/-milestones-brightgreen" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-to-install" class="anchor" aria-hidden="true" href="#to-install"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>To install:</h2>
<h3 dir="auto"><a id="user-content-for-version-010-stable" class="anchor" aria-hidden="true" href="#for-version-010-stable"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>For version 0.1.0 (stable)</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg; Pkg.add(&quot;CRRao&quot;)"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>CRRao<span class="pl-pds">"</span></span>)</pre></div>
<h3 dir="auto"><a id="user-content-for-version-011-under-development" class="anchor" aria-hidden="true" href="#for-version-011-under-development"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>For version 0.1.1 (under development)</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg; Pkg.add(url = &quot;https://github.com/xKDR/CRRao.jl.git&quot;)"><pre><span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(url <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>https://github.com/xKDR/CRRao.jl.git<span class="pl-pds">"</span></span>)</pre></div>
<h1 dir="auto"><a id="user-content-crrao-a-single-api-for-diverse-statistical-models" class="anchor" aria-hidden="true" href="#crrao-a-single-api-for-diverse-statistical-models"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CRRao: A single API for diverse statistical models</h1>
<p dir="auto">Many statistical models can be estimated in Julia, and the diversity of the model ecosystem is steadily improving. Drawing inspiration from the <a href="http://docs.zeligproject.org/index.html" rel="nofollow">Zelig</a> package in the R world, the CRRao package gives a simple and consistent API to the end user. The end-user then faces the fixed cost of getting a hang of this, once, and after that a wide array of models and associated capabilities become available with a consistent syntax. We hope others developing statistical models will build within this framework.</p>
<p dir="auto">Here's an example of estimating the linear regression</p>
<p dir="auto">MPG = β0 + β1 HP + β2 WT + β3 Gear + ϵ</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="
   using CRRao, RDatasets, StatsModels
   df = dataset(&quot;datasets&quot;, &quot;mtcars&quot;)
   model = fit(@formula(MPG ~ HP + WT+Gear), df, LinearRegression())
   coeftable(model)

   ────────────────────────────────────────────────────────────────────────────
                     Coef.  Std. Error      t  Pr(&gt;|t|)   Lower 95%   Upper 95%
   ────────────────────────────────────────────────────────────────────────────
   (Intercept)  32.0137     4.63226      6.91    &lt;1e-06  22.5249     41.5024
   HP           -0.0367861  0.00989146  -3.72    0.0009  -0.0570478  -0.0165243
   WT           -3.19781    0.846546    -3.78    0.0008  -4.93188    -1.46374
   Gear          1.01998    0.851408     1.20    0.2410  -0.72405     2.76401
   ────────────────────────────────────────────────────────────────────────────
"><pre>   <span class="pl-k">using</span> CRRao, RDatasets, StatsModels
   df <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>datasets<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>mtcars<span class="pl-pds">"</span></span>)
   model <span class="pl-k">=</span> <span class="pl-c1">fit</span>(<span class="pl-c1">@formula</span>(MPG <span class="pl-k">~</span> HP <span class="pl-k">+</span> WT<span class="pl-k">+</span>Gear), df, <span class="pl-c1">LinearRegression</span>())
   <span class="pl-c1">coeftable</span>(model)

   ────────────────────────────────────────────────────────────────────────────
                     Coef.  Std. Error      t  <span class="pl-c1">Pr</span>(<span class="pl-k">&gt;</span><span class="pl-k">|</span>t<span class="pl-k">|</span>)   Lower <span class="pl-c1">95</span><span class="pl-k">%</span>   Upper <span class="pl-c1">95</span><span class="pl-k">%</span>
   ────────────────────────────────────────────────────────────────────────────
   (Intercept)  <span class="pl-c1">32.0137</span>     <span class="pl-c1">4.63226</span>      <span class="pl-c1">6.91</span>    <span class="pl-k">&lt;</span><span class="pl-c1">1e-06</span>  <span class="pl-c1">22.5249</span>     <span class="pl-c1">41.5024</span>
   HP           <span class="pl-k">-</span><span class="pl-c1">0.0367861</span>  <span class="pl-c1">0.00989146</span>  <span class="pl-k">-</span><span class="pl-c1">3.72</span>    <span class="pl-c1">0.0009</span>  <span class="pl-k">-</span><span class="pl-c1">0.0570478</span>  <span class="pl-k">-</span><span class="pl-c1">0.0165243</span>
   WT           <span class="pl-k">-</span><span class="pl-c1">3.19781</span>    <span class="pl-c1">0.846546</span>    <span class="pl-k">-</span><span class="pl-c1">3.78</span>    <span class="pl-c1">0.0008</span>  <span class="pl-k">-</span><span class="pl-c1">4.93188</span>    <span class="pl-k">-</span><span class="pl-c1">1.46374</span>
   Gear          <span class="pl-c1">1.01998</span>    <span class="pl-c1">0.851408</span>     <span class="pl-c1">1.20</span>    <span class="pl-c1">0.2410</span>  <span class="pl-k">-</span><span class="pl-c1">0.72405</span>     <span class="pl-c1">2.76401</span>
   ────────────────────────────────────────────────────────────────────────────
</pre></div>
<p dir="auto">This calls the generic function fit(), where you supply a formula, a dataset, and pick the model.</p>
<h1 dir="auto"><a id="user-content-present-capabilities" class="anchor" aria-hidden="true" href="#present-capabilities"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Present capabilities</h1>
<p dir="auto">We have implemented four regression models:</p>
<ol dir="auto">
<li>Linear</li>
<li>Logistic (with four link functions)</li>
<li>Poisson</li>
<li>Negative binomial</li>
</ol>
<p dir="auto">In all cases, we have traditional frequentist models and Bayesian versions with six kinds of priors :</p>
<ol dir="auto">
<li>Gauss</li>
<li>Ridge</li>
<li>Laplace</li>
<li>Cauchy</li>
<li>T-Distributed</li>
<li>Horse shoe</li>
</ol>
<p dir="auto">All these models are built out of foundations in the Julia package ecosystem, such as GLM.jl and Turing.jl. Here in CRRao.jl, we are not building additional models; we are only building the scaffolding for the consistent API to a diverse array of models.</p>
<p dir="auto">The traditional frequentist models estimates MLE using the GLM.jl and the Bayesian models uses the Hamiltonian Monte Carlo (HMC) methods using Turing.jl.</p>
<h1 dir="auto"><a id="user-content-future-capabilities" class="anchor" aria-hidden="true" href="#future-capabilities"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Future capabilities</h1>
<ol dir="auto">
<li><a href="https://github.com/xKDR/CRRao.jl/issues/44" data-hovercard-type="issue" data-hovercard-url="/xKDR/CRRao.jl/issues/44/hovercard">Gaussian Process Regression</a></li>
<li><a href="https://github.com/xKDR/CRRao.jl/issues/42" data-hovercard-type="issue" data-hovercard-url="/xKDR/CRRao.jl/issues/42/hovercard">Gaussian Process Classification</a></li>
<li><a href="https://github.com/xKDR/CRRao.jl/issues/43" data-hovercard-type="issue" data-hovercard-url="/xKDR/CRRao.jl/issues/43/hovercard">Gaussian Process Time Series</a></li>
<li><a href="https://github.com/xKDR/CRRao.jl/issues/25" data-hovercard-type="issue" data-hovercard-url="/xKDR/CRRao.jl/issues/25/hovercard">Linear Discriminant Analysis</a></li>
<li><a href="https://github.com/xKDR/CRRao.jl/issues/49" data-hovercard-type="issue" data-hovercard-url="/xKDR/CRRao.jl/issues/49/hovercard">Hierarchical Bayesian Models</a></li>
</ol>
<h1 dir="auto"><a id="user-content-help-us-build-this" class="anchor" aria-hidden="true" href="#help-us-build-this"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Help us build this</h1>
<ul dir="auto">
<li>
<p dir="auto">Please use CRRao and tell us what is not good about it.</p>
</li>
<li>
<p dir="auto">We have exploited Julia capabilities to make it convenient to build additional functionality within CRRao, and for multiple developers to build new models.</p>
</li>
<li>
<p dir="auto">We want to build out CRRao into a simple and consistent approach to the statistical modelling workflow. Please help us plan and build this.</p>
</li>
<li>
<p dir="auto">As a developer, you can begin contributing by adding the features requested in the <a href="https://github.com/xKDR/CRRao.jl/milestones">milestones</a> section of the repository.</p>
</li>
<li>
<p dir="auto">When you are developing keep in mind that your application is capable of handling the following mandatory features:</p>
<ol dir="auto">
<li>Formula,</li>
<li>DataFrame (optional - you may choose other data types),</li>
<li>modelClass,</li>
<li>It follows StatsAPI.jl requirement (like it has atleast <code>fit</code>, others capabilities like <code>predict</code>,<code>aic</code>,<code>bic</code> would be great things to have).</li>
<li>Provide test cases</li>
<li>Check for performance gain against <code>R</code> and <code>Python</code>.</li>
</ol>
</li>
</ul>
<h1 dir="auto"><a id="user-content-performance-gains" class="anchor" aria-hidden="true" href="#performance-gains"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Performance gains</h1>
<p dir="auto">The efficiency gains of the Julia language and the package ecosystem accrue to the end-user of CRRao. (CRRao is just a thin layer, and the heavy lifting is all done by the underlying packages). Here is some measurement of the above model, done through four alternative systems.</p>
<p dir="auto"><strong>R</strong></p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="&gt; attach(datasets::mtcars)
&gt; library(microbenchmark)
&gt; microbenchmark(lm(mpg~hp+wt))"><pre lang="{r}" class="notranslate"><code>&gt; attach(datasets::mtcars)
&gt; library(microbenchmark)
&gt; microbenchmark(lm(mpg~hp+wt))
</code></pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Unit: microseconds
              expr     min      lq     mean   median      uq      max neval
 lm(mpg ~ hp + wt) 290.534 311.209 380.1334 325.9485 395.288 2223.736   100"><pre lang="{r}" class="notranslate"><code>Unit: microseconds
              expr     min      lq     mean   median      uq      max neval
 lm(mpg ~ hp + wt) 290.534 311.209 380.1334 325.9485 395.288 2223.736   100
</code></pre></div>
<p dir="auto"><strong>Julia</strong></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using RDatasets, CRRao, BenchmarkTools, StatsModels
df = dataset(&quot;datasets&quot;, &quot;mtcars&quot;)
@benchmark fit(@formula(MPG ~ HP + WT), df, LinearRegression())"><pre><span class="pl-k">using</span> RDatasets, CRRao, BenchmarkTools, StatsModels
df <span class="pl-k">=</span> <span class="pl-c1">dataset</span>(<span class="pl-s"><span class="pl-pds">"</span>datasets<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>mtcars<span class="pl-pds">"</span></span>)
<span class="pl-c1">@benchmark</span> <span class="pl-c1">fit</span>(<span class="pl-c1">@formula</span>(MPG <span class="pl-k">~</span> HP <span class="pl-k">+</span> WT), df, <span class="pl-c1">LinearRegression</span>())</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="BenchmarkTools.Trial: 10000 samples with 1 evaluation.
 Range (min … max):   90.092 μs …  34.761 ms  ┊ GC (min … max): 0.00% … 0.00%
 Time  (median):     127.941 μs               ┊ GC (median):    0.00%
 Time  (mean ± σ):   160.215 μs ± 559.192 μs  ┊ GC (mean ± σ):  4.54% ± 3.30%"><pre>BenchmarkTools<span class="pl-k">.</span>Trial<span class="pl-k">:</span> <span class="pl-c1">10000</span> samples with <span class="pl-c1">1</span> evaluation.
 Range (min … max)<span class="pl-k">:</span>   <span class="pl-c1">90.092</span> μs …  <span class="pl-c1">34.761</span> ms  ┊ GC (min … max)<span class="pl-k">:</span> <span class="pl-c1">0.00</span><span class="pl-k">%</span> … <span class="pl-c1">0.00</span><span class="pl-k">%</span>
 Time  (median)<span class="pl-k">:</span>     <span class="pl-c1">127.941</span> μs               ┊ GC (median)<span class="pl-k">:</span>    <span class="pl-c1">0.00</span><span class="pl-k">%</span>
 Time  (mean ± σ)<span class="pl-k">:</span>   <span class="pl-c1">160.215</span> μs ± <span class="pl-c1">559.192</span> μs  ┊ GC (mean ± σ)<span class="pl-k">:</span>  <span class="pl-c1">4.54</span><span class="pl-k">%</span> ± <span class="pl-c1">3.30</span><span class="pl-k">%</span></pre></div>
<h2 dir="auto"><a id="user-content-to-summarise-the-performance-across-four-alternatives" class="anchor" aria-hidden="true" href="#to-summarise-the-performance-across-four-alternatives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>To summarise the performance across four alternatives:</h2>
<table>
<thead>
<tr>
<th>Language</th>
<th>Package/Function</th>
<th>Mean time taken</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Python</code></td>
<td><code>statsmodes</code>/<code>ols</code></td>
<td>2106.6 μs</td>
</tr>
<tr>
<td><code>Python</code></td>
<td><code>sklearn</code>/<code>fit</code></td>
<td>559.9 μs</td>
</tr>
<tr>
<td><code>R</code></td>
<td><code>stats</code>/<code>lm</code></td>
<td>380.13 μs</td>
</tr>
<tr>
<td><code>Julia</code></td>
<td><code>CRRao</code>/<code>fit</code></td>
<td>160.22 μs</td>
</tr>
<tr>
<td>-----------</td>
<td>--------------------</td>
<td>------------------</td>
</tr>
</tbody>
</table>
<p dir="auto">where we emphasise that the performance of fit() here is a tiny overhead on top of the implementation of the linear regression in GLM.jl.</p>
<h1 dir="auto"><a id="user-content-support" class="anchor" aria-hidden="true" href="#support"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Support</h1>
<p dir="auto">We gratefully acknowledge the JuliaLab at MIT for financial support for this project.</p>
</article></div>