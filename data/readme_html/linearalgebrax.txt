<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-linearalgebrax" class="anchor" aria-hidden="true" href="#linearalgebrax"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LinearAlgebraX</h1>
<p><a href="https://travis-ci.com/scheinerman/LinearAlgebraX.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/970b2df685a5c72ba4759c2e30a9bcce9140562fdb5cc27e5dd00fb59ad4f7e1/68747470733a2f2f7472617669732d63692e636f6d2f73636865696e65726d616e2f4c696e656172416c6765627261582e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/scheinerman/LinearAlgebraX.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>This module implements basic linear algebra methods for matrices
with exact entries (e.g., <code>Rational{Int}</code> values).  The function names
typically match the standard ones in Julia but with an <code>x</code> (for "exact")
appended.</p>
<h2><a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Functions</h2>
<p>These functions in this module end with the letter <code>x</code>
and have the same definitions as their counterparts that do not have an <code>x</code>.
For exact types (such as <code>Int</code>s) these functions give exact results.</p>
<ul>
<li><code>detx</code> -- exact determinant (via row reduced echelon form)</li>
<li><code>cofactor_det</code>-- slower exact determinant (via cofactor expansion)</li>
<li><code>nullspacex</code> -- exact nullspace</li>
<li><code>rankx</code> -- exact rankx</li>
<li><code>invx</code> -- exact inverse</li>
<li><code>rrefx</code> -- row reduced echelon form</li>
<li><code>eye</code> -- lovingly restored</li>
<li><code>char_poly</code> -- characteristic polynomial</li>
</ul>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<h4><a id="user-content-determinant" class="anchor" aria-hidden="true" href="#determinant"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Determinant</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; A = ones(Int,10,10)+eye(Int,10);

julia&gt; det(A)
11.000000000000004

julia&gt; detx(A)
11

julia&gt; A = rand(Int,20,20) .% 20;

julia&gt; det(A)
3.3905496651565455e29

julia&gt; detx(A)
339054966515654744413389494504
"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">ones</span>(Int,<span class="pl-c1">10</span>,<span class="pl-c1">10</span>)<span class="pl-k">+</span><span class="pl-c1">eye</span>(Int,<span class="pl-c1">10</span>);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">det</span>(A)
<span class="pl-c1">11.000000000000004</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">detx</span>(A)
<span class="pl-c1">11</span>

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Int,<span class="pl-c1">20</span>,<span class="pl-c1">20</span>) <span class="pl-k">.%</span> <span class="pl-c1">20</span>;

julia<span class="pl-k">&gt;</span> <span class="pl-c1">det</span>(A)
<span class="pl-c1">3.3905496651565455e29</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">detx</span>(A)
<span class="pl-c1">339054966515654744413389494504</span></pre></div>
<p>For certain <code>Mod</code> matrices, there may be noninvertible nonzero elements in which
case the Gaussian elimination algorithm may fail. If that happens, <code>detx</code>
falls back to using cofactor expansion which may be very slow. Should that
happen, a warning is generated.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; A = rand(Mod{10},5,5)
5×5 Array{Mod{10},2}:
 Mod{10}(6)  Mod{10}(1)  Mod{10}(8)  Mod{10}(7)  Mod{10}(9)
 Mod{10}(6)  Mod{10}(4)  Mod{10}(6)  Mod{10}(9)  Mod{10}(0)
 Mod{10}(9)  Mod{10}(8)  Mod{10}(7)  Mod{10}(8)  Mod{10}(0)
 Mod{10}(9)  Mod{10}(1)  Mod{10}(9)  Mod{10}(1)  Mod{10}(3)
 Mod{10}(5)  Mod{10}(4)  Mod{10}(5)  Mod{10}(9)  Mod{10}(0)

julia&gt; detx(A)
┌ Warning: Using cofactor expansion to calcuate determinant; may be very slow.
└ @ LinearAlgebraX ~/.julia/dev/LinearAlgebraX/src/detx.jl:41
Mod{10}(4)
"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Mod{<span class="pl-c1">10</span>},<span class="pl-c1">5</span>,<span class="pl-c1">5</span>)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> Array{Mod{<span class="pl-c1">10</span>},<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">6</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">8</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">7</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">9</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">6</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">4</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">6</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">9</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">9</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">8</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">7</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">8</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">9</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">9</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">3</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">5</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">4</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">5</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">9</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">0</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">detx</span>(A)
┌ Warning<span class="pl-k">:</span> Using cofactor expansion to calcuate determinant; may be very slow.
└ @ LinearAlgebraX <span class="pl-k">~</span><span class="pl-k">/</span><span class="pl-k">.</span>julia<span class="pl-k">/</span>dev<span class="pl-k">/</span>LinearAlgebraX<span class="pl-k">/</span>src<span class="pl-k">/</span>detx<span class="pl-k">.</span>jl<span class="pl-k">:</span><span class="pl-c1">41</span>
<span class="pl-c1">Mod</span><span class="pl-c1">{10}</span>(<span class="pl-c1">4</span>)</pre></div>
<h4><a id="user-content-nullspace" class="anchor" aria-hidden="true" href="#nullspace"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Nullspace</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; A = reshape(collect(1:12),3,4)
3×4 Array{Int64,2}:
 1  4  7  10
 2  5  8  11
 3  6  9  12

julia&gt; nullspacex(A)
4×2 Array{Rational{BigInt},2}:
  1//1   2//1
 -2//1  -3//1
  1//1   0//1
  0//1   1//1

julia&gt; nullspace(A)
4×2 Array{Float64,2}:
 -0.475185  -0.272395
  0.430549   0.717376
  0.564458  -0.617566
 -0.519821   0.172585
"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">reshape</span>(<span class="pl-c1">collect</span>(<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">12</span>),<span class="pl-c1">3</span>,<span class="pl-c1">4</span>)
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">4</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">4</span>  <span class="pl-c1">7</span>  <span class="pl-c1">10</span>
 <span class="pl-c1">2</span>  <span class="pl-c1">5</span>  <span class="pl-c1">8</span>  <span class="pl-c1">11</span>
 <span class="pl-c1">3</span>  <span class="pl-c1">6</span>  <span class="pl-c1">9</span>  <span class="pl-c1">12</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">nullspacex</span>(A)
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">2</span> Array{Rational{BigInt},<span class="pl-c1">2</span>}<span class="pl-k">:</span>
  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>   <span class="pl-c1">2</span><span class="pl-k">//</span><span class="pl-c1">1</span>
 <span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">3</span><span class="pl-k">//</span><span class="pl-c1">1</span>
  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>   <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>
  <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">nullspace</span>(A)
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">2</span> Array{Float64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">0.475185</span>  <span class="pl-k">-</span><span class="pl-c1">0.272395</span>
  <span class="pl-c1">0.430549</span>   <span class="pl-c1">0.717376</span>
  <span class="pl-c1">0.564458</span>  <span class="pl-k">-</span><span class="pl-c1">0.617566</span>
 <span class="pl-k">-</span><span class="pl-c1">0.519821</span>   <span class="pl-c1">0.172585</span></pre></div>
<h4><a id="user-content-rank" class="anchor" aria-hidden="true" href="#rank"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Rank</h4>
<p>Consider the 12-by-12 Hibert matrix, <code>H</code> (see <code>hilbert.jl</code> in the <code>extras</code> folder):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="12×12 Array{Rational{Int64},2}:
 1//1   1//2   1//3   1//4   1//5   1//6   1//7   1//8   1//9   1//10  1//11  1//12
 1//2   1//3   1//4   1//5   1//6   1//7   1//8   1//9   1//10  1//11  1//12  1//13
 1//3   1//4   1//5   1//6   1//7   1//8   1//9   1//10  1//11  1//12  1//13  1//14
 1//4   1//5   1//6   1//7   1//8   1//9   1//10  1//11  1//12  1//13  1//14  1//15
 1//5   1//6   1//7   1//8   1//9   1//10  1//11  1//12  1//13  1//14  1//15  1//16
 1//6   1//7   1//8   1//9   1//10  1//11  1//12  1//13  1//14  1//15  1//16  1//17
 1//7   1//8   1//9   1//10  1//11  1//12  1//13  1//14  1//15  1//16  1//17  1//18
 1//8   1//9   1//10  1//11  1//12  1//13  1//14  1//15  1//16  1//17  1//18  1//19
 1//9   1//10  1//11  1//12  1//13  1//14  1//15  1//16  1//17  1//18  1//19  1//20
 1//10  1//11  1//12  1//13  1//14  1//15  1//16  1//17  1//18  1//19  1//20  1//21
 1//11  1//12  1//13  1//14  1//15  1//16  1//17  1//18  1//19  1//20  1//21  1//22
 1//12  1//13  1//14  1//15  1//16  1//17  1//18  1//19  1//20  1//21  1//22  1//23
"><pre><span class="pl-c1">12</span><span class="pl-k">×</span><span class="pl-c1">12</span> Array{Rational{Int64},<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">2</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">4</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">5</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">6</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">7</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">8</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">9</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">10</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">11</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">12</span>
 <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">2</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">4</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">5</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">6</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">7</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">8</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">9</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">10</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">11</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">12</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">13</span>
 <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">4</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">5</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">6</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">7</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">8</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">9</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">10</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">11</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">12</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">13</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">14</span>
 <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">4</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">5</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">6</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">7</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">8</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">9</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">10</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">11</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">12</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">13</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">14</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">15</span>
 <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">5</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">6</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">7</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">8</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">9</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">10</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">11</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">12</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">13</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">14</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">15</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">16</span>
 <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">6</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">7</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">8</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">9</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">10</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">11</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">12</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">13</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">14</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">15</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">16</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">17</span>
 <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">7</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">8</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">9</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">10</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">11</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">12</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">13</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">14</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">15</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">16</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">17</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">18</span>
 <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">8</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">9</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">10</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">11</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">12</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">13</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">14</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">15</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">16</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">17</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">18</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">19</span>
 <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">9</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">10</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">11</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">12</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">13</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">14</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">15</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">16</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">17</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">18</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">19</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">20</span>
 <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">10</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">11</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">12</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">13</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">14</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">15</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">16</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">17</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">18</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">19</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">20</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">21</span>
 <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">11</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">12</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">13</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">14</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">15</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">16</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">17</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">18</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">19</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">20</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">21</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">22</span>
 <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">12</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">13</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">14</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">15</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">16</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">17</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">18</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">19</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">20</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">21</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">22</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">23</span></pre></div>
<p>We compare the results of <code>rank</code> (from the <code>LinearAlgebra</code> module) and
<code>rankx</code> (in this module):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; rank(H)
11

julia&gt; rankx(H)
12
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">rank</span>(H)
<span class="pl-c1">11</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">rankx</span>(H)
<span class="pl-c1">12</span></pre></div>
<h4><a id="user-content-inverse" class="anchor" aria-hidden="true" href="#inverse"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Inverse</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Mods

julia&gt; A = rand(Mod{11},5,5)
5×5 Array{Mod{11},2}:
 Mod{11}(2)   Mod{11}(4)  Mod{11}(4)  Mod{11}(0)   Mod{11}(2)
 Mod{11}(9)   Mod{11}(4)  Mod{11}(5)  Mod{11}(1)  Mod{11}(10)
 Mod{11}(3)   Mod{11}(4)  Mod{11}(5)  Mod{11}(6)   Mod{11}(0)
 Mod{11}(5)  Mod{11}(10)  Mod{11}(4)  Mod{11}(5)   Mod{11}(4)
 Mod{11}(9)  Mod{11}(10)  Mod{11}(7)  Mod{11}(8)   Mod{11}(9)

julia&gt; B = invx(A)
5×5 Array{Mod{11},2}:
 Mod{11}(4)  Mod{11}(5)  Mod{11}(0)   Mod{11}(6)   Mod{11}(8)
 Mod{11}(7)  Mod{11}(4)  Mod{11}(9)  Mod{11}(10)   Mod{11}(3)
 Mod{11}(6)  Mod{11}(0)  Mod{11}(2)   Mod{11}(5)   Mod{11}(5)
 Mod{11}(3)  Mod{11}(4)  Mod{11}(9)  Mod{11}(10)  Mod{11}(10)
 Mod{11}(9)  Mod{11}(9)  Mod{11}(0)   Mod{11}(8)   Mod{11}(9)

julia&gt; A*B
5×5 Array{Mod{11},2}:
 Mod{11}(1)  Mod{11}(0)  Mod{11}(0)  Mod{11}(0)  Mod{11}(0)
 Mod{11}(0)  Mod{11}(1)  Mod{11}(0)  Mod{11}(0)  Mod{11}(0)
 Mod{11}(0)  Mod{11}(0)  Mod{11}(1)  Mod{11}(0)  Mod{11}(0)
 Mod{11}(0)  Mod{11}(0)  Mod{11}(0)  Mod{11}(1)  Mod{11}(0)
 Mod{11}(0)  Mod{11}(0)  Mod{11}(0)  Mod{11}(0)  Mod{11}(1)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Mods

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Mod{<span class="pl-c1">11</span>},<span class="pl-c1">5</span>,<span class="pl-c1">5</span>)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> Array{Mod{<span class="pl-c1">11</span>},<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">2</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">4</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">4</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">2</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">9</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">4</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">5</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">10</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">3</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">4</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">5</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">6</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">5</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">10</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">4</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">5</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">4</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">9</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">10</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">7</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">8</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">9</span>)

julia<span class="pl-k">&gt;</span> B <span class="pl-k">=</span> <span class="pl-c1">invx</span>(A)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> Array{Mod{<span class="pl-c1">11</span>},<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">4</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">5</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">6</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">8</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">7</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">4</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">9</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">10</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">3</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">6</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">2</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">5</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">5</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">3</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">4</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">9</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">10</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">10</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">9</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">9</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">8</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">9</span>)

julia<span class="pl-k">&gt;</span> A<span class="pl-k">*</span>B
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> Array{Mod{<span class="pl-c1">11</span>},<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">1</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">0</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{11}</span>(<span class="pl-c1">1</span>)</pre></div>
<h4><a id="user-content-characteristic-polynomial" class="anchor" aria-hidden="true" href="#characteristic-polynomial"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Characteristic polynomial</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using SimplePolynomials, LinearAlgebra

julia&gt; x = getx()
x

julia&gt; A = triu(ones(Int,5,5))
5×5 Array{Int64,2}:
 1  1  1  1  1
 0  1  1  1  1
 0  0  1  1  1
 0  0  0  1  1
 0  0  0  0  1

julia&gt; char_poly(A)
-1 + 5*x - 10*x^2 + 10*x^3 - 5*x^4 + x^5

julia&gt; ans == (x-1)^5
true

julia&gt; using Mods

julia&gt; A = rand(Mod{17},4,4)
4×4 Array{Mod{17},2}:
 Mod{17}(16)  Mod{17}(10)   Mod{17}(9)  Mod{17}(12)
 Mod{17}(15)   Mod{17}(1)   Mod{17}(1)   Mod{17}(6)
  Mod{17}(3)   Mod{17}(2)   Mod{17}(5)  Mod{17}(11)
  Mod{17}(5)  Mod{17}(15)  Mod{17}(15)   Mod{17}(7)

julia&gt; char_poly(A)
Mod{17}(1) + Mod{17}(1)*x + Mod{17}(16)*x^2 + Mod{17}(5)*x^3 + Mod{17}(1)*x^4

julia&gt; detx(A)
Mod{17}(1)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> SimplePolynomials, LinearAlgebra

julia<span class="pl-k">&gt;</span> x <span class="pl-k">=</span> <span class="pl-c1">getx</span>()
x

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">triu</span>(<span class="pl-c1">ones</span>(Int,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>))
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">5</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>  <span class="pl-c1">1</span>
 <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">0</span>  <span class="pl-c1">1</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">char_poly</span>(A)
<span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">+</span> <span class="pl-c1">5</span><span class="pl-k">*</span>x <span class="pl-k">-</span> <span class="pl-c1">10</span><span class="pl-k">*</span>x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">10</span><span class="pl-k">*</span>x<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">-</span> <span class="pl-c1">5</span><span class="pl-k">*</span>x<span class="pl-k">^</span><span class="pl-c1">4</span> <span class="pl-k">+</span> x<span class="pl-k">^</span><span class="pl-c1">5</span>

julia<span class="pl-k">&gt;</span> ans <span class="pl-k">==</span> (x<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">^</span><span class="pl-c1">5</span>
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Mods

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Mod{<span class="pl-c1">17</span>},<span class="pl-c1">4</span>,<span class="pl-c1">4</span>)
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">4</span> Array{Mod{<span class="pl-c1">17</span>},<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">16</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">10</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">9</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">12</span>)
 <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">15</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">1</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">1</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">6</span>)
  <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">3</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">2</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">5</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">11</span>)
  <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">5</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">15</span>)  <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">15</span>)   <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">7</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">char_poly</span>(A)
<span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">1</span>) <span class="pl-k">+</span> <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">1</span>)<span class="pl-k">*</span>x <span class="pl-k">+</span> <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">16</span>)<span class="pl-k">*</span>x<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">5</span>)<span class="pl-k">*</span>x<span class="pl-k">^</span><span class="pl-c1">3</span> <span class="pl-k">+</span> <span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">1</span>)<span class="pl-k">*</span>x<span class="pl-k">^</span><span class="pl-c1">4</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">detx</span>(A)
<span class="pl-c1">Mod</span><span class="pl-c1">{17}</span>(<span class="pl-c1">1</span>)</pre></div>
<h4><a id="user-content-row-reduced-echelon-form" class="anchor" aria-hidden="true" href="#row-reduced-echelon-form"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Row reduced echelon form</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; A = rand(Int,4,6) .% 10
4×6 Array{Int64,2}:
6   8  0  -6  -5   4
0  -5  2   0  -3  -4
0  -4  2  -8   7  -8
1  -3  7   2  -6   2

julia&gt; c = A[:,1] + A[:,2] - A[:,3]
4-element Array{Int64,1}:
14
-7
-6
-9

julia&gt; A = [c A]
4×7 Array{Int64,2}:
14  6   8  0  -6  -5   4
-7  0  -5  2   0  -3  -4
-6  0  -4  2  -8   7  -8
-9  1  -3  7   2  -6   2

julia&gt; rrefx(A)
4×7 Array{Rational{Int64},2}:
1//1  0//1  0//1  -1//1  0//1   -23//130  -36//65
0//1  1//1  0//1   1//1  0//1  -883//325  158//325
0//1  0//1  1//1   1//1  0//1   551//650  512//325
0//1  0//1  0//1   0//1  1//1  -379//325  204//325
"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Int,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>) <span class="pl-k">.%</span> <span class="pl-c1">10</span>
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">6</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
<span class="pl-c1">6</span>   <span class="pl-c1">8</span>  <span class="pl-c1">0</span>  <span class="pl-k">-</span><span class="pl-c1">6</span>  <span class="pl-k">-</span><span class="pl-c1">5</span>   <span class="pl-c1">4</span>
<span class="pl-c1">0</span>  <span class="pl-k">-</span><span class="pl-c1">5</span>  <span class="pl-c1">2</span>   <span class="pl-c1">0</span>  <span class="pl-k">-</span><span class="pl-c1">3</span>  <span class="pl-k">-</span><span class="pl-c1">4</span>
<span class="pl-c1">0</span>  <span class="pl-k">-</span><span class="pl-c1">4</span>  <span class="pl-c1">2</span>  <span class="pl-k">-</span><span class="pl-c1">8</span>   <span class="pl-c1">7</span>  <span class="pl-k">-</span><span class="pl-c1">8</span>
<span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">3</span>  <span class="pl-c1">7</span>   <span class="pl-c1">2</span>  <span class="pl-k">-</span><span class="pl-c1">6</span>   <span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> c <span class="pl-k">=</span> A[:,<span class="pl-c1">1</span>] <span class="pl-k">+</span> A[:,<span class="pl-c1">2</span>] <span class="pl-k">-</span> A[:,<span class="pl-c1">3</span>]
<span class="pl-c1">4</span><span class="pl-k">-</span>element Array{Int64,<span class="pl-c1">1</span>}<span class="pl-k">:</span>
<span class="pl-c1">14</span>
<span class="pl-k">-</span><span class="pl-c1">7</span>
<span class="pl-k">-</span><span class="pl-c1">6</span>
<span class="pl-k">-</span><span class="pl-c1">9</span>

julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> [c A]
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">7</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
<span class="pl-c1">14</span>  <span class="pl-c1">6</span>   <span class="pl-c1">8</span>  <span class="pl-c1">0</span>  <span class="pl-k">-</span><span class="pl-c1">6</span>  <span class="pl-k">-</span><span class="pl-c1">5</span>   <span class="pl-c1">4</span>
<span class="pl-k">-</span><span class="pl-c1">7</span>  <span class="pl-c1">0</span>  <span class="pl-k">-</span><span class="pl-c1">5</span>  <span class="pl-c1">2</span>   <span class="pl-c1">0</span>  <span class="pl-k">-</span><span class="pl-c1">3</span>  <span class="pl-k">-</span><span class="pl-c1">4</span>
<span class="pl-k">-</span><span class="pl-c1">6</span>  <span class="pl-c1">0</span>  <span class="pl-k">-</span><span class="pl-c1">4</span>  <span class="pl-c1">2</span>  <span class="pl-k">-</span><span class="pl-c1">8</span>   <span class="pl-c1">7</span>  <span class="pl-k">-</span><span class="pl-c1">8</span>
<span class="pl-k">-</span><span class="pl-c1">9</span>  <span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">3</span>  <span class="pl-c1">7</span>   <span class="pl-c1">2</span>  <span class="pl-k">-</span><span class="pl-c1">6</span>   <span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">rrefx</span>(A)
<span class="pl-c1">4</span><span class="pl-k">×</span><span class="pl-c1">7</span> Array{Rational{Int64},<span class="pl-c1">2</span>}<span class="pl-k">:</span>
<span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>   <span class="pl-k">-</span><span class="pl-c1">23</span><span class="pl-k">//</span><span class="pl-c1">130</span>  <span class="pl-k">-</span><span class="pl-c1">36</span><span class="pl-k">//</span><span class="pl-c1">65</span>
<span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">883</span><span class="pl-k">//</span><span class="pl-c1">325</span>  <span class="pl-c1">158</span><span class="pl-k">//</span><span class="pl-c1">325</span>
<span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>   <span class="pl-c1">551</span><span class="pl-k">//</span><span class="pl-c1">650</span>  <span class="pl-c1">512</span><span class="pl-k">//</span><span class="pl-c1">325</span>
<span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>   <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">379</span><span class="pl-k">//</span><span class="pl-c1">325</span>  <span class="pl-c1">204</span><span class="pl-k">//</span><span class="pl-c1">325</span></pre></div>
<h2><a id="user-content-homogeneous-vectors" class="anchor" aria-hidden="true" href="#homogeneous-vectors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Homogeneous Vectors</h2>
<p>A point in projective space is represented by a <em>homogeneous vector</em>. This is
a list of numbers (like an ordinary vector) but two such vectors are equal
if and only if one is a nonzero multiple of the other.</p>
<p>We provide the <code>HVector</code> type to represent homogeneous vectors. The entries
in an <code>HVector</code> are scaled so that the last nonzero coordinate is <code>1</code>.
(Technically, we should forbid the all zero vector, but we don't implement
that restriction.)</p>
<p>To create an <code>HVector</code> provide either a list (one-dimensional array) of values
or a list of arguments:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; v = HVector([1,-2,3])
HVector(1//3, -2//3, 1//1)

julia&gt; w = HVector(2,-4,6)
HVector(1//3, -2//3, 1//1)

julia&gt; v==w
true
"><pre>julia<span class="pl-k">&gt;</span> v <span class="pl-k">=</span> <span class="pl-c1">HVector</span>([<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-c1">3</span>])
<span class="pl-c1">HVector</span>(<span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span>, <span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">//</span><span class="pl-c1">3</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> w <span class="pl-k">=</span> <span class="pl-c1">HVector</span>(<span class="pl-c1">2</span>,<span class="pl-k">-</span><span class="pl-c1">4</span>,<span class="pl-c1">6</span>)
<span class="pl-c1">HVector</span>(<span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span>, <span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">//</span><span class="pl-c1">3</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> v<span class="pl-k">==</span>w
<span class="pl-c1">true</span></pre></div>
<p>Entries in an <code>HVector</code> can be retrieved individually, or the entire vector can
be converted to an array:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; v[2]
-2//3

julia&gt; Vector(v)
3-element Array{Rational{Int64},1}:
  1//3
 -2//3
  1//1
"><pre>julia<span class="pl-k">&gt;</span> v[<span class="pl-c1">2</span>]
<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">//</span><span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">Vector</span>(v)
<span class="pl-c1">3</span><span class="pl-k">-</span>element Array{Rational{Int64},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span>
 <span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">//</span><span class="pl-c1">3</span>
  <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span></pre></div>
<p>However, entries cannot be assigned:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="ulia&gt; v[2] = 3//4
ERROR: MethodError: no method matching setindex!(::HVector{Rational{Int64}}, ::Rational{Int64}, ::Int64)
"><pre>ulia<span class="pl-k">&gt;</span> v[<span class="pl-c1">2</span>] <span class="pl-k">=</span> <span class="pl-c1">3</span><span class="pl-k">//</span><span class="pl-c1">4</span>
ERROR<span class="pl-k">:</span> MethodError<span class="pl-k">:</span> no method matching <span class="pl-c1">setindex!</span>(<span class="pl-k">::</span><span class="pl-c1">HVector{Rational{Int64}}</span>, <span class="pl-k">::</span><span class="pl-c1">Rational{Int64}</span>, <span class="pl-k">::</span><span class="pl-c1">Int64</span>)</pre></div>
<h3><a id="user-content-operations-for-hvectors" class="anchor" aria-hidden="true" href="#operations-for-hvectors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Operations for <code>HVector</code>s</h3>
<p>The product of a matrix and a homogeneous vector is a homogeneous vector:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; A = rand(Int,3,3) .% 5
3×3 Array{Int64,2}:
 -1   0   0
  3   0  -2
  3  -1  -2

julia&gt; A*v
HVector(1//1, 3//1, 1//1)

julia&gt; A*Vector(v)
3-element Array{Rational{Int64},1}:
 -1//3
 -1//1
 -1//3
"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Int,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>) <span class="pl-k">.%</span> <span class="pl-c1">5</span>
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">1</span>   <span class="pl-c1">0</span>   <span class="pl-c1">0</span>
  <span class="pl-c1">3</span>   <span class="pl-c1">0</span>  <span class="pl-k">-</span><span class="pl-c1">2</span>
  <span class="pl-c1">3</span>  <span class="pl-k">-</span><span class="pl-c1">1</span>  <span class="pl-k">-</span><span class="pl-c1">2</span>

julia<span class="pl-k">&gt;</span> A<span class="pl-k">*</span>v
<span class="pl-c1">HVector</span>(<span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>, <span class="pl-c1">3</span><span class="pl-k">//</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> A<span class="pl-k">*</span><span class="pl-c1">Vector</span>(v)
<span class="pl-c1">3</span><span class="pl-k">-</span>element Array{Rational{Int64},<span class="pl-c1">1</span>}<span class="pl-k">:</span>
 <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span>
 <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>
 <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span></pre></div>
<p>The dot product of two homogeneous vectors is a scalar. Since homogeneous vectors
are unchanged by scaling, we only distinguish between zero and nonzero results.
Specifically, the dot product is <code>0</code> if the two vectors are orthogonal and
<code>1</code> otherwise.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using Mods

julia&gt; u = Mod{3}(1)
Mod{3}(1)

julia&gt; v = HVector(u,u,u)
HVector(Mod{3}(1), Mod{3}(1), Mod{3}(1))

julia&gt; dot(v,v)
0

julia&gt; w = HVector(-1,2,1)
HVector(-1//1, 2//1, 1//1)

julia&gt; dot(v,w)
1
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Mods

julia<span class="pl-k">&gt;</span> u <span class="pl-k">=</span> <span class="pl-c1">Mod</span><span class="pl-c1">{3}</span>(<span class="pl-c1">1</span>)
<span class="pl-c1">Mod</span><span class="pl-c1">{3}</span>(<span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> v <span class="pl-k">=</span> <span class="pl-c1">HVector</span>(u,u,u)
<span class="pl-c1">HVector</span>(<span class="pl-c1">Mod</span><span class="pl-c1">{3}</span>(<span class="pl-c1">1</span>), <span class="pl-c1">Mod</span><span class="pl-c1">{3}</span>(<span class="pl-c1">1</span>), <span class="pl-c1">Mod</span><span class="pl-c1">{3}</span>(<span class="pl-c1">1</span>))

julia<span class="pl-k">&gt;</span> <span class="pl-c1">dot</span>(v,v)
<span class="pl-c1">0</span>

julia<span class="pl-k">&gt;</span> w <span class="pl-k">=</span> <span class="pl-c1">HVector</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>)
<span class="pl-c1">HVector</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>, <span class="pl-c1">2</span><span class="pl-k">//</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>)

julia<span class="pl-k">&gt;</span> <span class="pl-c1">dot</span>(v,w)
<span class="pl-c1">1</span></pre></div>
<h3><a id="user-content-homogeneous-matrices" class="anchor" aria-hidden="true" href="#homogeneous-matrices"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Homogeneous matrices</h3>
<p>We also provide <code>HMatrix</code> to represent a homogeneous matrix. These are
constructed by passing an (ordinary) matrix.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; A = rand(Int,3,3).%5
3×3 Array{Int64,2}:
 0  -4   3
 1   4  -2
 3   0  -3

julia&gt; HMatrix(A)
HMatrix: Rational{Int64}[0//1 4//3 -1//1; -1//3 -4//3 2//3; -1//1 0//1 1//1]

julia&gt; Matrix(ans)
3×3 Array{Rational{Int64},2}:
  0//1   4//3  -1//1
 -1//3  -4//3   2//3
 -1//1   0//1   1//1
"><pre>julia<span class="pl-k">&gt;</span> A <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Int,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>)<span class="pl-k">.%</span><span class="pl-c1">5</span>
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Int64,<span class="pl-c1">2</span>}<span class="pl-k">:</span>
 <span class="pl-c1">0</span>  <span class="pl-k">-</span><span class="pl-c1">4</span>   <span class="pl-c1">3</span>
 <span class="pl-c1">1</span>   <span class="pl-c1">4</span>  <span class="pl-k">-</span><span class="pl-c1">2</span>
 <span class="pl-c1">3</span>   <span class="pl-c1">0</span>  <span class="pl-k">-</span><span class="pl-c1">3</span>

julia<span class="pl-k">&gt;</span> <span class="pl-c1">HMatrix</span>(A)
HMatrix<span class="pl-k">:</span> Rational{Int64}[<span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span> <span class="pl-c1">4</span><span class="pl-k">//</span><span class="pl-c1">3</span> <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>; <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span> <span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">//</span><span class="pl-c1">3</span> <span class="pl-c1">2</span><span class="pl-k">//</span><span class="pl-c1">3</span>; <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span> <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span> <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>]

julia<span class="pl-k">&gt;</span> <span class="pl-c1">Matrix</span>(ans)
<span class="pl-c1">3</span><span class="pl-k">×</span><span class="pl-c1">3</span> Array{Rational{Int64},<span class="pl-c1">2</span>}<span class="pl-k">:</span>
  <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>   <span class="pl-c1">4</span><span class="pl-k">//</span><span class="pl-c1">3</span>  <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>
 <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">3</span>  <span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">//</span><span class="pl-c1">3</span>   <span class="pl-c1">2</span><span class="pl-k">//</span><span class="pl-c1">3</span>
 <span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span>   <span class="pl-c1">0</span><span class="pl-k">//</span><span class="pl-c1">1</span>   <span class="pl-c1">1</span><span class="pl-k">//</span><span class="pl-c1">1</span></pre></div>
</article></div>