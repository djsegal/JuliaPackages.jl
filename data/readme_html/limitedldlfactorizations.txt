<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-limited-memory-ldlᵀ-factorization" class="anchor" aria-hidden="true" href="#limited-memory-ldlᵀ-factorization"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Limited-Memory LDLᵀ Factorization</h1>
<p dir="auto"><a href="https://zenodo.org/badge/latestdoi/98065377" rel="nofollow"><img src="https://camo.githubusercontent.com/8692df4a8a13f641946e5b1e68e0eb43a981f65be1072029a77830ddd14bb177/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f39383036353337372e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/98065377.svg" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaSmoothOptimizers/LimitedLDLFactorizations.jl/workflows/CI/badge.svg?branch=main"><img src="https://github.com/JuliaSmoothOptimizers/LimitedLDLFactorizations.jl/workflows/CI/badge.svg?branch=main" alt="CI" style="max-width: 100%;"></a>
<a href="https://cirrus-ci.com/github/JuliaSmoothOptimizers/LimitedLDLFactorizations.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/36f030c9c3f26d57ec63ffd108d0f05ba71ccdf73263e43fd0d0bc23cfc002e5/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f4a756c6961536d6f6f74684f7074696d697a6572732f4c696d697465644c444c466163746f72697a6174696f6e732e6a6c2e737667" alt="Build Status" data-canonical-src="https://api.cirrus-ci.com/github/JuliaSmoothOptimizers/LimitedLDLFactorizations.jl.svg" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaSmoothOptimizers/LimitedLDLFactorizations.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6e5b6586bfb0a4104f8af1853b0bce701ccd0c7560e674cdbc6575b6108a5cf2/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961536d6f6f74684f7074696d697a6572732f4c696d697465644c444c466163746f72697a6174696f6e732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/JuliaSmoothOptimizers/LimitedLDLFactorizations.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://JuliaSmoothOptimizers.github.io/LimitedLDLFactorizations.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Documentation/stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://JuliaSmoothOptimizers.github.io/LimitedLDLFactorizations.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="Documentation/dev" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a></p>
<p dir="auto">A Port of LLDL to Julia.
See <a href="https://github.com/optimizers/lldl">https://github.com/optimizers/lldl</a>.</p>
<p dir="auto">Please cite this repository if you use LimitedLDLFactorizations.jl in your work: see <a href="https://github.com/JuliaSmoothOptimizers/LimitedLDLFactorizations.jl/blob/main/CITATION.bib"><code>CITATION.bib</code></a>.</p>
<p dir="auto">LimitedLDLFactorizations is a limited-memory LDLᵀ factorization for symmetric matrices.
Given a symmetric matrix A, we search for a unit lower triangular L, a
diagonal D and a diagonal ∆ such that LDLᵀ is an incomplete factorization
of A+∆. The elements of the diagonal matrix ∆ have the form ±α, where α ≥ 0
is a shift.</p>
<p dir="auto">It is possible to only supply the lower triangle of A and/or a prescribed permutation that attempts to diminish fill-in.
<a href="https://github.com/JuliaSmoothOptimizers/AMD.jl">AMD.jl</a> and <a href="https://github.com/JuliaSparse/Metis.jl">Metis.jl</a> are recommended packages for computing fill-reducing orderings of sparse matrices.</p>
<h2 dir="auto"><a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installing</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]
pkg&gt; add LimitedLDLFactorizations"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> add LimitedLDLFactorizations</pre></div>
<h2 dir="auto"><a id="user-content-brief-description" class="anchor" aria-hidden="true" href="#brief-description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Brief Description</h2>
<p dir="auto">The only functions exported are <code>lldl</code>, <code>\</code>, <code>ldiv!</code> and <code>nnz</code>.
Supply a dense array or sparse matrix to <code>lldl</code>.
Dense arrays will be converted to sparse.
The strict lower triangle and diagonal of sparse matrices will be extracted.</p>
<p dir="auto">Optionally, supply</p>
<ul dir="auto">
<li>a memory parameter to allow more fill in the L factor;</li>
<li>a drop tolerance to discard small elements in the L factor;</li>
<li>an initial shift to speed up the process in case the factorization does not exist without shift.</li>
</ul>
<p dir="auto">Using a memory parameter larger than or equal to the size of A will yield an
exact factorization provided one exists with the permutation supplied.
In particular, the full factorization exists for any symmetric permutation of a symmetric quasi-definite matrix.</p>
<p dir="auto"><code>lldl</code> returns a factorization in the form of a <code>LimitedLDLFactorization</code> object.
The <code>\</code> and <code>ldiv!</code> methods are implemented for objects of type <code>LimitedLDLFactorization</code></p>
<h2 dir="auto"><a id="user-content-more-examples" class="anchor" aria-hidden="true" href="#more-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>More Examples</h2>
<p dir="auto">See <code>examples/example.jl</code> and <code>tests/runtest.jl</code>.</p>
<h2 dir="auto"><a id="user-content-complete-description" class="anchor" aria-hidden="true" href="#complete-description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Complete Description</h2>
<p dir="auto">[1] C.-J. Lin and J. J. Moré. Incomplete Cholesky factorizations with limited
memory. SIAM Journal on Scientific Computing, 21(1):24--45, 1999.
DOI <a href="https://doi.org/10.1137/S1064827597327334" rel="nofollow">10.1137/S1064827597327334</a>.
<br>
[2] <a href="http://www.mcs.anl.gov/~more/icfs" rel="nofollow">http://www.mcs.anl.gov/~more/icfs</a>
<br>
[3] D. Orban. Limited-Memory LDLᵀ Factorization of Symmetric Quasi-Definite
Matrices with Application to Constrained Optimization. Numerical Algorithms
70(1):9--41, 2015. DOI <a href="https://doi.org/10.1007/s11075-014-9933-x" rel="nofollow">10.1007/s11075-014-9933-x</a>.
<br>
[4] <a href="https://github.com/optimizers/lldl">https://github.com/optimizers/lldl</a></p>
<h1 dir="auto"><a id="user-content-bug-reports-and-discussions" class="anchor" aria-hidden="true" href="#bug-reports-and-discussions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Bug reports and discussions</h1>
<p dir="auto">If you think you found a bug, feel free to open an <a href="https://github.com/JuliaSmoothOptimizers/LimitedLDLFactorizations.jl/issues">issue</a>.
Focused suggestions and requests can also be opened as issues. Before opening a pull request, start an issue or a discussion on the topic, please.</p>
<p dir="auto">If you want to ask a question not suited for a bug report, feel free to start a discussion <a href="https://github.com/JuliaSmoothOptimizers/Organization/discussions">here</a>. This forum is for general discussion about this repository and the <a href="https://github.com/JuliaSmoothOptimizers">JuliaSmoothOptimizers</a>, so questions about any of our packages are welcome.</p>
</article></div>