<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2><a id="user-content-view5djl----interface-to-view5d-an-interactive-data-viewer" class="anchor" aria-hidden="true" href="#view5djl----interface-to-view5d-an-interactive-data-viewer"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>View5D.jl  - interface to View5D, an interactive data viewer</h2>
<p><a href="https://github.com/RainerHeintzmann/View5D.jl">View5D.jl</a> is a Java-based viewer for up to 5-dimensional data (including complex images). It supports three mutually linked orthogonal slicing displays for XYZ coordinates, arbitrary numbers of colors (4th dimension) which can also be used to display spectral curves and a time slider for the 5th dimension.</p>
<p><a href="https://codecov.io/gh/RainerHeintzmann/View5D.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a1fbaecc2ec9e6a6354c3ed54c908b22bba2e810c003a44f688c6f667cdcf0d2/68747470733a2f2f636f6465636f762e696f2f67682f5261696e65724865696e747a6d616e6e2f5669657735442e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d32417978633330434152" alt="codecov" data-canonical-src="https://codecov.io/gh/RainerHeintzmann/View5D.jl/branch/master/graph/badge.svg?token=2Ayxc30CAR" style="max-width:100%;"></a>
<a href="https://github.com/RainerHeintzmann/View5D.jl/actions/workflows/ci.yml"><img src="https://github.com/RainerHeintzmann/View5D.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width:100%;"></a></p>
<h1><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h1>
<p>You can install the latest release via:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ] add View5D.jl
"><pre>julia<span class="pl-k">&gt;</span> ] add View5D<span class="pl-k">.</span>jl</pre></div>
<p>or for the developer version:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ] add https://github.com/RainerHeintzmann/View5D.jl
"><pre>julia<span class="pl-k">&gt;</span> ] add https<span class="pl-k">:</span><span class="pl-k">//</span>github<span class="pl-k">.</span>com<span class="pl-k">/</span>RainerHeintzmann<span class="pl-k">/</span>View5D<span class="pl-k">.</span>jl</pre></div>
<p><code>View5D.jl</code> uses <code>JavaCall.jl</code> which needs a working java installation on your system. If you do not already have one,
you should install <code>OpenJDK</code> and you may have to set the <code>JAVA_HOME</code> variable to the installation directory on Windows.</p>
<h1><a id="user-content-quick-overview" class="anchor" aria-hidden="true" href="#quick-overview"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick Overview</h1>
<p>Here is an image of how the viewer displays multidimensional data using connected orthogonal views.
Note the various statistical information included real-space units (Âµm) displayed in the lower right information panel.
And the bottom right panel displaying the various colormaps of this 4-channel image (data curtasy Kai Schink et al.).</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/7559915/115965825-3a95ba80-a52b-11eb-97d2-a7eea8dd809b.png"><img src="https://user-images.githubusercontent.com/7559915/115965825-3a95ba80-a52b-11eb-97d2-a7eea8dd809b.png" alt="image" style="max-width:100%;"></a></p>
<h2><a id="user-content-quick-examples" class="anchor" aria-hidden="true" href="#quick-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick Examples</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="  julia&gt; using View5D
  
  julia&gt; view5d(rand(6,5,4,3,2)) # a viewer with 5D data should popp up
  
  julia&gt; using TestImages
  
  julia&gt; img1 = transpose(Float32.(testimage(&quot;resolution_test_512.tif&quot;)));
  
  julia&gt; img2 = testimage(&quot;mandrill&quot;);
  
  julia&gt; img3 = testimage(&quot;simple_3d_ball.tif&quot;); # A 3D dataset
  
  julia&gt; v1 = view5d(img1);
  
  julia&gt; v2 = view5d(img2);
  
  julia&gt; v3 = view5d(img3);
"><pre>  julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> View5D
  
  julia<span class="pl-k">&gt;</span> <span class="pl-c1">view5d</span>(<span class="pl-c1">rand</span>(<span class="pl-c1">6</span>,<span class="pl-c1">5</span>,<span class="pl-c1">4</span>,<span class="pl-c1">3</span>,<span class="pl-c1">2</span>)) <span class="pl-c"><span class="pl-c">#</span> a viewer with 5D data should popp up</span>
  
  julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> TestImages
  
  julia<span class="pl-k">&gt;</span> img1 <span class="pl-k">=</span> <span class="pl-c1">transpose</span>(<span class="pl-c1">Float32</span>.(<span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>resolution_test_512.tif<span class="pl-pds">"</span></span>)));
  
  julia<span class="pl-k">&gt;</span> img2 <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>mandrill<span class="pl-pds">"</span></span>);
  
  julia<span class="pl-k">&gt;</span> img3 <span class="pl-k">=</span> <span class="pl-c1">testimage</span>(<span class="pl-s"><span class="pl-pds">"</span>simple_3d_ball.tif<span class="pl-pds">"</span></span>); <span class="pl-c"><span class="pl-c">#</span> A 3D dataset</span>
  
  julia<span class="pl-k">&gt;</span> v1 <span class="pl-k">=</span> <span class="pl-c1">view5d</span>(img1);
  
  julia<span class="pl-k">&gt;</span> v2 <span class="pl-k">=</span> <span class="pl-c1">view5d</span>(img2);
  
  julia<span class="pl-k">&gt;</span> v3 <span class="pl-k">=</span> <span class="pl-c1">view5d</span>(img3);</pre></div>
<h2><a id="user-content-supported-datatypes" class="anchor" aria-hidden="true" href="#supported-datatypes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Supported Datatypes</h2>
<p>The interaction to julia is currently at a basic level of invoking the viewer using existing data. However, it already supports a wide range of data formats: <code>Float32</code>, <code>Float64</code>, <code>UInt8</code>, <code>Int8</code>, <code>UInt16</code>, <code>Int16</code>, <code>UInt32</code>, <code>Int32</code>, <code>Int</code>.
<code>Complex32</code>, <code>RGB</code> and <code>Gray</code></p>
<h2><a id="user-content-tracking-over-time" class="anchor" aria-hidden="true" href="#tracking-over-time"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Tracking over Time</h2>
<p><code>View5D</code> also supports displaying and interacting with tracking in 3D over time (and other combinations) datasets.  This can come in handy for single particle or cell tracking. A particularly interesting feature is that the data can be pinned (aligned) to a chosen track.</p>
<h2><a id="user-content-menus" class="anchor" aria-hidden="true" href="#menus"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Menus</h2>
<p><code>View5D</code> has 3 context menus (main panel, element view panel and general) with large range of ways to change the display. A system of equidistant location (and brightness) information (scaling and offset) is also present but not yet integrated into julia.</p>
<h2><a id="user-content-complex-data" class="anchor" aria-hidden="true" href="#complex-data"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Complex Data</h2>
<p>Display of <code>Complex</code>-valued data can be toggled between <code>magnitude</code>, <code>phase</code>, <code>real</code> and <code>imaginary</code> part.  A complex-valued array by default switches the viewer to a <code>gamma</code> of 0.3 easing the inspection of Fourier-transformed data. However, gamma is adjustable interactively as well as when invoking the viewer.</p>
<h1><a id="user-content-background" class="anchor" aria-hidden="true" href="#background"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Background</h1>
<p>See this YouTube Video for more details:
<a href="https://www.youtube.com/watch?v=fqa82MmJlAA&amp;list=PL3LueK3ij6Wm2VjaaibNdulxFvA6VhVRv" rel="nofollow"><img src="docs/src/assets/youtube.png" alt="IMAGE ALT TEXT" style="max-width:100%;"></a></p>
<p>The Java viewer <a href="https://nanoimaging.de/View5D" rel="nofollow">View5D</a> has been integrated into Julia with the help of <a href="https://github.com/JuliaInterop/JavaCall.jl">JavaCall.jl</a>.  Currently the viewer has its full Java functionality which includes displaying and interacting with 5D data. Generating up to three-dimensional histograms and interacting with them to select regions of interest in the 3D histogram but shown as a selection in the data. It allows selection of a gate <code>element</code> where thresholds can be applied to which have an effect on statistical evaluation (mean, max, min) in other <code>element</code>s if the <code>gate</code> is activated.
It further supports multiplicative overlay of colors. This feature is useful when processed data (e.g. local orientation information or polarization direction or ratios) needs to be presented along with brightness data. By choosing a gray-valued and a  constant brightness value-only (HSV) colormap for brightness and orientation data respectively, in multiplicative overlay mode a result is obtained that looks like the orientation information is staining the brightness. These results look often much nicer compared to gating-based display based on a brightness-gate, which is also supported.
Color display of floating-point or 16 or higher bit data supports adaptively updating colormaps.
Zooming in on a colormap,  by changing the lower and upper display threshold, for some time the colormap is simply changed to yield a smooth experience but occasionally the cached display data is recomputed to avoid loosing fine granularity on the color levels.</p>
<h1><a id="user-content-list-of-some-useful-commands-to-interact-with-view5d-from-julia" class="anchor" aria-hidden="true" href="#list-of-some-useful-commands-to-interact-with-view5d-from-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>List of some useful commands to interact with View5D from julia</h1>
<ul>
<li><code>view5d()</code>: visualizes data. Via "mode" it can be selected whether a new viewer will be used (<code>mode="new"</code>) or the data is appended to the existing viewer via the element (<code>mode="add_time"</code>) or time direction (<code>mode="add_time"</code>). Data can also be replacing currently displayed data (<code>mode="replace"</code>), which is useful to display iterative updates.</li>
<li><code>process_keys()</code>: the easiest way to remote-control the viewer by sending it key-strokes. Be careful: almost all keys have a meaning assigned and the viewer has no undo function.</li>
<li><code>set_display_size()</code>: sets the size (in pixels) this viewer occupies on the screen.</li>
<li><code>set_title()</code>: sets a new title to the viewer window.</li>
<li><code>to_front()</code>: brings the viewer to the front</li>
<li><code>set_gamma()</code>: sets the gamma display-value for a particular color channel (element)</li>
<li><code>set_min_max_thresh()</code>: sets the minimum and maximum display value for a particular color channel (element).</li>
<li><code>export_marker_lists()</code>, <code>import_marker_lists()</code>: these functions allow you to display location information such as obtained from tracking algorithms.</li>
</ul>
<h1><a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Known issues</h1>
<ul>
<li>Current problems of <code>View5D</code> are that it is not well suited to displaying huge datasets. This is due to memory usage and the display slowing down due to on-the-fly calculations of features such as averages and the like.</li>
</ul>
</article></div>