<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-bartiojl" class="anchor" aria-hidden="true" href="#bartiojl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>BartIO.jl</h1>
<p dir="auto"><a href="https://magneticresonanceimaging.github.io/BartIO.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/9b14128404acd81a6063eb5bef047e06339f786dac576e3dd9f740c233dbb95d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c617465737425323072656c656173652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-latest%20release-blue.svg" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/MagneticResonanceImaging/BartIO.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e280cd88d6b538a198e66960f7d52c1c6341b324ba36dd0ba1cd6a21910f9489/68747470733a2f2f636f6465636f762e696f2f67682f4d61676e657469635265736f6e616e6365496d6167696e672f42617274494f2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/MagneticResonanceImaging/BartIO.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">BartIO.jl is a Julia package in order to interact with the <a href="https://mrirecon.github.io/bart/" rel="nofollow">Berkeley Advanced Reconstruction Toolbox (BART)</a>.</p>
<p dir="auto">This package offers the possibility to</p>
<ul dir="auto">
<li>read and write cfl/hdr files used by BART</li>
<li>Call BART command (requires a <a href="https://github.com/mrirecon/bart">BART</a> installation</li>
</ul>
<h2 dir="auto"><a id="user-content-inputoutput-files-in-the-bart-format-cfl--hdr" class="anchor" aria-hidden="true" href="#inputoutput-files-in-the-bart-format-cfl--hdr"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Input/Output files in the BART format (.cfl + .hdr)</h2>
<p dir="auto">To load BART data (stored in a .cfl and a .hdr header file), simply call <code>read_cfl(filename)</code>, where <code>filename</code> can be either be without a filename extension, or it can include <code>.cfl</code> or <code>.hdr</code>.</p>
<p dir="auto">To write BART compatible files, call  <code>write_cfl(filename, x)</code>, where <code>filename</code> can be either be without a filename extension, or it can include <code>.cfl</code> or <code>.hdr</code> and <code>x</code> is the data.</p>
<h2 dir="auto"><a id="user-content-calling-bart-functions" class="anchor" aria-hidden="true" href="#calling-bart-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Calling BART functions</h2>
<p dir="auto">BartIO replicates the functionality of the <a href="https://github.com/mrirecon/bart/blob/master/python/bart.py">Python wrapper</a></p>
<h3 dir="auto"><a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Requirements</h3>
<p dir="auto">BART has to be installed/compiled.</p>
<h3 dir="auto"><a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Setup</h3>
<p dir="auto">You will have to tell BartIO.jl where to find the BART executable:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="    using BartIO
    set_bart_path(&quot;/path/to/bart&quot;)"><pre>    <span class="pl-k">using</span> BartIO
    <span class="pl-c1">set_bart_path</span>(<span class="pl-s"><span class="pl-pds">"</span>/path/to/bart<span class="pl-pds">"</span></span>)</pre></div>
<h3 dir="auto"><a id="user-content-how-to-use-bartiojl" class="anchor" aria-hidden="true" href="#how-to-use-bartiojl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to use BartIO.jl</h3>
<p dir="auto">BART functions ca be called, e.g., by either of the to calls:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="bart(0,&quot;version&quot;)
k_phant = bart(1,&quot;phantom -x64 -k&quot;)"><pre><span class="pl-c1">bart</span>(<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">"</span>version<span class="pl-pds">"</span></span>)
k_phant <span class="pl-k">=</span> <span class="pl-c1">bart</span>(<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">"</span>phantom -x64 -k<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">In the first example, the leading argument <code>0</code> indicates that <code>bart</code> will not return anything. In the second example, the leading <code>1</code> indicates that <code>bart</code> will return 1 object. For certain functions, you will have provide BART with data, which can be done in the following way:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="traj = bart(1,&quot;traj -x 128 -y 256 -r&quot;)
k_phant = bart(1,&quot;phantom -k -t&quot;, traj)
im_phant = bart(1,&quot;nufft -i&quot;, traj, k_phant)"><pre>traj <span class="pl-k">=</span> <span class="pl-c1">bart</span>(<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">"</span>traj -x 128 -y 256 -r<span class="pl-pds">"</span></span>)
k_phant <span class="pl-k">=</span> <span class="pl-c1">bart</span>(<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">"</span>phantom -k -t<span class="pl-pds">"</span></span>, traj)
im_phant <span class="pl-k">=</span> <span class="pl-c1">bart</span>(<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">"</span>nufft -i<span class="pl-pds">"</span></span>, traj, k_phant)</pre></div>
<p dir="auto">where <code>traj</code> and <code>k_phant</code> are arrays of <code>ComplexF32</code> (BART works with single precision). Note, if you pass multiple arguments, they are concatenated at the end of the command line. The last 2 lines are equivalent to the command line call</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="bart phantom -k -t traj k_phant
bart nufft -i traj k_phant im_phant"><pre>bart phantom -k -t traj k_phant
bart nufft -i traj k_phant im_phant</pre></div>
<p dir="auto">Alternatively you can pass optional arrays with keywords</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="k_phant = bart(1,&quot;phantom -k&quot;, t=traj)"><pre>k_phant <span class="pl-k">=</span> <span class="pl-c1">bart</span>(<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">"</span>phantom -k<span class="pl-pds">"</span></span>, t<span class="pl-k">=</span>traj)</pre></div>
<p dir="auto">To print all available BART functions, you can call <code>bart()</code> without arguments:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="bart()"><pre><span class="pl-c1">bart</span>()</pre></div>
<p dir="auto">If you need help for the function you can use:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="bart(0,&quot;pics -h&quot;)"><pre class="notranslate"><code>bart(0,"pics -h")
</code></pre></div>
<h3 dir="auto"><a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Alternatives</h3>
<p dir="auto">As an alternative, you can, from within Julia, manually perform a system call of BART:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pathto_bart_exec=&quot;/home/CODE/bart-master/bart&quot;
run(`$pathto_bart_exec version`)"><pre>pathto_bart_exec<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>/home/CODE/bart-master/bart<span class="pl-pds">"</span></span>
<span class="pl-c1">run</span>(<span class="pl-s"><span class="pl-pds">`</span>$pathto_bart_exec version<span class="pl-pds">`</span></span>)</pre></div>
</article></div>