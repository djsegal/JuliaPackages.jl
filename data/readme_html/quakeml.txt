<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-quakeml" class="anchor" aria-hidden="true" href="#quakeml"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>QuakeML</h1>
<h2><a id="user-content-build-status" class="anchor" aria-hidden="true" href="#build-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Build status</h2>
<p><a href="https://travis-ci.org/anowacki/QuakeML.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b16dfa4aa1bfe1391e97ff52211d783936a4a3558c7bd3a50dd9ce327c1138fb/68747470733a2f2f7472617669732d63692e6f72672f616e6f7761636b692f5175616b654d4c2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/anowacki/QuakeML.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/AndyNowacki/quakeml-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/6965cdf1b568dbfbcba20c41df366b709372a22cb249829d47cf82c496a592c2/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f76306335756a3373366e6639763032362f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/v0c5uj3s6nf9v026/branch/master?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/anowacki/QuakeML.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/65e74d84a801f4b834044e95792f4a1087e395cafd5e34f179c463169431a8fd/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f616e6f7761636b692f5175616b654d4c2e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/anowacki/QuakeML.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<h2><a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Documentation</h2>
<p><a href="https://anowacki.github.io/QuakeML.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://anowacki.github.io/QuakeML.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-what-is-quakemljl" class="anchor" aria-hidden="true" href="#what-is-quakemljl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>What is QuakeML.jl?</h2>
<p>QuakeML.jl is a Julia package to read and write information about
earthquakes and seismic events in the
<a href="https://quake.ethz.ch/quakeml" rel="nofollow">QuakeML format</a>.</p>
<h2><a id="user-content-user-facing-functions" class="anchor" aria-hidden="true" href="#user-facing-functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>User-facing functions</h2>
<ul>
<li><code>QuakeML.read</code>: Read a QuakeML file.  (This function is not exported.
and requires the module prefix <code>QuakeML</code>.)</li>
<li><code>QuakeML.readstring</code>: Read a QuakeML document from a string.  (This
function is not exported.)</li>
<li><code>write</code>: Write a set of <code>EventParameters</code> as a QuakeML XML document.</li>
<li><code>preferred_focal_mechanism</code>: Get the preferred focal mechanism for an event</li>
<li><code>preferred_magnitude</code>: Get the preferred magnitude for an event</li>
<li><code>preferred_origin</code>: Get the preferred origin for an event</li>
<li><code>has_focal_mechanism</code>: Check to see if an event contains any
focal mechanisms</li>
<li><code>has_magnitude</code>: Check to see if an event contains any magnitude</li>
<li><code>has_origin</code>: Check to see if an event contains any origins</li>
<li><code>quakeml</code>: Create an XML document from a set of events which can
be written with <code>print(io, quakeml(qml))</code></li>
</ul>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<h3><a id="user-content-reading" class="anchor" aria-hidden="true" href="#reading"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Reading</h3>
<p>To read a QuakeML document on your computer (e.g., one of the ones
supplied with QuakeML.jl), do:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using QuakeML

julia&gt; qml_file = joinpath(dirname(dirname(pathof(QuakeML))), &quot;test&quot;, &quot;data&quot;, &quot;nepal_mw7.2.qml&quot;);

julia&gt; qml = QuakeML.read(qml_file)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> QuakeML

julia<span class="pl-k">&gt;</span> qml_file <span class="pl-k">=</span> <span class="pl-c1">joinpath</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">dirname</span>(<span class="pl-c1">pathof</span>(QuakeML))), <span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>data<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>nepal_mw7.2.qml<span class="pl-pds">"</span></span>);

julia<span class="pl-k">&gt;</span> qml <span class="pl-k">=</span> QuakeML<span class="pl-k">.</span><span class="pl-c1">read</span>(qml_file)</pre></div>
<p>To read a set of events from a string:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; QuakeML.readstring(String(read(qml_file)))
"><pre>julia<span class="pl-k">&gt;</span> QuakeML<span class="pl-k">.</span><span class="pl-c1">readstring</span>(<span class="pl-c1">String</span>(<span class="pl-c1">read</span>(qml_file)))</pre></div>
<h3><a id="user-content-writing" class="anchor" aria-hidden="true" href="#writing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Writing</h3>
<p>To write a set of events to disk:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; write(&quot;file/on/disk.xml&quot;, qml)
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">write</span>(<span class="pl-s"><span class="pl-pds">"</span>file/on/disk.xml<span class="pl-pds">"</span></span>, qml)</pre></div>
<p>For more control of output, convert your set of <code>EventParameters</code>
into an XML document, and write that:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; xml = quakeml(qml);

julia&gt; println(&quot;/tmp/quakeml_file.qml&quot;, quakeml(qml))
"><pre>julia<span class="pl-k">&gt;</span> xml <span class="pl-k">=</span> <span class="pl-c1">quakeml</span>(qml);

julia<span class="pl-k">&gt;</span> <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>/tmp/quakeml_file.qml<span class="pl-pds">"</span></span>, <span class="pl-c1">quakeml</span>(qml))</pre></div>
<p>Note that here <code>xml</code> is an
<a href="https://bicycle1885.github.io/EzXML.jl/stable/manual/" rel="nofollow"><code>EzXML.XMLDocument</code></a>.</p>
<p>Or convert your XML document into a <code>String</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; str = string(xml)
"><pre>julia<span class="pl-k">&gt;</span> str <span class="pl-k">=</span> <span class="pl-c1">string</span>(xml)</pre></div>
<h2><a id="user-content-export-of-types" class="anchor" aria-hidden="true" href="#export-of-types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Export of types</h2>
<p>By default, QuakeML does not export the types it uses.  The user should
usually create sets of <code>EventParameters</code>, for example, by calling the
type's qualified constructor:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; QuakeML.EventParameters()
QuakeML.EventParameters
  comment: Array{QuakeML.Comment}((0,))
  event: Array{QuakeML.Event}((0,))
  description: Missing missing
  creation_info: Missing missing
  public_id: QuakeML.ResourceIdentifier
"><pre>julia<span class="pl-k">&gt;</span> QuakeML<span class="pl-k">.</span><span class="pl-c1">EventParameters</span>()
QuakeML<span class="pl-k">.</span>EventParameters
  comment<span class="pl-k">:</span> <span class="pl-c1">Array</span><span class="pl-c1">{QuakeML.Comment}</span>((<span class="pl-c1">0</span>,))
  event<span class="pl-k">:</span> <span class="pl-c1">Array</span><span class="pl-c1">{QuakeML.Event}</span>((<span class="pl-c1">0</span>,))
  description<span class="pl-k">:</span> Missing <span class="pl-c1">missing</span>
  creation_info<span class="pl-k">:</span> Missing <span class="pl-c1">missing</span>
  public_id<span class="pl-k">:</span> QuakeML<span class="pl-k">.</span>ResourceIdentifier</pre></div>
<p>To allow less typing, one could create a module alias, such as:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; const QML = QuakeML
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">const</span> QML <span class="pl-k">=</span> QuakeML</pre></div>
<h3><a id="user-content-quakemltypes-module" class="anchor" aria-hidden="true" href="#quakemltypes-module"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><code>QuakeML.Types</code> module</h3>
<p>As an <strong>experimental</strong> feature, the user may use the <code>QuakeML.Types</code>
module, which exports all the types which are needed to construct a
full set of <code>EventParameters</code>.  For example, to specify a catalogue
with one event with an unspecified magnitude type with magnitude 1.0:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using QuakeML.Types

julia&gt; event = Event(magnitude=[Magnitude(mag=1.0)])
QuakeML.Event
  description: Array{QuakeML.EventDescription}((0,))
  comment: Array{QuakeML.Comment}((0,))
  focal_mechanism: Array{QuakeML.FocalMechanism}((0,))
  amplitude: Array{QuakeML.Amplitude}((0,))
  magnitude: Array{QuakeML.Magnitude}((1,))
  station_magnitude: Array{QuakeML.StationMagnitude}((0,))
  origin: Array{QuakeML.Origin}((0,))
  pick: Array{QuakeML.Pick}((0,))
  preferred_origin_id: Missing missing
  preferred_magnitude_id: Missing missing
  preferred_focal_mechanism_id: Missing missing
  type: Missing missing
  type_certainty: Missing missing
  creation_info: Missing missing
  public_id: QuakeML.ResourceIdentifier
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> QuakeML<span class="pl-k">.</span>Types

julia<span class="pl-k">&gt;</span> event <span class="pl-k">=</span> <span class="pl-c1">Event</span>(magnitude<span class="pl-k">=</span>[<span class="pl-c1">Magnitude</span>(mag<span class="pl-k">=</span><span class="pl-c1">1.0</span>)])
QuakeML<span class="pl-k">.</span>Event
  description<span class="pl-k">:</span> <span class="pl-c1">Array</span><span class="pl-c1">{QuakeML.EventDescription}</span>((<span class="pl-c1">0</span>,))
  comment<span class="pl-k">:</span> <span class="pl-c1">Array</span><span class="pl-c1">{QuakeML.Comment}</span>((<span class="pl-c1">0</span>,))
  focal_mechanism<span class="pl-k">:</span> <span class="pl-c1">Array</span><span class="pl-c1">{QuakeML.FocalMechanism}</span>((<span class="pl-c1">0</span>,))
  amplitude<span class="pl-k">:</span> <span class="pl-c1">Array</span><span class="pl-c1">{QuakeML.Amplitude}</span>((<span class="pl-c1">0</span>,))
  magnitude<span class="pl-k">:</span> <span class="pl-c1">Array</span><span class="pl-c1">{QuakeML.Magnitude}</span>((<span class="pl-c1">1</span>,))
  station_magnitude<span class="pl-k">:</span> <span class="pl-c1">Array</span><span class="pl-c1">{QuakeML.StationMagnitude}</span>((<span class="pl-c1">0</span>,))
  origin<span class="pl-k">:</span> <span class="pl-c1">Array</span><span class="pl-c1">{QuakeML.Origin}</span>((<span class="pl-c1">0</span>,))
  pick<span class="pl-k">:</span> <span class="pl-c1">Array</span><span class="pl-c1">{QuakeML.Pick}</span>((<span class="pl-c1">0</span>,))
  preferred_origin_id<span class="pl-k">:</span> Missing <span class="pl-c1">missing</span>
  preferred_magnitude_id<span class="pl-k">:</span> Missing <span class="pl-c1">missing</span>
  preferred_focal_mechanism_id<span class="pl-k">:</span> Missing <span class="pl-c1">missing</span>
  type<span class="pl-k">:</span> Missing <span class="pl-c1">missing</span>
  type_certainty<span class="pl-k">:</span> Missing <span class="pl-c1">missing</span>
  creation_info<span class="pl-k">:</span> Missing <span class="pl-c1">missing</span>
  public_id<span class="pl-k">:</span> QuakeML<span class="pl-k">.</span>ResourceIdentifier</pre></div>
<h2><a id="user-content-repo-status" class="anchor" aria-hidden="true" href="#repo-status"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Repo status</h2>
<p>QuakeML.jl is beta software.  All functionality included is tested
and works as advertised, but the public API of the package is
still to be decided and may break in v0.2, as per
<a href="https://semver.org/" rel="nofollow">SemVer</a>.  So long as any packages you have
created declare their compatibility with QuakeML.jl correctly,
this will cause no problems.</p>
<h3><a id="user-content-activating-debugging-messages" class="anchor" aria-hidden="true" href="#activating-debugging-messages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Activating debugging messages</h3>
<p>To turn debugging messages on when running QuakeML, set the
environment variable <code>JULIA_DEBUG</code> to <code>QuakeML</code> or <code>"all"</code>, which can
even be done at run time in the repl like so:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; ENV[&quot;JULIA_DEBUG&quot;] = QuakeML
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">ENV</span>[<span class="pl-s"><span class="pl-pds">"</span>JULIA_DEBUG<span class="pl-pds">"</span></span>] <span class="pl-k">=</span> QuakeML</pre></div>
<p>Unsetting this value will turn these debugging messages off.</p>
<p>See the <a href="https://docs.julialang.org/en/v1/stdlib/Logging/#Environment-variables-1" rel="nofollow">manual section on environment variables and logging messages</a> for more information on setting the debug level for QuakeML or other modules.</p>
</article></div>