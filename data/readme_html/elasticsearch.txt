<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-elasticsearch" class="anchor" aria-hidden="true" href="#elasticsearch"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ElasticSearch</h1>
<p dir="auto"><em>A ElasticSearch client for Julia</em></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">This package is registered in the  <a href="https://github.com/JuliaRegistries/General"><code>General</code></a> registryï¼Œso you can install it by package name or GitHub address.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]
pkg&gt; add ElasticSearch  # add https://github.com/lotcher/ElasticSearch.jl.git"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> add ElasticSearch  <span class="pl-c"><span class="pl-c">#</span> add https://github.com/lotcher/ElasticSearch.jl.git</span></pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">Before using all methods, you need to create an ES instance, like this</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ElasticSearch
es = ES()  # ES(&quot;http://:@localhost:9200&quot;)

# You can use this method: ES(; host, port, user, password, protocol) to construct the client you need
# Or directly pass in the complete URL like ES(&quot;https://elastic:elastic@localhost:9300&quot;)"><pre><span class="pl-k">using</span> ElasticSearch
es <span class="pl-k">=</span> <span class="pl-c1">ES</span>()  <span class="pl-c"><span class="pl-c">#</span> ES("http://:@localhost:9200")</span>

<span class="pl-c"><span class="pl-c">#</span> You can use this method: ES(; host, port, user, password, protocol) to construct the client you need</span>
<span class="pl-c"><span class="pl-c">#</span> Or directly pass in the complete URL like ES("https://elastic:elastic@localhost:9300")</span></pre></div>
<h3 dir="auto"><a id="user-content-search" class="anchor" aria-hidden="true" href="#search"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>search</h3>
<p dir="auto">You can use the <strong>search</strong> method to pass in JSON, Dict or built-in Query objects</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="search(es, 'index', &quot;{}&quot;)  # be equal to GET /index/_search  body=&quot;{}&quot;

# You can also pass in other methods
# search(es, 'index', Dict())
# search(es, 'index', Query([]))"><pre><span class="pl-c1">search</span>(es, <span class="pl-s"><span class="pl-pds">'</span>index<span class="pl-pds">'</span></span>, <span class="pl-s"><span class="pl-pds">"</span>{}<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> be equal to GET /index/_search  body="{}"</span>

<span class="pl-c"><span class="pl-c">#</span> You can also pass in other methods</span>
<span class="pl-c"><span class="pl-c">#</span> search(es, 'index', Dict())</span>
<span class="pl-c"><span class="pl-c">#</span> search(es, 'index', Query([]))</span></pre></div>
<p dir="auto">However, when you use complex query statements, it is recommended to use Query, as shown below</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="search(es=es, index=&quot;news&quot;) do
	[
        FromBlock(0),
        SizeBlock(10),
        [
            RangeBody(&quot;correlation&quot;, Dict(&quot;gte&quot;=&gt;0.5)),
            RangeBody(&quot;emotion&quot;, Dict(&quot;gte&quot;=&gt;0.5)),
            MultiMatchBody([&quot;contents&quot;,&quot;title&quot;], &quot;test&quot;)
        ] |&gt; MustQueryBlock,
        HighlightBlock([&quot;contents&quot;,&quot;title&quot;]),
        SourceBlock([&quot;img_urls&quot;,&quot;id&quot;,&quot;time&quot;,&quot;title&quot;,&quot;url&quot;])
    ] |&gt; Query
end"><pre><span class="pl-c1">search</span>(es<span class="pl-k">=</span>es, index<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>news<span class="pl-pds">"</span></span>) <span class="pl-k">do</span>
	[
        <span class="pl-c1">FromBlock</span>(<span class="pl-c1">0</span>),
        <span class="pl-c1">SizeBlock</span>(<span class="pl-c1">10</span>),
        [
            <span class="pl-c1">RangeBody</span>(<span class="pl-s"><span class="pl-pds">"</span>correlation<span class="pl-pds">"</span></span>, <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>gte<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">0.5</span>)),
            <span class="pl-c1">RangeBody</span>(<span class="pl-s"><span class="pl-pds">"</span>emotion<span class="pl-pds">"</span></span>, <span class="pl-c1">Dict</span>(<span class="pl-s"><span class="pl-pds">"</span>gte<span class="pl-pds">"</span></span><span class="pl-k">=&gt;</span><span class="pl-c1">0.5</span>)),
            <span class="pl-c1">MultiMatchBody</span>([<span class="pl-s"><span class="pl-pds">"</span>contents<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>title<span class="pl-pds">"</span></span>], <span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>)
        ] <span class="pl-k">|&gt;</span> MustQueryBlock,
        <span class="pl-c1">HighlightBlock</span>([<span class="pl-s"><span class="pl-pds">"</span>contents<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>title<span class="pl-pds">"</span></span>]),
        <span class="pl-c1">SourceBlock</span>([<span class="pl-s"><span class="pl-pds">"</span>img_urls<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>id<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>time<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>title<span class="pl-pds">"</span></span>,<span class="pl-s"><span class="pl-pds">"</span>url<span class="pl-pds">"</span></span>])
    ] <span class="pl-k">|&gt;</span> Query
<span class="pl-k">end</span></pre></div>
<p dir="auto">It is equivalent to constructing the following query statements.</p>
<div class="highlight highlight-source-json notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="GET news/_Search
{
  &quot;size&quot;: 10,
  &quot;from&quot;: 0,
  &quot;query&quot;: {
    &quot;bool&quot;: {
      &quot;must&quot;: [
        {
          &quot;range&quot;: {
            &quot;correlation&quot;: {
              &quot;gte&quot;: 0.5
            }
          }
        },
        {
          &quot;range&quot;: {
            &quot;emotion&quot;: {
              &quot;gte&quot;: 0.5
            }
          }
        },
        {
          &quot;multi_match&quot;: {
            &quot;fields&quot;: [
              &quot;contents&quot;,
              &quot;title&quot;
            ],
            &quot;query&quot;: &quot;test&quot;
          }
        }
      ]
    }
  },
  &quot;highlight&quot;: {
    &quot;fields&quot;: {
      &quot;contents&quot;: {},
      &quot;title&quot;: {}
    }
  },
  &quot;_source&quot;: [
    &quot;img_urls&quot;,
    &quot;id&quot;,
    &quot;time&quot;,
    &quot;title&quot;,
    &quot;url&quot;
  ]
}"><pre><span class="pl-ii">GET news/_Search</span>
{
  <span class="pl-ent">"size"</span>: <span class="pl-c1">10</span>,
  <span class="pl-ent">"from"</span>: <span class="pl-c1">0</span>,
  <span class="pl-ent">"query"</span>: {
    <span class="pl-ent">"bool"</span>: {
      <span class="pl-ent">"must"</span>: [
        {
          <span class="pl-ent">"range"</span>: {
            <span class="pl-ent">"correlation"</span>: {
              <span class="pl-ent">"gte"</span>: <span class="pl-c1">0.5</span>
            }
          }
        },
        {
          <span class="pl-ent">"range"</span>: {
            <span class="pl-ent">"emotion"</span>: {
              <span class="pl-ent">"gte"</span>: <span class="pl-c1">0.5</span>
            }
          }
        },
        {
          <span class="pl-ent">"multi_match"</span>: {
            <span class="pl-ent">"fields"</span>: [
              <span class="pl-s"><span class="pl-pds">"</span>contents<span class="pl-pds">"</span></span>,
              <span class="pl-s"><span class="pl-pds">"</span>title<span class="pl-pds">"</span></span>
            ],
            <span class="pl-ent">"query"</span>: <span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>
          }
        }
      ]
    }
  },
  <span class="pl-ent">"highlight"</span>: {
    <span class="pl-ent">"fields"</span>: {
      <span class="pl-ent">"contents"</span>: {},
      <span class="pl-ent">"title"</span>: {}
    }
  },
  <span class="pl-ent">"_source"</span>: [
    <span class="pl-s"><span class="pl-pds">"</span>img_urls<span class="pl-pds">"</span></span>,
    <span class="pl-s"><span class="pl-pds">"</span>id<span class="pl-pds">"</span></span>,
    <span class="pl-s"><span class="pl-pds">"</span>time<span class="pl-pds">"</span></span>,
    <span class="pl-s"><span class="pl-pds">"</span>title<span class="pl-pds">"</span></span>,
    <span class="pl-s"><span class="pl-pds">"</span>url<span class="pl-pds">"</span></span>
  ]
}</pre></div>
<p dir="auto">Similarly, you can also construct any ES DSL statements with built-in objects</p>
</article></div>