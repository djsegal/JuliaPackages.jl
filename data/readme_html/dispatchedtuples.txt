<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-dispatchedtuplesjl" class="anchor" aria-hidden="true" href="#dispatchedtuplesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>DispatchedTuples.jl</h1>
<table>
<thead>
<tr>
<th align="right"></th>
<th align="left"></th>
</tr>
</thead>
<tbody>
<tr>
<td align="right"><strong>Docs Build</strong></td>
<td align="left"><a href="https://github.com/charleskawczynski/DispatchedTuples.jl/actions?query=workflow%3ADocumentation"><img src="https://github.com/charleskawczynski/DispatchedTuples.jl/workflows/Documentation/badge.svg" alt="docs build" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>Documentation</strong></td>
<td align="left"><a href="https://charleskawczynski.github.io/DispatchedTuples.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>GHA CI</strong></td>
<td align="left"><a href="https://github.com/charleskawczynski/DispatchedTuples.jl/actions?query=workflow%3Aci"><img src="https://github.com/charleskawczynski/DispatchedTuples.jl/workflows/ci/badge.svg" alt="gha ci" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>Code Coverage</strong></td>
<td align="left"><a href="https://codecov.io/gh/charleskawczynski/DispatchedTuples.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/e299db85bfcd6203aa5a2ba10da56e95f0bfb70a65280c09cd646687e2d12fd2/68747470733a2f2f636f6465636f762e696f2f67682f636861726c65736b6177637a796e736b692f446973706174636865645475706c65732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/charleskawczynski/DispatchedTuples.jl/branch/main/graph/badge.svg" style="max-width:100%;"></a></td>
</tr>
<tr>
<td align="right"><strong>Bors enabled</strong></td>
<td align="left"><a href="https://app.bors.tech/repositories/32073" rel="nofollow"><img src="https://camo.githubusercontent.com/0974fbc63eeb2ed86d518ed0afaafe112e9e907ffa1c459396b0be2434c4f83b/68747470733a2f2f626f72732e746563682f696d616765732f62616467655f736d616c6c2e737667" alt="bors" data-canonical-src="https://bors.tech/images/badge_small.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<h2><a id="user-content-what-are-dispatched-tuples" class="anchor" aria-hidden="true" href="#what-are-dispatched-tuples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>What are dispatched tuples?</h2>
<p><code>DispatchedTuple</code>s are like immutable dictionaries (so, they're technically more like <code>NamedTuple</code>s) except that the keys are <strong>instances of types</strong>. Also, because <code>DispatchedTuple</code>s are backed by tuples, they are GPU-friendly.</p>
<p>There are two kinds of <code>DispatchedTuple</code>s with different behavior:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="┌────────────────────────────────────┬───────────────────────────┬────────────────────┐
│                       Return value │           DispatchedTuple │ DispatchedSet      │
│                                    │ (non-unique keys allowed) │ (unique keys only) │
├────────────────────────────────────┼───────────────────────────┼────────────────────┤
│                               Type │                     Tuple │              Value │
│ Unregistered key (without default) │                        () │              error │
│    Unregistered key (with default) │                (default,) │            default │
│                    Duplicative key │     all registered values │          one value │
└────────────────────────────────────┴───────────────────────────┴────────────────────┘
"><pre><code>┌────────────────────────────────────┬───────────────────────────┬────────────────────┐
│                       Return value │           DispatchedTuple │ DispatchedSet      │
│                                    │ (non-unique keys allowed) │ (unique keys only) │
├────────────────────────────────────┼───────────────────────────┼────────────────────┤
│                               Type │                     Tuple │              Value │
│ Unregistered key (without default) │                        () │              error │
│    Unregistered key (with default) │                (default,) │            default │
│                    Duplicative key │     all registered values │          one value │
└────────────────────────────────────┴───────────────────────────┴────────────────────┘
</code></pre></div>
<h2><a id="user-content-creating-and-using-dispatched-tuples" class="anchor" aria-hidden="true" href="#creating-and-using-dispatched-tuples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Creating and using dispatched tuples</h2>
<p><code>DispatchedTuple</code> and <code>DispatchedSet</code>s have three constructors:</p>
<ol>
<li>A variable number of (vararg) <code>Pair</code>s + keyword default</li>
<li>A <code>Tuple</code> of <code>Pair</code>s + positional default</li>
<li>A <code>Tuple</code> of 2-element <code>Tuple</code>s (the first element being the "key", and the second the "value") + positional default</li>
</ol>
<p>The <code>first</code> field of the <code>Pair</code> (the "key") is <strong>an instance of the type you want to dispatch on</strong>. The <code>second</code> field of the <code>Pair</code> is the quantity (the "value", which can be anything) returned by <code>dtup[key]</code>.</p>
<p>A default value, if passed to <code>DispatchedTuple</code> and <code>DispatchedSet</code>, is returned for any unrecognized keys as shown in the table above.</p>
<h2><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example</h2>
<p>Here is an example in action</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; using DispatchedTuples

julia&gt; struct Foo end;

julia&gt; struct Bar end;

julia&gt; struct Baz end;

julia&gt; dtup = DispatchedTuple((
                Pair(Foo(), 1),
                Pair(Foo(), 2),
                Pair(Bar(), 3),
              ))
DispatchedTuple with 3 entries:
  Foo() =&gt; 1
  Foo() =&gt; 2
  Bar() =&gt; 3
  default =&gt; ()


julia&gt; dtup[Foo()]
(1, 2)

julia&gt; dtup[Bar()]
(3,)

julia&gt; dtup[Baz()]
()
"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> DispatchedTuples

julia<span class="pl-k">&gt;</span> <span class="pl-k">struct</span> Foo <span class="pl-k">end</span>;

julia<span class="pl-k">&gt;</span> <span class="pl-k">struct</span> Bar <span class="pl-k">end</span>;

julia<span class="pl-k">&gt;</span> <span class="pl-k">struct</span> Baz <span class="pl-k">end</span>;

julia<span class="pl-k">&gt;</span> dtup <span class="pl-k">=</span> <span class="pl-c1">DispatchedTuple</span>((
                <span class="pl-c1">Pair</span>(<span class="pl-c1">Foo</span>(), <span class="pl-c1">1</span>),
                <span class="pl-c1">Pair</span>(<span class="pl-c1">Foo</span>(), <span class="pl-c1">2</span>),
                <span class="pl-c1">Pair</span>(<span class="pl-c1">Bar</span>(), <span class="pl-c1">3</span>),
              ))
DispatchedTuple with <span class="pl-c1">3</span> entries<span class="pl-k">:</span>
  <span class="pl-c1">Foo</span>() <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>
  <span class="pl-c1">Foo</span>() <span class="pl-k">=&gt;</span> <span class="pl-c1">2</span>
  <span class="pl-c1">Bar</span>() <span class="pl-k">=&gt;</span> <span class="pl-c1">3</span>
  default <span class="pl-k">=&gt;</span> ()


julia<span class="pl-k">&gt;</span> dtup[<span class="pl-c1">Foo</span>()]
(<span class="pl-c1">1</span>, <span class="pl-c1">2</span>)

julia<span class="pl-k">&gt;</span> dtup[<span class="pl-c1">Bar</span>()]
(<span class="pl-c1">3</span>,)

julia<span class="pl-k">&gt;</span> dtup[<span class="pl-c1">Baz</span>()]
()</pre></div>
</article></div>