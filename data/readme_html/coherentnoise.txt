<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/splash.png"><img src="docs/src/assets/splash.png" alt="Splash Image" style="max-width: 100%;"></a></p>
<p dir="auto"><a href="https://mfiano.github.io/CoherentNoise.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://mfiano.github.io/CoherentNoise.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
<a href="https://github.com/mfiano/CoherentNoise.jl/actions/workflows/CI.yml?query=branch%3Amain"><img src="https://github.com/mfiano/CoherentNoise.jl/actions/workflows/CI.yml/badge.svg?branch=main" alt="Build Status" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/99efe48bf7c01f2f742589b71a6943eed7eea450bd9134c6c35479f8bd2df5e6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6669616e6f2f436f686572656e744e6f6973652e6a6c"><img src="https://camo.githubusercontent.com/99efe48bf7c01f2f742589b71a6943eed7eea450bd9134c6c35479f8bd2df5e6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6669616e6f2f436f686572656e744e6f6973652e6a6c" alt="License" data-canonical-src="https://img.shields.io/github/license/mfiano/CoherentNoise.jl" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/ed975ce8a15d0e8f2b16623dfe2dede15139e968d1f2964c6ae933b62ef11222/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73706f6e736f72732f6d6669616e6f"><img src="https://camo.githubusercontent.com/ed975ce8a15d0e8f2b16623dfe2dede15139e968d1f2964c6ae933b62ef11222/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73706f6e736f72732f6d6669616e6f" alt="Sponsors" data-canonical-src="https://img.shields.io/github/sponsors/mfiano" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-whats-different-from-other-libraries-eg-libnoise" class="anchor" aria-hidden="true" href="#whats-different-from-other-libraries-eg-libnoise"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>What's different from other libraries (eg. libnoise)?</h2>
<ul dir="auto">
<li>
<p dir="auto">Many more noise algorithms than libnoise supported, and well-tested.</p>
</li>
<li>
<p dir="auto">Algorithms are consistently implemented in multiple dimensions, whereas libnoise only has
3-dimensional gradient noise.</p>
</li>
<li>
<p dir="auto">Some terminology corrections. For example, libnoise refers to multiple octaves of gradient noise
as "Perlin" noise. Perlin is an implementation of gradient noise, and is not defined in terms of a
fractal; infact, any noise algorithm can be "fractalized".</p>
</li>
<li>
<p dir="auto">Fix quite a few fundamental mathematical errors. It was quite the task re-implementing some
algorithms due to incorrect math, or the inclusion of magic numbers that differed among
implementations for various reasons.</p>
</li>
<li>
<p dir="auto">Ensure that all samplers emit values in the [-1.0, 1.0] range; something that becomes very
important when working with fractal-based noises, composition of complex noises, and in general is
something just expected when working with coherent noise.</p>
</li>
<li>
<p dir="auto">The Perlin noise implementation is <a href="https://cs.nyu.edu/~perlin/noise/" rel="nofollow">Ken Perlin's "Improved Noise"
algorithm</a>, unlike his classic Perlin noise algorithm found in
libnoise, which is sometimes just called gradient noise.</p>
</li>
<li>
<p dir="auto">Fractal samplers can be driven by any source sampler, not just gradient noise -- even other
fractal samplers.</p>
</li>
<li>
<p dir="auto">Additional modifier samplers.</p>
</li>
<li>
<p dir="auto">Traditional Simplex noise variants, even the original Simplex by Ken Perlin, all overshoot the
radial extent used for the signal reconstruction kernel. This results in unwanted artifacts when
the noise is used for certain applications. CoherentNoise adds an option to use a more correct
kernel to remove these artifacts. This is disabled by default. See the documentation for the
respective Simplex noise variant for more details. To the best of my knowledge, CoherentNoise is
the only library that offers this option for all Simplex noise variants.</p>
</li>
</ul>
<h2 dir="auto"><a id="user-content-available-samplers" class="anchor" aria-hidden="true" href="#available-samplers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Available samplers</h2>
<p dir="auto">The following noise algorithms and other samplers are implemented. If you would like to see support
for other algorithms, please file an issue or submit a pull request.</p>
<h3 dir="auto"><a id="user-content-noise-samplers" class="anchor" aria-hidden="true" href="#noise-samplers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Noise samplers</h3>
<p dir="auto">In the order of "recommended to try first":</p>
<ul dir="auto">
<li>OpenSimplex2: (2D, 3D, 4D)</li>
<li>Simplex: (1D, 2D, 3D, 4D)</li>
<li>OpenSimplex2S: (2D, 3D, 4D)</li>
<li>OpenSimplex: (2D, 3D, 4D)</li>
<li>Perlin: (1D, 2D, 3D, 4D)</li>
<li>Value cubic: (1D, 2D, 3D, 4D)</li>
<li>Value: (1D, 2D, 3D, 4D)</li>
<li>Worley: (1D, 2D, 3D, 4D)</li>
</ul>
<h3 dir="auto"><a id="user-content-pattern-samplers" class="anchor" aria-hidden="true" href="#pattern-samplers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Pattern samplers</h3>
<ul dir="auto">
<li>Constant: (1D)</li>
<li>Checkered: (2D)</li>
<li>Cylinders: (2D)</li>
<li>Spheres: (3D)</li>
</ul>
<h3 dir="auto"><a id="user-content-fractal-samplers" class="anchor" aria-hidden="true" href="#fractal-samplers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Fractal samplers</h3>
<ul dir="auto">
<li>fBm: (fractional Brownian motion; 1D, 2D, 3D, 4D)</li>
<li>Billow: (1D, 2D, 3D, 4D)</li>
<li>Multifractal: (1D, 2D, 3D, 4D)</li>
<li>Hybrid: (1D, 2D, 3D, 4D)</li>
<li>Ridged: (1D, 2D, 3D, 4D)</li>
</ul>
<h3 dir="auto"><a id="user-content-modifier-samplers" class="anchor" aria-hidden="true" href="#modifier-samplers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a href="https://mfiano.github.io/CoherentNoise.jl/stable/overview/#Modifier-samplers" rel="nofollow">Modifier samplers</a></h3>
</article></div>