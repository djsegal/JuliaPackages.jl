<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-qpsreader" class="anchor" aria-hidden="true" href="#qpsreader"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>QPSReader</h1>
<p>A package to read linear optimization problems in MPS format and quadratic optimization problems in QPS format.</p>
<table>
<thead>
<tr>
<th align="center"><strong>Linux and macOS</strong></th>
<th align="center"><strong>Windows</strong></th>
<th align="center"><strong>FreeBSD</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://travis-ci.org/JuliaSmoothOptimizers/QPSReader.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/b97aeb789fa48596ef5f503514dd1192ebfba3cb/68747470733a2f2f7472617669732d63692e6f72672f4a756c6961536d6f6f74684f7074696d697a6572732f5150535265616465722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaSmoothOptimizers/QPSReader.jl.svg?branch=master" style="max-width:100%;"></a></td>
<td align="center"><a href="https://ci.appveyor.com/project/dpo/qpsreader-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/48cd9dcc13eed2af836d9486761523576f567bab/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6d6e746e7368617934787564377438743f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/mntnshay4xud7t8t?svg=true" style="max-width:100%;"></a></td>
<td align="center"><a href="https://cirrus-ci.com/github/JuliaSmoothOptimizers/QPSReader.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2f9b23dacb81a951dbf1b72d9ffa8eefe631fa15/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f4a756c6961536d6f6f74684f7074696d697a6572732f5150535265616465722e6a6c2e737667" alt="Build Status" data-canonical-src="https://api.cirrus-ci.com/github/JuliaSmoothOptimizers/QPSReader.jl.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th align="center"><a href="https://coveralls.io/r/JuliaSmoothOptimizers/QPSReader.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/b1bb69ec370a4770f07d47d1be990b05eaa5ee67/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4a756c6961536d6f6f74684f7074696d697a6572732f5150535265616465722e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/JuliaSmoothOptimizers/QPSReader.jl/badge.svg?branch=master" style="max-width:100%;"></a></th>
<th align="center"><a href="https://codecov.io/github/JuliaSmoothOptimizers/QPSReader.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/d67dcab26a61096baee60c57d0a4ba1fc3a8fff7/68747470733a2f2f636f6465636f762e696f2f6769746875622f4a756c6961536d6f6f74684f7074696d697a6572732f5150535265616465722e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/JuliaSmoothOptimizers/QPSReader.jl/coverage.svg?branch=master" style="max-width:100%;"></a></th>
</tr>
</thead>
</table>
<p>The problems represented by the QPS format have the form</p>
<p align="center">
optimize   c₀ + cᵀ x + ½ xᵀ Q x
  
subject to   L ≤ Ax ≤ U and ℓ ≤ x ≤ u,
</p>
<p>where:</p>
<ul>
<li>"optimize" means either "minimize" or "maximize"</li>
<li><code>c₀</code> ∈ ℝ is a constant term, <code>c</code> ∈ ℝⁿ is the linear term, <code>Q = Qᵀ</code> is the <em>n×n</em> quadratic term,</li>
<li><code>A</code> is the <em>m×n</em> constraint matrix, <code>L</code>, <code>U</code> are constraint lower and upper bounds, respectively</li>
<li><code>ℓ</code>, <code>u</code> are variable lower and upper bounds, respectively</li>
</ul>
<p>Only continuous problems are supported at this time.
Integer and semi-continuous markers will be ignored.</p>
<h2><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick start</h2>
<h3><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h3>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> add QPSReader</pre></div>
<h3><a id="user-content-reading-a-file" class="anchor" aria-hidden="true" href="#reading-a-file"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Reading a file</h3>
<p>This package exports the <code>QPSData</code> data type and the <code>readqps()</code> function.
Because MPS is a subset of QPS, the <code>readqps()</code> function accepts both formats.
Because the SIF is a superset of QPS, QPS problems implemented as SIF files (such as those from the Maros-Meszaros collection) are also supported.</p>
<p>Both fixed and free format are supported (see below for format conventions).
To read a problem from a file:</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> qps <span class="pl-k">=</span> <span class="pl-c1">readqps</span>(<span class="pl-s"><span class="pl-pds">"</span>Q25FV47.QPS<span class="pl-pds">"</span></span>)  <span class="pl-c"><span class="pl-c">#</span> Free MPS is used by default</span>
julia<span class="pl-k">&gt;</span> qps <span class="pl-k">=</span> <span class="pl-c1">readqps</span>(<span class="pl-s"><span class="pl-pds">"</span>Q25FV47.QPS<span class="pl-pds">"</span></span>, mpsformat<span class="pl-k">=</span><span class="pl-c1">:fixed</span>)  <span class="pl-c"><span class="pl-c">#</span> uses fixed MPS format</span>
julia<span class="pl-k">&gt;</span> qps <span class="pl-k">=</span> <span class="pl-c1">readqps</span>(<span class="pl-s"><span class="pl-pds">"</span>Q25FV47.QPS<span class="pl-pds">"</span></span>, mpsformat<span class="pl-k">=</span><span class="pl-c1">:free</span>)   <span class="pl-c"><span class="pl-c">#</span> uses free MPS format</span></pre></div>
<p><code>readqps</code> also accepts an <code>IO</code> object as the first argument.</p>
<p>By default, a number of messages may be logged while reading.
Log output can be suppressed as follows:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> QPSReader
<span class="pl-k">using</span> Logging

qps <span class="pl-k">=</span> <span class="pl-c1">with_logger</span>(Logging<span class="pl-k">.</span><span class="pl-c1">NullLogger</span>()) <span class="pl-k">do</span>
    <span class="pl-c1">readqps</span>(<span class="pl-s"><span class="pl-pds">"</span>Q25FV47.QPS<span class="pl-pds">"</span></span>)
<span class="pl-k">end</span></pre></div>
<h2><a id="user-content-problem-representation" class="anchor" aria-hidden="true" href="#problem-representation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Problem representation</h2>
<p>The <code>QPSData</code> data type is defined as follows:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">mutable struct</span> QPSData
    nvar<span class="pl-k">::</span><span class="pl-c1">Int</span>                        <span class="pl-c"><span class="pl-c">#</span> number of variables</span>
    ncon<span class="pl-k">::</span><span class="pl-c1">Int</span>                        <span class="pl-c"><span class="pl-c">#</span> number of constraints</span>
    objsense<span class="pl-k">::</span><span class="pl-c1">Symbol</span>                 <span class="pl-c"><span class="pl-c">#</span> :min, :max or :notset</span>
    c0<span class="pl-k">::</span><span class="pl-c1">Float64</span>                      <span class="pl-c"><span class="pl-c">#</span> constant term in objective</span>
    c<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span>               <span class="pl-c"><span class="pl-c">#</span> linear term in objective</span>

    <span class="pl-c"><span class="pl-c">#</span> Quadratic objective, in COO format</span>
    qrows<span class="pl-k">::</span><span class="pl-c1">Vector{Int}</span>
    qcols<span class="pl-k">::</span><span class="pl-c1">Vector{Int}</span>
    qvals<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span>

    <span class="pl-c"><span class="pl-c">#</span> Constraint matrix, in COO format</span>
    arows<span class="pl-k">::</span><span class="pl-c1">Vector{Int}</span>
    acols<span class="pl-k">::</span><span class="pl-c1">Vector{Int}</span>
    avals<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span>
    
    lcon<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span>            <span class="pl-c"><span class="pl-c">#</span> constraints lower bounds</span>
    ucon<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span>            <span class="pl-c"><span class="pl-c">#</span> constraints upper bounds</span>
    lvar<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span>            <span class="pl-c"><span class="pl-c">#</span> variables lower bounds</span>
    uvar<span class="pl-k">::</span><span class="pl-c1">Vector{Float64}</span>            <span class="pl-c"><span class="pl-c">#</span> variables upper bounds</span>
    name<span class="pl-k">::</span><span class="pl-c1">Union{Nothing, String}</span>     <span class="pl-c"><span class="pl-c">#</span> problem name</span>
    objname<span class="pl-k">::</span><span class="pl-c1">Union{Nothing, String}</span>  <span class="pl-c"><span class="pl-c">#</span> objective function name</span>
    rhsname<span class="pl-k">::</span><span class="pl-c1">Union{Nothing, String}</span>  <span class="pl-c"><span class="pl-c">#</span> Name of RHS field</span>
    bndname<span class="pl-k">::</span><span class="pl-c1">Union{Nothing, String}</span>  <span class="pl-c"><span class="pl-c">#</span> Name of BOUNDS field</span>
    rngname<span class="pl-k">::</span><span class="pl-c1">Union{Nothing, String}</span>  <span class="pl-c"><span class="pl-c">#</span> Name of RANGES field</span>
    varnames<span class="pl-k">::</span><span class="pl-c1">Vector{String}</span>         <span class="pl-c"><span class="pl-c">#</span> variable names, aka column names</span>
    connames<span class="pl-k">::</span><span class="pl-c1">Vector{String}</span>         <span class="pl-c"><span class="pl-c">#</span> constraint names, aka row names</span>

    <span class="pl-c"><span class="pl-c">#</span> name =&gt; index mapping for variables</span>
    <span class="pl-c"><span class="pl-c">#</span> Variables are indexed from 1 and onwards</span>
    varindices<span class="pl-k">::</span><span class="pl-c1">Dict{String, Int}</span>

    <span class="pl-c"><span class="pl-c">#</span> name =&gt; index mapping for constraints</span>
    <span class="pl-c"><span class="pl-c">#</span> Constraints are indexed from 1 and onwards</span>
    <span class="pl-c"><span class="pl-c">#</span> Recorded objective function has index 0</span>
    <span class="pl-c"><span class="pl-c">#</span> Rim objective rows have index -1</span>
    conindices<span class="pl-k">::</span><span class="pl-c1">Dict{String, Int}</span>

    <span class="pl-c"><span class="pl-c">#</span> Indicates the sense of each row:</span>
    <span class="pl-c"><span class="pl-c">#</span>   0  &lt;--&gt; E</span>
    <span class="pl-c"><span class="pl-c">#</span>  -1  &lt;--&gt; L</span>
    <span class="pl-c"><span class="pl-c">#</span>   1  &lt;--&gt; G</span>
    <span class="pl-c"><span class="pl-c">#</span>   2  &lt;--&gt; N</span>
    contypes<span class="pl-k">::</span><span class="pl-c1">Vector{Int}</span>
<span class="pl-k">end</span></pre></div>
<p>Rows and variables are indexed in the order in which they are read.
The matrix Q is zero when reading an MPS file.</p>
<h2><a id="user-content-conventions" class="anchor" aria-hidden="true" href="#conventions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Conventions</h2>
<p>The file formats supported by <code>QPSReader</code> are described here:</p>
<ul>
<li><a href="http://lpsolve.sourceforge.net/5.5/mps-format.htm" rel="nofollow">MPS file format</a></li>
<li><a href="https://doi.org/10.1080/10556789908805768" rel="nofollow">QPS extension</a></li>
</ul>
<p>The following conventions are enforced:</p>
<ul>
<li>
<p>Multiple objective rows</p>
<ul>
<li>The first <code>N</code>-type row encountered in the <code>ROWS</code> section is recorded as the objective function, and its name is stored in <code>objname</code>.</li>
<li>If an additional <code>N</code>-type row is present, a <code>warning</code>-level log is displayed. Subsequent <code>N</code>-type rows are ignored.</li>
<li>Each time a rim objective row is encountered in the <code>COLUMNS</code> or <code>RHS</code> section, the corresponding coefficients are skipped, and an <code>error</code>-level log is displayed.</li>
</ul>
</li>
<li>
<p>Multiple RHS / Range / Bound fields</p>
<ul>
<li>The second field of the first card in the <code>RHS</code> section determines the name of the right-hand side, which is stored in <code>rhsname</code>. Same goes for the <code>RANGES</code> and <code>BOUNDS</code> sections, with the corresponding names being stored in <code>rngname</code> and <code>bndname</code>, respectively.</li>
<li>Any card whose second field does not match the expected name is then ignored.
A <code>warning</code>-level log is displayed at the first such occurence.</li>
<li>In addition, any line or individual coefficient that is ignored triggers an <code>error</code>-level log.</li>
</ul>
</li>
<li>
<p>A row (resp. column) name that was not declared in the <code>ROWS</code> (resp. <code>COLUMNS</code>) section, appears elsewhere in the file.
The only case where an error is not thrown is if said un-declared row or column appears in a rim line that is skipped.</p>
</li>
<li>
<p>An <code>N</code>-type row appears in the <code>RANGES</code> section</p>
</li>
</ul>
<h2><a id="user-content-problem-collections" class="anchor" aria-hidden="true" href="#problem-collections"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Problem Collections</h2>
<ul>
<li>The Netlib LPs: <a href="http://www.netlib.org/lp" rel="nofollow">original Netlib site</a> | <a href="http://www.numerical.rl.ac.uk/cute/netlib.html" rel="nofollow">in SIF format</a> | <a href="http://users.clas.ufl.edu/hager/coap/format.html" rel="nofollow">as tar files</a> (incl. preprocessed versions)</li>
<li>the Kennington LPs: <a href="http://www.netlib.org/lp/data/kennington" rel="nofollow">original Netlib site</a></li>
<li>infeasible Netlib LPs: <a href="http://www.netlib.org/lp/infeas" rel="nofollow">original Netlib site</a></li>
<li>the Maros-Meszaros QPs: <a href="http://www.doc.ic.ac.uk/~im/#DATA" rel="nofollow">in QPS format</a> | <a href="https://bitbucket.org/optrove/maros-meszaros/wiki/Home" rel="nofollow">in SIF format</a></li>
</ul>
<p>Both the Netlib LP and Maros-Meszaros QP collections are provided as Julia artifacts (requires Julia 1.3).
This package exports the <code>fetch_netlib</code> and <code>fetch_mm</code> functions that return the path to the Netlib and Maros-Meszaros collections, repectively</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> QPSReader

netlib_path <span class="pl-k">=</span> <span class="pl-c1">fetch_netlib</span>()
mm_path <span class="pl-k">=</span> <span class="pl-c1">fetch_mm</span>()</pre></div>
</article></div>