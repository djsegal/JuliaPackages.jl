<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p><a href="https://travis-ci.com/vvalls/BirkhoffDecomposition.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a2bbaac224b7fab4a208b2f315ba0511ae5d6b4ee0077cc7b224c201465421b3/68747470733a2f2f7472617669732d63692e636f6d2f7676616c6c732f4269726b686f66664465636f6d706f736974696f6e2e6a6c2e7376673f746f6b656e3d77667861716644785664586e7a387334686a6333266272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/vvalls/BirkhoffDecomposition.jl.svg?token=wfxaqfDxVdXnz8s4hjc3&amp;branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/vvalls/BirkhoffDecomposition.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6b0ab2319a28e87bcbc78983dbb4889f8fc5ede286950a8d82a200226fa67ca2/68747470733a2f2f636f6465636f762e696f2f67682f7676616c6c732f4269726b686f66664465636f6d706f736974696f6e2e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d4c3352364a4d36513635" alt="codecov" data-canonical-src="https://codecov.io/gh/vvalls/BirkhoffDecomposition.jl/branch/master/graph/badge.svg?token=L3R6JM6Q65" style="max-width:100%;"></a></p>
<p><a href="https://github.com/vvalls/BirkhoffDecomposition.jl">BirkhoffDecomposition.jl</a> is a <a href="https://julialang.org" rel="nofollow">Julia</a> package for decomposing a <a href="https://en.wikipedia.org/wiki/Doubly_stochastic_matrix" rel="nofollow">doubly stochastic matrix</a> as the sum of permutation matrices.</p>
<p><strong>Installation</strong>: <code>julia&gt; import Pkg; Pkg.add("BirkhoffDecomposition")</code></p>
<h2><a id="user-content-exact-birkhoff-decomposition" class="anchor" aria-hidden="true" href="#exact-birkhoff-decomposition"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Exact Birkhoff decomposition</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="# Load the package
using BirkhoffDecomposition

# Generate a random doubly stochastic matrix (n is the dimension)
n  = 3;             
X  = randomDoublyStochasticMatrix(n);

# Compute exact decomposition
P, w = birkdecomp(X);
"><pre><span class="pl-c"><span class="pl-c">#</span> Load the package</span>
<span class="pl-k">using</span> BirkhoffDecomposition

<span class="pl-c"><span class="pl-c">#</span> Generate a random doubly stochastic matrix (n is the dimension)</span>
n  <span class="pl-k">=</span> <span class="pl-c1">3</span>;             
X  <span class="pl-k">=</span> <span class="pl-c1">randomDoublyStochasticMatrix</span>(n);

<span class="pl-c"><span class="pl-c">#</span> Compute exact decomposition</span>
P, w <span class="pl-k">=</span> <span class="pl-c1">birkdecomp</span>(X);</pre></div>
<p>The output of <code>birkdecomp(X)</code> is an array <code>P</code> of <code>n*n</code> permutation matrices and <code>w</code> a vector of weights. We can now write the doubly stochastic matrix <code>X</code> in vector form as <code>P*w</code></p>
<h2><a id="user-content-approximate-birkhoff-decomposition" class="anchor" aria-hidden="true" href="#approximate-birkhoff-decomposition"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Approximate Birkhoff decomposition</h2>
<p>The command <code>birkdecomp(X,ε)</code> obtains an ε-approximate Birkhoff decomposition of matrix <code>X</code>. In particular, the resulting decomposition <code>Y = reshape(P*w,n,n)</code> ensures that the <a href="https://en.wikipedia.org/wiki/Matrix_norm#Frobenius_norm" rel="nofollow">Frobenious norm</a> of <code>X-Y</code> is smaller than <code>ε</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="n  = 16; X = randomDoublyStochasticMatrix(n);
ε = 1e-2;
P, w = birkdecomp(X,ε);

Y = reshape(P*w,n,n);
sqrt(sum((X-Y).^2)) &lt;= ε  # Frobenius norm
"><pre>n  <span class="pl-k">=</span> <span class="pl-c1">16</span>; X <span class="pl-k">=</span> <span class="pl-c1">randomDoublyStochasticMatrix</span>(n);
ε <span class="pl-k">=</span> <span class="pl-c1">1e-2</span>;
P, w <span class="pl-k">=</span> <span class="pl-c1">birkdecomp</span>(X,ε);

Y <span class="pl-k">=</span> <span class="pl-c1">reshape</span>(P<span class="pl-k">*</span>w,n,n);
<span class="pl-c1">sqrt</span>(<span class="pl-c1">sum</span>((X<span class="pl-k">-</span>Y)<span class="pl-k">.^</span><span class="pl-c1">2</span>)) <span class="pl-k">&lt;=</span> ε  <span class="pl-c"><span class="pl-c">#</span> Frobenius norm</span></pre></div>
<h2><a id="user-content-cite" class="anchor" aria-hidden="true" href="#cite"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Cite</h2>
<p>The algorithm implemented in the package is the <code>Birkhoff+</code> presented in:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="Víctor Valls, George Iosifidis, and Leandros Tassiulas
Birkhoff's Decomposition Revisited: Sparse Scheduling for High-Speed Circuit Switches. 
arXiv preprint arXiv:2011.02752.
"><pre><code>Víctor Valls, George Iosifidis, and Leandros Tassiulas
Birkhoff's Decomposition Revisited: Sparse Scheduling for High-Speed Circuit Switches. 
arXiv preprint arXiv:2011.02752.
</code></pre></div>
<p>The article has been accepted for publication in IEEE/ACM Transactions on Networking (April 2021).</p>
</article></div>