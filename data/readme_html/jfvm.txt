<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-jfvm" class="anchor" aria-hidden="true" href="#jfvm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>JFVM</h1>
<p dir="auto"><a href="https://zenodo.org/badge/latestdoi/28677142" rel="nofollow"><img src="https://camo.githubusercontent.com/128adac709b09fd37c796a9c482c6699cb54843482bc5e43220d8ee7074781d7/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f32383637373134322e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/28677142.svg" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-important-notes" class="anchor" aria-hidden="true" href="#important-notes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>IMPORTANT NOTES</h2>
<ul dir="auto">
<li>The code now works with Julia 1.0. All you need to do is to check out the master branch:</li>
</ul>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="] add https://github.com/simulkade/JFVM.jl"><pre class="notranslate"><code>] add https://github.com/simulkade/JFVM.jl
</code></pre></div>
<ul dir="auto">
<li>3D visualization requires calling Mayavi via PyCall. It made too many problems recently, so I have decided to disable it until I find a better solution for 3D visualization. Suggestions/PRs are very welcome.</li>
<li>I have decided to move the visualization to a new package <a href="https://github.com/simulkade/JFVMvis.jl.git">JFVMvis.jl</a>, that you can install by:</li>
</ul>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="] add https://github.com/simulkade/JFVMvis.jl"><pre class="notranslate"><code>] add https://github.com/simulkade/JFVMvis.jl
</code></pre></div>
<h2 dir="auto"><a id="user-content-equations" class="anchor" aria-hidden="true" href="#equations"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Equations</h2>
<p dir="auto">You can solve the following PDE (or a subset of it):<br>
<a target="_blank" rel="noopener noreferrer" href="pde.png"><img src="pde.png" alt="advection diffusion" style="max-width: 100%;"></a></p>
<p dir="auto">with the following boundary conditions:<br>
<a target="_blank" rel="noopener noreferrer" href="boundarycond.png"><img src="boundarycond.png" alt="boundary condition" style="max-width: 100%;"></a></p>
<p dir="auto">Believe it or not, the above equations describe the majority of the transport phenomena in chemical and petroleum engineering and similar fields.</p>
<h2 dir="auto"><a id="user-content-a-simple-finite-volume-tool-written-in-julia" class="anchor" aria-hidden="true" href="#a-simple-finite-volume-tool-written-in-julia"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>A simple finite volume tool written in Julia</h2>
<p dir="auto">This code is a Matlabesque implementation of my <a href="https://github.com/simulkade/FVTool">Matlab finite volume tool</a>. The code is not in its most beautiful form, but it works if you believe my words. Please remember that the code is written by a chemical/petroleum engineer. Petroleum engineers are known for being simple-minded folks and chemical engineers have only one rule: "any answer is better than no answer". You can expect to easily discretize a linear transient advection-diffusion PDE into the matrix of coefficients and RHS vectors. Domain shape is limited to rectangles, circles (or a section of a circle), cylinders, and soon spheres. The mesh can be uniform or nonuniform:</p>
<ul dir="auto">
<li>Cartesian (1D, 2D, 3D)</li>
<li>Cylindrical (1D, 2D, 3D)</li>
<li>Radial (2D r and \theta)</li>
</ul>
<p dir="auto">You can have the following boundary conditions or a combination of them on each boundary:</p>
<ul dir="auto">
<li>Dirichlet (constant value)</li>
<li>Neumann (constant flux)</li>
<li>Robin (a linear combination of the above)</li>
<li>Periodic (so funny when visualize)</li>
</ul>
<p dir="auto">It is relatively easy to use the code to solve a system of coupled linear PDE's and not too difficult to solve nonlinear PDE's.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">You need to have <a href="http://matplotlib.org/" rel="nofollow">matplotlib</a> (only for visualization)</p>
<h3 dir="auto"><a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Linux</h3>
<p dir="auto">In Ubuntu-based systems, try</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="sudo apt-get install python-matplotlib"><pre class="notranslate"><code>sudo apt-get install python-matplotlib
</code></pre></div>
<p dir="auto">Then install <code>JFVM</code> by the following commands:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="] add https://github.com/simulkade/JFVM.jl"><pre class="notranslate"><code>] add https://github.com/simulkade/JFVM.jl
</code></pre></div>
<h3 dir="auto"><a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Windows</h3>
<ul dir="auto">
<li>open <code>Julia</code> and type</li>
</ul>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="] add https://github.com/simulkade/JFVM.jl"><pre class="notranslate"><code>] add https://github.com/simulkade/JFVM.jl
</code></pre></div>
<ul dir="auto">
<li>For visualization, download and install <a href="http://continuum.io/downloads" rel="nofollow">Anaconda</a><br>
Run <code>anaconda command prompt</code> (as administrator) and install <code>matplotlib</code> by</li>
</ul>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="conda install matplotlib"><pre class="notranslate"><code>conda install matplotlib
</code></pre></div>
<p dir="auto">Please let me know if it does not work on your windows machines.</p>
<h2 dir="auto"><a id="user-content-tutorial" class="anchor" aria-hidden="true" href="#tutorial"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Tutorial</h2>
<p dir="auto">I have written a short <a href="http://nbviewer.ipython.org/github/simulkade/JFVM.jl/blob/master/examples/jfvm_tutorial.ipynb" rel="nofollow">tutorial</a>, which will be extended gradually.</p>
<h2 dir="auto"><a id="user-content-in-action" class="anchor" aria-hidden="true" href="#in-action"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>In action</h2>
<p dir="auto">Copy and paste the following code to solve a transient diffusion equation:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using JFVM, JFVMvis
Nx = 10
Lx = 1.0
m = createMesh1D(Nx, Lx)
BC = createBC(m)
BC.left.a[:].=BC.right.a[:].=0.0
BC.left.b[:].=BC.right.b[:].=1.0
BC.left.c[:].=1.0
BC.right.c[:].=0.0
c_init = 0.0 # initial value of the variable
c_old = createCellVariable(m, 0.0, BC)
D_val = 1.0 # value of the diffusion coefficient
D_cell = createCellVariable(m, D_val) # assigned to cells
# Harmonic average
D_face = harmonicMean(D_cell)
N_steps = 20 # number of time steps
dt= sqrt(Lx^2/D_val)/N_steps # time step
M_diff = diffusionTerm(D_face) # matrix of coefficient for diffusion term
(M_bc, RHS_bc)=boundaryConditionTerm(BC) # matrix of coefficient and RHS for the BC
for i =1:5
    (M_t, RHS_t)=transientTerm(c_old, dt, 1.0)
    M=M_t-M_diff+M_bc # add all the [sparse] matrices of coefficient
    RHS=RHS_bc+RHS_t # add all the RHS's together
    c_old = solveLinearPDE(m, M, RHS) # solve the PDE
end
visualizeCells(c_old)"><pre><span class="pl-k">using</span> JFVM, JFVMvis
Nx <span class="pl-k">=</span> <span class="pl-c1">10</span>
Lx <span class="pl-k">=</span> <span class="pl-c1">1.0</span>
m <span class="pl-k">=</span> <span class="pl-c1">createMesh1D</span>(Nx, Lx)
BC <span class="pl-k">=</span> <span class="pl-c1">createBC</span>(m)
BC<span class="pl-k">.</span>left<span class="pl-k">.</span>a[:]<span class="pl-k">.</span><span class="pl-k">=</span>BC<span class="pl-k">.</span>right<span class="pl-k">.</span>a[:]<span class="pl-k">.</span><span class="pl-k">=</span><span class="pl-c1">0.0</span>
BC<span class="pl-k">.</span>left<span class="pl-k">.</span>b[:]<span class="pl-k">.</span><span class="pl-k">=</span>BC<span class="pl-k">.</span>right<span class="pl-k">.</span>b[:]<span class="pl-k">.</span><span class="pl-k">=</span><span class="pl-c1">1.0</span>
BC<span class="pl-k">.</span>left<span class="pl-k">.</span>c[:]<span class="pl-k">.</span><span class="pl-k">=</span><span class="pl-c1">1.0</span>
BC<span class="pl-k">.</span>right<span class="pl-k">.</span>c[:]<span class="pl-k">.</span><span class="pl-k">=</span><span class="pl-c1">0.0</span>
c_init <span class="pl-k">=</span> <span class="pl-c1">0.0</span> <span class="pl-c"><span class="pl-c">#</span> initial value of the variable</span>
c_old <span class="pl-k">=</span> <span class="pl-c1">createCellVariable</span>(m, <span class="pl-c1">0.0</span>, BC)
D_val <span class="pl-k">=</span> <span class="pl-c1">1.0</span> <span class="pl-c"><span class="pl-c">#</span> value of the diffusion coefficient</span>
D_cell <span class="pl-k">=</span> <span class="pl-c1">createCellVariable</span>(m, D_val) <span class="pl-c"><span class="pl-c">#</span> assigned to cells</span>
<span class="pl-c"><span class="pl-c">#</span> Harmonic average</span>
D_face <span class="pl-k">=</span> <span class="pl-c1">harmonicMean</span>(D_cell)
N_steps <span class="pl-k">=</span> <span class="pl-c1">20</span> <span class="pl-c"><span class="pl-c">#</span> number of time steps</span>
dt<span class="pl-k">=</span> <span class="pl-c1">sqrt</span>(Lx<span class="pl-k">^</span><span class="pl-c1">2</span><span class="pl-k">/</span>D_val)<span class="pl-k">/</span>N_steps <span class="pl-c"><span class="pl-c">#</span> time step</span>
M_diff <span class="pl-k">=</span> <span class="pl-c1">diffusionTerm</span>(D_face) <span class="pl-c"><span class="pl-c">#</span> matrix of coefficient for diffusion term</span>
(M_bc, RHS_bc)<span class="pl-k">=</span><span class="pl-c1">boundaryConditionTerm</span>(BC) <span class="pl-c"><span class="pl-c">#</span> matrix of coefficient and RHS for the BC</span>
<span class="pl-k">for</span> i <span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">5</span>
    (M_t, RHS_t)<span class="pl-k">=</span><span class="pl-c1">transientTerm</span>(c_old, dt, <span class="pl-c1">1.0</span>)
    M<span class="pl-k">=</span>M_t<span class="pl-k">-</span>M_diff<span class="pl-k">+</span>M_bc <span class="pl-c"><span class="pl-c">#</span> add all the [sparse] matrices of coefficient</span>
    RHS<span class="pl-k">=</span>RHS_bc<span class="pl-k">+</span>RHS_t <span class="pl-c"><span class="pl-c">#</span> add all the RHS's together</span>
    c_old <span class="pl-k">=</span> <span class="pl-c1">solveLinearPDE</span>(m, M, RHS) <span class="pl-c"><span class="pl-c">#</span> solve the PDE</span>
<span class="pl-k">end</span>
<span class="pl-c1">visualizeCells</span>(c_old)</pre></div>
<p dir="auto">Now change the 4th line to <code>m=createMesh2D(Nx, Nx, Lx, Lx)</code> and see this:
<a target="_blank" rel="noopener noreferrer" href="2d_diff.png"><img src="2d_diff.png" alt="diffusion 2D" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-more-examples" class="anchor" aria-hidden="true" href="#more-examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>More examples</h2>
<p dir="auto">TO DO</p>
<h2 dir="auto"><a id="user-content-ijulia-notebooks" class="anchor" aria-hidden="true" href="#ijulia-notebooks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>IJulia notebooks</h2>
<ul dir="auto">
<li><a href="http://nbviewer.ipython.org/github/simulkade/JFVM.jl/blob/master/examples/jfvm-a-finite-volume-tool-for-julia.ipynb" rel="nofollow">Introduction</a></li>
<li><a href="http://nbviewer.ipython.org/github/simulkade/JFVM.jl/blob/master/examples/jfvm_tutorial.ipynb" rel="nofollow">tutorial</a></li>
<li><a href="http://nbviewer.ipython.org/github/simulkade/JFVM.jl/blob/master/examples/jfvm_diffusion_analytics.ipynb" rel="nofollow">compare analytical solution of a diffusion equation with uniform and nonuniform grids</a></li>
<li><a href="http://nbviewer.ipython.org/github/simulkade/JFVM.jl/blob/master/examples/solving-nonlinear-pdes-with-fvm.ipynb" rel="nofollow">Nonlinear PDE</a></li>
<li><a href="https://github.com/simulkade/FoamFingering/blob/master/foam_flow_stars_numeric.ipynb">Foam flow in porous media</a></li>
<li>New notebooks soon...</li>
</ul>
<h1 dir="auto"><a id="user-content-how-to-cite" class="anchor" aria-hidden="true" href="#how-to-cite"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>How to cite</h1>
<p dir="auto">If you have used the code in your research, please cite it as</p>
<blockquote>
<p dir="auto">Ali A Eftekhari. (2017, August 23). JFVM.jl: A Finite Volume Tool for Solving Advection-Diffusion Equations. Zenodo. <a href="http://doi.org/10.5281/zenodo.847056" rel="nofollow">http://doi.org/10.5281/zenodo.847056</a></p>
</blockquote>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="@misc{ali_a_eftekhari_2017_847056,
  author       = {Ali A Eftekhari},
  title        = {{JFVM.jl: A Finite Volume Tool for Solving 
                   Advection-Diffusion Equations}},
  month        = aug,
  year         = 2017,
  doi          = {10.5281/zenodo.847056},
  url          = {https://doi.org/10.5281/zenodo.847056}
}"><pre class="notranslate"><code>@misc{ali_a_eftekhari_2017_847056,
  author       = {Ali A Eftekhari},
  title        = {{JFVM.jl: A Finite Volume Tool for Solving 
                   Advection-Diffusion Equations}},
  month        = aug,
  year         = 2017,
  doi          = {10.5281/zenodo.847056},
  url          = {https://doi.org/10.5281/zenodo.847056}
}
</code></pre></div>
</article></div>