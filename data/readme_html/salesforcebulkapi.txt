<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="https://travis-ci.org/GregorMatheis/SalesForceBulkApi.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/38df99a5903603b647c5479b3991023cd712eaccdcefb2c3b85fd560c9995a3e/68747470733a2f2f7472617669732d63692e6f72672f477265676f724d6174686569732f53616c6573466f72636542756c6b4170692e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/GregorMatheis/SalesForceBulkApi.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/GregorMatheis/SalesForceBulkApi.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/e70bcec47f9bdd5f169a6a20341a74e2612269c53cfbc567cd27b3804f0b8c8a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f477265676f724d6174686569732f53616c6573466f72636542756c6b4170692e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/GregorMatheis/SalesForceBulkApi.jl/badge.svg?branch=master" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-salesforcebulkapijl" class="anchor" aria-hidden="true" href="#salesforcebulkapijl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>SalesForceBulkApi.jl</h1>
<p dir="auto">Functions to query data with the sales force bulk api</p>
<p dir="auto">Install:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import Pkg
Pkg.add(&quot;SalesForceBulkApi&quot;)
using SalesForceBulkApi"><pre><span class="pl-k">import</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>SalesForceBulkApi<span class="pl-pds">"</span></span>)
<span class="pl-k">using</span> SalesForceBulkApi</pre></div>
<p dir="auto">Usage:</p>
<p dir="auto">Query data</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="session = login(&quot;youremail@adress.com/Login&quot;, &quot;Your Password&quot;, &quot;Your API Version (e.g. 45.0)&quot;)
sf_bulkapi_query(session, &quot;Select Name FROM account limit 100&quot;)"><pre>session <span class="pl-k">=</span> <span class="pl-c1">login</span>(<span class="pl-s"><span class="pl-pds">"</span>youremail@adress.com/Login<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Your Password<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Your API Version (e.g. 45.0)<span class="pl-pds">"</span></span>)
<span class="pl-c1">sf_bulkapi_query</span>(session, <span class="pl-s"><span class="pl-pds">"</span>Select Name FROM account limit 100<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Get overview of all objects and fields per object:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="session = login(&quot;youremail@adress.com/Login&quot;, &quot;Your Password&quot;, &quot;Your API Version (e.g. 45.0)&quot;)

object_list(session) # List of all available objects
fields_description(session, &quot;object name&quot;) # Gives all fields 
all_object_fields(session) # Handy iterator that creates a complete dataframe with all objects and fields. Runs a couple of seconds"><pre>session <span class="pl-k">=</span> <span class="pl-c1">login</span>(<span class="pl-s"><span class="pl-pds">"</span>youremail@adress.com/Login<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Your Password<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Your API Version (e.g. 45.0)<span class="pl-pds">"</span></span>)

<span class="pl-c1">object_list</span>(session) <span class="pl-c"><span class="pl-c">#</span> List of all available objects</span>
<span class="pl-c1">fields_description</span>(session, <span class="pl-s"><span class="pl-pds">"</span>object name<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> Gives all fields </span>
<span class="pl-c1">all_object_fields</span>(session) <span class="pl-c"><span class="pl-c">#</span> Handy iterator that creates a complete dataframe with all objects and fields. Runs a couple of seconds</span></pre></div>
<p dir="auto">Query deleted data:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="sf_bulkapi_query(session, &quot;Select Name, IsDeleted From Account&quot;, true) "><pre><span class="pl-c1">sf_bulkapi_query</span>(session, <span class="pl-s"><span class="pl-pds">"</span>Select Name, IsDeleted From Account<span class="pl-pds">"</span></span>, <span class="pl-c1">true</span>) </pre></div>
<p dir="auto">Running multiple queries at once</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="queries = [&quot;Select Name From Account&quot;, &quot;Select LastName From Contact&quot;]
multi_result = multiquery(session, queries) #normal query
multi_result_all = multiquery(session, queries, true) #includes deleted objects"><pre>queries <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">"</span>Select Name From Account<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>Select LastName From Contact<span class="pl-pds">"</span></span>]
multi_result <span class="pl-k">=</span> <span class="pl-c1">multiquery</span>(session, queries) <span class="pl-c"><span class="pl-c">#</span>normal query</span>
multi_result_all <span class="pl-k">=</span> <span class="pl-c1">multiquery</span>(session, queries, <span class="pl-c1">true</span>) <span class="pl-c"><span class="pl-c">#</span>includes deleted objects</span></pre></div>
<p dir="auto">If multiple workers are available, queries get distributed across workers. Otherwise queries run async in one worker.</p>
</article></div>