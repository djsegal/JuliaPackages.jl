<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-abstractplutodingetjesjl" class="anchor" aria-hidden="true" href="#abstractplutodingetjesjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>AbstractPlutoDingetjes.jl</h1>
<p dir="auto">An abstract package to be implemented by packages/people who create widgets (or other <a href="https://en.wiktionary.org/wiki/dingetjes#Dutch" rel="nofollow"><em>dingetjes</em></a>) for Pluto. If you are just happy using Pluto to make cool stuff, you probably don't want to use this package directly. This package is not <em>necessary</em> to create widgets in Pluto, but it can add more advanced functionality to your widgets. See the Interactivity sample notebook inside Pluto's main menu to learn more!</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/27023410ade3640f358e586e1c2ac26888243dd03627db254d3b55cdf059c3d3/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f6c33765266446e3963613550566b4876322f67697068792e676966"><img src="https://camo.githubusercontent.com/27023410ade3640f358e586e1c2ac26888243dd03627db254d3b55cdf059c3d3/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f6c33765266446e3963613550566b4876322f67697068792e676966" alt="" data-animated-image="" data-canonical-src="https://media.giphy.com/media/l3vRfDn9ca5PVkHv2/giphy.gif" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-what-is-it" class="anchor" aria-hidden="true" href="#what-is-it"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>What is it</h2>
<blockquote>
<p dir="auto"><strong><a href="https://docs.juliahub.com/AbstractPlutoDingetjes/UHbnu/" rel="nofollow">FULL DOCUMENTATION HERE</a></strong></p>
</blockquote>
<h3 dir="auto"><a id="user-content-bondsinitial_value" class="anchor" aria-hidden="true" href="#bondsinitial_value"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>Bonds.initial_value</code></h3>
<p dir="auto">The initial value of a bond. In a notebook containing <code>@bind x my_widget</code>, this will be used in two cases:</p>
<ol dir="auto">
<li>The value of <code>x</code> will be set to <code>x = AbstractPlutoDingetjes.Bonds.initial_value(my_widget)</code> during the <code>@bind</code> call. This initial value will be used in cells that use <code>x</code>, until the widget is rendered in the browser and the first value is received.</li>
<li>When running a notebook file without Pluto, e.g. <code>shell&gt; julia my_notebook.jl</code>, this value will be used for <code>x</code>.</li>
</ol>
<p dir="auto">When not overloaded for your widget, it defaults to returning <code>missing</code>.</p>
<h4 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h4>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="struct MySlider
    range::AbstractRange{&lt;:Real}
end

Base.show(io::IO, m::MIME&quot;text/html&quot;, s::MySlider) = show(io, m, HTML(&quot;&lt;input type=range min=$(first(s.values)) step=$(step(s.values)) max=$(last(s.values))&gt;&quot;))

AbstractPlutoDingetjes.Bonds.initial_value(s::MySlider) = first(s.range)

# Add the following for the same functionality on Pluto versions TODO and below. Will be ignored in newer Pluto versions. See the compat info below.
Base.get(s::MySlider) = first(s.range)
"><pre><span class="pl-k">struct</span> MySlider
    range<span class="pl-k">::</span><span class="pl-c1">AbstractRange{&lt;:Real}</span>
<span class="pl-k">end</span>

Base<span class="pl-k">.</span><span class="pl-en">show</span>(io<span class="pl-k">::</span><span class="pl-c1">IO</span>, m<span class="pl-k">::</span><span class="pl-c1">MIME"text/html"</span>, s<span class="pl-k">::</span><span class="pl-c1">MySlider</span>) <span class="pl-k">=</span> <span class="pl-c1">show</span>(io, m, <span class="pl-c1">HTML</span>(<span class="pl-s"><span class="pl-pds">"</span>&lt;input type=range min=<span class="pl-v">$(<span class="pl-c1">first</span>(s<span class="pl-k">.</span>values))</span> step=<span class="pl-v">$(<span class="pl-c1">step</span>(s<span class="pl-k">.</span>values))</span> max=<span class="pl-v">$(<span class="pl-c1">last</span>(s<span class="pl-k">.</span>values))</span>&gt;<span class="pl-pds">"</span></span>))

AbstractPlutoDingetjes<span class="pl-k">.</span>Bonds<span class="pl-k">.</span><span class="pl-en">initial_value</span>(s<span class="pl-k">::</span><span class="pl-c1">MySlider</span>) <span class="pl-k">=</span> <span class="pl-c1">first</span>(s<span class="pl-k">.</span>range)

<span class="pl-c"><span class="pl-c">#</span> Add the following for the same functionality on Pluto versions TODO and below. Will be ignored in newer Pluto versions. See the compat info below.</span>
Base<span class="pl-k">.</span><span class="pl-en">get</span>(s<span class="pl-k">::</span><span class="pl-c1">MySlider</span>) <span class="pl-k">=</span> <span class="pl-c1">first</span>(s<span class="pl-k">.</span>range)
</pre></div>
<h3 dir="auto"><a id="user-content-bondstransform_value" class="anchor" aria-hidden="true" href="#bondstransform_value"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>Bonds.transform_value</code></h3>
<p dir="auto">Transform a value received from the browser before assigning it to the bound julia variable. In a notebook containing <code>@bind x my_widget</code>, Pluto will run <code>x = AbstractPlutoDingetjes.Bonds.transform_value(my_widget, \$value_from_javascript)</code>. Without this hook, widgets in JavaScript can only return simple types (numbers, dictionaries, vectors) into bound variables.</p>
<p dir="auto">When not overloaded for your widget, it defaults to returning the value unchanged, i.e. <code>x = \$value_from_javascript</code>.</p>
<h4 dir="auto"><a id="user-content-example-1" class="anchor" aria-hidden="true" href="#example-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h4>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="struct MyVectorSlider
    values::Vector{&lt;:Any} # note! a vector of arbitrary objects, not just numbers
end

Base.show(io::IO, m::MIME&quot;text/html&quot;, s::MyVectorSlider) = show(io, m, HTML(&quot;&lt;input type=range min=1 max=$(length(s.values))&gt;&quot;))

AbstractPlutoDingetjes.Bonds.transform_value(s::MySlider, value_from_javascript::Int) = s.values[value_from_javascript]"><pre><span class="pl-k">struct</span> MyVectorSlider
    values<span class="pl-k">::</span><span class="pl-c1">Vector{&lt;:Any}</span> <span class="pl-c"><span class="pl-c">#</span> note! a vector of arbitrary objects, not just numbers</span>
<span class="pl-k">end</span>

Base<span class="pl-k">.</span><span class="pl-en">show</span>(io<span class="pl-k">::</span><span class="pl-c1">IO</span>, m<span class="pl-k">::</span><span class="pl-c1">MIME"text/html"</span>, s<span class="pl-k">::</span><span class="pl-c1">MyVectorSlider</span>) <span class="pl-k">=</span> <span class="pl-c1">show</span>(io, m, <span class="pl-c1">HTML</span>(<span class="pl-s"><span class="pl-pds">"</span>&lt;input type=range min=1 max=<span class="pl-v">$(<span class="pl-c1">length</span>(s<span class="pl-k">.</span>values))</span>&gt;<span class="pl-pds">"</span></span>))

AbstractPlutoDingetjes<span class="pl-k">.</span>Bonds<span class="pl-k">.</span><span class="pl-en">transform_value</span>(s<span class="pl-k">::</span><span class="pl-c1">MySlider</span>, value_from_javascript<span class="pl-k">::</span><span class="pl-c1">Int</span>) <span class="pl-k">=</span> s<span class="pl-k">.</span>values[value_from_javascript]</pre></div>
<p dir="auto">See <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="615633710" data-permission-text="Title is private" data-url="https://github.com/JuliaPluto/PlutoUI.jl/issues/3" data-hovercard-type="issue" data-hovercard-url="/JuliaPluto/PlutoUI.jl/issues/3/hovercard?comment_id=629724036&amp;comment_type=issue_comment" href="https://github.com/JuliaPluto/PlutoUI.jl/issues/3#issuecomment-629724036">JuliaPluto/PlutoUI.jl#3 (comment)</a></p>
<blockquote>
<p dir="auto"><em><strong>For more features, see the <a href="https://docs.juliahub.com/AbstractPlutoDingetjes/UHbnu/" rel="nofollow">DOCUMENTATION</a></strong></em></p>
</blockquote>
</article></div>