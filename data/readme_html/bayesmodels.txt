<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-lightbayes" class="anchor" aria-hidden="true" href="#lightbayes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LightBayes</h1>
<p>This is a Julia package that implements several light-weight Bayesian models, primarily for supporting the research on Bayesian inference and estimation.</p>
<p><strong>Note:</strong> This package is still in the <em>experimental</em> stage, and is primarily for support internal research purpose. Also, it has not been registered at the official registry <a href="https://github.com/JuliaLang/METADATA.jl">METADATA.jl</a>.</p>
<h2><a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Setup</h2>
<p>As it has not been officially registered, you may not use <code>Pkg.add</code> to install the package. Instead, you should check it out directly as</p>
<div class="highlight highlight-source-shell"><pre><span class="pl-c"><span class="pl-c">#</span> enter the directory that hosts the Julia repositories</span>
<span class="pl-c1">cd</span> <span class="pl-k">~</span>/.julia/v0.4

<span class="pl-c"><span class="pl-c">#</span> clone the package</span>
git clone https://github.com/lindahua/LightBayes.jl.git LightBayes

<span class="pl-c"><span class="pl-c">#</span> run the tests to make sure it works</span>
<span class="pl-c1">cd</span> LightBayes
julia test/runtests.jl</pre></div>
<h2><a id="user-content-api" class="anchor" aria-hidden="true" href="#api"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>API</h2>
<p>This package introduces an abstract type:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> The base type for all likelihood models,</span>
<span class="pl-c"><span class="pl-c">#</span> which connect the parameters with observations</span>
abstract LikelihoodModel</pre></div>
<p>Here, we assume that both the parameter space and observation space are always vector spaces.</p>
<h4><a id="user-content-methods-for-prior" class="anchor" aria-hidden="true" href="#methods-for-prior"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Methods for Prior</h4>
<p>Prior distributions are simply using the distributions in the <a href="https://github.com/JuliaStats/Distributions.jl">Distributions</a> package. However, for those distributions that may serve as a <em>prior</em> here, we introduce additional methods:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Let pri be a prior distribution</span>

<span class="pl-c"><span class="pl-c">#</span> compute the unnormalized log-pdf for given parameters</span>
<span class="pl-c"><span class="pl-c">#</span> θ can be either a single parameter or an array of</span>
<span class="pl-c"><span class="pl-c">#</span> multiple parameters</span>
<span class="pl-c1">logupdf</span>(pri, θ)
<span class="pl-c1">logupdf!</span>(r, pri, θ)

<span class="pl-c"><span class="pl-c">#</span> compute the log-partition value</span>
<span class="pl-c1">logpar</span>(pri)

<span class="pl-c"><span class="pl-c">#</span> compute the posterior distribution, given sufficient</span>
<span class="pl-c"><span class="pl-c">#</span> statistics collected from observations</span>
<span class="pl-c1">posterior</span>(pri, sstats)

<span class="pl-c"><span class="pl-c">#</span> find the mode of the posterior distribution</span>
<span class="pl-c"><span class="pl-c">#</span> This is useful for MAP estimation</span>
<span class="pl-c1">posterior_mode</span>(pri, sstats)
<span class="pl-c1">posterior_mode!</span>(r, pri, sstats)

<span class="pl-c"><span class="pl-c">#</span> sample from the posterior distribution</span>
<span class="pl-c1">posterior_rand</span>(pri, sstats)
<span class="pl-c1">posterior_rand!</span>(r, pri, sstats)</pre></div>
<h4><a id="user-content-methods-for-likelihood-model" class="anchor" aria-hidden="true" href="#methods-for-likelihood-model"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Methods for Likelihood Model</h4>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> Let md be a likelihood model</span>

<span class="pl-c"><span class="pl-c">#</span> return a distribution, given parameter</span>
d <span class="pl-k">=</span> <span class="pl-c1">withparams</span>(md, θ)

<span class="pl-c"><span class="pl-c">#</span> get the number of samples in X, w.r.t. md</span>
n <span class="pl-k">=</span> <span class="pl-c1">nsamples</span>(md, X)

<span class="pl-c"><span class="pl-c">#</span> compute sufficient statistics, given observed data</span>
ss <span class="pl-k">=</span> <span class="pl-c1">suffstats</span>(md, X)
ss <span class="pl-k">=</span> <span class="pl-c1">suffstats</span>(md, X, inds)

<span class="pl-c"><span class="pl-c">#</span> to get a posterior given data, one can write</span>
post <span class="pl-k">=</span> <span class="pl-c1">posterior</span>(pri, <span class="pl-c1">suffstats</span>(md, X))</pre></div>
<h2><a id="user-content-models" class="anchor" aria-hidden="true" href="#models"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Models</h2>
<p>Currently, we implement the following likelihood models</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-c"><span class="pl-c">#</span> x ~ N(θ, σ^2), where σ^2 is fixed a priori</span>
<span class="pl-c"><span class="pl-c">#</span> conjugate prior type: IsoNormal</span>
immutable IsoGaussModel <span class="pl-k">&lt;:</span> <span class="pl-c1">LikelihoodModel</span>
    σ<span class="pl-k">::</span><span class="pl-c1">Float64</span>
<span class="pl-k">end</span>
</pre></div>
</article></div>