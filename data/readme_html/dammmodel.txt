<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-dammmodel" class="anchor" aria-hidden="true" href="#dammmodel"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DAMMmodel</h1>
<p dir="auto"><a href="https://CUPofTEAproject.github.io/DAMMmodel.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://pkgs.genieframework.com?packages=DAMMmodel" rel="nofollow"><img src="https://camo.githubusercontent.com/e890b2712b598d8f1f96af394aa16c5f447edf40c4848c5c8b74cc9ddedecb50/68747470733a2f2f736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f706b67732e67656e69656672616d65776f726b2e636f6d2f6170692f76312f62616467652f44414d4d6d6f64656c" alt="DAMMmodel Downloads" data-canonical-src="https://shields.io/endpoint?url=https://pkgs.genieframework.com/api/v1/badge/DAMMmodel" style="max-width: 100%;"></a>
<a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/7b78ee85abc75374b4d7ebdce69aa806f90533bccec700188ea148940d5c1899/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d302e312e32302d677265656e"><img src="https://camo.githubusercontent.com/7b78ee85abc75374b4d7ebdce69aa806f90533bccec700188ea148940d5c1899/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e2d302e312e32302d677265656e" alt="version" data-canonical-src="https://img.shields.io/badge/version-0.1.20-green" style="max-width: 100%;"></a></p>

<p dir="auto"><strong>Estimates CO<sub>2</sub> efflux (e.g., soil respiration (R<sub>s</sub>), [μmol m<sup>-2</sup> s<sup>-1</sup>]) as a function of temperature (e.g., soil temperature (T<sub>s</sub>), [°C]) and soil moisture (θ, [m<sup>3</sup> m<sup>-3</sup>]).</strong></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">Install with the Julia package manager <a href="https://pkgdocs.julialang.org/" rel="nofollow">Pkg</a>, just like any other registered Julia package:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; ]
pkg&gt; add DAMMmodel"><pre>julia<span class="pl-k">&gt;</span> ]
pkg<span class="pl-k">&gt;</span> add DAMMmodel</pre></div>
<p dir="auto">or</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using Pkg; Pkg.add(&quot;DAMMmodel&quot;)"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Pkg; Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>DAMMmodel<span class="pl-pds">"</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<p dir="auto">This package models respiration (CO<sub>2</sub> efflux, e.g., soil respiration (R<sub>s</sub>)) as a function of soil temperature (T<sub>s</sub>) and soil moisture (θ), using
the <a href="https://doi.org/10.1111/j.1365-2486.2011.02546.x" rel="nofollow">Dual Arrhenius and Michaelis-Menten</a> kinetics model (2012).</p>
<p dir="auto">The package contains six functions: <code>DAMMviz</code>, <code>DAMMfdata</code>, <code>DAMM</code>, <code>DAMMfit</code>, <code>DAMMmat</code>, and <code>DAMMplot</code>.</p>
<h3 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h3>
<h4 dir="auto"><a id="user-content-dammviz" class="anchor" aria-hidden="true" href="#dammviz"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DAMMviz</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="DAMMviz()"><pre class="notranslate"><code>DAMMviz()
</code></pre></div>
<p dir="auto">Interactive plot of the DAMM model</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; DAMMviz()"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">DAMMviz</span>()</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/22160257/149199698-0a858290-475f-4d49-b724-d07dd042e377.gif"><img src="https://user-images.githubusercontent.com/22160257/149199698-0a858290-475f-4d49-b724-d07dd042e377.gif" alt="DAMMviz_v0 1 2" data-animated-image="" style="max-width: 100%;"></a></p>
<h4 dir="auto"><a id="user-content-dammfdata" class="anchor" aria-hidden="true" href="#dammfdata"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DAMMfdata</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="DAMMfdata(n)"><pre class="notranslate"><code>DAMMfdata(n)
</code></pre></div>
<p dir="auto">Generates a DataFrame of n fake data Tₛ, θ and Rₛ</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; DAMMfdata(5)
5×3 DataFrame
 Row │ Tₛ       θ        Rₛ      
     │ Float64  Float64  Float64 
─────┼───────────────────────────
   1 │    10.8      0.3  2.04327
   2 │    31.5      0.1  7.8925
   3 │    38.7      0.7  1.6
   4 │    35.7      0.3  7.38025
   5 │    21.9      0.2  3.0012"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-c1">DAMMfdata</span>(<span class="pl-c1">5</span>)
<span class="pl-c1">5</span><span class="pl-k">×</span><span class="pl-c1">3</span> DataFrame
 Row │ Tₛ       θ        Rₛ      
     │ Float64  Float64  Float64 
─────┼───────────────────────────
   <span class="pl-c1">1</span> │    <span class="pl-c1">10.8</span>      <span class="pl-c1">0.3</span>  <span class="pl-c1">2.04327</span>
   <span class="pl-c1">2</span> │    <span class="pl-c1">31.5</span>      <span class="pl-c1">0.1</span>  <span class="pl-c1">7.8925</span>
   <span class="pl-c1">3</span> │    <span class="pl-c1">38.7</span>      <span class="pl-c1">0.7</span>  <span class="pl-c1">1.6</span>
   <span class="pl-c1">4</span> │    <span class="pl-c1">35.7</span>      <span class="pl-c1">0.3</span>  <span class="pl-c1">7.38025</span>
   <span class="pl-c1">5</span> │    <span class="pl-c1">21.9</span>      <span class="pl-c1">0.2</span>  <span class="pl-c1">3.0012</span></pre></div>
<h4 dir="auto"><a id="user-content-damm" class="anchor" aria-hidden="true" href="#damm"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DAMM</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="DAMM(x::VecOrMat{&lt;: Real}, p::NTuple{7, Float64})"><pre class="notranslate"><code>DAMM(x::VecOrMat{&lt;: Real}, p::NTuple{7, Float64})
</code></pre></div>
<p dir="auto">Calculate respiration as a function of soil temperature (Tₛ) and moisture (θ).</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; df = DAMMfdata(100) # generates a fake dataset
100×3 DataFrame
 Row │ Tₛ       θ        Rₛ        
     │ Float64  Float64  Float64   
─────┼─────────────────────────────
   1 │    15.5      0.3   1.72216
   2 │    22.3      0.6   1.8213
  ⋮  │    ⋮        ⋮         ⋮
  99 │     9.5      0.2   0.223677
 100 │     6.6      0.6   0.730627
julia&gt; fp # parameters: αₛₓ, Eaₛₓ, kMₛₓ, kMₒ₂, Sxₜₒₜ, Q10kM
(1.0e9, 64.0, 3.46e-8, 0.002, 0.7, 0.02, 1.0)
julia&gt; DAMM(hcat(df.Tₛ, df.θ), fp) # μmolCO₂ m⁻² s⁻¹
100-element Vector{Float64}:
 6.023429035220588
 0.9298933641647085
 ⋮
 0.8444248717855868
 3.805243237387702"><pre>julia<span class="pl-k">&gt;</span> df <span class="pl-k">=</span> <span class="pl-c1">DAMMfdata</span>(<span class="pl-c1">100</span>) <span class="pl-c"><span class="pl-c">#</span> generates a fake dataset</span>
<span class="pl-c1">100</span><span class="pl-k">×</span><span class="pl-c1">3</span> DataFrame
 Row │ Tₛ       θ        Rₛ        
     │ Float64  Float64  Float64   
─────┼─────────────────────────────
   <span class="pl-c1">1</span> │    <span class="pl-c1">15.5</span>      <span class="pl-c1">0.3</span>   <span class="pl-c1">1.72216</span>
   <span class="pl-c1">2</span> │    <span class="pl-c1">22.3</span>      <span class="pl-c1">0.6</span>   <span class="pl-c1">1.8213</span>
  ⋮  │    ⋮        ⋮         ⋮
  <span class="pl-c1">99</span> │     <span class="pl-c1">9.5</span>      <span class="pl-c1">0.2</span>   <span class="pl-c1">0.223677</span>
 <span class="pl-c1">100</span> │     <span class="pl-c1">6.6</span>      <span class="pl-c1">0.6</span>   <span class="pl-c1">0.730627</span>
julia<span class="pl-k">&gt;</span> fp <span class="pl-c"><span class="pl-c">#</span> parameters: αₛₓ, Eaₛₓ, kMₛₓ, kMₒ₂, Sxₜₒₜ, Q10kM</span>
(<span class="pl-c1">1.0e9</span>, <span class="pl-c1">64.0</span>, <span class="pl-c1">3.46e-8</span>, <span class="pl-c1">0.002</span>, <span class="pl-c1">0.7</span>, <span class="pl-c1">0.02</span>, <span class="pl-c1">1.0</span>)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">DAMM</span>(<span class="pl-c1">hcat</span>(df<span class="pl-k">.</span>Tₛ, df<span class="pl-k">.</span>θ), fp) <span class="pl-c"><span class="pl-c">#</span> μmolCO₂ m⁻² s⁻¹</span>
<span class="pl-c1">100</span><span class="pl-k">-</span>element Vector{Float64}<span class="pl-k">:</span>
 <span class="pl-c1">6.023429035220588</span>
 <span class="pl-c1">0.9298933641647085</span>
 ⋮
 <span class="pl-c1">0.8444248717855868</span>
 <span class="pl-c1">3.805243237387702</span></pre></div>
<h4 dir="auto"><a id="user-content-dammfit" class="anchor" aria-hidden="true" href="#dammfit"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DAMMfit</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="DAMMfit(x::VecOrMat{&lt;: Real}, Rₛ::Vector{Float64}, poro_val::Float64)"><pre class="notranslate"><code>DAMMfit(x::VecOrMat{&lt;: Real}, Rₛ::Vector{Float64}, poro_val::Float64)
</code></pre></div>
<p dir="auto">fit the DAMM model parameters to data.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; df = DAMMfdata(100) # generates a fake dataset
100×3 DataFrame
 Row │ Tₛ       θ        Rₛ        
     │ Float64  Float64  Float64   
─────┼─────────────────────────────
   1 │    27.1      0.3   4.345
   2 │    38.7      0.6  12.0106
  ⋮  │    ⋮        ⋮         ⋮
  99 │    18.6      0.5   0.894257
 100 │    19.4      0.4   3.79532
julia&gt; p = DAMMfit(hcat(df.Tₛ, df.θ), df.Rₛ, 0.7) 
(2.034002955272664e10, 71.65411256289629, 9.903541279858033e-8, 0.003688664956456453, 0.7, 0.02, 1.0)
julia&gt; DAMM(hcat(df.Tₛ, df.θ), p)
100-element Vector{Float64}:
  4.233540174412755
 10.41149919818871
  ⋮
  1.746141124513421
  1.9599317903590014"><pre>julia<span class="pl-k">&gt;</span> df <span class="pl-k">=</span> <span class="pl-c1">DAMMfdata</span>(<span class="pl-c1">100</span>) <span class="pl-c"><span class="pl-c">#</span> generates a fake dataset</span>
<span class="pl-c1">100</span><span class="pl-k">×</span><span class="pl-c1">3</span> DataFrame
 Row │ Tₛ       θ        Rₛ        
     │ Float64  Float64  Float64   
─────┼─────────────────────────────
   <span class="pl-c1">1</span> │    <span class="pl-c1">27.1</span>      <span class="pl-c1">0.3</span>   <span class="pl-c1">4.345</span>
   <span class="pl-c1">2</span> │    <span class="pl-c1">38.7</span>      <span class="pl-c1">0.6</span>  <span class="pl-c1">12.0106</span>
  ⋮  │    ⋮        ⋮         ⋮
  <span class="pl-c1">99</span> │    <span class="pl-c1">18.6</span>      <span class="pl-c1">0.5</span>   <span class="pl-c1">0.894257</span>
 <span class="pl-c1">100</span> │    <span class="pl-c1">19.4</span>      <span class="pl-c1">0.4</span>   <span class="pl-c1">3.79532</span>
julia<span class="pl-k">&gt;</span> p <span class="pl-k">=</span> <span class="pl-c1">DAMMfit</span>(<span class="pl-c1">hcat</span>(df<span class="pl-k">.</span>Tₛ, df<span class="pl-k">.</span>θ), df<span class="pl-k">.</span>Rₛ, <span class="pl-c1">0.7</span>) 
(<span class="pl-c1">2.034002955272664e10</span>, <span class="pl-c1">71.65411256289629</span>, <span class="pl-c1">9.903541279858033e-8</span>, <span class="pl-c1">0.003688664956456453</span>, <span class="pl-c1">0.7</span>, <span class="pl-c1">0.02</span>, <span class="pl-c1">1.0</span>)
julia<span class="pl-k">&gt;</span> <span class="pl-c1">DAMM</span>(<span class="pl-c1">hcat</span>(df<span class="pl-k">.</span>Tₛ, df<span class="pl-k">.</span>θ), p)
<span class="pl-c1">100</span><span class="pl-k">-</span>element Vector{Float64}<span class="pl-k">:</span>
  <span class="pl-c1">4.233540174412755</span>
 <span class="pl-c1">10.41149919818871</span>
  ⋮
  <span class="pl-c1">1.746141124513421</span>
  <span class="pl-c1">1.9599317903590014</span></pre></div>
<h4 dir="auto"><a id="user-content-dammmat" class="anchor" aria-hidden="true" href="#dammmat"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DAMMmat</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="DAMMmat(Tₛ::Array{Float64, 1}, θ::Array{Float64, 1}, R::Array{Float64, 1}, r::Int64)"><pre class="notranslate"><code>DAMMmat(Tₛ::Array{Float64, 1}, θ::Array{Float64, 1}, R::Array{Float64, 1}, r::Int64)
</code></pre></div>
<p dir="auto">Generates a matrix of DAMM output for gridded inputs x and y Inputs:
soil temperature (Tₛ), soil moisture (θ), respiration (R), resolution (r)</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; Tₛ = collect(15.0:2.5:40.0)
julia&gt; θ = collect(0.2:0.05:0.7)
julia&gt; R = [1.0, 1.2, 1.5, 2.0, 2.7, 3.8, 4.9, 6.7, 4.1, 2.0, 0.4]
julia&gt; r = 10
julia&gt; poro_val, params, x, y, DAMM_Matrix = DAMMmat(Tₛ, θ, R, r)"><pre>julia<span class="pl-k">&gt;</span> Tₛ <span class="pl-k">=</span> <span class="pl-c1">collect</span>(<span class="pl-c1">15.0</span><span class="pl-k">:</span><span class="pl-c1">2.5</span><span class="pl-k">:</span><span class="pl-c1">40.0</span>)
julia<span class="pl-k">&gt;</span> θ <span class="pl-k">=</span> <span class="pl-c1">collect</span>(<span class="pl-c1">0.2</span><span class="pl-k">:</span><span class="pl-c1">0.05</span><span class="pl-k">:</span><span class="pl-c1">0.7</span>)
julia<span class="pl-k">&gt;</span> R <span class="pl-k">=</span> [<span class="pl-c1">1.0</span>, <span class="pl-c1">1.2</span>, <span class="pl-c1">1.5</span>, <span class="pl-c1">2.0</span>, <span class="pl-c1">2.7</span>, <span class="pl-c1">3.8</span>, <span class="pl-c1">4.9</span>, <span class="pl-c1">6.7</span>, <span class="pl-c1">4.1</span>, <span class="pl-c1">2.0</span>, <span class="pl-c1">0.4</span>]
julia<span class="pl-k">&gt;</span> r <span class="pl-k">=</span> <span class="pl-c1">10</span>
julia<span class="pl-k">&gt;</span> poro_val, params, x, y, DAMM_Matrix <span class="pl-k">=</span> <span class="pl-c1">DAMMmat</span>(Tₛ, θ, R, r)</pre></div>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="DAMMmat(Tₛ::Array{Float64, 1}, θ::Array{Float64, 1}, R::Array{Float64, 1}, r::Int64, n::Int64)"><pre class="notranslate"><code>DAMMmat(Tₛ::Array{Float64, 1}, θ::Array{Float64, 1}, R::Array{Float64, 1}, r::Int64, n::Int64)
</code></pre></div>
<p dir="auto">Bin data by n quantiles</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; n = 4
julia&gt; poro_val, Tmed, θmed, Rmed, params, x, y, DAMM_Matrix = DAMMmat(Tₛ, θ, R, r, n)"><pre>julia<span class="pl-k">&gt;</span> n <span class="pl-k">=</span> <span class="pl-c1">4</span>
julia<span class="pl-k">&gt;</span> poro_val, Tmed, θmed, Rmed, params, x, y, DAMM_Matrix <span class="pl-k">=</span> <span class="pl-c1">DAMMmat</span>(Tₛ, θ, R, r, n)</pre></div>
<h4 dir="auto"><a id="user-content-dammplot" class="anchor" aria-hidden="true" href="#dammplot"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DAMMplot</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="DAMMplot(Tₛ::Array{Float64, 1}, θ::Array{Float64, 1}, R::Array{Float64, 1}, r::Int64)"><pre class="notranslate"><code>DAMMplot(Tₛ::Array{Float64, 1}, θ::Array{Float64, 1}, R::Array{Float64, 1}, r::Int64)
</code></pre></div>
<p dir="auto">Plot scatter of data and fitted DAMM surface</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; df = DAMMfdata(100)
100×3 DataFrame
 Row │ Tₛ       θ        Rₛ       
     │ Float64  Float64  Float64  
─────┼────────────────────────────
   1 │    31.8      0.3  6.54735
   2 │    14.6      0.3  3.49235
  ⋮  │    ⋮        ⋮        ⋮
  99 │    17.2      0.4  0.880441
 100 │     5.2      0.2  0.0
julia&gt; r = 50
julia&gt; fig = DAMMplot(df.Tₛ, df.θ, df.Rₛ, r)"><pre>julia<span class="pl-k">&gt;</span> df <span class="pl-k">=</span> <span class="pl-c1">DAMMfdata</span>(<span class="pl-c1">100</span>)
<span class="pl-c1">100</span><span class="pl-k">×</span><span class="pl-c1">3</span> DataFrame
 Row │ Tₛ       θ        Rₛ       
     │ Float64  Float64  Float64  
─────┼────────────────────────────
   <span class="pl-c1">1</span> │    <span class="pl-c1">31.8</span>      <span class="pl-c1">0.3</span>  <span class="pl-c1">6.54735</span>
   <span class="pl-c1">2</span> │    <span class="pl-c1">14.6</span>      <span class="pl-c1">0.3</span>  <span class="pl-c1">3.49235</span>
  ⋮  │    ⋮        ⋮        ⋮
  <span class="pl-c1">99</span> │    <span class="pl-c1">17.2</span>      <span class="pl-c1">0.4</span>  <span class="pl-c1">0.880441</span>
 <span class="pl-c1">100</span> │     <span class="pl-c1">5.2</span>      <span class="pl-c1">0.2</span>  <span class="pl-c1">0.0</span>
julia<span class="pl-k">&gt;</span> r <span class="pl-k">=</span> <span class="pl-c1">50</span>
julia<span class="pl-k">&gt;</span> fig <span class="pl-k">=</span> <span class="pl-c1">DAMMplot</span>(df<span class="pl-k">.</span>Tₛ, df<span class="pl-k">.</span>θ, df<span class="pl-k">.</span>Rₛ, r)</pre></div>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/22160257/152836382-14beb21d-0df2-4801-a610-609cc00a1360.png"><img src="https://user-images.githubusercontent.com/22160257/152836382-14beb21d-0df2-4801-a610-609cc00a1360.png" alt="DAMMplot_v0 1 14" style="max-width: 100%;"></a></p>
<h4 dir="auto"><a id="user-content-qbins" class="anchor" aria-hidden="true" href="#qbins"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>qbins</h4>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="qbins(x, y, z, n)"><pre class="notranslate"><code>qbins(x, y, z, n)
</code></pre></div>
<p dir="auto">Bins x into n quantiles, each xbin into n quantiles of y, return z quantile</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; df = DataFrame(x=1:20, y=6:25, z=11:30)
julia&gt; xmed, ymed, zmed = qbins(df.T, df.M, df.R, 3)
  xmed = [9, 9, 9, 15, 15, 15, 21, 21, 21]
  ymed = [12, 14, 16, 19, 20.5, 22, 25, 27, 29]
  zmed = [2, 4, 6, 8.5, 10.5, 15, 17, 19]"><pre>julia<span class="pl-k">&gt;</span> df <span class="pl-k">=</span> <span class="pl-c1">DataFrame</span>(x<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">20</span>, y<span class="pl-k">=</span><span class="pl-c1">6</span><span class="pl-k">:</span><span class="pl-c1">25</span>, z<span class="pl-k">=</span><span class="pl-c1">11</span><span class="pl-k">:</span><span class="pl-c1">30</span>)
julia<span class="pl-k">&gt;</span> xmed, ymed, zmed <span class="pl-k">=</span> <span class="pl-c1">qbins</span>(df<span class="pl-k">.</span>T, df<span class="pl-k">.</span>M, df<span class="pl-k">.</span>R, <span class="pl-c1">3</span>)
  xmed <span class="pl-k">=</span> [<span class="pl-c1">9</span>, <span class="pl-c1">9</span>, <span class="pl-c1">9</span>, <span class="pl-c1">15</span>, <span class="pl-c1">15</span>, <span class="pl-c1">15</span>, <span class="pl-c1">21</span>, <span class="pl-c1">21</span>, <span class="pl-c1">21</span>]
  ymed <span class="pl-k">=</span> [<span class="pl-c1">12</span>, <span class="pl-c1">14</span>, <span class="pl-c1">16</span>, <span class="pl-c1">19</span>, <span class="pl-c1">20.5</span>, <span class="pl-c1">22</span>, <span class="pl-c1">25</span>, <span class="pl-c1">27</span>, <span class="pl-c1">29</span>]
  zmed <span class="pl-k">=</span> [<span class="pl-c1">2</span>, <span class="pl-c1">4</span>, <span class="pl-c1">6</span>, <span class="pl-c1">8.5</span>, <span class="pl-c1">10.5</span>, <span class="pl-c1">15</span>, <span class="pl-c1">17</span>, <span class="pl-c1">19</span>]</pre></div>
<h2 dir="auto"><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Contributing</h2>
<p dir="auto">Issues and pull requests are welcome!</p>
</article></div>