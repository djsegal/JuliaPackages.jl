<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-metida" class="anchor" aria-hidden="true" href="#metida"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Metida</h1>
<p dir="auto">This program comes with absolutely no warranty. No liability is accepted for any loss and risk to public health resulting from use of this software.</p>
<table>
<thead>
<tr>
<th>Version</th>
<th>pkgeval</th>
<th>Cover</th>
<th>Build</th>
<th>Docs</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://juliahub.com/ui/Packages/Metida/asHVr" rel="nofollow"><img src="https://camo.githubusercontent.com/a5c84b6ecb2ce6d74d75e58dc176685bef665f31192830b5109802cb855f116b/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4d65746964612f76657273696f6e2e737667" alt="version" data-canonical-src="https://juliahub.com/docs/Metida/version.svg" style="max-width: 100%;"></a></td>
<td><a href="https://juliahub.com/ui/Packages/Metida/asHVr" rel="nofollow"><img src="https://camo.githubusercontent.com/6bdbed25dcf2e087d5e3d950cc96c91acf224aa6f9ca075b0d9e02caf9c7a10c/68747470733a2f2f6a756c69616875622e636f6d2f646f63732f4d65746964612f706b676576616c2e737667" alt="pkgeval" data-canonical-src="https://juliahub.com/docs/Metida/pkgeval.svg" style="max-width: 100%;"></a></td>
<td><a href="https://codecov.io/gh/PharmCat/Metida.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4b62cd1baa1b7e5326bb14d74aa6fc06e94c2aaab7deed3600a3ea81fca26ca1/68747470733a2f2f636f6465636f762e696f2f67682f506861726d4361742f4d65746964612e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/PharmCat/Metida.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/PharmCat/Metida.jl/workflows/Tier%201/badge.svg"><img src="https://github.com/PharmCat/Metida.jl/workflows/Tier%201/badge.svg" alt="Tier 1" style="max-width: 100%;"></a></td>
<td><a href="https://pharmcat.github.io/Metida.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/56f8252ba8e9d3f0b810769543f77823d2fe031ce560d4c2d69fb1fcad800383/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e737667" alt="Latest docs" data-canonical-src="https://img.shields.io/badge/docs-latest-blue.svg" style="max-width: 100%;"></a> <a href="https://pharmcat.github.io/Metida.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable docs" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">Metida.jl is Julia package for fitting mixed-effects models with flexible covariance structure.</p>
<p dir="auto">Install:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="import Pkg; Pkg.add(&quot;Metida&quot;)"><pre class="notranslate"><code>import Pkg; Pkg.add("Metida")
</code></pre></div>
<p dir="auto">Using:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="using Metida, CSV, DataFrames, CategoricalArrays
df = CSV.File(joinpath(dirname(pathof(Metida)),&quot;..&quot;,&quot;test&quot;,&quot;csv&quot;,&quot;df0.csv&quot;)) |&gt; DataFrame
transform!(df, :subject =&gt; categorical, renamecols=false)
transform!(df, :period =&gt; categorical, renamecols=false)
transform!(df, :sequence =&gt; categorical, renamecols=false)
transform!(df, :formulation =&gt; categorical, renamecols=false)

lmm = LMM(@formula(var~sequence+period+formulation), df;
random = VarEffect(@covstr(formulation|subject), CSH),
repeated = VarEffect(@covstr(formulation|subject), DIAG),
)

fit!(lmm)

# Or you can use macro @lmmformula

lmm = LMM(@lmmformula(var~sequence+period+formulation,
    random = formulation|subject:CSH,
    repeated = formulation|subject:DIAG),
    df0)
fit!(lmm)"><pre class="notranslate"><code>using Metida, CSV, DataFrames, CategoricalArrays
df = CSV.File(joinpath(dirname(pathof(Metida)),"..","test","csv","df0.csv")) |&gt; DataFrame
transform!(df, :subject =&gt; categorical, renamecols=false)
transform!(df, :period =&gt; categorical, renamecols=false)
transform!(df, :sequence =&gt; categorical, renamecols=false)
transform!(df, :formulation =&gt; categorical, renamecols=false)

lmm = LMM(@formula(var~sequence+period+formulation), df;
random = VarEffect(@covstr(formulation|subject), CSH),
repeated = VarEffect(@covstr(formulation|subject), DIAG),
)

fit!(lmm)

# Or you can use macro @lmmformula

lmm = LMM(@lmmformula(var~sequence+period+formulation,
    random = formulation|subject:CSH,
    repeated = formulation|subject:DIAG),
    df0)
fit!(lmm)
</code></pre></div>
<p dir="auto">Also you can use this package with <a href="https://github.com/PharmCat/MetidaNLopt.jl">MatidaNLopt.jl</a> and <a href="https://github.com/PharmCat/MetidaCu.jl">MetidaCu.jl</a>.</p>
<p dir="auto">See also <a href="https://github.com/JuliaStats/MixedModels.jl">MixedModels.jl</a>: powerful package for mixed models.</p>
<p dir="auto">Copyright Â© 2020 Metida Author: Vladimir Arnautov <a href="mailto:mail@pharmcat.net">mail@pharmcat.net</a></p>
</article></div>