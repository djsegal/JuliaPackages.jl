<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-showset" class="anchor" aria-hidden="true" href="#showset"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>ShowSet</h1>
<p><a href="https://travis-ci.com/scheinerman/ShowSet.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/adffc64524935635434185bf45a98f0afbf5a88e7af5ad507c9d101685e91260/68747470733a2f2f7472617669732d63692e636f6d2f73636865696e65726d616e2f53686f775365742e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/scheinerman/ShowSet.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p>This module makes the printing of <code>Set</code> objects in Julia
nicer.</p>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<p>Without the use of this module, <code>Set</code> objects display like this:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; BitSet([1,3,0])
BitSet([1,3,0])

julia&gt; Set([&quot;One&quot;, &quot;Two&quot;, &quot;Three&quot;])
Set(&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;)
"><pre><code>julia&gt; BitSet([1,3,0])
BitSet([1,3,0])

julia&gt; Set(["One", "Two", "Three"])
Set("One","Two","Three")
</code></pre></div>
<p>However, after <code>using ShowSet</code> it looks like this:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; BitSet([1,3,0])
{0,1,3}

julia&gt; Set([&quot;One&quot;, &quot;Two&quot;, &quot;Three&quot;])
{One,Three,Two}
"><pre><code>julia&gt; BitSet([1,3,0])
{0,1,3}

julia&gt; Set(["One", "Two", "Three"])
{One,Three,Two}
</code></pre></div>
<p>The elements of the <code>Set</code> object are sorted into ascending order
unless Julia is unable to do so. In that case, the order of the
objects is arbitrary.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; Set([1, &quot;hello&quot;, 4.5, 2+3im])
{hello,2 + 3im,4.5,1}
"><pre><code>julia&gt; Set([1, "hello", 4.5, 2+3im])
{hello,2 + 3im,4.5,1}
</code></pre></div>
<h2><a id="user-content-representing-the-empty-set" class="anchor" aria-hidden="true" href="#representing-the-empty-set"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Representing the empty set</h2>
<p>By default, this module renders the empty set as <code>Ø</code> (LaTeX <code>\O</code>).
This behavior can be changed with the <code>set_empty</code> function.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; A = Set()
Ø
julia&gt; set_empty(&quot;{}&quot;);

julia&gt; A
{}
"><pre><code>julia&gt; A = Set()
Ø
julia&gt; set_empty("{}");

julia&gt; A
{}
</code></pre></div>
<h2><a id="user-content-conversion-to-string" class="anchor" aria-hidden="true" href="#conversion-to-string"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Conversion to <code>string</code></h2>
<p>We extend the <code>string</code> function for <code>Set</code> and <code>BitSet</code> objects to
provide for their conversion into <code>String</code> objects. Some examples:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; A = Set([&quot;alpha&quot;, &quot;beta&quot;, &quot;gamma&quot;]);

julia&gt; string(A)
&quot;{alpha,beta,gamma}&quot;

julia&gt; B = BitSet([5,3,1]);

julia&gt; string(B)
&quot;{1,3,5}&quot;

julia&gt; typeof(ans)
String
"><pre><code>julia&gt; A = Set(["alpha", "beta", "gamma"]);

julia&gt; string(A)
"{alpha,beta,gamma}"

julia&gt; B = BitSet([5,3,1]);

julia&gt; string(B)
"{1,3,5}"

julia&gt; typeof(ans)
String
</code></pre></div>
</article></div>