<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-imguiopenglbackend" class="anchor" aria-hidden="true" href="#imguiopenglbackend"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>ImGuiOpenGLBackend</h1>
<p dir="auto"><a href="https://github.com/JuliaImGui/ImGuiOpenGLBackend.jl/actions/workflows/ci.yml"><img src="https://github.com/JuliaImGui/ImGuiOpenGLBackend.jl/actions/workflows/ci.yml/badge.svg" alt="CI" style="max-width: 100%;"></a>
<a href="https://github.com/JuliaImGui/ImGuiOpenGLBackend.jl/actions/workflows/TagBot.yml"><img src="https://github.com/JuliaImGui/ImGuiOpenGLBackend.jl/actions/workflows/TagBot.yml/badge.svg" alt="TagBot" style="max-width: 100%;"></a>
<a href="https://codecov.io/gh/JuliaImGui/ImGuiOpenGLBackend.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/8c269c8e422672eff9d319da364950d31184ec81571c40f41bf059b5283fcff3/68747470733a2f2f636f6465636f762e696f2f67682f4a756c6961496d4775692f496d4775694f70656e474c4261636b656e642e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/JuliaImGui/ImGuiOpenGLBackend.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a></p>
<p dir="auto">Julia OpenGL backend for ImGui.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="pkg&gt; add ImGuiOpenGLBackend"><pre class="notranslate"><code>pkg&gt; add ImGuiOpenGLBackend
</code></pre></div>
<h2 dir="auto"><a id="user-content-example" class="anchor" aria-hidden="true" href="#example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using ImGuiGLFWBackend
using ImGuiGLFWBackend.LibCImGui
using ImGuiGLFWBackend.LibGLFW
using ImGuiOpenGLBackend
using ImGuiOpenGLBackend.ModernGL

# create contexts
imgui_ctx = igCreateContext(C_NULL)

window_ctx = ImGuiGLFWBackend.create_context()
window = ImGuiGLFWBackend.get_window(window_ctx)

gl_ctx = ImGuiOpenGLBackend.create_context()

# enable docking and multi-viewport
io = igGetIO()
io.ConfigFlags = unsafe_load(io.ConfigFlags) | ImGuiConfigFlags_DockingEnable
io.ConfigFlags = unsafe_load(io.ConfigFlags) | ImGuiConfigFlags_ViewportsEnable

# set style
igStyleColorsDark(C_NULL)

# init
ImGuiGLFWBackend.init(window_ctx)
ImGuiOpenGLBackend.init(gl_ctx)

try
    while glfwWindowShouldClose(window) == GLFW_FALSE
        glfwPollEvents()
        # new frame
        ImGuiOpenGLBackend.new_frame(gl_ctx)
        ImGuiGLFWBackend.new_frame(window_ctx)
        igNewFrame()

        # UIs
        igShowDemoWindow(Ref(true))
        igShowMetricsWindow(Ref(true))

        # rendering
        igRender()
        glfwMakeContextCurrent(window)
        w_ref, h_ref = Ref{Cint}(0), Ref{Cint}(0)
        glfwGetFramebufferSize(window, w_ref, h_ref)
        display_w, display_h = w_ref[], h_ref[]
        glViewport(0, 0, display_w, display_h)
        glClearColor(0.45, 0.55, 0.60, 1.00)
        glClear(GL_COLOR_BUFFER_BIT)
        ImGuiOpenGLBackend.render(gl_ctx)

        if unsafe_load(igGetIO().ConfigFlags) &amp; ImGuiConfigFlags_ViewportsEnable == ImGuiConfigFlags_ViewportsEnable
            backup_current_context = glfwGetCurrentContext()
            igUpdatePlatformWindows()
            GC.@preserve gl_ctx igRenderPlatformWindowsDefault(C_NULL, pointer_from_objref(gl_ctx))
            glfwMakeContextCurrent(backup_current_context)
        end

        glfwSwapBuffers(window)
    end
catch e
    @error &quot;Error in renderloop!&quot; exception=e
    Base.show_backtrace(stderr, catch_backtrace())
finally
    ImGuiOpenGLBackend.shutdown(gl_ctx)
    ImGuiGLFWBackend.shutdown(window_ctx)
    igDestroyContext(imgui_ctx)
    glfwDestroyWindow(window)
end
"><pre><span class="pl-k">using</span> ImGuiGLFWBackend
<span class="pl-k">using</span> ImGuiGLFWBackend<span class="pl-k">.</span>LibCImGui
<span class="pl-k">using</span> ImGuiGLFWBackend<span class="pl-k">.</span>LibGLFW
<span class="pl-k">using</span> ImGuiOpenGLBackend
<span class="pl-k">using</span> ImGuiOpenGLBackend<span class="pl-k">.</span>ModernGL

<span class="pl-c"><span class="pl-c">#</span> create contexts</span>
imgui_ctx <span class="pl-k">=</span> <span class="pl-c1">igCreateContext</span>(<span class="pl-c1">C_NULL</span>)

window_ctx <span class="pl-k">=</span> ImGuiGLFWBackend<span class="pl-k">.</span><span class="pl-c1">create_context</span>()
window <span class="pl-k">=</span> ImGuiGLFWBackend<span class="pl-k">.</span><span class="pl-c1">get_window</span>(window_ctx)

gl_ctx <span class="pl-k">=</span> ImGuiOpenGLBackend<span class="pl-k">.</span><span class="pl-c1">create_context</span>()

<span class="pl-c"><span class="pl-c">#</span> enable docking and multi-viewport</span>
io <span class="pl-k">=</span> <span class="pl-c1">igGetIO</span>()
io<span class="pl-k">.</span>ConfigFlags <span class="pl-k">=</span> <span class="pl-c1">unsafe_load</span>(io<span class="pl-k">.</span>ConfigFlags) <span class="pl-k">|</span> ImGuiConfigFlags_DockingEnable
io<span class="pl-k">.</span>ConfigFlags <span class="pl-k">=</span> <span class="pl-c1">unsafe_load</span>(io<span class="pl-k">.</span>ConfigFlags) <span class="pl-k">|</span> ImGuiConfigFlags_ViewportsEnable

<span class="pl-c"><span class="pl-c">#</span> set style</span>
<span class="pl-c1">igStyleColorsDark</span>(<span class="pl-c1">C_NULL</span>)

<span class="pl-c"><span class="pl-c">#</span> init</span>
ImGuiGLFWBackend<span class="pl-k">.</span><span class="pl-c1">init</span>(window_ctx)
ImGuiOpenGLBackend<span class="pl-k">.</span><span class="pl-c1">init</span>(gl_ctx)

<span class="pl-k">try</span>
    <span class="pl-k">while</span> <span class="pl-c1">glfwWindowShouldClose</span>(window) <span class="pl-k">==</span> GLFW_FALSE
        <span class="pl-c1">glfwPollEvents</span>()
        <span class="pl-c"><span class="pl-c">#</span> new frame</span>
        ImGuiOpenGLBackend<span class="pl-k">.</span><span class="pl-c1">new_frame</span>(gl_ctx)
        ImGuiGLFWBackend<span class="pl-k">.</span><span class="pl-c1">new_frame</span>(window_ctx)
        <span class="pl-c1">igNewFrame</span>()

        <span class="pl-c"><span class="pl-c">#</span> UIs</span>
        <span class="pl-c1">igShowDemoWindow</span>(<span class="pl-c1">Ref</span>(<span class="pl-c1">true</span>))
        <span class="pl-c1">igShowMetricsWindow</span>(<span class="pl-c1">Ref</span>(<span class="pl-c1">true</span>))

        <span class="pl-c"><span class="pl-c">#</span> rendering</span>
        <span class="pl-c1">igRender</span>()
        <span class="pl-c1">glfwMakeContextCurrent</span>(window)
        w_ref, h_ref <span class="pl-k">=</span> <span class="pl-c1">Ref</span><span class="pl-c1">{Cint}</span>(<span class="pl-c1">0</span>), <span class="pl-c1">Ref</span><span class="pl-c1">{Cint}</span>(<span class="pl-c1">0</span>)
        <span class="pl-c1">glfwGetFramebufferSize</span>(window, w_ref, h_ref)
        display_w, display_h <span class="pl-k">=</span> w_ref[], h_ref[]
        <span class="pl-c1">glViewport</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>, display_w, display_h)
        <span class="pl-c1">glClearColor</span>(<span class="pl-c1">0.45</span>, <span class="pl-c1">0.55</span>, <span class="pl-c1">0.60</span>, <span class="pl-c1">1.00</span>)
        <span class="pl-c1">glClear</span>(GL_COLOR_BUFFER_BIT)
        ImGuiOpenGLBackend<span class="pl-k">.</span><span class="pl-c1">render</span>(gl_ctx)

        <span class="pl-k">if</span> <span class="pl-c1">unsafe_load</span>(<span class="pl-c1">igGetIO</span>()<span class="pl-k">.</span>ConfigFlags) <span class="pl-k">&amp;</span> ImGuiConfigFlags_ViewportsEnable <span class="pl-k">==</span> ImGuiConfigFlags_ViewportsEnable
            backup_current_context <span class="pl-k">=</span> <span class="pl-c1">glfwGetCurrentContext</span>()
            <span class="pl-c1">igUpdatePlatformWindows</span>()
            GC<span class="pl-k">.</span><span class="pl-c1">@preserve</span> gl_ctx <span class="pl-c1">igRenderPlatformWindowsDefault</span>(<span class="pl-c1">C_NULL</span>, <span class="pl-c1">pointer_from_objref</span>(gl_ctx))
            <span class="pl-c1">glfwMakeContextCurrent</span>(backup_current_context)
        <span class="pl-k">end</span>

        <span class="pl-c1">glfwSwapBuffers</span>(window)
    <span class="pl-k">end</span>
<span class="pl-k">catch</span> e
    <span class="pl-c1">@error</span> <span class="pl-s"><span class="pl-pds">"</span>Error in renderloop!<span class="pl-pds">"</span></span> exception<span class="pl-k">=</span>e
    Base<span class="pl-k">.</span><span class="pl-c1">show_backtrace</span>(<span class="pl-c1">stderr</span>, <span class="pl-c1">catch_backtrace</span>())
<span class="pl-k">finally</span>
    ImGuiOpenGLBackend<span class="pl-k">.</span><span class="pl-c1">shutdown</span>(gl_ctx)
    ImGuiGLFWBackend<span class="pl-k">.</span><span class="pl-c1">shutdown</span>(window_ctx)
    <span class="pl-c1">igDestroyContext</span>(imgui_ctx)
    <span class="pl-c1">glfwDestroyWindow</span>(window)
<span class="pl-k">end</span>
</pre></div>
</article></div>