<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-testtools" class="anchor" aria-hidden="true" href="#testtools"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>TestTools</h1>
<table>
  <tbody><tr>
    <td>Documentation</td>
    <td>
      <a href="https://velexi-corporation.github.io/TestTools.jl/dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a>
      <a href="https://velexi-corporation.github.io/TestTools.jl/stable/" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
    </td>
  </tr>
  <tr>
    <td>Build Status</td>
    <td>
      <a href="https://github.com/velexi-corporation/TestTools.jl/actions/workflows/CI.yml"><img src="https://github.com/velexi-corporation/TestTools.jl/actions/workflows/CI.yml/badge.svg" style="max-width: 100%;"></a>
      <a href="https://codecov.io/gh/velexi-corporation/TestTools.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/6632289074fc761b57f5b84c904fd6af39ec001810923076c742ac78c0b6bb58/68747470733a2f2f636f6465636f762e696f2f67682f76656c6578692d636f72706f726174696f6e2f54657374546f6f6c732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d4c57324453304a555746" data-canonical-src="https://codecov.io/gh/velexi-corporation/TestTools.jl/branch/main/graph/badge.svg?token=LW2DS0JUWF" style="max-width: 100%;"></a>
    </td>
  </tr>
  
  <tr>
    <td colspan="2" align="center">
      <a href="https://github.com/velexi-corporation/TestTools.jl/issues"><img src="https://camo.githubusercontent.com/f5054ffcd4245c10d3ec85ef059e07aacf787b560f83ad4aec2236364437d097/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat" style="max-width: 100%;"></a>
      <a href="https://github.com/invenia/BlueStyle"><img src="https://camo.githubusercontent.com/c18fbaa52d94d16b90b19701fc90d289b8a5bb920c74c79bab200b14e75420a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c75652d3434393564312e737667" data-canonical-src="https://img.shields.io/badge/code%20style-blue-4495d1.svg" style="max-width: 100%;"></a>
      <a href="http://hits.dwyl.com/velexi/TestToolsjl" rel="nofollow"><img src="https://camo.githubusercontent.com/1ceadea380a2028d3917586364541965c15584d0df088104fb2cd3effb06dd25/68747470733a2f2f686974732e6477796c2e636f6d2f76656c6578692f54657374546f6f6c736a6c2e7376673f7374796c653d666c61742d7371756172652673686f773d756e69717565" data-canonical-src="https://hits.dwyl.com/velexi/TestToolsjl.svg?style=flat-square&amp;show=unique" style="max-width: 100%;"></a>
    </td>
  </tr>
</tbody></table>
<p dir="auto">TestTools is a collection of CLI tools and APIs that simplifies code testing, coverage
analysis, and style checking. Our goal is to make it a joy to do software testing (or at
least save effort and keystrokes).</p>
<h2 dir="auto"><a id="user-content-why-testtools" class="anchor" aria-hidden="true" href="#why-testtools"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Why TestTools?</h2>
<ul dir="auto">
<li>
<p dir="auto">Easy-to-use (and fast) CLI tools for testing</p>
</li>
<li>
<p dir="auto">Compatible with <code>Pkg.test()</code></p>
</li>
<li>
<p dir="auto">Enhanced test set functionality – diffs for failed comparisons and fail-fast support</p>
</li>
<li>
<p dir="auto">Noninvasive – introduces no package-level dependencies</p>
</li>
</ul>
<h2 dir="auto"><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Quick Start</h2>
<ul dir="auto">
<li>
<p dir="auto">Start Julia in the default (global) environment.</p>
<ul dir="auto">
<li><strong>Note</strong>. Installation in the default environment makes the CLI tools available from
within all projects.</li>
</ul>
</li>
<li>
<p dir="auto">Install the <code>TestTools</code> package.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pkg&gt; add TestTools  # Press ']' to enter the Pkg REPL mode."><pre>pkg<span class="pl-k">&gt;</span> add TestTools  <span class="pl-c"><span class="pl-c">#</span> Press ']' to enter the Pkg REPL mode.</span></pre></div>
</li>
<li>
<p dir="auto">Install the CLI tools (to <code>~/.julia/bin</code>).</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="julia&gt; using TestTools; TestTools.install()"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> TestTools; TestTools<span class="pl-k">.</span><span class="pl-c1">install</span>()</pre></div>
</li>
</ul>
<h2 dir="auto"><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Usage</h2>
<h3 dir="auto"><a id="user-content-cli-utilities" class="anchor" aria-hidden="true" href="#cli-utilities"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>CLI Utilities</h3>
<h4 dir="auto"><a id="user-content-jltest" class="anchor" aria-hidden="true" href="#jltest"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>jltest</code></h4>
<p dir="auto">Run unit tests in a single file.</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ jltest test/tests.jl"><pre>$ jltest test/tests.jl</pre></div>
<p dir="auto">Run all unit tests contained in a directory.</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ jltest test/"><pre>$ jltest test/</pre></div>
<p dir="auto">Run unit tests with fail-fast enabled (i.e., halt testing after the first failing test).</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ jltest -x test/tests.jl"><pre>$ jltest -x test/tests.jl</pre></div>
<h4 dir="auto"><a id="user-content-jlcoverage" class="anchor" aria-hidden="true" href="#jlcoverage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>jlcoverage</code></h4>
<p dir="auto">Generate a coverage report (after running unit tests while collecting coverage data).</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ julia -e 'import Pkg; Pkg.test(&quot;TestTools&quot;; coverage=true)'  # run unit tests

$ jlcoverage  # generate coverage report
-------------------------------------------------------------------------------
File                                  Lines of Code     Missed   Coverage
-------------------------------------------------------------------------------
src/TestTools.jl                                  0          0        N/A
src/jlcodestyle/cli/cli.jl                       34          0     100.0%
...
src/pkg.jl                                       42          3      92.9%
-------------------------------------------------------------------------------
TOTAL                                           289          7      97.6%"><pre>$ julia -e <span class="pl-s"><span class="pl-pds">'</span>import Pkg; Pkg.test("TestTools"; coverage=true)<span class="pl-pds">'</span></span>  <span class="pl-c"><span class="pl-c">#</span> run unit tests</span>

$ jlcoverage  <span class="pl-c"><span class="pl-c">#</span> generate coverage report</span>
-------------------------------------------------------------------------------
File                                  Lines of Code     Missed   Coverage
-------------------------------------------------------------------------------
src/TestTools.jl                                  0          0        N/A
src/jlcodestyle/cli/cli.jl                       34          0     100.0%
...
src/pkg.jl                                       42          3      92.9%
-------------------------------------------------------------------------------
TOTAL                                           289          7      97.6%</pre></div>
<h4 dir="auto"><a id="user-content-jlcodestyle" class="anchor" aria-hidden="true" href="#jlcodestyle"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><code>jlcodestyle</code></h4>
<p dir="auto">Run basic code style check (reformatting of source file disabled).</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ jlcodestyle src/TestTools.jl

$ jlcodestyle --verbose src/TestTools.jl
[ Info: Style = BlueStyle
[ Info: Overwrite = false
Formatting src/TestTools.jl

No style errors found.

$ jlcodestyle examples/jlcodestyle/not-blue-style.jl
Style errors found. Files not modified."><pre>$ jlcodestyle src/TestTools.jl

$ jlcodestyle --verbose src/TestTools.jl
[ Info: Style <span class="pl-k">=</span> BlueStyle
[ Info: Overwrite <span class="pl-k">=</span> <span class="pl-c1">false</span>
Formatting src/TestTools.jl

No style errors found.

$ jlcodestyle examples/jlcodestyle/not-blue-style.jl
Style errors found. Files not modified.</pre></div>
<p dir="auto">Run code style check with reformatting of source file enabled.</p>
<div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ jlcodestyle --overwrite examples/jlcodestyle/not-blue-style.jl
Style errors found. Files modified to correct errors."><pre>$ jlcodestyle --overwrite examples/jlcodestyle/not-blue-style.jl
Style errors found. Files modified to correct errors.</pre></div>
<h2 dir="auto"><a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Acknowledgements</h2>
<ul dir="auto">
<li>
<p dir="auto">TestTools leverages several excellent Julia packages to support its core capabilities.</p>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/JuliaCI/Coverage.jl">Coverage</a></p>
</li>
<li>
<p dir="auto"><a href="https://github.com/JuliaCI/CoverageTools.jl">CoverageTools</a></p>
</li>
<li>
<p dir="auto"><a href="https://github.com/domluna/JuliaFormatter.jl">JuliaFormatter</a></p>
</li>
</ul>
</li>
<li>
<p dir="auto">TestTools borrows ideas (and some code) from the following great Julia packages.</p>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/ssfrr/TestSetExtensions.jl">TestSetExtensions</a></p>
<ul dir="auto">
<li>
<p dir="auto">The base code for <code>EnhancedTestSet</code> (which implements diffs for comparisons and
progress dots) comes directly from <code>TestsetExtensions.ExtendedTestSet</code>.</p>
</li>
<li>
<p dir="auto">The <code>run_tests()</code> and <code>find_tests()</code> methods are essentially a re-implementation
and refactoring of the <code>TestsetExtensions.@includetests</code> macro as methods.</p>
</li>
</ul>
</li>
<li>
<p dir="auto"><a href="https://github.com/YingboMa/SafeTestsets.jl">SafeTestsets</a></p>
<ul dir="auto">
<li>The strategy for isolating tests came from the <code>SafeTestsets.@safetestset</code> macro.</li>
</ul>
</li>
<li>
<p dir="auto"><a href="https://github.com/fredrikekre/jlpkg">jlpkg</a></p>
<ul dir="auto">
<li>The strategy for installing CLI executables came from <code>jlpkg.install()</code>.</li>
</ul>
</li>
</ul>
</li>
<li>
<p dir="auto">TestTools was inspired by analogous code testing packages in the Python ecosystem:</p>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://docs.pytest.org/en/latest/" rel="nofollow">pytest</a></p>
</li>
<li>
<p dir="auto"><a href="https://coverage.readthedocs.io/en/latest/" rel="nofollow">coverage</a></p>
</li>
<li>
<p dir="auto"><a href="https://pycodestyle.pycqa.org/en/latest/" rel="nofollow">pycodestyle</a></p>
</li>
</ul>
</li>
</ul>
</article></div>