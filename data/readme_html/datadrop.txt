<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a href="http://www.repostatus.org/#active" rel="nofollow"><img src="https://camo.githubusercontent.com/ed51270ad41e2b842f9423b165977ac42f8498581be7c17c78818d1a45b834d5/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="Project Status: Active – The project has reached a stable, usable state and is being actively developed." data-canonical-src="http://www.repostatus.org/badges/latest/active.svg" style="max-width: 100%;"></a>
<a href="https://github.com/PetrKryslUCSD/DataDrop.jl/actions"><img src="https://github.com/PetrKryslUCSD/DataDrop.jl/workflows/CI/badge.svg" alt="Build status" style="max-width: 100%;"></a>
<a href="https://app.codecov.io/gh/PetrKryslUCSD/DataDrop.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ff633700221d7a3f47d12b7f82562ea0c7056265e595b3a72b3284804f701a8d/68747470733a2f2f636f6465636f762e696f2f67682f506574724b7279736c554353442f4461746144726f702e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/PetrKryslUCSD/DataDrop.jl/branch/master/graph/badge.svg" style="max-width: 100%;"></a>
<a href="https://petrkryslucsd.github.io/DataDrop.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Latest documentation" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-datadropjl" class="anchor" aria-hidden="true" href="#datadropjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>DataDrop.jl</h1>
<p dir="auto">Simple package for storing data to the disk:</p>
<ul dir="auto">
<li>
<p dir="auto">Store and retrieve matrices, both dense and sparse, and number and string scalar values, using the HDF5 machine-independent binary format.</p>
</li>
<li>
<p dir="auto">Store and retrieve dictionaries of values using the JSON format.</p>
</li>
</ul>
<p dir="auto">To store and retrieve matrix data is as simple as</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; using DataDrop
   
julia&gt; using SparseArrays  
   
julia&gt; c = sprand(4, 3, 0.5)     
4×3 SparseMatrixCSC{Float64, Int64} with 5 stored entries:     
  ⋅   ⋅   0.780225   
  ⋅  0.0612236   ⋅   
  ⋅   ⋅    ⋅   
 0.262007  0.778962   0.0651033  
   
julia&gt; DataDrop.store_matrix(&quot;c.h5&quot;, c)   
   
julia&gt; yac = DataDrop.retrieve_matrix(&quot;c.h5&quot;)   
4×3 SparseMatrixCSC{Float64, Int64} with 5 stored entries:     
  ⋅   ⋅   0.780225   
  ⋅  0.0612236   ⋅   
  ⋅   ⋅    ⋅   
 0.262007  0.778962   0.0651033  "><pre class="notranslate"><code>julia&gt; using DataDrop
   
julia&gt; using SparseArrays  
   
julia&gt; c = sprand(4, 3, 0.5)     
4×3 SparseMatrixCSC{Float64, Int64} with 5 stored entries:     
  ⋅   ⋅   0.780225   
  ⋅  0.0612236   ⋅   
  ⋅   ⋅    ⋅   
 0.262007  0.778962   0.0651033  
   
julia&gt; DataDrop.store_matrix("c.h5", c)   
   
julia&gt; yac = DataDrop.retrieve_matrix("c.h5")   
4×3 SparseMatrixCSC{Float64, Int64} with 5 stored entries:     
  ⋅   ⋅   0.780225   
  ⋅  0.0612236   ⋅   
  ⋅   ⋅    ⋅   
 0.262007  0.778962   0.0651033  
</code></pre></div>
<p dir="auto">To store a numerical value or a string, use</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; DataDrop.store_value(&quot;numbers.h5&quot;, &quot;/mynumber/a&quot;, a)  

julia&gt; DataDrop.retrieve_value(&quot;numbers.h5&quot;, &quot;/mynumber/a&quot;)              
42"><pre class="notranslate"><code>julia&gt; DataDrop.store_value("numbers.h5", "/mynumber/a", a)  

julia&gt; DataDrop.retrieve_value("numbers.h5", "/mynumber/a")              
42
</code></pre></div>
<p dir="auto">To store a dictionary of values, we can do</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="julia&gt; s = &quot;variable-a=0.5:b=5:c=7&quot;
&quot;variable-a=0.5:b=5:c=7&quot;                                             
                        
julia&gt; s =  DataDrop.clean_file_name(s) 
&quot;variable-a=0_5_b=5_c=7&quot;
                
julia&gt; a = DataDrop.with_extension(s, &quot;json&quot;)                                                                                   
&quot;variable-a=0_5_b=5_c=7.json&quot;

julia&gt; d = Dict(&quot;name&quot; =&gt; a, &quot;b&quot; =&gt; 1, &quot;c&quot; =&gt; [3, 1, 3])        
Dict{String, Any} with 3 entries: 
  &quot;name&quot; =&gt; &quot;variable-a=0_5_b=5_c=7.json&quot; 
  &quot;c&quot;    =&gt; [3, 1, 3]
  &quot;b&quot;    =&gt; 1

julia&gt; DataDrop.store_json(a, d)

julia&gt; d1 = DataDrop.retrieve_json(a)
Dict{String, Any} with 3 entries:
  &quot;name&quot; =&gt; &quot;variable-a=0_5_b=5_c=7.json&quot;
  &quot;c&quot;    =&gt; Any[3, 1, 3]
  &quot;b&quot;    =&gt; 1         

julia&gt; "><pre class="notranslate"><code>julia&gt; s = "variable-a=0.5:b=5:c=7"
"variable-a=0.5:b=5:c=7"                                             
                        
julia&gt; s =  DataDrop.clean_file_name(s) 
"variable-a=0_5_b=5_c=7"
                
julia&gt; a = DataDrop.with_extension(s, "json")                                                                                   
"variable-a=0_5_b=5_c=7.json"

julia&gt; d = Dict("name" =&gt; a, "b" =&gt; 1, "c" =&gt; [3, 1, 3])        
Dict{String, Any} with 3 entries: 
  "name" =&gt; "variable-a=0_5_b=5_c=7.json" 
  "c"    =&gt; [3, 1, 3]
  "b"    =&gt; 1

julia&gt; DataDrop.store_json(a, d)

julia&gt; d1 = DataDrop.retrieve_json(a)
Dict{String, Any} with 3 entries:
  "name" =&gt; "variable-a=0_5_b=5_c=7.json"
  "c"    =&gt; Any[3, 1, 3]
  "b"    =&gt; 1         

julia&gt; 
</code></pre></div>
</article></div>