<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-illuminaidatfiles" class="anchor" aria-hidden="true" href="#illuminaidatfiles"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>IlluminaIdatFiles</h1>
<p>This is a low level IO package for Illumina .idat files</p>
<p><strong>References</strong></p>
<p>The implementation follows the code of the <a href="http://www.bioconductor.org/packages/release/bioc/html/illuminaio.html" rel="nofollow">R bioconductor package illuminaio</a> by</p>
<ul>
<li>Smith, L M, Baggerly, A K, Bengtsson, Henrik, Ritchie, E M, Hansen, D K (2013). “illuminaio: An open source IDAT parsing tool for Illumina microarrays.” F1000Research, 2(264). <a href="https://f1000research.com/articles/2-264" rel="nofollow">doi: 10.12688/f1000research.2-264.v1</a>.</li>
</ul>
<h2><a id="user-content-currently-supported-files" class="anchor" aria-hidden="true" href="#currently-supported-files"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Currently supported files</h2>
<p>This package is in an early stage and the following microarrays .idat files are supported:</p>
<ul>
<li>Illumina HumanRef-8 Expression BeadChips</li>
<li>Illumina HumanHT 12 Gene Expression BeadChip</li>
<li>Illumina Infinium MethylationEPIC BeadChip</li>
<li>Illumina Infinium Human Methylation 450K BeadChip</li>
<li>Illumina Infinium Mouse Methylation BeadChip</li>
</ul>
<p>e.g. 204792200130_R01C01_Grn.idat, 204792200130_R01C01_Red.idat</p>
<h2><a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Dependencies</h2>
<h4><a id="user-content-julia-versions" class="anchor" aria-hidden="true" href="#julia-versions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Julia versions</h4>
<ul>
<li>Julia 1.0 or above</li>
</ul>
<h4><a id="user-content-third-party-packages" class="anchor" aria-hidden="true" href="#third-party-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Third party packages</h4>
<ul>
<li>LightXML 0.9 (or above but upper bound is mandatory)</li>
</ul>
<h4><a id="user-content-standard-library-packages" class="anchor" aria-hidden="true" href="#standard-library-packages"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Standard Library packages</h4>
<ul>
<li>Base64</li>
</ul>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<h4><a id="user-content-general-usage" class="anchor" aria-hidden="true" href="#general-usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>General usage</h4>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;IlluminaIdatFiles&quot;);
#Pkg.add(url=&quot;https://github.com/oheil/IlluminaIdatFiles.jl&quot;,rev=&quot;master&quot;)

using IlluminaIdatFiles
"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>IlluminaIdatFiles<span class="pl-pds">"</span></span>);
<span class="pl-c"><span class="pl-c">#</span>Pkg.add(url="https://github.com/oheil/IlluminaIdatFiles.jl",rev="master")</span>

<span class="pl-k">using</span> IlluminaIdatFiles</pre></div>
<p>To read an illumina idat file use the following command:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="idat = idat_read(filename)
"><pre>idat <span class="pl-k">=</span> <span class="pl-c1">idat_read</span>(filename)</pre></div>
<p>Examples:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="filename = raw&quot;c:\temp\idat\204792200130_R01C01_Grn.idat&quot;
idat = idat_read(filename)
"><pre>filename <span class="pl-k">=</span> <span class="pl-s"><span class="pl-c1">raw</span><span class="pl-pds">"</span>c:\temp\idat\204792200130_R01C01_Grn.idat<span class="pl-pds">"</span></span>
idat <span class="pl-k">=</span> <span class="pl-c1">idat_read</span>(filename)</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using GZip
fh = GZip.open(&quot;204792200130_R01C01_Red.idat.gz&quot;)
idat = idat_read(fh)
close(fh)
"><pre><span class="pl-k">using</span> GZip
fh <span class="pl-k">=</span> GZip<span class="pl-k">.</span><span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>204792200130_R01C01_Red.idat.gz<span class="pl-pds">"</span></span>)
idat <span class="pl-k">=</span> <span class="pl-c1">idat_read</span>(fh)
<span class="pl-c1">close</span>(fh)</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using GZip
idat = GZip.open(&quot;204792200130_R01C01_Red.idat.gz&quot;) |&gt; idat_read
"><pre><span class="pl-k">using</span> GZip
idat <span class="pl-k">=</span> GZip<span class="pl-k">.</span><span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>204792200130_R01C01_Red.idat.gz<span class="pl-pds">"</span></span>) <span class="pl-k">|&gt;</span> idat_read</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using TranscodingStreams, CodecZlib
stream = GzipDecompressorStream(open(&quot;204792200130_R01C01_Red.idat.gz&quot;))
idat = idat_read(stream)
close(stream)
"><pre><span class="pl-k">using</span> TranscodingStreams, CodecZlib
stream <span class="pl-k">=</span> <span class="pl-c1">GzipDecompressorStream</span>(<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>204792200130_R01C01_Red.idat.gz<span class="pl-pds">"</span></span>))
idat <span class="pl-k">=</span> <span class="pl-c1">idat_read</span>(stream)
<span class="pl-c1">close</span>(stream)</pre></div>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using TranscodingStreams, CodecZlib
idat = GzipDecompressorStream(open(&quot;204792200130_R01C01_Red.idat.gz&quot;)) |&gt; idat_read
"><pre><span class="pl-k">using</span> TranscodingStreams, CodecZlib
idat <span class="pl-k">=</span> <span class="pl-c1">GzipDecompressorStream</span>(<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>204792200130_R01C01_Red.idat.gz<span class="pl-pds">"</span></span>)) <span class="pl-k">|&gt;</span> idat_read</pre></div>
<p>The returned <code>idat</code> is a struct of type <code>IlluminaIdatFiles.Idat</code>:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="mutable struct Idat
    nRead::Int32
    data::Dict{String,AbstractArray}
    redGreen::Int32
    mostlyNull::String
    barcode::String
    chipType::String
    mostlyA::String
    unknown1::String
    unknown2::String
    unknown3::String
    unknown4::String
    unknown5::String
    unknown6::String
    unknown7::String
    tenthPercentile::Int
    sampleBeadSet::String
    sentrixFormat::String
    sectionLabel::String
    beadSet::String
    veracodeLotNumber::String
end
"><pre><span class="pl-k">mutable struct</span> Idat
    nRead<span class="pl-k">::</span><span class="pl-c1">Int32</span>
    data<span class="pl-k">::</span><span class="pl-c1">Dict{String,AbstractArray}</span>
    redGreen<span class="pl-k">::</span><span class="pl-c1">Int32</span>
    mostlyNull<span class="pl-k">::</span><span class="pl-c1">String</span>
    barcode<span class="pl-k">::</span><span class="pl-c1">String</span>
    chipType<span class="pl-k">::</span><span class="pl-c1">String</span>
    mostlyA<span class="pl-k">::</span><span class="pl-c1">String</span>
    unknown1<span class="pl-k">::</span><span class="pl-c1">String</span>
    unknown2<span class="pl-k">::</span><span class="pl-c1">String</span>
    unknown3<span class="pl-k">::</span><span class="pl-c1">String</span>
    unknown4<span class="pl-k">::</span><span class="pl-c1">String</span>
    unknown5<span class="pl-k">::</span><span class="pl-c1">String</span>
    unknown6<span class="pl-k">::</span><span class="pl-c1">String</span>
    unknown7<span class="pl-k">::</span><span class="pl-c1">String</span>
    tenthPercentile<span class="pl-k">::</span><span class="pl-c1">Int</span>
    sampleBeadSet<span class="pl-k">::</span><span class="pl-c1">String</span>
    sentrixFormat<span class="pl-k">::</span><span class="pl-c1">String</span>
    sectionLabel<span class="pl-k">::</span><span class="pl-c1">String</span>
    beadSet<span class="pl-k">::</span><span class="pl-c1">String</span>
    veracodeLotNumber<span class="pl-k">::</span><span class="pl-c1">String</span>
<span class="pl-k">end</span></pre></div>
<p>Where the most important member is</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="idat.data
"><pre><code>idat.data
</code></pre></div>
<p>which contains all data (and some other) arrays available in the .idat file:</p>
<h5><a id="user-content-eg-illumina-infinium-methylationepic-beadchip" class="anchor" aria-hidden="true" href="#eg-illumina-infinium-methylationepic-beadchip"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>e.g. Illumina Infinium MethylationEPIC BeadChip:</h5>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; idat.data
Dict{String,AbstractArray} with 10 entries:
  &quot;IlluminaID&quot;  =&gt; [1600101, 1600111, 1600115, 1600123, 1600131,...
  &quot;Mean&quot;        =&gt; [3165, 812, 456, 1848, 101, 7450, 5153, 947, 620, 364, ...
  &quot;SD&quot;          =&gt; [229, 288, 233, 219, 60, 983, 683, 169,...
  &quot;NBeads&quot;      =&gt; [14, 7, 19, 14, 14, 10, 16, 15, 12, 12...
  ...

julia&gt; keys(idat.data)
Base.KeySet for a Dict{String,AbstractArray} with 10 entries. Keys:
  &quot;blockType&quot;
  &quot;NBeads&quot;
  &quot;MidBlock&quot;
  &quot;codeVersion&quot;
  &quot;SD&quot;
  &quot;runTime&quot;
  &quot;blockPars&quot;
  &quot;IlluminaID&quot;
  &quot;Mean&quot;
  &quot;blockCode&quot;
"><pre><code>julia&gt; idat.data
Dict{String,AbstractArray} with 10 entries:
  "IlluminaID"  =&gt; [1600101, 1600111, 1600115, 1600123, 1600131,...
  "Mean"        =&gt; [3165, 812, 456, 1848, 101, 7450, 5153, 947, 620, 364, ...
  "SD"          =&gt; [229, 288, 233, 219, 60, 983, 683, 169,...
  "NBeads"      =&gt; [14, 7, 19, 14, 14, 10, 16, 15, 12, 12...
  ...

julia&gt; keys(idat.data)
Base.KeySet for a Dict{String,AbstractArray} with 10 entries. Keys:
  "blockType"
  "NBeads"
  "MidBlock"
  "codeVersion"
  "SD"
  "runTime"
  "blockPars"
  "IlluminaID"
  "Mean"
  "blockCode"
</code></pre></div>
<h5><a id="user-content-eg-illumina-humanht-12-gene-expression-beadchip" class="anchor" aria-hidden="true" href="#eg-illumina-humanht-12-gene-expression-beadchip"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>e.g. Illumina HumanHT 12 Gene Expression BeadChip:</h5>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia&gt; idat.data
Dict{String,AbstractArray} with 15 entries:
  &quot;__IllumicodeBinData&quot;    =&gt; [10008, 10010, 10014, 10017, 10019, 10020,...
  &quot;__MeanBinData&quot;          =&gt; [768.46, 94.0066, 86.5272, 94.533, 112.999,...
  &quot;__NumBeadsBinData&quot;      =&gt; [23, 22, 21, 25, 16, 26, 24, 17,...
  ...

julia&gt; keys(idat.data)
Base.KeySet for a Dict{String,AbstractArray} with 15 entries. Keys:
  &quot;__CodesBinData&quot;
  &quot;SoftwareApp&quot;
  &quot;__BackgroundBinData&quot;
  &quot;Date&quot;
  &quot;__IllumicodeBinData&quot;
  &quot;Version&quot;
  &quot;__TrimmedMeanBinData&quot;
  &quot;Name&quot;
  &quot;__BackgroundDevBinData&quot;
  &quot;__DevBinData&quot;
  &quot;__MeanBinData&quot;
  &quot;Parameters&quot;
  &quot;__NumGoodBeadsBinData&quot;
  &quot;__NumBeadsBinData&quot;
  &quot;__MedianBinData&quot;  
"><pre><code>julia&gt; idat.data
Dict{String,AbstractArray} with 15 entries:
  "__IllumicodeBinData"    =&gt; [10008, 10010, 10014, 10017, 10019, 10020,...
  "__MeanBinData"          =&gt; [768.46, 94.0066, 86.5272, 94.533, 112.999,...
  "__NumBeadsBinData"      =&gt; [23, 22, 21, 25, 16, 26, 24, 17,...
  ...

julia&gt; keys(idat.data)
Base.KeySet for a Dict{String,AbstractArray} with 15 entries. Keys:
  "__CodesBinData"
  "SoftwareApp"
  "__BackgroundBinData"
  "Date"
  "__IllumicodeBinData"
  "Version"
  "__TrimmedMeanBinData"
  "Name"
  "__BackgroundDevBinData"
  "__DevBinData"
  "__MeanBinData"
  "Parameters"
  "__NumGoodBeadsBinData"
  "__NumBeadsBinData"
  "__MedianBinData"  
</code></pre></div>
<p>The keys are the original data specifiers present in the .idat file, which are different for the different chip types and maybe different between versions.</p>
</article></div>