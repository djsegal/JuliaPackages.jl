<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/JuliaNeighbors/IVFADC.jl/blob/master/docs/src/assets/logo.png"><img src="https://github.com/JuliaNeighbors/IVFADC.jl/raw/master/docs/src/assets/logo.png" alt="Alt text" style="max-width: 100%;"></a></p>
<p dir="auto">Inverted file system with asymmetric distance computation for billion-scale approximate nearest neighbor search.</p>
<p dir="auto"><a href="LICENSE.md"><img src="https://camo.githubusercontent.com/bbf49a2eb96e6f718803f2493bd7aa3baae61abb09b7f8fc185a94e08c504dc6/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c6174" alt="License" data-canonical-src="http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat" style="max-width: 100%;"></a>
<a href="https://travis-ci.org/JuliaNeighbors/IVFADC.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/386019d0f2572b0304dd25b2229fdda708ce4afcae184fd85195d21a1bbc2c43/68747470733a2f2f7472617669732d63692e6f72672f4a756c69614e65696768626f72732f4956464144432e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/JuliaNeighbors/IVFADC.jl.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://coveralls.io/github/JuliaNeighbors/IVFADC.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/32cf90541f3d56754d4c73ebc4b716fc5710473ad0042e0bed4d234ecea71bb3/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4a756c69614e65696768626f72732f4956464144432e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/JuliaNeighbors/IVFADC.jl/badge.svg?branch=master" style="max-width: 100%;"></a>
<a href="https://JuliaNeighbors.github.io/IVFADC.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a>
<a href="https://JuliaNeighbors.github.io/IVFADC.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
Pkg.add(&quot;IVFADC&quot;)"><pre><span class="pl-k">using</span> Pkg
Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">"</span>IVFADC<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">or</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="Pkg.add(PackageSpec(url=&quot;https://github.com/JuliaNeighbors/IVFADC.jl&quot;, rev=&quot;master&quot;))"><pre>Pkg<span class="pl-k">.</span><span class="pl-c1">add</span>(<span class="pl-c1">PackageSpec</span>(url<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>https://github.com/JuliaNeighbors/IVFADC.jl<span class="pl-pds">"</span></span>, rev<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>master<span class="pl-pds">"</span></span>))</pre></div>
<p dir="auto">for the latest <code>master</code> branch.</p>
<h2 dir="auto"><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Examples</h2>
<h3 dir="auto"><a id="user-content-create-an-index" class="anchor" aria-hidden="true" href="#create-an-index"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Create an index</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using IVFADC
using Distances

nrows, nvectors = 50, 1_000
data = rand(Float32, nrows, nvectors)

kc = 100  # coarse vectors (i.e. Voronoi cells)
k = 256   # residual quantization levels/codebook
m = 10	  # residual quantizer codebooks

ivfadc = IVFADCIndex(data,
                     kc=kc,
                     k=k,
                     m=m,
                     coarse_quantizer=:naive,
                     coarse_distance=SqEuclidean(),
                     quantization_distance=SqEuclidean(),
                     quantization_method=:pq,
                     index_type=UInt16)
# IVFADCIndex, naive coarse quantizer, 12-byte encoding (2 + 1×10), 1000 Float32 vectors"><pre><span class="pl-k">using</span> IVFADC
<span class="pl-k">using</span> Distances

nrows, nvectors <span class="pl-k">=</span> <span class="pl-c1">50</span>, <span class="pl-c1">1_000</span>
data <span class="pl-k">=</span> <span class="pl-c1">rand</span>(Float32, nrows, nvectors)

kc <span class="pl-k">=</span> <span class="pl-c1">100</span>  <span class="pl-c"><span class="pl-c">#</span> coarse vectors (i.e. Voronoi cells)</span>
k <span class="pl-k">=</span> <span class="pl-c1">256</span>   <span class="pl-c"><span class="pl-c">#</span> residual quantization levels/codebook</span>
m <span class="pl-k">=</span> <span class="pl-c1">10</span>	  <span class="pl-c"><span class="pl-c">#</span> residual quantizer codebooks</span>

ivfadc <span class="pl-k">=</span> <span class="pl-c1">IVFADCIndex</span>(data,
                     kc<span class="pl-k">=</span>kc,
                     k<span class="pl-k">=</span>k,
                     m<span class="pl-k">=</span>m,
                     coarse_quantizer<span class="pl-k">=</span><span class="pl-c1">:naive</span>,
                     coarse_distance<span class="pl-k">=</span><span class="pl-c1">SqEuclidean</span>(),
                     quantization_distance<span class="pl-k">=</span><span class="pl-c1">SqEuclidean</span>(),
                     quantization_method<span class="pl-k">=</span><span class="pl-c1">:pq</span>,
                     index_type<span class="pl-k">=</span>UInt16)
<span class="pl-c"><span class="pl-c">#</span> IVFADCIndex, naive coarse quantizer, 12-byte encoding (2 + 1×10), 1000 Float32 vectors</span></pre></div>
<h3 dir="auto"><a id="user-content-add-and-delete-points-to-the-index" class="anchor" aria-hidden="true" href="#add-and-delete-points-to-the-index"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Add and delete points to the index</h3>
<p dir="auto">Points can be added to the index by using the <code>push!</code> and <code>pushfirst!</code> methods.
Removing points from the index can be performed using the <code>pop!</code>, <code>popfirst!</code> and
<code>delete_from_index!</code> methods.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="for i in 1:15
    push!(ivfadc, rand(Float32, nrows))
end
length(ivfadc)
# 1015

delete_from_index!(ivfadc, [1000, 1001, 1010, 1015])
length(ivfadc)
# 1011"><pre><span class="pl-k">for</span> i <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">15</span>
    <span class="pl-c1">push!</span>(ivfadc, <span class="pl-c1">rand</span>(Float32, nrows))
<span class="pl-k">end</span>
<span class="pl-c1">length</span>(ivfadc)
<span class="pl-c"><span class="pl-c">#</span> 1015</span>

<span class="pl-c1">delete_from_index!</span>(ivfadc, [<span class="pl-c1">1000</span>, <span class="pl-c1">1001</span>, <span class="pl-c1">1010</span>, <span class="pl-c1">1015</span>])
<span class="pl-c1">length</span>(ivfadc)
<span class="pl-c"><span class="pl-c">#</span> 1011</span></pre></div>
<p dir="auto">The <code>pop!</code> and <code>popfirst!</code> methods also return the indexed (and quantized) vectors respectively.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="pop!(ivfadc)
# 50-element Array{Float32,1}:
#   0.30565456
#   0.6903644
#   ⋮
#   0.20116138
#   0.90699536

popfirst!(ivfadc)
# 50-element Array{Float32,1}:
#  0.29412186
#  0.0709379
#  ⋮
#  0.51727176
#  0.69718516

length(ivfadc)
# 09"><pre><span class="pl-c1">pop!</span>(ivfadc)
<span class="pl-c"><span class="pl-c">#</span> 50-element Array{Float32,1}:</span>
<span class="pl-c"><span class="pl-c">#</span>   0.30565456</span>
<span class="pl-c"><span class="pl-c">#</span>   0.6903644</span>
<span class="pl-c"><span class="pl-c">#</span>   ⋮</span>
<span class="pl-c"><span class="pl-c">#</span>   0.20116138</span>
<span class="pl-c"><span class="pl-c">#</span>   0.90699536</span>

<span class="pl-c1">popfirst!</span>(ivfadc)
<span class="pl-c"><span class="pl-c">#</span> 50-element Array{Float32,1}:</span>
<span class="pl-c"><span class="pl-c">#</span>  0.29412186</span>
<span class="pl-c"><span class="pl-c">#</span>  0.0709379</span>
<span class="pl-c"><span class="pl-c">#</span>  ⋮</span>
<span class="pl-c"><span class="pl-c">#</span>  0.51727176</span>
<span class="pl-c"><span class="pl-c">#</span>  0.69718516</span>

<span class="pl-c1">length</span>(ivfadc)
<span class="pl-c"><span class="pl-c">#</span> 09</span></pre></div>
<h3 dir="auto"><a id="user-content-search-the-index" class="anchor" aria-hidden="true" href="#search-the-index"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Search the index</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="point = data[:, 123];
idxs, dists = knn_search(ivfadc, point, 3)
# (UInt16[0x007a, 0x0237, 0x0081], Float32[4.303085, 10.026548, 10.06385])

int_idxs = Int.(idxs) .+ 1  # retrieve 1-based integer neighbors
# 3-element Array{Int64,1}:
#  123
#  568
#  130"><pre>point <span class="pl-k">=</span> data[:, <span class="pl-c1">123</span>];
idxs, dists <span class="pl-k">=</span> <span class="pl-c1">knn_search</span>(ivfadc, point, <span class="pl-c1">3</span>)
<span class="pl-c"><span class="pl-c">#</span> (UInt16[0x007a, 0x0237, 0x0081], Float32[4.303085, 10.026548, 10.06385])</span>

int_idxs <span class="pl-k">=</span> <span class="pl-c1">Int</span>.(idxs) <span class="pl-k">.+</span> <span class="pl-c1">1</span>  <span class="pl-c"><span class="pl-c">#</span> retrieve 1-based integer neighbors</span>
<span class="pl-c"><span class="pl-c">#</span> 3-element Array{Int64,1}:</span>
<span class="pl-c"><span class="pl-c">#</span>  123</span>
<span class="pl-c"><span class="pl-c">#</span>  568</span>
<span class="pl-c"><span class="pl-c">#</span>  130</span></pre></div>
<h2 dir="auto"><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h2>
<p dir="auto">To keep track with the latest features, please consult <a href="https://github.com/JuliaNeighbors/IVFADC.jl/blob/master/NEWS.md">NEWS.md</a> and the <a href="https://JuliaNeighbors.github.io/IVFADC.jl/dev" rel="nofollow">documentation</a>.</p>
<h2 dir="auto"><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>License</h2>
<p dir="auto">The code has an MIT license and therefore it is free.</p>
<h2 dir="auto"><a id="user-content-reporting-bugs" class="anchor" aria-hidden="true" href="#reporting-bugs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reporting Bugs</h2>
<p dir="auto">This is work in progress and bugs may still be present...¯\<em>(ツ)</em>/¯ Do not worry, just <a href="https://github.com/JuliaNeighbors/IVFADC.jl/issues/new">open an issue</a> to report a bug or request a feature.</p>
<h2 dir="auto"><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>References</h2>
<ul dir="auto">
<li><a href="https://hal.inria.fr/file/index/docid/514462/filename/paper_hal.pdf" rel="nofollow">Jègou et al. "Product quantization for nearest neighbor search", IEEE TPAMI, 2011</a></li>
<li><a href="http://openaccess.thecvf.com/content_ECCV_2018/papers/Dmitry_Baranchuk_Revisiting_the_Inverted_ECCV_2018_paper.pdf" rel="nofollow">Baranchuk et al. "Revisiting the inverted indices for billion-scale approximate nearest neighbors, ECCV, 2018"</a></li>
</ul>
</article></div>