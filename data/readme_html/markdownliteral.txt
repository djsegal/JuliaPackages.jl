<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-markdownliteraljl-alpha-release" class="anchor" aria-hidden="true" href="#markdownliteraljl-alpha-release"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>MarkdownLiteral.jl <em>(alpha release)</em></h1>
<p dir="auto">The macro <code>@markdown</code> lets you write <a href="https://www.markdownguide.org/getting-started/" rel="nofollow">Markdown</a> inside Pluto notebooks. <em>Here is an example:</em></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@markdown(&quot;&quot;&quot;
# MarkdownLiteral.jl

The macro `@markdown` lets you write [Markdown](https://www.markdownguide.org/getting-started/) inside Pluto notebooks. *Here is an example:*
&quot;&quot;&quot;)"><pre><span class="pl-c1">@markdown</span>(<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s"># MarkdownLiteral.jl</span>
<span class="pl-s"></span>
<span class="pl-s">The macro `@markdown` lets you write [Markdown](https://www.markdownguide.org/getting-started/) inside Pluto notebooks. *Here is an example:*</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>)</pre></div>
<blockquote>
<p dir="auto">The Markdown parsing is powered by <a href="https://github.com/MichaelHatherly/CommonMark.jl">CommonMark.jl</a>, a Julia implementation of the <a href="https://commonmark.org/" rel="nofollow">CommonMark</a> specification. Compared to Julia's <a href="https://docs.julialang.org/en/v1/stdlib/Markdown/" rel="nofollow">built-in Markdown parsing</a>, this system is more <em>predicatable</em> and <em>powerful</em>.</p>
</blockquote>
<p dir="auto">The macro <code>@markdown</code> lets you write <a href="https://developer.mozilla.org/docs/Web/HTML" rel="nofollow">HTML</a> inside Pluto notebooks. <em>Here is an example:</em></p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@markdown(&quot;&quot;&quot;
&lt;p&gt;
	The macro &lt;code&gt;@markdown&lt;/code&gt; lets you write &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML&quot;&gt;HTML&lt;/a&gt; inside Pluto notebooks.
	&lt;em&gt;Here is an example:&lt;/em&gt;
&lt;/p&gt;
&quot;&quot;&quot;)"><pre><span class="pl-c1">@markdown</span>(<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">&lt;p&gt;</span>
<span class="pl-s">	The macro &lt;code&gt;@markdown&lt;/code&gt; lets you write &lt;a href="https://developer.mozilla.org/docs/Web/HTML"&gt;HTML&lt;/a&gt; inside Pluto notebooks.</span>
<span class="pl-s">	&lt;em&gt;Here is an example:&lt;/em&gt;</span>
<span class="pl-s">&lt;/p&gt;</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>)</pre></div>
<blockquote>
<p dir="auto">HTML parsing and interpolation is powered by <a href="https://github.com/MechanicalRabbit/HypertextLiteral.jl">HypertextLiteral.jl</a>, an interpolation system that understands HTML, CSS and even JavaScript!</p>
</blockquote>
<p dir="auto">Did you see that? <strong>It is the same macro!</strong> But that's not all!</p>
<h2 dir="auto"><a id="user-content-interpolation" class="anchor" aria-hidden="true" href="#interpolation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Interpolation</h2>
<p dir="auto">You can unlock superpowers by combining <code>@markdown</code> with <strong>interpolation</strong> (using <code>$</code>). For our example, let's create some data:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="films = [
	(title=&quot;Frances Ha&quot;, director=&quot;Noah Baumbach&quot;, year=2012)
	(title=&quot;Portrait de la jeune fille en feu&quot;, director=&quot;Céline Sciamma&quot;, year=2019)
	(title=&quot;De noorderlingen&quot;, director=&quot;Alex van Warmerdam&quot;, year=1992)
]"><pre>films <span class="pl-k">=</span> [
	(title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Frances Ha<span class="pl-pds">"</span></span>, director<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Noah Baumbach<span class="pl-pds">"</span></span>, year<span class="pl-k">=</span><span class="pl-c1">2012</span>)
	(title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Portrait de la jeune fille en feu<span class="pl-pds">"</span></span>, director<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Céline Sciamma<span class="pl-pds">"</span></span>, year<span class="pl-k">=</span><span class="pl-c1">2019</span>)
	(title<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>De noorderlingen<span class="pl-pds">"</span></span>, director<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Alex van Warmerdam<span class="pl-pds">"</span></span>, year<span class="pl-k">=</span><span class="pl-c1">1992</span>)
]</pre></div>
<p dir="auto">Now, we can use <em>interpolation</em> to display our data:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@markdown(&quot;&quot;&quot;
My films:
$([
	&quot;- **$(f.title)** ($(f.year)) by _$(f.director)_\n&quot;
	for f in films
])
&quot;&quot;&quot;)"><pre><span class="pl-c1">@markdown</span>(<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">My films:</span>
<span class="pl-s"><span class="pl-v">$([</span></span>
<span class="pl-s"><span class="pl-v">	<span class="pl-s"><span class="pl-pds">"</span>- **<span class="pl-v">$(f<span class="pl-k">.</span>title)</span>** (<span class="pl-v">$(f<span class="pl-k">.</span>year)</span>) by _<span class="pl-v">$(f<span class="pl-k">.</span>director)</span>_<span class="pl-cce">\n</span><span class="pl-pds">"</span></span></span></span>
<span class="pl-s"><span class="pl-v">	<span class="pl-k">for</span> f <span class="pl-k">in</span> films</span></span>
<span class="pl-s"><span class="pl-v">])</span></span>
<span class="pl-s"><span class="pl-pds">"""</span></span>)</pre></div>
<p dir="auto">This gives us:</p>
<blockquote>
<p dir="auto">My films:</p>
<ul dir="auto">
<li><strong>Frances Ha</strong> (2012) by <em>Noah Baumbach</em></li>
<li><strong>Portrait de la jeune fille en feu</strong> (2019) by <em>Céline Sciamma</em></li>
<li><strong>De noorderlingen</strong> (1992) by <em>Alex van Warmerdam</em></li>
</ul>
</blockquote>
<p dir="auto">Alternatively, you could write this using HTML instead of Markdown (<em>with the same macro!</em>):</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@markdown(&quot;&quot;&quot;
&lt;p&gt;My films:&lt;/p&gt;
&lt;ul&gt;
$([
	@markdown(&quot;&lt;li&gt;
		&lt;b&gt;$(f.title)&lt;/b&gt; ($(f.year)) by &lt;em&gt;$(f.director)&lt;/em&gt;
	&lt;/li&gt;&quot;)
	for f in films
])
&lt;/ul&gt;
&quot;&quot;&quot;)"><pre><span class="pl-c1">@markdown</span>(<span class="pl-s"><span class="pl-pds">"""</span></span>
<span class="pl-s">&lt;p&gt;My films:&lt;/p&gt;</span>
<span class="pl-s">&lt;ul&gt;</span>
<span class="pl-s"><span class="pl-v">$([</span></span>
<span class="pl-s"><span class="pl-v">	<span class="pl-c1">@markdown</span>(<span class="pl-s"><span class="pl-pds">"</span>&lt;li&gt;</span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s">		&lt;b&gt;<span class="pl-v">$(f<span class="pl-k">.</span>title)</span>&lt;/b&gt; (<span class="pl-v">$(f<span class="pl-k">.</span>year)</span>) by &lt;em&gt;<span class="pl-v">$(f<span class="pl-k">.</span>director)</span>&lt;/em&gt;</span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s">	&lt;/li&gt;<span class="pl-pds">"</span></span>)</span></span>
<span class="pl-s"><span class="pl-v">	<span class="pl-k">for</span> f <span class="pl-k">in</span> films</span></span>
<span class="pl-s"><span class="pl-v">])</span></span>
<span class="pl-s">&lt;/ul&gt;</span>
<span class="pl-s"><span class="pl-pds">"""</span></span>)</pre></div>
<h2 dir="auto"><a id="user-content-advanced-interpolation" class="anchor" aria-hidden="true" href="#advanced-interpolation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Advanced interpolation</h2>
<p dir="auto">Because interpolation is powered by <a href="https://github.com/MechanicalRabbit/HypertextLiteral.jl">HypertextLiteral.jl</a>, you can use advanced features:</p>
<ul dir="auto">
<li>Interpolated attributes are automatically escaped</li>
<li>You can use a <code>NamedTuple</code> or <code>Dict</code> for the CSS <code>style</code> attribute</li>
<li>Interpolating Julia objects into a <code>&lt;script&gt;</code> will automatically convert to JavaScript code(!)</li>
</ul>
<p dir="auto">For</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="logs = [
	(text=&quot;Info&quot;, urgent=false),
	(text=&quot;Alert&quot;, urgent=true),
	(text=&quot;Update&quot;, urgent=false),
]"><pre>logs <span class="pl-k">=</span> [
	(text<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Info<span class="pl-pds">"</span></span>, urgent<span class="pl-k">=</span><span class="pl-c1">false</span>),
	(text<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Alert<span class="pl-pds">"</span></span>, urgent<span class="pl-k">=</span><span class="pl-c1">true</span>),
	(text<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>Update<span class="pl-pds">"</span></span>, urgent<span class="pl-k">=</span><span class="pl-c1">false</span>),
]</pre></div>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="@markdown(&quot;$((
	@markdown(&quot;&lt;div style=$((
        font_weight=900,
		padding=&quot;.5em&quot;,
		background=log.urgent ? &quot;pink&quot; : &quot;lightblue&quot;,
	))&gt;$(log.text)&lt;/div&gt;&quot;)
	for log in logs
))&quot;)"><pre><span class="pl-c1">@markdown</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-v">$((</span></span>
<span class="pl-s"><span class="pl-v">	<span class="pl-c1">@markdown</span>(<span class="pl-s"><span class="pl-pds">"</span>&lt;div style=<span class="pl-v">$((</span></span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s"><span class="pl-v">        font_weight<span class="pl-k">=</span><span class="pl-c1">900</span>,</span></span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s"><span class="pl-v">		padding<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>.5em<span class="pl-pds">"</span></span>,</span></span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s"><span class="pl-v">		background<span class="pl-k">=</span>log<span class="pl-k">.</span>urgent <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">"</span>pink<span class="pl-pds">"</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>lightblue<span class="pl-pds">"</span></span>,</span></span></span></span>
<span class="pl-s"><span class="pl-v"><span class="pl-s"><span class="pl-v">	))</span>&gt;<span class="pl-v">$(log<span class="pl-k">.</span>text)</span>&lt;/div&gt;<span class="pl-pds">"</span></span>)</span></span>
<span class="pl-s"><span class="pl-v">	<span class="pl-k">for</span> log <span class="pl-k">in</span> logs</span></span>
<span class="pl-s"><span class="pl-v">))</span><span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">Result:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/6933510/146623300-316e5a17-2daf-43ed-b70c-6c33278faf32.png"><img src="https://user-images.githubusercontent.com/6933510/146623300-316e5a17-2daf-43ed-b70c-6c33278faf32.png" alt="" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-old-readme" class="anchor" aria-hidden="true" href="#old-readme"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Old README</h1>
<blockquote>
<h3 dir="auto"><a id="user-content-demo-notebook" class="anchor" aria-hidden="true" href="#demo-notebook"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a><a href="https://htmlview.glitch.me/?https://gist.github.com/fonsp/29015dc6fd9438cd164a51fe3bef117d" rel="nofollow">DEMO NOTEBOOK</a></h3>
</blockquote>
<details><summary>Screenshots</summary>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/6933510/146370539-3c6245f7-c171-45d7-928d-083212569de8.png"><img src="https://user-images.githubusercontent.com/6933510/146370539-3c6245f7-c171-45d7-928d-083212569de8.png" alt="Schermafbeelding 2021-12-16 om 13 17 09" style="max-width: 100%;"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://user-images.githubusercontent.com/6933510/146370562-6636c73b-61a1-40d8-93c2-b631ba95af98.png"><img src="https://user-images.githubusercontent.com/6933510/146370562-6636c73b-61a1-40d8-93c2-b631ba95af98.png" alt="Schermafbeelding 2021-12-16 om 13 15 48" style="max-width: 100%;"></a></p>
</details>
<h1 dir="auto"><a id="user-content-features" class="anchor" aria-hidden="true" href="#features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Features</h1>
<p dir="auto">The list of features is really simple to explain: it is everything that CommonMark gives, plus everything that HypertextLiteral gives! This includes:</p>
<ul dir="auto">
<li>CommonMark! Markdown but less glitchy!</li>
<li>Really flexible interpolation support with infinite nesting and syntax highlighting (since it is a <code>@markdown("""</code> macro instead of <code>md"""</code>)</li>
<li>Interpolate Julia objects into <code>&lt;script&gt;</code> to automatically convert to JS literals</li>
<li>Context-aware HTML escaping</li>
<li>Automatic quote wrapping for HTML attributes</li>
<li>Use a <code>Dict</code> or <code>NamedTuple</code> for the <code>style</code> attribute inside an HTML tag</li>
</ul>
<h1 dir="auto"><a id="user-content-implementation" class="anchor" aria-hidden="true" href="#implementation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Implementation</h1>
<p dir="auto">Also cool: the code is extremely short!</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="macro md(expr)
	cm_parser = CommonMark.Parser()
	quote
		result = @htl($expr)
		htl_output = repr(MIME&quot;text/html&quot;(), result)

		$(cm_parser)(htl_output)
	end
end"><pre><span class="pl-k">macro</span> <span class="pl-en">md</span>(expr)
	cm_parser <span class="pl-k">=</span> CommonMark<span class="pl-k">.</span><span class="pl-c1">Parser</span>()
	<span class="pl-k">quote</span>
		result <span class="pl-k">=</span> <span class="pl-c1">@htl</span>(<span class="pl-k">$</span>expr)
		htl_output <span class="pl-k">=</span> <span class="pl-c1">repr</span>(<span class="pl-s"><span class="pl-pds"><span class="pl-c1">MIME</span>"</span>text/html<span class="pl-pds">"</span></span>(), result)

		<span class="pl-k">$</span>(cm_parser)(htl_output)
	<span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">It is essentially the <code>@htl</code> macro for HypertextLiteral.jl, but the result is passed through a CommonMark parser. This works, because:</p>
<ul dir="auto">
<li>CommonMark allows raw HTML</li>
<li>HypertextLiteral leaves literal content unchanged, so <code>hello *world*</code> appears exactly as-is!</li>
</ul>
</article></div>