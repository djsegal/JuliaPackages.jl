<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-latticeqcdjl-ver-05" class="anchor" aria-hidden="true" href="#latticeqcdjl-ver-05"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LatticeQCD.jl (ver. 0.5)</h1>
<p><a href="https://travis-ci.com/cometscome/LatticeQCD.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/3cace155b5bd8d5895579331c2738bd69adf7da40738db29d0d1323773ac49f7/68747470733a2f2f7472617669732d63692e636f6d2f636f6d657473636f6d652f4c6174746963655143442e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/cometscome/LatticeQCD.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/cometscome/LatticeQCD.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/831a341aba2a3ea917e3ed8c448f9f69dfd1522bc1294b7eadd8b020dc22449b/68747470733a2f2f636f6465636f762e696f2f67682f636f6d657473636f6d652f4c6174746963655143442e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/cometscome/LatticeQCD.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/cometscome/LatticeQCD.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/210afc41a8506b154ad795135c539039e6e52d0772d58280b3031e043e64c40e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f636f6d657473636f6d652f4c6174746963655143442e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage" data-canonical-src="https://coveralls.io/repos/github/cometscome/LatticeQCD.jl/badge.svg?branch=master" style="max-width:100%;"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="logo.png"><img src="logo.png" alt="LatticeQCD.jl" style="max-width:100%;"></a></p>
<p>This code enabales you to perform lattice QCD calculations! Native Julia code for Lattice QCD.</p>
<ul>
<li>
<p><a href="https://pdg.lbl.gov/2019/reviews/rpp2018-rev-lattice-qcd.pdf" rel="nofollow">What is lattice QCD? (PDG)</a> : Lattice regulated quantum chromo-dynamics used in high energy physics.</p>
</li>
<li>
<p><a href="https://julialang.org/" rel="nofollow">What is Julia?</a> : An easy and fast scientific programming launguage with the JIT compilar</p>
</li>
</ul>
<p><a target="_blank" rel="noopener noreferrer" href="demo.gif"><img src="demo.gif" alt="demo" style="max-width:100%;"></a></p>
<p>You can start it in <a href="https://colab.research.google.com/drive/1xmUdDxq0aLuZdM3l4D_MkmI7-lbeQV9s?usp=sharing#scrollTo=voHnFRafPt8D" rel="nofollow">Google Colab</a></p>
<h1><a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Quick start</h1>
<p>You can start lattice QCD in 5 steps!</p>
<p>1.Download a Julia binary from <a href="https://julialang.org/downloads/" rel="nofollow">Julialang.org</a>. Set a path to the binary of Julia.</p>
<p>2.In Julia REPL, push "]" key to enter the package mode and type</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="add https://github.com/akio-tomiya/LatticeQCD.jl
"><pre><code>add https://github.com/akio-tomiya/LatticeQCD.jl
</code></pre></div>
<p>and "return" key. Press "backspace" key ( "delete" key for mac) to exit the package mode.</p>
<p>(All dependence will be solved automatically)</p>
<p>3.Include the package with</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="using LatticeQCD
"><pre><code>using LatticeQCD
</code></pre></div>
<p>4.Make a parameter file with wizard,</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="run_wizard()
"><pre><code>run_wizard()
</code></pre></div>
<p>Choose parameters as you want!</p>
<p>5.Start simulation with created your parameter file!</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content=" run_LQCD(&quot;my_parameters.jl&quot;)
"><pre><code> run_LQCD("my_parameters.jl")
</code></pre></div>
<p>You'll get results!</p>
<p>Of cource, you can write/modify a parameter file by yourself.</p>
<p>Enjoy life with lattice QCD.</p>
<p>To see our demonstration above, execute,</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Plots
using LatticeQCD 
demo()
"><pre><span class="pl-k">using</span> Plots
<span class="pl-k">using</span> LatticeQCD 
<span class="pl-c1">demo</span>()</pre></div>
<p>it takes time before showing up the window.</p>
<h1><a id="user-content-what-is-supported" class="anchor" aria-hidden="true" href="#what-is-supported"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>What is supported?</h1>
<p>We support 4 dimensional euclidean spacetime and following things:</p>
<ul>
<li>Gauge field
<ul>
<li>Optimized SU(2), SU(3)</li>
<li>General SU(N)</li>
<li>General gauge action = plaquette + rect + etc action</li>
</ul>
</li>
<li>Fermions
<ul>
<li>Wilson/Wilson-clover (2 flavors)</li>
<li>Staggered fermion (1-8 tastes ~ flavors)</li>
</ul>
</li>
<li>Configuration generation algorithms
<ul>
<li>Cold/Hot start for SU(N). One instanton configuration for SU(2)</li>
<li>Heatbath for SU(N) &amp; overrelaxation for a general gauge action</li>
<li>Quenched HMC with SU(N) for a general gauge action</li>
<li>HMC (2 flavor Wilson/Clover) with SU(N) with a general gauge action</li>
<li>HMC (4 taste staggered fermions) with SU(N) with a general gauge action</li>
<li>RHMC (any flavor staggered) with SU(N) for a general gauge action*</li>
<li>SU(N) stout smeared dynamical fermions (experimental)</li>
<li>Fermion integrated HMC with a general gauge action</li>
<li>Self-learning Monte-Carlo with a general action (ref. <a href="https://arxiv.org/abs/2010.11900" rel="nofollow">this paper</a> )</li>
<li>Self-learning HMC with plaquette action</li>
</ul>
</li>
<li>Measurements
<ul>
<li>Plaquette</li>
<li>Polyakov loop</li>
<li>Chiral condensates (Wilson, Wilson-Clover, staggered)</li>
<li>Momentum projected pion correlator (Wilson&amp; Wilson-Clover fermion, staggered will be supported)</li>
<li>Topological charge(plaquette and clover definition)</li>
<li>Load &amp; measurement mode (load and measure all configurations in a directory)</li>
</ul>
</li>
<li>Smearing
<ul>
<li><s>APE, stout</s> (This will be public)</li>
<li><s>Gradient flow for a genelic action</s>   (Not well tested)</li>
</ul>
</li>
<li>I/O for configurations
<ul>
<li>ILDG format</li>
<li>JLD format (default binary file for Julia, one of HDF5)</li>
</ul>
</li>
</ul>
<p>*If you specified other than Nf=4, 8 with the staggered fermion HMC, RHMC is automatically used. For a machine with the apple silicon, Nf=1-8 is avalable.</p>
<p>Many of smearing and improved fermion actions and parallelazation have not supported yet.</p>
<h1><a id="user-content-usageuser-interface" class="anchor" aria-hidden="true" href="#usageuser-interface"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>USAGE/User interface</h1>
<p>We support following two user interfaces</p>
<ol>
<li>Julia REPL interface (For beginners, just after the lattice QCD textbook)</li>
<li>Genral interface (Experience with another code, for batch job, customised purpose)</li>
</ol>
<p>Usage 1 was already explained.</p>
<p>For Usage 2, in Julia REPL, push "]" key to enter the package mode and type</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="add https://github.com/akio-tomiya/LatticeQCD.jl
"><pre><code>add https://github.com/akio-tomiya/LatticeQCD.jl
</code></pre></div>
<p>Then, LatticeQCD.jl is installed on your machine.</p>
<p>The "PARAMETER_FILE" can be created through the wizard. To use the wizard on the shell, you write the following code (&amp; save as <code>wizard.jl</code>):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using LatticeQCD
run_wizard()
"><pre><span class="pl-k">using</span> LatticeQCD
<span class="pl-c1">run_wizard</span>()</pre></div>
<p>Then, you can run the wizard:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia wizard.jl
"><pre><code>julia wizard.jl
</code></pre></div>
<p>You write the following code (&amp; save as <code>run.jl</code>):</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using LatticeQCD
run_LQCD(ARGS[1])
"><pre><span class="pl-k">using</span> LatticeQCD
<span class="pl-c1">run_LQCD</span>(<span class="pl-c1">ARGS</span>[<span class="pl-c1">1</span>])</pre></div>
<p>Then, you can execute like</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="julia run.jl PARAMETER_FILE
"><pre><code>julia run.jl PARAMETER_FILE
</code></pre></div>
<p>then, you get results though standard I/O.</p>
<h1><a id="user-content-purpose-of-the-code" class="anchor" aria-hidden="true" href="#purpose-of-the-code"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Purpose of the code</h1>
<p>We develop this code to achive following things:</p>
<ol>
<li>Good portability (If one has Julia, this code is runnable. All dependences are under control.)</li>
<li>Easy to start/ pedagogical (start in 10 minutes)</li>
<li>Suite (configuration generation with and without fermions, and measurements)</li>
<li>Easy to modify (Good for prototyping)</li>
<li>Compatitive speed with Fortran 90 codes</li>
</ol>
<p>This is the first open source Julia code for lattice QCD. High performance is out of our scope.</p>
<h1><a id="user-content-how-has-it-been-tested" class="anchor" aria-hidden="true" href="#how-has-it-been-tested"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>How has it been tested?</h1>
<p>We compared results to following papers/codes</p>
<ul>
<li>Nf=4 SU(3) staggered HMC with <a href="https://inspirehep.net/literature/283285" rel="nofollow">https://inspirehep.net/literature/283285</a></li>
<li>RHMC <a href="https://doi.org/10.1051/epjconf/201817507041" rel="nofollow">https://doi.org/10.1051/epjconf/201817507041</a></li>
<li>HMC for Wilson and Clover Wilson fermions "Lattice Tool Kit":  <a href="https://nio-mon.riise.hiroshima-u.ac.jp/LTK/" rel="nofollow">https://nio-mon.riise.hiroshima-u.ac.jp/LTK/</a></li>
</ul>
<h1><a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Reference</h1>
<p>We refer "Lattice Tool Kit" <a href="https://nio-mon.riise.hiroshima-u.ac.jp/LTK/" rel="nofollow">https://nio-mon.riise.hiroshima-u.ac.jp/LTK/</a> written in Fortran 90.</p>
</article></div>