<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><p>OSX/Linux: <a href="https://travis-ci.org/dcjones/Codecs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/f955f48a337c324e249f608121b8ebf5276cf141/68747470733a2f2f7472617669732d63692e6f72672f64636a6f6e65732f436f646563732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dcjones/Codecs.jl.svg?branch=master" style="max-width:100%;"></a> <br>
pkg.julialang.org: <a href="http://pkg.julialang.org/?pkg=Codecs" rel="nofollow"><img src="https://camo.githubusercontent.com/379cffcb998762822d0e366fe07d1aed7ea95ced/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f436f646563735f302e332e737667" alt="Codecs" data-canonical-src="http://pkg.julialang.org/badges/Codecs_0.3.svg" style="max-width:100%;"></a> <br>
pkg.julialang.org: <a href="http://pkg.julialang.org/?pkg=Codecs" rel="nofollow"><img src="https://camo.githubusercontent.com/3ca382dec283385c03815c39d036218c1f7c8ebf/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f436f646563735f302e342e737667" alt="Codecs" data-canonical-src="http://pkg.julialang.org/badges/Codecs_0.4.svg" style="max-width:100%;"></a>  <br>
pkg.julialang.org: <a href="http://pkg.julialang.org/?pkg=Codecs" rel="nofollow"><img src="https://camo.githubusercontent.com/e3b4fd1b624a0f61932f17c38c66299b239e379e/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f436f646563735f302e352e737667" alt="Codecs" data-canonical-src="http://pkg.julialang.org/badges/Codecs_0.5.svg" style="max-width:100%;"></a>  <br>
Windows: <a href="https://ci.appveyor.com/project/randyzwitch/codecs-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/ac9f5f587058e9098c2fa5d79d5da8dac0bb3e9d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f336662746936336830367878303234742f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/3fbti63h06xx024t/branch/master?svg=true" style="max-width:100%;"></a> <br></p>
<h1><a id="user-content-codecs" class="anchor" aria-hidden="true" href="#codecs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Codecs</h1>
<p>Basic data encoding and decoding protocols.</p>
<p>Currently implemented protocols: Base64, Zlib, Binary Coded Decimal.</p>
<h2><a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Synopsis</h2>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Codecs

data <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Hello World!<span class="pl-pds">"</span></span>
encoded <span class="pl-k">=</span> <span class="pl-c1">encode</span>(Base64, <span class="pl-c1">encode</span>(Zlib, data))
<span class="pl-c1">println</span>(<span class="pl-c1">bytestring</span>(encoded))</pre></div>
<p>Output:</p>
<pre><code>eNrzSM3JyVcIzy/KSVEEABxJBD4=
</code></pre>
<p>(Wow, that's inefficient.)</p>
<div class="highlight highlight-source-julia"><pre>decoded <span class="pl-k">=</span> <span class="pl-c1">decode</span>(Zlib, <span class="pl-c1">decode</span>(Base64, encoded))
<span class="pl-c1">println</span>(<span class="pl-c1">bytestring</span>(decoded))</pre></div>
<p>Output:</p>
<pre><code>Hello World!
</code></pre>
<p>BCD is for encoding integers:</p>
<div class="highlight highlight-source-julia"><pre>i <span class="pl-k">=</span> <span class="pl-c1">2013</span>
encoded <span class="pl-k">=</span> <span class="pl-c1">encode</span>(BCD, i)
<span class="pl-c1">println</span>(encoded)
encoded <span class="pl-k">=</span> <span class="pl-c1">encode</span>(BCD, i, <span class="pl-c1">true</span>)  <span class="pl-c"><span class="pl-c">#</span> big endian digit order</span>
<span class="pl-c1">println</span>(encoded)</pre></div>
<p>Output:</p>
<pre><code>[0x31,0x02]
[0x20,0x13]
</code></pre>
</article></div>