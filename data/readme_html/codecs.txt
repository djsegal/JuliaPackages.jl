<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto">OSX/Linux: <a href="https://travis-ci.org/dcjones/Codecs.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a4e6b508df087d9340bd085aec6cb18e78f8dab830c0206c449d4f892f376f9c/68747470733a2f2f7472617669732d63692e6f72672f64636a6f6e65732f436f646563732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dcjones/Codecs.jl.svg?branch=master" style="max-width: 100%;"></a> <br>
pkg.julialang.org: <a href="http://pkg.julialang.org/?pkg=Codecs" rel="nofollow"><img src="https://camo.githubusercontent.com/f178cf906e02259ced73fe9abac00f3389cf09c8698d07995f0b6c6b416ddd57/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f436f646563735f302e332e737667" alt="Codecs" data-canonical-src="http://pkg.julialang.org/badges/Codecs_0.3.svg" style="max-width: 100%;"></a> <br>
pkg.julialang.org: <a href="http://pkg.julialang.org/?pkg=Codecs" rel="nofollow"><img src="https://camo.githubusercontent.com/1917ac05cf24242635501950931d0ec60255a94fc555908f35e48bd54b69b543/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f436f646563735f302e342e737667" alt="Codecs" data-canonical-src="http://pkg.julialang.org/badges/Codecs_0.4.svg" style="max-width: 100%;"></a>  <br>
pkg.julialang.org: <a href="http://pkg.julialang.org/?pkg=Codecs" rel="nofollow"><img src="https://camo.githubusercontent.com/ba5ae9571e0ba6ad5c9330477d2bab0a39b741ed481a7f41da8f927587df5e0e/687474703a2f2f706b672e6a756c69616c616e672e6f72672f6261646765732f436f646563735f302e352e737667" alt="Codecs" data-canonical-src="http://pkg.julialang.org/badges/Codecs_0.5.svg" style="max-width: 100%;"></a>  <br>
Windows: <a href="https://ci.appveyor.com/project/randyzwitch/codecs-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/4c9d79c62b5a296325b87df2822e214b765a95c18875faf74d3587e95b66fc70/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f336662746936336830367878303234742f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/3fbti63h06xx024t/branch/master?svg=true" style="max-width: 100%;"></a> <br></p>
<h1 dir="auto"><a id="user-content-codecs" class="anchor" aria-hidden="true" href="#codecs"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Codecs</h1>
<p dir="auto">Basic data encoding and decoding protocols.</p>
<p dir="auto">Currently implemented protocols: Base64, Zlib, Binary Coded Decimal.</p>
<h2 dir="auto"><a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Synopsis</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Codecs

data = &quot;Hello World!&quot;
encoded = encode(Base64, encode(Zlib, data))
println(bytestring(encoded))"><pre><span class="pl-k">using</span> Codecs

data <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>Hello World!<span class="pl-pds">"</span></span>
encoded <span class="pl-k">=</span> <span class="pl-c1">encode</span>(Base64, <span class="pl-c1">encode</span>(Zlib, data))
<span class="pl-c1">println</span>(<span class="pl-c1">bytestring</span>(encoded))</pre></div>
<p dir="auto">Output:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="eNrzSM3JyVcIzy/KSVEEABxJBD4="><pre class="notranslate"><code>eNrzSM3JyVcIzy/KSVEEABxJBD4=
</code></pre></div>
<p dir="auto">(Wow, that's inefficient.)</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="decoded = decode(Zlib, decode(Base64, encoded))
println(bytestring(decoded))"><pre>decoded <span class="pl-k">=</span> <span class="pl-c1">decode</span>(Zlib, <span class="pl-c1">decode</span>(Base64, encoded))
<span class="pl-c1">println</span>(<span class="pl-c1">bytestring</span>(decoded))</pre></div>
<p dir="auto">Output:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Hello World!"><pre class="notranslate"><code>Hello World!
</code></pre></div>
<p dir="auto">BCD is for encoding integers:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="i = 2013
encoded = encode(BCD, i)
println(encoded)
encoded = encode(BCD, i, true)  # big endian digit order
println(encoded)"><pre>i <span class="pl-k">=</span> <span class="pl-c1">2013</span>
encoded <span class="pl-k">=</span> <span class="pl-c1">encode</span>(BCD, i)
<span class="pl-c1">println</span>(encoded)
encoded <span class="pl-k">=</span> <span class="pl-c1">encode</span>(BCD, i, <span class="pl-c1">true</span>)  <span class="pl-c"><span class="pl-c">#</span> big endian digit order</span>
<span class="pl-c1">println</span>(encoded)</pre></div>
<p dir="auto">Output:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="[0x31,0x02]
[0x20,0x13]"><pre class="notranslate"><code>[0x31,0x02]
[0x20,0x13]
</code></pre></div>
</article></div>