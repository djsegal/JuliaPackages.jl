<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-testreports" class="anchor" aria-hidden="true" href="#testreports"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>TestReports</h1>
<p><a href="https://juliatesting.github.io/TestReports.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://github.com/JuliaTesting/TestReports.jl/actions?query=workflow%3ACI+branch%3Amaster"><img src="https://github.com/JuliaTesting/TestReports.jl/workflows/CI/badge.svg?branch=master" alt="Build Status" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/JuliaTesting/TestReports.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/1b7cac82ac932a518f35fd278d26cb65b6139c6218a8070785a97f8a43a3d7a1/68747470733a2f2f636f6465636f762e696f2f67682f4a756c696154657374696e672f546573745265706f7274732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/JuliaTesting/TestReports.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a>
<a href="https://github.com/SciML/ColPrac"><img src="https://camo.githubusercontent.com/a6c1efcb19a957860ecb25966a730260b03d6e05380d0c27992ee7f9e3b1feb3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c6574" alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet" style="max-width:100%;"></a></p>
<p>This package produces JUnit XML test reports. It is for use with your CI tooling of choice,
for example a CI tool like GoCD consumes reports in this format and gives back HTML reports.</p>
<h2><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Getting Started</h2>
<p>The reporting is designed to enable you to write your unit tests in the standard Julia way,
that is using <code>test/runtests.jl</code> as the entry point to your tests and with default <code>TestSet</code>
types. In theory, it should also work with custom <code>TestSet</code> types - see the
<a href="https://juliatesting.github.io/TestReports.jl/stable" rel="nofollow">Manual</a> for
further information.</p>
<p>To test and generate a report for your package:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt; TestReports.test(&quot;MyPackage&quot;)
# Unit tests run, report saved to testlog.xml in current working directory
"><pre>julia<span class="pl-k">&gt;</span> TestReports<span class="pl-k">.</span><span class="pl-c1">test</span>(<span class="pl-s"><span class="pl-pds">"</span>MyPackage<span class="pl-pds">"</span></span>)
<span class="pl-c"><span class="pl-c">#</span> Unit tests run, report saved to testlog.xml in current working directory</span></pre></div>
<p>To add to CI:</p>
<div class="highlight highlight-source-batchfile position-relative" data-snippet-clipboard-copy-content="$ julia -e 'using Pkg; Pkg.add(&quot;TestReports&quot;); using TestReports; TestReports.test(&quot;MyPackage&quot;)'
"><pre>$ julia -e 'using Pkg; Pkg.add(<span class="pl-s"><span class="pl-pds">"</span>TestReports<span class="pl-pds">"</span></span>); using TestReports; TestReports.test(<span class="pl-s"><span class="pl-pds">"</span>MyPackage<span class="pl-pds">"</span></span>)'</pre></div>
<p>Additionally, properties can be added to your <code>TestSet</code>s. To do this, use the <code>recordproperty</code>
function like so:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Test
using TestReports

@testset &quot;MyTests&quot; begin
    recordproperty(&quot;ID&quot;, 1)
    @test 1==1
end
"><pre><span class="pl-k">using</span> Test
<span class="pl-k">using</span> TestReports

<span class="pl-c1">@testset</span> <span class="pl-s"><span class="pl-pds">"</span>MyTests<span class="pl-pds">"</span></span> <span class="pl-k">begin</span>
    <span class="pl-c1">recordproperty</span>(<span class="pl-s"><span class="pl-pds">"</span>ID<span class="pl-pds">"</span></span>, <span class="pl-c1">1</span>)
    <span class="pl-c1">@test</span> <span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-c1">1</span>
<span class="pl-k">end</span></pre></div>
<h2><a id="user-content-example-of-use" class="anchor" aria-hidden="true" href="#example-of-use"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Example of Use</h2>
<p>Below is a screen shot of TestReports being used with <a href="https://github.com/gocd/gocd/">GoCD</a>,
to report an test failure in <a href="https://github.com/oxinabox/DataDepsGenerators.jl/">DataDepsGenerators.jl</a>.</p>
<p><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/FailingTests.PNG"><img src="docs/src/assets/FailingTests.PNG" alt="Screenshot of GoCD web-interface showing failing tests" style="max-width:100%;"></a></p>
<p>The corresponding <code>testlog.xml</code> file (after pretty printing) is below.</p>
<div class="highlight highlight-text-xml position-relative" data-snippet-clipboard-copy-content="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;testsuites name=&quot;/UCI&quot; id=&quot;now&quot; tests=&quot;7&quot; failures=&quot;1&quot; errors=&quot;0&quot;&gt;
  &lt;testsuite name=&quot;&quot; id=&quot;_id_&quot; tests=&quot;1&quot; failures=&quot;0&quot; errors=&quot;0&quot;&gt;
    &lt;testcase name=&quot;pass (info lost)&quot; id=&quot;_testcase_id_&quot;/&gt;
  &lt;/testsuite&gt;
  &lt;testsuite name=&quot;&quot; id=&quot;_id_&quot; tests=&quot;1&quot; failures=&quot;0&quot; errors=&quot;0&quot;&gt;
    &lt;testcase name=&quot;pass (info lost)&quot; id=&quot;_testcase_id_&quot;/&gt;
  &lt;/testsuite&gt;
  &lt;testsuite name=&quot;&quot; id=&quot;_id_&quot; tests=&quot;1&quot; failures=&quot;0&quot; errors=&quot;0&quot;&gt;
    &lt;testcase name=&quot;pass (info lost)&quot; id=&quot;_testcase_id_&quot;/&gt;
  &lt;/testsuite&gt;
  &lt;testsuite name=&quot;&quot; id=&quot;_id_&quot; tests=&quot;1&quot; failures=&quot;0&quot; errors=&quot;0&quot;&gt;
    &lt;testcase name=&quot;pass (info lost)&quot; id=&quot;_testcase_id_&quot;/&gt;
  &lt;/testsuite&gt;
  &lt;testsuite name=&quot;&quot; id=&quot;_id_&quot; tests=&quot;1&quot; failures=&quot;0&quot; errors=&quot;0&quot;&gt;
    &lt;testcase name=&quot;pass (info lost)&quot; id=&quot;_testcase_id_&quot;/&gt;
  &lt;/testsuite&gt;
  &lt;testsuite name=&quot;ForestFires&quot; id=&quot;_id_&quot; tests=&quot;2&quot; failures=&quot;1&quot; errors=&quot;0&quot;&gt;
    &lt;testcase name=&quot;contains(registration_block, &amp;quot;A Data Mining Approach to Predict Forest Fires using Meteorological Data&amp;quot;)&quot; id=&quot;_testcase_id_&quot;&gt;
      &lt;failure message=&quot;nothing&quot; type=&quot;test&quot;&gt;Test Failed
  Expression: contains(registration_block, &quot;A Data Mining Approach to Predict Forest Fires using Meteorological Data&quot;)&lt;/failure&gt;
    &lt;/testcase&gt;
    &lt;testcase name=&quot;pass (info lost)&quot; id=&quot;_testcase_id_&quot;/&gt;
  &lt;/testsuite&gt;
&lt;/testsuites&gt;
"><pre>&lt;?<span class="pl-ent">xml</span><span class="pl-e"> version</span>=<span class="pl-s"><span class="pl-pds">"</span>1.0<span class="pl-pds">"</span></span><span class="pl-e"> encoding</span>=<span class="pl-s"><span class="pl-pds">"</span>UTF-8<span class="pl-pds">"</span></span>?&gt;
&lt;<span class="pl-ent">testsuites</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span>/UCI<span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>now<span class="pl-pds">"</span></span> <span class="pl-e">tests</span>=<span class="pl-s"><span class="pl-pds">"</span>7<span class="pl-pds">"</span></span> <span class="pl-e">failures</span>=<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span> <span class="pl-e">errors</span>=<span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span>&gt;
  &lt;<span class="pl-ent">testsuite</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>_id_<span class="pl-pds">"</span></span> <span class="pl-e">tests</span>=<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span> <span class="pl-e">failures</span>=<span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span> <span class="pl-e">errors</span>=<span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span>&gt;
    &lt;<span class="pl-ent">testcase</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span>pass (info lost)<span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>_testcase_id_<span class="pl-pds">"</span></span>/&gt;
  &lt;/<span class="pl-ent">testsuite</span>&gt;
  &lt;<span class="pl-ent">testsuite</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>_id_<span class="pl-pds">"</span></span> <span class="pl-e">tests</span>=<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span> <span class="pl-e">failures</span>=<span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span> <span class="pl-e">errors</span>=<span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span>&gt;
    &lt;<span class="pl-ent">testcase</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span>pass (info lost)<span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>_testcase_id_<span class="pl-pds">"</span></span>/&gt;
  &lt;/<span class="pl-ent">testsuite</span>&gt;
  &lt;<span class="pl-ent">testsuite</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>_id_<span class="pl-pds">"</span></span> <span class="pl-e">tests</span>=<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span> <span class="pl-e">failures</span>=<span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span> <span class="pl-e">errors</span>=<span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span>&gt;
    &lt;<span class="pl-ent">testcase</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span>pass (info lost)<span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>_testcase_id_<span class="pl-pds">"</span></span>/&gt;
  &lt;/<span class="pl-ent">testsuite</span>&gt;
  &lt;<span class="pl-ent">testsuite</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>_id_<span class="pl-pds">"</span></span> <span class="pl-e">tests</span>=<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span> <span class="pl-e">failures</span>=<span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span> <span class="pl-e">errors</span>=<span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span>&gt;
    &lt;<span class="pl-ent">testcase</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span>pass (info lost)<span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>_testcase_id_<span class="pl-pds">"</span></span>/&gt;
  &lt;/<span class="pl-ent">testsuite</span>&gt;
  &lt;<span class="pl-ent">testsuite</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>_id_<span class="pl-pds">"</span></span> <span class="pl-e">tests</span>=<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span> <span class="pl-e">failures</span>=<span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span> <span class="pl-e">errors</span>=<span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span>&gt;
    &lt;<span class="pl-ent">testcase</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span>pass (info lost)<span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>_testcase_id_<span class="pl-pds">"</span></span>/&gt;
  &lt;/<span class="pl-ent">testsuite</span>&gt;
  &lt;<span class="pl-ent">testsuite</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span>ForestFires<span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>_id_<span class="pl-pds">"</span></span> <span class="pl-e">tests</span>=<span class="pl-s"><span class="pl-pds">"</span>2<span class="pl-pds">"</span></span> <span class="pl-e">failures</span>=<span class="pl-s"><span class="pl-pds">"</span>1<span class="pl-pds">"</span></span> <span class="pl-e">errors</span>=<span class="pl-s"><span class="pl-pds">"</span>0<span class="pl-pds">"</span></span>&gt;
    &lt;<span class="pl-ent">testcase</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span>contains(registration_block, <span class="pl-c1">&amp;quot;</span>A Data Mining Approach to Predict Forest Fires using Meteorological Data<span class="pl-c1">&amp;quot;</span>)<span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>_testcase_id_<span class="pl-pds">"</span></span>&gt;
      &lt;<span class="pl-ent">failure</span> <span class="pl-e">message</span>=<span class="pl-s"><span class="pl-pds">"</span>nothing<span class="pl-pds">"</span></span> <span class="pl-e">type</span>=<span class="pl-s"><span class="pl-pds">"</span>test<span class="pl-pds">"</span></span>&gt;Test Failed
  Expression: contains(registration_block, "A Data Mining Approach to Predict Forest Fires using Meteorological Data")&lt;/<span class="pl-ent">failure</span>&gt;
    &lt;/<span class="pl-ent">testcase</span>&gt;
    &lt;<span class="pl-ent">testcase</span> <span class="pl-e">name</span>=<span class="pl-s"><span class="pl-pds">"</span>pass (info lost)<span class="pl-pds">"</span></span> <span class="pl-e">id</span>=<span class="pl-s"><span class="pl-pds">"</span>_testcase_id_<span class="pl-pds">"</span></span>/&gt;
  &lt;/<span class="pl-ent">testsuite</span>&gt;
&lt;/<span class="pl-ent">testsuites</span>&gt;</pre></div>
<h3><a id="user-content-using-directly" class="anchor" aria-hidden="true" href="#using-directly"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Using directly</h3>
<p>I actually don't recommend using this directly in your tests.
It is more flexible to just keep using the default testset type,
and then use something like the Runner script to generate a wrapper of your tests with this testset around it.</p>
</article></div>