<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-simradraw" class="anchor" aria-hidden="true" href="#simradraw"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>SimradRaw</h1>
<p><a href="https://travis-ci.org/EchoJulia/SimradRaw.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/0ff96f9a08d3d14730ad0c4496861b1a22813fbc/68747470733a2f2f7472617669732d63692e6f72672f4563686f4a756c69612f53696d7261645261772e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/EchoJulia/SimradRaw.jl.svg?branch=master" style="max-width:100%;"></a></p>
<p><a href="https://coveralls.io/github/EchoJulia/SimradRaw.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/0314423b491c86223f48dc74460504ccbbc9f319/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4563686f4a756c69612f53696d7261645261772e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/EchoJulia/SimradRaw.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a></p>
<p><a href="http://codecov.io/github/EchoJulia/SimradRaw.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/d9073eb470ea3ae4b2932c33e63b544b88b39cf8/687474703a2f2f636f6465636f762e696f2f6769746875622f4563686f4a756c69612f53696d7261645261772e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/EchoJulia/SimradRaw.jl/coverage.svg?branch=master" style="max-width:100%;"></a></p>
<p>Simrad echosounder RAW file format reader in
<a href="http://julialang.org" rel="nofollow">Julia</a></p>
<h2><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Introduction</h2>
<p>Simrad scientific echosounders such as EK60, EK80 and WBT save their
data in datagram oriented, RAW format files as described in the
reference manuals.</p>
<p>This Julia library reads RAW format files, returning their contents as
a series of Julia structs representing datagrams. It is intended to be
used by higher level libraries such as <a href="https://github.com/EchoJulia/SimradEK60.jl">https://github.com/EchoJulia/SimradEK60.jl</a>,
that interprete the data to provide matrices of volume backscatter
etc.</p>
<h2><a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Getting started</h2>
<pre><code>using SimradRaw
using SimradEK60TestData
filename = EK60_SAMPLE # or some other RAW file
datagrams = SimradRaw.load(filename)
</code></pre>
<p>Also see the example <code>scripts\rawcat.jl</code>, a command line program that
dumps out RAW files in a somewhat readable format.</p>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h2>
<ol>
<li>
<p><a href="http://www.simrad.net/ek60_ref_english/default.htm" rel="nofollow">Simrad EK60 Context sensitive on-line help</a></p>
</li>
<li>
<p><a href="http://www.simrad.net/ek80_ref_english/default.htm" rel="nofollow">Simrad EK80 Wide band scientific echo sounder Reference Manual</a></p>
</li>
</ol>
</article></div>