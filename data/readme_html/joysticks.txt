<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1 dir="auto"><a id="user-content-joysticks" class="anchor" aria-hidden="true" href="#joysticks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Joysticks</h1>
<p dir="auto">Joystick drivers for Julia, tested on Linux and Windows, should also work on Mac.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Pkg
pkg&quot;add https://github.com/ufechner7/Joysticks.jl&quot;"><pre><span class="pl-k">using</span> Pkg
<span class="pl-s"><span class="pl-pds"><span class="pl-c1">pkg</span>"</span>add https://github.com/ufechner7/Joysticks.jl<span class="pl-pds">"</span></span></pre></div>
<h2 dir="auto"><a id="user-content-high-level-interface-for-reading-the-axes" class="anchor" aria-hidden="true" href="#high-level-interface-for-reading-the-axes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>High level interface for reading the axes</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Joysticks

const js       = open_joystick()
const jsaxes   = JSState()

async_read!(js, jsaxes)

while true
    println(jsaxes)
    sleep(0.05)
end"><pre><span class="pl-k">using</span> Joysticks

<span class="pl-k">const</span> js       <span class="pl-k">=</span> <span class="pl-c1">open_joystick</span>()
<span class="pl-k">const</span> jsaxes   <span class="pl-k">=</span> <span class="pl-c1">JSState</span>()

<span class="pl-c1">async_read!</span>(js, jsaxes)

<span class="pl-k">while</span> <span class="pl-c1">true</span>
    <span class="pl-c1">println</span>(jsaxes)
    <span class="pl-c1">sleep</span>(<span class="pl-c1">0.05</span>)
<span class="pl-k">end</span></pre></div>
<p dir="auto">After you called the function <code>async_read!</code> the struct
jsaxes will be updated every few milli-seconds and will automatically
reflect the state of the (max) 6 axis.</p>
<p dir="auto">The values are of type Float64 in the range of -1.00 to 1.00.</p>
<p dir="auto">The members of the struct are x, y, z and u, v, w.</p>
<h2 dir="auto"><a id="user-content-high-level-interface-reacting-on-button-events" class="anchor" aria-hidden="true" href="#high-level-interface-reacting-on-button-events"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>High level interface reacting on button events</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Joysticks, Observables

const js        = open_joystick()
const jsbuttons = JSButtonState()

async_read!(js, nothing, jsbuttons)

on(jsbuttons.btn1) do val
    if val println(&quot;Button 1 pressed!&quot;) end
end
on(jsbuttons.btn2) do val
    if ! val println(&quot;Button 2 released!&quot;) end
end"><pre><span class="pl-k">using</span> Joysticks, Observables

<span class="pl-k">const</span> js        <span class="pl-k">=</span> <span class="pl-c1">open_joystick</span>()
<span class="pl-k">const</span> jsbuttons <span class="pl-k">=</span> <span class="pl-c1">JSButtonState</span>()

<span class="pl-c1">async_read!</span>(js, <span class="pl-c1">nothing</span>, jsbuttons)

<span class="pl-c1">on</span>(jsbuttons<span class="pl-k">.</span>btn1) <span class="pl-k">do</span> val
    <span class="pl-k">if</span> val <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Button 1 pressed!<span class="pl-pds">"</span></span>) <span class="pl-k">end</span>
<span class="pl-k">end</span>
<span class="pl-c1">on</span>(jsbuttons<span class="pl-k">.</span>btn2) <span class="pl-k">do</span> val
    <span class="pl-k">if</span> <span class="pl-k">!</span> val <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Button 2 released!<span class="pl-pds">"</span></span>) <span class="pl-k">end</span>
<span class="pl-k">end</span></pre></div>
<p dir="auto">The struct jsbuttons contains 12 observables, one for each possible button.
Using the function <code>on</code> can be used to bind an action to a change of the
button state. When pressed <code>val</code> is true, when released <code>val</code> is false.</p>
<p dir="auto">The function <code>async_read!</code> must be called once to start the
event loop for processing button events.</p>
<h2 dir="auto"><a id="user-content-reading-both-axes-and-buttons" class="anchor" aria-hidden="true" href="#reading-both-axes-and-buttons"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reading both axes and buttons</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Joysticks, Observables

const js        = open_joystick()
const jsaxes    = JSState()
const jsbuttons = JSButtonState()

async_read!(js, jsaxes, jsbuttons)"><pre><span class="pl-k">using</span> Joysticks, Observables

<span class="pl-k">const</span> js        <span class="pl-k">=</span> <span class="pl-c1">open_joystick</span>()
<span class="pl-k">const</span> jsaxes    <span class="pl-k">=</span> <span class="pl-c1">JSState</span>()
<span class="pl-k">const</span> jsbuttons <span class="pl-k">=</span> <span class="pl-c1">JSButtonState</span>()

<span class="pl-c1">async_read!</span>(js, jsaxes, jsbuttons)</pre></div>
<p dir="auto">The function <code>async_read!</code> must be called once to start the
event loop for processing button events.</p>
<p dir="auto">You can then access the axes values and assign events to buttons as in the examples above.</p>
<h2 dir="auto"><a id="user-content-using-the-second-joystick" class="anchor" aria-hidden="true" href="#using-the-second-joystick"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Using the second Joystick</h2>
<h3 dir="auto"><a id="user-content-windows-and-mac" class="anchor" aria-hidden="true" href="#windows-and-mac"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Windows and Mac</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Joysticks, Observables
const js        = open_joystick(&quot;&quot;, JOYSTICK_2)"><pre><span class="pl-k">using</span> Joysticks, Observables
<span class="pl-k">const</span> js        <span class="pl-k">=</span> <span class="pl-c1">open_joystick</span>(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>, JOYSTICK_2)</pre></div>
<p dir="auto">The counting starts at one.</p>
<h3 dir="auto"><a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Linux</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Joysticks, Observables
const js        = open_joystick(&quot;/dev/input/js1&quot;)"><pre><span class="pl-k">using</span> Joysticks, Observables
<span class="pl-k">const</span> js        <span class="pl-k">=</span> <span class="pl-c1">open_joystick</span>(<span class="pl-s"><span class="pl-pds">"</span>/dev/input/js1<span class="pl-pds">"</span></span>)</pre></div>
<p dir="auto">The counting starts at zero.</p>
<h2 dir="auto"><a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Reference</h2>
<h3 dir="auto"><a id="user-content-constants" class="anchor" aria-hidden="true" href="#constants"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Constants</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="JS_EVENT_BUTTON, JS_EVENT_AXIS, JS_EVENT_INIT"><pre>JS_EVENT_BUTTON, JS_EVENT_AXIS, JS_EVENT_INIT</pre></div>
<h3 dir="auto"><a id="user-content-types" class="anchor" aria-hidden="true" href="#types"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Types</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="JSEvent, JSEvents, JSAxisState, JSButtonState, JSState"><pre>JSEvent, JSEvents, JSAxisState, JSButtonState, JSState</pre></div>
<h3 dir="auto"><a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Functions</h3>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="open_joystick(filename = &quot;/dev/input/js0&quot;, device=JOYSTICK_1; glfw=false)
read_event(js::JSDevice)
axis_state!(axes::JSAxisState, event::JSEvent)
axis_state!(axes::JSState, event::JSEvent)
async_read!(js::JSDevice, jsaxes=nothing, jsbuttons=nothing)"><pre><span class="pl-c1">open_joystick</span>(filename <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>/dev/input/js0<span class="pl-pds">"</span></span>, device<span class="pl-k">=</span>JOYSTICK_1; glfw<span class="pl-k">=</span><span class="pl-c1">false</span>)
<span class="pl-c1">read_event</span>(js<span class="pl-k">::</span><span class="pl-c1">JSDevice</span>)
<span class="pl-c1">axis_state!</span>(axes<span class="pl-k">::</span><span class="pl-c1">JSAxisState</span>, event<span class="pl-k">::</span><span class="pl-c1">JSEvent</span>)
<span class="pl-c1">axis_state!</span>(axes<span class="pl-k">::</span><span class="pl-c1">JSState</span>, event<span class="pl-k">::</span><span class="pl-c1">JSEvent</span>)
<span class="pl-c1">async_read!</span>(js<span class="pl-k">::</span><span class="pl-c1">JSDevice</span>, jsaxes<span class="pl-k">=</span><span class="pl-c1">nothing</span>, jsbuttons<span class="pl-k">=</span><span class="pl-c1">nothing</span>)</pre></div>
<h2 dir="auto"><a id="user-content-example-of-using-the-low-level-interface-linux-only" class="anchor" aria-hidden="true" href="#example-of-using-the-low-level-interface-linux-only"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Example of using the low-level interface (Linux only)</h2>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Joystick

jsd = open_joystick()
axis_count   = jsd.axis_count
button_count = jsd.button_count
println(axis_count, &quot; &quot;, button_count)"><pre><span class="pl-k">using</span> Joystick

jsd <span class="pl-k">=</span> <span class="pl-c1">open_joystick</span>()
axis_count   <span class="pl-k">=</span> jsd<span class="pl-k">.</span>axis_count
button_count <span class="pl-k">=</span> jsd<span class="pl-k">.</span>button_count
<span class="pl-c1">println</span>(axis_count, <span class="pl-s"><span class="pl-pds">"</span> <span class="pl-pds">"</span></span>, button_count)</pre></div>
<p dir="auto">Example for printing all events:</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using Joystick

const jsdevice = open_joystick()
const jsaxes   = JSAxisState()

while (true)
    event = read_event(jsdevice)
    if ! isnothing(event) 
        if event.type == Int(JS_EVENT_BUTTON)
            println(&quot;Button &quot;, event.number, &quot; &quot;, event.value != 0 ? &quot;pressed&quot; : &quot;released&quot;)
        elseif event.type == Int(JS_EVENT_AXIS)
            axis = axis_state!(jsaxes, event)
            if axis &lt;= 6
                println(&quot;axis: &quot;, axis)
                println(jsaxes)
            end
        end
    end
    sleep(0.001)
end"><pre><span class="pl-k">using</span> Joystick

<span class="pl-k">const</span> jsdevice <span class="pl-k">=</span> <span class="pl-c1">open_joystick</span>()
<span class="pl-k">const</span> jsaxes   <span class="pl-k">=</span> <span class="pl-c1">JSAxisState</span>()

<span class="pl-k">while</span> (<span class="pl-c1">true</span>)
    event <span class="pl-k">=</span> <span class="pl-c1">read_event</span>(jsdevice)
    <span class="pl-k">if</span> <span class="pl-k">!</span> <span class="pl-c1">isnothing</span>(event) 
        <span class="pl-k">if</span> event<span class="pl-k">.</span>type <span class="pl-k">==</span> <span class="pl-c1">Int</span>(JS_EVENT_BUTTON)
            <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Button <span class="pl-pds">"</span></span>, event<span class="pl-k">.</span>number, <span class="pl-s"><span class="pl-pds">"</span> <span class="pl-pds">"</span></span>, event<span class="pl-k">.</span>value <span class="pl-k">!=</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">"</span>pressed<span class="pl-pds">"</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">"</span>released<span class="pl-pds">"</span></span>)
        <span class="pl-k">elseif</span> event<span class="pl-k">.</span>type <span class="pl-k">==</span> <span class="pl-c1">Int</span>(JS_EVENT_AXIS)
            axis <span class="pl-k">=</span> <span class="pl-c1">axis_state!</span>(jsaxes, event)
            <span class="pl-k">if</span> axis <span class="pl-k">&lt;=</span> <span class="pl-c1">6</span>
                <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>axis: <span class="pl-pds">"</span></span>, axis)
                <span class="pl-c1">println</span>(jsaxes)
            <span class="pl-k">end</span>
        <span class="pl-k">end</span>
    <span class="pl-k">end</span>
    <span class="pl-c1">sleep</span>(<span class="pl-c1">0.001</span>)
<span class="pl-k">end</span></pre></div>
<h2 dir="auto"><a id="user-content-remark" class="anchor" aria-hidden="true" href="#remark"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Remark</h2>
<p dir="auto">The word <code>axes</code> is the plural of <code>axis</code>.</p>
</article></div>