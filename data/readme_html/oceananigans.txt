<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text">
<h1 align="center"><a id="user-content---oceananigansjl" class="anchor" aria-hidden="true" href="#--oceananigansjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>
  Oceananigans.jl
</h1>

<p align="center">
  <strong><g-emoji class="g-emoji" alias="ocean" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f30a.png">ðŸŒŠ</g-emoji> A fast and friendly incompressible fluid flow solver in Julia that can be run in 1-3 dimensions on CPUs and GPUs. <a href="https://clima.github.io/OceananigansDocumentation/stable" rel="nofollow">https://clima.github.io/OceananigansDocumentation/stable</a></strong>
</p>

<p align="center">
  <a href="https://www.repostatus.org/#active" rel="nofollow">
    <img alt="Repo status" src="https://camo.githubusercontent.com/3b32dc5183a4fd39fab11f974c151297877f38723b8b7c450d42cbf0d9d9849a/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://www.repostatus.org/badges/latest/active.svg?style=flat-square" style="max-width:100%;">
  </a>
  <a href="https://mit-license.org" rel="nofollow">
    <img alt="MIT license" src="https://camo.githubusercontent.com/ad3ef6f300e4672d89c879c54ee490a4bae95c62b0930b74eecdf702205af3c4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/License-MIT-blue.svg?style=flat-square" style="max-width:100%;">
  </a>
  <a href="https://github.com/CliMA/Oceananigans.jl/discussions">
    <img alt="Ask us anything" src="https://camo.githubusercontent.com/5274a173b70999fcba9d8ec89694746f45b9b9bc30f88c730e6e34f470efd135/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f41736b25323075732d616e797468696e672d3161626339632e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/Ask%20us-anything-1abc9c.svg?style=flat-square" style="max-width:100%;">
  </a>
  <a href="https://github.com/SciML/ColPrac">
    <img alt="ColPrac: Contributor's Guide on Collaborative Practices for Community Packages" src="https://camo.githubusercontent.com/89e628d28fec8ebfb49b4d141883305bffbaa2059c281e74c1ad8022e58efc53/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6c507261632d436f6e7472696275746f72277325323047756964652d626c756576696f6c65743f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/ColPrac-Contributor's%20Guide-blueviolet?style=flat-square" style="max-width:100%;">
  </a>
  <a href="https://doi.org/10.21105/joss.02018" rel="nofollow">
    <img alt="JOSS" src="https://camo.githubusercontent.com/5fc0a6453280db6705c43696d352ec224964e1f8181fd44408641ebd1e5c3665/68747470733a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30323031382f7374617475732e737667" data-canonical-src="https://joss.theoj.org/papers/10.21105/joss.02018/status.svg" style="max-width:100%;">
  </a>
</p>

<p align="center">
  <a href="https://github.com/CliMA/Oceananigans.jl/releases">
    <img alt="GitHub tag (latest SemVer pre-release)" src="https://camo.githubusercontent.com/df2a839675ea263fa6aaa55816b2131bcd60f7f1935f7f5d0101e5e1ac5da3ed/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f7461672f436c694d412f4f6365616e616e6967616e732e6a6c3f696e636c7564655f70726572656c6561736573266c6162656c3d6c617465737425323076657273696f6e266c6f676f3d67697468756226736f72743d73656d766572267374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/github/v/tag/CliMA/Oceananigans.jl?include_prereleases&amp;label=latest%20version&amp;logo=github&amp;sort=semver&amp;style=flat-square" style="max-width:100%;">
  </a>
  <a href="https://clima.github.io/OceananigansDocumentation/stable" rel="nofollow">
    <img alt="Stable documentation" src="https://camo.githubusercontent.com/35462a78085eaddb262a8a276a988cd5c8ec5bf48fbb61bf9b0c5b9deb8b681b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63756d656e746174696f6e2d737461626c6525323072656c656173652d626c75653f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/documentation-stable%20release-blue?style=flat-square" style="max-width:100%;">
  </a>
  <a href="https://clima.github.io/OceananigansDocumentation/dev" rel="nofollow">
    <img alt="Development documentation" src="https://camo.githubusercontent.com/2e51943abca66de61531a40b5860a84487239489ba043b49ee9642ec1859a39a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63756d656e746174696f6e2d696e253230646576656c6f706d656e742d6f72616e67653f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/documentation-in%20development-orange?style=flat-square" style="max-width:100%;">
  </a>
</p>

<p align="center">
  <a href="https://buildkite.com/clima/oceananigans" rel="nofollow">
    <img alt="Buildkite CPU+GPU build status" src="https://camo.githubusercontent.com/2771a467c1f058cb5790809a08ef870a5f2e03b7e436dae99e6ca83331327d2a/68747470733a2f2f696d672e736869656c64732e696f2f6275696c646b6974652f34643932316663313762393533343165613534373766623632646630653664393336346236316231353465303530613132332f6d61737465723f6c6f676f3d6275696c646b697465266c6162656c3d4275696c646b697465253230435055253242475055267374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/buildkite/4d921fc17b95341ea5477fb62df0e6d9364b61b154e050a123/master?logo=buildkite&amp;label=Buildkite%20CPU%2BGPU&amp;style=flat-square" style="max-width:100%;">
  </a>
  <a href="https://hub.docker.com/r/aliramadhan/oceananigans" rel="nofollow">
    <img alt="Docker build status" src="https://camo.githubusercontent.com/e8e50ba5947fb70c238297311d3795174783c9402575a22478e8ba8671a09812/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f636c6f75642f6275696c642f616c6972616d616468616e2f6f6365616e616e6967616e733f6c6162656c3d446f636b6572266c6f676f3d646f636b6572266c6f676f436f6c6f723d7768697465267374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/docker/cloud/build/aliramadhan/oceananigans?label=Docker&amp;logo=docker&amp;logoColor=white&amp;style=flat-square" style="max-width:100%;">
  </a>
</p>
<p>Oceananigans.jl is a fast and friendly fluid flow solver written in Julia that can be run in 1-3 dimensions on CPUs and GPUs. It can simulate the incompressible Boussinesq equations, the shallow water equations, or the hydrostatic Boussinesq equations with a free surface. Oceananigans.jl comes with user-friendly features for simulating rotating stratified fluids including user-defined boundary conditions and forcing functions, arbitrary tracers, large eddy simulation turbulence closures, high-order advection schemes, immersed boundaries, Lagrangian particle tracking, and more!</p>
<p>We strive for a user interface that makes Oceananigans.jl`as friendly and intuitive to use as possible, allowing users to focus on the science. Internally, we have attempted to write the underlying algorithm so that the code runs as fast as possible for the configuration chosen by the user --- from simple two-dimensional setups to complex three-dimensional simulations --- and so that as much code as possible is shared between the different architectures, models, and grids.</p>
<h2><a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contents</h2>
<ul>
<li><a href="#installation-instructions">Installation instructions</a></li>
<li><a href="#running-your-first-model">Running your first model</a></li>
<li><a href="#getting-help">Getting help</a></li>
<li><a href="#contributing">Contributing</a></li>
<li><a href="#movies">Movies</a></li>
<li><a href="#performance-benchmarks">Performance benchmarks</a></li>
</ul>
<h2><a id="user-content-installation-instructions" class="anchor" aria-hidden="true" href="#installation-instructions"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation instructions</h2>
<p>You can install the latest version of Oceananigans using the built-in package manager (accessed by pressing <code>]</code> in the Julia command prompt) to add the package and instantiate/build all depdendencies</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="julia&gt;]
(v1.6) pkg&gt; add Oceananigans
(v1.6) pkg&gt; instantiate
"><pre>julia<span class="pl-k">&gt;</span>]
(v1.<span class="pl-c1">6</span>) pkg<span class="pl-k">&gt;</span> add Oceananigans
(v1.<span class="pl-c1">6</span>) pkg<span class="pl-k">&gt;</span> instantiate</pre></div>
<p>We recommend installing Oceananigans with the built-in Julia package manager, because this installs a stable, tagged release. Oceananigans.jl can be updated to the latest tagged release from the package manager by typing</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="(v1.6) pkg&gt; update Oceananigans
"><pre>(v1.<span class="pl-c1">6</span>) pkg<span class="pl-k">&gt;</span> update Oceananigans</pre></div>
<p>At this time, updating should be done with care, as Oceananigans is under rapid development and breaking changes to the user API occur often. But if anything does happen, please open an issue!</p>
<p><strong>Note</strong>: The latest version of Oceananigans requires at least Julia v1.6 to run. Installing Oceananigans with an older version of Julia will install an older version of Oceananigans (the latest version compatible with your version of Julia).</p>
<h2><a id="user-content-running-your-first-model" class="anchor" aria-hidden="true" href="#running-your-first-model"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Running your first model</h2>
<p>Let's initialize a 3D horizontally periodic model with 100Ã—100Ã—50 grid points on a 2Ã—2Ã—1 km domain and simulate it for 1 hour using a constant time step of 60 seconds.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Oceananigans
grid = RegularRectilinearGrid(size=(100, 100, 50), extent=(2Ï€, 2Ï€, 1))
model = IncompressibleModel(grid=grid)
simulation = Simulation(model, Î”t=60, stop_time=3600)
run!(simulation)
"><pre><span class="pl-k">using</span> Oceananigans
grid <span class="pl-k">=</span> <span class="pl-c1">RegularRectilinearGrid</span>(size<span class="pl-k">=</span>(<span class="pl-c1">100</span>, <span class="pl-c1">100</span>, <span class="pl-c1">50</span>), extent<span class="pl-k">=</span>(<span class="pl-c1">2</span>Ï€, <span class="pl-c1">2</span>Ï€, <span class="pl-c1">1</span>))
model <span class="pl-k">=</span> <span class="pl-c1">IncompressibleModel</span>(grid<span class="pl-k">=</span>grid)
simulation <span class="pl-k">=</span> <span class="pl-c1">Simulation</span>(model, Î”t<span class="pl-k">=</span><span class="pl-c1">60</span>, stop_time<span class="pl-k">=</span><span class="pl-c1">3600</span>)
<span class="pl-c1">run!</span>(simulation)</pre></div>
<p>You just simulated what might have been a 3D patch of ocean, it's that easy! It was a still lifeless ocean so nothing interesting happened but now you can add interesting dynamics and visualize the output.</p>
<h3><a id="user-content-more-interesting-example" class="anchor" aria-hidden="true" href="#more-interesting-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>More interesting example</h3>
<p>Let's add something to make the dynamics a bit more interesting. We can add a hot bubble in the middle of the domain and watch it rise to the surface. This example also shows how to set an initial condition.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using Oceananigans

N = Nx = Ny = Nz = 128   # Number of grid points in each dimension.
L = Lx = Ly = Lz = 2000  # Length of each dimension.
topology = (Periodic, Periodic, Bounded)

model = IncompressibleModel(
    architecture = CPU(),
            grid = RegularRectilinearGrid(topology=topology, size=(Nx, Ny, Nz), extent=(Lx, Ly, Lz)),
         closure = IsotropicDiffusivity(Î½=4e-2, Îº=4e-2)
)

# Set a temperature perturbation with a Gaussian profile located at the center.
# This will create a buoyant thermal bubble that will rise with time.
xâ‚€, zâ‚€ = Lx/2, Lz/2
Tâ‚€(x, y, z) = 20 + 0.01 * exp(-100 * ((x - xâ‚€)^2 + (z - zâ‚€)^2) / (Lx^2 + Lz^2))
set!(model, T=Tâ‚€)

simulation = Simulation(model, Î”t=10, stop_iteration=5000)
run!(simulation)
"><pre><span class="pl-k">using</span> Oceananigans

N <span class="pl-k">=</span> Nx <span class="pl-k">=</span> Ny <span class="pl-k">=</span> Nz <span class="pl-k">=</span> <span class="pl-c1">128</span>   <span class="pl-c"><span class="pl-c">#</span> Number of grid points in each dimension.</span>
L <span class="pl-k">=</span> Lx <span class="pl-k">=</span> Ly <span class="pl-k">=</span> Lz <span class="pl-k">=</span> <span class="pl-c1">2000</span>  <span class="pl-c"><span class="pl-c">#</span> Length of each dimension.</span>
topology <span class="pl-k">=</span> (Periodic, Periodic, Bounded)

model <span class="pl-k">=</span> <span class="pl-c1">IncompressibleModel</span>(
    architecture <span class="pl-k">=</span> <span class="pl-c1">CPU</span>(),
            grid <span class="pl-k">=</span> <span class="pl-c1">RegularRectilinearGrid</span>(topology<span class="pl-k">=</span>topology, size<span class="pl-k">=</span>(Nx, Ny, Nz), extent<span class="pl-k">=</span>(Lx, Ly, Lz)),
         closure <span class="pl-k">=</span> <span class="pl-c1">IsotropicDiffusivity</span>(Î½<span class="pl-k">=</span><span class="pl-c1">4e-2</span>, Îº<span class="pl-k">=</span><span class="pl-c1">4e-2</span>)
)

<span class="pl-c"><span class="pl-c">#</span> Set a temperature perturbation with a Gaussian profile located at the center.</span>
<span class="pl-c"><span class="pl-c">#</span> This will create a buoyant thermal bubble that will rise with time.</span>
xâ‚€, zâ‚€ <span class="pl-k">=</span> Lx<span class="pl-k">/</span><span class="pl-c1">2</span>, Lz<span class="pl-k">/</span><span class="pl-c1">2</span>
<span class="pl-en">Tâ‚€</span>(x, y, z) <span class="pl-k">=</span> <span class="pl-c1">20</span> <span class="pl-k">+</span> <span class="pl-c1">0.01</span> <span class="pl-k">*</span> <span class="pl-c1">exp</span>(<span class="pl-k">-</span><span class="pl-c1">100</span> <span class="pl-k">*</span> ((x <span class="pl-k">-</span> xâ‚€)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> (z <span class="pl-k">-</span> zâ‚€)<span class="pl-k">^</span><span class="pl-c1">2</span>) <span class="pl-k">/</span> (Lx<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">+</span> Lz<span class="pl-k">^</span><span class="pl-c1">2</span>))
<span class="pl-c1">set!</span>(model, T<span class="pl-k">=</span>Tâ‚€)

simulation <span class="pl-k">=</span> <span class="pl-c1">Simulation</span>(model, Î”t<span class="pl-k">=</span><span class="pl-c1">10</span>, stop_iteration<span class="pl-k">=</span><span class="pl-c1">5000</span>)
<span class="pl-c1">run!</span>(simulation)</pre></div>
<p>By changing <code>architecture = CPU()</code> to <code>architecture = GPU()</code> the example will run on a CUDA-enabled Nvidia GPU!</p>
<p>You can see some movies from GPU simulations below along with CPU and GPU <a href="https://github.com/clima/Oceananigans.jl#performance-benchmarks">performance benchmarks</a>.</p>
<h2><a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Getting help</h2>
<p>If you are interested in using Oceananigans.jl or are trying to figure out how to use it, please feel free to ask us questions and get in touch! If you're trying to set up a model then check out the examples and model setup documentation. Check out the <a href="https://github.com/clima/Oceananigans.jl/tree/master/examples">examples</a> and please feel free to <a href="https://github.com/CliMA/Oceananigans.jl/discussions">start a discussion</a> if you have any questions, comments, suggestions, etc! There is also an #oceananigans channel on the <a href="https://julialang.org/slack/" rel="nofollow">Julia Slack</a>.</p>
<h2><a id="user-content-citing" class="anchor" aria-hidden="true" href="#citing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Citing</h2>
<p>If you use Oceananigans.jl as part of your research, teaching, or other activities, we would be grateful if you could cite our work and mention Oceananigans.jl by name.</p>
<div class="highlight highlight-text-bibtex position-relative" data-snippet-clipboard-copy-content="@article{OceananigansJOSS,
  doi = {10.21105/joss.02018},
  url = {https://doi.org/10.21105/joss.02018},
  year = {2020},
  publisher = {The Open Journal},
  volume = {5},
  number = {53},
  pages = {2018},
  author = {Ali Ramadhan and Gregory LeClaire Wagner and Chris Hill and Jean-Michel Campin and Valentin Churavy and Tim Besard and Andre Souza and Alan Edelman and Raffaele Ferrari and John Marshall},
  title = {Oceananigans.jl: Fast and friendly geophysical fluid dynamics on GPUs},
  journal = {Journal of Open Source Software}
}
"><pre><span class="pl-k">@article</span>{<span class="pl-en">OceananigansJOSS</span>,
  <span class="pl-s">doi</span> = <span class="pl-s"><span class="pl-pds">{</span>10.21105/joss.02018<span class="pl-pds">}</span></span>,
  <span class="pl-s">url</span> = <span class="pl-s"><span class="pl-pds">{</span>https://doi.org/10.21105/joss.02018<span class="pl-pds">}</span></span>,
  <span class="pl-s">year</span> = <span class="pl-s"><span class="pl-pds">{</span>2020<span class="pl-pds">}</span></span>,
  <span class="pl-s">publisher</span> = <span class="pl-s"><span class="pl-pds">{</span>The Open Journal<span class="pl-pds">}</span></span>,
  <span class="pl-s">volume</span> = <span class="pl-s"><span class="pl-pds">{</span>5<span class="pl-pds">}</span></span>,
  <span class="pl-s">number</span> = <span class="pl-s"><span class="pl-pds">{</span>53<span class="pl-pds">}</span></span>,
  <span class="pl-s">pages</span> = <span class="pl-s"><span class="pl-pds">{</span>2018<span class="pl-pds">}</span></span>,
  <span class="pl-s">author</span> = <span class="pl-s"><span class="pl-pds">{</span>Ali Ramadhan and Gregory LeClaire Wagner and Chris Hill and Jean-Michel Campin and Valentin Churavy and Tim Besard and Andre Souza and Alan Edelman and Raffaele Ferrari and John Marshall<span class="pl-pds">}</span></span>,
  <span class="pl-s">title</span> = <span class="pl-s"><span class="pl-pds">{</span>Oceananigans.jl: Fast and friendly geophysical fluid dynamics on GPUs<span class="pl-pds">}</span></span>,
  <span class="pl-s">journal</span> = <span class="pl-s"><span class="pl-pds">{</span>Journal of Open Source Software<span class="pl-pds">}</span></span>
}</pre></div>
<p>We also maintain a <a href="https://clima.github.io/OceananigansDocumentation/stable/publications/" rel="nofollow">list of publication using Oceananigans.jl</a>. If you have work using Oceananigans.jl that you would like to have listed there, please open a pull request to add it or let us know!</p>
<h2><a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Contributing</h2>
<p>If you're interested in contributing to the development of Oceananigans we want your help no matter how big or small a contribution you make! It's always great to have new people look at the code with fresh eyes: you will see errors that other developers have missed.</p>
<p>Let us know by <a href="https://github.com/clima/Oceananigans.jl/issues/new">opening an issue</a> if you'd like to work on a new feature or if you're new to open-source and want to find a cool little project or issue to work on that fits your interests! We're more than happy to help along the way.</p>
<p>For more information, check out our <a href="https://github.com/clima/Oceananigans.jl/blob/master/CONTRIBUTING.md">contributor's guide</a>.</p>
<h2><a id="user-content-movies" class="anchor" aria-hidden="true" href="#movies"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Movies</h2>
<h3><a id="user-content-deep-convection" class="anchor" aria-hidden="true" href="#deep-convection"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><a href="https://www.youtube.com/watch?v=kpUrxnKKMjI" rel="nofollow">Deep convection</a></h3>
<p><a href="https://www.youtube.com/watch?v=kpUrxnKKMjI" rel="nofollow"><img src="https://raw.githubusercontent.com/ali-ramadhan/ali-ramadhan.Github.io/master/img/surface_temp_3d_00130_halfsize.png" alt="Watch deep convection in action" style="max-width:100%;"></a></p>
<h3><a id="user-content-free-convection" class="anchor" aria-hidden="true" href="#free-convection"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><a href="https://www.youtube.com/watch?v=yq4op9h3xcU" rel="nofollow">Free convection</a></h3>
<p><a href="https://www.youtube.com/watch?v=yq4op9h3xcU" rel="nofollow"><img src="https://raw.githubusercontent.com/ali-ramadhan/ali-ramadhan.Github.io/master/img/free_convection_0956.png" alt="Watch free convection in action" style="max-width:100%;"></a></p>
<h3><a id="user-content-winds-blowing-over-the-ocean" class="anchor" aria-hidden="true" href="#winds-blowing-over-the-ocean"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><a href="https://www.youtube.com/watch?v=IRncfbvuiy8" rel="nofollow">Winds blowing over the ocean</a></h3>
<p><a href="https://www.youtube.com/watch?v=IRncfbvuiy8" rel="nofollow"><img src="https://raw.githubusercontent.com/ali-ramadhan/ali-ramadhan.Github.io/master/img/wind_stress_0400.png" alt="Watch winds blowing over the ocean" style="max-width:100%;"></a></p>
<h3><a id="user-content-free-convection-with-wind-stress" class="anchor" aria-hidden="true" href="#free-convection-with-wind-stress"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><a href="https://www.youtube.com/watch?v=ob6OMQgPfI4" rel="nofollow">Free convection with wind stress</a></h3>
<p><a href="https://www.youtube.com/watch?v=ob6OMQgPfI4" rel="nofollow"><img src="https://raw.githubusercontent.com/ali-ramadhan/ali-ramadhan.Github.io/master/img/wind_stress_unstable_7500.png" alt="Watch free convection with wind stress in action" style="max-width:100%;"></a></p>
<h2><a id="user-content-performance-benchmarks" class="anchor" aria-hidden="true" href="#performance-benchmarks"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Performance benchmarks</h2>
<p>We've performed some preliminary performance benchmarks (see the <a href="https://clima.github.io/OceananigansDocumentation/stable/benchmarks/" rel="nofollow">performance benchmarks</a> section of the documentation) by initializing models of various sizes and measuring the wall clock time taken per model iteration (or time step).</p>
<p>This is not really a fair comparison as we haven't parallelized across all the CPU's cores so we will revisit these benchmarks once Oceananigans.jl can run on multiple CPUs and GPUs.</p>
<p>To make full use of or fully saturate the computing power of a GPU such as an Nvidia Tesla V100 or
a Titan V, the model should have around ~10 million grid points or more.</p>
<p>Sometimes counter-intuitively running with <code>Float32</code> is slower than <code>Float64</code>. This is likely due
to type mismatches causing slowdowns as floats have to be converted between 32-bit and 64-bit, an
issue that needs to be addressed meticulously. Due to other bottlenecks such as memory accesses and
GPU register pressure, <code>Float32</code> models may not provide much of a speedup so the main benefit becomes
lower memory costs (by around a factor of 2).</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/20099589/89906791-d2c85b00-dbb9-11ea-969a-4b8db2c31680.png"><img src="https://user-images.githubusercontent.com/20099589/89906791-d2c85b00-dbb9-11ea-969a-4b8db2c31680.png" alt="Performance benchmark plots" style="max-width:100%;"></a></p>
</article></div>