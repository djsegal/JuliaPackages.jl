<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content--gaussianrandomfields" class="anchor" aria-hidden="true" href="#-gaussianrandomfields"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><a target="_blank" rel="noopener noreferrer" href="assets/logo.png"><img src="assets/logo.png" alt="alt text" width="75" height="75" align="center" style="max-width:100%;"></a> GaussianRandomFields</h1>
<table>
<thead>
<tr>
<th><strong>Documentation</strong></th>
<th><strong>Build Status</strong></th>
<th><strong>Coverage</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://PieterjanRobbe.github.io/GaussianRandomFields.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a> <a href="https://PieterjanRobbe.github.io/GaussianRandomFields.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a></td>
<td><a href="https://travis-ci.org/PieterjanRobbe/GaussianRandomFields.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ceb171a8552bab52a9563073fa28f0782c5490bc/68747470733a2f2f7472617669732d63692e6f72672f5069657465726a616e526f6262652f476175737369616e52616e646f6d4669656c64732e6a6c2e706e67" alt="Build Status" data-canonical-src="https://travis-ci.org/PieterjanRobbe/GaussianRandomFields.jl.png" style="max-width:100%;"></a> <a href="https://ci.appveyor.com/project/PieterjanRobbe/gaussianrandomfields-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a148a7e22665eb6b93db493e1fe4a2fc78585ece/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6970756476336b376e393771353336363f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/ipudv3k7n97q5366?svg=true" style="max-width:100%;"></a></td>
<td><a href="https://codecov.io/gh/PieterjanRobbe/GaussianRandomFields.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/a8260d9ad19adf197853f88db9f575f9d0bd3828/68747470733a2f2f636f6465636f762e696f2f67682f5069657465726a616e526f6262652f476175737369616e52616e646f6d4669656c64732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/PieterjanRobbe/GaussianRandomFields.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a> <a href="https://coveralls.io/github/PieterjanRobbe/GaussianRandomFields.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/ea7698510279abc8462225c5990a338b7536de4a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f5069657465726a616e526f6262652f476175737369616e52616e646f6d4669656c64732e6a6c2f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/PieterjanRobbe/GaussianRandomFields.jl/badge.svg" style="max-width:100%;"></a></td>
</tr>
</tbody>
</table>
<p><code>GaussianRandomFields</code> is a Julia package to compute and sample from Gaussian random fields.</p>
<p align="center">
<a target="_blank" rel="noopener noreferrer" href="assets/examples.png"><img align="middle" src="assets/examples.png" style="max-width:100%;"></a>
</p>
<h2><a id="user-content-key-features" class="anchor" aria-hidden="true" href="#key-features"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Key Features</h2>
<ul>
<li>Support for stationary separable and non-separable isotropic and anisotropic Gaussian random fields.</li>
<li>We provide most standard covariance functions such as Gaussian, Exponential and Matérn covariances. Adding a user-defined covariance function is very easy.</li>
<li>Implementation of most common methods to generate Gaussian random fields: Cholesky factorization, eigenvalue decomposition, Karhunen-Loève expansion and circulant embedding.</li>
<li>Easy generation of Gaussian random fields defined on a Finite Element mesh.</li>
<li>Versatile plotting features for easy visualisation of Gaussian random fields using <a href="https://github.com/JuliaPlots/Plots.jl">Plots.jl</a>.</li>
</ul>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<p><code>GaussianRandomFields</code> is a registered package and so can be installed via</p>
<pre><code>] add GaussianRandomFields
</code></pre>
<h2><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Usage</h2>
<ul>
<li>See the <a href="https://PieterjanRobbe.github.io/GaussianRandomFields.jl/dev/tutorial" rel="nofollow">Tutorial</a> for an introduction on how to use this package (including fancy pictures!)</li>
<li>See the <a href="https://PieterjanRobbe.github.io/GaussianRandomFields.jl/dev/API" rel="nofollow">API</a> for a detailed manual</li>
</ul>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h2>
<p>[1] Lord, G. J., Powell, C. E. and Shardlow, T. <em>An introduction to computational stochastic PDEs</em>. No. 50. Cambridge University Press, 2014.</p>
<p>[2] Graham, I. G., Kuo, F. Y., Nuyens, D., Scheichl, R. and Sloan, I.H. <em>Analysis of circulant embedding methods for sampling stationary random fields</em>. SIAM Journal on Numerical Analysis 56(3), pp. 1871-1895, 2018.</p>
<p>[3] Le Maître, O. and Knio, M. O. <em>Spectral methods for uncertainty quantification: with applications to computational fluid dynamics</em>. Springer Science &amp; Business Media, 2010.</p>
<p>[4] Baker, C. T. <em>The numerical treatment of integral equations</em>. Clarendon Press, 1977.</p>
<p>[5] Betz, W., Papaioannou I. and Straub, D. <em>Numerical methods for the discretization of random fields by means of the Karhunen–Loève expansion.</em> Computer Methods in Applied Mechanics and Engineering 271, pp. 109-129, 2014.</p>
</article></div>