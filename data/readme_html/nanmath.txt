<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-nanmath" class="anchor" aria-hidden="true" href="#nanmath"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>NaNMath</h1>
<p>Implementations of basic math functions which return <code>NaN</code> instead of throwing a <code>DomainError</code>.</p>
<p>Example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="import NaNMath
NaNMath.log(-100) # NaN
NaNMath.pow(-1.5,2.3) # NaN
"><pre><span class="pl-k">import</span> NaNMath
NaNMath<span class="pl-k">.</span><span class="pl-c1">log</span>(<span class="pl-k">-</span><span class="pl-c1">100</span>) <span class="pl-c"><span class="pl-c">#</span> NaN</span>
NaNMath<span class="pl-k">.</span><span class="pl-c1">pow</span>(<span class="pl-k">-</span><span class="pl-c1">1.5</span>,<span class="pl-c1">2.3</span>) <span class="pl-c"><span class="pl-c">#</span> NaN</span></pre></div>
<p>In addition this package provides functions that aggregate arrays and ignore elements that are NaN.
The following functions are implemented:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="sum
maximum
minimum
extrema
mean
median
var
std
min
max
"><pre><code>sum
maximum
minimum
extrema
mean
median
var
std
min
max
</code></pre></div>
<p>Example:</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="using NaNMath; nm=NaNMath
nm.sum([1., 2., NaN]) # result: 3.0
"><pre><span class="pl-k">using</span> NaNMath; nm<span class="pl-k">=</span>NaNMath
nm<span class="pl-k">.</span><span class="pl-c1">sum</span>([<span class="pl-c1">1.</span>, <span class="pl-c1">2.</span>, <span class="pl-c1">NaN</span>]) <span class="pl-c"><span class="pl-c">#</span> result: 3.0</span></pre></div>
</article></div>