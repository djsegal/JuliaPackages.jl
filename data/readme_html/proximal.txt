<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h2><a id="user-content-proximaljl" class="anchor" aria-hidden="true" href="#proximaljl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Proximal.jl</h2>
<h1><a id="user-content-notice" class="anchor" aria-hidden="true" href="#notice"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>NOTICE</h1>
<p><strong>This package is unmaintained. Its reliability is not guaranteed.</strong></p>
<h1><a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Introduction</h1>
<p>This is a translation to Julia of the <code>proximal</code> code by Parikh and Boyd. See
the documentation below for more details.</p>
<h1><a id="user-content-proximal-operators" class="anchor" aria-hidden="true" href="#proximal-operators"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Proximal operators</h1>
<p>This "library" contains sample implementations of various proximal operators in
Matlab. These implementations are intended to be pedagogical, not the most
performant.</p>
<p>This code is associated with the paper
<em><a href="http://www.stanford.edu/~boyd/papers/prox_algs.html" rel="nofollow">Proximal Algorithms</a></em>
by Neal Parikh and Stephen Boyd.</p>
<h2><a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Requirements</h2>
<p>The C functions rely on the GNU Scientific Library (GSL). Some of these
functions also contain OpenMP directives to parallelize some <code>for</code> loops, so
compiling with OpenMP is optional, but some of the functions will be
substantially faster if it is used.</p>
<p>The Matlab function <code>prox_cvx.m</code> requires <a href="http://cvxr.com/cvx" rel="nofollow">CVX</a>.</p>
<h2><a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Examples</h2>
<p>Evaluating the proximal operator of the <em>l1</em> norm via CVX and the function here:</p>
<div class="highlight highlight-source-matlab"><pre>&gt;&gt; n = <span class="pl-c1">100</span>;
&gt;&gt; lambda = <span class="pl-c1">1</span>;
&gt;&gt; 
&gt;&gt; v = randn(n,<span class="pl-c1">1</span>);
&gt;&gt; 
&gt;&gt; <span class="pl-c"><span class="pl-c">%</span> CVX baseline</span>
&gt;&gt; cvx_begin quiet
&gt;&gt;   variable x(n)
&gt;&gt;   minimize(norm(x,<span class="pl-c1">1</span>) <span class="pl-k">+</span> (<span class="pl-c1">1</span>/(<span class="pl-c1">2</span>*lambda))*sum_square(x <span class="pl-k">-</span> v))
&gt;&gt; cvx_end
&gt;&gt; 
&gt;&gt; <span class="pl-c"><span class="pl-c">%</span> Custom method</span>
&gt;&gt; x2 = prox_l1(v, lambda);
&gt;&gt; 
&gt;&gt; <span class="pl-c"><span class="pl-c">%</span> Comparison</span>
&gt;&gt; norm(x <span class="pl-k">-</span> x2)
ans =
<span class="pl-c1">7</span>.7871e-<span class="pl-c1">05</span></pre></div>
<p>Evaluating the proximal operator of the nuclear norm:</p>
<div class="highlight highlight-source-matlab"><pre>&gt;&gt; m = <span class="pl-c1">10</span>;
&gt;&gt; n = <span class="pl-c1">30</span>;
&gt;&gt; lambda = <span class="pl-c1">1</span>;
&gt;&gt; 
&gt;&gt; V = randn(m,n);
&gt;&gt; 
&gt;&gt; <span class="pl-c"><span class="pl-c">%</span> CVX baseline</span>
&gt;&gt; cvx_begin quiet
&gt;&gt;   variable X(m,n)
&gt;&gt;   minimize(norm_nuc(X) <span class="pl-k">+</span> (<span class="pl-c1">1</span>/(<span class="pl-c1">2</span>*lambda))*square_pos(norm(X <span class="pl-k">-</span> V,<span class="pl-s"><span class="pl-pds">'</span>fro<span class="pl-pds">'</span></span>)))
&gt;&gt; cvx_end
&gt;&gt; 
&gt;&gt; <span class="pl-c"><span class="pl-c">%</span> Custom method</span>
&gt;&gt; X2 = prox_matrix(V, lambda, @prox_l1);
&gt;&gt; 
&gt;&gt; <span class="pl-c"><span class="pl-c">%</span> Comparison</span>
&gt;&gt; norm(X <span class="pl-k">-</span> X2)
ans =
<span class="pl-c1">1</span>.9174e-<span class="pl-c1">05</span></pre></div>
<p>This second example shows a case where one of the arguments is a function
handle to another proximal operator.</p>
<p>The other Matlab functions work similarly; just use <code>help</code> in Matlab.</p>
<p>For a C example, see the file <code>example.c</code> in the C source directory.</p>
<h2><a id="user-content-proximal-operators-1" class="anchor" aria-hidden="true" href="#proximal-operators-1"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Proximal operators</h2>
<p>The Matlab functions include the following examples:</p>
<ul>
<li>Projection onto an affine set</li>
<li>Projection onto a box</li>
<li>Projection onto the consensus set (averaging)</li>
<li>Projection onto the exponential cone</li>
<li>Projection onto the nonnegative orthant</li>
<li>Projection onto the second-order cone</li>
<li>Projection onto the semidefinite cone</li>
<li>Proximal operator of a generic function (via CVX)</li>
<li>Proximal operator of the <em>l1</em> norm</li>
<li>Proximal operator of the max function</li>
<li>Proximal operator of a quadratic function</li>
<li>Proximal operator of a generic scalar function (vectorized)</li>
<li>Proximal operator of an orthogonally invariant matrix function</li>
<li>Precomposition of a proximal operator</li>
</ul>
<h2><a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Authors</h2>
<ul>
<li><a href="http://cs.stanford.edu/~npparikh" rel="nofollow">Neal Parikh</a></li>
<li><a href="http://www.stanford.edu/~echu508" rel="nofollow">Eric Chu</a></li>
<li><a href="http://www.stanford.edu/~boyd" rel="nofollow">Stephen Boyd</a></li>
</ul>
<h2><a id="user-content-other-libraries" class="anchor" aria-hidden="true" href="#other-libraries"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Other libraries</h2>
<p>There are other libraries with implementations of proximal or projection
operators that may be preferable or contain more examples:</p>
<ul>
<li><a href="http://cvxr.com/tfocs/functions/" rel="nofollow">TFOCS</a> (see prox/proj sections)
by S. Becker, E. Candès, and M. Grant</li>
<li><a href="https://github.com/svaiter/pyprox">Python proximal operators</a> by S. Vaiter</li>
</ul>
<h2><a id="user-content-license" class="anchor" aria-hidden="true" href="#license"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>License</h2>
<p>This code is released under a BSD license; see the "LICENSE" file.</p>
</article></div>