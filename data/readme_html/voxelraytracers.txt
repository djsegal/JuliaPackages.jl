<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-voxelraytracers" class="anchor" aria-hidden="true" href="#voxelraytracers"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>VoxelRayTracers</h1>
<p><a href="https://jw3126.github.io/VoxelRayTracers.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"></a>
<a href="https://jw3126.github.io/VoxelRayTracers.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"></a>
<a href="https://travis-ci.com/jw3126/VoxelRayTracers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/383462141ed16d3394c2689f40475f3cfab33f0b/68747470733a2f2f7472617669732d63692e636f6d2f6a77333132362f566f78656c526179547261636572732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/jw3126/VoxelRayTracers.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/jw3126/VoxelRayTracers.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/07fbb73e3cdab994d516a7b0610e099bb5f5dad4/68747470733a2f2f636f6465636f762e696f2f67682f6a77333132362f566f78656c526179547261636572732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/jw3126/VoxelRayTracers.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<h1><a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage</h1>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> VoxelRayTracers

edges <span class="pl-k">=</span> (<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">10</span>, <span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">10</span>,)
ray <span class="pl-k">=</span> (position<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>], velocity<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>])
<span class="pl-k">for</span> hit <span class="pl-k">in</span> <span class="pl-c1">eachtraversal</span>(ray, edges)
    <span class="pl-c1">println</span>(hit)
<span class="pl-k">end</span></pre></div>
<pre><code>(voxelindex = CartesianIndex(5, 1), entry_time = 4.0, exit_time = 5.0)
(voxelindex = CartesianIndex(6, 1), entry_time = 5.0, exit_time = 6.0)
(voxelindex = CartesianIndex(7, 2), entry_time = 6.0, exit_time = 7.0)
(voxelindex = CartesianIndex(8, 2), entry_time = 7.0, exit_time = 8.0)
(voxelindex = CartesianIndex(9, 3), entry_time = 8.0, exit_time = 9.0)
(voxelindex = CartesianIndex(10, 3), entry_time = 9.0, exit_time = 10.0)
</code></pre>
<p>There is also some basic visualization useful for debugging:</p>
<div class="highlight highlight-source-julia"><pre><span class="pl-k">using</span> Plots
<span class="pl-c1">plot</span>(<span class="pl-c1">eachtraversal</span>(ray, edges))</pre></div>
<p><a target="_blank" rel="noopener noreferrer" href="example.png"><img src="example.png" alt="example" style="max-width:100%;"></a></p>
<h1><a id="user-content-design-goals" class="anchor" aria-hidden="true" href="#design-goals"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Design goals</h1>
<ul>
<li>Lightweight, simple and fun</li>
<li>Support arbitrary dimension and non uniform grids</li>
<li>Reasonable performance</li>
</ul>
</article></div>