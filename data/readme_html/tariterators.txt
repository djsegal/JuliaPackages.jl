<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-tariteratorsjl" class="anchor" aria-hidden="true" href="#tariteratorsjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>TarIterators.jl</h1>
<p><a href="https://travis-ci.org/KlausC/TarIterators.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/4ce30506da5b1ecbf77ffa72eaba8de002e9eb0a/68747470733a2f2f7472617669732d63692e6f72672f4b6c617573432f5461724974657261746f72732e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/KlausC/TarIterators.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://codecov.io/gh/KlausC/TarIterators.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/377fec75ebe4e32b32b56806ac1814b5fce09478/68747470733a2f2f636f6465636f762e696f2f67682f4b6c617573432f5461724974657261746f72732e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/KlausC/TarIterators.jl/branch/master/graph/badge.svg" style="max-width:100%;"></a></p>
<p>The <code>TarIterators</code> package can read from individual elements of POSIX TAR archives ("tarballs") as specified in <a href="https://pubs.opengroup.org/onlinepubs/9699919799/utilities/pax.html" rel="nofollow">POSIX 1003.1-2001</a>.</p>
<h2><a id="user-content-api--usage" class="anchor" aria-hidden="true" href="#api--usage"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>API &amp; Usage</h2>
<p>The public API of <code>TarIterators</code> includes only standard functions and one type:</p>
<ul>
<li><code>TarIterator</code> — struct representing a file stream opened for reading a TAR file</li>
<li>
<pre><code>            may be restricted by predicates.
</code></pre>
</li>
<li><code>iterate</code> — deliver pairs of <code>Tar.header</code> and <code>BoundedInputStream</code> for each element</li>
<li><code>close</code> - close wrapped stream</li>
<li><code>open</code>  - deliver <code>BoundedInputStream</code> for the next element of tar file</li>
<li><code>seekstart</code> - reset input to start</li>
</ul>
<h3><a id="user-content-usage-example" class="anchor" aria-hidden="true" href="#usage-example"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Usage Example</h3>
<div class="highlight highlight-source-julia"><pre>    <span class="pl-k">using</span> TarIterators

    ti <span class="pl-k">=</span> Tar<span class="pl-k">.</span><span class="pl-c1">Iterator</span>(<span class="pl-s"><span class="pl-pds">"</span>/tmp/AB.tar<span class="pl-pds">"</span></span>, <span class="pl-c1">:file</span>)
    <span class="pl-k">for</span> (h, io) <span class="pl-k">in</span> ti
        x <span class="pl-k">=</span> <span class="pl-c1">read</span>(io), String
    <span class="pl-k">end</span>

    <span class="pl-c"><span class="pl-c">#</span> reset to start</span>
    <span class="pl-c1">seekstart</span>(ti) 

    <span class="pl-c"><span class="pl-c">#</span> or equivalently</span>
    <span class="pl-c1">open</span>(ti) <span class="pl-k">do</span> h, io
        <span class="pl-c1">read</span>(io, String)
    <span class="pl-k">end</span>

    <span class="pl-k">using</span> CodecZlib
    cio <span class="pl-k">=</span> <span class="pl-c1">GzipDecompressorStream</span>(<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">"</span>/tmp/AB.tar.gz<span class="pl-pds">"</span></span>))

    <span class="pl-c"><span class="pl-c">#</span> process first file named "B"</span>
    io <span class="pl-k">=</span> <span class="pl-c1">open</span>(Tar<span class="pl-k">.</span><span class="pl-c1">Iterator</span>(cio, <span class="pl-s"><span class="pl-pds">"</span>B<span class="pl-pds">"</span></span>, close_stream<span class="pl-k">=</span><span class="pl-c1">true</span>)
    x <span class="pl-k">=</span> <span class="pl-c1">read</span>(io, <span class="pl-c1">10</span>)
    <span class="pl-c1">close</span>(io) <span class="pl-c"><span class="pl-c">#</span> cio is closed implicitly - by default that is not the case</span></pre></div>


</article></div>