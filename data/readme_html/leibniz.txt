<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-leibnizjl" class="anchor" aria-hidden="true" href="#leibnizjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Leibniz.jl</h1>
<p><em>Operator algebras for multivariate differentiable Julia expressions</em></p>
<p><a href="https://travis-ci.org/chakravala/Leibniz.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/2d226e0bf8b03d80c3cdf9bf94b14bbd103e2bf4/68747470733a2f2f7472617669732d63692e6f72672f6368616b726176616c612f4c6569626e697a2e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/chakravala/Leibniz.jl.svg?branch=master" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/chakravala/leibniz-jl" rel="nofollow"><img src="https://camo.githubusercontent.com/423e53ec92326f6b78f81546b6393aa0f2c02cc2/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7862303364796676686e693676726a353f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/xb03dyfvhni6vrj5?svg=true" style="max-width:100%;"></a>
<a href="https://coveralls.io/github/chakravala/Leibniz.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/1207dfc35449f47249e62e84eaa5a9929c5d59d8/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6368616b726176616c612f4c6569626e697a2e6a6c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/chakravala/Leibniz.jl/badge.svg?branch=master&amp;service=github" style="max-width:100%;"></a>
<a href="http://codecov.io/github/chakravala/Leibniz.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/58d3d038afa4501475a969135a1be63ff845a1a6/687474703a2f2f636f6465636f762e696f2f6769746875622f6368616b726176616c612f4c6569626e697a2e6a6c2f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="http://codecov.io/github/chakravala/Leibniz.jl/coverage.svg?branch=master" style="max-width:100%;"></a>
<a href="https://gitter.im/Grassmann-jl/community?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge" rel="nofollow"><img src="https://camo.githubusercontent.com/d8f28765f835be1a8faf096e59ca4e62de18fcc9/68747470733a2f2f6261646765732e6769747465722e696d2f47726173736d616e6e2d6a6c2f636f6d6d756e6974792e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Grassmann-jl/community.svg" style="max-width:100%;"></a>
<a href="https://liberapay.com/chakravala" rel="nofollow"><img src="https://camo.githubusercontent.com/a3bb2f1ba8f7d9f7324eae14426edc82cd325d00/68747470733a2f2f696d672e736869656c64732e696f2f6c69626572617061792f706174726f6e732f6368616b726176616c612e737667" alt="Liberapay patrons" data-canonical-src="https://img.shields.io/liberapay/patrons/chakravala.svg" style="max-width:100%;"></a></p>
<p>Compatibility of <a href="https://github.com/chakravala/Grassmann.jl">Grassmann.jl</a> for multivariable differential operators and tensor field operations.</p>
<div class="highlight highlight-source-julia"><pre>julia<span class="pl-k">&gt;</span> <span class="pl-k">using</span> Leibniz, Grassmann
Reduce (Free CSL version, revision <span class="pl-c1">4980</span>), <span class="pl-c1">06</span><span class="pl-k">-</span>May<span class="pl-k">-</span><span class="pl-c1">19</span> <span class="pl-k">...</span>

julia<span class="pl-k">&gt;</span> V <span class="pl-k">=</span> <span class="pl-c1">tangent</span>(ℝ<span class="pl-k">^</span><span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">3</span>)
⟨<span class="pl-k">+++</span>⟩

julia<span class="pl-k">&gt;</span> <span class="pl-c1">V</span>(∇)
∂₁v₁ <span class="pl-k">+</span> ∂₂v₂ <span class="pl-k">+</span> ∂₃v₃

julia<span class="pl-k">&gt;</span> <span class="pl-c1">V</span>(∇<span class="pl-k">^</span><span class="pl-c1">2</span>)
<span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₁∂₁ <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₂∂₂ <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₃∂₃

julia<span class="pl-k">&gt;</span> <span class="pl-c1">V</span>(∇<span class="pl-k">^</span><span class="pl-c1">3</span>)
<span class="pl-c1">0</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₁∂₁∂₁v₁ <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₂∂₂∂₂v₂ <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₃∂₃∂₃v₃ <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₂∂₁₂v₁ <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₃∂₁₃v₁ <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₁∂₁₂v₂ <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₃∂₂₃v₂ <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₁∂₁₃v₃ <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₂∂₂₃v₃

julia<span class="pl-k">&gt;</span> <span class="pl-c1">V</span>(∇<span class="pl-k">^</span><span class="pl-c1">4</span>)
<span class="pl-c1">0.0</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₁∂₁∂₁∂₁ <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₂∂₂∂₂∂₂ <span class="pl-k">+</span> <span class="pl-c1">1</span>∂₃∂₃∂₃∂₃ <span class="pl-k">+</span> <span class="pl-c1">2</span>∂₁₂∂₁₂ <span class="pl-k">+</span> <span class="pl-c1">2</span>∂₁₃∂₁₃ <span class="pl-k">+</span> <span class="pl-c1">2</span>∂₂₃∂₂₃

julia<span class="pl-k">&gt;</span> ∇<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">==</span> Δ
<span class="pl-c1">true</span>

julia<span class="pl-k">&gt;</span> ∇, Δ
(∂ₖvₖ, ∂ₖ²v)</pre></div>
<p>Generates the tensor algebra of multivariable symmetric Leibniz differentials and interfaces <code>using Reduce, Grassmann</code> to provide the <code>∇,Δ</code> vector field operators, enabling  mixed-symmetry tensors with arbitrary multivariate <code>Grassmann</code> manifolds.</p>
<p>This is an initial undocumented pre-release registration for testing with other packages.</p>
</article></div>