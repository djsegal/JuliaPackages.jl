<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><h1><a id="user-content-ldapclientjl" class="anchor" aria-hidden="true" href="#ldapclientjl"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>LDAPClient.jl</h1>
<p><a href="LICENSE"><img src="https://camo.githubusercontent.com/7f8e04a761573d054a76123e9d6af3fb839a2eb8226a8f715f1e32cdd99f9ac8/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="License" data-canonical-src="http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square" style="max-width:100%;"></a>
<a href="https://travis-ci.org/felipenoris/LDAPClient.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/43af57786106bd31a2a8fd600ceb632a046188005724f0fe058359085a3208dd/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f66656c6970656e6f7269732f4c444150436c69656e742e6a6c2f6d61737465722e7376673f6c6f676f3d747261766973266c6162656c3d4c696e75782b2f2b6d61634f53267374796c653d666c61742d737175617265" alt="travis" data-canonical-src="https://img.shields.io/travis/felipenoris/LDAPClient.jl/master.svg?logo=travis&amp;label=Linux+/+macOS&amp;style=flat-square" style="max-width:100%;"></a>
<a href="https://ci.appveyor.com/project/felipenoris/ldapclient-jl/branch/master" rel="nofollow"><img src="https://camo.githubusercontent.com/7b4f74a5f51453f39a8d1b4704540443e2e3fdef39df91009d46dd6e0137f6a3/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f66656c6970656e6f7269732f6c646170636c69656e742d6a6c2f6d61737465722e7376673f6c6f676f3d6170707665796f72266c6162656c3d57696e646f7773267374796c653d666c61742d737175617265" alt="appveyor" data-canonical-src="https://img.shields.io/appveyor/ci/felipenoris/ldapclient-jl/master.svg?logo=appveyor&amp;label=Windows&amp;style=flat-square" style="max-width:100%;"></a>
<a href="http://codecov.io/github/felipenoris/LDAPClient.jl?branch=master" rel="nofollow"><img src="https://camo.githubusercontent.com/5fe28d7a698eb13e6b475023ce5b6e5ba2253c0537e7f900522a781cd5a550d6/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f66656c6970656e6f7269732f4c444150436c69656e742e6a6c2f6d61737465722e7376673f6c6162656c3d636f6465636f76267374796c653d666c61742d737175617265" alt="codecov" data-canonical-src="https://img.shields.io/codecov/c/github/felipenoris/LDAPClient.jl/master.svg?label=codecov&amp;style=flat-square" style="max-width:100%;"></a></p>
<p>A Julia client for LDAP (Lightweight Directory Access Protocol) based on <a href="https://www.openldap.org/" rel="nofollow">OpenLDAP</a> library.</p>
<h2><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Installation</h2>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="pkg&gt; add LDAPClient
"><pre>pkg<span class="pl-k">&gt;</span> add LDAPClient</pre></div>
<h2><a id="user-content-tutorial" class="anchor" aria-hidden="true" href="#tutorial"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Tutorial</h2>
<h3><a id="user-content-authentication" class="anchor" aria-hidden="true" href="#authentication"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Authentication</h3>
<p>This implements the use-case of checking if a username and password are valid or not.
<code>r</code> will be either an <code>AuthOk</code> for successful authentication, or <code>AuthErr</code> when the
password is wrong or any other error happened.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="r = LDAPClient.authenticate(&quot;ldap://ldap.server.net&quot;, &quot;my-username&quot;, &quot;my-password&quot;)
"><pre>r <span class="pl-k">=</span> LDAPClient<span class="pl-k">.</span><span class="pl-c1">authenticate</span>(<span class="pl-s"><span class="pl-pds">"</span>ldap://ldap.server.net<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>my-username<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>my-password<span class="pl-pds">"</span></span>)</pre></div>
<h3><a id="user-content-bind-and-unbind" class="anchor" aria-hidden="true" href="#bind-and-unbind"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Bind and Unbind</h3>
<p>Usually the user needs to bind to a LDAP connection before running queries.
The following example shows how to create a connection, bind to it, and unbind when you're finished with it.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="conn = LDAPClient.LDAPConnection(&quot;ldap://ldap.server.net&quot;) # this will not connect to the server yet
LDAPClient.simple_bind(conn, &quot;my-username&quot;, &quot;my-password&quot;) # here we actually get to connect to the server
# do stuff
LDAPClient.unbind(conn)
"><pre>conn <span class="pl-k">=</span> LDAPClient<span class="pl-k">.</span><span class="pl-c1">LDAPConnection</span>(<span class="pl-s"><span class="pl-pds">"</span>ldap://ldap.server.net<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> this will not connect to the server yet</span>
LDAPClient<span class="pl-k">.</span><span class="pl-c1">simple_bind</span>(conn, <span class="pl-s"><span class="pl-pds">"</span>my-username<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>my-password<span class="pl-pds">"</span></span>) <span class="pl-c"><span class="pl-c">#</span> here we actually get to connect to the server</span>
<span class="pl-c"><span class="pl-c">#</span> do stuff</span>
LDAPClient<span class="pl-k">.</span><span class="pl-c1">unbind</span>(conn)</pre></div>
<h3><a id="user-content-running-queries" class="anchor" aria-hidden="true" href="#running-queries"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Running queries</h3>
<p>Use <code>LDAPClient.search</code> to perform queries on your LDAP server.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="search(ldap::LDAPConnection, base::AbstractString, scope::LDAPScope;
        filter::Union{Nothing, AbstractString}=nothing,
        attr_desc_only::Bool=false,
        size_limit::Integer=-1) :: MessageChain
"><pre><span class="pl-c1">search</span>(ldap<span class="pl-k">::</span><span class="pl-c1">LDAPConnection</span>, base<span class="pl-k">::</span><span class="pl-c1">AbstractString</span>, scope<span class="pl-k">::</span><span class="pl-c1">LDAPScope</span>;
        filter<span class="pl-k">::</span><span class="pl-c1">Union{Nothing, AbstractString}</span><span class="pl-k">=</span><span class="pl-c1">nothing</span>,
        attr_desc_only<span class="pl-k">::</span><span class="pl-c1">Bool</span><span class="pl-k">=</span><span class="pl-c1">false</span>,
        size_limit<span class="pl-k">::</span><span class="pl-c1">Integer</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>) <span class="pl-k">::</span> <span class="pl-c1">MessageChain</span></pre></div>
<p><code>scope</code> can be one of these values: <code>LDAP_SCOPE_BASE</code>, <code>LDAP_SCOPE_ONELEVEL</code>, <code>LDAP_SCOPE_SUBTREE</code>, <code>LDAP_SCOPE_CHILDREN</code>.</p>
<p>The following example queries for users, filtering only results that match users named <code>USER1</code> or <code>USER2</code>.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="search_string = &quot;CN=Users,DC=server,DC=net&quot; # will query Users on domain server.net
scope = LDAPClient.LDAP_SCOPE_ONELEVEL
chain = LDAPClient.search(conn, search_string, scope, filter=&quot;(|(name=USER1)(name=USER2))&quot;)
"><pre>search_string <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CN=Users,DC=server,DC=net<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> will query Users on domain server.net</span>
scope <span class="pl-k">=</span> LDAPClient<span class="pl-k">.</span>LDAP_SCOPE_ONELEVEL
chain <span class="pl-k">=</span> LDAPClient<span class="pl-k">.</span><span class="pl-c1">search</span>(conn, search_string, scope, filter<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>(|(name=USER1)(name=USER2))<span class="pl-pds">"</span></span>)</pre></div>
<p>The <code>chain</code> output is a collection of messages.
Each message can be an <code>Entry</code>, a <code>Reference</code> or a <code>Result</code>.</p>
<p>We can count how many messages of each kind we have with <code>count_messages(chain)</code>, <code>count_entries(chain)</code> or <code>count_references(chain)</code>.</p>
<p>We can iterate messages of each kind with <code>each_message(chain)</code>, <code>each_entry(chain)</code>, <code>each_reference(chain)</code>.</p>
<p>For <code>Entry</code> messages, we can inspect its attributes. The following shows a complete example.</p>
<div class="highlight highlight-source-julia position-relative" data-snippet-clipboard-copy-content="conn = LDAPClient.LDAPConnection(&quot;ldap://ldap.server.net&quot;)
LDAPClient.simple_bind(conn, &quot;my-username&quot;, &quot;my-password&quot;)

search_string = &quot;CN=Users,DC=server,DC=net&quot; # will query Users on domain server.net
scope = LDAPClient.LDAP_SCOPE_ONELEVEL
chain = LDAPClient.search(conn, search_string, scope, filter=&quot;(|(name=USER1)(name=USER2))&quot;)

for entry in LDAPClient.each_entry(chain)
    println(&quot;Reading attributes from user $(entry[&quot;name&quot;])&quot;)
    for attr in LDAPClient.each_attribute(entry)
        println(attr)
    end
end

LDAPClient.unbind(conn)
"><pre>conn <span class="pl-k">=</span> LDAPClient<span class="pl-k">.</span><span class="pl-c1">LDAPConnection</span>(<span class="pl-s"><span class="pl-pds">"</span>ldap://ldap.server.net<span class="pl-pds">"</span></span>)
LDAPClient<span class="pl-k">.</span><span class="pl-c1">simple_bind</span>(conn, <span class="pl-s"><span class="pl-pds">"</span>my-username<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>my-password<span class="pl-pds">"</span></span>)

search_string <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>CN=Users,DC=server,DC=net<span class="pl-pds">"</span></span> <span class="pl-c"><span class="pl-c">#</span> will query Users on domain server.net</span>
scope <span class="pl-k">=</span> LDAPClient<span class="pl-k">.</span>LDAP_SCOPE_ONELEVEL
chain <span class="pl-k">=</span> LDAPClient<span class="pl-k">.</span><span class="pl-c1">search</span>(conn, search_string, scope, filter<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>(|(name=USER1)(name=USER2))<span class="pl-pds">"</span></span>)

<span class="pl-k">for</span> entry <span class="pl-k">in</span> LDAPClient<span class="pl-k">.</span><span class="pl-c1">each_entry</span>(chain)
    <span class="pl-c1">println</span>(<span class="pl-s"><span class="pl-pds">"</span>Reading attributes from user <span class="pl-v">$(entry[<span class="pl-s"><span class="pl-pds">"</span>name<span class="pl-pds">"</span></span>])</span><span class="pl-pds">"</span></span>)
    <span class="pl-k">for</span> attr <span class="pl-k">in</span> LDAPClient<span class="pl-k">.</span><span class="pl-c1">each_attribute</span>(entry)
        <span class="pl-c1">println</span>(attr)
    <span class="pl-k">end</span>
<span class="pl-k">end</span>

LDAPClient<span class="pl-k">.</span><span class="pl-c1">unbind</span>(conn)</pre></div>
<p>This example outputs something like this.</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="Reading attributes from user [&quot;USER1&quot;]
LDAPClient.Attribute(&quot;objectClass&quot;, [&quot;top&quot;, &quot;person&quot;, &quot;organizationalPerson&quot;, &quot;user&quot;])
LDAPClient.Attribute(&quot;cn&quot;, [&quot;USER1&quot;])
LDAPClient.Attribute(&quot;title&quot;, [&quot;Manager&quot;])
"><pre><code>Reading attributes from user ["USER1"]
LDAPClient.Attribute("objectClass", ["top", "person", "organizationalPerson", "user"])
LDAPClient.Attribute("cn", ["USER1"])
LDAPClient.Attribute("title", ["Manager"])
</code></pre></div>
<h2><a id="user-content-references" class="anchor" aria-hidden="true" href="#references"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>References</h2>
<ul>
<li>
<p><a href="https://ldap.com/" rel="nofollow">LDAP.com</a></p>
</li>
<li>
<p><a href="https://www.openldap.org/" rel="nofollow">OpenLDAP</a></p>
</li>
</ul>
</article></div>