<div id="readme" class="md" data-path="README.md"><article class="markdown-body entry-content container-lg" itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="docs/src/assets/logo_text_dots.png"><img src="docs/src/assets/logo_text_dots.png" alt="Logo" style="max-width: 100%;"></a></p>
<h1 dir="auto"><a id="user-content-incompressiblenavierstokes" class="anchor" aria-hidden="true" href="#incompressiblenavierstokes"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>IncompressibleNavierStokes</h1>
<table>
<thead>
<tr>
<th align="center">Documentation</th>
<th align="center">Workflows</th>
<th align="center">Code coverage</th>
<th align="center">Quality assurance</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="https://agdestein.github.io/IncompressibleNavierStokes.jl/stable" rel="nofollow"><img src="https://camo.githubusercontent.com/c97f0a5f2ae95755f64a27f1aa8d9a17462941fd3d6c907c7630abd5d3e60acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="Stable" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width: 100%;"></a> <a href="https://agdestein.github.io/IncompressibleNavierStokes.jl/dev" rel="nofollow"><img src="https://camo.githubusercontent.com/7fcec4b2d3ab291529fce8ef6a4fcd4129a0683b2f5d5fe2f5c648f02db8b616/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/agdestein/IncompressibleNavierStokes.jl/actions"><img src="https://github.com/agdestein/IncompressibleNavierStokes.jl/workflows/CI/badge.svg" alt="Build Status" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://codecov.io/gh/agdestein/IncompressibleNavierStokes.jl" rel="nofollow"><img src="https://camo.githubusercontent.com/183e53752db114b12e868330b00479214ba29c5476f23fa8df7f677fe033f719/68747470733a2f2f636f6465636f762e696f2f67682f61676465737465696e2f496e636f6d707265737369626c654e617669657253746f6b65732e6a6c2f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="Coverage" data-canonical-src="https://codecov.io/gh/agdestein/IncompressibleNavierStokes.jl/branch/main/graph/badge.svg" style="max-width: 100%;"></a></td>
<td align="center"><a href="https://github.com/JuliaTesting/Aqua.jl"><img src="https://raw.githubusercontent.com/JuliaTesting/Aqua.jl/master/badge.svg" alt="Aqua QA" style="max-width: 100%;"></a></td>
</tr>
</tbody>
</table>
<p dir="auto">This package implements energy-conserving solvers for the incompressible Navier-Stokes
equations on a staggered Cartesian grid. It is based on the Matlab package
<a href="https://github.com/bsanderse/INS2D">INS2D</a>/<a href="https://github.com/bsanderse/INS3D">INS3D</a>.</p>
<h2 dir="auto"><a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Installation</h2>
<p dir="auto">To install IncompressibleNavierStokes, open up a Julia-REPL, type <code>]</code> to get
into Pkg-mode, and type:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="add IncompressibleNavierStokes"><pre class="notranslate"><code>add IncompressibleNavierStokes
</code></pre></div>
<p dir="auto">which will install the package and all dependencies to your local environment.
Note that IncompressibleNavierStokes requires Julia version <code>1.7</code> or above.</p>
<p dir="auto">See the
<a href="https://agdestein.github.io/IncompressibleNavierStokes.jl/dev/generated/LidDrivenCavity2D/" rel="nofollow">Documentation</a>
for examples of some typical workflows. More examples can be found in the
<a href="examples"><code>examples</code></a> directory.</p>
<h2 dir="auto"><a id="user-content-gallery" class="anchor" aria-hidden="true" href="#gallery"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Gallery</h2>
<p dir="auto">The velocity and pressure fields may be visualized in a live session using
<a href="https://github.com/JuliaPlots/Makie.jl">Makie</a>. Alternatively,
<a href="https://www.paraview.org/" rel="nofollow">ParaView</a> may be used, after exporting individual
snapshot files using the <code>save_vtk</code> function, or the full time series using the
<code>VTKWriter</code> processor.</p>
<table>
<thead>
<tr>
<th align="center"><a target="_blank" rel="noopener noreferrer" href="assets/examples/Actuator2D.png"><img src="assets/examples/Actuator2D.png" alt="" style="max-width: 100%;"></a></th>
<th align="center"><a target="_blank" rel="noopener noreferrer" href="assets/examples/BackwardFacingStep2D.png"><img src="assets/examples/BackwardFacingStep2D.png" alt="" style="max-width: 100%;"></a></th>
<th align="center"><a target="_blank" rel="noopener noreferrer" href="assets/examples/DecayingTurbulence2D.png"><img src="assets/examples/DecayingTurbulence2D.png" alt="" style="max-width: 100%;"></a></th>
<th align="center"><a target="_blank" rel="noopener noreferrer" href="assets/examples/TaylorGreenVortex2D.png"><img src="assets/examples/TaylorGreenVortex2D.png" alt="" style="max-width: 100%;"></a></th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><a href="examples/Actuator2D.jl">Actuator (2D)</a></td>
<td align="center"><a href="examples/BackwardFacingStep2D.jl">Backward Facing Step (2D)</a></td>
<td align="center"><a href="examples/DecayingTurbulence2D.jl">Decaying Turbulence (2D)</a></td>
<td align="center"><a href="examples/TaylorGreenVortex2D.jl">Taylor-Green Vortex (2D)</a></td>
</tr>
<tr>
<td align="center"><a target="_blank" rel="noopener noreferrer" href="assets/examples/Actuator3D.png"><img src="assets/examples/Actuator3D.png" alt="" style="max-width: 100%;"></a></td>
<td align="center"><a target="_blank" rel="noopener noreferrer" href="assets/examples/BackwardFacingStep3D.png"><img src="assets/examples/BackwardFacingStep3D.png" alt="" style="max-width: 100%;"></a></td>
<td align="center"><a target="_blank" rel="noopener noreferrer" href="assets/examples/DecayingTurbulence3D.png"><img src="assets/examples/DecayingTurbulence3D.png" alt="" style="max-width: 100%;"></a></td>
<td align="center"><a target="_blank" rel="noopener noreferrer" href="assets/examples/TaylorGreenVortex3D.png"><img src="assets/examples/TaylorGreenVortex3D.png" alt="" style="max-width: 100%;"></a></td>
</tr>
<tr>
<td align="center"><a href="examples/Actuator3D.jl">Actuator (3D)</a></td>
<td align="center"><a href="examples/BackwardFacingStep3D.jl">Backward Facing Step (3D)</a></td>
<td align="center"><a href="examples/DecayingTurbulence3D.jl">Decaying Turbulence (3D)</a></td>
<td align="center"><a href="examples/TaylorGreenVortex3D.jl">Taylor-Green Vortex (3D)</a></td>
</tr>
</tbody>
</table>
<h2 dir="auto"><a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg></a>Demo</h2>
<p dir="auto">The following example code  using a negative body force on a small rectangle
with an unsteady inflow. It simulates a wind turbine (actuator) under varying
wind conditions.</p>
<div class="highlight highlight-source-julia notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="using GLMakie
using IncompressibleNavierStokes

# Viscosity model
viscosity_model = LaminarModel(; Re = 100.0)

# Boundary conditions: Unsteady BC requires time derivatives
u_bc(x, y, t) = x ≈ 0.0 ? cos(π / 6 * sin(π / 6 * t)) : 0.0
v_bc(x, y, t) = x ≈ 0.0 ? sin(π / 6 * sin(π / 6 * t)) : 0.0
dudt_bc(x, y, t) = x ≈ 0.0 ? -(π / 6)^2 * cos(π / 6 * t) * sin(π / 6 * sin(π / 6 * t)) : 0.0
dvdt_bc(x, y, t) = x ≈ 0.0 ? (π / 6)^2 * cos(π / 6 * t) * cos(π / 6 * sin(π / 6 * t)) : 0.0
bc_type = (;
    u = (; x = (:dirichlet, :pressure), y = (:symmetric, :symmetric)),
    v = (; x = (:dirichlet, :symmetric), y = (:pressure, :pressure)),
)

# A 2D grid is a Cartesian product of two vectors
x = LinRange(0.0, 10.0, 200)
y = LinRange(-2.0, 2.0, 80)

# Actuator body force: A thrust coefficient `Cₜ` distributed over a thin rectangle
xc, yc = 2.0, 0.0 # Disk center
D = 1.0           # Disk diameter
δ = 0.11          # Disk thickness
Cₜ = 5e-4         # Thrust coefficient
cₜ = Cₜ / (D * δ)
inside(x, y) = abs(x - xc) ≤ δ / 2 &amp;&amp; abs(y - yc) ≤ D / 2
bodyforce_u(x, y) = -cₜ * inside(x, y)
bodyforce_v(x, y) = 0.0

# Build setup and assemble operators
setup = Setup(
    x,
    y;
    viscosity_model,
    u_bc,
    v_bc,
    dudt_bc,
    dvdt_bc,
    bc_type,
    bodyforce_u,
    bodyforce_v,
);

# Time interval
t_start, t_end = tlims = (0.0, 12.0)

# Initial conditions (extend inflow)
initial_velocity_u(x, y) = 1.0
initial_velocity_v(x, y) = 0.0
initial_pressure(x, y) = 0.0
V₀, p₀ = create_initial_conditions(
    setup,
    t_start;
    initial_velocity_u,
    initial_velocity_v,
    initial_pressure,
);

problem = UnsteadyProblem(setup, V₀, p₀, tlims)
V, p = solve_animate(
    problem,
    RK44P2();
    Δt = 0.05,
    filename = &quot;vorticity.gif&quot;,
)"><pre><span class="pl-k">using</span> GLMakie
<span class="pl-k">using</span> IncompressibleNavierStokes

<span class="pl-c"><span class="pl-c">#</span> Viscosity model</span>
viscosity_model <span class="pl-k">=</span> <span class="pl-c1">LaminarModel</span>(; Re <span class="pl-k">=</span> <span class="pl-c1">100.0</span>)

<span class="pl-c"><span class="pl-c">#</span> Boundary conditions: Unsteady BC requires time derivatives</span>
<span class="pl-en">u_bc</span>(x, y, t) <span class="pl-k">=</span> x <span class="pl-k">≈</span> <span class="pl-c1">0.0</span> <span class="pl-k">?</span> <span class="pl-c1">cos</span>(π <span class="pl-k">/</span> <span class="pl-c1">6</span> <span class="pl-k">*</span> <span class="pl-c1">sin</span>(π <span class="pl-k">/</span> <span class="pl-c1">6</span> <span class="pl-k">*</span> t)) <span class="pl-k">:</span> <span class="pl-c1">0.0</span>
<span class="pl-en">v_bc</span>(x, y, t) <span class="pl-k">=</span> x <span class="pl-k">≈</span> <span class="pl-c1">0.0</span> <span class="pl-k">?</span> <span class="pl-c1">sin</span>(π <span class="pl-k">/</span> <span class="pl-c1">6</span> <span class="pl-k">*</span> <span class="pl-c1">sin</span>(π <span class="pl-k">/</span> <span class="pl-c1">6</span> <span class="pl-k">*</span> t)) <span class="pl-k">:</span> <span class="pl-c1">0.0</span>
<span class="pl-en">dudt_bc</span>(x, y, t) <span class="pl-k">=</span> x <span class="pl-k">≈</span> <span class="pl-c1">0.0</span> <span class="pl-k">?</span> <span class="pl-k">-</span>(π <span class="pl-k">/</span> <span class="pl-c1">6</span>)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">cos</span>(π <span class="pl-k">/</span> <span class="pl-c1">6</span> <span class="pl-k">*</span> t) <span class="pl-k">*</span> <span class="pl-c1">sin</span>(π <span class="pl-k">/</span> <span class="pl-c1">6</span> <span class="pl-k">*</span> <span class="pl-c1">sin</span>(π <span class="pl-k">/</span> <span class="pl-c1">6</span> <span class="pl-k">*</span> t)) <span class="pl-k">:</span> <span class="pl-c1">0.0</span>
<span class="pl-en">dvdt_bc</span>(x, y, t) <span class="pl-k">=</span> x <span class="pl-k">≈</span> <span class="pl-c1">0.0</span> <span class="pl-k">?</span> (π <span class="pl-k">/</span> <span class="pl-c1">6</span>)<span class="pl-k">^</span><span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">cos</span>(π <span class="pl-k">/</span> <span class="pl-c1">6</span> <span class="pl-k">*</span> t) <span class="pl-k">*</span> <span class="pl-c1">cos</span>(π <span class="pl-k">/</span> <span class="pl-c1">6</span> <span class="pl-k">*</span> <span class="pl-c1">sin</span>(π <span class="pl-k">/</span> <span class="pl-c1">6</span> <span class="pl-k">*</span> t)) <span class="pl-k">:</span> <span class="pl-c1">0.0</span>
bc_type <span class="pl-k">=</span> (;
    u <span class="pl-k">=</span> (; x <span class="pl-k">=</span> (<span class="pl-c1">:dirichlet</span>, <span class="pl-c1">:pressure</span>), y <span class="pl-k">=</span> (<span class="pl-c1">:symmetric</span>, <span class="pl-c1">:symmetric</span>)),
    v <span class="pl-k">=</span> (; x <span class="pl-k">=</span> (<span class="pl-c1">:dirichlet</span>, <span class="pl-c1">:symmetric</span>), y <span class="pl-k">=</span> (<span class="pl-c1">:pressure</span>, <span class="pl-c1">:pressure</span>)),
)

<span class="pl-c"><span class="pl-c">#</span> A 2D grid is a Cartesian product of two vectors</span>
x <span class="pl-k">=</span> <span class="pl-c1">LinRange</span>(<span class="pl-c1">0.0</span>, <span class="pl-c1">10.0</span>, <span class="pl-c1">200</span>)
y <span class="pl-k">=</span> <span class="pl-c1">LinRange</span>(<span class="pl-k">-</span><span class="pl-c1">2.0</span>, <span class="pl-c1">2.0</span>, <span class="pl-c1">80</span>)

<span class="pl-c"><span class="pl-c">#</span> Actuator body force: A thrust coefficient `Cₜ` distributed over a thin rectangle</span>
xc, yc <span class="pl-k">=</span> <span class="pl-c1">2.0</span>, <span class="pl-c1">0.0</span> <span class="pl-c"><span class="pl-c">#</span> Disk center</span>
D <span class="pl-k">=</span> <span class="pl-c1">1.0</span>           <span class="pl-c"><span class="pl-c">#</span> Disk diameter</span>
δ <span class="pl-k">=</span> <span class="pl-c1">0.11</span>          <span class="pl-c"><span class="pl-c">#</span> Disk thickness</span>
Cₜ <span class="pl-k">=</span> <span class="pl-c1">5e-4</span>         <span class="pl-c"><span class="pl-c">#</span> Thrust coefficient</span>
cₜ <span class="pl-k">=</span> Cₜ <span class="pl-k">/</span> (D <span class="pl-k">*</span> δ)
<span class="pl-en">inside</span>(x, y) <span class="pl-k">=</span> <span class="pl-c1">abs</span>(x <span class="pl-k">-</span> xc) <span class="pl-k">≤</span> δ <span class="pl-k">/</span> <span class="pl-c1">2</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">abs</span>(y <span class="pl-k">-</span> yc) <span class="pl-k">≤</span> D <span class="pl-k">/</span> <span class="pl-c1">2</span>
<span class="pl-en">bodyforce_u</span>(x, y) <span class="pl-k">=</span> <span class="pl-k">-</span>cₜ <span class="pl-k">*</span> <span class="pl-c1">inside</span>(x, y)
<span class="pl-en">bodyforce_v</span>(x, y) <span class="pl-k">=</span> <span class="pl-c1">0.0</span>

<span class="pl-c"><span class="pl-c">#</span> Build setup and assemble operators</span>
setup <span class="pl-k">=</span> <span class="pl-c1">Setup</span>(
    x,
    y;
    viscosity_model,
    u_bc,
    v_bc,
    dudt_bc,
    dvdt_bc,
    bc_type,
    bodyforce_u,
    bodyforce_v,
);

<span class="pl-c"><span class="pl-c">#</span> Time interval</span>
t_start, t_end <span class="pl-k">=</span> tlims <span class="pl-k">=</span> (<span class="pl-c1">0.0</span>, <span class="pl-c1">12.0</span>)

<span class="pl-c"><span class="pl-c">#</span> Initial conditions (extend inflow)</span>
<span class="pl-en">initial_velocity_u</span>(x, y) <span class="pl-k">=</span> <span class="pl-c1">1.0</span>
<span class="pl-en">initial_velocity_v</span>(x, y) <span class="pl-k">=</span> <span class="pl-c1">0.0</span>
<span class="pl-en">initial_pressure</span>(x, y) <span class="pl-k">=</span> <span class="pl-c1">0.0</span>
V₀, p₀ <span class="pl-k">=</span> <span class="pl-c1">create_initial_conditions</span>(
    setup,
    t_start;
    initial_velocity_u,
    initial_velocity_v,
    initial_pressure,
);

problem <span class="pl-k">=</span> <span class="pl-c1">UnsteadyProblem</span>(setup, V₀, p₀, tlims)
V, p <span class="pl-k">=</span> <span class="pl-c1">solve_animate</span>(
    problem,
    <span class="pl-c1">RK44P2</span>();
    Δt <span class="pl-k">=</span> <span class="pl-c1">0.05</span>,
    filename <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>vorticity.gif<span class="pl-pds">"</span></span>,
)</pre></div>
<p dir="auto">The resulting animation is shown below.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="assets/vorticity.gif"><img src="assets/vorticity.gif" alt="Vorticity" data-animated-image="" style="max-width: 100%;"></a></p>
</article></div>